// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.990188,HLS_SYN_LAT=213270,HLS_SYN_TPT=none,HLS_SYN_MEM=32,HLS_SYN_DSP=13,HLS_SYN_FF=3540,HLS_SYN_LUT=10161,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_output_Addr_A,
        prediction_output_EN_A,
        prediction_output_WEN_A,
        prediction_output_Din_A,
        prediction_output_Dout_A,
        prediction_output_Clk_A,
        prediction_output_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 26'd1;
parameter    ap_ST_fsm_state2 = 26'd2;
parameter    ap_ST_fsm_state3 = 26'd4;
parameter    ap_ST_fsm_state4 = 26'd8;
parameter    ap_ST_fsm_state5 = 26'd16;
parameter    ap_ST_fsm_state6 = 26'd32;
parameter    ap_ST_fsm_state7 = 26'd64;
parameter    ap_ST_fsm_state8 = 26'd128;
parameter    ap_ST_fsm_state9 = 26'd256;
parameter    ap_ST_fsm_state10 = 26'd512;
parameter    ap_ST_fsm_state11 = 26'd1024;
parameter    ap_ST_fsm_state12 = 26'd2048;
parameter    ap_ST_fsm_state13 = 26'd4096;
parameter    ap_ST_fsm_state14 = 26'd8192;
parameter    ap_ST_fsm_state15 = 26'd16384;
parameter    ap_ST_fsm_state16 = 26'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 26'd65536;
parameter    ap_ST_fsm_state19 = 26'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 26'd262144;
parameter    ap_ST_fsm_state22 = 26'd524288;
parameter    ap_ST_fsm_pp2_stage0 = 26'd1048576;
parameter    ap_ST_fsm_state25 = 26'd2097152;
parameter    ap_ST_fsm_state26 = 26'd4194304;
parameter    ap_ST_fsm_state27 = 26'd8388608;
parameter    ap_ST_fsm_state28 = 26'd16777216;
parameter    ap_ST_fsm_state29 = 26'd33554432;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_output_Addr_A;
output   prediction_output_EN_A;
output  [3:0] prediction_output_WEN_A;
output  [31:0] prediction_output_Din_A;
input  [31:0] prediction_output_Dout_A;
output   prediction_output_Clk_A;
output   prediction_output_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;
reg prediction_output_EN_A;
reg[3:0] prediction_output_WEN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [25:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [5:0] dense_1_bias_V_address0;
reg    dense_1_bias_V_ce0;
wire   [5:0] dense_1_bias_V_q0;
wire   [14:0] dense_1_weights_V_address0;
reg    dense_1_weights_V_ce0;
wire  signed [8:0] dense_1_weights_V_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
wire   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
wire   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire  signed [8:0] dense_out_weights_V_q0;
reg   [14:0] indvar_flatten_reg_634;
reg   [5:0] i_0_i_reg_645;
reg   [13:0] p_Val2_s_reg_656;
reg   [8:0] j_0_i_reg_668;
reg   [10:0] indvar_flatten11_reg_679;
reg   [4:0] i_0_i5_reg_690;
reg   [13:0] p_Val2_30_reg_701;
reg   [5:0] j_0_i10_reg_713;
reg   [8:0] indvar_flatten23_reg_724;
reg   [3:0] d_0_i_reg_735;
reg   [13:0] p_Val2_33_reg_746;
reg   [4:0] f_0_i_reg_758;
wire   [4:0] i_fu_840_p2;
reg   [4:0] i_reg_2057;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_846_p2;
reg   [9:0] ix_in_reg_2062;
wire   [0:0] icmp_ln23_fu_834_p2;
wire   [10:0] sub_ln203_fu_876_p2;
reg   [10:0] sub_ln203_reg_2067;
wire   [4:0] j_1_fu_888_p2;
reg   [4:0] j_1_reg_2075;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln203_8_fu_898_p2;
reg   [10:0] add_ln203_8_reg_2080;
wire   [0:0] icmp_ln25_fu_882_p2;
wire   [9:0] add_ln28_fu_908_p2;
reg   [9:0] add_ln28_reg_2090;
reg   [31:0] cnn_input_load_reg_2095;
wire    ap_CS_fsm_state4;
wire   [13:0] select_ln603_3_fu_1189_p3;
reg   [13:0] select_ln603_3_reg_2101;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln9_fu_1201_p2;
reg   [0:0] icmp_ln9_reg_2106;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [14:0] add_ln9_fu_1207_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln13_fu_1219_p2;
reg   [0:0] icmp_ln13_reg_2115;
wire   [5:0] select_ln14_1_fu_1233_p3;
reg   [5:0] select_ln14_1_reg_2120;
wire   [63:0] zext_ln14_fu_1241_p1;
reg   [63:0] zext_ln14_reg_2125;
wire   [8:0] j_fu_1263_p2;
reg   [8:0] j_reg_2140;
wire   [0:0] icmp_ln13_1_fu_1269_p2;
reg   [0:0] icmp_ln13_1_reg_2145;
wire   [13:0] sum_V_fu_1298_p4;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] icmp_ln9_1_fu_1353_p2;
reg   [0:0] icmp_ln9_1_reg_2159;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state20_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [10:0] add_ln9_2_fu_1359_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln13_2_fu_1371_p2;
reg   [0:0] icmp_ln13_2_reg_2168;
wire   [4:0] select_ln14_4_fu_1385_p3;
reg   [4:0] select_ln14_4_reg_2173;
wire   [63:0] zext_ln14_2_fu_1393_p1;
reg   [63:0] zext_ln14_2_reg_2178;
wire   [5:0] j_2_fu_1448_p2;
reg   [5:0] j_2_reg_2193;
wire   [0:0] icmp_ln13_3_fu_1454_p2;
reg   [0:0] icmp_ln13_3_reg_2198;
wire   [13:0] sum_V_1_fu_1483_p4;
reg    ap_enable_reg_pp1_iter1;
wire   [0:0] icmp_ln41_fu_1538_p2;
reg   [0:0] icmp_ln41_reg_2212;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state23_pp2_stage0_iter0;
wire    ap_block_state24_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [8:0] add_ln41_fu_1544_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] icmp_ln46_fu_1556_p2;
reg   [0:0] icmp_ln46_reg_2221;
wire   [3:0] select_ln48_1_fu_1570_p3;
reg   [3:0] select_ln48_1_reg_2226;
wire   [63:0] zext_ln48_fu_1578_p1;
reg   [63:0] zext_ln48_reg_2231;
wire   [4:0] f_fu_1633_p2;
reg   [4:0] f_reg_2246;
wire   [0:0] icmp_ln46_1_fu_1639_p2;
reg   [0:0] icmp_ln46_1_reg_2251;
wire   [13:0] w_sum_V_fu_1668_p4;
reg    ap_enable_reg_pp2_iter1;
wire   [3:0] i_3_fu_1694_p2;
reg   [3:0] i_3_reg_2268;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln70_fu_1700_p1;
reg   [63:0] zext_ln70_reg_2273;
wire   [0:0] icmp_ln69_fu_1688_p2;
wire   [0:0] icmp_ln935_fu_1705_p2;
reg   [0:0] icmp_ln935_reg_2283;
wire    ap_CS_fsm_state28;
wire   [0:0] p_Result_41_fu_1711_p3;
reg   [0:0] p_Result_41_reg_2288;
wire   [13:0] tmp_V_13_fu_1725_p3;
reg   [13:0] tmp_V_13_reg_2293;
wire   [31:0] sub_ln944_fu_1759_p2;
reg   [31:0] sub_ln944_reg_2298;
wire   [31:0] or_ln_fu_1869_p3;
reg   [31:0] or_ln_reg_2304;
wire   [0:0] icmp_ln958_fu_1877_p2;
reg   [0:0] icmp_ln958_reg_2309;
wire   [7:0] trunc_ln943_fu_1883_p1;
reg   [7:0] trunc_ln943_reg_2314;
wire    ap_CS_fsm_state16;
wire    grp_flat_fu_824_ap_ready;
wire    grp_flat_fu_824_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
wire    ap_CS_fsm_state19;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state20;
wire    ap_CS_fsm_state22;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state23;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
wire   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
reg    dense_array_V_ce1;
reg    dense_array_V_we1;
wire   [13:0] dense_array_V_q1;
reg   [9:0] conv_1_input_V_address0;
reg    conv_1_input_V_ce0;
reg    conv_1_input_V_we0;
wire   [13:0] conv_1_input_V_q0;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg    conv_1_out_V_ce1;
wire   [13:0] conv_1_out_V_q1;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg   [10:0] conv_2_out_V_address0;
reg    conv_2_out_V_ce0;
reg    conv_2_out_V_we0;
reg   [13:0] conv_2_out_V_d0;
wire   [13:0] conv_2_out_V_q0;
reg    conv_2_out_V_ce1;
wire   [13:0] conv_2_out_V_q1;
reg   [8:0] max_pool_2_out_V_address0;
reg    max_pool_2_out_V_ce0;
reg    max_pool_2_out_V_we0;
reg   [13:0] max_pool_2_out_V_d0;
wire   [13:0] max_pool_2_out_V_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire  signed [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_soft_max_fu_780_ap_start;
wire    grp_soft_max_fu_780_ap_done;
wire    grp_soft_max_fu_780_ap_idle;
wire    grp_soft_max_fu_780_ap_ready;
wire   [3:0] grp_soft_max_fu_780_dense_array_V_address0;
wire    grp_soft_max_fu_780_dense_array_V_ce0;
wire   [3:0] grp_soft_max_fu_780_dense_array_V_address1;
wire    grp_soft_max_fu_780_dense_array_V_ce1;
wire    grp_soft_max_fu_780_dense_array_V_we1;
wire   [13:0] grp_soft_max_fu_780_dense_array_V_d1;
wire   [3:0] grp_soft_max_fu_780_prediction_V_address0;
wire    grp_soft_max_fu_780_prediction_V_ce0;
wire    grp_soft_max_fu_780_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_780_prediction_V_d0;
wire    grp_conv_2_fu_792_ap_start;
wire    grp_conv_2_fu_792_ap_done;
wire    grp_conv_2_fu_792_ap_idle;
wire    grp_conv_2_fu_792_ap_ready;
wire   [9:0] grp_conv_2_fu_792_input_V_address0;
wire    grp_conv_2_fu_792_input_V_ce0;
wire   [10:0] grp_conv_2_fu_792_conv_out_V_address0;
wire    grp_conv_2_fu_792_conv_out_V_ce0;
wire    grp_conv_2_fu_792_conv_out_V_we0;
wire   [13:0] grp_conv_2_fu_792_conv_out_V_d0;
wire    grp_conv_1_fu_802_ap_start;
wire    grp_conv_1_fu_802_ap_done;
wire    grp_conv_1_fu_802_ap_idle;
wire    grp_conv_1_fu_802_ap_ready;
wire   [9:0] grp_conv_1_fu_802_input_V_address0;
wire    grp_conv_1_fu_802_input_V_ce0;
wire   [11:0] grp_conv_1_fu_802_conv_out_V_address0;
wire    grp_conv_1_fu_802_conv_out_V_ce0;
wire    grp_conv_1_fu_802_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_802_conv_out_V_d0;
wire    grp_max_pool_1_fu_812_ap_start;
wire    grp_max_pool_1_fu_812_ap_done;
wire    grp_max_pool_1_fu_812_ap_idle;
wire    grp_max_pool_1_fu_812_ap_ready;
wire   [11:0] grp_max_pool_1_fu_812_conv_out_V_address0;
wire    grp_max_pool_1_fu_812_conv_out_V_ce0;
wire   [11:0] grp_max_pool_1_fu_812_conv_out_V_address1;
wire    grp_max_pool_1_fu_812_conv_out_V_ce1;
wire   [9:0] grp_max_pool_1_fu_812_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_812_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_812_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_812_max_pool_out_V_d0;
wire    grp_max_pool_2_fu_818_ap_start;
wire    grp_max_pool_2_fu_818_ap_done;
wire    grp_max_pool_2_fu_818_ap_idle;
wire    grp_max_pool_2_fu_818_ap_ready;
wire   [10:0] grp_max_pool_2_fu_818_conv_out_V_address0;
wire    grp_max_pool_2_fu_818_conv_out_V_ce0;
wire   [10:0] grp_max_pool_2_fu_818_conv_out_V_address1;
wire    grp_max_pool_2_fu_818_conv_out_V_ce1;
wire   [8:0] grp_max_pool_2_fu_818_max_pool_out_V_address0;
wire    grp_max_pool_2_fu_818_max_pool_out_V_ce0;
wire    grp_max_pool_2_fu_818_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_2_fu_818_max_pool_out_V_d0;
wire    grp_flat_fu_824_ap_start;
wire    grp_flat_fu_824_ap_idle;
wire   [8:0] grp_flat_fu_824_max_pool_out_V_address0;
wire    grp_flat_fu_824_max_pool_out_V_ce0;
wire   [8:0] grp_flat_fu_824_flat_array_V_address0;
wire    grp_flat_fu_824_flat_array_V_ce0;
wire    grp_flat_fu_824_flat_array_V_we0;
wire   [13:0] grp_flat_fu_824_flat_array_V_d0;
reg   [9:0] ix_in_0_reg_590;
reg   [4:0] i_0_reg_602;
reg   [9:0] ix_in_1_reg_613;
wire    ap_CS_fsm_state6;
reg   [4:0] j_0_reg_623;
reg   [5:0] ap_phi_mux_i_0_i_phi_fu_649_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_j_0_i_phi_fu_672_p4;
reg   [4:0] ap_phi_mux_i_0_i5_phi_fu_694_p4;
wire    ap_block_pp1_stage0;
reg   [5:0] ap_phi_mux_j_0_i10_phi_fu_717_p4;
reg   [3:0] ap_phi_mux_d_0_i_phi_fu_739_p4;
wire    ap_block_pp2_stage0;
reg   [4:0] ap_phi_mux_f_0_i_phi_fu_762_p4;
reg   [3:0] i24_0_reg_769;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state29;
reg    grp_soft_max_fu_780_ap_start_reg;
wire    ap_CS_fsm_state25;
reg    grp_conv_2_fu_792_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_conv_1_fu_802_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_max_pool_1_fu_812_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_max_pool_2_fu_818_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_flat_fu_824_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln27_fu_903_p1;
wire  signed [63:0] sext_ln203_fu_1197_p1;
wire   [63:0] zext_ln1117_6_fu_1259_p1;
wire   [63:0] zext_ln14_1_fu_1250_p1;
wire  signed [63:0] sext_ln1117_fu_1443_p1;
wire   [63:0] zext_ln14_3_fu_1402_p1;
wire   [63:0] zext_ln1116_9_fu_1628_p1;
wire   [63:0] zext_ln48_1_fu_1587_p1;
wire   [31:0] cnn_input_Addr_A_orig;
wire   [12:0] select_ln19_fu_1344_p3;
wire   [12:0] select_ln19_1_fu_1529_p3;
wire   [31:0] prediction_output_Addr_A_orig;
wire   [9:0] tmp_4_fu_852_p3;
wire   [6:0] tmp_5_fu_864_p3;
wire   [10:0] zext_ln203_fu_860_p1;
wire   [10:0] zext_ln203_17_fu_872_p1;
wire   [10:0] zext_ln203_18_fu_894_p1;
wire   [63:0] grp_fu_830_p1;
wire   [63:0] ireg_V_fu_914_p1;
wire   [10:0] exp_tmp_V_fu_930_p4;
wire   [51:0] trunc_ln565_fu_944_p1;
wire   [52:0] tmp_fu_948_p3;
wire   [53:0] p_Result_40_fu_956_p1;
wire   [0:0] p_Result_39_fu_922_p3;
wire   [53:0] man_V_1_fu_960_p2;
wire   [62:0] trunc_ln556_fu_918_p1;
wire   [11:0] zext_ln461_fu_940_p1;
wire   [11:0] F2_fu_980_p2;
wire   [0:0] icmp_ln581_fu_986_p2;
wire   [11:0] add_ln581_fu_992_p2;
wire   [11:0] sub_ln581_fu_998_p2;
wire  signed [11:0] sh_amt_fu_1004_p3;
wire   [53:0] man_V_2_fu_966_p3;
wire  signed [31:0] sext_ln581_fu_1012_p1;
wire   [53:0] zext_ln586_fu_1038_p1;
wire   [53:0] ashr_ln586_fu_1042_p2;
wire   [31:0] bitcast_ln696_fu_1052_p1;
wire   [0:0] tmp_18_fu_1055_p3;
wire   [13:0] trunc_ln583_fu_1022_p1;
wire   [13:0] sext_ln581cast_fu_1071_p1;
wire   [0:0] icmp_ln571_fu_974_p2;
wire   [0:0] icmp_ln582_fu_1016_p2;
wire   [0:0] xor_ln571_fu_1081_p2;
wire   [0:0] or_ln582_fu_1093_p2;
wire   [0:0] xor_ln582_fu_1099_p2;
wire   [0:0] icmp_ln585_fu_1026_p2;
wire   [0:0] and_ln581_fu_1105_p2;
wire   [0:0] xor_ln585_fu_1111_p2;
wire   [0:0] or_ln581_fu_1129_p2;
wire   [0:0] icmp_ln603_fu_1032_p2;
wire   [0:0] xor_ln581_fu_1135_p2;
wire   [0:0] and_ln603_fu_1141_p2;
wire   [13:0] shl_ln604_fu_1075_p2;
wire   [13:0] trunc_ln586_fu_1048_p1;
wire   [0:0] and_ln585_1_fu_1123_p2;
wire   [0:0] and_ln585_fu_1117_p2;
wire   [13:0] select_ln588_fu_1063_p3;
wire   [0:0] and_ln582_fu_1087_p2;
wire   [0:0] or_ln603_fu_1155_p2;
wire   [13:0] select_ln603_fu_1147_p3;
wire   [13:0] select_ln603_1_fu_1161_p3;
wire   [0:0] or_ln603_1_fu_1169_p2;
wire   [0:0] or_ln603_2_fu_1183_p2;
wire   [13:0] select_ln603_2_fu_1175_p3;
wire   [5:0] i_1_fu_1213_p2;
wire   [8:0] select_ln14_fu_1225_p3;
wire   [14:0] grp_fu_1996_p3;
wire   [13:0] select_ln14_2_fu_1283_p3;
wire  signed [21:0] grp_fu_2005_p3;
wire  signed [5:0] sext_ln1265_fu_1307_p0;
wire  signed [5:0] sext_ln703_fu_1320_p0;
wire  signed [13:0] sext_ln1265_fu_1307_p1;
wire   [12:0] trunc_ln_fu_1311_p4;
wire  signed [12:0] sext_ln703_fu_1320_p1;
wire   [13:0] add_ln703_fu_1324_p2;
wire   [0:0] tmp_19_fu_1336_p3;
wire   [12:0] add_ln203_fu_1330_p2;
wire   [4:0] i_2_fu_1365_p2;
wire   [5:0] select_ln14_3_fu_1377_p3;
wire   [10:0] tmp_6_fu_1407_p3;
wire   [6:0] tmp_7_fu_1419_p3;
wire   [11:0] zext_ln1117_7_fu_1415_p1;
wire   [11:0] zext_ln1117_8_fu_1427_p1;
wire   [11:0] sub_ln1117_fu_1431_p2;
wire   [11:0] zext_ln13_1_fu_1398_p1;
wire   [11:0] add_ln1117_2_fu_1437_p2;
wire   [13:0] select_ln14_5_fu_1468_p3;
wire  signed [21:0] grp_fu_2015_p3;
wire  signed [8:0] sext_ln1265_1_fu_1492_p0;
wire  signed [8:0] sext_ln703_2_fu_1505_p0;
wire  signed [13:0] sext_ln1265_1_fu_1492_p1;
wire   [12:0] trunc_ln703_2_fu_1496_p4;
wire  signed [12:0] sext_ln703_2_fu_1505_p1;
wire   [13:0] add_ln703_1_fu_1509_p2;
wire   [0:0] tmp_20_fu_1521_p3;
wire   [12:0] add_ln203_1_fu_1515_p2;
wire   [3:0] d_fu_1550_p2;
wire   [4:0] select_ln48_fu_1562_p3;
wire   [7:0] tmp_8_fu_1592_p3;
wire   [5:0] tmp_9_fu_1604_p3;
wire   [8:0] zext_ln1116_8_fu_1612_p1;
wire   [8:0] zext_ln1116_fu_1600_p1;
wire   [8:0] add_ln1116_fu_1616_p2;
wire   [8:0] zext_ln47_fu_1583_p1;
wire   [8:0] add_ln1116_4_fu_1622_p2;
wire   [13:0] select_ln48_2_fu_1653_p3;
wire  signed [21:0] grp_fu_2025_p3;
wire  signed [13:0] sext_ln1265_2_fu_1677_p1;
wire   [13:0] tmp_V_fu_1719_p2;
reg   [13:0] p_Result_s_fu_1733_p4;
wire   [31:0] p_Result_42_fu_1743_p3;
reg   [31:0] l_fu_1751_p3;
wire   [31:0] lsb_index_fu_1769_p2;
wire   [30:0] tmp_22_fu_1775_p4;
wire   [3:0] trunc_ln947_fu_1791_p1;
wire   [3:0] sub_ln947_fu_1795_p2;
wire   [13:0] zext_ln947_fu_1801_p1;
wire   [13:0] lshr_ln947_fu_1805_p2;
wire   [13:0] p_Result_36_fu_1811_p2;
wire   [0:0] icmp_ln947_fu_1785_p2;
wire   [0:0] icmp_ln947_1_fu_1817_p2;
wire   [0:0] tmp_23_fu_1829_p3;
wire   [13:0] trunc_ln944_fu_1765_p1;
wire   [13:0] add_ln949_fu_1843_p2;
wire   [0:0] p_Result_37_fu_1849_p3;
wire   [0:0] xor_ln949_fu_1837_p2;
wire   [0:0] and_ln949_fu_1857_p2;
wire   [0:0] a_fu_1823_p2;
wire   [0:0] or_ln949_fu_1863_p2;
wire   [31:0] m_fu_1887_p1;
wire   [31:0] add_ln958_fu_1890_p2;
wire   [31:0] sub_ln958_fu_1901_p2;
wire   [31:0] lshr_ln958_fu_1895_p2;
wire   [31:0] shl_ln958_fu_1906_p2;
wire   [31:0] m_12_fu_1912_p3;
wire   [31:0] m_13_fu_1919_p2;
wire   [30:0] m_s_fu_1924_p4;
wire   [0:0] tmp_24_fu_1938_p3;
wire   [7:0] select_ln964_fu_1946_p3;
wire   [7:0] sub_ln964_fu_1954_p2;
wire   [7:0] add_ln964_fu_1959_p2;
wire   [31:0] m_16_fu_1934_p1;
wire   [8:0] tmp_s_fu_1965_p3;
wire   [31:0] p_Result_43_fu_1972_p5;
wire   [31:0] bitcast_ln739_fu_1984_p1;
wire   [8:0] grp_fu_1996_p0;
wire   [6:0] grp_fu_1996_p1;
wire   [5:0] grp_fu_1996_p2;
wire   [21:0] grp_fu_2005_p2;
wire   [12:0] grp_fu_2015_p1;
wire   [21:0] grp_fu_2015_p2;
wire   [12:0] grp_fu_2025_p0;
wire   [21:0] grp_fu_2025_p2;
reg   [25:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [14:0] grp_fu_1996_p00;
wire   [14:0] grp_fu_1996_p20;
wire   [21:0] grp_fu_2015_p10;
wire   [21:0] grp_fu_2025_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 26'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_soft_max_fu_780_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_792_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_802_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_812_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_818_ap_start_reg = 1'b0;
#0 grp_flat_fu_824_ap_start_reg = 1'b0;
end

cnn_dense_1_bias_V #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_bias_V_address0),
    .ce0(dense_1_bias_V_ce0),
    .q0(dense_1_bias_V_q0)
);

cnn_dense_1_weighpcA #(
    .DataWidth( 9 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_weights_V_address0),
    .ce0(dense_1_weights_V_ce0),
    .q0(dense_1_weights_V_q0)
);

cnn_dense_2_bias_V #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_dense_2_weighqcK #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0)
);

cnn_dense_out_biarcU #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

cnn_dense_out_weisc4 #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0),
    .address1(grp_soft_max_fu_780_dense_array_V_address1),
    .ce1(dense_array_V_ce1),
    .we1(dense_array_V_we1),
    .d1(grp_soft_max_fu_780_dense_array_V_d1),
    .q1(dense_array_V_q1)
);

cnn_conv_1_input_V #(
    .DataWidth( 14 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_V_address0),
    .ce0(conv_1_input_V_ce0),
    .we0(conv_1_input_V_we0),
    .d0(select_ln603_3_reg_2101),
    .q0(conv_1_input_V_q0)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0),
    .address1(grp_max_pool_1_fu_812_conv_out_V_address1),
    .ce1(conv_1_out_V_ce1),
    .q1(conv_1_out_V_q1)
);

cnn_max_pool_1_outde #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0)
);

cnn_conv_2_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_V_address0),
    .ce0(conv_2_out_V_ce0),
    .we0(conv_2_out_V_we0),
    .d0(conv_2_out_V_d0),
    .q0(conv_2_out_V_q0),
    .address1(grp_max_pool_2_fu_818_conv_out_V_address1),
    .ce1(conv_2_out_V_ce1),
    .q1(conv_2_out_V_q1)
);

cnn_max_pool_2_ouudo #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_V_address0),
    .ce0(max_pool_2_out_V_ce0),
    .we0(max_pool_2_out_V_we0),
    .d0(max_pool_2_out_V_d0),
    .q0(max_pool_2_out_V_q0)
);

cnn_max_pool_2_ouudo #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

cnn_prediction_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

soft_max grp_soft_max_fu_780(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_soft_max_fu_780_ap_start),
    .ap_done(grp_soft_max_fu_780_ap_done),
    .ap_idle(grp_soft_max_fu_780_ap_idle),
    .ap_ready(grp_soft_max_fu_780_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_780_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_780_dense_array_V_ce0),
    .dense_array_V_q0(dense_array_V_q0),
    .dense_array_V_address1(grp_soft_max_fu_780_dense_array_V_address1),
    .dense_array_V_ce1(grp_soft_max_fu_780_dense_array_V_ce1),
    .dense_array_V_we1(grp_soft_max_fu_780_dense_array_V_we1),
    .dense_array_V_d1(grp_soft_max_fu_780_dense_array_V_d1),
    .dense_array_V_q1(dense_array_V_q1),
    .prediction_V_address0(grp_soft_max_fu_780_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_780_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_780_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_780_prediction_V_d0)
);

conv_2 grp_conv_2_fu_792(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_792_ap_start),
    .ap_done(grp_conv_2_fu_792_ap_done),
    .ap_idle(grp_conv_2_fu_792_ap_idle),
    .ap_ready(grp_conv_2_fu_792_ap_ready),
    .input_V_address0(grp_conv_2_fu_792_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_792_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .conv_out_V_address0(grp_conv_2_fu_792_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_2_fu_792_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_2_fu_792_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_2_fu_792_conv_out_V_d0)
);

conv_1 grp_conv_1_fu_802(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_802_ap_start),
    .ap_done(grp_conv_1_fu_802_ap_done),
    .ap_idle(grp_conv_1_fu_802_ap_idle),
    .ap_ready(grp_conv_1_fu_802_ap_ready),
    .input_V_address0(grp_conv_1_fu_802_input_V_address0),
    .input_V_ce0(grp_conv_1_fu_802_input_V_ce0),
    .input_V_q0(conv_1_input_V_q0),
    .conv_out_V_address0(grp_conv_1_fu_802_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_802_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_802_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_802_conv_out_V_d0)
);

max_pool_1 grp_max_pool_1_fu_812(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_812_ap_start),
    .ap_done(grp_max_pool_1_fu_812_ap_done),
    .ap_idle(grp_max_pool_1_fu_812_ap_idle),
    .ap_ready(grp_max_pool_1_fu_812_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_812_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_812_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .conv_out_V_address1(grp_max_pool_1_fu_812_conv_out_V_address1),
    .conv_out_V_ce1(grp_max_pool_1_fu_812_conv_out_V_ce1),
    .conv_out_V_q1(conv_1_out_V_q1),
    .max_pool_out_V_address0(grp_max_pool_1_fu_812_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_812_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_812_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_812_max_pool_out_V_d0)
);

max_pool_2 grp_max_pool_2_fu_818(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_818_ap_start),
    .ap_done(grp_max_pool_2_fu_818_ap_done),
    .ap_idle(grp_max_pool_2_fu_818_ap_idle),
    .ap_ready(grp_max_pool_2_fu_818_ap_ready),
    .conv_out_V_address0(grp_max_pool_2_fu_818_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_2_fu_818_conv_out_V_ce0),
    .conv_out_V_q0(conv_2_out_V_q0),
    .conv_out_V_address1(grp_max_pool_2_fu_818_conv_out_V_address1),
    .conv_out_V_ce1(grp_max_pool_2_fu_818_conv_out_V_ce1),
    .conv_out_V_q1(conv_2_out_V_q1),
    .max_pool_out_V_address0(grp_max_pool_2_fu_818_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_2_fu_818_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_2_fu_818_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_2_fu_818_max_pool_out_V_d0)
);

flat grp_flat_fu_824(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_824_ap_start),
    .ap_done(grp_flat_fu_824_ap_done),
    .ap_idle(grp_flat_fu_824_ap_idle),
    .ap_ready(grp_flat_fu_824_ap_ready),
    .max_pool_out_V_address0(grp_flat_fu_824_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_flat_fu_824_max_pool_out_V_ce0),
    .max_pool_out_V_q0(max_pool_2_out_V_q0),
    .flat_array_V_address0(grp_flat_fu_824_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_824_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_824_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_824_flat_array_V_d0)
);

cnn_fpext_32ns_64vdy #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64vdy_U37(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(cnn_input_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_830_p1)
);

cnn_mac_muladd_9nwdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
cnn_mac_muladd_9nwdI_U38(
    .din0(grp_fu_1996_p0),
    .din1(grp_fu_1996_p1),
    .din2(grp_fu_1996_p2),
    .dout(grp_fu_1996_p3)
);

cnn_mac_muladd_14xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_14xdS_U39(
    .din0(flat_array_V_q0),
    .din1(dense_1_weights_V_q0),
    .din2(grp_fu_2005_p2),
    .dout(grp_fu_2005_p3)
);

cnn_mac_muladd_9syd2 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9syd2_U40(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_2015_p1),
    .din2(grp_fu_2015_p2),
    .dout(grp_fu_2015_p3)
);

cnn_mac_muladd_13zec #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13zec_U41(
    .din0(grp_fu_2025_p0),
    .din1(dense_out_weights_V_q0),
    .din2(grp_fu_2025_p2),
    .dout(grp_fu_2025_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state20))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state20);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state23))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state23);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_802_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_802_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_802_ap_ready == 1'b1)) begin
            grp_conv_1_fu_802_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_792_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_792_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_792_ap_ready == 1'b1)) begin
            grp_conv_2_fu_792_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_824_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_824_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_824_ap_ready == 1'b1)) begin
            grp_flat_fu_824_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_812_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_812_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_812_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_812_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_818_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_818_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_818_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_818_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_soft_max_fu_780_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            grp_soft_max_fu_780_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_780_ap_ready == 1'b1)) begin
            grp_soft_max_fu_780_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_reg_2212 == 1'd0))) begin
        d_0_i_reg_735 <= select_ln48_1_reg_2226;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        d_0_i_reg_735 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_reg_2212 == 1'd0))) begin
        f_0_i_reg_758 <= f_reg_2246;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        f_0_i_reg_758 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i24_0_reg_769 <= i_3_reg_2268;
    end else if (((grp_soft_max_fu_780_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        i24_0_reg_769 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_reg_2159 == 1'd0))) begin
        i_0_i5_reg_690 <= select_ln14_4_reg_2173;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_0_i5_reg_690 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2106 == 1'd0))) begin
        i_0_i_reg_645 <= select_ln14_1_reg_2120;
    end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_0_i_reg_645 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_602 <= i_reg_2057;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_602 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_fu_1353_p2 == 1'd0))) begin
        indvar_flatten11_reg_679 <= add_ln9_2_fu_1359_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        indvar_flatten11_reg_679 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_fu_1538_p2 == 1'd0))) begin
        indvar_flatten23_reg_724 <= add_ln41_fu_1544_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten23_reg_724 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1201_p2 == 1'd0))) begin
        indvar_flatten_reg_634 <= add_ln9_fu_1207_p2;
    end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        indvar_flatten_reg_634 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_590 <= ix_in_reg_2062;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_590 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_613 <= add_ln28_reg_2090;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd0))) begin
        ix_in_1_reg_613 <= ix_in_0_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_reg_2159 == 1'd0))) begin
        j_0_i10_reg_713 <= j_2_reg_2193;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        j_0_i10_reg_713 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2106 == 1'd0))) begin
        j_0_i_reg_668 <= j_reg_2140;
    end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        j_0_i_reg_668 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_623 <= j_1_reg_2075;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd0))) begin
        j_0_reg_623 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_reg_2159 == 1'd0))) begin
        p_Val2_30_reg_701 <= {{grp_fu_2015_p3[21:8]}};
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_30_reg_701 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_reg_2212 == 1'd0))) begin
        p_Val2_33_reg_746 <= {{grp_fu_2025_p3[21:8]}};
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_Val2_33_reg_746 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2106 == 1'd0))) begin
        p_Val2_s_reg_656 <= {{grp_fu_2005_p3[21:8]}};
    end else if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        p_Val2_s_reg_656 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_882_p2 == 1'd0))) begin
        add_ln203_8_reg_2080 <= add_ln203_8_fu_898_p2;
        add_ln28_reg_2090 <= add_ln28_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_2095 <= cnn_input_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_fu_1538_p2 == 1'd0))) begin
        f_reg_2246 <= f_fu_1633_p2;
        select_ln48_1_reg_2226 <= select_ln48_1_fu_1570_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_3_reg_2268 <= i_3_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2057 <= i_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1201_p2 == 1'd0))) begin
        icmp_ln13_1_reg_2145 <= icmp_ln13_1_fu_1269_p2;
        icmp_ln13_reg_2115 <= icmp_ln13_fu_1219_p2;
        zext_ln14_reg_2125[5 : 0] <= zext_ln14_fu_1241_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_fu_1353_p2 == 1'd0))) begin
        icmp_ln13_2_reg_2168 <= icmp_ln13_2_fu_1371_p2;
        icmp_ln13_3_reg_2198 <= icmp_ln13_3_fu_1454_p2;
        zext_ln14_2_reg_2178[4 : 0] <= zext_ln14_2_fu_1393_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln41_reg_2212 <= icmp_ln41_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_fu_1538_p2 == 1'd0))) begin
        icmp_ln46_1_reg_2251 <= icmp_ln46_1_fu_1639_p2;
        icmp_ln46_reg_2221 <= icmp_ln46_fu_1556_p2;
        zext_ln48_reg_2231[3 : 0] <= zext_ln48_fu_1578_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_ln935_reg_2283 <= icmp_ln935_fu_1705_p2;
        icmp_ln958_reg_2309 <= icmp_ln958_fu_1877_p2;
        or_ln_reg_2304[0] <= or_ln_fu_1869_p3[0];
        p_Result_41_reg_2288 <= prediction_V_q0[32'd13];
        sub_ln944_reg_2298 <= sub_ln944_fu_1759_p2;
        tmp_V_13_reg_2293 <= tmp_V_13_fu_1725_p3;
        trunc_ln943_reg_2314 <= trunc_ln943_fu_1883_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln9_1_reg_2159 <= icmp_ln9_1_fu_1353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln9_reg_2106 <= icmp_ln9_fu_1201_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd0))) begin
        ix_in_reg_2062 <= ix_in_fu_846_p2;
        sub_ln203_reg_2067[10 : 2] <= sub_ln203_fu_876_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_2075 <= j_1_fu_888_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_fu_1353_p2 == 1'd0))) begin
        j_2_reg_2193 <= j_2_fu_1448_p2;
        select_ln14_4_reg_2173 <= select_ln14_4_fu_1385_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1201_p2 == 1'd0))) begin
        j_reg_2140 <= j_fu_1263_p2;
        select_ln14_1_reg_2120 <= select_ln14_1_fu_1233_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_2101 <= select_ln603_3_fu_1189_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln69_fu_1688_p2 == 1'd0))) begin
        zext_ln70_reg_2273[3 : 0] <= zext_ln70_fu_1700_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_1201_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln9_1_fu_1353_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln41_fu_1538_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_1688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_reg_2212 == 1'd0))) begin
        ap_phi_mux_d_0_i_phi_fu_739_p4 = select_ln48_1_reg_2226;
    end else begin
        ap_phi_mux_d_0_i_phi_fu_739_p4 = d_0_i_reg_735;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln41_reg_2212 == 1'd0))) begin
        ap_phi_mux_f_0_i_phi_fu_762_p4 = f_reg_2246;
    end else begin
        ap_phi_mux_f_0_i_phi_fu_762_p4 = f_0_i_reg_758;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_reg_2159 == 1'd0))) begin
        ap_phi_mux_i_0_i5_phi_fu_694_p4 = select_ln14_4_reg_2173;
    end else begin
        ap_phi_mux_i_0_i5_phi_fu_694_p4 = i_0_i5_reg_690;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2106 == 1'd0))) begin
        ap_phi_mux_i_0_i_phi_fu_649_p4 = select_ln14_1_reg_2120;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_649_p4 = i_0_i_reg_645;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln9_1_reg_2159 == 1'd0))) begin
        ap_phi_mux_j_0_i10_phi_fu_717_p4 = j_2_reg_2193;
    end else begin
        ap_phi_mux_j_0_i10_phi_fu_717_p4 = j_0_i10_reg_713;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2106 == 1'd0))) begin
        ap_phi_mux_j_0_i_phi_fu_672_p4 = j_reg_2140;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_672_p4 = j_0_i_reg_668;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_1688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_address0 = sext_ln203_fu_1197_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_address0 = grp_conv_1_fu_802_input_V_address0;
    end else begin
        conv_1_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce0 = grp_conv_1_fu_802_input_V_ce0;
    end else begin
        conv_1_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_we0 = 1'b1;
    end else begin
        conv_1_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_812_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_802_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_812_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_802_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce1 = grp_max_pool_1_fu_812_conv_out_V_ce1;
    end else begin
        conv_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_802_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_802_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_address0 = grp_max_pool_2_fu_818_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_address0 = grp_conv_2_fu_792_conv_out_V_address0;
    end else begin
        conv_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce0 = grp_max_pool_2_fu_818_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_ce0 = grp_conv_2_fu_792_conv_out_V_ce0;
    end else begin
        conv_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce1 = grp_max_pool_2_fu_818_conv_out_V_ce1;
    end else begin
        conv_2_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_d0 = grp_conv_2_fu_792_conv_out_V_d0;
    end else begin
        conv_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        conv_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_we0 = grp_conv_2_fu_792_conv_out_V_we0;
    end else begin
        conv_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_bias_V_ce0 = 1'b1;
    end else begin
        dense_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_1_out_V_address0 = zext_ln14_3_fu_1402_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_V_address0 = zext_ln14_reg_2125;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_V_d0 = select_ln19_fu_1344_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln13_1_reg_2145 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_we0 = 1'b1;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_weights_V_ce0 = 1'b1;
    end else begin
        dense_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_2_out_V_address0 = zext_ln48_1_fu_1587_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_2_out_V_address0 = zext_ln14_2_reg_2178;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_V_address0 = 64'd0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_2_out_V_d0 = select_ln19_1_fu_1529_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_V_d0 = 13'd0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln13_3_reg_2198 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_array_V_address0 = zext_ln48_reg_2231;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_address0 = grp_soft_max_fu_780_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_ce0 = grp_soft_max_fu_780_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_ce1 = grp_soft_max_fu_780_dense_array_V_ce1;
    end else begin
        dense_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln46_1_reg_2251 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_array_V_we0 = 1'b1;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_we1 = grp_soft_max_fu_780_dense_array_V_we1;
    end else begin
        dense_array_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_V_address0 = zext_ln14_1_fu_1250_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_824_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_max_pool_2_fu_818_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_824_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_824_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_818_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_824_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_812_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_792_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_812_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_792_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_812_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_812_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_address0 = grp_flat_fu_824_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_address0 = grp_max_pool_2_fu_818_max_pool_out_V_address0;
    end else begin
        max_pool_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_ce0 = grp_flat_fu_824_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_ce0 = grp_max_pool_2_fu_818_max_pool_out_V_ce0;
    end else begin
        max_pool_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_d0 = grp_max_pool_2_fu_818_max_pool_out_V_d0;
    end else begin
        max_pool_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        max_pool_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_we0 = grp_max_pool_2_fu_818_max_pool_out_V_we0;
    end else begin
        max_pool_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        prediction_V_address0 = zext_ln70_fu_1700_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        prediction_V_address0 = grp_soft_max_fu_780_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state27))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        prediction_V_ce0 = grp_soft_max_fu_780_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        prediction_V_d0 = grp_soft_max_fu_780_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        prediction_V_we0 = grp_soft_max_fu_780_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_output_EN_A = 1'b1;
    end else begin
        prediction_output_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_output_WEN_A = 4'd15;
    end else begin
        prediction_output_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_834_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_802_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_812_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_792_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_818_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_824_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1201_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1201_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln9_1_fu_1353_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln9_1_fu_1353_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln41_fu_1538_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln41_fu_1538_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_soft_max_fu_780_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln69_fu_1688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_980_p2 = (12'd1075 - zext_ln461_fu_940_p1);

assign a_fu_1823_p2 = (icmp_ln947_fu_1785_p2 & icmp_ln947_1_fu_1817_p2);

assign add_ln1116_4_fu_1622_p2 = (add_ln1116_fu_1616_p2 + zext_ln47_fu_1583_p1);

assign add_ln1116_fu_1616_p2 = (zext_ln1116_8_fu_1612_p1 + zext_ln1116_fu_1600_p1);

assign add_ln1117_2_fu_1437_p2 = (sub_ln1117_fu_1431_p2 + zext_ln13_1_fu_1398_p1);

assign add_ln203_1_fu_1515_p2 = ($signed(trunc_ln703_2_fu_1496_p4) + $signed(sext_ln703_2_fu_1505_p1));

assign add_ln203_8_fu_898_p2 = (sub_ln203_reg_2067 + zext_ln203_18_fu_894_p1);

assign add_ln203_fu_1330_p2 = ($signed(trunc_ln_fu_1311_p4) + $signed(sext_ln703_fu_1320_p1));

assign add_ln28_fu_908_p2 = (10'd1 + ix_in_1_reg_613);

assign add_ln41_fu_1544_p2 = (indvar_flatten23_reg_724 + 9'd1);

assign add_ln581_fu_992_p2 = ($signed(12'd4088) + $signed(F2_fu_980_p2));

assign add_ln703_1_fu_1509_p2 = ($signed(sext_ln1265_1_fu_1492_p1) + $signed(sum_V_1_fu_1483_p4));

assign add_ln703_fu_1324_p2 = ($signed(sext_ln1265_fu_1307_p1) + $signed(sum_V_fu_1298_p4));

assign add_ln949_fu_1843_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1765_p1));

assign add_ln958_fu_1890_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_2298));

assign add_ln964_fu_1959_p2 = (select_ln964_fu_1946_p3 + sub_ln964_fu_1954_p2);

assign add_ln9_2_fu_1359_p2 = (indvar_flatten11_reg_679 + 11'd1);

assign add_ln9_fu_1207_p2 = (indvar_flatten_reg_634 + 15'd1);

assign and_ln581_fu_1105_p2 = (xor_ln582_fu_1099_p2 & icmp_ln581_fu_986_p2);

assign and_ln582_fu_1087_p2 = (xor_ln571_fu_1081_p2 & icmp_ln582_fu_1016_p2);

assign and_ln585_1_fu_1123_p2 = (icmp_ln585_fu_1026_p2 & and_ln581_fu_1105_p2);

assign and_ln585_fu_1117_p2 = (xor_ln585_fu_1111_p2 & and_ln581_fu_1105_p2);

assign and_ln603_fu_1141_p2 = (xor_ln581_fu_1135_p2 & icmp_ln603_fu_1032_p2);

assign and_ln949_fu_1857_p2 = (xor_ln949_fu_1837_p2 & p_Result_37_fu_1849_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_fu_1042_p2 = $signed(man_V_2_fu_966_p3) >>> zext_ln586_fu_1038_p1;

assign bitcast_ln696_fu_1052_p1 = cnn_input_load_reg_2095;

assign bitcast_ln739_fu_1984_p1 = p_Result_43_fu_1972_p5;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_fu_903_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign d_fu_1550_p2 = (ap_phi_mux_d_0_i_phi_fu_739_p4 + 4'd1);

assign dense_1_bias_V_address0 = zext_ln14_fu_1241_p1;

assign dense_1_weights_V_address0 = zext_ln1117_6_fu_1259_p1;

assign dense_2_bias_V_address0 = zext_ln14_2_fu_1393_p1;

assign dense_2_weights_V_address0 = sext_ln1117_fu_1443_p1;

assign dense_array_V_d0 = ($signed(sext_ln1265_2_fu_1677_p1) + $signed(w_sum_V_fu_1668_p4));

assign dense_out_bias_V_address0 = zext_ln48_fu_1578_p1;

assign dense_out_weights_V_address0 = zext_ln1116_9_fu_1628_p1;

assign exp_tmp_V_fu_930_p4 = {{ireg_V_fu_914_p1[62:52]}};

assign f_fu_1633_p2 = (select_ln48_fu_1562_p3 + 5'd1);

assign grp_conv_1_fu_802_ap_start = grp_conv_1_fu_802_ap_start_reg;

assign grp_conv_2_fu_792_ap_start = grp_conv_2_fu_792_ap_start_reg;

assign grp_flat_fu_824_ap_start = grp_flat_fu_824_ap_start_reg;

assign grp_fu_1996_p0 = grp_fu_1996_p00;

assign grp_fu_1996_p00 = select_ln14_fu_1225_p3;

assign grp_fu_1996_p1 = 15'd50;

assign grp_fu_1996_p2 = grp_fu_1996_p20;

assign grp_fu_1996_p20 = select_ln14_1_fu_1233_p3;

assign grp_fu_2005_p2 = {{select_ln14_2_fu_1283_p3}, {8'd0}};

assign grp_fu_2015_p1 = grp_fu_2015_p10;

assign grp_fu_2015_p10 = dense_1_out_V_q0;

assign grp_fu_2015_p2 = {{select_ln14_5_fu_1468_p3}, {8'd0}};

assign grp_fu_2025_p0 = grp_fu_2025_p00;

assign grp_fu_2025_p00 = dense_2_out_V_q0;

assign grp_fu_2025_p2 = {{select_ln48_2_fu_1653_p3}, {8'd0}};

assign grp_max_pool_1_fu_812_ap_start = grp_max_pool_1_fu_812_ap_start_reg;

assign grp_max_pool_2_fu_818_ap_start = grp_max_pool_2_fu_818_ap_start_reg;

assign grp_soft_max_fu_780_ap_start = grp_soft_max_fu_780_ap_start_reg;

assign i_1_fu_1213_p2 = (ap_phi_mux_i_0_i_phi_fu_649_p4 + 6'd1);

assign i_2_fu_1365_p2 = (ap_phi_mux_i_0_i5_phi_fu_694_p4 + 5'd1);

assign i_3_fu_1694_p2 = (i24_0_reg_769 + 4'd1);

assign i_fu_840_p2 = (i_0_reg_602 + 5'd1);

assign icmp_ln13_1_fu_1269_p2 = ((j_fu_1263_p2 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_1371_p2 = ((ap_phi_mux_j_0_i10_phi_fu_717_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_3_fu_1454_p2 = ((j_2_fu_1448_p2 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1219_p2 = ((ap_phi_mux_j_0_i_phi_fu_672_p4 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_834_p2 = ((i_0_reg_602 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_882_p2 = ((j_0_reg_623 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1538_p2 = ((indvar_flatten23_reg_724 == 9'd300) ? 1'b1 : 1'b0);

assign icmp_ln46_1_fu_1639_p2 = ((f_fu_1633_p2 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1556_p2 = ((ap_phi_mux_f_0_i_phi_fu_762_p4 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_974_p2 = ((trunc_ln556_fu_918_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_986_p2 = (($signed(F2_fu_980_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1016_p2 = ((F2_fu_980_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1026_p2 = ((sh_amt_fu_1004_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1032_p2 = ((sh_amt_fu_1004_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1688_p2 = ((i24_0_reg_769 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1705_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1817_p2 = ((p_Result_36_fu_1811_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1785_p2 = (($signed(tmp_22_fu_1775_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1877_p2 = (($signed(lsb_index_fu_1769_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1353_p2 = ((indvar_flatten11_reg_679 == 11'd1500) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1201_p2 = ((indvar_flatten_reg_634 == 15'd20000) ? 1'b1 : 1'b0);

assign ireg_V_fu_914_p1 = grp_fu_830_p1;

assign ix_in_fu_846_p2 = (ix_in_0_reg_590 + 10'd28);

assign j_1_fu_888_p2 = (j_0_reg_623 + 5'd1);

assign j_2_fu_1448_p2 = (select_ln14_3_fu_1377_p3 + 6'd1);

assign j_fu_1263_p2 = (select_ln14_fu_1225_p3 + 9'd1);


always @ (p_Result_42_fu_1743_p3) begin
    if (p_Result_42_fu_1743_p3[0] == 1'b1) begin
        l_fu_1751_p3 = 32'd0;
    end else if (p_Result_42_fu_1743_p3[1] == 1'b1) begin
        l_fu_1751_p3 = 32'd1;
    end else if (p_Result_42_fu_1743_p3[2] == 1'b1) begin
        l_fu_1751_p3 = 32'd2;
    end else if (p_Result_42_fu_1743_p3[3] == 1'b1) begin
        l_fu_1751_p3 = 32'd3;
    end else if (p_Result_42_fu_1743_p3[4] == 1'b1) begin
        l_fu_1751_p3 = 32'd4;
    end else if (p_Result_42_fu_1743_p3[5] == 1'b1) begin
        l_fu_1751_p3 = 32'd5;
    end else if (p_Result_42_fu_1743_p3[6] == 1'b1) begin
        l_fu_1751_p3 = 32'd6;
    end else if (p_Result_42_fu_1743_p3[7] == 1'b1) begin
        l_fu_1751_p3 = 32'd7;
    end else if (p_Result_42_fu_1743_p3[8] == 1'b1) begin
        l_fu_1751_p3 = 32'd8;
    end else if (p_Result_42_fu_1743_p3[9] == 1'b1) begin
        l_fu_1751_p3 = 32'd9;
    end else if (p_Result_42_fu_1743_p3[10] == 1'b1) begin
        l_fu_1751_p3 = 32'd10;
    end else if (p_Result_42_fu_1743_p3[11] == 1'b1) begin
        l_fu_1751_p3 = 32'd11;
    end else if (p_Result_42_fu_1743_p3[12] == 1'b1) begin
        l_fu_1751_p3 = 32'd12;
    end else if (p_Result_42_fu_1743_p3[13] == 1'b1) begin
        l_fu_1751_p3 = 32'd13;
    end else if (p_Result_42_fu_1743_p3[14] == 1'b1) begin
        l_fu_1751_p3 = 32'd14;
    end else if (p_Result_42_fu_1743_p3[15] == 1'b1) begin
        l_fu_1751_p3 = 32'd15;
    end else if (p_Result_42_fu_1743_p3[16] == 1'b1) begin
        l_fu_1751_p3 = 32'd16;
    end else if (p_Result_42_fu_1743_p3[17] == 1'b1) begin
        l_fu_1751_p3 = 32'd17;
    end else if (p_Result_42_fu_1743_p3[18] == 1'b1) begin
        l_fu_1751_p3 = 32'd18;
    end else if (p_Result_42_fu_1743_p3[19] == 1'b1) begin
        l_fu_1751_p3 = 32'd19;
    end else if (p_Result_42_fu_1743_p3[20] == 1'b1) begin
        l_fu_1751_p3 = 32'd20;
    end else if (p_Result_42_fu_1743_p3[21] == 1'b1) begin
        l_fu_1751_p3 = 32'd21;
    end else if (p_Result_42_fu_1743_p3[22] == 1'b1) begin
        l_fu_1751_p3 = 32'd22;
    end else if (p_Result_42_fu_1743_p3[23] == 1'b1) begin
        l_fu_1751_p3 = 32'd23;
    end else if (p_Result_42_fu_1743_p3[24] == 1'b1) begin
        l_fu_1751_p3 = 32'd24;
    end else if (p_Result_42_fu_1743_p3[25] == 1'b1) begin
        l_fu_1751_p3 = 32'd25;
    end else if (p_Result_42_fu_1743_p3[26] == 1'b1) begin
        l_fu_1751_p3 = 32'd26;
    end else if (p_Result_42_fu_1743_p3[27] == 1'b1) begin
        l_fu_1751_p3 = 32'd27;
    end else if (p_Result_42_fu_1743_p3[28] == 1'b1) begin
        l_fu_1751_p3 = 32'd28;
    end else if (p_Result_42_fu_1743_p3[29] == 1'b1) begin
        l_fu_1751_p3 = 32'd29;
    end else if (p_Result_42_fu_1743_p3[30] == 1'b1) begin
        l_fu_1751_p3 = 32'd30;
    end else if (p_Result_42_fu_1743_p3[31] == 1'b1) begin
        l_fu_1751_p3 = 32'd31;
    end else begin
        l_fu_1751_p3 = 32'd32;
    end
end

assign lsb_index_fu_1769_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1759_p2));

assign lshr_ln947_fu_1805_p2 = 14'd16383 >> zext_ln947_fu_1801_p1;

assign lshr_ln958_fu_1895_p2 = m_fu_1887_p1 >> add_ln958_fu_1890_p2;

assign m_12_fu_1912_p3 = ((icmp_ln958_reg_2309[0:0] === 1'b1) ? lshr_ln958_fu_1895_p2 : shl_ln958_fu_1906_p2);

assign m_13_fu_1919_p2 = (m_12_fu_1912_p3 + or_ln_reg_2304);

assign m_16_fu_1934_p1 = m_s_fu_1924_p4;

assign m_fu_1887_p1 = tmp_V_13_reg_2293;

assign m_s_fu_1924_p4 = {{m_13_fu_1919_p2[31:1]}};

assign man_V_1_fu_960_p2 = (54'd0 - p_Result_40_fu_956_p1);

assign man_V_2_fu_966_p3 = ((p_Result_39_fu_922_p3[0:0] === 1'b1) ? man_V_1_fu_960_p2 : p_Result_40_fu_956_p1);

assign or_ln581_fu_1129_p2 = (or_ln582_fu_1093_p2 | icmp_ln581_fu_986_p2);

assign or_ln582_fu_1093_p2 = (icmp_ln582_fu_1016_p2 | icmp_ln571_fu_974_p2);

assign or_ln603_1_fu_1169_p2 = (and_ln585_fu_1117_p2 | and_ln582_fu_1087_p2);

assign or_ln603_2_fu_1183_p2 = (or_ln603_fu_1155_p2 | or_ln603_1_fu_1169_p2);

assign or_ln603_fu_1155_p2 = (and_ln603_fu_1141_p2 | and_ln585_1_fu_1123_p2);

assign or_ln949_fu_1863_p2 = (and_ln949_fu_1857_p2 | a_fu_1823_p2);

assign or_ln_fu_1869_p3 = {{31'd0}, {or_ln949_fu_1863_p2}};

assign p_Result_36_fu_1811_p2 = (tmp_V_13_fu_1725_p3 & lshr_ln947_fu_1805_p2);

assign p_Result_37_fu_1849_p3 = tmp_V_13_fu_1725_p3[add_ln949_fu_1843_p2];

assign p_Result_39_fu_922_p3 = ireg_V_fu_914_p1[32'd63];

assign p_Result_40_fu_956_p1 = tmp_fu_948_p3;

assign p_Result_41_fu_1711_p3 = prediction_V_q0[32'd13];

assign p_Result_42_fu_1743_p3 = {{18'd262143}, {p_Result_s_fu_1733_p4}};

assign p_Result_43_fu_1972_p5 = {{tmp_s_fu_1965_p3}, {m_16_fu_1934_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_13_fu_1725_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1733_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1733_p4[ap_tvar_int_0] = tmp_V_13_fu_1725_p3[13 - ap_tvar_int_0];
        end
    end
end

assign prediction_output_Addr_A = prediction_output_Addr_A_orig << 32'd2;

assign prediction_output_Addr_A_orig = zext_ln70_reg_2273;

assign prediction_output_Clk_A = ap_clk;

assign prediction_output_Din_A = ((icmp_ln935_reg_2283[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1984_p1);

assign prediction_output_Rst_A = ap_rst_n_inv;

assign select_ln14_1_fu_1233_p3 = ((icmp_ln13_fu_1219_p2[0:0] === 1'b1) ? i_1_fu_1213_p2 : ap_phi_mux_i_0_i_phi_fu_649_p4);

assign select_ln14_2_fu_1283_p3 = ((icmp_ln13_reg_2115[0:0] === 1'b1) ? 14'd0 : p_Val2_s_reg_656);

assign select_ln14_3_fu_1377_p3 = ((icmp_ln13_2_fu_1371_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_j_0_i10_phi_fu_717_p4);

assign select_ln14_4_fu_1385_p3 = ((icmp_ln13_2_fu_1371_p2[0:0] === 1'b1) ? i_2_fu_1365_p2 : ap_phi_mux_i_0_i5_phi_fu_694_p4);

assign select_ln14_5_fu_1468_p3 = ((icmp_ln13_2_reg_2168[0:0] === 1'b1) ? 14'd0 : p_Val2_30_reg_701);

assign select_ln14_fu_1225_p3 = ((icmp_ln13_fu_1219_p2[0:0] === 1'b1) ? 9'd0 : ap_phi_mux_j_0_i_phi_fu_672_p4);

assign select_ln19_1_fu_1529_p3 = ((tmp_20_fu_1521_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_1_fu_1515_p2);

assign select_ln19_fu_1344_p3 = ((tmp_19_fu_1336_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1330_p2);

assign select_ln48_1_fu_1570_p3 = ((icmp_ln46_fu_1556_p2[0:0] === 1'b1) ? d_fu_1550_p2 : ap_phi_mux_d_0_i_phi_fu_739_p4);

assign select_ln48_2_fu_1653_p3 = ((icmp_ln46_reg_2221[0:0] === 1'b1) ? 14'd0 : p_Val2_33_reg_746);

assign select_ln48_fu_1562_p3 = ((icmp_ln46_fu_1556_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_f_0_i_phi_fu_762_p4);

assign select_ln588_fu_1063_p3 = ((tmp_18_fu_1055_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_1_fu_1161_p3 = ((and_ln585_fu_1117_p2[0:0] === 1'b1) ? select_ln588_fu_1063_p3 : trunc_ln583_fu_1022_p1);

assign select_ln603_2_fu_1175_p3 = ((or_ln603_fu_1155_p2[0:0] === 1'b1) ? select_ln603_fu_1147_p3 : select_ln603_1_fu_1161_p3);

assign select_ln603_3_fu_1189_p3 = ((or_ln603_2_fu_1183_p2[0:0] === 1'b1) ? select_ln603_2_fu_1175_p3 : 14'd0);

assign select_ln603_fu_1147_p3 = ((and_ln603_fu_1141_p2[0:0] === 1'b1) ? shl_ln604_fu_1075_p2 : trunc_ln586_fu_1048_p1);

assign select_ln964_fu_1946_p3 = ((tmp_24_fu_1938_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1443_p1 = $signed(add_ln1117_2_fu_1437_p2);

assign sext_ln1265_1_fu_1492_p0 = dense_2_bias_V_q0;

assign sext_ln1265_1_fu_1492_p1 = sext_ln1265_1_fu_1492_p0;

assign sext_ln1265_2_fu_1677_p1 = $signed(dense_out_bias_V_q0);

assign sext_ln1265_fu_1307_p0 = dense_1_bias_V_q0;

assign sext_ln1265_fu_1307_p1 = sext_ln1265_fu_1307_p0;

assign sext_ln203_fu_1197_p1 = $signed(add_ln203_8_reg_2080);

assign sext_ln581_fu_1012_p1 = sh_amt_fu_1004_p3;

assign sext_ln581cast_fu_1071_p1 = sext_ln581_fu_1012_p1[13:0];

assign sext_ln703_2_fu_1505_p0 = dense_2_bias_V_q0;

assign sext_ln703_2_fu_1505_p1 = sext_ln703_2_fu_1505_p0;

assign sext_ln703_fu_1320_p0 = dense_1_bias_V_q0;

assign sext_ln703_fu_1320_p1 = sext_ln703_fu_1320_p0;

assign sh_amt_fu_1004_p3 = ((icmp_ln581_fu_986_p2[0:0] === 1'b1) ? add_ln581_fu_992_p2 : sub_ln581_fu_998_p2);

assign shl_ln604_fu_1075_p2 = trunc_ln583_fu_1022_p1 << sext_ln581cast_fu_1071_p1;

assign shl_ln958_fu_1906_p2 = m_fu_1887_p1 << sub_ln958_fu_1901_p2;

assign sub_ln1117_fu_1431_p2 = (zext_ln1117_7_fu_1415_p1 - zext_ln1117_8_fu_1427_p1);

assign sub_ln203_fu_876_p2 = (zext_ln203_fu_860_p1 - zext_ln203_17_fu_872_p1);

assign sub_ln581_fu_998_p2 = (12'd8 - F2_fu_980_p2);

assign sub_ln944_fu_1759_p2 = (32'd14 - l_fu_1751_p3);

assign sub_ln947_fu_1795_p2 = (4'd7 - trunc_ln947_fu_1791_p1);

assign sub_ln958_fu_1901_p2 = (32'd25 - sub_ln944_reg_2298);

assign sub_ln964_fu_1954_p2 = (8'd6 - trunc_ln943_reg_2314);

assign sum_V_1_fu_1483_p4 = {{grp_fu_2015_p3[21:8]}};

assign sum_V_fu_1298_p4 = {{grp_fu_2005_p3[21:8]}};

assign tmp_18_fu_1055_p3 = bitcast_ln696_fu_1052_p1[32'd31];

assign tmp_19_fu_1336_p3 = add_ln703_fu_1324_p2[32'd13];

assign tmp_20_fu_1521_p3 = add_ln703_1_fu_1509_p2[32'd13];

assign tmp_22_fu_1775_p4 = {{lsb_index_fu_1769_p2[31:1]}};

assign tmp_23_fu_1829_p3 = lsb_index_fu_1769_p2[32'd31];

assign tmp_24_fu_1938_p3 = m_13_fu_1919_p2[32'd25];

assign tmp_4_fu_852_p3 = {{i_0_reg_602}, {5'd0}};

assign tmp_5_fu_864_p3 = {{i_0_reg_602}, {2'd0}};

assign tmp_6_fu_1407_p3 = {{select_ln14_3_fu_1377_p3}, {5'd0}};

assign tmp_7_fu_1419_p3 = {{select_ln14_3_fu_1377_p3}, {1'd0}};

assign tmp_8_fu_1592_p3 = {{select_ln48_fu_1562_p3}, {3'd0}};

assign tmp_9_fu_1604_p3 = {{select_ln48_fu_1562_p3}, {1'd0}};

assign tmp_V_13_fu_1725_p3 = ((p_Result_41_fu_1711_p3[0:0] === 1'b1) ? tmp_V_fu_1719_p2 : prediction_V_q0);

assign tmp_V_fu_1719_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_948_p3 = {{1'd1}, {trunc_ln565_fu_944_p1}};

assign tmp_s_fu_1965_p3 = {{p_Result_41_reg_2288}, {add_ln964_fu_1959_p2}};

assign trunc_ln556_fu_918_p1 = ireg_V_fu_914_p1[62:0];

assign trunc_ln565_fu_944_p1 = ireg_V_fu_914_p1[51:0];

assign trunc_ln583_fu_1022_p1 = man_V_2_fu_966_p3[13:0];

assign trunc_ln586_fu_1048_p1 = ashr_ln586_fu_1042_p2[13:0];

assign trunc_ln703_2_fu_1496_p4 = {{grp_fu_2015_p3[20:8]}};

assign trunc_ln943_fu_1883_p1 = l_fu_1751_p3[7:0];

assign trunc_ln944_fu_1765_p1 = sub_ln944_fu_1759_p2[13:0];

assign trunc_ln947_fu_1791_p1 = sub_ln944_fu_1759_p2[3:0];

assign trunc_ln_fu_1311_p4 = {{grp_fu_2005_p3[20:8]}};

assign w_sum_V_fu_1668_p4 = {{grp_fu_2025_p3[21:8]}};

assign xor_ln571_fu_1081_p2 = (icmp_ln571_fu_974_p2 ^ 1'd1);

assign xor_ln581_fu_1135_p2 = (or_ln581_fu_1129_p2 ^ 1'd1);

assign xor_ln582_fu_1099_p2 = (or_ln582_fu_1093_p2 ^ 1'd1);

assign xor_ln585_fu_1111_p2 = (icmp_ln585_fu_1026_p2 ^ 1'd1);

assign xor_ln949_fu_1837_p2 = (tmp_23_fu_1829_p3 ^ 1'd1);

assign zext_ln1116_8_fu_1612_p1 = tmp_9_fu_1604_p3;

assign zext_ln1116_9_fu_1628_p1 = add_ln1116_4_fu_1622_p2;

assign zext_ln1116_fu_1600_p1 = tmp_8_fu_1592_p3;

assign zext_ln1117_6_fu_1259_p1 = grp_fu_1996_p3;

assign zext_ln1117_7_fu_1415_p1 = tmp_6_fu_1407_p3;

assign zext_ln1117_8_fu_1427_p1 = tmp_7_fu_1419_p3;

assign zext_ln13_1_fu_1398_p1 = select_ln14_4_fu_1385_p3;

assign zext_ln14_1_fu_1250_p1 = select_ln14_fu_1225_p3;

assign zext_ln14_2_fu_1393_p1 = select_ln14_4_fu_1385_p3;

assign zext_ln14_3_fu_1402_p1 = select_ln14_3_fu_1377_p3;

assign zext_ln14_fu_1241_p1 = select_ln14_1_fu_1233_p3;

assign zext_ln203_17_fu_872_p1 = tmp_5_fu_864_p3;

assign zext_ln203_18_fu_894_p1 = j_0_reg_623;

assign zext_ln203_fu_860_p1 = tmp_4_fu_852_p3;

assign zext_ln27_fu_903_p1 = ix_in_1_reg_613;

assign zext_ln461_fu_940_p1 = exp_tmp_V_fu_930_p4;

assign zext_ln47_fu_1583_p1 = select_ln48_1_fu_1570_p3;

assign zext_ln48_1_fu_1587_p1 = select_ln48_fu_1562_p3;

assign zext_ln48_fu_1578_p1 = select_ln48_1_fu_1570_p3;

assign zext_ln586_fu_1038_p1 = $unsigned(sext_ln581_fu_1012_p1);

assign zext_ln70_fu_1700_p1 = i24_0_reg_769;

assign zext_ln947_fu_1801_p1 = sub_ln947_fu_1795_p2;

always @ (posedge ap_clk) begin
    sub_ln203_reg_2067[1:0] <= 2'b00;
    zext_ln14_reg_2125[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln14_2_reg_2178[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2231[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln70_reg_2273[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_2304[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
