// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        dense_2_out_address0,
        dense_2_out_ce0,
        dense_2_out_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_state13 = 6'd16;
parameter    ap_ST_fsm_state14 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output  [4:0] dense_2_out_address0;
output   dense_2_out_ce0;
input  [31:0] dense_2_out_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_2_out_ce0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] dense_out_bias_address0;
reg    dense_out_bias_ce0;
wire   [31:0] dense_out_bias_q0;
wire   [8:0] dense_out_weights_address0;
reg    dense_out_weights_ce0;
wire   [31:0] dense_out_weights_q0;
reg   [8:0] indvar_flatten_reg_125;
reg   [3:0] d_0_reg_136;
reg   [31:0] w_sum_0_reg_147;
reg   [4:0] f_0_reg_159;
wire   [0:0] icmp_ln31_fu_189_p2;
reg   [0:0] icmp_ln31_reg_301;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln31_reg_301_pp0_iter1_reg;
wire   [8:0] add_ln31_fu_195_p2;
reg   [8:0] add_ln31_reg_305;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln36_fu_207_p2;
reg   [0:0] icmp_ln36_reg_310;
wire   [4:0] select_ln38_1_fu_213_p3;
reg   [4:0] select_ln38_1_reg_315;
wire   [3:0] select_ln38_2_fu_221_p3;
reg   [3:0] select_ln38_2_reg_320;
reg   [3:0] select_ln38_2_reg_320_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_183_p2;
reg   [31:0] tmp_4_reg_346;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [4:0] f_fu_279_p2;
reg   [4:0] f_reg_351;
wire   [31:0] select_ln38_fu_284_p3;
wire   [0:0] icmp_ln36_1_fu_292_p2;
reg   [0:0] icmp_ln36_1_reg_362;
reg   [0:0] icmp_ln36_1_reg_362_pp0_iter2_reg;
reg   [0:0] icmp_ln36_1_reg_362_pp0_iter3_reg;
wire   [63:0] zext_ln38_fu_297_p1;
reg   [63:0] zext_ln38_reg_366;
reg   [63:0] zext_ln38_reg_366_pp0_iter3_reg;
wire   [31:0] grp_fu_177_p2;
reg   [31:0] w_sum_reg_371;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter3;
reg   [3:0] dense_array_address0;
reg    dense_array_ce0;
reg    dense_array_we0;
wire   [31:0] dense_array_q0;
wire    grp_soft_max_fu_170_ap_start;
wire    grp_soft_max_fu_170_ap_done;
wire    grp_soft_max_fu_170_ap_idle;
wire    grp_soft_max_fu_170_ap_ready;
wire   [3:0] grp_soft_max_fu_170_dense_array_address0;
wire    grp_soft_max_fu_170_dense_array_ce0;
wire   [31:0] grp_soft_max_fu_170_prediction_Addr_A;
wire    grp_soft_max_fu_170_prediction_EN_A;
wire   [3:0] grp_soft_max_fu_170_prediction_WEN_A;
wire   [31:0] grp_soft_max_fu_170_prediction_Din_A;
reg   [8:0] ap_phi_mux_indvar_flatten_phi_fu_129_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_d_0_phi_fu_140_p4;
reg   [31:0] ap_phi_mux_w_sum_0_phi_fu_151_p4;
reg   [4:0] ap_phi_mux_f_0_phi_fu_163_p4;
reg    grp_soft_max_fu_170_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln38_4_fu_274_p1;
wire   [63:0] zext_ln38_1_fu_233_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_177_p0;
reg   [31:0] grp_fu_177_p1;
wire   [3:0] d_fu_201_p2;
wire   [7:0] tmp_s_fu_238_p3;
wire   [5:0] tmp_23_fu_250_p3;
wire   [8:0] zext_ln38_3_fu_258_p1;
wire   [8:0] zext_ln38_2_fu_246_p1;
wire   [8:0] add_ln38_fu_262_p2;
wire   [8:0] zext_ln37_fu_229_p1;
wire   [8:0] add_ln38_1_fu_268_p2;
wire    ap_block_pp0_stage2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 grp_soft_max_fu_170_ap_start_reg = 1'b0;
end

dense_out_dense_obek #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_address0),
    .ce0(dense_out_bias_ce0),
    .q0(dense_out_bias_q0)
);

dense_out_dense_obfk #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_address0),
    .ce0(dense_out_weights_ce0),
    .q0(dense_out_weights_q0)
);

dense_out_dense_abgk #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_address0),
    .ce0(dense_array_ce0),
    .we0(dense_array_we0),
    .d0(grp_fu_177_p2),
    .q0(dense_array_q0)
);

soft_max grp_soft_max_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_170_ap_start),
    .ap_done(grp_soft_max_fu_170_ap_done),
    .ap_idle(grp_soft_max_fu_170_ap_idle),
    .ap_ready(grp_soft_max_fu_170_ap_ready),
    .dense_array_address0(grp_soft_max_fu_170_dense_array_address0),
    .dense_array_ce0(grp_soft_max_fu_170_dense_array_ce0),
    .dense_array_q0(dense_array_q0),
    .prediction_Addr_A(grp_soft_max_fu_170_prediction_Addr_A),
    .prediction_EN_A(grp_soft_max_fu_170_prediction_EN_A),
    .prediction_WEN_A(grp_soft_max_fu_170_prediction_WEN_A),
    .prediction_Din_A(grp_soft_max_fu_170_prediction_Din_A),
    .prediction_Dout_A(32'd0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U147(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_177_p0),
    .din1(grp_fu_177_p1),
    .ce(1'b1),
    .dout(grp_fu_177_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U148(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_out_weights_q0),
    .din1(dense_2_out_q0),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_170_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_soft_max_fu_170_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_170_ap_ready == 1'b1)) begin
            grp_soft_max_fu_170_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_reg_301 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        d_0_reg_136 <= select_ln38_2_reg_320;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        d_0_reg_136 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_reg_301 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        f_0_reg_159 <= f_reg_351;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_159 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_reg_301 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_125 <= add_ln31_reg_305;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_125 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_301_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_sum_0_reg_147 <= grp_fu_177_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_sum_0_reg_147 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln31_reg_305 <= add_ln31_fu_195_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_301 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        f_reg_351 <= f_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln31_reg_301 <= icmp_ln31_fu_189_p2;
        icmp_ln31_reg_301_pp0_iter1_reg <= icmp_ln31_reg_301;
        icmp_ln36_1_reg_362_pp0_iter2_reg <= icmp_ln36_1_reg_362;
        icmp_ln36_1_reg_362_pp0_iter3_reg <= icmp_ln36_1_reg_362_pp0_iter2_reg;
        select_ln38_2_reg_320_pp0_iter1_reg <= select_ln38_2_reg_320;
        zext_ln38_reg_366_pp0_iter3_reg[3 : 0] <= zext_ln38_reg_366[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_reg_301 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln36_1_reg_362 <= icmp_ln36_1_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_fu_189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln36_reg_310 <= icmp_ln36_fu_207_p2;
        select_ln38_1_reg_315 <= select_ln38_1_fu_213_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_fu_189_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln38_2_reg_320 <= select_ln38_2_fu_221_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_301 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_4_reg_346 <= grp_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_301_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_sum_reg_371 <= grp_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_301_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln38_reg_366[3 : 0] <= zext_ln38_fu_297_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_189_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_soft_max_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_301 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_d_0_phi_fu_140_p4 = select_ln38_2_reg_320;
    end else begin
        ap_phi_mux_d_0_phi_fu_140_p4 = d_0_reg_136;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_301 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_f_0_phi_fu_163_p4 = f_reg_351;
    end else begin
        ap_phi_mux_f_0_phi_fu_163_p4 = f_0_reg_159;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_301 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_129_p4 = add_ln31_reg_305;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_129_p4 = indvar_flatten_reg_125;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_301_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_w_sum_0_phi_fu_151_p4 = grp_fu_177_p2;
    end else begin
        ap_phi_mux_w_sum_0_phi_fu_151_p4 = w_sum_0_reg_147;
    end
end

always @ (*) begin
    if (((grp_soft_max_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_out_ce0 = 1'b1;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dense_array_address0 = zext_ln38_reg_366_pp0_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dense_array_address0 = grp_soft_max_fu_170_dense_array_address0;
    end else begin
        dense_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        dense_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dense_array_ce0 = grp_soft_max_fu_170_dense_array_ce0;
    end else begin
        dense_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln36_1_reg_362_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        dense_array_we0 = 1'b1;
    end else begin
        dense_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_bias_ce0 = 1'b1;
    end else begin
        dense_out_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_ce0 = 1'b1;
    end else begin
        dense_out_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_177_p0 = w_sum_reg_371;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_177_p0 = select_ln38_fu_284_p3;
    end else begin
        grp_fu_177_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_177_p1 = dense_out_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_177_p1 = tmp_4_reg_346;
    end else begin
        grp_fu_177_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln31_fu_189_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln31_fu_189_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_soft_max_fu_170_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_195_p2 = (ap_phi_mux_indvar_flatten_phi_fu_129_p4 + 9'd1);

assign add_ln38_1_fu_268_p2 = (add_ln38_fu_262_p2 + zext_ln37_fu_229_p1);

assign add_ln38_fu_262_p2 = (zext_ln38_3_fu_258_p1 + zext_ln38_2_fu_246_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign d_fu_201_p2 = (ap_phi_mux_d_0_phi_fu_140_p4 + 4'd1);

assign dense_2_out_address0 = zext_ln38_1_fu_233_p1;

assign dense_out_bias_address0 = zext_ln38_fu_297_p1;

assign dense_out_weights_address0 = zext_ln38_4_fu_274_p1;

assign f_fu_279_p2 = (select_ln38_1_reg_315 + 5'd1);

assign grp_soft_max_fu_170_ap_start = grp_soft_max_fu_170_ap_start_reg;

assign icmp_ln31_fu_189_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_129_p4 == 9'd300) ? 1'b1 : 1'b0);

assign icmp_ln36_1_fu_292_p2 = ((f_reg_351 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln36_fu_207_p2 = ((ap_phi_mux_f_0_phi_fu_163_p4 == 5'd30) ? 1'b1 : 1'b0);

assign prediction_Addr_A = grp_soft_max_fu_170_prediction_Addr_A;

assign prediction_Din_A = grp_soft_max_fu_170_prediction_Din_A;

assign prediction_EN_A = grp_soft_max_fu_170_prediction_EN_A;

assign prediction_WEN_A = grp_soft_max_fu_170_prediction_WEN_A;

assign select_ln38_1_fu_213_p3 = ((icmp_ln36_fu_207_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_f_0_phi_fu_163_p4);

assign select_ln38_2_fu_221_p3 = ((icmp_ln36_fu_207_p2[0:0] === 1'b1) ? d_fu_201_p2 : ap_phi_mux_d_0_phi_fu_140_p4);

assign select_ln38_fu_284_p3 = ((icmp_ln36_reg_310[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_w_sum_0_phi_fu_151_p4);

assign tmp_23_fu_250_p3 = {{select_ln38_1_fu_213_p3}, {1'd0}};

assign tmp_s_fu_238_p3 = {{select_ln38_1_fu_213_p3}, {3'd0}};

assign zext_ln37_fu_229_p1 = select_ln38_2_fu_221_p3;

assign zext_ln38_1_fu_233_p1 = select_ln38_1_fu_213_p3;

assign zext_ln38_2_fu_246_p1 = tmp_s_fu_238_p3;

assign zext_ln38_3_fu_258_p1 = tmp_23_fu_250_p3;

assign zext_ln38_4_fu_274_p1 = add_ln38_1_fu_268_p2;

assign zext_ln38_fu_297_p1 = select_ln38_2_reg_320_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    zext_ln38_reg_366[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln38_reg_366_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_out
