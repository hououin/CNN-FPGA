// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_fadd_32ns_3bkb.h"
#include "dense_fmul_32ns_3cud.h"
#include "dense_fdiv_32ns_3dEe.h"
#include "dense_fexp_32ns_3eOg.h"
#include "dense_dense_weights.h"
#include "dense_dense_array.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_out< sc_lv<4> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dense_dense_weights* dense_weights_U;
    dense_dense_array* dense_array_U;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U1;
    dense_fmul_32ns_3cud<1,2,32,32,32>* dense_fmul_32ns_3cud_U2;
    dense_fdiv_32ns_3dEe<1,6,32,32,32>* dense_fdiv_32ns_3dEe_U3;
    dense_fexp_32ns_3eOg<1,4,32,32,32>* dense_fexp_32ns_3eOg_U4;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<11> > f_0_reg_175;
    sc_signal< sc_lv<32> > w_sum_0_reg_186;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > grp_fu_252_p2;
    sc_signal< sc_lv<32> > reg_263;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<4> > add_ln10_fu_269_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_286_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > d_fu_292_p2;
    sc_signal< sc_lv<4> > d_reg_409;
    sc_signal< sc_lv<64> > zext_ln21_fu_298_p1;
    sc_signal< sc_lv<64> > zext_ln21_reg_414;
    sc_signal< sc_lv<15> > zext_ln19_fu_302_p1;
    sc_signal< sc_lv<15> > zext_ln19_reg_419;
    sc_signal< sc_lv<1> > icmp_ln19_fu_306_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln19_reg_424_pp0_iter1_reg;
    sc_signal< sc_lv<11> > f_fu_312_p2;
    sc_signal< sc_lv<11> > f_reg_428;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > grp_fu_239_p2;
    sc_signal< sc_lv<32> > grp_fu_233_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<4> > i_fu_369_p2;
    sc_signal< sc_lv<4> > i_reg_466;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln38_fu_363_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<4> > j_fu_386_p2;
    sc_signal< sc_lv<4> > j_reg_484;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > zext_ln46_fu_392_p1;
    sc_signal< sc_lv<64> > zext_ln46_reg_489;
    sc_signal< sc_lv<1> > icmp_ln44_fu_380_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_d0;
    sc_signal< sc_lv<4> > phi_ln10_reg_153;
    sc_signal< sc_lv<1> > icmp_ln10_fu_280_p2;
    sc_signal< sc_lv<4> > d_0_reg_164;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<11> > ap_phi_mux_f_0_phi_fu_179_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > sum_0_reg_199;
    sc_signal< sc_lv<4> > i_0_reg_211;
    sc_signal< sc_lv<4> > j_0_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<64> > zext_ln10_fu_275_p1;
    sc_signal< sc_lv<64> > zext_ln21_4_fu_358_p1;
    sc_signal< sc_lv<64> > zext_ln21_1_fu_318_p1;
    sc_signal< sc_lv<64> > zext_ln40_fu_375_p1;
    sc_signal< sc_lv<32> > grp_fu_246_p2;
    sc_signal< sc_lv<32> > grp_fu_233_p0;
    sc_signal< sc_lv<32> > grp_fu_233_p1;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<14> > tmp_7_fu_323_p3;
    sc_signal< sc_lv<12> > tmp_8_fu_335_p3;
    sc_signal< sc_lv<15> > zext_ln21_3_fu_343_p1;
    sc_signal< sc_lv<15> > zext_ln21_2_fu_331_p1;
    sc_signal< sc_lv<15> > add_ln21_fu_347_p2;
    sc_signal< sc_lv<15> > add_ln21_1_fu_353_p2;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_pp0_stage0;
    static const sc_lv<24> ap_ST_fsm_pp0_stage1;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<24> ap_ST_fsm_state25;
    static const sc_lv<24> ap_ST_fsm_state26;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_269_p2();
    void thread_add_ln21_1_fu_353_p2();
    void thread_add_ln21_fu_347_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_179_p4();
    void thread_ap_ready();
    void thread_d_fu_292_p2();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_d0();
    void thread_dense_array_we0();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_312_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_233_p0();
    void thread_grp_fu_233_p1();
    void thread_i_fu_369_p2();
    void thread_icmp_ln10_fu_280_p2();
    void thread_icmp_ln14_fu_286_p2();
    void thread_icmp_ln19_fu_306_p2();
    void thread_icmp_ln38_fu_363_p2();
    void thread_icmp_ln44_fu_380_p2();
    void thread_j_fu_386_p2();
    void thread_prediction_address0();
    void thread_prediction_ce0();
    void thread_prediction_d0();
    void thread_prediction_we0();
    void thread_tmp_7_fu_323_p3();
    void thread_tmp_8_fu_335_p3();
    void thread_zext_ln10_fu_275_p1();
    void thread_zext_ln19_fu_302_p1();
    void thread_zext_ln21_1_fu_318_p1();
    void thread_zext_ln21_2_fu_331_p1();
    void thread_zext_ln21_3_fu_343_p1();
    void thread_zext_ln21_4_fu_358_p1();
    void thread_zext_ln21_fu_298_p1();
    void thread_zext_ln40_fu_375_p1();
    void thread_zext_ln46_fu_392_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
