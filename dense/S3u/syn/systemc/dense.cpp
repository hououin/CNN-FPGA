// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<22> dense::ap_ST_fsm_state1 = "1";
const sc_lv<22> dense::ap_ST_fsm_state2 = "10";
const sc_lv<22> dense::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<22> dense::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<22> dense::ap_ST_fsm_state7 = "10000";
const sc_lv<22> dense::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<22> dense::ap_ST_fsm_pp1_stage1 = "1000000";
const sc_lv<22> dense::ap_ST_fsm_state15 = "10000000";
const sc_lv<22> dense::ap_ST_fsm_state16 = "100000000";
const sc_lv<22> dense::ap_ST_fsm_state17 = "1000000000";
const sc_lv<22> dense::ap_ST_fsm_state18 = "10000000000";
const sc_lv<22> dense::ap_ST_fsm_state19 = "100000000000";
const sc_lv<22> dense::ap_ST_fsm_state20 = "1000000000000";
const sc_lv<22> dense::ap_ST_fsm_state21 = "10000000000000";
const sc_lv<22> dense::ap_ST_fsm_state22 = "100000000000000";
const sc_lv<22> dense::ap_ST_fsm_state23 = "1000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state24 = "10000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state25 = "100000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state26 = "1000000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state27 = "10000000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state28 = "100000000000000000000";
const sc_lv<22> dense::ap_ST_fsm_state29 = "1000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool dense::ap_const_boolean_1 = true;
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const bool dense::ap_const_boolean_0 = false;
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_5 = "101";
const sc_lv<32> dense::ap_const_lv32_6 = "110";
const sc_lv<32> dense::ap_const_lv32_8 = "1000";
const sc_lv<32> dense::ap_const_lv32_B = "1011";
const sc_lv<32> dense::ap_const_lv32_9 = "1001";
const sc_lv<32> dense::ap_const_lv32_C = "1100";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<32> dense::ap_const_lv32_7 = "111";
const sc_lv<32> dense::ap_const_lv32_A = "1010";
const sc_lv<32> dense::ap_const_lv32_D = "1101";
const sc_lv<32> dense::ap_const_lv32_E = "1110";
const sc_lv<32> dense::ap_const_lv32_F = "1111";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const sc_lv<4> dense::ap_const_lv4_0 = "0000";
const sc_lv<14> dense::ap_const_lv14_0 = "00000000000000";
const sc_lv<11> dense::ap_const_lv11_0 = "00000000000";
const sc_lv<64> dense::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> dense::ap_const_lv64_1 = "1";
const sc_lv<64> dense::ap_const_lv64_2 = "10";
const sc_lv<64> dense::ap_const_lv64_3 = "11";
const sc_lv<64> dense::ap_const_lv64_4 = "100";
const sc_lv<64> dense::ap_const_lv64_5 = "101";
const sc_lv<64> dense::ap_const_lv64_6 = "110";
const sc_lv<64> dense::ap_const_lv64_7 = "111";
const sc_lv<64> dense::ap_const_lv64_8 = "1000";
const sc_lv<64> dense::ap_const_lv64_9 = "1001";
const sc_lv<32> dense::ap_const_lv32_11 = "10001";
const sc_lv<32> dense::ap_const_lv32_12 = "10010";
const sc_lv<32> dense::ap_const_lv32_13 = "10011";
const sc_lv<32> dense::ap_const_lv32_14 = "10100";
const sc_lv<32> dense::ap_const_lv32_15 = "10101";
const sc_lv<32> dense::ap_const_lv32_10 = "10000";
const sc_lv<4> dense::ap_const_lv4_1 = "1";
const sc_lv<4> dense::ap_const_lv4_9 = "1001";
const sc_lv<14> dense::ap_const_lv14_3E80 = "11111010000000";
const sc_lv<14> dense::ap_const_lv14_1 = "1";
const sc_lv<11> dense::ap_const_lv11_640 = "11001000000";
const sc_lv<3> dense::ap_const_lv3_0 = "000";
const sc_lv<11> dense::ap_const_lv11_1 = "1";
const sc_lv<4> dense::ap_const_lv4_A = "1010";

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_weights_U = new dense_dense_weights("dense_weights_U");
    dense_weights_U->clk(ap_clk);
    dense_weights_U->reset(ap_rst);
    dense_weights_U->address0(dense_weights_address0);
    dense_weights_U->ce0(dense_weights_ce0);
    dense_weights_U->q0(dense_weights_q0);
    dense_array_U = new dense_dense_array("dense_array_U");
    dense_array_U->clk(ap_clk);
    dense_array_U->reset(ap_rst);
    dense_array_U->address0(dense_array_address0);
    dense_array_U->ce0(dense_array_ce0);
    dense_array_U->we0(dense_array_we0);
    dense_array_U->d0(dense_array_d0);
    dense_array_U->q0(dense_array_q0);
    dense_array_U->address1(dense_array_address1);
    dense_array_U->ce1(dense_array_ce1);
    dense_array_U->q1(dense_array_q1);
    dense_fadd_32ns_3bkb_U1 = new dense_fadd_32ns_3bkb<1,2,32,32,32>("dense_fadd_32ns_3bkb_U1");
    dense_fadd_32ns_3bkb_U1->clk(ap_clk);
    dense_fadd_32ns_3bkb_U1->reset(ap_rst);
    dense_fadd_32ns_3bkb_U1->din0(grp_fu_417_p0);
    dense_fadd_32ns_3bkb_U1->din1(grp_fu_417_p1);
    dense_fadd_32ns_3bkb_U1->ce(ap_var_for_const0);
    dense_fadd_32ns_3bkb_U1->dout(grp_fu_417_p2);
    dense_fmul_32ns_3cud_U2 = new dense_fmul_32ns_3cud<1,2,32,32,32>("dense_fmul_32ns_3cud_U2");
    dense_fmul_32ns_3cud_U2->clk(ap_clk);
    dense_fmul_32ns_3cud_U2->reset(ap_rst);
    dense_fmul_32ns_3cud_U2->din0(dense_weights_q0);
    dense_fmul_32ns_3cud_U2->din1(flat_array_q0);
    dense_fmul_32ns_3cud_U2->ce(ap_var_for_const0);
    dense_fmul_32ns_3cud_U2->dout(grp_fu_423_p2);
    dense_fdiv_32ns_3dEe_U3 = new dense_fdiv_32ns_3dEe<1,6,32,32,32>("dense_fdiv_32ns_3dEe_U3");
    dense_fdiv_32ns_3dEe_U3->clk(ap_clk);
    dense_fdiv_32ns_3dEe_U3->reset(ap_rst);
    dense_fdiv_32ns_3dEe_U3->din0(grp_fu_430_p0);
    dense_fdiv_32ns_3dEe_U3->din1(sum_0_reg_394);
    dense_fdiv_32ns_3dEe_U3->ce(ap_var_for_const0);
    dense_fdiv_32ns_3dEe_U3->dout(grp_fu_430_p2);
    dense_fdiv_32ns_3dEe_U4 = new dense_fdiv_32ns_3dEe<1,6,32,32,32>("dense_fdiv_32ns_3dEe_U4");
    dense_fdiv_32ns_3dEe_U4->clk(ap_clk);
    dense_fdiv_32ns_3dEe_U4->reset(ap_rst);
    dense_fdiv_32ns_3dEe_U4->din0(grp_fu_436_p0);
    dense_fdiv_32ns_3dEe_U4->din1(sum_0_reg_394);
    dense_fdiv_32ns_3dEe_U4->ce(ap_var_for_const0);
    dense_fdiv_32ns_3dEe_U4->dout(grp_fu_436_p2);
    dense_fexp_32ns_3eOg_U5 = new dense_fexp_32ns_3eOg<1,4,32,32,32>("dense_fexp_32ns_3eOg_U5");
    dense_fexp_32ns_3eOg_U5->clk(ap_clk);
    dense_fexp_32ns_3eOg_U5->reset(ap_rst);
    dense_fexp_32ns_3eOg_U5->din0(ap_var_for_const1);
    dense_fexp_32ns_3eOg_U5->din1(grp_fu_442_p1);
    dense_fexp_32ns_3eOg_U5->ce(ap_var_for_const0);
    dense_fexp_32ns_3eOg_U5->dout(grp_fu_442_p2);
    dense_fexp_32ns_3eOg_U6 = new dense_fexp_32ns_3eOg<1,4,32,32,32>("dense_fexp_32ns_3eOg_U6");
    dense_fexp_32ns_3eOg_U6->clk(ap_clk);
    dense_fexp_32ns_3eOg_U6->reset(ap_rst);
    dense_fexp_32ns_3eOg_U6->din0(ap_var_for_const1);
    dense_fexp_32ns_3eOg_U6->din1(grp_fu_448_p1);
    dense_fexp_32ns_3eOg_U6->ce(ap_var_for_const0);
    dense_fexp_32ns_3eOg_U6->dout(grp_fu_448_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln11_fu_513_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_353_p4 );

    SC_METHOD(thread_add_ln18_1_fu_586_p2);
    sensitive << ( add_ln18_fu_580_p2 );
    sensitive << ( zext_ln17_fu_547_p1 );

    SC_METHOD(thread_add_ln18_fu_580_p2);
    sensitive << ( zext_ln18_3_fu_576_p1 );
    sensitive << ( zext_ln18_2_fu_564_p1 );

    SC_METHOD(thread_add_ln8_fu_490_p2);
    sensitive << ( phi_ln8_reg_338 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state13_pp1_stage1_iter2);

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_pp1_stage1_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln11_fu_507_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state8);
    sensitive << ( icmp_ln27_fu_619_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_d_0_phi_fu_364_p4);
    sensitive << ( d_0_reg_360 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln11_reg_645 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln18_2_reg_664 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_f_0_phi_fu_375_p4);
    sensitive << ( f_0_reg_371 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln11_reg_645 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( f_reg_690 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_410_p4);
    sensitive << ( i_0_reg_406 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( icmp_ln27_reg_710 );
    sensitive << ( i_reg_714 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_353_p4);
    sensitive << ( indvar_flatten_reg_349 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln11_reg_645 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln11_reg_649 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_d_fu_519_p2);
    sensitive << ( ap_phi_mux_d_0_phi_fu_364_p4 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln8_fu_496_p1 );
    sensitive << ( zext_ln18_fu_615_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln29_fu_631_p1 );

    SC_METHOD(thread_dense_array_address1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dense_array_ce1);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_dense_array_d0);
    sensitive << ( grp_fu_417_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_dense_array_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln16_1_reg_706 );

    SC_METHOD(thread_dense_weights_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln18_4_fu_592_p1 );

    SC_METHOD(thread_dense_weights_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_597_p2);
    sensitive << ( select_ln18_reg_659 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln18_1_fu_551_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_417_p0);
    sensitive << ( sum_0_reg_394 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln18_1_fu_602_p3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_grp_fu_417_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( reg_468 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( grp_fu_423_p2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_grp_fu_430_p0);
    sensitive << ( reg_468 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_4_2_reg_789 );
    sensitive << ( tmp_4_4_reg_799 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_4_6_reg_809 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_4_8_reg_819 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_436_p0);
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_4_1_reg_774 );
    sensitive << ( tmp_4_3_reg_794 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_4_5_reg_804 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_4_7_reg_814 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( tmp_4_9_reg_824 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_442_p1);
    sensitive << ( dense_array_q0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( dense_array_q1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_block_pp1_stage1 );

    SC_METHOD(thread_grp_fu_448_p1);
    sensitive << ( dense_array_q0 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( dense_array_q1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_i_fu_625_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_410_p4 );

    SC_METHOD(thread_icmp_ln11_fu_507_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_353_p4 );

    SC_METHOD(thread_icmp_ln16_1_fu_610_p2);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln11_reg_645 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( f_reg_690 );

    SC_METHOD(thread_icmp_ln16_fu_525_p2);
    sensitive << ( icmp_ln11_fu_507_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_375_p4 );

    SC_METHOD(thread_icmp_ln27_fu_619_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_410_p4 );

    SC_METHOD(thread_icmp_ln8_fu_501_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln8_reg_338 );

    SC_METHOD(thread_prediction_address0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_prediction_address1);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_prediction_ce0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_prediction_ce1);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_prediction_d0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_fu_430_p2 );

    SC_METHOD(thread_prediction_d1);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( grp_fu_436_p2 );

    SC_METHOD(thread_prediction_we0);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_prediction_we1);
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_select_ln18_1_fu_602_p3);
    sensitive << ( w_sum_0_reg_382 );
    sensitive << ( icmp_ln16_reg_654 );

    SC_METHOD(thread_select_ln18_2_fu_539_p3);
    sensitive << ( icmp_ln16_fu_525_p2 );
    sensitive << ( ap_phi_mux_d_0_phi_fu_364_p4 );
    sensitive << ( d_fu_519_p2 );

    SC_METHOD(thread_select_ln18_fu_531_p3);
    sensitive << ( icmp_ln16_fu_525_p2 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_375_p4 );

    SC_METHOD(thread_tmp_3_fu_556_p3);
    sensitive << ( select_ln18_fu_531_p3 );

    SC_METHOD(thread_tmp_8_fu_568_p3);
    sensitive << ( select_ln18_fu_531_p3 );

    SC_METHOD(thread_zext_ln17_fu_547_p1);
    sensitive << ( select_ln18_2_fu_539_p3 );

    SC_METHOD(thread_zext_ln18_1_fu_551_p1);
    sensitive << ( select_ln18_fu_531_p3 );

    SC_METHOD(thread_zext_ln18_2_fu_564_p1);
    sensitive << ( tmp_3_fu_556_p3 );

    SC_METHOD(thread_zext_ln18_3_fu_576_p1);
    sensitive << ( tmp_8_fu_568_p3 );

    SC_METHOD(thread_zext_ln18_4_fu_592_p1);
    sensitive << ( add_ln18_1_fu_586_p2 );

    SC_METHOD(thread_zext_ln18_fu_615_p1);
    sensitive << ( select_ln18_2_reg_664_pp0_iter1_reg );

    SC_METHOD(thread_zext_ln29_fu_631_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_410_p4 );

    SC_METHOD(thread_zext_ln8_fu_496_p1);
    sensitive << ( phi_ln8_reg_338 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_501_p2 );
    sensitive << ( icmp_ln11_fu_507_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln27_fu_619_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_q0, "(port)flat_array_q0");
    sc_trace(mVcdFile, prediction_address0, "(port)prediction_address0");
    sc_trace(mVcdFile, prediction_ce0, "(port)prediction_ce0");
    sc_trace(mVcdFile, prediction_we0, "(port)prediction_we0");
    sc_trace(mVcdFile, prediction_d0, "(port)prediction_d0");
    sc_trace(mVcdFile, prediction_address1, "(port)prediction_address1");
    sc_trace(mVcdFile, prediction_ce1, "(port)prediction_ce1");
    sc_trace(mVcdFile, prediction_we1, "(port)prediction_we1");
    sc_trace(mVcdFile, prediction_d1, "(port)prediction_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_weights_address0, "dense_weights_address0");
    sc_trace(mVcdFile, dense_weights_ce0, "dense_weights_ce0");
    sc_trace(mVcdFile, dense_weights_q0, "dense_weights_q0");
    sc_trace(mVcdFile, indvar_flatten_reg_349, "indvar_flatten_reg_349");
    sc_trace(mVcdFile, d_0_reg_360, "d_0_reg_360");
    sc_trace(mVcdFile, f_0_reg_371, "f_0_reg_371");
    sc_trace(mVcdFile, w_sum_0_reg_382, "w_sum_0_reg_382");
    sc_trace(mVcdFile, sum_0_reg_394, "sum_0_reg_394");
    sc_trace(mVcdFile, i_0_reg_406, "i_0_reg_406");
    sc_trace(mVcdFile, grp_fu_417_p2, "grp_fu_417_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, icmp_ln11_reg_645, "icmp_ln11_reg_645");
    sc_trace(mVcdFile, icmp_ln11_reg_645_pp0_iter1_reg, "icmp_ln11_reg_645_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter0, "ap_block_state8_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter1, "ap_block_state10_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter2, "ap_block_state12_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter3, "ap_block_state14_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln27_reg_710, "icmp_ln27_reg_710");
    sc_trace(mVcdFile, icmp_ln27_reg_710_pp1_iter2_reg, "icmp_ln27_reg_710_pp1_iter2_reg");
    sc_trace(mVcdFile, dense_array_q0, "dense_array_q0");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage1_iter0, "ap_block_state9_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage1_iter1, "ap_block_state11_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage1_iter2, "ap_block_state13_pp1_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, dense_array_q1, "dense_array_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_442_p2, "grp_fu_442_p2");
    sc_trace(mVcdFile, reg_468, "reg_468");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, icmp_ln27_reg_710_pp1_iter1_reg, "icmp_ln27_reg_710_pp1_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, add_ln8_fu_490_p2, "add_ln8_fu_490_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln8_fu_501_p2, "icmp_ln8_fu_501_p2");
    sc_trace(mVcdFile, icmp_ln11_fu_507_p2, "icmp_ln11_fu_507_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln11_fu_513_p2, "add_ln11_fu_513_p2");
    sc_trace(mVcdFile, add_ln11_reg_649, "add_ln11_reg_649");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln16_fu_525_p2, "icmp_ln16_fu_525_p2");
    sc_trace(mVcdFile, icmp_ln16_reg_654, "icmp_ln16_reg_654");
    sc_trace(mVcdFile, select_ln18_fu_531_p3, "select_ln18_fu_531_p3");
    sc_trace(mVcdFile, select_ln18_reg_659, "select_ln18_reg_659");
    sc_trace(mVcdFile, select_ln18_2_fu_539_p3, "select_ln18_2_fu_539_p3");
    sc_trace(mVcdFile, select_ln18_2_reg_664, "select_ln18_2_reg_664");
    sc_trace(mVcdFile, select_ln18_2_reg_664_pp0_iter1_reg, "select_ln18_2_reg_664_pp0_iter1_reg");
    sc_trace(mVcdFile, f_fu_597_p2, "f_fu_597_p2");
    sc_trace(mVcdFile, f_reg_690, "f_reg_690");
    sc_trace(mVcdFile, select_ln18_1_fu_602_p3, "select_ln18_1_fu_602_p3");
    sc_trace(mVcdFile, grp_fu_423_p2, "grp_fu_423_p2");
    sc_trace(mVcdFile, icmp_ln16_1_fu_610_p2, "icmp_ln16_1_fu_610_p2");
    sc_trace(mVcdFile, icmp_ln16_1_reg_706, "icmp_ln16_1_reg_706");
    sc_trace(mVcdFile, icmp_ln27_fu_619_p2, "icmp_ln27_fu_619_p2");
    sc_trace(mVcdFile, i_fu_625_p2, "i_fu_625_p2");
    sc_trace(mVcdFile, i_reg_714, "i_reg_714");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_448_p2, "grp_fu_448_p2");
    sc_trace(mVcdFile, tmp_4_1_reg_774, "tmp_4_1_reg_774");
    sc_trace(mVcdFile, tmp_4_2_reg_789, "tmp_4_2_reg_789");
    sc_trace(mVcdFile, tmp_4_3_reg_794, "tmp_4_3_reg_794");
    sc_trace(mVcdFile, tmp_4_4_reg_799, "tmp_4_4_reg_799");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, tmp_4_5_reg_804, "tmp_4_5_reg_804");
    sc_trace(mVcdFile, tmp_4_6_reg_809, "tmp_4_6_reg_809");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tmp_4_7_reg_814, "tmp_4_7_reg_814");
    sc_trace(mVcdFile, tmp_4_8_reg_819, "tmp_4_8_reg_819");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_4_9_reg_824, "tmp_4_9_reg_824");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state8, "ap_condition_pp1_exit_iter0_state8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, dense_array_address0, "dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "dense_array_ce0");
    sc_trace(mVcdFile, dense_array_we0, "dense_array_we0");
    sc_trace(mVcdFile, dense_array_d0, "dense_array_d0");
    sc_trace(mVcdFile, dense_array_address1, "dense_array_address1");
    sc_trace(mVcdFile, dense_array_ce1, "dense_array_ce1");
    sc_trace(mVcdFile, phi_ln8_reg_338, "phi_ln8_reg_338");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_353_p4, "ap_phi_mux_indvar_flatten_phi_fu_353_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_d_0_phi_fu_364_p4, "ap_phi_mux_d_0_phi_fu_364_p4");
    sc_trace(mVcdFile, ap_phi_mux_f_0_phi_fu_375_p4, "ap_phi_mux_f_0_phi_fu_375_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_410_p4, "ap_phi_mux_i_0_phi_fu_410_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, zext_ln8_fu_496_p1, "zext_ln8_fu_496_p1");
    sc_trace(mVcdFile, zext_ln18_4_fu_592_p1, "zext_ln18_4_fu_592_p1");
    sc_trace(mVcdFile, zext_ln18_1_fu_551_p1, "zext_ln18_1_fu_551_p1");
    sc_trace(mVcdFile, zext_ln18_fu_615_p1, "zext_ln18_fu_615_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln29_fu_631_p1, "zext_ln29_fu_631_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, grp_fu_430_p2, "grp_fu_430_p2");
    sc_trace(mVcdFile, grp_fu_436_p2, "grp_fu_436_p2");
    sc_trace(mVcdFile, grp_fu_417_p0, "grp_fu_417_p0");
    sc_trace(mVcdFile, grp_fu_417_p1, "grp_fu_417_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, grp_fu_430_p0, "grp_fu_430_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_436_p0, "grp_fu_436_p0");
    sc_trace(mVcdFile, grp_fu_442_p1, "grp_fu_442_p1");
    sc_trace(mVcdFile, grp_fu_448_p1, "grp_fu_448_p1");
    sc_trace(mVcdFile, d_fu_519_p2, "d_fu_519_p2");
    sc_trace(mVcdFile, tmp_3_fu_556_p3, "tmp_3_fu_556_p3");
    sc_trace(mVcdFile, tmp_8_fu_568_p3, "tmp_8_fu_568_p3");
    sc_trace(mVcdFile, zext_ln18_3_fu_576_p1, "zext_ln18_3_fu_576_p1");
    sc_trace(mVcdFile, zext_ln18_2_fu_564_p1, "zext_ln18_2_fu_564_p1");
    sc_trace(mVcdFile, add_ln18_fu_580_p2, "add_ln18_fu_580_p2");
    sc_trace(mVcdFile, zext_ln17_fu_547_p1, "zext_ln17_fu_547_p1");
    sc_trace(mVcdFile, add_ln18_1_fu_586_p2, "add_ln18_1_fu_586_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("dense.hdltvin.dat");
    mHdltvoutHandle.open("dense.hdltvout.dat");
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dense_weights_U;
    delete dense_array_U;
    delete dense_fadd_32ns_3bkb_U1;
    delete dense_fmul_32ns_3cud_U2;
    delete dense_fdiv_32ns_3dEe_U3;
    delete dense_fdiv_32ns_3dEe_U4;
    delete dense_fexp_32ns_3eOg_U5;
    delete dense_fexp_32ns_3eOg_U6;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            ap_enable_reg_pp1_iter3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
        d_0_reg_360 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0))) {
        d_0_reg_360 = select_ln18_2_reg_664.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
        f_0_reg_371 = ap_const_lv11_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0))) {
        f_0_reg_371 = f_reg_690.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_710.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        i_0_reg_406 = i_reg_714.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_reg_406 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
        indvar_flatten_reg_349 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_349 = add_ln11_reg_649.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_501_p2.read()))) {
        phi_ln8_reg_338 = add_ln8_fu_490_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln8_reg_338 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_710_pp1_iter2_reg.read()))) {
        sum_0_reg_394 = grp_fu_417_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        sum_0_reg_394 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
        w_sum_0_reg_382 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(icmp_ln11_reg_645_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        w_sum_0_reg_382 = grp_fu_417_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln11_reg_649 = add_ln11_fu_513_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0))) {
        f_reg_690 = f_fu_597_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_reg_714 = i_fu_625_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln11_reg_645 = icmp_ln11_fu_507_p2.read();
        icmp_ln11_reg_645_pp0_iter1_reg = icmp_ln11_reg_645.read();
        select_ln18_2_reg_664_pp0_iter1_reg = select_ln18_2_reg_664.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0))) {
        icmp_ln16_1_reg_706 = icmp_ln16_1_fu_610_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_507_p2.read()))) {
        icmp_ln16_reg_654 = icmp_ln16_fu_525_p2.read();
        select_ln18_reg_659 = select_ln18_fu_531_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln27_reg_710 = icmp_ln27_fu_619_p2.read();
        icmp_ln27_reg_710_pp1_iter1_reg = icmp_ln27_reg_710.read();
        icmp_ln27_reg_710_pp1_iter2_reg = icmp_ln27_reg_710_pp1_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_710_pp1_iter1_reg.read())))) {
        reg_468 = grp_fu_442_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_507_p2.read()))) {
        select_ln18_2_reg_664 = select_ln18_2_fu_539_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_4_1_reg_774 = grp_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        tmp_4_2_reg_789 = grp_fu_442_p2.read();
        tmp_4_3_reg_794 = grp_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_4_4_reg_799 = grp_fu_442_p2.read();
        tmp_4_5_reg_804 = grp_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_4_6_reg_809 = grp_fu_442_p2.read();
        tmp_4_7_reg_814 = grp_fu_448_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_4_8_reg_819 = grp_fu_442_p2.read();
        tmp_4_9_reg_824 = grp_fu_448_p2.read();
    }
}

void dense::thread_add_ln11_fu_513_p2() {
    add_ln11_fu_513_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_353_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar_flatten_phi_fu_353_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void dense::thread_add_ln18_1_fu_586_p2() {
    add_ln18_1_fu_586_p2 = (!add_ln18_fu_580_p2.read().is_01() || !zext_ln17_fu_547_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(add_ln18_fu_580_p2.read()) + sc_biguint<15>(zext_ln17_fu_547_p1.read()));
}

void dense::thread_add_ln18_fu_580_p2() {
    add_ln18_fu_580_p2 = (!zext_ln18_3_fu_576_p1.read().is_01() || !zext_ln18_2_fu_564_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln18_3_fu_576_p1.read()) + sc_biguint<15>(zext_ln18_2_fu_564_p1.read()));
}

void dense::thread_add_ln8_fu_490_p2() {
    add_ln8_fu_490_p2 = (!phi_ln8_reg_338.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(phi_ln8_reg_338.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void dense::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[6];
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[7];
}

void dense::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[8];
}

void dense::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[9];
}

void dense::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[10];
}

void dense::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[11];
}

void dense::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[12];
}

void dense::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[13];
}

void dense::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[14];
}

void dense::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[15];
}

void dense::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[16];
}

void dense::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[17];
}

void dense::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[18];
}

void dense::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[19];
}

void dense::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[20];
}

void dense::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[21];
}

void dense::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state10_pp1_stage0_iter1() {
    ap_block_state10_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state11_pp1_stage1_iter1() {
    ap_block_state11_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state12_pp1_stage0_iter2() {
    ap_block_state12_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state13_pp1_stage1_iter2() {
    ap_block_state13_pp1_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state14_pp1_stage0_iter3() {
    ap_block_state14_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state8_pp1_stage0_iter0() {
    ap_block_state8_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state9_pp1_stage1_iter0() {
    ap_block_state9_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln11_fu_507_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void dense::thread_ap_condition_pp1_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(icmp_ln27_fu_619_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_0;
    }
}

void dense::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dense::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void dense::thread_ap_phi_mux_d_0_phi_fu_364_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_d_0_phi_fu_364_p4 = select_ln18_2_reg_664.read();
    } else {
        ap_phi_mux_d_0_phi_fu_364_p4 = d_0_reg_360.read();
    }
}

void dense::thread_ap_phi_mux_f_0_phi_fu_375_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_f_0_phi_fu_375_p4 = f_reg_690.read();
    } else {
        ap_phi_mux_f_0_phi_fu_375_p4 = f_0_reg_371.read();
    }
}

void dense::thread_ap_phi_mux_i_0_phi_fu_410_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_reg_710.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_410_p4 = i_reg_714.read();
    } else {
        ap_phi_mux_i_0_phi_fu_410_p4 = i_0_reg_406.read();
    }
}

void dense::thread_ap_phi_mux_indvar_flatten_phi_fu_353_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_reg_645.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_353_p4 = add_ln11_reg_649.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_353_p4 = indvar_flatten_reg_349.read();
    }
}

void dense::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_519_p2() {
    d_fu_519_p2 = (!ap_phi_mux_d_0_phi_fu_364_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_d_0_phi_fu_364_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_dense_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln29_fu_631_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln18_fu_615_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln8_fu_496_p1.read());
    } else {
        dense_array_address0 = "XXXX";
    }
}

void dense::thread_dense_array_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        dense_array_address1 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        dense_array_address1 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        dense_array_address1 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        dense_array_address1 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        dense_array_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        dense_array_address1 = "XXXX";
    }
}

void dense::thread_dense_array_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        dense_array_ce0 = ap_const_logic_1;
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        dense_array_ce1 = ap_const_logic_1;
    } else {
        dense_array_ce1 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        dense_array_d0 = grp_fu_417_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dense_array_d0 = ap_const_lv32_0;
    } else {
        dense_array_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_dense_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln16_1_reg_706.read(), ap_const_lv1_1)))) {
        dense_array_we0 = ap_const_logic_1;
    } else {
        dense_array_we0 = ap_const_logic_0;
    }
}

void dense::thread_dense_weights_address0() {
    dense_weights_address0 =  (sc_lv<14>) (zext_ln18_4_fu_592_p1.read());
}

void dense::thread_dense_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_weights_ce0 = ap_const_logic_1;
    } else {
        dense_weights_ce0 = ap_const_logic_0;
    }
}

void dense::thread_f_fu_597_p2() {
    f_fu_597_p2 = (!select_ln18_reg_659.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln18_reg_659.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void dense::thread_flat_array_address0() {
    flat_array_address0 =  (sc_lv<11>) (zext_ln18_1_fu_551_p1.read());
}

void dense::thread_flat_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_grp_fu_417_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        grp_fu_417_p0 = sum_0_reg_394.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_417_p0 = select_ln18_1_fu_602_p3.read();
    } else {
        grp_fu_417_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_417_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        grp_fu_417_p1 = reg_468.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_417_p1 = grp_fu_423_p2.read();
    } else {
        grp_fu_417_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_430_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_430_p0 = tmp_4_8_reg_819.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_430_p0 = tmp_4_6_reg_809.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_430_p0 = tmp_4_4_reg_799.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_430_p0 = tmp_4_2_reg_789.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_430_p0 = reg_468.read();
    } else {
        grp_fu_430_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_436_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_436_p0 = tmp_4_9_reg_824.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        grp_fu_436_p0 = tmp_4_7_reg_814.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_436_p0 = tmp_4_5_reg_804.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_436_p0 = tmp_4_3_reg_794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_436_p0 = tmp_4_1_reg_774.read();
    } else {
        grp_fu_436_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_442_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_442_p1 = dense_array_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0)))) {
        grp_fu_442_p1 = dense_array_q0.read();
    } else {
        grp_fu_442_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_448_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_448_p1 = dense_array_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_448_p1 = dense_array_q1.read();
    } else {
        grp_fu_448_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_i_fu_625_p2() {
    i_fu_625_p2 = (!ap_phi_mux_i_0_phi_fu_410_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_phi_fu_410_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_icmp_ln11_fu_507_p2() {
    icmp_ln11_fu_507_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_353_p4.read().is_01() || !ap_const_lv14_3E80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_353_p4.read() == ap_const_lv14_3E80);
}

void dense::thread_icmp_ln16_1_fu_610_p2() {
    icmp_ln16_1_fu_610_p2 = (!f_reg_690.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(f_reg_690.read() == ap_const_lv11_640);
}

void dense::thread_icmp_ln16_fu_525_p2() {
    icmp_ln16_fu_525_p2 = (!ap_phi_mux_f_0_phi_fu_375_p4.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_f_0_phi_fu_375_p4.read() == ap_const_lv11_640);
}

void dense::thread_icmp_ln27_fu_619_p2() {
    icmp_ln27_fu_619_p2 = (!ap_phi_mux_i_0_phi_fu_410_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_410_p4.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln8_fu_501_p2() {
    icmp_ln8_fu_501_p2 = (!phi_ln8_reg_338.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln8_reg_338.read() == ap_const_lv4_9);
}

void dense::thread_prediction_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        prediction_address0 = "XXXX";
    }
}

void dense::thread_prediction_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        prediction_address1 = "XXXX";
    }
}

void dense::thread_prediction_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        prediction_ce0 = ap_const_logic_1;
    } else {
        prediction_ce0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        prediction_ce1 = ap_const_logic_1;
    } else {
        prediction_ce1 = ap_const_logic_0;
    }
}

void dense::thread_prediction_d0() {
    prediction_d0 = grp_fu_430_p2.read();
}

void dense::thread_prediction_d1() {
    prediction_d1 = grp_fu_436_p2.read();
}

void dense::thread_prediction_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        prediction_we0 = ap_const_logic_1;
    } else {
        prediction_we0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        prediction_we1 = ap_const_logic_1;
    } else {
        prediction_we1 = ap_const_logic_0;
    }
}

void dense::thread_select_ln18_1_fu_602_p3() {
    select_ln18_1_fu_602_p3 = (!icmp_ln16_reg_654.read()[0].is_01())? sc_lv<32>(): ((icmp_ln16_reg_654.read()[0].to_bool())? ap_const_lv32_0: w_sum_0_reg_382.read());
}

void dense::thread_select_ln18_2_fu_539_p3() {
    select_ln18_2_fu_539_p3 = (!icmp_ln16_fu_525_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln16_fu_525_p2.read()[0].to_bool())? d_fu_519_p2.read(): ap_phi_mux_d_0_phi_fu_364_p4.read());
}

void dense::thread_select_ln18_fu_531_p3() {
    select_ln18_fu_531_p3 = (!icmp_ln16_fu_525_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln16_fu_525_p2.read()[0].to_bool())? ap_const_lv11_0: ap_phi_mux_f_0_phi_fu_375_p4.read());
}

void dense::thread_tmp_3_fu_556_p3() {
    tmp_3_fu_556_p3 = esl_concat<11,3>(select_ln18_fu_531_p3.read(), ap_const_lv3_0);
}

void dense::thread_tmp_8_fu_568_p3() {
    tmp_8_fu_568_p3 = esl_concat<11,1>(select_ln18_fu_531_p3.read(), ap_const_lv1_0);
}

void dense::thread_zext_ln17_fu_547_p1() {
    zext_ln17_fu_547_p1 = esl_zext<15,4>(select_ln18_2_fu_539_p3.read());
}

void dense::thread_zext_ln18_1_fu_551_p1() {
    zext_ln18_1_fu_551_p1 = esl_zext<64,11>(select_ln18_fu_531_p3.read());
}

void dense::thread_zext_ln18_2_fu_564_p1() {
    zext_ln18_2_fu_564_p1 = esl_zext<15,14>(tmp_3_fu_556_p3.read());
}

void dense::thread_zext_ln18_3_fu_576_p1() {
    zext_ln18_3_fu_576_p1 = esl_zext<15,12>(tmp_8_fu_568_p3.read());
}

void dense::thread_zext_ln18_4_fu_592_p1() {
    zext_ln18_4_fu_592_p1 = esl_zext<64,15>(add_ln18_1_fu_586_p2.read());
}

void dense::thread_zext_ln18_fu_615_p1() {
    zext_ln18_fu_615_p1 = esl_zext<64,4>(select_ln18_2_reg_664_pp0_iter1_reg.read());
}

void dense::thread_zext_ln29_fu_631_p1() {
    zext_ln29_fu_631_p1 = esl_zext<64,4>(ap_phi_mux_i_0_phi_fu_410_p4.read());
}

void dense::thread_zext_ln8_fu_496_p1() {
    zext_ln8_fu_496_p1 = esl_zext<64,4>(phi_ln8_reg_338.read());
}

void dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_501_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_507_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_507_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln27_fu_619_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln27_fu_619_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<22>) ("XXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void dense::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address0\" :  \"" << flat_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce0\" :  \"" << flat_array_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"flat_array_q0\" :  \"" << flat_array_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_address0\" :  \"" << prediction_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_ce0\" :  \"" << prediction_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_we0\" :  \"" << prediction_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_d0\" :  \"" << prediction_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_address1\" :  \"" << prediction_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_ce1\" :  \"" << prediction_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_we1\" :  \"" << prediction_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_d1\" :  \"" << prediction_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

