// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module max_pool_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_q0,
        conv_out_V_address1,
        conv_out_V_ce1,
        conv_out_V_q1,
        max_pool_out_V_address0,
        max_pool_out_V_ce0,
        max_pool_out_V_we0,
        max_pool_out_V_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_pp0_stage0 = 12'd2;
parameter    ap_ST_fsm_pp0_stage1 = 12'd4;
parameter    ap_ST_fsm_pp0_stage2 = 12'd8;
parameter    ap_ST_fsm_pp0_stage3 = 12'd16;
parameter    ap_ST_fsm_pp0_stage4 = 12'd32;
parameter    ap_ST_fsm_pp0_stage5 = 12'd64;
parameter    ap_ST_fsm_pp0_stage6 = 12'd128;
parameter    ap_ST_fsm_pp0_stage7 = 12'd256;
parameter    ap_ST_fsm_pp0_stage8 = 12'd512;
parameter    ap_ST_fsm_pp0_stage9 = 12'd1024;
parameter    ap_ST_fsm_state13 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] conv_out_V_address0;
output   conv_out_V_ce0;
input  [13:0] conv_out_V_q0;
output  [10:0] conv_out_V_address1;
output   conv_out_V_ce1;
input  [13:0] conv_out_V_q1;
output  [8:0] max_pool_out_V_address0;
output   max_pool_out_V_ce0;
output   max_pool_out_V_we0;
output  [13:0] max_pool_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] conv_out_V_address0;
reg conv_out_V_ce0;
reg[10:0] conv_out_V_address1;
reg conv_out_V_ce1;
reg[8:0] max_pool_out_V_address0;
reg max_pool_out_V_ce0;
reg max_pool_out_V_we0;
reg[13:0] max_pool_out_V_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_322;
reg   [4:0] f_0_reg_333;
reg   [2:0] r_0_reg_344;
wire   [0:0] icmp_ln10_fu_367_p2;
reg   [0:0] icmp_ln10_reg_1236;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln10_fu_373_p2;
reg   [6:0] add_ln10_reg_1240;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln29_20_fu_391_p3;
reg   [2:0] select_ln29_20_reg_1245;
wire   [4:0] select_ln29_21_fu_399_p3;
reg   [4:0] select_ln29_21_reg_1252;
wire   [3:0] shl_ln_fu_407_p3;
reg   [3:0] shl_ln_reg_1262;
wire   [11:0] trunc_ln1494_fu_425_p1;
reg   [11:0] trunc_ln1494_reg_1267;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [12:0] select_ln29_fu_579_p3;
reg   [12:0] select_ln29_reg_1299;
wire   [11:0] mul_ln1494_1_fu_596_p2;
reg   [11:0] mul_ln1494_1_reg_1304;
wire   [12:0] select_ln29_4_fu_606_p3;
reg   [12:0] select_ln29_4_reg_1318;
wire   [11:0] zext_ln14_fu_614_p1;
reg   [11:0] zext_ln14_reg_1323;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [12:0] select_ln29_8_fu_674_p3;
reg   [12:0] select_ln29_8_reg_1351;
wire   [12:0] select_ln29_12_fu_686_p3;
reg   [12:0] select_ln29_12_reg_1356;
wire   [13:0] select_ln29_1_fu_703_p3;
reg   [13:0] select_ln29_1_reg_1361;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [12:0] select_ln29_16_fu_739_p3;
reg   [12:0] select_ln29_16_reg_1377;
wire   [9:0] zext_ln14_1_fu_747_p1;
reg   [9:0] zext_ln14_1_reg_1382;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] add_ln203_fu_772_p2;
reg   [9:0] add_ln203_reg_1390;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [13:0] select_ln29_6_fu_899_p3;
reg   [13:0] select_ln29_6_reg_1418;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [13:0] select_ln29_9_fu_974_p3;
reg   [13:0] select_ln29_9_reg_1434;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [13:0] select_ln29_14_fu_1107_p3;
reg   [13:0] select_ln29_14_reg_1460;
wire   [9:0] add_ln203_9_fu_1135_p2;
reg   [9:0] add_ln203_9_reg_1466;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [13:0] select_ln29_17_fu_1192_p3;
reg   [13:0] select_ln29_17_reg_1481;
wire   [2:0] r_fu_1200_p2;
reg   [2:0] r_reg_1487;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage9_subdone;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_326_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_f_0_phi_fu_337_p4;
reg   [2:0] ap_phi_mux_r_0_phi_fu_348_p4;
wire  signed [63:0] sext_ln1494_fu_457_p1;
wire   [63:0] zext_ln1494_1_fu_496_p1;
wire   [63:0] zext_ln1494_2_fu_533_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1494_3_fu_570_p1;
wire  signed [63:0] sext_ln1494_1_fu_628_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1494_4_fu_665_p1;
wire  signed [63:0] sext_ln1494_6_fu_715_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln1494_7_fu_730_p1;
wire   [63:0] zext_ln203_2_fu_784_p1;
wire    ap_block_pp0_stage4;
wire  signed [63:0] sext_ln1494_2_fu_799_p1;
wire  signed [63:0] sext_ln1494_8_fu_814_p1;
wire  signed [63:0] sext_ln1494_3_fu_856_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] sext_ln1494_9_fu_871_p1;
wire  signed [63:0] sext_ln203_fu_917_p1;
wire    ap_block_pp0_stage6;
wire  signed [63:0] sext_ln1494_10_fu_932_p1;
wire  signed [63:0] sext_ln1494_11_fu_947_p1;
wire  signed [63:0] sext_ln203_1_fu_992_p1;
wire    ap_block_pp0_stage7;
wire  signed [63:0] sext_ln1494_4_fu_1007_p1;
wire  signed [63:0] sext_ln1494_12_fu_1022_p1;
wire  signed [63:0] sext_ln1494_5_fu_1064_p1;
wire    ap_block_pp0_stage8;
wire  signed [63:0] sext_ln1494_13_fu_1079_p1;
wire  signed [63:0] sext_ln203_2_fu_1125_p1;
wire    ap_block_pp0_stage9;
wire  signed [63:0] sext_ln1494_14_fu_1150_p1;
wire  signed [63:0] sext_ln1494_15_fu_1165_p1;
wire  signed [63:0] sext_ln203_3_fu_1205_p1;
wire   [13:0] select_ln29_3_fu_837_p3;
wire   [13:0] select_ln29_7_fu_957_p3;
wire   [13:0] select_ln29_11_fu_1045_p3;
wire   [13:0] select_ln29_15_fu_1175_p3;
wire   [13:0] select_ln29_19_fu_1227_p3;
wire   [0:0] icmp_ln13_fu_385_p2;
wire   [4:0] f_fu_379_p2;
wire   [3:0] mul_ln1494_fu_419_p1;
wire   [12:0] mul_ln1494_fu_419_p2;
wire   [4:0] trunc_ln1494_1_fu_429_p1;
wire   [7:0] tmp_3_fu_439_p4;
wire   [4:0] or_ln1494_fu_433_p2;
wire   [12:0] tmp_4_fu_449_p3;
wire   [11:0] add_ln1494_1_fu_462_p2;
wire   [4:0] trunc_ln1494_2_fu_468_p1;
wire   [6:0] tmp_5_fu_478_p4;
wire   [4:0] or_ln1494_2_fu_472_p2;
wire   [11:0] tmp_6_fu_488_p3;
wire   [11:0] add_ln1494_4_fu_501_p2;
wire   [4:0] trunc_ln1494_3_fu_506_p1;
wire   [6:0] tmp_7_fu_515_p4;
wire   [4:0] or_ln1494_3_fu_510_p2;
wire   [11:0] tmp_8_fu_525_p3;
wire   [11:0] add_ln1494_7_fu_538_p2;
wire   [4:0] trunc_ln1494_4_fu_543_p1;
wire   [6:0] tmp_9_fu_552_p4;
wire   [4:0] or_ln1494_4_fu_547_p2;
wire   [11:0] tmp_10_fu_562_p3;
wire   [0:0] grp_fu_355_p2;
wire   [12:0] trunc_ln1494_6_fu_575_p1;
wire   [3:0] or_ln26_fu_587_p2;
wire   [3:0] mul_ln1494_1_fu_596_p1;
wire   [0:0] grp_fu_361_p2;
wire   [12:0] trunc_ln1494_7_fu_602_p1;
wire   [11:0] or_ln1494_1_fu_617_p2;
wire   [11:0] add_ln1494_fu_622_p2;
wire   [11:0] add_ln1494_10_fu_633_p2;
wire   [4:0] trunc_ln1494_5_fu_638_p1;
wire   [6:0] tmp_11_fu_647_p4;
wire   [4:0] or_ln1494_5_fu_642_p2;
wire   [11:0] tmp_12_fu_657_p3;
wire   [12:0] trunc_ln1494_8_fu_670_p1;
wire   [12:0] trunc_ln1494_9_fu_682_p1;
wire   [13:0] zext_ln29_fu_694_p1;
wire   [0:0] icmp_ln1494_1_fu_697_p2;
wire   [11:0] add_ln1494_13_fu_711_p2;
wire   [11:0] add_ln1494_14_fu_720_p2;
wire   [11:0] add_ln1494_15_fu_725_p2;
wire   [12:0] trunc_ln1494_10_fu_735_p1;
wire   [8:0] tmp_fu_750_p3;
wire   [6:0] tmp_2_fu_761_p3;
wire   [9:0] zext_ln203_fu_757_p1;
wire   [9:0] zext_ln203_1_fu_768_p1;
wire   [9:0] add_ln203_1_fu_778_p2;
wire   [11:0] add_ln1494_2_fu_789_p2;
wire   [11:0] add_ln1494_3_fu_794_p2;
wire   [11:0] add_ln1494_16_fu_804_p2;
wire   [11:0] add_ln1494_17_fu_809_p2;
wire   [0:0] icmp_ln1494_2_fu_819_p2;
wire   [13:0] select_ln29_2_fu_824_p3;
wire   [0:0] icmp_ln1494_3_fu_831_p2;
wire   [11:0] add_ln1494_5_fu_846_p2;
wire   [11:0] add_ln1494_6_fu_851_p2;
wire   [11:0] add_ln1494_18_fu_861_p2;
wire   [11:0] add_ln1494_19_fu_866_p2;
wire   [13:0] zext_ln29_1_fu_876_p1;
wire   [0:0] icmp_ln1494_5_fu_879_p2;
wire   [13:0] select_ln29_5_fu_885_p3;
wire   [0:0] icmp_ln1494_6_fu_893_p2;
wire   [9:0] add_ln203_2_fu_907_p2;
wire   [9:0] add_ln203_3_fu_912_p2;
wire   [11:0] add_ln1494_20_fu_922_p2;
wire   [11:0] add_ln1494_21_fu_927_p2;
wire   [11:0] add_ln1494_22_fu_937_p2;
wire   [11:0] add_ln1494_23_fu_942_p2;
wire   [0:0] icmp_ln1494_7_fu_952_p2;
wire   [13:0] zext_ln29_2_fu_965_p1;
wire   [0:0] icmp_ln1494_9_fu_968_p2;
wire   [9:0] add_ln203_4_fu_982_p2;
wire   [9:0] add_ln203_5_fu_987_p2;
wire   [11:0] add_ln1494_8_fu_997_p2;
wire   [11:0] add_ln1494_9_fu_1002_p2;
wire   [11:0] add_ln1494_24_fu_1012_p2;
wire   [11:0] add_ln1494_25_fu_1017_p2;
wire   [0:0] icmp_ln1494_10_fu_1027_p2;
wire   [13:0] select_ln29_10_fu_1032_p3;
wire   [0:0] icmp_ln1494_11_fu_1039_p2;
wire   [11:0] add_ln1494_11_fu_1054_p2;
wire   [11:0] add_ln1494_12_fu_1059_p2;
wire   [11:0] add_ln1494_26_fu_1069_p2;
wire   [11:0] add_ln1494_27_fu_1074_p2;
wire   [13:0] zext_ln29_3_fu_1084_p1;
wire   [0:0] icmp_ln1494_13_fu_1087_p2;
wire   [13:0] select_ln29_13_fu_1093_p3;
wire   [0:0] icmp_ln1494_14_fu_1101_p2;
wire   [9:0] add_ln203_6_fu_1115_p2;
wire   [9:0] add_ln203_7_fu_1120_p2;
wire   [9:0] add_ln203_8_fu_1130_p2;
wire   [11:0] add_ln1494_28_fu_1140_p2;
wire   [11:0] add_ln1494_29_fu_1145_p2;
wire   [11:0] add_ln1494_30_fu_1155_p2;
wire   [11:0] add_ln1494_31_fu_1160_p2;
wire   [0:0] icmp_ln1494_15_fu_1170_p2;
wire   [13:0] zext_ln29_4_fu_1183_p1;
wire   [0:0] icmp_ln1494_17_fu_1186_p2;
wire   [0:0] icmp_ln1494_18_fu_1209_p2;
wire   [13:0] select_ln29_18_fu_1214_p3;
wire   [0:0] icmp_ln1494_19_fu_1221_p2;
wire    ap_CS_fsm_state13;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [11:0] mul_ln1494_1_fu_596_p10;
wire   [12:0] mul_ln1494_fu_419_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_subdone) & (1'b1 == ap_CS_fsm_pp0_stage9)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        f_0_reg_333 <= select_ln29_21_reg_1252;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_333 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_322 <= add_ln10_reg_1240;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_322 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_reg_344 <= r_reg_1487;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_344 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln10_reg_1240 <= add_ln10_fu_373_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln203_9_reg_1466 <= add_ln203_9_fu_1135_p2;
        select_ln29_17_reg_1481 <= select_ln29_17_fu_1192_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln203_reg_1390[9 : 4] <= add_ln203_fu_772_p2[9 : 4];
        zext_ln14_1_reg_1382[4 : 0] <= zext_ln14_1_fu_747_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln10_reg_1236 <= icmp_ln10_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln1494_1_reg_1304[11 : 1] <= mul_ln1494_1_fu_596_p2[11 : 1];
        select_ln29_4_reg_1318 <= select_ln29_4_fu_606_p3;
        select_ln29_reg_1299 <= select_ln29_fu_579_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        r_reg_1487 <= r_fu_1200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln29_12_reg_1356 <= select_ln29_12_fu_686_p3;
        select_ln29_8_reg_1351 <= select_ln29_8_fu_674_p3;
        zext_ln14_reg_1323[4 : 0] <= zext_ln14_fu_614_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        select_ln29_14_reg_1460 <= select_ln29_14_fu_1107_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        select_ln29_16_reg_1377 <= select_ln29_16_fu_739_p3;
        select_ln29_1_reg_1361 <= select_ln29_1_fu_703_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_367_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln29_20_reg_1245 <= select_ln29_20_fu_391_p3;
        shl_ln_reg_1262[3 : 1] <= shl_ln_fu_407_p3[3 : 1];
        trunc_ln1494_reg_1267[11 : 1] <= trunc_ln1494_fu_425_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_367_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln29_21_reg_1252 <= select_ln29_21_fu_399_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        select_ln29_6_reg_1418 <= select_ln29_6_fu_899_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        select_ln29_9_reg_1434 <= select_ln29_9_fu_974_p3;
    end
end

always @ (*) begin
    if ((icmp_ln10_fu_367_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_f_0_phi_fu_337_p4 = select_ln29_21_reg_1252;
    end else begin
        ap_phi_mux_f_0_phi_fu_337_p4 = f_0_reg_333;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_326_p4 = add_ln10_reg_1240;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_326_p4 = indvar_flatten_reg_322;
    end
end

always @ (*) begin
    if (((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_0_phi_fu_348_p4 = r_reg_1487;
    end else begin
        ap_phi_mux_r_0_phi_fu_348_p4 = r_0_reg_344;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_out_V_address0 = sext_ln1494_14_fu_1150_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_out_V_address0 = sext_ln1494_13_fu_1079_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_out_V_address0 = sext_ln1494_4_fu_1007_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_out_V_address0 = sext_ln1494_10_fu_932_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_out_V_address0 = sext_ln1494_9_fu_871_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_V_address0 = sext_ln1494_2_fu_799_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_V_address0 = sext_ln1494_6_fu_715_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_out_V_address0 = sext_ln1494_1_fu_628_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_V_address0 = zext_ln1494_2_fu_533_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_V_address0 = sext_ln1494_fu_457_p1;
        end else begin
            conv_out_V_address0 = 'bx;
        end
    end else begin
        conv_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_out_V_address1 = sext_ln1494_15_fu_1165_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_out_V_address1 = sext_ln1494_5_fu_1064_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_out_V_address1 = sext_ln1494_12_fu_1022_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_out_V_address1 = sext_ln1494_11_fu_947_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_out_V_address1 = sext_ln1494_3_fu_856_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_V_address1 = sext_ln1494_8_fu_814_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_V_address1 = sext_ln1494_7_fu_730_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_out_V_address1 = zext_ln1494_4_fu_665_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_V_address1 = zext_ln1494_3_fu_570_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_V_address1 = zext_ln1494_1_fu_496_p1;
        end else begin
            conv_out_V_address1 = 'bx;
        end
    end else begin
        conv_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv_out_V_ce1 = 1'b1;
    end else begin
        conv_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        max_pool_out_V_address0 = sext_ln203_3_fu_1205_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        max_pool_out_V_address0 = sext_ln203_2_fu_1125_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        max_pool_out_V_address0 = sext_ln203_1_fu_992_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        max_pool_out_V_address0 = sext_ln203_fu_917_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        max_pool_out_V_address0 = zext_ln203_2_fu_784_p1;
    end else begin
        max_pool_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        max_pool_out_V_ce0 = 1'b1;
    end else begin
        max_pool_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        max_pool_out_V_d0 = select_ln29_19_fu_1227_p3;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        max_pool_out_V_d0 = select_ln29_15_fu_1175_p3;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        max_pool_out_V_d0 = select_ln29_11_fu_1045_p3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        max_pool_out_V_d0 = select_ln29_7_fu_957_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        max_pool_out_V_d0 = select_ln29_3_fu_837_p3;
    end else begin
        max_pool_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln10_reg_1236 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln10_reg_1236 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln10_reg_1236 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1236 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        max_pool_out_V_we0 = 1'b1;
    end else begin
        max_pool_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln10_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln10_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_373_p2 = (ap_phi_mux_indvar_flatten_phi_fu_326_p4 + 7'd1);

assign add_ln1494_10_fu_633_p2 = (12'd128 + trunc_ln1494_reg_1267);

assign add_ln1494_11_fu_1054_p2 = (12'd144 + trunc_ln1494_reg_1267);

assign add_ln1494_12_fu_1059_p2 = (zext_ln14_reg_1323 + add_ln1494_11_fu_1054_p2);

assign add_ln1494_13_fu_711_p2 = (zext_ln14_reg_1323 + mul_ln1494_1_reg_1304);

assign add_ln1494_14_fu_720_p2 = (12'd16 + mul_ln1494_1_reg_1304);

assign add_ln1494_15_fu_725_p2 = (zext_ln14_reg_1323 + add_ln1494_14_fu_720_p2);

assign add_ln1494_16_fu_804_p2 = (12'd32 + mul_ln1494_1_reg_1304);

assign add_ln1494_17_fu_809_p2 = (zext_ln14_reg_1323 + add_ln1494_16_fu_804_p2);

assign add_ln1494_18_fu_861_p2 = (12'd48 + mul_ln1494_1_reg_1304);

assign add_ln1494_19_fu_866_p2 = (zext_ln14_reg_1323 + add_ln1494_18_fu_861_p2);

assign add_ln1494_1_fu_462_p2 = (12'd32 + trunc_ln1494_fu_425_p1);

assign add_ln1494_20_fu_922_p2 = (12'd64 + mul_ln1494_1_reg_1304);

assign add_ln1494_21_fu_927_p2 = (zext_ln14_reg_1323 + add_ln1494_20_fu_922_p2);

assign add_ln1494_22_fu_937_p2 = (12'd80 + mul_ln1494_1_reg_1304);

assign add_ln1494_23_fu_942_p2 = (zext_ln14_reg_1323 + add_ln1494_22_fu_937_p2);

assign add_ln1494_24_fu_1012_p2 = (12'd96 + mul_ln1494_1_reg_1304);

assign add_ln1494_25_fu_1017_p2 = (zext_ln14_reg_1323 + add_ln1494_24_fu_1012_p2);

assign add_ln1494_26_fu_1069_p2 = (12'd112 + mul_ln1494_1_reg_1304);

assign add_ln1494_27_fu_1074_p2 = (zext_ln14_reg_1323 + add_ln1494_26_fu_1069_p2);

assign add_ln1494_28_fu_1140_p2 = (12'd128 + mul_ln1494_1_reg_1304);

assign add_ln1494_29_fu_1145_p2 = (zext_ln14_reg_1323 + add_ln1494_28_fu_1140_p2);

assign add_ln1494_2_fu_789_p2 = (12'd48 + trunc_ln1494_reg_1267);

assign add_ln1494_30_fu_1155_p2 = (12'd144 + mul_ln1494_1_reg_1304);

assign add_ln1494_31_fu_1160_p2 = (zext_ln14_reg_1323 + add_ln1494_30_fu_1155_p2);

assign add_ln1494_3_fu_794_p2 = (zext_ln14_reg_1323 + add_ln1494_2_fu_789_p2);

assign add_ln1494_4_fu_501_p2 = (12'd64 + trunc_ln1494_reg_1267);

assign add_ln1494_5_fu_846_p2 = (12'd80 + trunc_ln1494_reg_1267);

assign add_ln1494_6_fu_851_p2 = (zext_ln14_reg_1323 + add_ln1494_5_fu_846_p2);

assign add_ln1494_7_fu_538_p2 = (12'd96 + trunc_ln1494_reg_1267);

assign add_ln1494_8_fu_997_p2 = (12'd112 + trunc_ln1494_reg_1267);

assign add_ln1494_9_fu_1002_p2 = (zext_ln14_reg_1323 + add_ln1494_8_fu_997_p2);

assign add_ln1494_fu_622_p2 = (zext_ln14_fu_614_p1 + or_ln1494_1_fu_617_p2);

assign add_ln203_1_fu_778_p2 = (zext_ln14_1_fu_747_p1 + add_ln203_fu_772_p2);

assign add_ln203_2_fu_907_p2 = (10'd16 + add_ln203_reg_1390);

assign add_ln203_3_fu_912_p2 = (zext_ln14_1_reg_1382 + add_ln203_2_fu_907_p2);

assign add_ln203_4_fu_982_p2 = (10'd32 + add_ln203_reg_1390);

assign add_ln203_5_fu_987_p2 = (zext_ln14_1_reg_1382 + add_ln203_4_fu_982_p2);

assign add_ln203_6_fu_1115_p2 = (10'd48 + add_ln203_reg_1390);

assign add_ln203_7_fu_1120_p2 = (zext_ln14_1_reg_1382 + add_ln203_6_fu_1115_p2);

assign add_ln203_8_fu_1130_p2 = (10'd64 + add_ln203_reg_1390);

assign add_ln203_9_fu_1135_p2 = (zext_ln14_1_reg_1382 + add_ln203_8_fu_1130_p2);

assign add_ln203_fu_772_p2 = (zext_ln203_fu_757_p1 + zext_ln203_1_fu_768_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign f_fu_379_p2 = (5'd1 + ap_phi_mux_f_0_phi_fu_337_p4);

assign grp_fu_355_p2 = (($signed(conv_out_V_q0) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign grp_fu_361_p2 = (($signed(conv_out_V_q1) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln10_fu_367_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_326_p4 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_385_p2 = ((ap_phi_mux_r_0_phi_fu_348_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1494_10_fu_1027_p2 = (($signed(conv_out_V_q0) > $signed(select_ln29_9_reg_1434)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_1039_p2 = (($signed(conv_out_V_q1) > $signed(select_ln29_10_fu_1032_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1087_p2 = (($signed(conv_out_V_q0) > $signed(zext_ln29_3_fu_1084_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_1101_p2 = (($signed(conv_out_V_q1) > $signed(select_ln29_13_fu_1093_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_1170_p2 = (($signed(conv_out_V_q0) > $signed(select_ln29_14_reg_1460)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_1186_p2 = (($signed(conv_out_V_q1) > $signed(zext_ln29_4_fu_1183_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_1209_p2 = (($signed(conv_out_V_q0) > $signed(select_ln29_17_reg_1481)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_1221_p2 = (($signed(conv_out_V_q1) > $signed(select_ln29_18_fu_1214_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_697_p2 = (($signed(conv_out_V_q0) > $signed(zext_ln29_fu_694_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_819_p2 = (($signed(conv_out_V_q0) > $signed(select_ln29_1_reg_1361)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_831_p2 = (($signed(conv_out_V_q1) > $signed(select_ln29_2_fu_824_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_879_p2 = (($signed(conv_out_V_q0) > $signed(zext_ln29_1_fu_876_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_893_p2 = (($signed(conv_out_V_q1) > $signed(select_ln29_5_fu_885_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_952_p2 = (($signed(conv_out_V_q0) > $signed(select_ln29_6_reg_1418)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_968_p2 = (($signed(conv_out_V_q1) > $signed(zext_ln29_2_fu_965_p1)) ? 1'b1 : 1'b0);

assign mul_ln1494_1_fu_596_p1 = mul_ln1494_1_fu_596_p10;

assign mul_ln1494_1_fu_596_p10 = or_ln26_fu_587_p2;

assign mul_ln1494_1_fu_596_p2 = (12'd176 * mul_ln1494_1_fu_596_p1);

assign mul_ln1494_fu_419_p1 = mul_ln1494_fu_419_p10;

assign mul_ln1494_fu_419_p10 = shl_ln_fu_407_p3;

assign mul_ln1494_fu_419_p2 = (13'd176 * mul_ln1494_fu_419_p1);

assign or_ln1494_1_fu_617_p2 = (trunc_ln1494_reg_1267 | 12'd16);

assign or_ln1494_2_fu_472_p2 = (trunc_ln1494_2_fu_468_p1 | select_ln29_21_fu_399_p3);

assign or_ln1494_3_fu_510_p2 = (trunc_ln1494_3_fu_506_p1 | select_ln29_21_reg_1252);

assign or_ln1494_4_fu_547_p2 = (trunc_ln1494_4_fu_543_p1 | select_ln29_21_reg_1252);

assign or_ln1494_5_fu_642_p2 = (trunc_ln1494_5_fu_638_p1 | select_ln29_21_reg_1252);

assign or_ln1494_fu_433_p2 = (trunc_ln1494_1_fu_429_p1 | select_ln29_21_fu_399_p3);

assign or_ln26_fu_587_p2 = (shl_ln_reg_1262 | 4'd1);

assign r_fu_1200_p2 = (3'd1 + select_ln29_20_reg_1245);

assign select_ln29_10_fu_1032_p3 = ((icmp_ln1494_10_fu_1027_p2[0:0] === 1'b1) ? conv_out_V_q0 : select_ln29_9_reg_1434);

assign select_ln29_11_fu_1045_p3 = ((icmp_ln1494_11_fu_1039_p2[0:0] === 1'b1) ? conv_out_V_q1 : select_ln29_10_fu_1032_p3);

assign select_ln29_12_fu_686_p3 = ((grp_fu_361_p2[0:0] === 1'b1) ? trunc_ln1494_9_fu_682_p1 : 13'd0);

assign select_ln29_13_fu_1093_p3 = ((icmp_ln1494_13_fu_1087_p2[0:0] === 1'b1) ? conv_out_V_q0 : zext_ln29_3_fu_1084_p1);

assign select_ln29_14_fu_1107_p3 = ((icmp_ln1494_14_fu_1101_p2[0:0] === 1'b1) ? conv_out_V_q1 : select_ln29_13_fu_1093_p3);

assign select_ln29_15_fu_1175_p3 = ((icmp_ln1494_15_fu_1170_p2[0:0] === 1'b1) ? conv_out_V_q0 : select_ln29_14_reg_1460);

assign select_ln29_16_fu_739_p3 = ((grp_fu_361_p2[0:0] === 1'b1) ? trunc_ln1494_10_fu_735_p1 : 13'd0);

assign select_ln29_17_fu_1192_p3 = ((icmp_ln1494_17_fu_1186_p2[0:0] === 1'b1) ? conv_out_V_q1 : zext_ln29_4_fu_1183_p1);

assign select_ln29_18_fu_1214_p3 = ((icmp_ln1494_18_fu_1209_p2[0:0] === 1'b1) ? conv_out_V_q0 : select_ln29_17_reg_1481);

assign select_ln29_19_fu_1227_p3 = ((icmp_ln1494_19_fu_1221_p2[0:0] === 1'b1) ? conv_out_V_q1 : select_ln29_18_fu_1214_p3);

assign select_ln29_1_fu_703_p3 = ((icmp_ln1494_1_fu_697_p2[0:0] === 1'b1) ? conv_out_V_q0 : zext_ln29_fu_694_p1);

assign select_ln29_20_fu_391_p3 = ((icmp_ln13_fu_385_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_r_0_phi_fu_348_p4);

assign select_ln29_21_fu_399_p3 = ((icmp_ln13_fu_385_p2[0:0] === 1'b1) ? f_fu_379_p2 : ap_phi_mux_f_0_phi_fu_337_p4);

assign select_ln29_2_fu_824_p3 = ((icmp_ln1494_2_fu_819_p2[0:0] === 1'b1) ? conv_out_V_q0 : select_ln29_1_reg_1361);

assign select_ln29_3_fu_837_p3 = ((icmp_ln1494_3_fu_831_p2[0:0] === 1'b1) ? conv_out_V_q1 : select_ln29_2_fu_824_p3);

assign select_ln29_4_fu_606_p3 = ((grp_fu_361_p2[0:0] === 1'b1) ? trunc_ln1494_7_fu_602_p1 : 13'd0);

assign select_ln29_5_fu_885_p3 = ((icmp_ln1494_5_fu_879_p2[0:0] === 1'b1) ? conv_out_V_q0 : zext_ln29_1_fu_876_p1);

assign select_ln29_6_fu_899_p3 = ((icmp_ln1494_6_fu_893_p2[0:0] === 1'b1) ? conv_out_V_q1 : select_ln29_5_fu_885_p3);

assign select_ln29_7_fu_957_p3 = ((icmp_ln1494_7_fu_952_p2[0:0] === 1'b1) ? conv_out_V_q0 : select_ln29_6_reg_1418);

assign select_ln29_8_fu_674_p3 = ((grp_fu_355_p2[0:0] === 1'b1) ? trunc_ln1494_8_fu_670_p1 : 13'd0);

assign select_ln29_9_fu_974_p3 = ((icmp_ln1494_9_fu_968_p2[0:0] === 1'b1) ? conv_out_V_q1 : zext_ln29_2_fu_965_p1);

assign select_ln29_fu_579_p3 = ((grp_fu_355_p2[0:0] === 1'b1) ? trunc_ln1494_6_fu_575_p1 : 13'd0);

assign sext_ln1494_10_fu_932_p1 = $signed(add_ln1494_21_fu_927_p2);

assign sext_ln1494_11_fu_947_p1 = $signed(add_ln1494_23_fu_942_p2);

assign sext_ln1494_12_fu_1022_p1 = $signed(add_ln1494_25_fu_1017_p2);

assign sext_ln1494_13_fu_1079_p1 = $signed(add_ln1494_27_fu_1074_p2);

assign sext_ln1494_14_fu_1150_p1 = $signed(add_ln1494_29_fu_1145_p2);

assign sext_ln1494_15_fu_1165_p1 = $signed(add_ln1494_31_fu_1160_p2);

assign sext_ln1494_1_fu_628_p1 = $signed(add_ln1494_fu_622_p2);

assign sext_ln1494_2_fu_799_p1 = $signed(add_ln1494_3_fu_794_p2);

assign sext_ln1494_3_fu_856_p1 = $signed(add_ln1494_6_fu_851_p2);

assign sext_ln1494_4_fu_1007_p1 = $signed(add_ln1494_9_fu_1002_p2);

assign sext_ln1494_5_fu_1064_p1 = $signed(add_ln1494_12_fu_1059_p2);

assign sext_ln1494_6_fu_715_p1 = $signed(add_ln1494_13_fu_711_p2);

assign sext_ln1494_7_fu_730_p1 = $signed(add_ln1494_15_fu_725_p2);

assign sext_ln1494_8_fu_814_p1 = $signed(add_ln1494_17_fu_809_p2);

assign sext_ln1494_9_fu_871_p1 = $signed(add_ln1494_19_fu_866_p2);

assign sext_ln1494_fu_457_p1 = $signed(tmp_4_fu_449_p3);

assign sext_ln203_1_fu_992_p1 = $signed(add_ln203_5_fu_987_p2);

assign sext_ln203_2_fu_1125_p1 = $signed(add_ln203_7_fu_1120_p2);

assign sext_ln203_3_fu_1205_p1 = $signed(add_ln203_9_reg_1466);

assign sext_ln203_fu_917_p1 = $signed(add_ln203_3_fu_912_p2);

assign shl_ln_fu_407_p3 = {{select_ln29_20_fu_391_p3}, {1'd0}};

assign tmp_10_fu_562_p3 = {{tmp_9_fu_552_p4}, {or_ln1494_4_fu_547_p2}};

assign tmp_11_fu_647_p4 = {{add_ln1494_10_fu_633_p2[11:5]}};

assign tmp_12_fu_657_p3 = {{tmp_11_fu_647_p4}, {or_ln1494_5_fu_642_p2}};

assign tmp_2_fu_761_p3 = {{select_ln29_20_reg_1245}, {4'd0}};

assign tmp_3_fu_439_p4 = {{mul_ln1494_fu_419_p2[12:5]}};

assign tmp_4_fu_449_p3 = {{tmp_3_fu_439_p4}, {or_ln1494_fu_433_p2}};

assign tmp_5_fu_478_p4 = {{add_ln1494_1_fu_462_p2[11:5]}};

assign tmp_6_fu_488_p3 = {{tmp_5_fu_478_p4}, {or_ln1494_2_fu_472_p2}};

assign tmp_7_fu_515_p4 = {{add_ln1494_4_fu_501_p2[11:5]}};

assign tmp_8_fu_525_p3 = {{tmp_7_fu_515_p4}, {or_ln1494_3_fu_510_p2}};

assign tmp_9_fu_552_p4 = {{add_ln1494_7_fu_538_p2[11:5]}};

assign tmp_fu_750_p3 = {{select_ln29_20_reg_1245}, {6'd0}};

assign trunc_ln1494_10_fu_735_p1 = conv_out_V_q1[12:0];

assign trunc_ln1494_1_fu_429_p1 = mul_ln1494_fu_419_p2[4:0];

assign trunc_ln1494_2_fu_468_p1 = add_ln1494_1_fu_462_p2[4:0];

assign trunc_ln1494_3_fu_506_p1 = add_ln1494_4_fu_501_p2[4:0];

assign trunc_ln1494_4_fu_543_p1 = add_ln1494_7_fu_538_p2[4:0];

assign trunc_ln1494_5_fu_638_p1 = add_ln1494_10_fu_633_p2[4:0];

assign trunc_ln1494_6_fu_575_p1 = conv_out_V_q0[12:0];

assign trunc_ln1494_7_fu_602_p1 = conv_out_V_q1[12:0];

assign trunc_ln1494_8_fu_670_p1 = conv_out_V_q0[12:0];

assign trunc_ln1494_9_fu_682_p1 = conv_out_V_q1[12:0];

assign trunc_ln1494_fu_425_p1 = mul_ln1494_fu_419_p2[11:0];

assign zext_ln1494_1_fu_496_p1 = tmp_6_fu_488_p3;

assign zext_ln1494_2_fu_533_p1 = tmp_8_fu_525_p3;

assign zext_ln1494_3_fu_570_p1 = tmp_10_fu_562_p3;

assign zext_ln1494_4_fu_665_p1 = tmp_12_fu_657_p3;

assign zext_ln14_1_fu_747_p1 = select_ln29_21_reg_1252;

assign zext_ln14_fu_614_p1 = select_ln29_21_reg_1252;

assign zext_ln203_1_fu_768_p1 = tmp_2_fu_761_p3;

assign zext_ln203_2_fu_784_p1 = add_ln203_1_fu_778_p2;

assign zext_ln203_fu_757_p1 = tmp_fu_750_p3;

assign zext_ln29_1_fu_876_p1 = select_ln29_4_reg_1318;

assign zext_ln29_2_fu_965_p1 = select_ln29_8_reg_1351;

assign zext_ln29_3_fu_1084_p1 = select_ln29_12_reg_1356;

assign zext_ln29_4_fu_1183_p1 = select_ln29_16_reg_1377;

assign zext_ln29_fu_694_p1 = select_ln29_reg_1299;

always @ (posedge ap_clk) begin
    shl_ln_reg_1262[0] <= 1'b0;
    trunc_ln1494_reg_1267[0] <= 1'b0;
    mul_ln1494_1_reg_1304[0] <= 1'b0;
    zext_ln14_reg_1323[11:5] <= 7'b0000000;
    zext_ln14_1_reg_1382[9:5] <= 5'b00000;
    add_ln203_reg_1390[3:0] <= 4'b0000;
end

endmodule //max_pool_2
