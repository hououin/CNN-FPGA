-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_out_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv_out_V_ce0 : OUT STD_LOGIC;
    conv_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_V_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv_out_V_ce1 : OUT STD_LOGIC;
    conv_out_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    max_pool_out_V_ce0 : OUT STD_LOGIC;
    max_pool_out_V_we0 : OUT STD_LOGIC;
    max_pool_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of max_pool_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv13_B0 : STD_LOGIC_VECTOR (12 downto 0) := "0000010110000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_20 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_40 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_const_lv12_60 : STD_LOGIC_VECTOR (11 downto 0) := "000001100000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv12_B0 : STD_LOGIC_VECTOR (11 downto 0) := "000010110000";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_80 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv12_30 : STD_LOGIC_VECTOR (11 downto 0) := "000000110000";
    constant ap_const_lv12_50 : STD_LOGIC_VECTOR (11 downto 0) := "000001010000";
    constant ap_const_lv10_10 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_const_lv10_20 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_const_lv12_70 : STD_LOGIC_VECTOR (11 downto 0) := "000001110000";
    constant ap_const_lv12_90 : STD_LOGIC_VECTOR (11 downto 0) := "000010010000";
    constant ap_const_lv10_30 : STD_LOGIC_VECTOR (9 downto 0) := "0000110000";
    constant ap_const_lv10_40 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_322 : STD_LOGIC_VECTOR (6 downto 0);
    signal f_0_reg_333 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_0_reg_344 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln10_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_reg_1236 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln10_fu_373_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln10_reg_1240 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln29_20_fu_391_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_20_reg_1245 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_21_fu_399_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln29_21_reg_1252 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_407_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_reg_1262 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1494_fu_425_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_reg_1267 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal select_ln29_fu_579_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_reg_1299 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln1494_1_fu_596_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1494_1_reg_1304 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln29_4_fu_606_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_4_reg_1318 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln14_fu_614_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_reg_1323 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal select_ln29_8_fu_674_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_8_reg_1351 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_12_fu_686_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_12_reg_1356 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_1_fu_703_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_1_reg_1361 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal select_ln29_16_fu_739_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_16_reg_1377 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln14_1_fu_747_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln14_1_reg_1382 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal add_ln203_fu_772_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_reg_1390 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal select_ln29_6_fu_899_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_6_reg_1418 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal select_ln29_9_fu_974_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_9_reg_1434 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal select_ln29_14_fu_1107_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_14_reg_1460 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln203_9_fu_1135_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_9_reg_1466 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state11_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal select_ln29_17_fu_1192_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_17_reg_1481 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_fu_1200_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_reg_1487 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_326_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_f_0_phi_fu_337_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_r_0_phi_fu_348_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln1494_fu_457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1494_1_fu_496_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1494_2_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1494_3_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_1_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln1494_4_fu_665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_6_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal sext_ln1494_7_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_2_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal sext_ln1494_2_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_8_fu_814_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_3_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal sext_ln1494_9_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal sext_ln1494_10_fu_932_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_11_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_1_fu_992_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal sext_ln1494_4_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_12_fu_1022_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_5_fu_1064_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal sext_ln1494_13_fu_1079_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_2_fu_1125_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal sext_ln1494_14_fu_1150_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1494_15_fu_1165_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_3_fu_1205_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln29_3_fu_837_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_7_fu_957_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_11_fu_1045_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_15_fu_1175_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln29_19_fu_1227_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln13_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_379_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1494_fu_419_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1494_fu_419_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1494_1_fu_429_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_439_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1494_fu_433_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_449_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1494_1_fu_462_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_2_fu_468_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_478_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln1494_2_fu_472_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_488_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_4_fu_501_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_3_fu_506_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_515_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln1494_3_fu_510_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_525_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_7_fu_538_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_4_fu_543_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_552_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln1494_4_fu_547_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_562_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_6_fu_575_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln26_fu_587_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln1494_1_fu_596_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_7_fu_602_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1494_1_fu_617_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_fu_622_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_10_fu_633_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_5_fu_638_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_11_fu_647_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln1494_5_fu_642_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_657_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_8_fu_670_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln1494_9_fu_682_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_fu_694_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_1_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1494_13_fu_711_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_14_fu_720_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_15_fu_725_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1494_10_fu_735_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_750_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_761_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln203_fu_757_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln203_1_fu_768_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_1_fu_778_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1494_2_fu_789_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_3_fu_794_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_16_fu_804_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_17_fu_809_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1494_2_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_2_fu_824_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_3_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1494_5_fu_846_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_6_fu_851_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_18_fu_861_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_19_fu_866_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln29_1_fu_876_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_5_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_5_fu_885_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_6_fu_893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_2_fu_907_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_3_fu_912_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1494_20_fu_922_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_21_fu_927_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_22_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_23_fu_942_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1494_7_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_2_fu_965_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_9_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_4_fu_982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_5_fu_987_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1494_8_fu_997_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_9_fu_1002_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_24_fu_1012_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_25_fu_1017_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1494_10_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_10_fu_1032_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_11_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1494_11_fu_1054_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_12_fu_1059_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_26_fu_1069_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_27_fu_1074_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln29_3_fu_1084_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_13_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_13_fu_1093_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_14_fu_1101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_6_fu_1115_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_7_fu_1120_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln203_8_fu_1130_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1494_28_fu_1140_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_29_fu_1145_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_30_fu_1155_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1494_31_fu_1160_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1494_15_fu_1170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_4_fu_1183_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_17_fu_1186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_18_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_18_fu_1214_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_19_fu_1221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln1494_1_fu_596_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1494_fu_419_p10 : STD_LOGIC_VECTOR (12 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                f_0_reg_333 <= select_ln29_21_reg_1252;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_333 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_322 <= add_ln10_reg_1240;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_322 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                r_0_reg_344 <= r_reg_1487;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_344 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln10_reg_1240 <= add_ln10_fu_373_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                add_ln203_9_reg_1466 <= add_ln203_9_fu_1135_p2;
                select_ln29_17_reg_1481 <= select_ln29_17_fu_1192_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    add_ln203_reg_1390(9 downto 4) <= add_ln203_fu_772_p2(9 downto 4);
                    zext_ln14_1_reg_1382(4 downto 0) <= zext_ln14_1_fu_747_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln10_reg_1236 <= icmp_ln10_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    mul_ln1494_1_reg_1304(11 downto 1) <= mul_ln1494_1_fu_596_p2(11 downto 1);
                select_ln29_4_reg_1318 <= select_ln29_4_fu_606_p3;
                select_ln29_reg_1299 <= select_ln29_fu_579_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                r_reg_1487 <= r_fu_1200_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                select_ln29_12_reg_1356 <= select_ln29_12_fu_686_p3;
                select_ln29_8_reg_1351 <= select_ln29_8_fu_674_p3;
                    zext_ln14_reg_1323(4 downto 0) <= zext_ln14_fu_614_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                select_ln29_14_reg_1460 <= select_ln29_14_fu_1107_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln29_16_reg_1377 <= select_ln29_16_fu_739_p3;
                select_ln29_1_reg_1361 <= select_ln29_1_fu_703_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_367_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln29_20_reg_1245 <= select_ln29_20_fu_391_p3;
                    shl_ln_reg_1262(3 downto 1) <= shl_ln_fu_407_p3(3 downto 1);
                    trunc_ln1494_reg_1267(11 downto 1) <= trunc_ln1494_fu_425_p1(11 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_367_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln29_21_reg_1252 <= select_ln29_21_fu_399_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                select_ln29_6_reg_1418 <= select_ln29_6_fu_899_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                select_ln29_9_reg_1434 <= select_ln29_9_fu_974_p3;
            end if;
        end if;
    end process;
    shl_ln_reg_1262(0) <= '0';
    trunc_ln1494_reg_1267(0) <= '0';
    mul_ln1494_1_reg_1304(0) <= '0';
    zext_ln14_reg_1323(11 downto 5) <= "0000000";
    zext_ln14_1_reg_1382(9 downto 5) <= "00000";
    add_ln203_reg_1390(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln10_fu_367_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln10_fu_367_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln10_fu_367_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln10_fu_373_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_326_p4) + unsigned(ap_const_lv7_1));
    add_ln1494_10_fu_633_p2 <= std_logic_vector(unsigned(ap_const_lv12_80) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_11_fu_1054_p2 <= std_logic_vector(unsigned(ap_const_lv12_90) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_12_fu_1059_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_11_fu_1054_p2));
    add_ln1494_13_fu_711_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_14_fu_720_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_15_fu_725_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_14_fu_720_p2));
    add_ln1494_16_fu_804_p2 <= std_logic_vector(unsigned(ap_const_lv12_20) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_17_fu_809_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_16_fu_804_p2));
    add_ln1494_18_fu_861_p2 <= std_logic_vector(unsigned(ap_const_lv12_30) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_19_fu_866_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_18_fu_861_p2));
    add_ln1494_1_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv12_20) + unsigned(trunc_ln1494_fu_425_p1));
    add_ln1494_20_fu_922_p2 <= std_logic_vector(unsigned(ap_const_lv12_40) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_21_fu_927_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_20_fu_922_p2));
    add_ln1494_22_fu_937_p2 <= std_logic_vector(unsigned(ap_const_lv12_50) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_23_fu_942_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_22_fu_937_p2));
    add_ln1494_24_fu_1012_p2 <= std_logic_vector(unsigned(ap_const_lv12_60) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_25_fu_1017_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_24_fu_1012_p2));
    add_ln1494_26_fu_1069_p2 <= std_logic_vector(unsigned(ap_const_lv12_70) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_27_fu_1074_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_26_fu_1069_p2));
    add_ln1494_28_fu_1140_p2 <= std_logic_vector(unsigned(ap_const_lv12_80) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_29_fu_1145_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_28_fu_1140_p2));
    add_ln1494_2_fu_789_p2 <= std_logic_vector(unsigned(ap_const_lv12_30) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_30_fu_1155_p2 <= std_logic_vector(unsigned(ap_const_lv12_90) + unsigned(mul_ln1494_1_reg_1304));
    add_ln1494_31_fu_1160_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_30_fu_1155_p2));
    add_ln1494_3_fu_794_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_2_fu_789_p2));
    add_ln1494_4_fu_501_p2 <= std_logic_vector(unsigned(ap_const_lv12_40) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_5_fu_846_p2 <= std_logic_vector(unsigned(ap_const_lv12_50) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_6_fu_851_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_5_fu_846_p2));
    add_ln1494_7_fu_538_p2 <= std_logic_vector(unsigned(ap_const_lv12_60) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_8_fu_997_p2 <= std_logic_vector(unsigned(ap_const_lv12_70) + unsigned(trunc_ln1494_reg_1267));
    add_ln1494_9_fu_1002_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1323) + unsigned(add_ln1494_8_fu_997_p2));
    add_ln1494_fu_622_p2 <= std_logic_vector(unsigned(zext_ln14_fu_614_p1) + unsigned(or_ln1494_1_fu_617_p2));
    add_ln203_1_fu_778_p2 <= std_logic_vector(unsigned(zext_ln14_1_fu_747_p1) + unsigned(add_ln203_fu_772_p2));
    add_ln203_2_fu_907_p2 <= std_logic_vector(unsigned(ap_const_lv10_10) + unsigned(add_ln203_reg_1390));
    add_ln203_3_fu_912_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1382) + unsigned(add_ln203_2_fu_907_p2));
    add_ln203_4_fu_982_p2 <= std_logic_vector(unsigned(ap_const_lv10_20) + unsigned(add_ln203_reg_1390));
    add_ln203_5_fu_987_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1382) + unsigned(add_ln203_4_fu_982_p2));
    add_ln203_6_fu_1115_p2 <= std_logic_vector(unsigned(ap_const_lv10_30) + unsigned(add_ln203_reg_1390));
    add_ln203_7_fu_1120_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1382) + unsigned(add_ln203_6_fu_1115_p2));
    add_ln203_8_fu_1130_p2 <= std_logic_vector(unsigned(ap_const_lv10_40) + unsigned(add_ln203_reg_1390));
    add_ln203_9_fu_1135_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1382) + unsigned(add_ln203_8_fu_1130_p2));
    add_ln203_fu_772_p2 <= std_logic_vector(unsigned(zext_ln203_fu_757_p1) + unsigned(zext_ln203_1_fu_768_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_367_p2)
    begin
        if ((icmp_ln10_fu_367_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_337_p4_assign_proc : process(f_0_reg_333, icmp_ln10_reg_1236, ap_CS_fsm_pp0_stage0, select_ln29_21_reg_1252, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_f_0_phi_fu_337_p4 <= select_ln29_21_reg_1252;
        else 
            ap_phi_mux_f_0_phi_fu_337_p4 <= f_0_reg_333;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_326_p4_assign_proc : process(indvar_flatten_reg_322, icmp_ln10_reg_1236, ap_CS_fsm_pp0_stage0, add_ln10_reg_1240, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_326_p4 <= add_ln10_reg_1240;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_326_p4 <= indvar_flatten_reg_322;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_348_p4_assign_proc : process(r_0_reg_344, icmp_ln10_reg_1236, ap_CS_fsm_pp0_stage0, r_reg_1487, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_r_0_phi_fu_348_p4 <= r_reg_1487;
        else 
            ap_phi_mux_r_0_phi_fu_348_p4 <= r_0_reg_344;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0, sext_ln1494_fu_457_p1, zext_ln1494_2_fu_533_p1, ap_block_pp0_stage1, sext_ln1494_1_fu_628_p1, ap_block_pp0_stage2, sext_ln1494_6_fu_715_p1, ap_block_pp0_stage3, ap_block_pp0_stage4, sext_ln1494_2_fu_799_p1, ap_block_pp0_stage5, sext_ln1494_9_fu_871_p1, ap_block_pp0_stage6, sext_ln1494_10_fu_932_p1, ap_block_pp0_stage7, sext_ln1494_4_fu_1007_p1, ap_block_pp0_stage8, sext_ln1494_13_fu_1079_p1, ap_block_pp0_stage9, sext_ln1494_14_fu_1150_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                conv_out_V_address0 <= sext_ln1494_14_fu_1150_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                conv_out_V_address0 <= sext_ln1494_13_fu_1079_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv_out_V_address0 <= sext_ln1494_4_fu_1007_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv_out_V_address0 <= sext_ln1494_10_fu_932_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv_out_V_address0 <= sext_ln1494_9_fu_871_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_out_V_address0 <= sext_ln1494_2_fu_799_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_V_address0 <= sext_ln1494_6_fu_715_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_out_V_address0 <= sext_ln1494_1_fu_628_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_out_V_address0 <= zext_ln1494_2_fu_533_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_out_V_address0 <= sext_ln1494_fu_457_p1(11 - 1 downto 0);
            else 
                conv_out_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            conv_out_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_out_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0, zext_ln1494_1_fu_496_p1, ap_block_pp0_stage1, zext_ln1494_3_fu_570_p1, ap_block_pp0_stage2, zext_ln1494_4_fu_665_p1, ap_block_pp0_stage3, sext_ln1494_7_fu_730_p1, ap_block_pp0_stage4, sext_ln1494_8_fu_814_p1, sext_ln1494_3_fu_856_p1, ap_block_pp0_stage5, ap_block_pp0_stage6, sext_ln1494_11_fu_947_p1, ap_block_pp0_stage7, sext_ln1494_12_fu_1022_p1, sext_ln1494_5_fu_1064_p1, ap_block_pp0_stage8, ap_block_pp0_stage9, sext_ln1494_15_fu_1165_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                conv_out_V_address1 <= sext_ln1494_15_fu_1165_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                conv_out_V_address1 <= sext_ln1494_5_fu_1064_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                conv_out_V_address1 <= sext_ln1494_12_fu_1022_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                conv_out_V_address1 <= sext_ln1494_11_fu_947_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                conv_out_V_address1 <= sext_ln1494_3_fu_856_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_out_V_address1 <= sext_ln1494_8_fu_814_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_V_address1 <= sext_ln1494_7_fu_730_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_out_V_address1 <= zext_ln1494_4_fu_665_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_out_V_address1 <= zext_ln1494_3_fu_570_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_out_V_address1 <= zext_ln1494_1_fu_496_p1(11 - 1 downto 0);
            else 
                conv_out_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            conv_out_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_out_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv_out_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            conv_out_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_379_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_f_0_phi_fu_337_p4));
    grp_fu_355_p2 <= "1" when (signed(conv_out_V_q0) > signed(ap_const_lv14_0)) else "0";
    grp_fu_361_p2 <= "1" when (signed(conv_out_V_q1) > signed(ap_const_lv14_0)) else "0";
    icmp_ln10_fu_367_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_326_p4 = ap_const_lv7_50) else "0";
    icmp_ln13_fu_385_p2 <= "1" when (ap_phi_mux_r_0_phi_fu_348_p4 = ap_const_lv3_5) else "0";
    icmp_ln1494_10_fu_1027_p2 <= "1" when (signed(conv_out_V_q0) > signed(select_ln29_9_reg_1434)) else "0";
    icmp_ln1494_11_fu_1039_p2 <= "1" when (signed(conv_out_V_q1) > signed(select_ln29_10_fu_1032_p3)) else "0";
    icmp_ln1494_13_fu_1087_p2 <= "1" when (signed(conv_out_V_q0) > signed(zext_ln29_3_fu_1084_p1)) else "0";
    icmp_ln1494_14_fu_1101_p2 <= "1" when (signed(conv_out_V_q1) > signed(select_ln29_13_fu_1093_p3)) else "0";
    icmp_ln1494_15_fu_1170_p2 <= "1" when (signed(conv_out_V_q0) > signed(select_ln29_14_reg_1460)) else "0";
    icmp_ln1494_17_fu_1186_p2 <= "1" when (signed(conv_out_V_q1) > signed(zext_ln29_4_fu_1183_p1)) else "0";
    icmp_ln1494_18_fu_1209_p2 <= "1" when (signed(conv_out_V_q0) > signed(select_ln29_17_reg_1481)) else "0";
    icmp_ln1494_19_fu_1221_p2 <= "1" when (signed(conv_out_V_q1) > signed(select_ln29_18_fu_1214_p3)) else "0";
    icmp_ln1494_1_fu_697_p2 <= "1" when (signed(conv_out_V_q0) > signed(zext_ln29_fu_694_p1)) else "0";
    icmp_ln1494_2_fu_819_p2 <= "1" when (signed(conv_out_V_q0) > signed(select_ln29_1_reg_1361)) else "0";
    icmp_ln1494_3_fu_831_p2 <= "1" when (signed(conv_out_V_q1) > signed(select_ln29_2_fu_824_p3)) else "0";
    icmp_ln1494_5_fu_879_p2 <= "1" when (signed(conv_out_V_q0) > signed(zext_ln29_1_fu_876_p1)) else "0";
    icmp_ln1494_6_fu_893_p2 <= "1" when (signed(conv_out_V_q1) > signed(select_ln29_5_fu_885_p3)) else "0";
    icmp_ln1494_7_fu_952_p2 <= "1" when (signed(conv_out_V_q0) > signed(select_ln29_6_reg_1418)) else "0";
    icmp_ln1494_9_fu_968_p2 <= "1" when (signed(conv_out_V_q1) > signed(zext_ln29_2_fu_965_p1)) else "0";

    max_pool_out_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln203_2_fu_784_p1, ap_block_pp0_stage4, sext_ln203_fu_917_p1, ap_block_pp0_stage6, sext_ln203_1_fu_992_p1, ap_block_pp0_stage7, sext_ln203_2_fu_1125_p1, ap_block_pp0_stage9, sext_ln203_3_fu_1205_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_out_V_address0 <= sext_ln203_3_fu_1205_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            max_pool_out_V_address0 <= sext_ln203_2_fu_1125_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_out_V_address0 <= sext_ln203_1_fu_992_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            max_pool_out_V_address0 <= sext_ln203_fu_917_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            max_pool_out_V_address0 <= zext_ln203_2_fu_784_p1(9 - 1 downto 0);
        else 
            max_pool_out_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_out_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            max_pool_out_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage9, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage4, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage9, select_ln29_3_fu_837_p3, select_ln29_7_fu_957_p3, select_ln29_11_fu_1045_p3, select_ln29_15_fu_1175_p3, select_ln29_19_fu_1227_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            max_pool_out_V_d0 <= select_ln29_19_fu_1227_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            max_pool_out_V_d0 <= select_ln29_15_fu_1175_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            max_pool_out_V_d0 <= select_ln29_11_fu_1045_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            max_pool_out_V_d0 <= select_ln29_7_fu_957_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            max_pool_out_V_d0 <= select_ln29_3_fu_837_p3;
        else 
            max_pool_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_out_V_we0_assign_proc : process(icmp_ln10_reg_1236, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_1236 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            max_pool_out_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1494_1_fu_596_p1 <= mul_ln1494_1_fu_596_p10(4 - 1 downto 0);
    mul_ln1494_1_fu_596_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_fu_587_p2),12));
    mul_ln1494_1_fu_596_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv12_B0) * unsigned(mul_ln1494_1_fu_596_p1), 12));
    mul_ln1494_fu_419_p1 <= mul_ln1494_fu_419_p10(4 - 1 downto 0);
    mul_ln1494_fu_419_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_407_p3),13));
    mul_ln1494_fu_419_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv13_B0) * unsigned(mul_ln1494_fu_419_p1), 13));
    or_ln1494_1_fu_617_p2 <= (trunc_ln1494_reg_1267 or ap_const_lv12_10);
    or_ln1494_2_fu_472_p2 <= (trunc_ln1494_2_fu_468_p1 or select_ln29_21_fu_399_p3);
    or_ln1494_3_fu_510_p2 <= (trunc_ln1494_3_fu_506_p1 or select_ln29_21_reg_1252);
    or_ln1494_4_fu_547_p2 <= (trunc_ln1494_4_fu_543_p1 or select_ln29_21_reg_1252);
    or_ln1494_5_fu_642_p2 <= (trunc_ln1494_5_fu_638_p1 or select_ln29_21_reg_1252);
    or_ln1494_fu_433_p2 <= (trunc_ln1494_1_fu_429_p1 or select_ln29_21_fu_399_p3);
    or_ln26_fu_587_p2 <= (shl_ln_reg_1262 or ap_const_lv4_1);
    r_fu_1200_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(select_ln29_20_reg_1245));
    select_ln29_10_fu_1032_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_10_fu_1027_p2(0) = '1') else 
        select_ln29_9_reg_1434;
    select_ln29_11_fu_1045_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_11_fu_1039_p2(0) = '1') else 
        select_ln29_10_fu_1032_p3;
    select_ln29_12_fu_686_p3 <= 
        trunc_ln1494_9_fu_682_p1 when (grp_fu_361_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_13_fu_1093_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_13_fu_1087_p2(0) = '1') else 
        zext_ln29_3_fu_1084_p1;
    select_ln29_14_fu_1107_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_14_fu_1101_p2(0) = '1') else 
        select_ln29_13_fu_1093_p3;
    select_ln29_15_fu_1175_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_15_fu_1170_p2(0) = '1') else 
        select_ln29_14_reg_1460;
    select_ln29_16_fu_739_p3 <= 
        trunc_ln1494_10_fu_735_p1 when (grp_fu_361_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_17_fu_1192_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_17_fu_1186_p2(0) = '1') else 
        zext_ln29_4_fu_1183_p1;
    select_ln29_18_fu_1214_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_18_fu_1209_p2(0) = '1') else 
        select_ln29_17_reg_1481;
    select_ln29_19_fu_1227_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_19_fu_1221_p2(0) = '1') else 
        select_ln29_18_fu_1214_p3;
    select_ln29_1_fu_703_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_1_fu_697_p2(0) = '1') else 
        zext_ln29_fu_694_p1;
    select_ln29_20_fu_391_p3 <= 
        ap_const_lv3_0 when (icmp_ln13_fu_385_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_348_p4;
    select_ln29_21_fu_399_p3 <= 
        f_fu_379_p2 when (icmp_ln13_fu_385_p2(0) = '1') else 
        ap_phi_mux_f_0_phi_fu_337_p4;
    select_ln29_2_fu_824_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_2_fu_819_p2(0) = '1') else 
        select_ln29_1_reg_1361;
    select_ln29_3_fu_837_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_3_fu_831_p2(0) = '1') else 
        select_ln29_2_fu_824_p3;
    select_ln29_4_fu_606_p3 <= 
        trunc_ln1494_7_fu_602_p1 when (grp_fu_361_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_5_fu_885_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_5_fu_879_p2(0) = '1') else 
        zext_ln29_1_fu_876_p1;
    select_ln29_6_fu_899_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_6_fu_893_p2(0) = '1') else 
        select_ln29_5_fu_885_p3;
    select_ln29_7_fu_957_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_7_fu_952_p2(0) = '1') else 
        select_ln29_6_reg_1418;
    select_ln29_8_fu_674_p3 <= 
        trunc_ln1494_8_fu_670_p1 when (grp_fu_355_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_9_fu_974_p3 <= 
        conv_out_V_q1 when (icmp_ln1494_9_fu_968_p2(0) = '1') else 
        zext_ln29_2_fu_965_p1;
    select_ln29_fu_579_p3 <= 
        trunc_ln1494_6_fu_575_p1 when (grp_fu_355_p2(0) = '1') else 
        ap_const_lv13_0;
        sext_ln1494_10_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_21_fu_927_p2),64));

        sext_ln1494_11_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_23_fu_942_p2),64));

        sext_ln1494_12_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_25_fu_1017_p2),64));

        sext_ln1494_13_fu_1079_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_27_fu_1074_p2),64));

        sext_ln1494_14_fu_1150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_29_fu_1145_p2),64));

        sext_ln1494_15_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_31_fu_1160_p2),64));

        sext_ln1494_1_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_fu_622_p2),64));

        sext_ln1494_2_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_3_fu_794_p2),64));

        sext_ln1494_3_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_6_fu_851_p2),64));

        sext_ln1494_4_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_9_fu_1002_p2),64));

        sext_ln1494_5_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_12_fu_1059_p2),64));

        sext_ln1494_6_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_13_fu_711_p2),64));

        sext_ln1494_7_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_15_fu_725_p2),64));

        sext_ln1494_8_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_17_fu_809_p2),64));

        sext_ln1494_9_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1494_19_fu_866_p2),64));

        sext_ln1494_fu_457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_4_fu_449_p3),64));

        sext_ln203_1_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_5_fu_987_p2),64));

        sext_ln203_2_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_7_fu_1120_p2),64));

        sext_ln203_3_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_9_reg_1466),64));

        sext_ln203_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_3_fu_912_p2),64));

    shl_ln_fu_407_p3 <= (select_ln29_20_fu_391_p3 & ap_const_lv1_0);
    tmp_10_fu_562_p3 <= (tmp_9_fu_552_p4 & or_ln1494_4_fu_547_p2);
    tmp_11_fu_647_p4 <= add_ln1494_10_fu_633_p2(11 downto 5);
    tmp_12_fu_657_p3 <= (tmp_11_fu_647_p4 & or_ln1494_5_fu_642_p2);
    tmp_2_fu_761_p3 <= (select_ln29_20_reg_1245 & ap_const_lv4_0);
    tmp_3_fu_439_p4 <= mul_ln1494_fu_419_p2(12 downto 5);
    tmp_4_fu_449_p3 <= (tmp_3_fu_439_p4 & or_ln1494_fu_433_p2);
    tmp_5_fu_478_p4 <= add_ln1494_1_fu_462_p2(11 downto 5);
    tmp_6_fu_488_p3 <= (tmp_5_fu_478_p4 & or_ln1494_2_fu_472_p2);
    tmp_7_fu_515_p4 <= add_ln1494_4_fu_501_p2(11 downto 5);
    tmp_8_fu_525_p3 <= (tmp_7_fu_515_p4 & or_ln1494_3_fu_510_p2);
    tmp_9_fu_552_p4 <= add_ln1494_7_fu_538_p2(11 downto 5);
    tmp_fu_750_p3 <= (select_ln29_20_reg_1245 & ap_const_lv6_0);
    trunc_ln1494_10_fu_735_p1 <= conv_out_V_q1(13 - 1 downto 0);
    trunc_ln1494_1_fu_429_p1 <= mul_ln1494_fu_419_p2(5 - 1 downto 0);
    trunc_ln1494_2_fu_468_p1 <= add_ln1494_1_fu_462_p2(5 - 1 downto 0);
    trunc_ln1494_3_fu_506_p1 <= add_ln1494_4_fu_501_p2(5 - 1 downto 0);
    trunc_ln1494_4_fu_543_p1 <= add_ln1494_7_fu_538_p2(5 - 1 downto 0);
    trunc_ln1494_5_fu_638_p1 <= add_ln1494_10_fu_633_p2(5 - 1 downto 0);
    trunc_ln1494_6_fu_575_p1 <= conv_out_V_q0(13 - 1 downto 0);
    trunc_ln1494_7_fu_602_p1 <= conv_out_V_q1(13 - 1 downto 0);
    trunc_ln1494_8_fu_670_p1 <= conv_out_V_q0(13 - 1 downto 0);
    trunc_ln1494_9_fu_682_p1 <= conv_out_V_q1(13 - 1 downto 0);
    trunc_ln1494_fu_425_p1 <= mul_ln1494_fu_419_p2(12 - 1 downto 0);
    zext_ln1494_1_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_488_p3),64));
    zext_ln1494_2_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_525_p3),64));
    zext_ln1494_3_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_562_p3),64));
    zext_ln1494_4_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_657_p3),64));
    zext_ln14_1_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_21_reg_1252),10));
    zext_ln14_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_21_reg_1252),12));
    zext_ln203_1_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_761_p3),10));
    zext_ln203_2_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_1_fu_778_p2),64));
    zext_ln203_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_750_p3),10));
    zext_ln29_1_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_4_reg_1318),14));
    zext_ln29_2_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_8_reg_1351),14));
    zext_ln29_3_fu_1084_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_12_reg_1356),14));
    zext_ln29_4_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_16_reg_1377),14));
    zext_ln29_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_reg_1299),14));
end behav;
