// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module max_pool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_0_V_address0,
        conv_out_0_V_ce0,
        conv_out_0_V_q0,
        conv_out_0_V_address1,
        conv_out_0_V_ce1,
        conv_out_0_V_q1,
        conv_out_1_V_address0,
        conv_out_1_V_ce0,
        conv_out_1_V_q0,
        conv_out_1_V_address1,
        conv_out_1_V_ce1,
        conv_out_1_V_q1,
        conv_out_2_V_address0,
        conv_out_2_V_ce0,
        conv_out_2_V_q0,
        conv_out_2_V_address1,
        conv_out_2_V_ce1,
        conv_out_2_V_q1,
        conv_out_3_V_address0,
        conv_out_3_V_ce0,
        conv_out_3_V_q0,
        conv_out_3_V_address1,
        conv_out_3_V_ce1,
        conv_out_3_V_q1,
        conv_out_4_V_address0,
        conv_out_4_V_ce0,
        conv_out_4_V_q0,
        conv_out_4_V_address1,
        conv_out_4_V_ce1,
        conv_out_4_V_q1,
        conv_out_5_V_address0,
        conv_out_5_V_ce0,
        conv_out_5_V_q0,
        conv_out_5_V_address1,
        conv_out_5_V_ce1,
        conv_out_5_V_q1,
        conv_out_6_V_address0,
        conv_out_6_V_ce0,
        conv_out_6_V_q0,
        conv_out_6_V_address1,
        conv_out_6_V_ce1,
        conv_out_6_V_q1,
        conv_out_7_V_address0,
        conv_out_7_V_ce0,
        conv_out_7_V_q0,
        conv_out_7_V_address1,
        conv_out_7_V_ce1,
        conv_out_7_V_q1,
        conv_out_8_V_address0,
        conv_out_8_V_ce0,
        conv_out_8_V_q0,
        conv_out_8_V_address1,
        conv_out_8_V_ce1,
        conv_out_8_V_q1,
        conv_out_9_V_address0,
        conv_out_9_V_ce0,
        conv_out_9_V_q0,
        conv_out_9_V_address1,
        conv_out_9_V_ce1,
        conv_out_9_V_q1,
        conv_out_10_V_address0,
        conv_out_10_V_ce0,
        conv_out_10_V_q0,
        conv_out_10_V_address1,
        conv_out_10_V_ce1,
        conv_out_10_V_q1,
        conv_out_11_V_address0,
        conv_out_11_V_ce0,
        conv_out_11_V_q0,
        conv_out_11_V_address1,
        conv_out_11_V_ce1,
        conv_out_11_V_q1,
        conv_out_12_V_address0,
        conv_out_12_V_ce0,
        conv_out_12_V_q0,
        conv_out_12_V_address1,
        conv_out_12_V_ce1,
        conv_out_12_V_q1,
        conv_out_13_V_address0,
        conv_out_13_V_ce0,
        conv_out_13_V_q0,
        conv_out_13_V_address1,
        conv_out_13_V_ce1,
        conv_out_13_V_q1,
        conv_out_14_V_address0,
        conv_out_14_V_ce0,
        conv_out_14_V_q0,
        conv_out_14_V_address1,
        conv_out_14_V_ce1,
        conv_out_14_V_q1,
        conv_out_15_V_address0,
        conv_out_15_V_ce0,
        conv_out_15_V_q0,
        conv_out_15_V_address1,
        conv_out_15_V_ce1,
        conv_out_15_V_q1,
        conv_out_16_V_address0,
        conv_out_16_V_ce0,
        conv_out_16_V_q0,
        conv_out_16_V_address1,
        conv_out_16_V_ce1,
        conv_out_16_V_q1,
        conv_out_17_V_address0,
        conv_out_17_V_ce0,
        conv_out_17_V_q0,
        conv_out_17_V_address1,
        conv_out_17_V_ce1,
        conv_out_17_V_q1,
        conv_out_18_V_address0,
        conv_out_18_V_ce0,
        conv_out_18_V_q0,
        conv_out_18_V_address1,
        conv_out_18_V_ce1,
        conv_out_18_V_q1,
        conv_out_19_V_address0,
        conv_out_19_V_ce0,
        conv_out_19_V_q0,
        conv_out_19_V_address1,
        conv_out_19_V_ce1,
        conv_out_19_V_q1,
        conv_out_20_V_address0,
        conv_out_20_V_ce0,
        conv_out_20_V_q0,
        conv_out_20_V_address1,
        conv_out_20_V_ce1,
        conv_out_20_V_q1,
        conv_out_21_V_address0,
        conv_out_21_V_ce0,
        conv_out_21_V_q0,
        conv_out_21_V_address1,
        conv_out_21_V_ce1,
        conv_out_21_V_q1,
        conv_out_22_V_address0,
        conv_out_22_V_ce0,
        conv_out_22_V_q0,
        conv_out_22_V_address1,
        conv_out_22_V_ce1,
        conv_out_22_V_q1,
        conv_out_23_V_address0,
        conv_out_23_V_ce0,
        conv_out_23_V_q0,
        conv_out_23_V_address1,
        conv_out_23_V_ce1,
        conv_out_23_V_q1,
        conv_out_24_V_address0,
        conv_out_24_V_ce0,
        conv_out_24_V_q0,
        conv_out_24_V_address1,
        conv_out_24_V_ce1,
        conv_out_24_V_q1,
        conv_out_25_V_address0,
        conv_out_25_V_ce0,
        conv_out_25_V_q0,
        conv_out_25_V_address1,
        conv_out_25_V_ce1,
        conv_out_25_V_q1,
        max_pool_out_0_V_address0,
        max_pool_out_0_V_ce0,
        max_pool_out_0_V_we0,
        max_pool_out_0_V_d0,
        max_pool_out_1_V_address0,
        max_pool_out_1_V_ce0,
        max_pool_out_1_V_we0,
        max_pool_out_1_V_d0,
        max_pool_out_2_V_address0,
        max_pool_out_2_V_ce0,
        max_pool_out_2_V_we0,
        max_pool_out_2_V_d0,
        max_pool_out_3_V_address0,
        max_pool_out_3_V_ce0,
        max_pool_out_3_V_we0,
        max_pool_out_3_V_d0,
        max_pool_out_4_V_address0,
        max_pool_out_4_V_ce0,
        max_pool_out_4_V_we0,
        max_pool_out_4_V_d0,
        max_pool_out_5_V_address0,
        max_pool_out_5_V_ce0,
        max_pool_out_5_V_we0,
        max_pool_out_5_V_d0,
        max_pool_out_6_V_address0,
        max_pool_out_6_V_ce0,
        max_pool_out_6_V_we0,
        max_pool_out_6_V_d0,
        max_pool_out_7_V_address0,
        max_pool_out_7_V_ce0,
        max_pool_out_7_V_we0,
        max_pool_out_7_V_d0,
        max_pool_out_8_V_address0,
        max_pool_out_8_V_ce0,
        max_pool_out_8_V_we0,
        max_pool_out_8_V_d0,
        max_pool_out_9_V_address0,
        max_pool_out_9_V_ce0,
        max_pool_out_9_V_we0,
        max_pool_out_9_V_d0,
        max_pool_out_10_V_address0,
        max_pool_out_10_V_ce0,
        max_pool_out_10_V_we0,
        max_pool_out_10_V_d0,
        max_pool_out_11_V_address0,
        max_pool_out_11_V_ce0,
        max_pool_out_11_V_we0,
        max_pool_out_11_V_d0,
        max_pool_out_12_V_address0,
        max_pool_out_12_V_ce0,
        max_pool_out_12_V_we0,
        max_pool_out_12_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] conv_out_0_V_address0;
output   conv_out_0_V_ce0;
input  [13:0] conv_out_0_V_q0;
output  [7:0] conv_out_0_V_address1;
output   conv_out_0_V_ce1;
input  [13:0] conv_out_0_V_q1;
output  [7:0] conv_out_1_V_address0;
output   conv_out_1_V_ce0;
input  [13:0] conv_out_1_V_q0;
output  [7:0] conv_out_1_V_address1;
output   conv_out_1_V_ce1;
input  [13:0] conv_out_1_V_q1;
output  [7:0] conv_out_2_V_address0;
output   conv_out_2_V_ce0;
input  [13:0] conv_out_2_V_q0;
output  [7:0] conv_out_2_V_address1;
output   conv_out_2_V_ce1;
input  [13:0] conv_out_2_V_q1;
output  [7:0] conv_out_3_V_address0;
output   conv_out_3_V_ce0;
input  [13:0] conv_out_3_V_q0;
output  [7:0] conv_out_3_V_address1;
output   conv_out_3_V_ce1;
input  [13:0] conv_out_3_V_q1;
output  [7:0] conv_out_4_V_address0;
output   conv_out_4_V_ce0;
input  [13:0] conv_out_4_V_q0;
output  [7:0] conv_out_4_V_address1;
output   conv_out_4_V_ce1;
input  [13:0] conv_out_4_V_q1;
output  [7:0] conv_out_5_V_address0;
output   conv_out_5_V_ce0;
input  [13:0] conv_out_5_V_q0;
output  [7:0] conv_out_5_V_address1;
output   conv_out_5_V_ce1;
input  [13:0] conv_out_5_V_q1;
output  [7:0] conv_out_6_V_address0;
output   conv_out_6_V_ce0;
input  [13:0] conv_out_6_V_q0;
output  [7:0] conv_out_6_V_address1;
output   conv_out_6_V_ce1;
input  [13:0] conv_out_6_V_q1;
output  [7:0] conv_out_7_V_address0;
output   conv_out_7_V_ce0;
input  [13:0] conv_out_7_V_q0;
output  [7:0] conv_out_7_V_address1;
output   conv_out_7_V_ce1;
input  [13:0] conv_out_7_V_q1;
output  [7:0] conv_out_8_V_address0;
output   conv_out_8_V_ce0;
input  [13:0] conv_out_8_V_q0;
output  [7:0] conv_out_8_V_address1;
output   conv_out_8_V_ce1;
input  [13:0] conv_out_8_V_q1;
output  [7:0] conv_out_9_V_address0;
output   conv_out_9_V_ce0;
input  [13:0] conv_out_9_V_q0;
output  [7:0] conv_out_9_V_address1;
output   conv_out_9_V_ce1;
input  [13:0] conv_out_9_V_q1;
output  [7:0] conv_out_10_V_address0;
output   conv_out_10_V_ce0;
input  [13:0] conv_out_10_V_q0;
output  [7:0] conv_out_10_V_address1;
output   conv_out_10_V_ce1;
input  [13:0] conv_out_10_V_q1;
output  [7:0] conv_out_11_V_address0;
output   conv_out_11_V_ce0;
input  [13:0] conv_out_11_V_q0;
output  [7:0] conv_out_11_V_address1;
output   conv_out_11_V_ce1;
input  [13:0] conv_out_11_V_q1;
output  [7:0] conv_out_12_V_address0;
output   conv_out_12_V_ce0;
input  [13:0] conv_out_12_V_q0;
output  [7:0] conv_out_12_V_address1;
output   conv_out_12_V_ce1;
input  [13:0] conv_out_12_V_q1;
output  [7:0] conv_out_13_V_address0;
output   conv_out_13_V_ce0;
input  [13:0] conv_out_13_V_q0;
output  [7:0] conv_out_13_V_address1;
output   conv_out_13_V_ce1;
input  [13:0] conv_out_13_V_q1;
output  [7:0] conv_out_14_V_address0;
output   conv_out_14_V_ce0;
input  [13:0] conv_out_14_V_q0;
output  [7:0] conv_out_14_V_address1;
output   conv_out_14_V_ce1;
input  [13:0] conv_out_14_V_q1;
output  [7:0] conv_out_15_V_address0;
output   conv_out_15_V_ce0;
input  [13:0] conv_out_15_V_q0;
output  [7:0] conv_out_15_V_address1;
output   conv_out_15_V_ce1;
input  [13:0] conv_out_15_V_q1;
output  [7:0] conv_out_16_V_address0;
output   conv_out_16_V_ce0;
input  [13:0] conv_out_16_V_q0;
output  [7:0] conv_out_16_V_address1;
output   conv_out_16_V_ce1;
input  [13:0] conv_out_16_V_q1;
output  [7:0] conv_out_17_V_address0;
output   conv_out_17_V_ce0;
input  [13:0] conv_out_17_V_q0;
output  [7:0] conv_out_17_V_address1;
output   conv_out_17_V_ce1;
input  [13:0] conv_out_17_V_q1;
output  [7:0] conv_out_18_V_address0;
output   conv_out_18_V_ce0;
input  [13:0] conv_out_18_V_q0;
output  [7:0] conv_out_18_V_address1;
output   conv_out_18_V_ce1;
input  [13:0] conv_out_18_V_q1;
output  [7:0] conv_out_19_V_address0;
output   conv_out_19_V_ce0;
input  [13:0] conv_out_19_V_q0;
output  [7:0] conv_out_19_V_address1;
output   conv_out_19_V_ce1;
input  [13:0] conv_out_19_V_q1;
output  [7:0] conv_out_20_V_address0;
output   conv_out_20_V_ce0;
input  [13:0] conv_out_20_V_q0;
output  [7:0] conv_out_20_V_address1;
output   conv_out_20_V_ce1;
input  [13:0] conv_out_20_V_q1;
output  [7:0] conv_out_21_V_address0;
output   conv_out_21_V_ce0;
input  [13:0] conv_out_21_V_q0;
output  [7:0] conv_out_21_V_address1;
output   conv_out_21_V_ce1;
input  [13:0] conv_out_21_V_q1;
output  [7:0] conv_out_22_V_address0;
output   conv_out_22_V_ce0;
input  [13:0] conv_out_22_V_q0;
output  [7:0] conv_out_22_V_address1;
output   conv_out_22_V_ce1;
input  [13:0] conv_out_22_V_q1;
output  [7:0] conv_out_23_V_address0;
output   conv_out_23_V_ce0;
input  [13:0] conv_out_23_V_q0;
output  [7:0] conv_out_23_V_address1;
output   conv_out_23_V_ce1;
input  [13:0] conv_out_23_V_q1;
output  [7:0] conv_out_24_V_address0;
output   conv_out_24_V_ce0;
input  [13:0] conv_out_24_V_q0;
output  [7:0] conv_out_24_V_address1;
output   conv_out_24_V_ce1;
input  [13:0] conv_out_24_V_q1;
output  [7:0] conv_out_25_V_address0;
output   conv_out_25_V_ce0;
input  [13:0] conv_out_25_V_q0;
output  [7:0] conv_out_25_V_address1;
output   conv_out_25_V_ce1;
input  [13:0] conv_out_25_V_q1;
output  [6:0] max_pool_out_0_V_address0;
output   max_pool_out_0_V_ce0;
output   max_pool_out_0_V_we0;
output  [13:0] max_pool_out_0_V_d0;
output  [6:0] max_pool_out_1_V_address0;
output   max_pool_out_1_V_ce0;
output   max_pool_out_1_V_we0;
output  [13:0] max_pool_out_1_V_d0;
output  [6:0] max_pool_out_2_V_address0;
output   max_pool_out_2_V_ce0;
output   max_pool_out_2_V_we0;
output  [13:0] max_pool_out_2_V_d0;
output  [6:0] max_pool_out_3_V_address0;
output   max_pool_out_3_V_ce0;
output   max_pool_out_3_V_we0;
output  [13:0] max_pool_out_3_V_d0;
output  [6:0] max_pool_out_4_V_address0;
output   max_pool_out_4_V_ce0;
output   max_pool_out_4_V_we0;
output  [13:0] max_pool_out_4_V_d0;
output  [6:0] max_pool_out_5_V_address0;
output   max_pool_out_5_V_ce0;
output   max_pool_out_5_V_we0;
output  [13:0] max_pool_out_5_V_d0;
output  [6:0] max_pool_out_6_V_address0;
output   max_pool_out_6_V_ce0;
output   max_pool_out_6_V_we0;
output  [13:0] max_pool_out_6_V_d0;
output  [6:0] max_pool_out_7_V_address0;
output   max_pool_out_7_V_ce0;
output   max_pool_out_7_V_we0;
output  [13:0] max_pool_out_7_V_d0;
output  [6:0] max_pool_out_8_V_address0;
output   max_pool_out_8_V_ce0;
output   max_pool_out_8_V_we0;
output  [13:0] max_pool_out_8_V_d0;
output  [6:0] max_pool_out_9_V_address0;
output   max_pool_out_9_V_ce0;
output   max_pool_out_9_V_we0;
output  [13:0] max_pool_out_9_V_d0;
output  [6:0] max_pool_out_10_V_address0;
output   max_pool_out_10_V_ce0;
output   max_pool_out_10_V_we0;
output  [13:0] max_pool_out_10_V_d0;
output  [6:0] max_pool_out_11_V_address0;
output   max_pool_out_11_V_ce0;
output   max_pool_out_11_V_we0;
output  [13:0] max_pool_out_11_V_d0;
output  [6:0] max_pool_out_12_V_address0;
output   max_pool_out_12_V_ce0;
output   max_pool_out_12_V_we0;
output  [13:0] max_pool_out_12_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg conv_out_0_V_ce0;
reg conv_out_0_V_ce1;
reg conv_out_1_V_ce0;
reg conv_out_1_V_ce1;
reg conv_out_2_V_ce0;
reg conv_out_2_V_ce1;
reg conv_out_3_V_ce0;
reg conv_out_3_V_ce1;
reg conv_out_4_V_ce0;
reg conv_out_4_V_ce1;
reg conv_out_5_V_ce0;
reg conv_out_5_V_ce1;
reg conv_out_6_V_ce0;
reg conv_out_6_V_ce1;
reg conv_out_7_V_ce0;
reg conv_out_7_V_ce1;
reg conv_out_8_V_ce0;
reg conv_out_8_V_ce1;
reg conv_out_9_V_ce0;
reg conv_out_9_V_ce1;
reg conv_out_10_V_ce0;
reg conv_out_10_V_ce1;
reg conv_out_11_V_ce0;
reg conv_out_11_V_ce1;
reg conv_out_12_V_ce0;
reg conv_out_12_V_ce1;
reg conv_out_13_V_ce0;
reg conv_out_13_V_ce1;
reg conv_out_14_V_ce0;
reg conv_out_14_V_ce1;
reg conv_out_15_V_ce0;
reg conv_out_15_V_ce1;
reg conv_out_16_V_ce0;
reg conv_out_16_V_ce1;
reg conv_out_17_V_ce0;
reg conv_out_17_V_ce1;
reg conv_out_18_V_ce0;
reg conv_out_18_V_ce1;
reg conv_out_19_V_ce0;
reg conv_out_19_V_ce1;
reg conv_out_20_V_ce0;
reg conv_out_20_V_ce1;
reg conv_out_21_V_ce0;
reg conv_out_21_V_ce1;
reg conv_out_22_V_ce0;
reg conv_out_22_V_ce1;
reg conv_out_23_V_ce0;
reg conv_out_23_V_ce1;
reg conv_out_24_V_ce0;
reg conv_out_24_V_ce1;
reg conv_out_25_V_ce0;
reg conv_out_25_V_ce1;
reg max_pool_out_0_V_ce0;
reg max_pool_out_0_V_we0;
reg max_pool_out_1_V_ce0;
reg max_pool_out_1_V_we0;
reg max_pool_out_2_V_ce0;
reg max_pool_out_2_V_we0;
reg max_pool_out_3_V_ce0;
reg max_pool_out_3_V_we0;
reg max_pool_out_4_V_ce0;
reg max_pool_out_4_V_we0;
reg max_pool_out_5_V_ce0;
reg max_pool_out_5_V_we0;
reg max_pool_out_6_V_ce0;
reg max_pool_out_6_V_we0;
reg max_pool_out_7_V_ce0;
reg max_pool_out_7_V_we0;
reg max_pool_out_8_V_ce0;
reg max_pool_out_8_V_we0;
reg max_pool_out_9_V_ce0;
reg max_pool_out_9_V_we0;
reg max_pool_out_10_V_ce0;
reg max_pool_out_10_V_we0;
reg max_pool_out_11_V_ce0;
reg max_pool_out_11_V_we0;
reg max_pool_out_12_V_ce0;
reg max_pool_out_12_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] indvar_flatten88_reg_987;
reg   [2:0] f_0_reg_998;
reg   [7:0] indvar_flatten_reg_1009;
reg   [3:0] r_0_reg_1020;
reg   [3:0] c_0_reg_1031;
wire   [0:0] icmp_ln10_fu_1219_p2;
reg   [0:0] icmp_ln10_reg_1624;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln10_reg_1624_pp0_iter1_reg;
wire   [9:0] add_ln10_fu_1225_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln29_101_fu_1251_p3;
reg   [2:0] select_ln29_101_reg_1633;
reg   [2:0] select_ln29_101_reg_1633_pp0_iter1_reg;
wire   [3:0] select_ln13_fu_1309_p3;
reg   [3:0] select_ln13_reg_1639;
reg   [3:0] select_ln13_reg_1639_pp0_iter1_reg;
wire   [3:0] select_ln13_1_fu_1325_p3;
reg   [3:0] select_ln13_1_reg_1643;
reg   [3:0] select_ln13_1_reg_1643_pp0_iter1_reg;
wire   [63:0] zext_ln1494_2_fu_1377_p1;
reg   [63:0] zext_ln1494_2_reg_1650;
wire   [8:0] add_ln1494_1_fu_1438_p2;
reg   [8:0] add_ln1494_1_reg_1732;
wire   [3:0] c_fu_1444_p2;
wire   [7:0] select_ln13_4_fu_1456_p3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg   [2:0] ap_phi_mux_f_0_phi_fu_1002_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_r_0_phi_fu_1024_p4;
wire   [13:0] ap_phi_reg_pp0_iter0_phi_ln1494_reg_1042;
reg   [13:0] ap_phi_reg_pp0_iter1_phi_ln1494_reg_1042;
reg   [13:0] ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042;
reg   [13:0] ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26;
wire   [13:0] ap_phi_reg_pp0_iter2_phi_ln1494_1_reg_1073;
reg   [13:0] ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26;
wire   [13:0] ap_phi_reg_pp0_iter2_phi_ln1494_2_reg_1117;
reg   [13:0] ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26;
wire   [13:0] ap_phi_reg_pp0_iter2_phi_ln1494_3_reg_1161;
wire   [63:0] zext_ln1494_5_fu_1464_p1;
wire   [63:0] zext_ln203_2_fu_1530_p1;
wire   [13:0] select_ln29_3_fu_1603_p3;
wire   [4:0] shl_ln_fu_1205_p3;
wire   [0:0] icmp_ln13_fu_1237_p2;
wire   [2:0] f_fu_1231_p2;
wire   [4:0] or_ln26_fu_1213_p2;
wire   [0:0] icmp_ln16_fu_1285_p2;
wire   [0:0] xor_ln29_fu_1279_p2;
wire   [3:0] select_ln29_100_fu_1243_p3;
wire   [0:0] and_ln29_fu_1291_p2;
wire   [0:0] or_ln13_fu_1303_p2;
wire   [3:0] r_fu_1297_p2;
wire   [4:0] shl_ln26_mid1_fu_1317_p3;
wire   [4:0] select_ln29_102_fu_1263_p3;
wire   [4:0] select_ln13_2_fu_1333_p3;
wire   [7:0] tmp_2_fu_1341_p3;
wire   [5:0] tmp_3_fu_1353_p3;
wire   [8:0] zext_ln1494_fu_1349_p1;
wire   [8:0] zext_ln1494_1_fu_1361_p1;
wire   [8:0] sub_ln1494_fu_1365_p2;
wire   [8:0] zext_ln29_fu_1259_p1;
wire   [8:0] add_ln1494_fu_1371_p2;
wire   [4:0] or_ln26_1_fu_1394_p2;
wire   [4:0] select_ln29_103_fu_1271_p3;
wire   [4:0] select_ln13_3_fu_1400_p3;
wire   [7:0] tmp_5_fu_1408_p3;
wire   [5:0] tmp_6_fu_1420_p3;
wire   [8:0] zext_ln1494_3_fu_1416_p1;
wire   [8:0] zext_ln1494_4_fu_1428_p1;
wire   [8:0] sub_ln1494_1_fu_1432_p2;
wire   [7:0] add_ln13_fu_1450_p2;
wire   [6:0] tmp_fu_1496_p3;
wire   [4:0] tmp_1_fu_1507_p3;
wire   [7:0] zext_ln203_fu_1503_p1;
wire   [7:0] zext_ln203_1_fu_1514_p1;
wire   [7:0] sub_ln203_fu_1518_p2;
wire   [7:0] zext_ln29_27_fu_1493_p1;
wire   [7:0] add_ln203_fu_1524_p2;
wire   [0:0] icmp_ln1494_fu_1551_p2;
wire   [12:0] trunc_ln1494_fu_1547_p1;
wire   [12:0] select_ln29_fu_1557_p3;
wire   [13:0] zext_ln29_26_fu_1565_p1;
wire   [0:0] icmp_ln1494_100_fu_1569_p2;
wire   [13:0] select_ln29_1_fu_1575_p3;
wire   [0:0] icmp_ln1494_101_fu_1583_p2;
wire   [13:0] select_ln29_2_fu_1589_p3;
wire   [0:0] icmp_ln1494_102_fu_1597_p2;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_696;
reg    ap_condition_598;
reg    ap_condition_523;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_523)) begin
        if ((1'b1 == ap_condition_598)) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_24_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd11) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_22_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd10) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_20_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd9) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_18_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd8) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_16_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd7) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_14_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd6) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_12_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd5) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_10_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd4) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_8_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd3) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_6_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd2) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_4_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd1) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_2_V_q0;
        end else if (((select_ln13_reg_1639 == 4'd0) & (icmp_ln10_reg_1624 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= conv_out_0_V_q0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042 <= ap_phi_reg_pp0_iter1_phi_ln1494_reg_1042;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_1219_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_reg_1031 <= c_fu_1444_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_1031 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1624 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_0_reg_998 <= select_ln29_101_reg_1633;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_998 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_1219_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten88_reg_987 <= add_ln10_fu_1225_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten88_reg_987 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_1219_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1009 <= select_ln13_4_fu_1456_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1009 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1624 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_0_reg_1020 <= select_ln13_1_reg_1643;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_1020 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_1219_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1494_1_reg_1732 <= add_ln1494_1_fu_1438_p2;
        select_ln13_reg_1639 <= select_ln13_fu_1309_p3;
        zext_ln1494_2_reg_1650[8 : 0] <= zext_ln1494_2_fu_1377_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_phi_ln1494_reg_1042 <= ap_phi_reg_pp0_iter0_phi_ln1494_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln10_reg_1624 <= icmp_ln10_fu_1219_p2;
        icmp_ln10_reg_1624_pp0_iter1_reg <= icmp_ln10_reg_1624;
        select_ln13_1_reg_1643_pp0_iter1_reg <= select_ln13_1_reg_1643;
        select_ln13_reg_1639_pp0_iter1_reg <= select_ln13_reg_1639;
        select_ln29_101_reg_1633_pp0_iter1_reg <= select_ln29_101_reg_1633;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_1219_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln13_1_reg_1643 <= select_ln13_1_fu_1325_p3;
        select_ln29_101_reg_1633 <= select_ln29_101_fu_1251_p3;
    end
end

always @ (*) begin
    if ((icmp_ln10_fu_1219_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln10_reg_1624 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_f_0_phi_fu_1002_p4 = select_ln29_101_reg_1633;
    end else begin
        ap_phi_mux_f_0_phi_fu_1002_p4 = f_0_reg_998;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_696)) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_25_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd11) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_23_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd10) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_21_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd9) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_19_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd8) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_17_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd7) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_15_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd6) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_13_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd5) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_11_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd4) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_9_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd3) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_7_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd2) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_5_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd1) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_3_V_q0;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd0) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = conv_out_1_V_q0;
        end else begin
            ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_1_reg_1073;
        end
    end else begin
        ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_1_reg_1073;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_696)) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_24_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd11) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_22_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd10) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_20_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd9) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_18_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd8) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_16_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd7) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_14_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd6) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_12_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd5) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_10_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd4) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_8_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd3) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_6_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd2) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_4_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd1) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_2_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd0) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = conv_out_0_V_q1;
        end else begin
            ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_2_reg_1117;
        end
    end else begin
        ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_2_reg_1117;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_696)) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_25_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd11) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_23_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd10) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_21_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd9) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_19_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd8) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_17_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd7) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_15_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd6) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_13_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd5) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_11_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd4) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_9_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd3) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_7_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd2) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_5_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd1) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_3_V_q1;
        end else if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd0) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = conv_out_1_V_q1;
        end else begin
            ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_3_reg_1161;
        end
    end else begin
        ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 = ap_phi_reg_pp0_iter2_phi_ln1494_3_reg_1161;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln10_reg_1624 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_1024_p4 = select_ln13_1_reg_1643;
    end else begin
        ap_phi_mux_r_0_phi_fu_1024_p4 = r_0_reg_1020;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_0_V_ce0 = 1'b1;
    end else begin
        conv_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_0_V_ce1 = 1'b1;
    end else begin
        conv_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_10_V_ce0 = 1'b1;
    end else begin
        conv_out_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_10_V_ce1 = 1'b1;
    end else begin
        conv_out_10_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_11_V_ce0 = 1'b1;
    end else begin
        conv_out_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_11_V_ce1 = 1'b1;
    end else begin
        conv_out_11_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_12_V_ce0 = 1'b1;
    end else begin
        conv_out_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_12_V_ce1 = 1'b1;
    end else begin
        conv_out_12_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_13_V_ce0 = 1'b1;
    end else begin
        conv_out_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_13_V_ce1 = 1'b1;
    end else begin
        conv_out_13_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_14_V_ce0 = 1'b1;
    end else begin
        conv_out_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_14_V_ce1 = 1'b1;
    end else begin
        conv_out_14_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_15_V_ce0 = 1'b1;
    end else begin
        conv_out_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_15_V_ce1 = 1'b1;
    end else begin
        conv_out_15_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_16_V_ce0 = 1'b1;
    end else begin
        conv_out_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_16_V_ce1 = 1'b1;
    end else begin
        conv_out_16_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_17_V_ce0 = 1'b1;
    end else begin
        conv_out_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_17_V_ce1 = 1'b1;
    end else begin
        conv_out_17_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_18_V_ce0 = 1'b1;
    end else begin
        conv_out_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_18_V_ce1 = 1'b1;
    end else begin
        conv_out_18_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_19_V_ce0 = 1'b1;
    end else begin
        conv_out_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_19_V_ce1 = 1'b1;
    end else begin
        conv_out_19_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_1_V_ce0 = 1'b1;
    end else begin
        conv_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_1_V_ce1 = 1'b1;
    end else begin
        conv_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_20_V_ce0 = 1'b1;
    end else begin
        conv_out_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_20_V_ce1 = 1'b1;
    end else begin
        conv_out_20_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_21_V_ce0 = 1'b1;
    end else begin
        conv_out_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_21_V_ce1 = 1'b1;
    end else begin
        conv_out_21_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_22_V_ce0 = 1'b1;
    end else begin
        conv_out_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_22_V_ce1 = 1'b1;
    end else begin
        conv_out_22_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_23_V_ce0 = 1'b1;
    end else begin
        conv_out_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_23_V_ce1 = 1'b1;
    end else begin
        conv_out_23_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_24_V_ce0 = 1'b1;
    end else begin
        conv_out_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_24_V_ce1 = 1'b1;
    end else begin
        conv_out_24_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_25_V_ce0 = 1'b1;
    end else begin
        conv_out_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_25_V_ce1 = 1'b1;
    end else begin
        conv_out_25_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_2_V_ce0 = 1'b1;
    end else begin
        conv_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_2_V_ce1 = 1'b1;
    end else begin
        conv_out_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_3_V_ce0 = 1'b1;
    end else begin
        conv_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_3_V_ce1 = 1'b1;
    end else begin
        conv_out_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_4_V_ce0 = 1'b1;
    end else begin
        conv_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_4_V_ce1 = 1'b1;
    end else begin
        conv_out_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_5_V_ce0 = 1'b1;
    end else begin
        conv_out_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_5_V_ce1 = 1'b1;
    end else begin
        conv_out_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_6_V_ce0 = 1'b1;
    end else begin
        conv_out_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_6_V_ce1 = 1'b1;
    end else begin
        conv_out_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_7_V_ce0 = 1'b1;
    end else begin
        conv_out_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_7_V_ce1 = 1'b1;
    end else begin
        conv_out_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_8_V_ce0 = 1'b1;
    end else begin
        conv_out_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_8_V_ce1 = 1'b1;
    end else begin
        conv_out_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_9_V_ce0 = 1'b1;
    end else begin
        conv_out_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_9_V_ce1 = 1'b1;
    end else begin
        conv_out_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_0_V_ce0 = 1'b1;
    end else begin
        max_pool_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_0_V_we0 = 1'b1;
    end else begin
        max_pool_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_10_V_ce0 = 1'b1;
    end else begin
        max_pool_out_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_10_V_we0 = 1'b1;
    end else begin
        max_pool_out_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_11_V_ce0 = 1'b1;
    end else begin
        max_pool_out_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_11_V_we0 = 1'b1;
    end else begin
        max_pool_out_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_12_V_ce0 = 1'b1;
    end else begin
        max_pool_out_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((select_ln13_reg_1639_pp0_iter1_reg == 4'd12) | ((select_ln13_reg_1639_pp0_iter1_reg == 4'd13) | ((select_ln13_reg_1639_pp0_iter1_reg == 4'd14) | (select_ln13_reg_1639_pp0_iter1_reg == 4'd15)))))) begin
        max_pool_out_12_V_we0 = 1'b1;
    end else begin
        max_pool_out_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_1_V_ce0 = 1'b1;
    end else begin
        max_pool_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_1_V_we0 = 1'b1;
    end else begin
        max_pool_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_2_V_ce0 = 1'b1;
    end else begin
        max_pool_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_2_V_we0 = 1'b1;
    end else begin
        max_pool_out_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_3_V_ce0 = 1'b1;
    end else begin
        max_pool_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_3_V_we0 = 1'b1;
    end else begin
        max_pool_out_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_4_V_ce0 = 1'b1;
    end else begin
        max_pool_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_4_V_we0 = 1'b1;
    end else begin
        max_pool_out_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_5_V_ce0 = 1'b1;
    end else begin
        max_pool_out_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_5_V_we0 = 1'b1;
    end else begin
        max_pool_out_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_6_V_ce0 = 1'b1;
    end else begin
        max_pool_out_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_6_V_we0 = 1'b1;
    end else begin
        max_pool_out_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_7_V_ce0 = 1'b1;
    end else begin
        max_pool_out_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_7_V_we0 = 1'b1;
    end else begin
        max_pool_out_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_8_V_ce0 = 1'b1;
    end else begin
        max_pool_out_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_8_V_we0 = 1'b1;
    end else begin
        max_pool_out_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_9_V_ce0 = 1'b1;
    end else begin
        max_pool_out_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln13_reg_1639_pp0_iter1_reg == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_out_9_V_we0 = 1'b1;
    end else begin
        max_pool_out_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln10_fu_1219_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln10_fu_1219_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_1225_p2 = (indvar_flatten88_reg_987 + 10'd1);

assign add_ln13_fu_1450_p2 = (indvar_flatten_reg_1009 + 8'd1);

assign add_ln1494_1_fu_1438_p2 = (sub_ln1494_1_fu_1432_p2 + zext_ln29_fu_1259_p1);

assign add_ln1494_fu_1371_p2 = (sub_ln1494_fu_1365_p2 + zext_ln29_fu_1259_p1);

assign add_ln203_fu_1524_p2 = (sub_ln203_fu_1518_p2 + zext_ln29_27_fu_1493_p1);

assign and_ln29_fu_1291_p2 = (xor_ln29_fu_1279_p2 & icmp_ln16_fu_1285_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_523 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_598 = (((((select_ln13_reg_1639 == 4'd14) & (icmp_ln10_reg_1624 == 1'd0)) | ((select_ln13_reg_1639 == 4'd15) & (icmp_ln10_reg_1624 == 1'd0))) | ((select_ln13_reg_1639 == 4'd13) & (icmp_ln10_reg_1624 == 1'd0))) | ((select_ln13_reg_1639 == 4'd12) & (icmp_ln10_reg_1624 == 1'd0)));
end

always @ (*) begin
    ap_condition_696 = (((((select_ln13_reg_1639_pp0_iter1_reg == 4'd14) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0)) | ((select_ln13_reg_1639_pp0_iter1_reg == 4'd15) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) | ((select_ln13_reg_1639_pp0_iter1_reg == 4'd13) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0))) | ((select_ln13_reg_1639_pp0_iter1_reg == 4'd12) & (icmp_ln10_reg_1624_pp0_iter1_reg == 1'd0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln1494_reg_1042 = 'bx;

assign ap_phi_reg_pp0_iter2_phi_ln1494_1_reg_1073 = 'bx;

assign ap_phi_reg_pp0_iter2_phi_ln1494_2_reg_1117 = 'bx;

assign ap_phi_reg_pp0_iter2_phi_ln1494_3_reg_1161 = 'bx;

assign c_fu_1444_p2 = (select_ln13_fu_1309_p3 + 4'd1);

assign conv_out_0_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_0_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_10_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_10_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_11_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_11_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_12_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_12_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_13_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_13_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_14_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_14_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_15_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_15_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_16_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_16_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_17_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_17_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_18_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_18_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_19_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_19_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_1_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_1_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_20_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_20_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_21_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_21_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_22_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_22_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_23_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_23_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_24_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_24_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_25_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_25_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_2_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_2_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_3_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_3_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_4_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_4_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_5_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_5_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_6_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_6_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_7_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_7_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_8_V_address0 = zext_ln1494_2_fu_1377_p1;

assign conv_out_8_V_address1 = zext_ln1494_5_fu_1464_p1;

assign conv_out_9_V_address0 = zext_ln1494_2_reg_1650;

assign conv_out_9_V_address1 = zext_ln1494_5_fu_1464_p1;

assign f_fu_1231_p2 = (ap_phi_mux_f_0_phi_fu_1002_p4 + 3'd1);

assign icmp_ln10_fu_1219_p2 = ((indvar_flatten88_reg_987 == 10'd1014) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1237_p2 = ((indvar_flatten_reg_1009 == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln1494_100_fu_1569_p2 = (($signed(ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26) > $signed(zext_ln29_26_fu_1565_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_101_fu_1583_p2 = (($signed(ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26) > $signed(select_ln29_1_fu_1575_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_102_fu_1597_p2 = (($signed(ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26) > $signed(select_ln29_2_fu_1589_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1551_p2 = (($signed(ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_1285_p2 = ((c_0_reg_1031 == 4'd13) ? 1'b1 : 1'b0);

assign max_pool_out_0_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_0_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_10_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_10_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_11_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_11_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_12_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_12_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_1_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_1_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_2_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_2_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_3_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_3_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_4_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_4_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_5_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_5_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_6_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_6_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_7_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_7_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_8_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_8_V_d0 = select_ln29_3_fu_1603_p3;

assign max_pool_out_9_V_address0 = zext_ln203_2_fu_1530_p1;

assign max_pool_out_9_V_d0 = select_ln29_3_fu_1603_p3;

assign or_ln13_fu_1303_p2 = (icmp_ln13_fu_1237_p2 | and_ln29_fu_1291_p2);

assign or_ln26_1_fu_1394_p2 = (shl_ln26_mid1_fu_1317_p3 | 5'd1);

assign or_ln26_fu_1213_p2 = (shl_ln_fu_1205_p3 | 5'd1);

assign r_fu_1297_p2 = (select_ln29_100_fu_1243_p3 + 4'd1);

assign select_ln13_1_fu_1325_p3 = ((and_ln29_fu_1291_p2[0:0] === 1'b1) ? r_fu_1297_p2 : select_ln29_100_fu_1243_p3);

assign select_ln13_2_fu_1333_p3 = ((and_ln29_fu_1291_p2[0:0] === 1'b1) ? shl_ln26_mid1_fu_1317_p3 : select_ln29_102_fu_1263_p3);

assign select_ln13_3_fu_1400_p3 = ((and_ln29_fu_1291_p2[0:0] === 1'b1) ? or_ln26_1_fu_1394_p2 : select_ln29_103_fu_1271_p3);

assign select_ln13_4_fu_1456_p3 = ((icmp_ln13_fu_1237_p2[0:0] === 1'b1) ? 8'd1 : add_ln13_fu_1450_p2);

assign select_ln13_fu_1309_p3 = ((or_ln13_fu_1303_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_1031);

assign select_ln29_100_fu_1243_p3 = ((icmp_ln13_fu_1237_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_r_0_phi_fu_1024_p4);

assign select_ln29_101_fu_1251_p3 = ((icmp_ln13_fu_1237_p2[0:0] === 1'b1) ? f_fu_1231_p2 : ap_phi_mux_f_0_phi_fu_1002_p4);

assign select_ln29_102_fu_1263_p3 = ((icmp_ln13_fu_1237_p2[0:0] === 1'b1) ? 5'd0 : shl_ln_fu_1205_p3);

assign select_ln29_103_fu_1271_p3 = ((icmp_ln13_fu_1237_p2[0:0] === 1'b1) ? 5'd1 : or_ln26_fu_1213_p2);

assign select_ln29_1_fu_1575_p3 = ((icmp_ln1494_100_fu_1569_p2[0:0] === 1'b1) ? ap_phi_mux_phi_ln1494_1_phi_fu_1076_p26 : zext_ln29_26_fu_1565_p1);

assign select_ln29_2_fu_1589_p3 = ((icmp_ln1494_101_fu_1583_p2[0:0] === 1'b1) ? ap_phi_mux_phi_ln1494_2_phi_fu_1120_p26 : select_ln29_1_fu_1575_p3);

assign select_ln29_3_fu_1603_p3 = ((icmp_ln1494_102_fu_1597_p2[0:0] === 1'b1) ? ap_phi_mux_phi_ln1494_3_phi_fu_1164_p26 : select_ln29_2_fu_1589_p3);

assign select_ln29_fu_1557_p3 = ((icmp_ln1494_fu_1551_p2[0:0] === 1'b1) ? trunc_ln1494_fu_1547_p1 : 13'd0);

assign shl_ln26_mid1_fu_1317_p3 = {{r_fu_1297_p2}, {1'd0}};

assign shl_ln_fu_1205_p3 = {{ap_phi_mux_r_0_phi_fu_1024_p4}, {1'd0}};

assign sub_ln1494_1_fu_1432_p2 = (zext_ln1494_3_fu_1416_p1 - zext_ln1494_4_fu_1428_p1);

assign sub_ln1494_fu_1365_p2 = (zext_ln1494_fu_1349_p1 - zext_ln1494_1_fu_1361_p1);

assign sub_ln203_fu_1518_p2 = (zext_ln203_fu_1503_p1 - zext_ln203_1_fu_1514_p1);

assign tmp_1_fu_1507_p3 = {{select_ln13_1_reg_1643_pp0_iter1_reg}, {1'd0}};

assign tmp_2_fu_1341_p3 = {{select_ln13_2_fu_1333_p3}, {3'd0}};

assign tmp_3_fu_1353_p3 = {{select_ln13_2_fu_1333_p3}, {1'd0}};

assign tmp_5_fu_1408_p3 = {{select_ln13_3_fu_1400_p3}, {3'd0}};

assign tmp_6_fu_1420_p3 = {{select_ln13_3_fu_1400_p3}, {1'd0}};

assign tmp_fu_1496_p3 = {{select_ln13_1_reg_1643_pp0_iter1_reg}, {3'd0}};

assign trunc_ln1494_fu_1547_p1 = ap_phi_reg_pp0_iter2_phi_ln1494_reg_1042[12:0];

assign xor_ln29_fu_1279_p2 = (icmp_ln13_fu_1237_p2 ^ 1'd1);

assign zext_ln1494_1_fu_1361_p1 = tmp_3_fu_1353_p3;

assign zext_ln1494_2_fu_1377_p1 = add_ln1494_fu_1371_p2;

assign zext_ln1494_3_fu_1416_p1 = tmp_5_fu_1408_p3;

assign zext_ln1494_4_fu_1428_p1 = tmp_6_fu_1420_p3;

assign zext_ln1494_5_fu_1464_p1 = add_ln1494_1_reg_1732;

assign zext_ln1494_fu_1349_p1 = tmp_2_fu_1341_p3;

assign zext_ln203_1_fu_1514_p1 = tmp_1_fu_1507_p3;

assign zext_ln203_2_fu_1530_p1 = add_ln203_fu_1524_p2;

assign zext_ln203_fu_1503_p1 = tmp_fu_1496_p3;

assign zext_ln29_26_fu_1565_p1 = select_ln29_fu_1557_p3;

assign zext_ln29_27_fu_1493_p1 = select_ln29_101_reg_1633_pp0_iter1_reg;

assign zext_ln29_fu_1259_p1 = select_ln29_101_fu_1251_p3;

always @ (posedge ap_clk) begin
    zext_ln1494_2_reg_1650[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //max_pool_1
