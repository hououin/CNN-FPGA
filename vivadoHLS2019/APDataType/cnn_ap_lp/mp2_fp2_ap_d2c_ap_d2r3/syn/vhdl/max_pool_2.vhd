-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_out_0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_0_V_ce0 : OUT STD_LOGIC;
    conv_out_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_0_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_0_V_ce1 : OUT STD_LOGIC;
    conv_out_0_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_1_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_1_V_ce0 : OUT STD_LOGIC;
    conv_out_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_1_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_1_V_ce1 : OUT STD_LOGIC;
    conv_out_1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_2_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_2_V_ce0 : OUT STD_LOGIC;
    conv_out_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_2_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_2_V_ce1 : OUT STD_LOGIC;
    conv_out_2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_3_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_3_V_ce0 : OUT STD_LOGIC;
    conv_out_3_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_3_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_3_V_ce1 : OUT STD_LOGIC;
    conv_out_3_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_4_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_4_V_ce0 : OUT STD_LOGIC;
    conv_out_4_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_4_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_4_V_ce1 : OUT STD_LOGIC;
    conv_out_4_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_5_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_5_V_ce0 : OUT STD_LOGIC;
    conv_out_5_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_5_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_5_V_ce1 : OUT STD_LOGIC;
    conv_out_5_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_6_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_6_V_ce0 : OUT STD_LOGIC;
    conv_out_6_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_6_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_6_V_ce1 : OUT STD_LOGIC;
    conv_out_6_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_7_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_7_V_ce0 : OUT STD_LOGIC;
    conv_out_7_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_7_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_7_V_ce1 : OUT STD_LOGIC;
    conv_out_7_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_8_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_8_V_ce0 : OUT STD_LOGIC;
    conv_out_8_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_8_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_8_V_ce1 : OUT STD_LOGIC;
    conv_out_8_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_9_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_9_V_ce0 : OUT STD_LOGIC;
    conv_out_9_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    conv_out_9_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    conv_out_9_V_ce1 : OUT STD_LOGIC;
    conv_out_9_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    max_pool_out_0_V_ce0 : OUT STD_LOGIC;
    max_pool_out_0_V_we0 : OUT STD_LOGIC;
    max_pool_out_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_0_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    max_pool_out_0_V_ce1 : OUT STD_LOGIC;
    max_pool_out_0_V_we1 : OUT STD_LOGIC;
    max_pool_out_0_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_1_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    max_pool_out_1_V_ce0 : OUT STD_LOGIC;
    max_pool_out_1_V_we0 : OUT STD_LOGIC;
    max_pool_out_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_1_V_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    max_pool_out_1_V_ce1 : OUT STD_LOGIC;
    max_pool_out_1_V_we1 : OUT STD_LOGIC;
    max_pool_out_1_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_2_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_2_0_V_ce0 : OUT STD_LOGIC;
    max_pool_out_2_0_V_we0 : OUT STD_LOGIC;
    max_pool_out_2_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of max_pool_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_403 : STD_LOGIC_VECTOR (6 downto 0);
    signal f_0_reg_414 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_0_reg_425 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln10_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_reg_924 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln10_reg_924_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln10_fu_442_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln29_20_fu_460_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_20_reg_933 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_20_reg_933_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_21_fu_468_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln29_21_reg_940 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln29_21_reg_940_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln203_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_reg_947 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_reg_947_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal r_fu_493_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln14_1_fu_499_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln14_1_reg_988 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln29_fu_519_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_reg_1018 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_4_fu_575_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_4_reg_1073 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_8_fu_593_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_8_reg_1078 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_12_fu_611_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_12_reg_1083 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_16_fu_629_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln29_16_reg_1088 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_phi_mux_f_0_phi_fu_418_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1494_1_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_1_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_3_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln13_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_448_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2_fu_476_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1494_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_fu_509_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_502_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln26_fu_527_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_533_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1494_fu_541_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1494_fu_545_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1494_4_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_1_fu_565_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1494_8_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_2_fu_583_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1494_12_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_3_fu_601_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1494_16_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1494_4_fu_619_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln203_fu_647_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_cast_fu_653_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln203_fu_661_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_672_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln203_2_fu_679_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln14_fu_637_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_1_fu_683_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln29_fu_694_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_1_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_1_fu_703_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_2_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_2_fu_717_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_3_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_1_fu_740_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_5_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_5_fu_749_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_6_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_6_fu_763_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_7_fu_771_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_2_fu_786_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_9_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_9_fu_795_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_10_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_10_fu_809_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_11_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_3_fu_832_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_13_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_13_fu_841_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_14_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_14_fu_855_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_15_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln29_4_fu_878_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_17_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_17_fu_887_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_18_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_18_fu_901_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln1494_19_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_0_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_924 = ap_const_lv1_0))) then 
                f_0_reg_414 <= select_ln29_21_reg_940;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                f_0_reg_414 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_436_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_403 <= add_ln10_fu_442_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_403 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_436_p2 = ap_const_lv1_0))) then 
                r_0_reg_425 <= r_fu_493_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_0_reg_425 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln10_reg_924 <= icmp_ln10_fu_436_p2;
                icmp_ln10_reg_924_pp0_iter1_reg <= icmp_ln10_reg_924;
                select_ln29_20_reg_933_pp0_iter1_reg <= select_ln29_20_reg_933;
                select_ln29_21_reg_940_pp0_iter1_reg <= select_ln29_21_reg_940;
                    zext_ln203_reg_947_pp0_iter1_reg(7 downto 0) <= zext_ln203_reg_947(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_reg_924 = ap_const_lv1_0))) then
                select_ln29_12_reg_1083 <= select_ln29_12_fu_611_p3;
                select_ln29_16_reg_1088 <= select_ln29_16_fu_629_p3;
                select_ln29_4_reg_1073 <= select_ln29_4_fu_575_p3;
                select_ln29_8_reg_1078 <= select_ln29_8_fu_593_p3;
                select_ln29_reg_1018 <= select_ln29_fu_519_p3;
                    zext_ln14_1_reg_988(4 downto 0) <= zext_ln14_1_fu_499_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_436_p2 = ap_const_lv1_0))) then
                select_ln29_20_reg_933 <= select_ln29_20_fu_460_p3;
                    zext_ln203_reg_947(7 downto 0) <= zext_ln203_fu_484_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln10_fu_436_p2 = ap_const_lv1_0))) then
                select_ln29_21_reg_940 <= select_ln29_21_fu_468_p3;
            end if;
        end if;
    end process;
    zext_ln203_reg_947(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln203_reg_947_pp0_iter1_reg(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    zext_ln14_1_reg_988(8 downto 5) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln10_fu_436_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln10_fu_436_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln10_fu_436_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln10_fu_442_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_403) + unsigned(ap_const_lv7_1));
    add_ln1494_fu_545_p2 <= std_logic_vector(unsigned(zext_ln1494_fu_541_p1) + unsigned(zext_ln14_1_fu_499_p1));
    add_ln203_1_fu_683_p2 <= std_logic_vector(unsigned(zext_ln203_2_fu_679_p1) + unsigned(zext_ln14_fu_637_p1));
    add_ln203_fu_661_p2 <= std_logic_vector(unsigned(tmp_3_cast_fu_653_p3) + unsigned(zext_ln14_1_reg_988));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln10_fu_436_p2)
    begin
        if ((icmp_ln10_fu_436_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_418_p4_assign_proc : process(f_0_reg_414, icmp_ln10_reg_924, ap_CS_fsm_pp0_stage0, select_ln29_21_reg_940, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln10_reg_924 = ap_const_lv1_0))) then 
            ap_phi_mux_f_0_phi_fu_418_p4 <= select_ln29_21_reg_940;
        else 
            ap_phi_mux_f_0_phi_fu_418_p4 <= f_0_reg_414;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_0_V_address0 <= zext_ln203_fu_484_p1(8 - 1 downto 0);
    conv_out_0_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_0_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_0_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_1_V_address0 <= zext_ln203_reg_947(8 - 1 downto 0);
    conv_out_1_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_1_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_1_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_2_V_address0 <= zext_ln203_fu_484_p1(8 - 1 downto 0);
    conv_out_2_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_2_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_2_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_2_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_3_V_address0 <= zext_ln203_reg_947(8 - 1 downto 0);
    conv_out_3_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_3_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_3_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_3_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_4_V_address0 <= zext_ln203_fu_484_p1(8 - 1 downto 0);
    conv_out_4_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_4_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_4_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_4_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_4_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_5_V_address0 <= zext_ln203_reg_947(8 - 1 downto 0);
    conv_out_5_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_5_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_5_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_5_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_5_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_5_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_6_V_address0 <= zext_ln203_fu_484_p1(8 - 1 downto 0);
    conv_out_6_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_6_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_6_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_6_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_6_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_6_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_7_V_address0 <= zext_ln203_reg_947(8 - 1 downto 0);
    conv_out_7_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_7_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_7_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_7_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_7_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_8_V_address0 <= zext_ln203_fu_484_p1(8 - 1 downto 0);
    conv_out_8_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_8_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_8_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_8_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_8_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_8_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_8_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_9_V_address0 <= zext_ln203_reg_947(8 - 1 downto 0);
    conv_out_9_V_address1 <= zext_ln1494_1_fu_551_p1(8 - 1 downto 0);

    conv_out_9_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_9_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_9_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_9_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            conv_out_9_V_ce1 <= ap_const_logic_1;
        else 
            conv_out_9_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_448_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(ap_phi_mux_f_0_phi_fu_418_p4));
    icmp_ln10_fu_436_p2 <= "1" when (indvar_flatten_reg_403 = ap_const_lv7_50) else "0";
    icmp_ln13_fu_454_p2 <= "1" when (r_0_reg_425 = ap_const_lv3_5) else "0";
    icmp_ln1494_10_fu_803_p2 <= "1" when (signed(conv_out_4_V_q1) > signed(select_ln29_9_fu_795_p3)) else "0";
    icmp_ln1494_11_fu_817_p2 <= "1" when (signed(conv_out_5_V_q1) > signed(select_ln29_10_fu_809_p3)) else "0";
    icmp_ln1494_12_fu_605_p2 <= "1" when (signed(conv_out_6_V_q0) > signed(ap_const_lv14_0)) else "0";
    icmp_ln1494_13_fu_835_p2 <= "1" when (signed(conv_out_7_V_q0) > signed(zext_ln29_3_fu_832_p1)) else "0";
    icmp_ln1494_14_fu_849_p2 <= "1" when (signed(conv_out_6_V_q1) > signed(select_ln29_13_fu_841_p3)) else "0";
    icmp_ln1494_15_fu_863_p2 <= "1" when (signed(conv_out_7_V_q1) > signed(select_ln29_14_fu_855_p3)) else "0";
    icmp_ln1494_16_fu_623_p2 <= "1" when (signed(conv_out_8_V_q0) > signed(ap_const_lv14_0)) else "0";
    icmp_ln1494_17_fu_881_p2 <= "1" when (signed(conv_out_9_V_q0) > signed(zext_ln29_4_fu_878_p1)) else "0";
    icmp_ln1494_18_fu_895_p2 <= "1" when (signed(conv_out_8_V_q1) > signed(select_ln29_17_fu_887_p3)) else "0";
    icmp_ln1494_19_fu_909_p2 <= "1" when (signed(conv_out_9_V_q1) > signed(select_ln29_18_fu_901_p3)) else "0";
    icmp_ln1494_1_fu_697_p2 <= "1" when (signed(conv_out_1_V_q0) > signed(zext_ln29_fu_694_p1)) else "0";
    icmp_ln1494_2_fu_711_p2 <= "1" when (signed(conv_out_0_V_q1) > signed(select_ln29_1_fu_703_p3)) else "0";
    icmp_ln1494_3_fu_725_p2 <= "1" when (signed(conv_out_1_V_q1) > signed(select_ln29_2_fu_717_p3)) else "0";
    icmp_ln1494_4_fu_569_p2 <= "1" when (signed(conv_out_2_V_q0) > signed(ap_const_lv14_0)) else "0";
    icmp_ln1494_5_fu_743_p2 <= "1" when (signed(conv_out_3_V_q0) > signed(zext_ln29_1_fu_740_p1)) else "0";
    icmp_ln1494_6_fu_757_p2 <= "1" when (signed(conv_out_2_V_q1) > signed(select_ln29_5_fu_749_p3)) else "0";
    icmp_ln1494_7_fu_771_p2 <= "1" when (signed(conv_out_3_V_q1) > signed(select_ln29_6_fu_763_p3)) else "0";
    icmp_ln1494_8_fu_587_p2 <= "1" when (signed(conv_out_4_V_q0) > signed(ap_const_lv14_0)) else "0";
    icmp_ln1494_9_fu_789_p2 <= "1" when (signed(conv_out_5_V_q0) > signed(zext_ln29_2_fu_786_p1)) else "0";
    icmp_ln1494_fu_513_p2 <= "1" when (signed(conv_out_0_V_q0) > signed(ap_const_lv14_0)) else "0";
    max_pool_out_0_V_address0 <= zext_ln203_reg_947_pp0_iter1_reg(8 - 1 downto 0);
    max_pool_out_0_V_address1 <= zext_ln203_1_fu_666_p1(8 - 1 downto 0);

    max_pool_out_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_0_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_0_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_0_V_ce1 <= ap_const_logic_1;
        else 
            max_pool_out_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_V_d0 <= 
        conv_out_1_V_q1 when (icmp_ln1494_3_fu_725_p2(0) = '1') else 
        select_ln29_2_fu_717_p3;
    max_pool_out_0_V_d1 <= 
        conv_out_7_V_q1 when (icmp_ln1494_15_fu_863_p2(0) = '1') else 
        select_ln29_14_fu_855_p3;

    max_pool_out_0_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln10_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln10_reg_924_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_0_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_0_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln10_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln10_reg_924_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_0_V_we1 <= ap_const_logic_1;
        else 
            max_pool_out_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_V_address0 <= zext_ln203_reg_947_pp0_iter1_reg(8 - 1 downto 0);
    max_pool_out_1_V_address1 <= zext_ln203_1_fu_666_p1(8 - 1 downto 0);

    max_pool_out_1_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_1_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_1_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_1_V_ce1 <= ap_const_logic_1;
        else 
            max_pool_out_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_V_d0 <= 
        conv_out_3_V_q1 when (icmp_ln1494_7_fu_771_p2(0) = '1') else 
        select_ln29_6_fu_763_p3;
    max_pool_out_1_V_d1 <= 
        conv_out_9_V_q1 when (icmp_ln1494_19_fu_909_p2(0) = '1') else 
        select_ln29_18_fu_901_p3;

    max_pool_out_1_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln10_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln10_reg_924_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_1_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_1_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln10_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln10_reg_924_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_1_V_we1 <= ap_const_logic_1;
        else 
            max_pool_out_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_0_V_address0 <= zext_ln203_3_fu_689_p1(7 - 1 downto 0);

    max_pool_out_2_0_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_2_0_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_0_V_d0 <= 
        conv_out_5_V_q1 when (icmp_ln1494_11_fu_817_p2(0) = '1') else 
        select_ln29_10_fu_809_p3;

    max_pool_out_2_0_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln10_reg_924_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln10_reg_924_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            max_pool_out_2_0_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln203_fu_647_p2 <= (tmp_fu_640_p3 or ap_const_lv8_10);
    or_ln26_fu_527_p2 <= (shl_ln_fu_502_p3 or ap_const_lv4_1);
    r_fu_493_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(select_ln29_20_fu_460_p3));
    select_ln29_10_fu_809_p3 <= 
        conv_out_4_V_q1 when (icmp_ln1494_10_fu_803_p2(0) = '1') else 
        select_ln29_9_fu_795_p3;
    select_ln29_12_fu_611_p3 <= 
        trunc_ln1494_3_fu_601_p1 when (icmp_ln1494_12_fu_605_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_13_fu_841_p3 <= 
        conv_out_7_V_q0 when (icmp_ln1494_13_fu_835_p2(0) = '1') else 
        zext_ln29_3_fu_832_p1;
    select_ln29_14_fu_855_p3 <= 
        conv_out_6_V_q1 when (icmp_ln1494_14_fu_849_p2(0) = '1') else 
        select_ln29_13_fu_841_p3;
    select_ln29_16_fu_629_p3 <= 
        trunc_ln1494_4_fu_619_p1 when (icmp_ln1494_16_fu_623_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_17_fu_887_p3 <= 
        conv_out_9_V_q0 when (icmp_ln1494_17_fu_881_p2(0) = '1') else 
        zext_ln29_4_fu_878_p1;
    select_ln29_18_fu_901_p3 <= 
        conv_out_8_V_q1 when (icmp_ln1494_18_fu_895_p2(0) = '1') else 
        select_ln29_17_fu_887_p3;
    select_ln29_1_fu_703_p3 <= 
        conv_out_1_V_q0 when (icmp_ln1494_1_fu_697_p2(0) = '1') else 
        zext_ln29_fu_694_p1;
    select_ln29_20_fu_460_p3 <= 
        ap_const_lv3_0 when (icmp_ln13_fu_454_p2(0) = '1') else 
        r_0_reg_425;
    select_ln29_21_fu_468_p3 <= 
        f_fu_448_p2 when (icmp_ln13_fu_454_p2(0) = '1') else 
        ap_phi_mux_f_0_phi_fu_418_p4;
    select_ln29_2_fu_717_p3 <= 
        conv_out_0_V_q1 when (icmp_ln1494_2_fu_711_p2(0) = '1') else 
        select_ln29_1_fu_703_p3;
    select_ln29_4_fu_575_p3 <= 
        trunc_ln1494_1_fu_565_p1 when (icmp_ln1494_4_fu_569_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_5_fu_749_p3 <= 
        conv_out_3_V_q0 when (icmp_ln1494_5_fu_743_p2(0) = '1') else 
        zext_ln29_1_fu_740_p1;
    select_ln29_6_fu_763_p3 <= 
        conv_out_2_V_q1 when (icmp_ln1494_6_fu_757_p2(0) = '1') else 
        select_ln29_5_fu_749_p3;
    select_ln29_8_fu_593_p3 <= 
        trunc_ln1494_2_fu_583_p1 when (icmp_ln1494_8_fu_587_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln29_9_fu_795_p3 <= 
        conv_out_5_V_q0 when (icmp_ln1494_9_fu_789_p2(0) = '1') else 
        zext_ln29_2_fu_786_p1;
    select_ln29_fu_519_p3 <= 
        trunc_ln1494_fu_509_p1 when (icmp_ln1494_fu_513_p2(0) = '1') else 
        ap_const_lv13_0;
    shl_ln_fu_502_p3 <= (select_ln29_20_reg_933 & ap_const_lv1_0);
    tmp_2_fu_476_p3 <= (select_ln29_20_fu_460_p3 & select_ln29_21_fu_468_p3);
    tmp_3_cast_fu_653_p3 <= (ap_const_lv1_0 & or_ln203_fu_647_p2);
    tmp_4_fu_672_p3 <= (select_ln29_20_reg_933_pp0_iter1_reg & ap_const_lv4_0);
    tmp_6_fu_533_p3 <= (or_ln26_fu_527_p2 & ap_const_lv4_0);
    tmp_fu_640_p3 <= (select_ln29_20_reg_933_pp0_iter1_reg & ap_const_lv5_0);
    trunc_ln1494_1_fu_565_p1 <= conv_out_2_V_q0(13 - 1 downto 0);
    trunc_ln1494_2_fu_583_p1 <= conv_out_4_V_q0(13 - 1 downto 0);
    trunc_ln1494_3_fu_601_p1 <= conv_out_6_V_q0(13 - 1 downto 0);
    trunc_ln1494_4_fu_619_p1 <= conv_out_8_V_q0(13 - 1 downto 0);
    trunc_ln1494_fu_509_p1 <= conv_out_0_V_q0(13 - 1 downto 0);
    zext_ln1494_1_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1494_fu_545_p2),64));
    zext_ln1494_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_533_p3),9));
    zext_ln14_1_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_21_reg_940),9));
    zext_ln14_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_21_reg_940_pp0_iter1_reg),8));
    zext_ln203_1_fu_666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_fu_661_p2),64));
    zext_ln203_2_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_672_p3),8));
    zext_ln203_3_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_1_fu_683_p2),64));
    zext_ln203_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_476_p3),64));
    zext_ln29_1_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_4_reg_1073),14));
    zext_ln29_2_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_8_reg_1078),14));
    zext_ln29_3_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_12_reg_1083),14));
    zext_ln29_4_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_16_reg_1088),14));
    zext_ln29_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_reg_1018),14));
end behav;
