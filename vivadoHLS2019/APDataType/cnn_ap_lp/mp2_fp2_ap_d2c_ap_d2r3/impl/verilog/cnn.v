// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.990188,HLS_SYN_LAT=453278,HLS_SYN_TPT=none,HLS_SYN_MEM=42,HLS_SYN_DSP=8,HLS_SYN_FF=2430,HLS_SYN_LUT=9420,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_input_address0,
        cnn_input_ce0,
        cnn_input_q0,
        prediction_output_address0,
        prediction_output_ce0,
        prediction_output_we0,
        prediction_output_d0
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] cnn_input_address0;
output   cnn_input_ce0;
input  [31:0] cnn_input_q0;
output  [3:0] prediction_output_address0;
output   prediction_output_ce0;
output   prediction_output_we0;
output  [31:0] prediction_output_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cnn_input_ce0;
reg prediction_output_ce0;
reg prediction_output_we0;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] dense_1_weights_V_address0;
reg    dense_1_weights_V_ce0;
wire  signed [8:0] dense_1_weights_V_q0;
wire   [5:0] dense_1_bias_V_address0;
reg    dense_1_bias_V_ce0;
wire   [5:0] dense_1_bias_V_q0;
wire   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
wire   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire  signed [8:0] dense_out_weights_V_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
wire   [4:0] i_fu_855_p2;
reg   [4:0] i_reg_1949;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_861_p2;
reg   [9:0] ix_in_reg_1954;
wire   [0:0] icmp_ln23_fu_849_p2;
wire   [10:0] sub_ln203_fu_891_p2;
reg   [10:0] sub_ln203_reg_1959;
wire   [4:0] j_fu_903_p2;
reg   [4:0] j_reg_1967;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln203_7_fu_913_p2;
reg   [10:0] add_ln203_7_reg_1972;
wire   [0:0] icmp_ln25_fu_897_p2;
wire   [9:0] add_ln28_fu_923_p2;
reg   [9:0] add_ln28_reg_1982;
reg   [31:0] cnn_input_load_reg_1987;
wire    ap_CS_fsm_state4;
wire   [13:0] select_ln603_3_fu_1204_p3;
reg   [13:0] select_ln603_3_reg_1993;
wire    ap_CS_fsm_state5;
wire   [5:0] i_1_fu_1222_p2;
reg   [5:0] i_1_reg_2001;
wire    ap_CS_fsm_state17;
wire   [63:0] zext_ln14_fu_1228_p1;
reg   [63:0] zext_ln14_reg_2006;
wire   [0:0] icmp_ln9_fu_1216_p2;
wire   [14:0] zext_ln13_fu_1232_p1;
reg   [14:0] zext_ln13_reg_2012;
wire   [8:0] j_1_fu_1242_p2;
reg   [8:0] j_1_reg_2020;
wire    ap_CS_fsm_state18;
wire   [14:0] add_ln1117_3_fu_1253_p2;
reg   [14:0] add_ln1117_3_reg_2025;
wire   [0:0] icmp_ln13_fu_1236_p2;
wire    ap_CS_fsm_state19;
wire   [4:0] i_2_fu_1341_p2;
reg   [4:0] i_2_reg_2053;
wire    ap_CS_fsm_state21;
wire   [63:0] zext_ln14_2_fu_1347_p1;
reg   [63:0] zext_ln14_2_reg_2058;
wire   [0:0] icmp_ln9_1_fu_1335_p2;
wire   [11:0] zext_ln13_2_fu_1351_p1;
reg   [11:0] zext_ln13_2_reg_2064;
wire   [5:0] j_2_fu_1361_p2;
reg   [5:0] j_2_reg_2072;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln13_1_fu_1355_p2;
wire    ap_CS_fsm_state23;
wire   [3:0] d_fu_1484_p2;
reg   [3:0] d_reg_2100;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln48_fu_1490_p1;
reg   [63:0] zext_ln48_reg_2105;
wire   [0:0] icmp_ln41_fu_1478_p2;
wire   [8:0] zext_ln46_fu_1494_p1;
reg   [8:0] zext_ln46_reg_2111;
wire   [4:0] f_fu_1504_p2;
reg   [4:0] f_reg_2119;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln46_fu_1498_p2;
wire    ap_CS_fsm_state27;
wire   [3:0] i_3_fu_1597_p2;
reg   [3:0] i_3_reg_2147;
wire    ap_CS_fsm_state30;
wire   [63:0] zext_ln70_fu_1603_p1;
reg   [63:0] zext_ln70_reg_2152;
wire   [0:0] icmp_ln69_fu_1591_p2;
wire   [0:0] icmp_ln935_fu_1608_p2;
reg   [0:0] icmp_ln935_reg_2162;
wire    ap_CS_fsm_state31;
wire   [0:0] p_Result_41_fu_1614_p3;
reg   [0:0] p_Result_41_reg_2167;
wire   [13:0] tmp_V_13_fu_1628_p3;
reg   [13:0] tmp_V_13_reg_2172;
wire   [31:0] sub_ln944_fu_1662_p2;
reg   [31:0] sub_ln944_reg_2177;
wire   [31:0] or_ln_fu_1772_p3;
reg   [31:0] or_ln_reg_2183;
wire   [0:0] icmp_ln958_fu_1780_p2;
reg   [0:0] icmp_ln958_reg_2188;
wire   [7:0] trunc_ln943_fu_1786_p1;
reg   [7:0] trunc_ln943_reg_2193;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
reg   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
reg   [9:0] conv_1_input_V_address0;
reg    conv_1_input_V_ce0;
reg    conv_1_input_V_we0;
wire   [13:0] conv_1_input_V_q0;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg   [7:0] conv_2_out_0_V_address0;
reg    conv_2_out_0_V_ce0;
reg    conv_2_out_0_V_we0;
reg   [13:0] conv_2_out_0_V_d0;
wire   [13:0] conv_2_out_0_V_q0;
reg    conv_2_out_0_V_ce1;
wire   [13:0] conv_2_out_0_V_q1;
reg   [7:0] conv_2_out_1_V_address0;
reg    conv_2_out_1_V_ce0;
reg    conv_2_out_1_V_we0;
wire   [13:0] conv_2_out_1_V_q0;
reg    conv_2_out_1_V_ce1;
wire   [13:0] conv_2_out_1_V_q1;
reg   [7:0] conv_2_out_2_V_address0;
reg    conv_2_out_2_V_ce0;
reg    conv_2_out_2_V_we0;
wire   [13:0] conv_2_out_2_V_q0;
reg    conv_2_out_2_V_ce1;
wire   [13:0] conv_2_out_2_V_q1;
reg   [7:0] conv_2_out_3_V_address0;
reg    conv_2_out_3_V_ce0;
reg    conv_2_out_3_V_we0;
wire   [13:0] conv_2_out_3_V_q0;
reg    conv_2_out_3_V_ce1;
wire   [13:0] conv_2_out_3_V_q1;
reg   [7:0] conv_2_out_4_V_address0;
reg    conv_2_out_4_V_ce0;
reg    conv_2_out_4_V_we0;
wire   [13:0] conv_2_out_4_V_q0;
reg    conv_2_out_4_V_ce1;
wire   [13:0] conv_2_out_4_V_q1;
reg   [7:0] conv_2_out_5_V_address0;
reg    conv_2_out_5_V_ce0;
reg    conv_2_out_5_V_we0;
wire   [13:0] conv_2_out_5_V_q0;
reg    conv_2_out_5_V_ce1;
wire   [13:0] conv_2_out_5_V_q1;
reg   [7:0] conv_2_out_6_V_address0;
reg    conv_2_out_6_V_ce0;
reg    conv_2_out_6_V_we0;
wire   [13:0] conv_2_out_6_V_q0;
reg    conv_2_out_6_V_ce1;
wire   [13:0] conv_2_out_6_V_q1;
reg   [7:0] conv_2_out_7_V_address0;
reg    conv_2_out_7_V_ce0;
reg    conv_2_out_7_V_we0;
wire   [13:0] conv_2_out_7_V_q0;
reg    conv_2_out_7_V_ce1;
wire   [13:0] conv_2_out_7_V_q1;
reg   [7:0] conv_2_out_8_V_address0;
reg    conv_2_out_8_V_ce0;
reg    conv_2_out_8_V_we0;
wire   [13:0] conv_2_out_8_V_q0;
reg    conv_2_out_8_V_ce1;
wire   [13:0] conv_2_out_8_V_q1;
reg   [7:0] conv_2_out_9_V_address0;
reg    conv_2_out_9_V_ce0;
reg    conv_2_out_9_V_we0;
wire   [13:0] conv_2_out_9_V_q0;
reg    conv_2_out_9_V_ce1;
wire   [13:0] conv_2_out_9_V_q1;
reg   [7:0] max_pool_2_out_0_V_address0;
reg    max_pool_2_out_0_V_ce0;
reg    max_pool_2_out_0_V_we0;
reg   [13:0] max_pool_2_out_0_V_d0;
wire   [13:0] max_pool_2_out_0_V_q0;
reg    max_pool_2_out_0_V_ce1;
reg    max_pool_2_out_0_V_we1;
reg   [7:0] max_pool_2_out_1_V_address0;
reg    max_pool_2_out_1_V_ce0;
reg    max_pool_2_out_1_V_we0;
wire   [13:0] max_pool_2_out_1_V_q0;
reg    max_pool_2_out_1_V_ce1;
reg    max_pool_2_out_1_V_we1;
reg   [6:0] max_pool_2_out_2_0_address0;
reg    max_pool_2_out_2_0_ce0;
reg    max_pool_2_out_2_0_we0;
wire   [13:0] max_pool_2_out_2_0_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire  signed [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_conv_2_fu_772_ap_start;
wire    grp_conv_2_fu_772_ap_done;
wire    grp_conv_2_fu_772_ap_idle;
wire    grp_conv_2_fu_772_ap_ready;
wire   [9:0] grp_conv_2_fu_772_input_V_address0;
wire    grp_conv_2_fu_772_input_V_ce0;
wire   [7:0] grp_conv_2_fu_772_conv_out_0_V_address0;
wire    grp_conv_2_fu_772_conv_out_0_V_ce0;
wire    grp_conv_2_fu_772_conv_out_0_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_0_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_1_V_address0;
wire    grp_conv_2_fu_772_conv_out_1_V_ce0;
wire    grp_conv_2_fu_772_conv_out_1_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_1_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_2_V_address0;
wire    grp_conv_2_fu_772_conv_out_2_V_ce0;
wire    grp_conv_2_fu_772_conv_out_2_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_2_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_3_V_address0;
wire    grp_conv_2_fu_772_conv_out_3_V_ce0;
wire    grp_conv_2_fu_772_conv_out_3_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_3_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_4_V_address0;
wire    grp_conv_2_fu_772_conv_out_4_V_ce0;
wire    grp_conv_2_fu_772_conv_out_4_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_4_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_5_V_address0;
wire    grp_conv_2_fu_772_conv_out_5_V_ce0;
wire    grp_conv_2_fu_772_conv_out_5_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_5_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_6_V_address0;
wire    grp_conv_2_fu_772_conv_out_6_V_ce0;
wire    grp_conv_2_fu_772_conv_out_6_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_6_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_7_V_address0;
wire    grp_conv_2_fu_772_conv_out_7_V_ce0;
wire    grp_conv_2_fu_772_conv_out_7_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_7_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_8_V_address0;
wire    grp_conv_2_fu_772_conv_out_8_V_ce0;
wire    grp_conv_2_fu_772_conv_out_8_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_8_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_9_V_address0;
wire    grp_conv_2_fu_772_conv_out_9_V_ce0;
wire    grp_conv_2_fu_772_conv_out_9_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_9_V_d0;
wire   [7:0] grp_conv_2_fu_772_conv_out_10_V_address0;
wire    grp_conv_2_fu_772_conv_out_10_V_ce0;
wire    grp_conv_2_fu_772_conv_out_10_V_we0;
wire   [13:0] grp_conv_2_fu_772_conv_out_10_V_d0;
wire    grp_conv_1_fu_792_ap_start;
wire    grp_conv_1_fu_792_ap_done;
wire    grp_conv_1_fu_792_ap_idle;
wire    grp_conv_1_fu_792_ap_ready;
wire   [9:0] grp_conv_1_fu_792_input_V_address0;
wire    grp_conv_1_fu_792_input_V_ce0;
wire   [11:0] grp_conv_1_fu_792_conv_out_V_address0;
wire    grp_conv_1_fu_792_conv_out_V_ce0;
wire    grp_conv_1_fu_792_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_792_conv_out_V_d0;
wire    grp_soft_max_fu_802_ap_start;
wire    grp_soft_max_fu_802_ap_done;
wire    grp_soft_max_fu_802_ap_idle;
wire    grp_soft_max_fu_802_ap_ready;
wire   [3:0] grp_soft_max_fu_802_dense_array_V_address0;
wire    grp_soft_max_fu_802_dense_array_V_ce0;
wire    grp_soft_max_fu_802_dense_array_V_we0;
wire   [13:0] grp_soft_max_fu_802_dense_array_V_d0;
wire   [3:0] grp_soft_max_fu_802_prediction_V_address0;
wire    grp_soft_max_fu_802_prediction_V_ce0;
wire    grp_soft_max_fu_802_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_802_prediction_V_d0;
wire    grp_max_pool_2_fu_814_ap_start;
wire    grp_max_pool_2_fu_814_ap_done;
wire    grp_max_pool_2_fu_814_ap_idle;
wire    grp_max_pool_2_fu_814_ap_ready;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_0_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_0_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_0_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_0_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_1_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_1_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_1_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_1_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_2_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_2_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_2_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_2_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_3_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_3_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_3_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_3_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_4_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_4_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_4_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_4_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_5_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_5_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_5_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_5_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_6_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_6_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_6_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_6_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_7_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_7_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_7_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_7_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_8_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_8_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_8_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_8_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_9_V_address0;
wire    grp_max_pool_2_fu_814_conv_out_9_V_ce0;
wire   [7:0] grp_max_pool_2_fu_814_conv_out_9_V_address1;
wire    grp_max_pool_2_fu_814_conv_out_9_V_ce1;
wire   [7:0] grp_max_pool_2_fu_814_max_pool_out_0_V_address0;
wire    grp_max_pool_2_fu_814_max_pool_out_0_V_ce0;
wire    grp_max_pool_2_fu_814_max_pool_out_0_V_we0;
wire   [13:0] grp_max_pool_2_fu_814_max_pool_out_0_V_d0;
wire   [7:0] grp_max_pool_2_fu_814_max_pool_out_0_V_address1;
wire    grp_max_pool_2_fu_814_max_pool_out_0_V_ce1;
wire    grp_max_pool_2_fu_814_max_pool_out_0_V_we1;
wire   [13:0] grp_max_pool_2_fu_814_max_pool_out_0_V_d1;
wire   [7:0] grp_max_pool_2_fu_814_max_pool_out_1_V_address0;
wire    grp_max_pool_2_fu_814_max_pool_out_1_V_ce0;
wire    grp_max_pool_2_fu_814_max_pool_out_1_V_we0;
wire   [13:0] grp_max_pool_2_fu_814_max_pool_out_1_V_d0;
wire   [7:0] grp_max_pool_2_fu_814_max_pool_out_1_V_address1;
wire    grp_max_pool_2_fu_814_max_pool_out_1_V_ce1;
wire    grp_max_pool_2_fu_814_max_pool_out_1_V_we1;
wire   [13:0] grp_max_pool_2_fu_814_max_pool_out_1_V_d1;
wire   [6:0] grp_max_pool_2_fu_814_max_pool_out_2_0_V_address0;
wire    grp_max_pool_2_fu_814_max_pool_out_2_0_V_ce0;
wire    grp_max_pool_2_fu_814_max_pool_out_2_0_V_we0;
wire   [13:0] grp_max_pool_2_fu_814_max_pool_out_2_0_V_d0;
wire    grp_flat_fu_831_ap_start;
wire    grp_flat_fu_831_ap_done;
wire    grp_flat_fu_831_ap_idle;
wire    grp_flat_fu_831_ap_ready;
wire   [7:0] grp_flat_fu_831_max_pool_out_0_V_address0;
wire    grp_flat_fu_831_max_pool_out_0_V_ce0;
wire   [7:0] grp_flat_fu_831_max_pool_out_1_V_address0;
wire    grp_flat_fu_831_max_pool_out_1_V_ce0;
wire   [6:0] grp_flat_fu_831_max_pool_out_2_0_V_address0;
wire    grp_flat_fu_831_max_pool_out_2_0_V_ce0;
wire   [8:0] grp_flat_fu_831_flat_array_V_address0;
wire    grp_flat_fu_831_flat_array_V_ce0;
wire    grp_flat_fu_831_flat_array_V_we0;
wire   [13:0] grp_flat_fu_831_flat_array_V_d0;
wire    grp_max_pool_1_fu_839_ap_start;
wire    grp_max_pool_1_fu_839_ap_done;
wire    grp_max_pool_1_fu_839_ap_idle;
wire    grp_max_pool_1_fu_839_ap_ready;
wire   [11:0] grp_max_pool_1_fu_839_conv_out_V_address0;
wire    grp_max_pool_1_fu_839_conv_out_V_ce0;
wire   [9:0] grp_max_pool_1_fu_839_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_839_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_839_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_839_max_pool_out_V_d0;
reg   [9:0] ix_in_0_reg_604;
reg   [4:0] i_0_reg_616;
reg   [9:0] ix_in_1_reg_627;
wire    ap_CS_fsm_state6;
reg   [4:0] j_0_reg_637;
reg   [5:0] i_0_i_reg_648;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state20;
reg   [13:0] p_Val2_29_reg_659;
reg   [8:0] j_0_i_reg_671;
reg   [14:0] phi_mul_reg_682;
reg   [4:0] i_0_i24_reg_693;
wire    ap_CS_fsm_state24;
reg   [13:0] p_Val2_32_reg_704;
reg   [5:0] j_0_i29_reg_716;
reg   [3:0] d_0_i_reg_727;
wire    ap_CS_fsm_state28;
reg   [13:0] p_Val2_38_reg_738;
reg   [4:0] f_0_i_reg_750;
reg   [3:0] i24_0_reg_761;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state32;
reg    grp_conv_2_fu_772_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_conv_1_fu_792_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_soft_max_fu_802_ap_start_reg;
reg    grp_max_pool_2_fu_814_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_flat_fu_831_ap_start_reg;
wire    ap_CS_fsm_state15;
reg    grp_max_pool_1_fu_839_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln27_fu_918_p1;
wire  signed [63:0] sext_ln203_fu_1212_p1;
wire   [63:0] zext_ln1117_fu_1264_p1;
wire   [63:0] zext_ln14_3_fu_1248_p1;
wire  signed [63:0] sext_ln1117_fu_1407_p1;
wire   [63:0] zext_ln14_4_fu_1367_p1;
wire   [63:0] zext_ln1116_9_fu_1550_p1;
wire   [63:0] zext_ln48_1_fu_1510_p1;
wire   [12:0] select_ln19_fu_1326_p3;
wire   [12:0] select_ln19_1_fu_1469_p3;
wire   [13:0] add_ln703_2_fu_1584_p2;
wire   [9:0] tmp_s_fu_867_p3;
wire   [6:0] tmp_9_fu_879_p3;
wire   [10:0] zext_ln203_fu_875_p1;
wire   [10:0] zext_ln203_17_fu_887_p1;
wire   [10:0] zext_ln203_18_fu_909_p1;
wire   [63:0] grp_fu_845_p1;
wire   [63:0] ireg_V_fu_929_p1;
wire   [10:0] exp_tmp_V_fu_945_p4;
wire   [51:0] trunc_ln565_fu_959_p1;
wire   [52:0] tmp_fu_963_p3;
wire   [53:0] p_Result_40_fu_971_p1;
wire   [0:0] p_Result_39_fu_937_p3;
wire   [53:0] man_V_1_fu_975_p2;
wire   [62:0] trunc_ln556_fu_933_p1;
wire   [11:0] zext_ln461_fu_955_p1;
wire   [11:0] F2_fu_995_p2;
wire   [0:0] icmp_ln581_fu_1001_p2;
wire   [11:0] add_ln581_fu_1007_p2;
wire   [11:0] sub_ln581_fu_1013_p2;
wire  signed [11:0] sh_amt_fu_1019_p3;
wire   [53:0] man_V_2_fu_981_p3;
wire  signed [31:0] sext_ln581_fu_1027_p1;
wire   [53:0] zext_ln586_fu_1053_p1;
wire   [53:0] ashr_ln586_fu_1057_p2;
wire   [31:0] bitcast_ln696_fu_1067_p1;
wire   [0:0] tmp_22_fu_1070_p3;
wire   [13:0] trunc_ln583_fu_1037_p1;
wire   [13:0] sext_ln581cast_fu_1086_p1;
wire   [0:0] icmp_ln571_fu_989_p2;
wire   [0:0] icmp_ln582_fu_1031_p2;
wire   [0:0] xor_ln571_fu_1096_p2;
wire   [0:0] or_ln582_fu_1108_p2;
wire   [0:0] xor_ln582_fu_1114_p2;
wire   [0:0] icmp_ln585_fu_1041_p2;
wire   [0:0] and_ln581_fu_1120_p2;
wire   [0:0] xor_ln585_fu_1126_p2;
wire   [0:0] or_ln581_fu_1144_p2;
wire   [0:0] icmp_ln603_fu_1047_p2;
wire   [0:0] xor_ln581_fu_1150_p2;
wire   [0:0] and_ln603_fu_1156_p2;
wire   [13:0] shl_ln604_fu_1090_p2;
wire   [13:0] trunc_ln586_fu_1063_p1;
wire   [0:0] and_ln585_1_fu_1138_p2;
wire   [0:0] and_ln585_fu_1132_p2;
wire   [13:0] select_ln588_fu_1078_p3;
wire   [0:0] and_ln582_fu_1102_p2;
wire   [0:0] or_ln603_fu_1170_p2;
wire   [13:0] select_ln603_fu_1162_p3;
wire   [13:0] select_ln603_1_fu_1176_p3;
wire   [0:0] or_ln603_1_fu_1184_p2;
wire   [0:0] or_ln603_2_fu_1198_p2;
wire   [13:0] select_ln603_2_fu_1190_p3;
wire   [14:0] add_ln1117_fu_1259_p2;
wire  signed [21:0] grp_fu_1899_p3;
wire  signed [5:0] sext_ln1265_fu_1294_p0;
wire  signed [5:0] sext_ln703_fu_1302_p0;
wire  signed [13:0] sext_ln1265_fu_1294_p1;
wire  signed [12:0] sext_ln703_fu_1302_p1;
wire   [12:0] trunc_ln703_fu_1298_p1;
wire   [13:0] add_ln703_fu_1306_p2;
wire   [0:0] tmp_23_fu_1318_p3;
wire   [12:0] add_ln203_fu_1312_p2;
wire   [10:0] tmp_10_fu_1372_p3;
wire   [6:0] tmp_11_fu_1384_p3;
wire   [11:0] zext_ln1117_6_fu_1380_p1;
wire   [11:0] zext_ln1117_7_fu_1392_p1;
wire   [11:0] sub_ln1117_fu_1396_p2;
wire   [11:0] add_ln1117_2_fu_1402_p2;
wire  signed [21:0] grp_fu_1908_p3;
wire  signed [8:0] sext_ln1265_1_fu_1437_p0;
wire  signed [8:0] sext_ln703_2_fu_1445_p0;
wire  signed [13:0] sext_ln1265_1_fu_1437_p1;
wire  signed [12:0] sext_ln703_2_fu_1445_p1;
wire   [12:0] trunc_ln703_1_fu_1441_p1;
wire   [13:0] add_ln703_1_fu_1449_p2;
wire   [0:0] tmp_24_fu_1461_p3;
wire   [12:0] add_ln203_1_fu_1455_p2;
wire   [7:0] tmp_12_fu_1515_p3;
wire   [5:0] tmp_13_fu_1527_p3;
wire   [8:0] zext_ln1116_8_fu_1535_p1;
wire   [8:0] zext_ln1116_fu_1523_p1;
wire   [8:0] add_ln1116_fu_1539_p2;
wire   [8:0] add_ln1116_4_fu_1545_p2;
wire  signed [21:0] grp_fu_1917_p3;
wire  signed [13:0] sext_ln1265_2_fu_1580_p1;
wire   [13:0] tmp_V_fu_1622_p2;
reg   [13:0] p_Result_s_fu_1636_p4;
wire   [31:0] p_Result_42_fu_1646_p3;
reg   [31:0] l_fu_1654_p3;
wire   [31:0] lsb_index_fu_1672_p2;
wire   [30:0] tmp_26_fu_1678_p4;
wire   [3:0] trunc_ln947_fu_1694_p1;
wire   [3:0] sub_ln947_fu_1698_p2;
wire   [13:0] zext_ln947_fu_1704_p1;
wire   [13:0] lshr_ln947_fu_1708_p2;
wire   [13:0] p_Result_36_fu_1714_p2;
wire   [0:0] icmp_ln947_fu_1688_p2;
wire   [0:0] icmp_ln947_1_fu_1720_p2;
wire   [0:0] tmp_27_fu_1732_p3;
wire   [13:0] trunc_ln944_fu_1668_p1;
wire   [13:0] add_ln949_fu_1746_p2;
wire   [0:0] p_Result_37_fu_1752_p3;
wire   [0:0] xor_ln949_fu_1740_p2;
wire   [0:0] and_ln949_fu_1760_p2;
wire   [0:0] a_fu_1726_p2;
wire   [0:0] or_ln949_fu_1766_p2;
wire   [31:0] m_fu_1790_p1;
wire   [31:0] add_ln958_fu_1793_p2;
wire   [31:0] sub_ln958_fu_1804_p2;
wire   [31:0] lshr_ln958_fu_1798_p2;
wire   [31:0] shl_ln958_fu_1809_p2;
wire   [31:0] m_12_fu_1815_p3;
wire   [31:0] m_13_fu_1822_p2;
wire   [30:0] m_s_fu_1827_p4;
wire   [0:0] tmp_28_fu_1841_p3;
wire   [7:0] select_ln964_fu_1849_p3;
wire   [7:0] sub_ln964_fu_1857_p2;
wire   [7:0] add_ln964_fu_1862_p2;
wire   [31:0] m_16_fu_1837_p1;
wire   [8:0] tmp_7_fu_1868_p3;
wire   [31:0] p_Result_43_fu_1875_p5;
wire   [31:0] bitcast_ln739_fu_1887_p1;
wire   [21:0] grp_fu_1899_p2;
wire   [12:0] grp_fu_1908_p1;
wire   [21:0] grp_fu_1908_p2;
wire   [12:0] grp_fu_1917_p0;
wire   [21:0] grp_fu_1917_p2;
reg   [31:0] ap_NS_fsm;
wire   [21:0] grp_fu_1908_p10;
wire   [21:0] grp_fu_1917_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 grp_conv_2_fu_772_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_792_ap_start_reg = 1'b0;
#0 grp_soft_max_fu_802_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_814_ap_start_reg = 1'b0;
#0 grp_flat_fu_831_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_839_ap_start_reg = 1'b0;
end

cnn_dense_1_weighmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_weights_V_address0),
    .ce0(dense_1_weights_V_ce0),
    .q0(dense_1_weights_V_q0)
);

cnn_dense_1_bias_V #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_V_address0),
    .ce0(dense_1_bias_V_ce0),
    .q0(dense_1_bias_V_q0)
);

cnn_dense_2_weighncg #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0)
);

cnn_dense_2_bias_V #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_dense_out_weiocq #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0)
);

cnn_dense_out_biapcA #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0)
);

cnn_conv_1_input_V #(
    .DataWidth( 14 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_V_address0),
    .ce0(conv_1_input_V_ce0),
    .we0(conv_1_input_V_we0),
    .d0(select_ln603_3_reg_1993),
    .q0(conv_1_input_V_q0)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0)
);

cnn_max_pool_1_ouqcK #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_0_V_address0),
    .ce0(conv_2_out_0_V_ce0),
    .we0(conv_2_out_0_V_we0),
    .d0(conv_2_out_0_V_d0),
    .q0(conv_2_out_0_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_0_V_address1),
    .ce1(conv_2_out_0_V_ce1),
    .q1(conv_2_out_0_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_1_V_address0),
    .ce0(conv_2_out_1_V_ce0),
    .we0(conv_2_out_1_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_1_V_d0),
    .q0(conv_2_out_1_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_1_V_address1),
    .ce1(conv_2_out_1_V_ce1),
    .q1(conv_2_out_1_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_2_V_address0),
    .ce0(conv_2_out_2_V_ce0),
    .we0(conv_2_out_2_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_2_V_d0),
    .q0(conv_2_out_2_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_2_V_address1),
    .ce1(conv_2_out_2_V_ce1),
    .q1(conv_2_out_2_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_3_V_address0),
    .ce0(conv_2_out_3_V_ce0),
    .we0(conv_2_out_3_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_3_V_d0),
    .q0(conv_2_out_3_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_3_V_address1),
    .ce1(conv_2_out_3_V_ce1),
    .q1(conv_2_out_3_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_4_V_address0),
    .ce0(conv_2_out_4_V_ce0),
    .we0(conv_2_out_4_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_4_V_d0),
    .q0(conv_2_out_4_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_4_V_address1),
    .ce1(conv_2_out_4_V_ce1),
    .q1(conv_2_out_4_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_5_V_address0),
    .ce0(conv_2_out_5_V_ce0),
    .we0(conv_2_out_5_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_5_V_d0),
    .q0(conv_2_out_5_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_5_V_address1),
    .ce1(conv_2_out_5_V_ce1),
    .q1(conv_2_out_5_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_6_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_6_V_address0),
    .ce0(conv_2_out_6_V_ce0),
    .we0(conv_2_out_6_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_6_V_d0),
    .q0(conv_2_out_6_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_6_V_address1),
    .ce1(conv_2_out_6_V_ce1),
    .q1(conv_2_out_6_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_7_V_address0),
    .ce0(conv_2_out_7_V_ce0),
    .we0(conv_2_out_7_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_7_V_d0),
    .q0(conv_2_out_7_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_7_V_address1),
    .ce1(conv_2_out_7_V_ce1),
    .q1(conv_2_out_7_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_8_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_8_V_address0),
    .ce0(conv_2_out_8_V_ce0),
    .we0(conv_2_out_8_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_8_V_d0),
    .q0(conv_2_out_8_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_8_V_address1),
    .ce1(conv_2_out_8_V_ce1),
    .q1(conv_2_out_8_V_q1)
);

cnn_conv_2_out_0_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_9_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_9_V_address0),
    .ce0(conv_2_out_9_V_ce0),
    .we0(conv_2_out_9_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_9_V_d0),
    .q0(conv_2_out_9_V_q0),
    .address1(grp_max_pool_2_fu_814_conv_out_9_V_address1),
    .ce1(conv_2_out_9_V_ce1),
    .q1(conv_2_out_9_V_q1)
);

cnn_conv_2_out_10_V #(
    .DataWidth( 14 ),
    .AddressRange( 176 ),
    .AddressWidth( 8 ))
conv_2_out_10_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_conv_2_fu_772_conv_out_10_V_address0),
    .ce0(grp_conv_2_fu_772_conv_out_10_V_ce0),
    .we0(grp_conv_2_fu_772_conv_out_10_V_we0),
    .d0(grp_conv_2_fu_772_conv_out_10_V_d0)
);

cnn_max_pool_2_ourcU #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
max_pool_2_out_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_0_V_address0),
    .ce0(max_pool_2_out_0_V_ce0),
    .we0(max_pool_2_out_0_V_we0),
    .d0(max_pool_2_out_0_V_d0),
    .q0(max_pool_2_out_0_V_q0),
    .address1(grp_max_pool_2_fu_814_max_pool_out_0_V_address1),
    .ce1(max_pool_2_out_0_V_ce1),
    .we1(max_pool_2_out_0_V_we1),
    .d1(grp_max_pool_2_fu_814_max_pool_out_0_V_d1)
);

cnn_max_pool_2_ourcU #(
    .DataWidth( 14 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
max_pool_2_out_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_1_V_address0),
    .ce0(max_pool_2_out_1_V_ce0),
    .we0(max_pool_2_out_1_V_we0),
    .d0(grp_max_pool_2_fu_814_max_pool_out_1_V_d0),
    .q0(max_pool_2_out_1_V_q0),
    .address1(grp_max_pool_2_fu_814_max_pool_out_1_V_address1),
    .ce1(max_pool_2_out_1_V_ce1),
    .we1(max_pool_2_out_1_V_we1),
    .d1(grp_max_pool_2_fu_814_max_pool_out_1_V_d1)
);

cnn_max_pool_2_outde #(
    .DataWidth( 14 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
max_pool_2_out_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_2_0_address0),
    .ce0(max_pool_2_out_2_0_ce0),
    .we0(max_pool_2_out_2_0_we0),
    .d0(grp_max_pool_2_fu_814_max_pool_out_2_0_V_d0),
    .q0(max_pool_2_out_2_0_q0)
);

cnn_flat_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

conv_2 grp_conv_2_fu_772(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_2_fu_772_ap_start),
    .ap_done(grp_conv_2_fu_772_ap_done),
    .ap_idle(grp_conv_2_fu_772_ap_idle),
    .ap_ready(grp_conv_2_fu_772_ap_ready),
    .input_V_address0(grp_conv_2_fu_772_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_772_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .conv_out_0_V_address0(grp_conv_2_fu_772_conv_out_0_V_address0),
    .conv_out_0_V_ce0(grp_conv_2_fu_772_conv_out_0_V_ce0),
    .conv_out_0_V_we0(grp_conv_2_fu_772_conv_out_0_V_we0),
    .conv_out_0_V_d0(grp_conv_2_fu_772_conv_out_0_V_d0),
    .conv_out_1_V_address0(grp_conv_2_fu_772_conv_out_1_V_address0),
    .conv_out_1_V_ce0(grp_conv_2_fu_772_conv_out_1_V_ce0),
    .conv_out_1_V_we0(grp_conv_2_fu_772_conv_out_1_V_we0),
    .conv_out_1_V_d0(grp_conv_2_fu_772_conv_out_1_V_d0),
    .conv_out_2_V_address0(grp_conv_2_fu_772_conv_out_2_V_address0),
    .conv_out_2_V_ce0(grp_conv_2_fu_772_conv_out_2_V_ce0),
    .conv_out_2_V_we0(grp_conv_2_fu_772_conv_out_2_V_we0),
    .conv_out_2_V_d0(grp_conv_2_fu_772_conv_out_2_V_d0),
    .conv_out_3_V_address0(grp_conv_2_fu_772_conv_out_3_V_address0),
    .conv_out_3_V_ce0(grp_conv_2_fu_772_conv_out_3_V_ce0),
    .conv_out_3_V_we0(grp_conv_2_fu_772_conv_out_3_V_we0),
    .conv_out_3_V_d0(grp_conv_2_fu_772_conv_out_3_V_d0),
    .conv_out_4_V_address0(grp_conv_2_fu_772_conv_out_4_V_address0),
    .conv_out_4_V_ce0(grp_conv_2_fu_772_conv_out_4_V_ce0),
    .conv_out_4_V_we0(grp_conv_2_fu_772_conv_out_4_V_we0),
    .conv_out_4_V_d0(grp_conv_2_fu_772_conv_out_4_V_d0),
    .conv_out_5_V_address0(grp_conv_2_fu_772_conv_out_5_V_address0),
    .conv_out_5_V_ce0(grp_conv_2_fu_772_conv_out_5_V_ce0),
    .conv_out_5_V_we0(grp_conv_2_fu_772_conv_out_5_V_we0),
    .conv_out_5_V_d0(grp_conv_2_fu_772_conv_out_5_V_d0),
    .conv_out_6_V_address0(grp_conv_2_fu_772_conv_out_6_V_address0),
    .conv_out_6_V_ce0(grp_conv_2_fu_772_conv_out_6_V_ce0),
    .conv_out_6_V_we0(grp_conv_2_fu_772_conv_out_6_V_we0),
    .conv_out_6_V_d0(grp_conv_2_fu_772_conv_out_6_V_d0),
    .conv_out_7_V_address0(grp_conv_2_fu_772_conv_out_7_V_address0),
    .conv_out_7_V_ce0(grp_conv_2_fu_772_conv_out_7_V_ce0),
    .conv_out_7_V_we0(grp_conv_2_fu_772_conv_out_7_V_we0),
    .conv_out_7_V_d0(grp_conv_2_fu_772_conv_out_7_V_d0),
    .conv_out_8_V_address0(grp_conv_2_fu_772_conv_out_8_V_address0),
    .conv_out_8_V_ce0(grp_conv_2_fu_772_conv_out_8_V_ce0),
    .conv_out_8_V_we0(grp_conv_2_fu_772_conv_out_8_V_we0),
    .conv_out_8_V_d0(grp_conv_2_fu_772_conv_out_8_V_d0),
    .conv_out_9_V_address0(grp_conv_2_fu_772_conv_out_9_V_address0),
    .conv_out_9_V_ce0(grp_conv_2_fu_772_conv_out_9_V_ce0),
    .conv_out_9_V_we0(grp_conv_2_fu_772_conv_out_9_V_we0),
    .conv_out_9_V_d0(grp_conv_2_fu_772_conv_out_9_V_d0),
    .conv_out_10_V_address0(grp_conv_2_fu_772_conv_out_10_V_address0),
    .conv_out_10_V_ce0(grp_conv_2_fu_772_conv_out_10_V_ce0),
    .conv_out_10_V_we0(grp_conv_2_fu_772_conv_out_10_V_we0),
    .conv_out_10_V_d0(grp_conv_2_fu_772_conv_out_10_V_d0)
);

conv_1 grp_conv_1_fu_792(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_1_fu_792_ap_start),
    .ap_done(grp_conv_1_fu_792_ap_done),
    .ap_idle(grp_conv_1_fu_792_ap_idle),
    .ap_ready(grp_conv_1_fu_792_ap_ready),
    .input_V_address0(grp_conv_1_fu_792_input_V_address0),
    .input_V_ce0(grp_conv_1_fu_792_input_V_ce0),
    .input_V_q0(conv_1_input_V_q0),
    .conv_out_V_address0(grp_conv_1_fu_792_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_792_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_792_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_792_conv_out_V_d0)
);

soft_max grp_soft_max_fu_802(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_802_ap_start),
    .ap_done(grp_soft_max_fu_802_ap_done),
    .ap_idle(grp_soft_max_fu_802_ap_idle),
    .ap_ready(grp_soft_max_fu_802_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_802_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_802_dense_array_V_ce0),
    .dense_array_V_we0(grp_soft_max_fu_802_dense_array_V_we0),
    .dense_array_V_d0(grp_soft_max_fu_802_dense_array_V_d0),
    .dense_array_V_q0(dense_array_V_q0),
    .prediction_V_address0(grp_soft_max_fu_802_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_802_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_802_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_802_prediction_V_d0)
);

max_pool_2 grp_max_pool_2_fu_814(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_2_fu_814_ap_start),
    .ap_done(grp_max_pool_2_fu_814_ap_done),
    .ap_idle(grp_max_pool_2_fu_814_ap_idle),
    .ap_ready(grp_max_pool_2_fu_814_ap_ready),
    .conv_out_0_V_address0(grp_max_pool_2_fu_814_conv_out_0_V_address0),
    .conv_out_0_V_ce0(grp_max_pool_2_fu_814_conv_out_0_V_ce0),
    .conv_out_0_V_q0(conv_2_out_0_V_q0),
    .conv_out_0_V_address1(grp_max_pool_2_fu_814_conv_out_0_V_address1),
    .conv_out_0_V_ce1(grp_max_pool_2_fu_814_conv_out_0_V_ce1),
    .conv_out_0_V_q1(conv_2_out_0_V_q1),
    .conv_out_1_V_address0(grp_max_pool_2_fu_814_conv_out_1_V_address0),
    .conv_out_1_V_ce0(grp_max_pool_2_fu_814_conv_out_1_V_ce0),
    .conv_out_1_V_q0(conv_2_out_1_V_q0),
    .conv_out_1_V_address1(grp_max_pool_2_fu_814_conv_out_1_V_address1),
    .conv_out_1_V_ce1(grp_max_pool_2_fu_814_conv_out_1_V_ce1),
    .conv_out_1_V_q1(conv_2_out_1_V_q1),
    .conv_out_2_V_address0(grp_max_pool_2_fu_814_conv_out_2_V_address0),
    .conv_out_2_V_ce0(grp_max_pool_2_fu_814_conv_out_2_V_ce0),
    .conv_out_2_V_q0(conv_2_out_2_V_q0),
    .conv_out_2_V_address1(grp_max_pool_2_fu_814_conv_out_2_V_address1),
    .conv_out_2_V_ce1(grp_max_pool_2_fu_814_conv_out_2_V_ce1),
    .conv_out_2_V_q1(conv_2_out_2_V_q1),
    .conv_out_3_V_address0(grp_max_pool_2_fu_814_conv_out_3_V_address0),
    .conv_out_3_V_ce0(grp_max_pool_2_fu_814_conv_out_3_V_ce0),
    .conv_out_3_V_q0(conv_2_out_3_V_q0),
    .conv_out_3_V_address1(grp_max_pool_2_fu_814_conv_out_3_V_address1),
    .conv_out_3_V_ce1(grp_max_pool_2_fu_814_conv_out_3_V_ce1),
    .conv_out_3_V_q1(conv_2_out_3_V_q1),
    .conv_out_4_V_address0(grp_max_pool_2_fu_814_conv_out_4_V_address0),
    .conv_out_4_V_ce0(grp_max_pool_2_fu_814_conv_out_4_V_ce0),
    .conv_out_4_V_q0(conv_2_out_4_V_q0),
    .conv_out_4_V_address1(grp_max_pool_2_fu_814_conv_out_4_V_address1),
    .conv_out_4_V_ce1(grp_max_pool_2_fu_814_conv_out_4_V_ce1),
    .conv_out_4_V_q1(conv_2_out_4_V_q1),
    .conv_out_5_V_address0(grp_max_pool_2_fu_814_conv_out_5_V_address0),
    .conv_out_5_V_ce0(grp_max_pool_2_fu_814_conv_out_5_V_ce0),
    .conv_out_5_V_q0(conv_2_out_5_V_q0),
    .conv_out_5_V_address1(grp_max_pool_2_fu_814_conv_out_5_V_address1),
    .conv_out_5_V_ce1(grp_max_pool_2_fu_814_conv_out_5_V_ce1),
    .conv_out_5_V_q1(conv_2_out_5_V_q1),
    .conv_out_6_V_address0(grp_max_pool_2_fu_814_conv_out_6_V_address0),
    .conv_out_6_V_ce0(grp_max_pool_2_fu_814_conv_out_6_V_ce0),
    .conv_out_6_V_q0(conv_2_out_6_V_q0),
    .conv_out_6_V_address1(grp_max_pool_2_fu_814_conv_out_6_V_address1),
    .conv_out_6_V_ce1(grp_max_pool_2_fu_814_conv_out_6_V_ce1),
    .conv_out_6_V_q1(conv_2_out_6_V_q1),
    .conv_out_7_V_address0(grp_max_pool_2_fu_814_conv_out_7_V_address0),
    .conv_out_7_V_ce0(grp_max_pool_2_fu_814_conv_out_7_V_ce0),
    .conv_out_7_V_q0(conv_2_out_7_V_q0),
    .conv_out_7_V_address1(grp_max_pool_2_fu_814_conv_out_7_V_address1),
    .conv_out_7_V_ce1(grp_max_pool_2_fu_814_conv_out_7_V_ce1),
    .conv_out_7_V_q1(conv_2_out_7_V_q1),
    .conv_out_8_V_address0(grp_max_pool_2_fu_814_conv_out_8_V_address0),
    .conv_out_8_V_ce0(grp_max_pool_2_fu_814_conv_out_8_V_ce0),
    .conv_out_8_V_q0(conv_2_out_8_V_q0),
    .conv_out_8_V_address1(grp_max_pool_2_fu_814_conv_out_8_V_address1),
    .conv_out_8_V_ce1(grp_max_pool_2_fu_814_conv_out_8_V_ce1),
    .conv_out_8_V_q1(conv_2_out_8_V_q1),
    .conv_out_9_V_address0(grp_max_pool_2_fu_814_conv_out_9_V_address0),
    .conv_out_9_V_ce0(grp_max_pool_2_fu_814_conv_out_9_V_ce0),
    .conv_out_9_V_q0(conv_2_out_9_V_q0),
    .conv_out_9_V_address1(grp_max_pool_2_fu_814_conv_out_9_V_address1),
    .conv_out_9_V_ce1(grp_max_pool_2_fu_814_conv_out_9_V_ce1),
    .conv_out_9_V_q1(conv_2_out_9_V_q1),
    .max_pool_out_0_V_address0(grp_max_pool_2_fu_814_max_pool_out_0_V_address0),
    .max_pool_out_0_V_ce0(grp_max_pool_2_fu_814_max_pool_out_0_V_ce0),
    .max_pool_out_0_V_we0(grp_max_pool_2_fu_814_max_pool_out_0_V_we0),
    .max_pool_out_0_V_d0(grp_max_pool_2_fu_814_max_pool_out_0_V_d0),
    .max_pool_out_0_V_address1(grp_max_pool_2_fu_814_max_pool_out_0_V_address1),
    .max_pool_out_0_V_ce1(grp_max_pool_2_fu_814_max_pool_out_0_V_ce1),
    .max_pool_out_0_V_we1(grp_max_pool_2_fu_814_max_pool_out_0_V_we1),
    .max_pool_out_0_V_d1(grp_max_pool_2_fu_814_max_pool_out_0_V_d1),
    .max_pool_out_1_V_address0(grp_max_pool_2_fu_814_max_pool_out_1_V_address0),
    .max_pool_out_1_V_ce0(grp_max_pool_2_fu_814_max_pool_out_1_V_ce0),
    .max_pool_out_1_V_we0(grp_max_pool_2_fu_814_max_pool_out_1_V_we0),
    .max_pool_out_1_V_d0(grp_max_pool_2_fu_814_max_pool_out_1_V_d0),
    .max_pool_out_1_V_address1(grp_max_pool_2_fu_814_max_pool_out_1_V_address1),
    .max_pool_out_1_V_ce1(grp_max_pool_2_fu_814_max_pool_out_1_V_ce1),
    .max_pool_out_1_V_we1(grp_max_pool_2_fu_814_max_pool_out_1_V_we1),
    .max_pool_out_1_V_d1(grp_max_pool_2_fu_814_max_pool_out_1_V_d1),
    .max_pool_out_2_0_V_address0(grp_max_pool_2_fu_814_max_pool_out_2_0_V_address0),
    .max_pool_out_2_0_V_ce0(grp_max_pool_2_fu_814_max_pool_out_2_0_V_ce0),
    .max_pool_out_2_0_V_we0(grp_max_pool_2_fu_814_max_pool_out_2_0_V_we0),
    .max_pool_out_2_0_V_d0(grp_max_pool_2_fu_814_max_pool_out_2_0_V_d0)
);

flat grp_flat_fu_831(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_flat_fu_831_ap_start),
    .ap_done(grp_flat_fu_831_ap_done),
    .ap_idle(grp_flat_fu_831_ap_idle),
    .ap_ready(grp_flat_fu_831_ap_ready),
    .max_pool_out_0_V_address0(grp_flat_fu_831_max_pool_out_0_V_address0),
    .max_pool_out_0_V_ce0(grp_flat_fu_831_max_pool_out_0_V_ce0),
    .max_pool_out_0_V_q0(max_pool_2_out_0_V_q0),
    .max_pool_out_1_V_address0(grp_flat_fu_831_max_pool_out_1_V_address0),
    .max_pool_out_1_V_ce0(grp_flat_fu_831_max_pool_out_1_V_ce0),
    .max_pool_out_1_V_q0(max_pool_2_out_1_V_q0),
    .max_pool_out_2_0_V_address0(grp_flat_fu_831_max_pool_out_2_0_V_address0),
    .max_pool_out_2_0_V_ce0(grp_flat_fu_831_max_pool_out_2_0_V_ce0),
    .max_pool_out_2_0_V_q0(max_pool_2_out_2_0_q0),
    .flat_array_V_address0(grp_flat_fu_831_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_831_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_831_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_831_flat_array_V_d0)
);

max_pool_1 grp_max_pool_1_fu_839(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_1_fu_839_ap_start),
    .ap_done(grp_max_pool_1_fu_839_ap_done),
    .ap_idle(grp_max_pool_1_fu_839_ap_idle),
    .ap_ready(grp_max_pool_1_fu_839_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_839_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_839_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_1_fu_839_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_839_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_839_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_839_max_pool_out_V_d0)
);

cnn_fpext_32ns_64udo #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64udo_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cnn_input_q0),
    .ce(1'b1),
    .dout(grp_fu_845_p1)
);

cnn_mac_muladd_9svdy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9svdy_U54(
    .din0(dense_1_weights_V_q0),
    .din1(flat_array_V_q0),
    .din2(grp_fu_1899_p2),
    .dout(grp_fu_1899_p3)
);

cnn_mac_muladd_9swdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9swdI_U55(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1908_p1),
    .din2(grp_fu_1908_p2),
    .dout(grp_fu_1908_p3)
);

cnn_mac_muladd_13xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13xdS_U56(
    .din0(grp_fu_1917_p0),
    .din1(dense_out_weights_V_q0),
    .din2(grp_fu_1917_p2),
    .dout(grp_fu_1917_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_1_fu_792_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_792_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_792_ap_ready == 1'b1)) begin
            grp_conv_1_fu_792_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_2_fu_772_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_772_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_772_ap_ready == 1'b1)) begin
            grp_conv_2_fu_772_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_flat_fu_831_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_831_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_831_ap_ready == 1'b1)) begin
            grp_flat_fu_831_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_1_fu_839_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_839_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_839_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_839_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_2_fu_814_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_814_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_814_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_814_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_802_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln41_fu_1478_p2 == 1'd1))) begin
            grp_soft_max_fu_802_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_802_ap_ready == 1'b1)) begin
            grp_soft_max_fu_802_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd1))) begin
        d_0_i_reg_727 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        d_0_i_reg_727 <= d_reg_2100;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        f_0_i_reg_750 <= f_reg_2119;
    end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln41_fu_1478_p2 == 1'd0))) begin
        f_0_i_reg_750 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        i24_0_reg_761 <= i_3_reg_2147;
    end else if (((grp_soft_max_fu_802_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        i24_0_reg_761 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_0_i24_reg_693 <= i_2_reg_2053;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd1))) begin
        i_0_i24_reg_693 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_0_i_reg_648 <= i_1_reg_2001;
    end else if (((grp_flat_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_0_i_reg_648 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_897_p2 == 1'd1))) begin
        i_0_reg_616 <= i_reg_1949;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_616 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_897_p2 == 1'd1))) begin
        ix_in_0_reg_604 <= ix_in_reg_1954;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_604 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_627 <= add_ln28_reg_1982;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd0))) begin
        ix_in_1_reg_627 <= ix_in_0_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        j_0_i29_reg_716 <= j_2_reg_2072;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd0))) begin
        j_0_i29_reg_716 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_0_i_reg_671 <= j_1_reg_2020;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd0))) begin
        j_0_i_reg_671 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_637 <= j_reg_1967;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd0))) begin
        j_0_reg_637 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_29_reg_659 <= {{grp_fu_1899_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd0))) begin
        p_Val2_29_reg_659 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        p_Val2_32_reg_704 <= {{grp_fu_1908_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd0))) begin
        p_Val2_32_reg_704 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p_Val2_38_reg_738 <= {{grp_fu_1917_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln41_fu_1478_p2 == 1'd0))) begin
        p_Val2_38_reg_738 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        phi_mul_reg_682 <= add_ln1117_3_reg_2025;
    end else if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd0))) begin
        phi_mul_reg_682 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln13_fu_1236_p2 == 1'd0))) begin
        add_ln1117_3_reg_2025 <= add_ln1117_3_fu_1253_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_897_p2 == 1'd0))) begin
        add_ln203_7_reg_1972 <= add_ln203_7_fu_913_p2;
        add_ln28_reg_1982 <= add_ln28_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_1987 <= cnn_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        d_reg_2100 <= d_fu_1484_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        f_reg_2119 <= f_fu_1504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_1_reg_2001 <= i_1_fu_1222_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_2_reg_2053 <= i_2_fu_1341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i_3_reg_2147 <= i_3_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1949 <= i_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        icmp_ln935_reg_2162 <= icmp_ln935_fu_1608_p2;
        icmp_ln958_reg_2188 <= icmp_ln958_fu_1780_p2;
        or_ln_reg_2183[0] <= or_ln_fu_1772_p3[0];
        p_Result_41_reg_2167 <= prediction_V_q0[32'd13];
        sub_ln944_reg_2177 <= sub_ln944_fu_1662_p2;
        tmp_V_13_reg_2172 <= tmp_V_13_fu_1628_p3;
        trunc_ln943_reg_2193 <= trunc_ln943_fu_1786_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd0))) begin
        ix_in_reg_1954 <= ix_in_fu_861_p2;
        sub_ln203_reg_1959[10 : 2] <= sub_ln203_fu_891_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_1_reg_2020 <= j_1_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_2_reg_2072 <= j_2_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1967 <= j_fu_903_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_1993 <= select_ln603_3_fu_1204_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd0))) begin
        zext_ln13_2_reg_2064[4 : 0] <= zext_ln13_2_fu_1351_p1[4 : 0];
        zext_ln14_2_reg_2058[4 : 0] <= zext_ln14_2_fu_1347_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd0))) begin
        zext_ln13_reg_2012[5 : 0] <= zext_ln13_fu_1232_p1[5 : 0];
        zext_ln14_reg_2006[5 : 0] <= zext_ln14_fu_1228_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln41_fu_1478_p2 == 1'd0))) begin
        zext_ln46_reg_2111[3 : 0] <= zext_ln46_fu_1494_p1[3 : 0];
        zext_ln48_reg_2105[3 : 0] <= zext_ln48_fu_1490_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln69_fu_1591_p2 == 1'd0))) begin
        zext_ln70_reg_2152[3 : 0] <= zext_ln70_fu_1603_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln69_fu_1591_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln69_fu_1591_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_ce0 = 1'b1;
    end else begin
        cnn_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_address0 = sext_ln203_fu_1212_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_address0 = grp_conv_1_fu_792_input_V_address0;
    end else begin
        conv_1_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce0 = grp_conv_1_fu_792_input_V_ce0;
    end else begin
        conv_1_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_we0 = 1'b1;
    end else begin
        conv_1_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_839_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_792_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_839_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_792_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_792_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd1))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_792_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_0_V_address0 = grp_max_pool_2_fu_814_conv_out_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_0_V_address0 = grp_conv_2_fu_772_conv_out_0_V_address0;
    end else begin
        conv_2_out_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_0_V_ce0 = grp_max_pool_2_fu_814_conv_out_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_0_V_ce0 = grp_conv_2_fu_772_conv_out_0_V_ce0;
    end else begin
        conv_2_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_0_V_ce1 = grp_max_pool_2_fu_814_conv_out_0_V_ce1;
    end else begin
        conv_2_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_0_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_0_V_d0 = grp_conv_2_fu_772_conv_out_0_V_d0;
    end else begin
        conv_2_out_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd1))) begin
        conv_2_out_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_0_V_we0 = grp_conv_2_fu_772_conv_out_0_V_we0;
    end else begin
        conv_2_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_1_V_address0 = grp_max_pool_2_fu_814_conv_out_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_1_V_address0 = grp_conv_2_fu_772_conv_out_1_V_address0;
    end else begin
        conv_2_out_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_1_V_ce0 = grp_max_pool_2_fu_814_conv_out_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_1_V_ce0 = grp_conv_2_fu_772_conv_out_1_V_ce0;
    end else begin
        conv_2_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_1_V_ce1 = grp_max_pool_2_fu_814_conv_out_1_V_ce1;
    end else begin
        conv_2_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_1_V_we0 = grp_conv_2_fu_772_conv_out_1_V_we0;
    end else begin
        conv_2_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_2_V_address0 = grp_max_pool_2_fu_814_conv_out_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_2_V_address0 = grp_conv_2_fu_772_conv_out_2_V_address0;
    end else begin
        conv_2_out_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_2_V_ce0 = grp_max_pool_2_fu_814_conv_out_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_2_V_ce0 = grp_conv_2_fu_772_conv_out_2_V_ce0;
    end else begin
        conv_2_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_2_V_ce1 = grp_max_pool_2_fu_814_conv_out_2_V_ce1;
    end else begin
        conv_2_out_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_2_V_we0 = grp_conv_2_fu_772_conv_out_2_V_we0;
    end else begin
        conv_2_out_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_3_V_address0 = grp_max_pool_2_fu_814_conv_out_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_3_V_address0 = grp_conv_2_fu_772_conv_out_3_V_address0;
    end else begin
        conv_2_out_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_3_V_ce0 = grp_max_pool_2_fu_814_conv_out_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_3_V_ce0 = grp_conv_2_fu_772_conv_out_3_V_ce0;
    end else begin
        conv_2_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_3_V_ce1 = grp_max_pool_2_fu_814_conv_out_3_V_ce1;
    end else begin
        conv_2_out_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_3_V_we0 = grp_conv_2_fu_772_conv_out_3_V_we0;
    end else begin
        conv_2_out_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_4_V_address0 = grp_max_pool_2_fu_814_conv_out_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_4_V_address0 = grp_conv_2_fu_772_conv_out_4_V_address0;
    end else begin
        conv_2_out_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_4_V_ce0 = grp_max_pool_2_fu_814_conv_out_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_4_V_ce0 = grp_conv_2_fu_772_conv_out_4_V_ce0;
    end else begin
        conv_2_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_4_V_ce1 = grp_max_pool_2_fu_814_conv_out_4_V_ce1;
    end else begin
        conv_2_out_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_4_V_we0 = grp_conv_2_fu_772_conv_out_4_V_we0;
    end else begin
        conv_2_out_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_5_V_address0 = grp_max_pool_2_fu_814_conv_out_5_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_5_V_address0 = grp_conv_2_fu_772_conv_out_5_V_address0;
    end else begin
        conv_2_out_5_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_5_V_ce0 = grp_max_pool_2_fu_814_conv_out_5_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_5_V_ce0 = grp_conv_2_fu_772_conv_out_5_V_ce0;
    end else begin
        conv_2_out_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_5_V_ce1 = grp_max_pool_2_fu_814_conv_out_5_V_ce1;
    end else begin
        conv_2_out_5_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_5_V_we0 = grp_conv_2_fu_772_conv_out_5_V_we0;
    end else begin
        conv_2_out_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_6_V_address0 = grp_max_pool_2_fu_814_conv_out_6_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_6_V_address0 = grp_conv_2_fu_772_conv_out_6_V_address0;
    end else begin
        conv_2_out_6_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_6_V_ce0 = grp_max_pool_2_fu_814_conv_out_6_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_6_V_ce0 = grp_conv_2_fu_772_conv_out_6_V_ce0;
    end else begin
        conv_2_out_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_6_V_ce1 = grp_max_pool_2_fu_814_conv_out_6_V_ce1;
    end else begin
        conv_2_out_6_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_6_V_we0 = grp_conv_2_fu_772_conv_out_6_V_we0;
    end else begin
        conv_2_out_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_7_V_address0 = grp_max_pool_2_fu_814_conv_out_7_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_7_V_address0 = grp_conv_2_fu_772_conv_out_7_V_address0;
    end else begin
        conv_2_out_7_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_7_V_ce0 = grp_max_pool_2_fu_814_conv_out_7_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_7_V_ce0 = grp_conv_2_fu_772_conv_out_7_V_ce0;
    end else begin
        conv_2_out_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_7_V_ce1 = grp_max_pool_2_fu_814_conv_out_7_V_ce1;
    end else begin
        conv_2_out_7_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_7_V_we0 = grp_conv_2_fu_772_conv_out_7_V_we0;
    end else begin
        conv_2_out_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_8_V_address0 = grp_max_pool_2_fu_814_conv_out_8_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_8_V_address0 = grp_conv_2_fu_772_conv_out_8_V_address0;
    end else begin
        conv_2_out_8_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_8_V_ce0 = grp_max_pool_2_fu_814_conv_out_8_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_8_V_ce0 = grp_conv_2_fu_772_conv_out_8_V_ce0;
    end else begin
        conv_2_out_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_8_V_ce1 = grp_max_pool_2_fu_814_conv_out_8_V_ce1;
    end else begin
        conv_2_out_8_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_8_V_we0 = grp_conv_2_fu_772_conv_out_8_V_we0;
    end else begin
        conv_2_out_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_9_V_address0 = grp_max_pool_2_fu_814_conv_out_9_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_9_V_address0 = grp_conv_2_fu_772_conv_out_9_V_address0;
    end else begin
        conv_2_out_9_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_9_V_ce0 = grp_max_pool_2_fu_814_conv_out_9_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_9_V_ce0 = grp_conv_2_fu_772_conv_out_9_V_ce0;
    end else begin
        conv_2_out_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_9_V_ce1 = grp_max_pool_2_fu_814_conv_out_9_V_ce1;
    end else begin
        conv_2_out_9_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_9_V_we0 = grp_conv_2_fu_772_conv_out_9_V_we0;
    end else begin
        conv_2_out_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_bias_V_ce0 = 1'b1;
    end else begin
        dense_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_1_out_V_address0 = zext_ln14_4_fu_1367_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_address0 = zext_ln14_reg_2006;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22) | ((grp_flat_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_d0 = select_ln19_fu_1326_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((grp_flat_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        dense_1_out_V_we0 = 1'b1;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_weights_V_ce0 = 1'b1;
    end else begin
        dense_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_2_out_V_address0 = zext_ln48_1_fu_1510_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        dense_2_out_V_address0 = zext_ln14_2_reg_2058;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_2_out_V_address0 = 64'd0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state17))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        dense_2_out_V_d0 = select_ln19_1_fu_1469_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_2_out_V_d0 = 13'd0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd1)))) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_address0 = zext_ln48_reg_2105;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_array_V_address0 = grp_soft_max_fu_802_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_array_V_ce0 = grp_soft_max_fu_802_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_d0 = add_ln703_2_fu_1584_p2;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_array_V_d0 = grp_soft_max_fu_802_dense_array_V_d0;
    end else begin
        dense_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_array_V_we0 = grp_soft_max_fu_802_dense_array_V_we0;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_address0 = zext_ln14_3_fu_1248_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_831_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((grp_max_pool_2_fu_814_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_831_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_831_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_814_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_831_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_839_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_772_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_839_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_772_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_839_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd1))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_839_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_0_V_address0 = grp_flat_fu_831_max_pool_out_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_address0 = grp_max_pool_2_fu_814_max_pool_out_0_V_address0;
    end else begin
        max_pool_2_out_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_0_V_ce0 = grp_flat_fu_831_max_pool_out_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_ce0 = grp_max_pool_2_fu_814_max_pool_out_0_V_ce0;
    end else begin
        max_pool_2_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_ce1 = grp_max_pool_2_fu_814_max_pool_out_0_V_ce1;
    end else begin
        max_pool_2_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_0_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_d0 = grp_max_pool_2_fu_814_max_pool_out_0_V_d0;
    end else begin
        max_pool_2_out_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd1))) begin
        max_pool_2_out_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_we0 = grp_max_pool_2_fu_814_max_pool_out_0_V_we0;
    end else begin
        max_pool_2_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_0_V_we1 = grp_max_pool_2_fu_814_max_pool_out_0_V_we1;
    end else begin
        max_pool_2_out_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_1_V_address0 = grp_flat_fu_831_max_pool_out_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_1_V_address0 = grp_max_pool_2_fu_814_max_pool_out_1_V_address0;
    end else begin
        max_pool_2_out_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_1_V_ce0 = grp_flat_fu_831_max_pool_out_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_1_V_ce0 = grp_max_pool_2_fu_814_max_pool_out_1_V_ce0;
    end else begin
        max_pool_2_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_1_V_ce1 = grp_max_pool_2_fu_814_max_pool_out_1_V_ce1;
    end else begin
        max_pool_2_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_1_V_we0 = grp_max_pool_2_fu_814_max_pool_out_1_V_we0;
    end else begin
        max_pool_2_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_1_V_we1 = grp_max_pool_2_fu_814_max_pool_out_1_V_we1;
    end else begin
        max_pool_2_out_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_2_0_address0 = grp_flat_fu_831_max_pool_out_2_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_2_0_address0 = grp_max_pool_2_fu_814_max_pool_out_2_0_V_address0;
    end else begin
        max_pool_2_out_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_2_0_ce0 = grp_flat_fu_831_max_pool_out_2_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_2_0_ce0 = grp_max_pool_2_fu_814_max_pool_out_2_0_V_ce0;
    end else begin
        max_pool_2_out_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_2_0_we0 = grp_max_pool_2_fu_814_max_pool_out_2_0_V_we0;
    end else begin
        max_pool_2_out_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        prediction_V_address0 = zext_ln70_fu_1603_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_V_address0 = grp_soft_max_fu_802_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state21))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_V_ce0 = grp_soft_max_fu_802_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_V_d0 = grp_soft_max_fu_802_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd1))) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_V_we0 = grp_soft_max_fu_802_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_output_ce0 = 1'b1;
    end else begin
        prediction_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        prediction_output_we0 = 1'b1;
    end else begin
        prediction_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_849_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_897_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_792_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_839_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_772_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_814_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_831_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln9_fu_1216_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln13_fu_1236_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln9_1_fu_1335_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln13_1_fu_1355_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln41_fu_1478_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln46_fu_1498_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_soft_max_fu_802_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln69_fu_1591_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_995_p2 = (12'd1075 - zext_ln461_fu_955_p1);

assign a_fu_1726_p2 = (icmp_ln947_fu_1688_p2 & icmp_ln947_1_fu_1720_p2);

assign add_ln1116_4_fu_1545_p2 = (add_ln1116_fu_1539_p2 + zext_ln46_reg_2111);

assign add_ln1116_fu_1539_p2 = (zext_ln1116_8_fu_1535_p1 + zext_ln1116_fu_1523_p1);

assign add_ln1117_2_fu_1402_p2 = (sub_ln1117_fu_1396_p2 + zext_ln13_2_reg_2064);

assign add_ln1117_3_fu_1253_p2 = (phi_mul_reg_682 + 15'd50);

assign add_ln1117_fu_1259_p2 = (phi_mul_reg_682 + zext_ln13_reg_2012);

assign add_ln203_1_fu_1455_p2 = ($signed(sext_ln703_2_fu_1445_p1) + $signed(trunc_ln703_1_fu_1441_p1));

assign add_ln203_7_fu_913_p2 = (sub_ln203_reg_1959 + zext_ln203_18_fu_909_p1);

assign add_ln203_fu_1312_p2 = ($signed(sext_ln703_fu_1302_p1) + $signed(trunc_ln703_fu_1298_p1));

assign add_ln28_fu_923_p2 = (10'd1 + ix_in_1_reg_627);

assign add_ln581_fu_1007_p2 = ($signed(12'd4088) + $signed(F2_fu_995_p2));

assign add_ln703_1_fu_1449_p2 = ($signed(p_Val2_32_reg_704) + $signed(sext_ln1265_1_fu_1437_p1));

assign add_ln703_2_fu_1584_p2 = ($signed(sext_ln1265_2_fu_1580_p1) + $signed(p_Val2_38_reg_738));

assign add_ln703_fu_1306_p2 = ($signed(p_Val2_29_reg_659) + $signed(sext_ln1265_fu_1294_p1));

assign add_ln949_fu_1746_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1668_p1));

assign add_ln958_fu_1793_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_2177));

assign add_ln964_fu_1862_p2 = (select_ln964_fu_1849_p3 + sub_ln964_fu_1857_p2);

assign and_ln581_fu_1120_p2 = (xor_ln582_fu_1114_p2 & icmp_ln581_fu_1001_p2);

assign and_ln582_fu_1102_p2 = (xor_ln571_fu_1096_p2 & icmp_ln582_fu_1031_p2);

assign and_ln585_1_fu_1138_p2 = (icmp_ln585_fu_1041_p2 & and_ln581_fu_1120_p2);

assign and_ln585_fu_1132_p2 = (xor_ln585_fu_1126_p2 & and_ln581_fu_1120_p2);

assign and_ln603_fu_1156_p2 = (xor_ln581_fu_1150_p2 & icmp_ln603_fu_1047_p2);

assign and_ln949_fu_1760_p2 = (xor_ln949_fu_1740_p2 & p_Result_37_fu_1752_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln586_fu_1057_p2 = $signed(man_V_2_fu_981_p3) >>> zext_ln586_fu_1053_p1;

assign bitcast_ln696_fu_1067_p1 = cnn_input_load_reg_1987;

assign bitcast_ln739_fu_1887_p1 = p_Result_43_fu_1875_p5;

assign cnn_input_address0 = zext_ln27_fu_918_p1;

assign d_fu_1484_p2 = (d_0_i_reg_727 + 4'd1);

assign dense_1_bias_V_address0 = zext_ln14_reg_2006;

assign dense_1_weights_V_address0 = zext_ln1117_fu_1264_p1;

assign dense_2_bias_V_address0 = zext_ln14_2_reg_2058;

assign dense_2_weights_V_address0 = sext_ln1117_fu_1407_p1;

assign dense_out_bias_V_address0 = zext_ln48_reg_2105;

assign dense_out_weights_V_address0 = zext_ln1116_9_fu_1550_p1;

assign exp_tmp_V_fu_945_p4 = {{ireg_V_fu_929_p1[62:52]}};

assign f_fu_1504_p2 = (f_0_i_reg_750 + 5'd1);

assign grp_conv_1_fu_792_ap_start = grp_conv_1_fu_792_ap_start_reg;

assign grp_conv_2_fu_772_ap_start = grp_conv_2_fu_772_ap_start_reg;

assign grp_flat_fu_831_ap_start = grp_flat_fu_831_ap_start_reg;

assign grp_fu_1899_p2 = {{p_Val2_29_reg_659}, {8'd0}};

assign grp_fu_1908_p1 = grp_fu_1908_p10;

assign grp_fu_1908_p10 = dense_1_out_V_q0;

assign grp_fu_1908_p2 = {{p_Val2_32_reg_704}, {8'd0}};

assign grp_fu_1917_p0 = grp_fu_1917_p00;

assign grp_fu_1917_p00 = dense_2_out_V_q0;

assign grp_fu_1917_p2 = {{p_Val2_38_reg_738}, {8'd0}};

assign grp_max_pool_1_fu_839_ap_start = grp_max_pool_1_fu_839_ap_start_reg;

assign grp_max_pool_2_fu_814_ap_start = grp_max_pool_2_fu_814_ap_start_reg;

assign grp_soft_max_fu_802_ap_start = grp_soft_max_fu_802_ap_start_reg;

assign i_1_fu_1222_p2 = (i_0_i_reg_648 + 6'd1);

assign i_2_fu_1341_p2 = (i_0_i24_reg_693 + 5'd1);

assign i_3_fu_1597_p2 = (i24_0_reg_761 + 4'd1);

assign i_fu_855_p2 = (i_0_reg_616 + 5'd1);

assign icmp_ln13_1_fu_1355_p2 = ((j_0_i29_reg_716 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1236_p2 = ((j_0_i_reg_671 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_849_p2 = ((i_0_reg_616 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_897_p2 = ((j_0_reg_637 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1478_p2 = ((d_0_i_reg_727 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1498_p2 = ((f_0_i_reg_750 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_989_p2 = ((trunc_ln556_fu_933_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1001_p2 = (($signed(F2_fu_995_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1031_p2 = ((F2_fu_995_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1041_p2 = ((sh_amt_fu_1019_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1047_p2 = ((sh_amt_fu_1019_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1591_p2 = ((i24_0_reg_761 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1608_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1720_p2 = ((p_Result_36_fu_1714_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1688_p2 = (($signed(tmp_26_fu_1678_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1780_p2 = (($signed(lsb_index_fu_1672_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1335_p2 = ((i_0_i24_reg_693 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1216_p2 = ((i_0_i_reg_648 == 6'd50) ? 1'b1 : 1'b0);

assign ireg_V_fu_929_p1 = grp_fu_845_p1;

assign ix_in_fu_861_p2 = (ix_in_0_reg_604 + 10'd28);

assign j_1_fu_1242_p2 = (j_0_i_reg_671 + 9'd1);

assign j_2_fu_1361_p2 = (j_0_i29_reg_716 + 6'd1);

assign j_fu_903_p2 = (j_0_reg_637 + 5'd1);


always @ (p_Result_42_fu_1646_p3) begin
    if (p_Result_42_fu_1646_p3[0] == 1'b1) begin
        l_fu_1654_p3 = 32'd0;
    end else if (p_Result_42_fu_1646_p3[1] == 1'b1) begin
        l_fu_1654_p3 = 32'd1;
    end else if (p_Result_42_fu_1646_p3[2] == 1'b1) begin
        l_fu_1654_p3 = 32'd2;
    end else if (p_Result_42_fu_1646_p3[3] == 1'b1) begin
        l_fu_1654_p3 = 32'd3;
    end else if (p_Result_42_fu_1646_p3[4] == 1'b1) begin
        l_fu_1654_p3 = 32'd4;
    end else if (p_Result_42_fu_1646_p3[5] == 1'b1) begin
        l_fu_1654_p3 = 32'd5;
    end else if (p_Result_42_fu_1646_p3[6] == 1'b1) begin
        l_fu_1654_p3 = 32'd6;
    end else if (p_Result_42_fu_1646_p3[7] == 1'b1) begin
        l_fu_1654_p3 = 32'd7;
    end else if (p_Result_42_fu_1646_p3[8] == 1'b1) begin
        l_fu_1654_p3 = 32'd8;
    end else if (p_Result_42_fu_1646_p3[9] == 1'b1) begin
        l_fu_1654_p3 = 32'd9;
    end else if (p_Result_42_fu_1646_p3[10] == 1'b1) begin
        l_fu_1654_p3 = 32'd10;
    end else if (p_Result_42_fu_1646_p3[11] == 1'b1) begin
        l_fu_1654_p3 = 32'd11;
    end else if (p_Result_42_fu_1646_p3[12] == 1'b1) begin
        l_fu_1654_p3 = 32'd12;
    end else if (p_Result_42_fu_1646_p3[13] == 1'b1) begin
        l_fu_1654_p3 = 32'd13;
    end else if (p_Result_42_fu_1646_p3[14] == 1'b1) begin
        l_fu_1654_p3 = 32'd14;
    end else if (p_Result_42_fu_1646_p3[15] == 1'b1) begin
        l_fu_1654_p3 = 32'd15;
    end else if (p_Result_42_fu_1646_p3[16] == 1'b1) begin
        l_fu_1654_p3 = 32'd16;
    end else if (p_Result_42_fu_1646_p3[17] == 1'b1) begin
        l_fu_1654_p3 = 32'd17;
    end else if (p_Result_42_fu_1646_p3[18] == 1'b1) begin
        l_fu_1654_p3 = 32'd18;
    end else if (p_Result_42_fu_1646_p3[19] == 1'b1) begin
        l_fu_1654_p3 = 32'd19;
    end else if (p_Result_42_fu_1646_p3[20] == 1'b1) begin
        l_fu_1654_p3 = 32'd20;
    end else if (p_Result_42_fu_1646_p3[21] == 1'b1) begin
        l_fu_1654_p3 = 32'd21;
    end else if (p_Result_42_fu_1646_p3[22] == 1'b1) begin
        l_fu_1654_p3 = 32'd22;
    end else if (p_Result_42_fu_1646_p3[23] == 1'b1) begin
        l_fu_1654_p3 = 32'd23;
    end else if (p_Result_42_fu_1646_p3[24] == 1'b1) begin
        l_fu_1654_p3 = 32'd24;
    end else if (p_Result_42_fu_1646_p3[25] == 1'b1) begin
        l_fu_1654_p3 = 32'd25;
    end else if (p_Result_42_fu_1646_p3[26] == 1'b1) begin
        l_fu_1654_p3 = 32'd26;
    end else if (p_Result_42_fu_1646_p3[27] == 1'b1) begin
        l_fu_1654_p3 = 32'd27;
    end else if (p_Result_42_fu_1646_p3[28] == 1'b1) begin
        l_fu_1654_p3 = 32'd28;
    end else if (p_Result_42_fu_1646_p3[29] == 1'b1) begin
        l_fu_1654_p3 = 32'd29;
    end else if (p_Result_42_fu_1646_p3[30] == 1'b1) begin
        l_fu_1654_p3 = 32'd30;
    end else if (p_Result_42_fu_1646_p3[31] == 1'b1) begin
        l_fu_1654_p3 = 32'd31;
    end else begin
        l_fu_1654_p3 = 32'd32;
    end
end

assign lsb_index_fu_1672_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1662_p2));

assign lshr_ln947_fu_1708_p2 = 14'd16383 >> zext_ln947_fu_1704_p1;

assign lshr_ln958_fu_1798_p2 = m_fu_1790_p1 >> add_ln958_fu_1793_p2;

assign m_12_fu_1815_p3 = ((icmp_ln958_reg_2188[0:0] === 1'b1) ? lshr_ln958_fu_1798_p2 : shl_ln958_fu_1809_p2);

assign m_13_fu_1822_p2 = (m_12_fu_1815_p3 + or_ln_reg_2183);

assign m_16_fu_1837_p1 = m_s_fu_1827_p4;

assign m_fu_1790_p1 = tmp_V_13_reg_2172;

assign m_s_fu_1827_p4 = {{m_13_fu_1822_p2[31:1]}};

assign man_V_1_fu_975_p2 = (54'd0 - p_Result_40_fu_971_p1);

assign man_V_2_fu_981_p3 = ((p_Result_39_fu_937_p3[0:0] === 1'b1) ? man_V_1_fu_975_p2 : p_Result_40_fu_971_p1);

assign or_ln581_fu_1144_p2 = (or_ln582_fu_1108_p2 | icmp_ln581_fu_1001_p2);

assign or_ln582_fu_1108_p2 = (icmp_ln582_fu_1031_p2 | icmp_ln571_fu_989_p2);

assign or_ln603_1_fu_1184_p2 = (and_ln585_fu_1132_p2 | and_ln582_fu_1102_p2);

assign or_ln603_2_fu_1198_p2 = (or_ln603_fu_1170_p2 | or_ln603_1_fu_1184_p2);

assign or_ln603_fu_1170_p2 = (and_ln603_fu_1156_p2 | and_ln585_1_fu_1138_p2);

assign or_ln949_fu_1766_p2 = (and_ln949_fu_1760_p2 | a_fu_1726_p2);

assign or_ln_fu_1772_p3 = {{31'd0}, {or_ln949_fu_1766_p2}};

assign p_Result_36_fu_1714_p2 = (tmp_V_13_fu_1628_p3 & lshr_ln947_fu_1708_p2);

assign p_Result_37_fu_1752_p3 = tmp_V_13_fu_1628_p3[add_ln949_fu_1746_p2];

assign p_Result_39_fu_937_p3 = ireg_V_fu_929_p1[32'd63];

assign p_Result_40_fu_971_p1 = tmp_fu_963_p3;

assign p_Result_41_fu_1614_p3 = prediction_V_q0[32'd13];

assign p_Result_42_fu_1646_p3 = {{18'd262143}, {p_Result_s_fu_1636_p4}};

assign p_Result_43_fu_1875_p5 = {{tmp_7_fu_1868_p3}, {m_16_fu_1837_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_13_fu_1628_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1636_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1636_p4[ap_tvar_int_0] = tmp_V_13_fu_1628_p3[13 - ap_tvar_int_0];
        end
    end
end

assign prediction_output_address0 = zext_ln70_reg_2152;

assign prediction_output_d0 = ((icmp_ln935_reg_2162[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1887_p1);

assign select_ln19_1_fu_1469_p3 = ((tmp_24_fu_1461_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_1_fu_1455_p2);

assign select_ln19_fu_1326_p3 = ((tmp_23_fu_1318_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1312_p2);

assign select_ln588_fu_1078_p3 = ((tmp_22_fu_1070_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_1_fu_1176_p3 = ((and_ln585_fu_1132_p2[0:0] === 1'b1) ? select_ln588_fu_1078_p3 : trunc_ln583_fu_1037_p1);

assign select_ln603_2_fu_1190_p3 = ((or_ln603_fu_1170_p2[0:0] === 1'b1) ? select_ln603_fu_1162_p3 : select_ln603_1_fu_1176_p3);

assign select_ln603_3_fu_1204_p3 = ((or_ln603_2_fu_1198_p2[0:0] === 1'b1) ? select_ln603_2_fu_1190_p3 : 14'd0);

assign select_ln603_fu_1162_p3 = ((and_ln603_fu_1156_p2[0:0] === 1'b1) ? shl_ln604_fu_1090_p2 : trunc_ln586_fu_1063_p1);

assign select_ln964_fu_1849_p3 = ((tmp_28_fu_1841_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1407_p1 = $signed(add_ln1117_2_fu_1402_p2);

assign sext_ln1265_1_fu_1437_p0 = dense_2_bias_V_q0;

assign sext_ln1265_1_fu_1437_p1 = sext_ln1265_1_fu_1437_p0;

assign sext_ln1265_2_fu_1580_p1 = $signed(dense_out_bias_V_q0);

assign sext_ln1265_fu_1294_p0 = dense_1_bias_V_q0;

assign sext_ln1265_fu_1294_p1 = sext_ln1265_fu_1294_p0;

assign sext_ln203_fu_1212_p1 = $signed(add_ln203_7_reg_1972);

assign sext_ln581_fu_1027_p1 = sh_amt_fu_1019_p3;

assign sext_ln581cast_fu_1086_p1 = sext_ln581_fu_1027_p1[13:0];

assign sext_ln703_2_fu_1445_p0 = dense_2_bias_V_q0;

assign sext_ln703_2_fu_1445_p1 = sext_ln703_2_fu_1445_p0;

assign sext_ln703_fu_1302_p0 = dense_1_bias_V_q0;

assign sext_ln703_fu_1302_p1 = sext_ln703_fu_1302_p0;

assign sh_amt_fu_1019_p3 = ((icmp_ln581_fu_1001_p2[0:0] === 1'b1) ? add_ln581_fu_1007_p2 : sub_ln581_fu_1013_p2);

assign shl_ln604_fu_1090_p2 = trunc_ln583_fu_1037_p1 << sext_ln581cast_fu_1086_p1;

assign shl_ln958_fu_1809_p2 = m_fu_1790_p1 << sub_ln958_fu_1804_p2;

assign sub_ln1117_fu_1396_p2 = (zext_ln1117_6_fu_1380_p1 - zext_ln1117_7_fu_1392_p1);

assign sub_ln203_fu_891_p2 = (zext_ln203_fu_875_p1 - zext_ln203_17_fu_887_p1);

assign sub_ln581_fu_1013_p2 = (12'd8 - F2_fu_995_p2);

assign sub_ln944_fu_1662_p2 = (32'd14 - l_fu_1654_p3);

assign sub_ln947_fu_1698_p2 = (4'd7 - trunc_ln947_fu_1694_p1);

assign sub_ln958_fu_1804_p2 = (32'd25 - sub_ln944_reg_2177);

assign sub_ln964_fu_1857_p2 = (8'd6 - trunc_ln943_reg_2193);

assign tmp_10_fu_1372_p3 = {{j_0_i29_reg_716}, {5'd0}};

assign tmp_11_fu_1384_p3 = {{j_0_i29_reg_716}, {1'd0}};

assign tmp_12_fu_1515_p3 = {{f_0_i_reg_750}, {3'd0}};

assign tmp_13_fu_1527_p3 = {{f_0_i_reg_750}, {1'd0}};

assign tmp_22_fu_1070_p3 = bitcast_ln696_fu_1067_p1[32'd31];

assign tmp_23_fu_1318_p3 = add_ln703_fu_1306_p2[32'd13];

assign tmp_24_fu_1461_p3 = add_ln703_1_fu_1449_p2[32'd13];

assign tmp_26_fu_1678_p4 = {{lsb_index_fu_1672_p2[31:1]}};

assign tmp_27_fu_1732_p3 = lsb_index_fu_1672_p2[32'd31];

assign tmp_28_fu_1841_p3 = m_13_fu_1822_p2[32'd25];

assign tmp_7_fu_1868_p3 = {{p_Result_41_reg_2167}, {add_ln964_fu_1862_p2}};

assign tmp_9_fu_879_p3 = {{i_0_reg_616}, {2'd0}};

assign tmp_V_13_fu_1628_p3 = ((p_Result_41_fu_1614_p3[0:0] === 1'b1) ? tmp_V_fu_1622_p2 : prediction_V_q0);

assign tmp_V_fu_1622_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_963_p3 = {{1'd1}, {trunc_ln565_fu_959_p1}};

assign tmp_s_fu_867_p3 = {{i_0_reg_616}, {5'd0}};

assign trunc_ln556_fu_933_p1 = ireg_V_fu_929_p1[62:0];

assign trunc_ln565_fu_959_p1 = ireg_V_fu_929_p1[51:0];

assign trunc_ln583_fu_1037_p1 = man_V_2_fu_981_p3[13:0];

assign trunc_ln586_fu_1063_p1 = ashr_ln586_fu_1057_p2[13:0];

assign trunc_ln703_1_fu_1441_p1 = p_Val2_32_reg_704[12:0];

assign trunc_ln703_fu_1298_p1 = p_Val2_29_reg_659[12:0];

assign trunc_ln943_fu_1786_p1 = l_fu_1654_p3[7:0];

assign trunc_ln944_fu_1668_p1 = sub_ln944_fu_1662_p2[13:0];

assign trunc_ln947_fu_1694_p1 = sub_ln944_fu_1662_p2[3:0];

assign xor_ln571_fu_1096_p2 = (icmp_ln571_fu_989_p2 ^ 1'd1);

assign xor_ln581_fu_1150_p2 = (or_ln581_fu_1144_p2 ^ 1'd1);

assign xor_ln582_fu_1114_p2 = (or_ln582_fu_1108_p2 ^ 1'd1);

assign xor_ln585_fu_1126_p2 = (icmp_ln585_fu_1041_p2 ^ 1'd1);

assign xor_ln949_fu_1740_p2 = (tmp_27_fu_1732_p3 ^ 1'd1);

assign zext_ln1116_8_fu_1535_p1 = tmp_13_fu_1527_p3;

assign zext_ln1116_9_fu_1550_p1 = add_ln1116_4_fu_1545_p2;

assign zext_ln1116_fu_1523_p1 = tmp_12_fu_1515_p3;

assign zext_ln1117_6_fu_1380_p1 = tmp_10_fu_1372_p3;

assign zext_ln1117_7_fu_1392_p1 = tmp_11_fu_1384_p3;

assign zext_ln1117_fu_1264_p1 = add_ln1117_fu_1259_p2;

assign zext_ln13_2_fu_1351_p1 = i_0_i24_reg_693;

assign zext_ln13_fu_1232_p1 = i_0_i_reg_648;

assign zext_ln14_2_fu_1347_p1 = i_0_i24_reg_693;

assign zext_ln14_3_fu_1248_p1 = j_0_i_reg_671;

assign zext_ln14_4_fu_1367_p1 = j_0_i29_reg_716;

assign zext_ln14_fu_1228_p1 = i_0_i_reg_648;

assign zext_ln203_17_fu_887_p1 = tmp_9_fu_879_p3;

assign zext_ln203_18_fu_909_p1 = j_0_reg_637;

assign zext_ln203_fu_875_p1 = tmp_s_fu_867_p3;

assign zext_ln27_fu_918_p1 = ix_in_1_reg_627;

assign zext_ln461_fu_955_p1 = exp_tmp_V_fu_945_p4;

assign zext_ln46_fu_1494_p1 = d_0_i_reg_727;

assign zext_ln48_1_fu_1510_p1 = f_0_i_reg_750;

assign zext_ln48_fu_1490_p1 = d_0_i_reg_727;

assign zext_ln586_fu_1053_p1 = $unsigned(sext_ln581_fu_1027_p1);

assign zext_ln70_fu_1603_p1 = i24_0_reg_761;

assign zext_ln947_fu_1704_p1 = sub_ln947_fu_1698_p2;

always @ (posedge ap_clk) begin
    sub_ln203_reg_1959[1:0] <= 2'b00;
    zext_ln14_reg_2006[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_2012[14:6] <= 9'b000000000;
    zext_ln14_2_reg_2058[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_2_reg_2064[11:5] <= 7'b0000000;
    zext_ln48_reg_2105[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln46_reg_2111[8:4] <= 5'b00000;
    zext_ln70_reg_2152[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_2183[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
