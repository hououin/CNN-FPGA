// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        conv_out_0_V_address0,
        conv_out_0_V_ce0,
        conv_out_0_V_we0,
        conv_out_0_V_d0,
        conv_out_1_V_address0,
        conv_out_1_V_ce0,
        conv_out_1_V_we0,
        conv_out_1_V_d0,
        conv_out_2_V_address0,
        conv_out_2_V_ce0,
        conv_out_2_V_we0,
        conv_out_2_V_d0,
        conv_out_3_V_address0,
        conv_out_3_V_ce0,
        conv_out_3_V_we0,
        conv_out_3_V_d0,
        conv_out_4_V_address0,
        conv_out_4_V_ce0,
        conv_out_4_V_we0,
        conv_out_4_V_d0,
        conv_out_5_V_address0,
        conv_out_5_V_ce0,
        conv_out_5_V_we0,
        conv_out_5_V_d0,
        conv_out_6_V_address0,
        conv_out_6_V_ce0,
        conv_out_6_V_we0,
        conv_out_6_V_d0,
        conv_out_7_V_address0,
        conv_out_7_V_ce0,
        conv_out_7_V_we0,
        conv_out_7_V_d0,
        conv_out_8_V_address0,
        conv_out_8_V_ce0,
        conv_out_8_V_we0,
        conv_out_8_V_d0,
        conv_out_9_V_address0,
        conv_out_9_V_ce0,
        conv_out_9_V_we0,
        conv_out_9_V_d0,
        conv_out_10_V_address0,
        conv_out_10_V_ce0,
        conv_out_10_V_we0,
        conv_out_10_V_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [7:0] conv_out_0_V_address0;
output   conv_out_0_V_ce0;
output   conv_out_0_V_we0;
output  [13:0] conv_out_0_V_d0;
output  [7:0] conv_out_1_V_address0;
output   conv_out_1_V_ce0;
output   conv_out_1_V_we0;
output  [13:0] conv_out_1_V_d0;
output  [7:0] conv_out_2_V_address0;
output   conv_out_2_V_ce0;
output   conv_out_2_V_we0;
output  [13:0] conv_out_2_V_d0;
output  [7:0] conv_out_3_V_address0;
output   conv_out_3_V_ce0;
output   conv_out_3_V_we0;
output  [13:0] conv_out_3_V_d0;
output  [7:0] conv_out_4_V_address0;
output   conv_out_4_V_ce0;
output   conv_out_4_V_we0;
output  [13:0] conv_out_4_V_d0;
output  [7:0] conv_out_5_V_address0;
output   conv_out_5_V_ce0;
output   conv_out_5_V_we0;
output  [13:0] conv_out_5_V_d0;
output  [7:0] conv_out_6_V_address0;
output   conv_out_6_V_ce0;
output   conv_out_6_V_we0;
output  [13:0] conv_out_6_V_d0;
output  [7:0] conv_out_7_V_address0;
output   conv_out_7_V_ce0;
output   conv_out_7_V_we0;
output  [13:0] conv_out_7_V_d0;
output  [7:0] conv_out_8_V_address0;
output   conv_out_8_V_ce0;
output   conv_out_8_V_we0;
output  [13:0] conv_out_8_V_d0;
output  [7:0] conv_out_9_V_address0;
output   conv_out_9_V_ce0;
output   conv_out_9_V_we0;
output  [13:0] conv_out_9_V_d0;
output  [7:0] conv_out_10_V_address0;
output   conv_out_10_V_ce0;
output   conv_out_10_V_we0;
output  [13:0] conv_out_10_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg conv_out_0_V_ce0;
reg conv_out_0_V_we0;
reg[13:0] conv_out_0_V_d0;
reg conv_out_1_V_ce0;
reg conv_out_1_V_we0;
reg[13:0] conv_out_1_V_d0;
reg conv_out_2_V_ce0;
reg conv_out_2_V_we0;
reg[13:0] conv_out_2_V_d0;
reg conv_out_3_V_ce0;
reg conv_out_3_V_we0;
reg[13:0] conv_out_3_V_d0;
reg conv_out_4_V_ce0;
reg conv_out_4_V_we0;
reg[13:0] conv_out_4_V_d0;
reg conv_out_5_V_ce0;
reg conv_out_5_V_we0;
reg[13:0] conv_out_5_V_d0;
reg conv_out_6_V_ce0;
reg conv_out_6_V_we0;
reg[13:0] conv_out_6_V_d0;
reg conv_out_7_V_ce0;
reg conv_out_7_V_we0;
reg[13:0] conv_out_7_V_d0;
reg conv_out_8_V_ce0;
reg conv_out_8_V_we0;
reg[13:0] conv_out_8_V_d0;
reg conv_out_9_V_ce0;
reg conv_out_9_V_we0;
reg[13:0] conv_out_9_V_d0;
reg conv_out_10_V_ce0;
reg conv_out_10_V_we0;
reg[13:0] conv_out_10_V_d0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] conv_2_weights_V_address0;
reg    conv_2_weights_V_ce0;
wire  signed [9:0] conv_2_weights_V_q0;
wire   [3:0] conv_2_bias_V_address0;
reg    conv_2_bias_V_ce0;
wire   [7:0] conv_2_bias_V_q0;
wire   [3:0] r_fu_493_p2;
reg   [3:0] r_reg_1161;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln11_fu_507_p1;
reg   [8:0] zext_ln11_reg_1166;
wire   [0:0] icmp_ln8_fu_487_p2;
wire   [3:0] c_fu_517_p2;
reg   [3:0] c_reg_1174;
wire    ap_CS_fsm_state3;
wire   [4:0] f_fu_529_p2;
reg   [4:0] f_reg_1182;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln26_fu_535_p1;
reg   [63:0] zext_ln26_reg_1187;
wire   [0:0] icmp_ln14_fu_523_p2;
wire   [10:0] zext_ln203_fu_539_p1;
reg   [10:0] zext_ln203_reg_1192;
reg   [7:0] conv_out_0_V_addr_reg_1197;
reg   [7:0] conv_out_1_V_addr_reg_1202;
reg   [7:0] conv_out_2_V_addr_reg_1207;
reg   [7:0] conv_out_3_V_addr_reg_1212;
reg   [7:0] conv_out_4_V_addr_reg_1217;
reg   [7:0] conv_out_5_V_addr_reg_1222;
reg   [7:0] conv_out_6_V_addr_reg_1227;
reg   [7:0] conv_out_7_V_addr_reg_1232;
reg   [7:0] conv_out_8_V_addr_reg_1237;
reg   [7:0] conv_out_9_V_addr_reg_1242;
reg   [7:0] conv_out_10_V_addr_reg_1247;
wire   [1:0] wr_fu_577_p2;
reg   [1:0] wr_reg_1255;
wire    ap_CS_fsm_state5;
wire  signed [5:0] sext_ln1116_fu_605_p1;
reg  signed [5:0] sext_ln1116_reg_1260;
wire   [0:0] icmp_ln18_fu_571_p2;
wire   [7:0] mul_ln1117_fu_619_p2;
reg   [7:0] mul_ln1117_reg_1265;
wire   [1:0] wc_fu_635_p2;
reg   [1:0] wc_reg_1278;
wire    ap_CS_fsm_state6;
wire   [6:0] sub_ln1116_1_fu_670_p2;
reg   [6:0] sub_ln1116_1_reg_1283;
wire   [0:0] icmp_ln21_fu_629_p2;
wire   [10:0] sub_ln1117_fu_711_p2;
reg   [10:0] sub_ln1117_reg_1288;
wire   [2:0] ch_fu_723_p2;
reg   [2:0] ch_reg_1296;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln24_fu_717_p2;
wire    ap_CS_fsm_state8;
wire   [13:0] tmp_V_4_fu_817_p2;
reg   [13:0] tmp_V_4_reg_1316;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln885_fu_823_p2;
reg   [0:0] icmp_ln885_reg_1334;
wire   [0:0] p_Result_24_fu_829_p3;
reg   [0:0] p_Result_24_reg_1338;
wire    ap_CS_fsm_state10;
wire   [13:0] tmp_V_5_fu_841_p3;
reg   [13:0] tmp_V_5_reg_1343;
wire   [31:0] sub_ln894_fu_874_p2;
reg   [31:0] sub_ln894_reg_1349;
wire   [31:0] or_ln_fu_984_p3;
reg   [31:0] or_ln_reg_1355;
wire   [0:0] icmp_ln908_fu_992_p2;
reg   [0:0] icmp_ln908_reg_1360;
wire   [10:0] trunc_ln893_fu_998_p1;
reg   [10:0] trunc_ln893_reg_1365;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln924_fu_1129_p2;
reg   [0:0] icmp_ln924_reg_1375;
wire   [0:0] icmp_ln924_1_fu_1135_p2;
reg   [0:0] icmp_ln924_1_reg_1380;
reg   [3:0] r_0_reg_378;
wire   [0:0] icmp_ln11_fu_511_p2;
reg   [3:0] c_0_reg_390;
reg   [4:0] f_0_reg_402;
wire    ap_CS_fsm_state12;
reg   [13:0] p_Val2_s_reg_413;
reg   [1:0] wr_0_reg_425;
reg   [13:0] w_sum_1_reg_436;
reg   [1:0] wc_0_reg_448;
reg   [13:0] p_Val2_19_reg_459;
reg   [2:0] ch_0_reg_471;
wire   [63:0] zext_ln203_12_fu_552_p1;
wire   [63:0] zext_ln1116_5_fu_755_p1;
wire   [63:0] zext_ln1117_3_fu_765_p1;
wire   [0:0] and_ln924_fu_1145_p2;
wire   [63:0] grp_fu_482_p0;
wire   [7:0] tmp_3_fu_499_p3;
wire   [8:0] zext_ln203_11_fu_543_p1;
wire   [8:0] add_ln203_fu_547_p2;
wire   [3:0] tmp_4_fu_587_p3;
wire   [4:0] zext_ln1116_1_fu_595_p1;
wire   [4:0] zext_ln1116_fu_583_p1;
wire   [4:0] sub_ln1116_fu_599_p2;
wire   [3:0] zext_ln18_fu_567_p1;
wire   [3:0] add_ln26_fu_609_p2;
wire   [3:0] mul_ln1117_fu_619_p0;
wire   [5:0] zext_ln1116_2_fu_641_p1;
wire   [5:0] add_ln1116_fu_645_p2;
wire   [3:0] trunc_ln1116_fu_650_p1;
wire   [6:0] p_shl_fu_654_p3;
wire   [6:0] tmp_14_fu_662_p3;
wire   [3:0] zext_ln21_fu_625_p1;
wire   [3:0] add_ln26_1_fu_676_p2;
wire   [7:0] zext_ln1117_1_fu_682_p1;
wire   [7:0] add_ln1117_fu_686_p2;
wire   [8:0] tmp_15_fu_699_p3;
wire   [10:0] p_shl1_cast_fu_691_p3;
wire   [10:0] zext_ln1117_2_fu_707_p1;
wire   [6:0] zext_ln1116_3_fu_729_p1;
wire   [6:0] add_ln1116_1_fu_737_p2;
wire   [10:0] tmp_23_cast_fu_742_p3;
wire   [10:0] add_ln1116_2_fu_750_p2;
wire   [10:0] zext_ln1116_4_fu_733_p1;
wire   [10:0] add_ln1117_1_fu_760_p2;
wire  signed [24:0] r_V_fu_1151_p2;
wire   [21:0] lhs_V_fu_781_p3;
wire  signed [27:0] sext_ln1118_1_fu_778_p1;
wire   [28:0] zext_ln728_fu_789_p1;
wire   [28:0] zext_ln703_fu_793_p1;
wire   [28:0] ret_V_fu_797_p2;
wire  signed [13:0] sext_ln1265_fu_813_p1;
wire   [13:0] tmp_V_fu_836_p2;
reg   [13:0] p_Result_s_fu_848_p4;
wire   [31:0] p_Result_25_fu_858_p3;
reg   [31:0] l_fu_866_p3;
wire   [31:0] lsb_index_fu_884_p2;
wire   [30:0] tmp_11_fu_890_p4;
wire   [3:0] trunc_ln897_fu_906_p1;
wire   [3:0] sub_ln897_fu_910_p2;
wire   [13:0] zext_ln897_fu_916_p1;
wire   [13:0] lshr_ln897_fu_920_p2;
wire   [13:0] p_Result_21_fu_926_p2;
wire   [0:0] icmp_ln897_fu_900_p2;
wire   [0:0] icmp_ln897_1_fu_932_p2;
wire   [0:0] tmp_12_fu_944_p3;
wire   [13:0] trunc_ln894_fu_880_p1;
wire   [13:0] add_ln899_fu_958_p2;
wire   [0:0] p_Result_22_fu_964_p3;
wire   [0:0] xor_ln899_fu_952_p2;
wire   [0:0] and_ln899_fu_972_p2;
wire   [0:0] a_fu_938_p2;
wire   [0:0] or_ln899_fu_978_p2;
wire   [31:0] zext_ln907_1_fu_1005_p1;
wire   [31:0] add_ln908_fu_1008_p2;
wire   [31:0] lshr_ln908_fu_1013_p2;
wire   [31:0] sub_ln908_fu_1023_p2;
wire   [63:0] m_fu_1002_p1;
wire   [63:0] zext_ln908_1_fu_1028_p1;
wire   [63:0] zext_ln908_fu_1019_p1;
wire   [63:0] shl_ln908_fu_1032_p2;
wire   [63:0] zext_ln911_fu_1045_p1;
wire   [63:0] m_1_fu_1038_p3;
wire   [63:0] m_2_fu_1048_p2;
wire   [62:0] m_5_fu_1054_p4;
wire   [0:0] tmp_13_fu_1068_p3;
wire   [10:0] sub_ln915_fu_1084_p2;
wire   [10:0] select_ln915_fu_1076_p3;
wire   [10:0] add_ln915_fu_1089_p2;
wire   [63:0] m_6_fu_1064_p1;
wire   [11:0] tmp_2_fu_1095_p3;
wire   [63:0] p_Result_26_fu_1102_p5;
wire   [51:0] trunc_ln4_fu_1119_p4;
wire   [0:0] or_ln924_fu_1141_p2;
wire   [0:0] grp_fu_482_p2;
reg   [11:0] ap_NS_fsm;
wire   [7:0] mul_ln1117_fu_619_p00;
reg    ap_condition_408;
reg    ap_condition_412;
reg    ap_condition_434;
reg    ap_condition_456;
reg    ap_condition_400;
reg    ap_condition_404;
reg    ap_condition_391;
reg    ap_condition_395;
reg    ap_condition_382;
reg    ap_condition_386;
reg    ap_condition_373;
reg    ap_condition_377;
reg    ap_condition_364;
reg    ap_condition_368;
reg    ap_condition_355;
reg    ap_condition_359;
reg    ap_condition_346;
reg    ap_condition_350;
reg    ap_condition_337;
reg    ap_condition_341;
reg    ap_condition_326;
reg    ap_condition_332;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

conv_2_conv_2_weifYi #(
    .DataWidth( 10 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
conv_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_address0),
    .ce0(conv_2_weights_V_ce0),
    .q0(conv_2_weights_V_q0)
);

conv_2_conv_2_biag8j #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_bias_V_address0),
    .ce0(conv_2_bias_V_ce0),
    .q0(conv_2_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_482_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_482_p2)
);

cnn_mul_mul_10s_1hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 25 ))
cnn_mul_mul_10s_1hbi_U12(
    .din0(conv_2_weights_V_q0),
    .din1(input_V_q0),
    .dout(r_V_fu_1151_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_523_p2 == 1'd1))) begin
        c_0_reg_390 <= c_reg_1174;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_487_p2 == 1'd0))) begin
        c_0_reg_390 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ch_0_reg_471 <= ch_reg_1296;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_629_p2 == 1'd0))) begin
        ch_0_reg_471 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        f_0_reg_402 <= f_reg_1182;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_511_p2 == 1'd0))) begin
        f_0_reg_402 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Val2_19_reg_459 <= {{ret_V_fu_797_p2[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_629_p2 == 1'd0))) begin
        p_Val2_19_reg_459 <= w_sum_1_reg_436;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_629_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_s_reg_413 <= w_sum_1_reg_436;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_523_p2 == 1'd0))) begin
        p_Val2_s_reg_413 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_0_reg_378 <= r_reg_1161;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_378 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        w_sum_1_reg_436 <= p_Val2_19_reg_459;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_571_p2 == 1'd0))) begin
        w_sum_1_reg_436 <= p_Val2_s_reg_413;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        wc_0_reg_448 <= wc_reg_1278;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_571_p2 == 1'd0))) begin
        wc_0_reg_448 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_629_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        wr_0_reg_425 <= wr_reg_1255;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_523_p2 == 1'd0))) begin
        wr_0_reg_425 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_1174 <= c_fu_517_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ch_reg_1296 <= ch_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_523_p2 == 1'd0))) begin
        conv_out_0_V_addr_reg_1197 <= zext_ln203_12_fu_552_p1;
        conv_out_10_V_addr_reg_1247 <= zext_ln203_12_fu_552_p1;
        conv_out_1_V_addr_reg_1202 <= zext_ln203_12_fu_552_p1;
        conv_out_2_V_addr_reg_1207 <= zext_ln203_12_fu_552_p1;
        conv_out_3_V_addr_reg_1212 <= zext_ln203_12_fu_552_p1;
        conv_out_4_V_addr_reg_1217 <= zext_ln203_12_fu_552_p1;
        conv_out_5_V_addr_reg_1222 <= zext_ln203_12_fu_552_p1;
        conv_out_6_V_addr_reg_1227 <= zext_ln203_12_fu_552_p1;
        conv_out_7_V_addr_reg_1232 <= zext_ln203_12_fu_552_p1;
        conv_out_8_V_addr_reg_1237 <= zext_ln203_12_fu_552_p1;
        conv_out_9_V_addr_reg_1242 <= zext_ln203_12_fu_552_p1;
        zext_ln203_reg_1192[4 : 0] <= zext_ln203_fu_539_p1[4 : 0];
        zext_ln26_reg_1187[4 : 0] <= zext_ln26_fu_535_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_1182 <= f_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln885_reg_1334 <= icmp_ln885_fu_823_p2;
        tmp_V_4_reg_1316 <= tmp_V_4_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln908_reg_1360 <= icmp_ln908_fu_992_p2;
        or_ln_reg_1355[0] <= or_ln_fu_984_p3[0];
        p_Result_24_reg_1338 <= tmp_V_4_reg_1316[32'd13];
        sub_ln894_reg_1349 <= sub_ln894_fu_874_p2;
        tmp_V_5_reg_1343 <= tmp_V_5_fu_841_p3;
        trunc_ln893_reg_1365 <= trunc_ln893_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln924_1_reg_1380 <= icmp_ln924_1_fu_1135_p2;
        icmp_ln924_reg_1375 <= icmp_ln924_fu_1129_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_571_p2 == 1'd0))) begin
        mul_ln1117_reg_1265 <= mul_ln1117_fu_619_p2;
        sext_ln1116_reg_1260 <= sext_ln1116_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_reg_1161 <= r_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_629_p2 == 1'd0))) begin
        sub_ln1116_1_reg_1283[6 : 1] <= sub_ln1116_1_fu_670_p2[6 : 1];
        sub_ln1117_reg_1288[10 : 1] <= sub_ln1117_fu_711_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        wc_reg_1278 <= wc_fu_635_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wr_reg_1255 <= wr_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_487_p2 == 1'd0))) begin
        zext_ln11_reg_1166[7 : 4] <= zext_ln11_fu_507_p1[7 : 4];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_487_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_487_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_2_bias_V_ce0 = 1'b1;
    end else begin
        conv_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_2_weights_V_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd0) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd0) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd0) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_0_V_ce0 = 1'b1;
    end else begin
        conv_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_412)) begin
            conv_out_0_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_408)) begin
            conv_out_0_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_0_V_d0 = 'bx;
        end
    end else begin
        conv_out_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd0) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd0) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd0) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_0_V_we0 = 1'b1;
    end else begin
        conv_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & ((~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)))) | (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_10_V_ce0 = 1'b1;
    end else begin
        conv_out_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_456)) begin
            conv_out_10_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_434)) begin
            conv_out_10_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_10_V_d0 = 'bx;
        end
    end else begin
        conv_out_10_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & ((~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)))) | (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_10_V_we0 = 1'b1;
    end else begin
        conv_out_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd1) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd1) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd1) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_1_V_ce0 = 1'b1;
    end else begin
        conv_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_404)) begin
            conv_out_1_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_400)) begin
            conv_out_1_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_1_V_d0 = 'bx;
        end
    end else begin
        conv_out_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd1) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd1) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd1) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_1_V_we0 = 1'b1;
    end else begin
        conv_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd2) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd2) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd2) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_2_V_ce0 = 1'b1;
    end else begin
        conv_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_395)) begin
            conv_out_2_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_391)) begin
            conv_out_2_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_2_V_d0 = 'bx;
        end
    end else begin
        conv_out_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd2) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd2) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd2) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_2_V_we0 = 1'b1;
    end else begin
        conv_out_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd3) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd3) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd3) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_3_V_ce0 = 1'b1;
    end else begin
        conv_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_386)) begin
            conv_out_3_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_382)) begin
            conv_out_3_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_3_V_d0 = 'bx;
        end
    end else begin
        conv_out_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd3) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd3) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd3) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_3_V_we0 = 1'b1;
    end else begin
        conv_out_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd4) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd4) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd4) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_4_V_ce0 = 1'b1;
    end else begin
        conv_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_377)) begin
            conv_out_4_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_373)) begin
            conv_out_4_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_4_V_d0 = 'bx;
        end
    end else begin
        conv_out_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd4) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd4) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd4) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_4_V_we0 = 1'b1;
    end else begin
        conv_out_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd5) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd5) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd5) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_5_V_ce0 = 1'b1;
    end else begin
        conv_out_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_368)) begin
            conv_out_5_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_364)) begin
            conv_out_5_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_5_V_d0 = 'bx;
        end
    end else begin
        conv_out_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd5) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd5) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd5) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_5_V_we0 = 1'b1;
    end else begin
        conv_out_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd6) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd6) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd6) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_6_V_ce0 = 1'b1;
    end else begin
        conv_out_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_359)) begin
            conv_out_6_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_355)) begin
            conv_out_6_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_6_V_d0 = 'bx;
        end
    end else begin
        conv_out_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd6) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd6) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd6) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_6_V_we0 = 1'b1;
    end else begin
        conv_out_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd7) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd7) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd7) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_7_V_ce0 = 1'b1;
    end else begin
        conv_out_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_350)) begin
            conv_out_7_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_346)) begin
            conv_out_7_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_7_V_d0 = 'bx;
        end
    end else begin
        conv_out_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd7) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd7) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd7) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_7_V_we0 = 1'b1;
    end else begin
        conv_out_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd8) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd8) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd8) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_8_V_ce0 = 1'b1;
    end else begin
        conv_out_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_341)) begin
            conv_out_8_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_337)) begin
            conv_out_8_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_8_V_d0 = 'bx;
        end
    end else begin
        conv_out_8_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd8) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd8) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd8) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_8_V_we0 = 1'b1;
    end else begin
        conv_out_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_9_V_ce0 = 1'b1;
    end else begin
        conv_out_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        if ((1'b1 == ap_condition_332)) begin
            conv_out_9_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_326)) begin
            conv_out_9_V_d0 = tmp_V_4_reg_1316;
        end else begin
            conv_out_9_V_d0 = 'bx;
        end
    end else begin
        conv_out_9_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)))) | ((c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln885_reg_1334 == 1'd0)))) begin
        conv_out_9_V_we0 = 1'b1;
    end else begin
        conv_out_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_487_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_fu_511_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_523_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_571_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln21_fu_629_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln24_fu_717_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln885_fu_823_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_938_p2 = (icmp_ln897_fu_900_p2 & icmp_ln897_1_fu_932_p2);

assign add_ln1116_1_fu_737_p2 = (zext_ln1116_3_fu_729_p1 + sub_ln1116_1_reg_1283);

assign add_ln1116_2_fu_750_p2 = (zext_ln203_reg_1192 + tmp_23_cast_fu_742_p3);

assign add_ln1116_fu_645_p2 = ($signed(zext_ln1116_2_fu_641_p1) + $signed(sext_ln1116_reg_1260));

assign add_ln1117_1_fu_760_p2 = (zext_ln1116_4_fu_733_p1 + sub_ln1117_reg_1288);

assign add_ln1117_fu_686_p2 = (zext_ln1117_1_fu_682_p1 + mul_ln1117_reg_1265);

assign add_ln203_fu_547_p2 = (zext_ln11_reg_1166 + zext_ln203_11_fu_543_p1);

assign add_ln26_1_fu_676_p2 = (c_0_reg_390 + zext_ln21_fu_625_p1);

assign add_ln26_fu_609_p2 = (zext_ln18_fu_567_p1 + r_0_reg_378);

assign add_ln899_fu_958_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_880_p1));

assign add_ln908_fu_1008_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1349));

assign add_ln915_fu_1089_p2 = (sub_ln915_fu_1084_p2 + select_ln915_fu_1076_p3);

assign and_ln899_fu_972_p2 = (xor_ln899_fu_952_p2 & p_Result_22_fu_964_p3);

assign and_ln924_fu_1145_p2 = (or_ln924_fu_1141_p2 & grp_fu_482_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_326 = ((c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_332 = (((c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_337 = ((c_0_reg_390 == 4'd8) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_341 = (((c_0_reg_390 == 4'd8) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd8) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_346 = ((c_0_reg_390 == 4'd7) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_350 = (((c_0_reg_390 == 4'd7) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd7) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_355 = ((c_0_reg_390 == 4'd6) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_359 = (((c_0_reg_390 == 4'd6) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd6) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_364 = ((c_0_reg_390 == 4'd5) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_368 = (((c_0_reg_390 == 4'd5) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd5) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_373 = ((c_0_reg_390 == 4'd4) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_377 = (((c_0_reg_390 == 4'd4) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd4) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_382 = ((c_0_reg_390 == 4'd3) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_386 = (((c_0_reg_390 == 4'd3) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd3) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_391 = ((c_0_reg_390 == 4'd2) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_395 = (((c_0_reg_390 == 4'd2) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd2) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_400 = ((c_0_reg_390 == 4'd1) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_404 = (((c_0_reg_390 == 4'd1) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd1) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_408 = ((c_0_reg_390 == 4'd0) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_412 = (((c_0_reg_390 == 4'd0) & (icmp_ln885_reg_1334 == 1'd1)) | ((c_0_reg_390 == 4'd0) & (1'd0 == and_ln924_fu_1145_p2)));
end

always @ (*) begin
    ap_condition_434 = (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd1 == and_ln924_fu_1145_p2) & (icmp_ln885_reg_1334 == 1'd0));
end

always @ (*) begin
    ap_condition_456 = ((~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (icmp_ln885_reg_1334 == 1'd1)) | (~(c_0_reg_390 == 4'd0) & ~(c_0_reg_390 == 4'd1) & ~(c_0_reg_390 == 4'd2) & ~(c_0_reg_390 == 4'd3) & ~(c_0_reg_390 == 4'd4) & ~(c_0_reg_390 == 4'd5) & ~(c_0_reg_390 == 4'd6) & ~(c_0_reg_390 == 4'd7) & ~(c_0_reg_390 == 4'd8) & ~(c_0_reg_390 == 4'd9) & (1'd0 == and_ln924_fu_1145_p2)));
end

assign c_fu_517_p2 = (c_0_reg_390 + 4'd1);

assign ch_fu_723_p2 = (ch_0_reg_471 + 3'd1);

assign conv_2_bias_V_address0 = zext_ln26_reg_1187;

assign conv_2_weights_V_address0 = zext_ln1116_5_fu_755_p1;

assign conv_out_0_V_address0 = conv_out_0_V_addr_reg_1197;

assign conv_out_10_V_address0 = conv_out_10_V_addr_reg_1247;

assign conv_out_1_V_address0 = conv_out_1_V_addr_reg_1202;

assign conv_out_2_V_address0 = conv_out_2_V_addr_reg_1207;

assign conv_out_3_V_address0 = conv_out_3_V_addr_reg_1212;

assign conv_out_4_V_address0 = conv_out_4_V_addr_reg_1217;

assign conv_out_5_V_address0 = conv_out_5_V_addr_reg_1222;

assign conv_out_6_V_address0 = conv_out_6_V_addr_reg_1227;

assign conv_out_7_V_address0 = conv_out_7_V_addr_reg_1232;

assign conv_out_8_V_address0 = conv_out_8_V_addr_reg_1237;

assign conv_out_9_V_address0 = conv_out_9_V_addr_reg_1242;

assign f_fu_529_p2 = (f_0_reg_402 + 5'd1);

assign grp_fu_482_p0 = p_Result_26_fu_1102_p5;

assign icmp_ln11_fu_511_p2 = ((c_0_reg_390 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_523_p2 = ((f_0_reg_402 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_571_p2 = ((wr_0_reg_425 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_629_p2 = ((wc_0_reg_448 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_717_p2 = ((ch_0_reg_471 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_823_p2 = ((tmp_V_4_fu_817_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_932_p2 = ((p_Result_21_fu_926_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_900_p2 = (($signed(tmp_11_fu_890_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_487_p2 = ((r_0_reg_378 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_992_p2 = (($signed(lsb_index_fu_884_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_1135_p2 = ((trunc_ln4_fu_1119_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1129_p2 = ((add_ln915_fu_1089_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign input_V_address0 = zext_ln1117_3_fu_765_p1;


always @ (p_Result_25_fu_858_p3) begin
    if (p_Result_25_fu_858_p3[0] == 1'b1) begin
        l_fu_866_p3 = 32'd0;
    end else if (p_Result_25_fu_858_p3[1] == 1'b1) begin
        l_fu_866_p3 = 32'd1;
    end else if (p_Result_25_fu_858_p3[2] == 1'b1) begin
        l_fu_866_p3 = 32'd2;
    end else if (p_Result_25_fu_858_p3[3] == 1'b1) begin
        l_fu_866_p3 = 32'd3;
    end else if (p_Result_25_fu_858_p3[4] == 1'b1) begin
        l_fu_866_p3 = 32'd4;
    end else if (p_Result_25_fu_858_p3[5] == 1'b1) begin
        l_fu_866_p3 = 32'd5;
    end else if (p_Result_25_fu_858_p3[6] == 1'b1) begin
        l_fu_866_p3 = 32'd6;
    end else if (p_Result_25_fu_858_p3[7] == 1'b1) begin
        l_fu_866_p3 = 32'd7;
    end else if (p_Result_25_fu_858_p3[8] == 1'b1) begin
        l_fu_866_p3 = 32'd8;
    end else if (p_Result_25_fu_858_p3[9] == 1'b1) begin
        l_fu_866_p3 = 32'd9;
    end else if (p_Result_25_fu_858_p3[10] == 1'b1) begin
        l_fu_866_p3 = 32'd10;
    end else if (p_Result_25_fu_858_p3[11] == 1'b1) begin
        l_fu_866_p3 = 32'd11;
    end else if (p_Result_25_fu_858_p3[12] == 1'b1) begin
        l_fu_866_p3 = 32'd12;
    end else if (p_Result_25_fu_858_p3[13] == 1'b1) begin
        l_fu_866_p3 = 32'd13;
    end else if (p_Result_25_fu_858_p3[14] == 1'b1) begin
        l_fu_866_p3 = 32'd14;
    end else if (p_Result_25_fu_858_p3[15] == 1'b1) begin
        l_fu_866_p3 = 32'd15;
    end else if (p_Result_25_fu_858_p3[16] == 1'b1) begin
        l_fu_866_p3 = 32'd16;
    end else if (p_Result_25_fu_858_p3[17] == 1'b1) begin
        l_fu_866_p3 = 32'd17;
    end else if (p_Result_25_fu_858_p3[18] == 1'b1) begin
        l_fu_866_p3 = 32'd18;
    end else if (p_Result_25_fu_858_p3[19] == 1'b1) begin
        l_fu_866_p3 = 32'd19;
    end else if (p_Result_25_fu_858_p3[20] == 1'b1) begin
        l_fu_866_p3 = 32'd20;
    end else if (p_Result_25_fu_858_p3[21] == 1'b1) begin
        l_fu_866_p3 = 32'd21;
    end else if (p_Result_25_fu_858_p3[22] == 1'b1) begin
        l_fu_866_p3 = 32'd22;
    end else if (p_Result_25_fu_858_p3[23] == 1'b1) begin
        l_fu_866_p3 = 32'd23;
    end else if (p_Result_25_fu_858_p3[24] == 1'b1) begin
        l_fu_866_p3 = 32'd24;
    end else if (p_Result_25_fu_858_p3[25] == 1'b1) begin
        l_fu_866_p3 = 32'd25;
    end else if (p_Result_25_fu_858_p3[26] == 1'b1) begin
        l_fu_866_p3 = 32'd26;
    end else if (p_Result_25_fu_858_p3[27] == 1'b1) begin
        l_fu_866_p3 = 32'd27;
    end else if (p_Result_25_fu_858_p3[28] == 1'b1) begin
        l_fu_866_p3 = 32'd28;
    end else if (p_Result_25_fu_858_p3[29] == 1'b1) begin
        l_fu_866_p3 = 32'd29;
    end else if (p_Result_25_fu_858_p3[30] == 1'b1) begin
        l_fu_866_p3 = 32'd30;
    end else if (p_Result_25_fu_858_p3[31] == 1'b1) begin
        l_fu_866_p3 = 32'd31;
    end else begin
        l_fu_866_p3 = 32'd32;
    end
end

assign lhs_V_fu_781_p3 = {{p_Val2_19_reg_459}, {8'd0}};

assign lsb_index_fu_884_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_874_p2));

assign lshr_ln897_fu_920_p2 = 14'd16383 >> zext_ln897_fu_916_p1;

assign lshr_ln908_fu_1013_p2 = zext_ln907_1_fu_1005_p1 >> add_ln908_fu_1008_p2;

assign m_1_fu_1038_p3 = ((icmp_ln908_reg_1360[0:0] === 1'b1) ? zext_ln908_fu_1019_p1 : shl_ln908_fu_1032_p2);

assign m_2_fu_1048_p2 = (zext_ln911_fu_1045_p1 + m_1_fu_1038_p3);

assign m_5_fu_1054_p4 = {{m_2_fu_1048_p2[63:1]}};

assign m_6_fu_1064_p1 = m_5_fu_1054_p4;

assign m_fu_1002_p1 = tmp_V_5_reg_1343;

assign mul_ln1117_fu_619_p0 = mul_ln1117_fu_619_p00;

assign mul_ln1117_fu_619_p00 = add_ln26_fu_609_p2;

assign mul_ln1117_fu_619_p2 = (mul_ln1117_fu_619_p0 * $signed('hD));

assign or_ln899_fu_978_p2 = (and_ln899_fu_972_p2 | a_fu_938_p2);

assign or_ln924_fu_1141_p2 = (icmp_ln924_reg_1375 | icmp_ln924_1_reg_1380);

assign or_ln_fu_984_p3 = {{31'd0}, {or_ln899_fu_978_p2}};

assign p_Result_21_fu_926_p2 = (tmp_V_5_fu_841_p3 & lshr_ln897_fu_920_p2);

assign p_Result_22_fu_964_p3 = tmp_V_5_fu_841_p3[add_ln899_fu_958_p2];

assign p_Result_24_fu_829_p3 = tmp_V_4_reg_1316[32'd13];

assign p_Result_25_fu_858_p3 = {{18'd262143}, {p_Result_s_fu_848_p4}};

assign p_Result_26_fu_1102_p5 = {{tmp_2_fu_1095_p3}, {m_6_fu_1064_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_841_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_848_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_848_p4[ap_tvar_int_0] = tmp_V_5_fu_841_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl1_cast_fu_691_p3 = {{add_ln1117_fu_686_p2}, {3'd0}};

assign p_shl_fu_654_p3 = {{trunc_ln1116_fu_650_p1}, {3'd0}};

assign r_fu_493_p2 = (r_0_reg_378 + 4'd1);

assign ret_V_fu_797_p2 = (zext_ln728_fu_789_p1 + zext_ln703_fu_793_p1);

assign select_ln915_fu_1076_p3 = ((tmp_13_fu_1068_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1116_fu_605_p1 = $signed(sub_ln1116_fu_599_p2);

assign sext_ln1118_1_fu_778_p1 = r_V_fu_1151_p2;

assign sext_ln1265_fu_813_p1 = $signed(conv_2_bias_V_q0);

assign shl_ln908_fu_1032_p2 = m_fu_1002_p1 << zext_ln908_1_fu_1028_p1;

assign sub_ln1116_1_fu_670_p2 = (p_shl_fu_654_p3 - tmp_14_fu_662_p3);

assign sub_ln1116_fu_599_p2 = (zext_ln1116_1_fu_595_p1 - zext_ln1116_fu_583_p1);

assign sub_ln1117_fu_711_p2 = (p_shl1_cast_fu_691_p3 - zext_ln1117_2_fu_707_p1);

assign sub_ln894_fu_874_p2 = (32'd14 - l_fu_866_p3);

assign sub_ln897_fu_910_p2 = (4'd4 - trunc_ln897_fu_906_p1);

assign sub_ln908_fu_1023_p2 = (32'd54 - sub_ln894_reg_1349);

assign sub_ln915_fu_1084_p2 = (11'd6 - trunc_ln893_reg_1365);

assign tmp_11_fu_890_p4 = {{lsb_index_fu_884_p2[31:1]}};

assign tmp_12_fu_944_p3 = lsb_index_fu_884_p2[32'd31];

assign tmp_13_fu_1068_p3 = m_2_fu_1048_p2[32'd54];

assign tmp_14_fu_662_p3 = {{add_ln1116_fu_645_p2}, {1'd0}};

assign tmp_15_fu_699_p3 = {{add_ln1117_fu_686_p2}, {1'd0}};

assign tmp_23_cast_fu_742_p3 = {{add_ln1116_1_fu_737_p2}, {4'd0}};

assign tmp_2_fu_1095_p3 = {{p_Result_24_reg_1338}, {add_ln915_fu_1089_p2}};

assign tmp_3_fu_499_p3 = {{r_0_reg_378}, {4'd0}};

assign tmp_4_fu_587_p3 = {{wr_0_reg_425}, {2'd0}};

assign tmp_V_4_fu_817_p2 = ($signed(sext_ln1265_fu_813_p1) + $signed(p_Val2_s_reg_413));

assign tmp_V_5_fu_841_p3 = ((p_Result_24_fu_829_p3[0:0] === 1'b1) ? tmp_V_fu_836_p2 : tmp_V_4_reg_1316);

assign tmp_V_fu_836_p2 = (14'd0 - tmp_V_4_reg_1316);

assign trunc_ln1116_fu_650_p1 = add_ln1116_fu_645_p2[3:0];

assign trunc_ln4_fu_1119_p4 = {{m_2_fu_1048_p2[52:1]}};

assign trunc_ln893_fu_998_p1 = l_fu_866_p3[10:0];

assign trunc_ln894_fu_880_p1 = sub_ln894_fu_874_p2[13:0];

assign trunc_ln897_fu_906_p1 = sub_ln894_fu_874_p2[3:0];

assign wc_fu_635_p2 = (wc_0_reg_448 + 2'd1);

assign wr_fu_577_p2 = (wr_0_reg_425 + 2'd1);

assign xor_ln899_fu_952_p2 = (tmp_12_fu_944_p3 ^ 1'd1);

assign zext_ln1116_1_fu_595_p1 = tmp_4_fu_587_p3;

assign zext_ln1116_2_fu_641_p1 = wc_0_reg_448;

assign zext_ln1116_3_fu_729_p1 = ch_0_reg_471;

assign zext_ln1116_4_fu_733_p1 = ch_0_reg_471;

assign zext_ln1116_5_fu_755_p1 = add_ln1116_2_fu_750_p2;

assign zext_ln1116_fu_583_p1 = wr_0_reg_425;

assign zext_ln1117_1_fu_682_p1 = add_ln26_1_fu_676_p2;

assign zext_ln1117_2_fu_707_p1 = tmp_15_fu_699_p3;

assign zext_ln1117_3_fu_765_p1 = add_ln1117_1_fu_760_p2;

assign zext_ln11_fu_507_p1 = tmp_3_fu_499_p3;

assign zext_ln18_fu_567_p1 = wr_0_reg_425;

assign zext_ln203_11_fu_543_p1 = f_0_reg_402;

assign zext_ln203_12_fu_552_p1 = add_ln203_fu_547_p2;

assign zext_ln203_fu_539_p1 = f_0_reg_402;

assign zext_ln21_fu_625_p1 = wc_0_reg_448;

assign zext_ln26_fu_535_p1 = f_0_reg_402;

assign zext_ln703_fu_793_p1 = $unsigned(sext_ln1118_1_fu_778_p1);

assign zext_ln728_fu_789_p1 = lhs_V_fu_781_p3;

assign zext_ln897_fu_916_p1 = sub_ln897_fu_910_p2;

assign zext_ln907_1_fu_1005_p1 = tmp_V_5_reg_1343;

assign zext_ln908_1_fu_1028_p1 = sub_ln908_fu_1023_p2;

assign zext_ln908_fu_1019_p1 = lshr_ln908_fu_1013_p2;

assign zext_ln911_fu_1045_p1 = or_ln_reg_1355;

always @ (posedge ap_clk) begin
    zext_ln11_reg_1166[3:0] <= 4'b0000;
    zext_ln11_reg_1166[8] <= 1'b0;
    zext_ln26_reg_1187[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln203_reg_1192[10:5] <= 6'b000000;
    sub_ln1116_1_reg_1283[0] <= 1'b0;
    sub_ln1117_reg_1288[0] <= 1'b0;
    or_ln_reg_1355[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_2
