// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module max_pool_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_0_V_address0,
        conv_out_0_V_ce0,
        conv_out_0_V_q0,
        conv_out_0_V_address1,
        conv_out_0_V_ce1,
        conv_out_0_V_q1,
        conv_out_1_V_address0,
        conv_out_1_V_ce0,
        conv_out_1_V_q0,
        conv_out_1_V_address1,
        conv_out_1_V_ce1,
        conv_out_1_V_q1,
        conv_out_2_V_address0,
        conv_out_2_V_ce0,
        conv_out_2_V_q0,
        conv_out_2_V_address1,
        conv_out_2_V_ce1,
        conv_out_2_V_q1,
        conv_out_3_V_address0,
        conv_out_3_V_ce0,
        conv_out_3_V_q0,
        conv_out_3_V_address1,
        conv_out_3_V_ce1,
        conv_out_3_V_q1,
        conv_out_4_V_address0,
        conv_out_4_V_ce0,
        conv_out_4_V_q0,
        conv_out_4_V_address1,
        conv_out_4_V_ce1,
        conv_out_4_V_q1,
        max_pool_out_0_V_address0,
        max_pool_out_0_V_ce0,
        max_pool_out_0_V_we0,
        max_pool_out_0_V_d0,
        max_pool_out_0_V_address1,
        max_pool_out_0_V_ce1,
        max_pool_out_0_V_we1,
        max_pool_out_0_V_d1,
        max_pool_out_1_V_address0,
        max_pool_out_1_V_ce0,
        max_pool_out_1_V_we0,
        max_pool_out_1_V_d0,
        max_pool_out_1_V_address1,
        max_pool_out_1_V_ce1,
        max_pool_out_1_V_we1,
        max_pool_out_1_V_d1,
        max_pool_out_2_0_V_address0,
        max_pool_out_2_0_V_ce0,
        max_pool_out_2_0_V_we0,
        max_pool_out_2_0_V_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_pp0_stage1 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv_out_0_V_address0;
output   conv_out_0_V_ce0;
input  [13:0] conv_out_0_V_q0;
output  [9:0] conv_out_0_V_address1;
output   conv_out_0_V_ce1;
input  [13:0] conv_out_0_V_q1;
output  [8:0] conv_out_1_V_address0;
output   conv_out_1_V_ce0;
input  [13:0] conv_out_1_V_q0;
output  [8:0] conv_out_1_V_address1;
output   conv_out_1_V_ce1;
input  [13:0] conv_out_1_V_q1;
output  [8:0] conv_out_2_V_address0;
output   conv_out_2_V_ce0;
input  [13:0] conv_out_2_V_q0;
output  [8:0] conv_out_2_V_address1;
output   conv_out_2_V_ce1;
input  [13:0] conv_out_2_V_q1;
output  [8:0] conv_out_3_V_address0;
output   conv_out_3_V_ce0;
input  [13:0] conv_out_3_V_q0;
output  [8:0] conv_out_3_V_address1;
output   conv_out_3_V_ce1;
input  [13:0] conv_out_3_V_q1;
output  [8:0] conv_out_4_V_address0;
output   conv_out_4_V_ce0;
input  [13:0] conv_out_4_V_q0;
output  [8:0] conv_out_4_V_address1;
output   conv_out_4_V_ce1;
input  [13:0] conv_out_4_V_q1;
output  [7:0] max_pool_out_0_V_address0;
output   max_pool_out_0_V_ce0;
output   max_pool_out_0_V_we0;
output  [13:0] max_pool_out_0_V_d0;
output  [7:0] max_pool_out_0_V_address1;
output   max_pool_out_0_V_ce1;
output   max_pool_out_0_V_we1;
output  [13:0] max_pool_out_0_V_d1;
output  [7:0] max_pool_out_1_V_address0;
output   max_pool_out_1_V_ce0;
output   max_pool_out_1_V_we0;
output  [13:0] max_pool_out_1_V_d0;
output  [7:0] max_pool_out_1_V_address1;
output   max_pool_out_1_V_ce1;
output   max_pool_out_1_V_we1;
output  [13:0] max_pool_out_1_V_d1;
output  [6:0] max_pool_out_2_0_V_address0;
output   max_pool_out_2_0_V_ce0;
output   max_pool_out_2_0_V_we0;
output  [13:0] max_pool_out_2_0_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] conv_out_0_V_address0;
reg conv_out_0_V_ce0;
reg[9:0] conv_out_0_V_address1;
reg conv_out_0_V_ce1;
reg[8:0] conv_out_1_V_address0;
reg conv_out_1_V_ce0;
reg[8:0] conv_out_1_V_address1;
reg conv_out_1_V_ce1;
reg[8:0] conv_out_2_V_address0;
reg conv_out_2_V_ce0;
reg[8:0] conv_out_2_V_address1;
reg conv_out_2_V_ce1;
reg[8:0] conv_out_3_V_address0;
reg conv_out_3_V_ce0;
reg[8:0] conv_out_3_V_address1;
reg conv_out_3_V_ce1;
reg[8:0] conv_out_4_V_address0;
reg conv_out_4_V_ce0;
reg[8:0] conv_out_4_V_address1;
reg conv_out_4_V_ce1;
reg max_pool_out_0_V_ce0;
reg max_pool_out_0_V_we0;
reg max_pool_out_0_V_ce1;
reg max_pool_out_0_V_we1;
reg max_pool_out_1_V_ce0;
reg max_pool_out_1_V_we0;
reg max_pool_out_1_V_ce1;
reg max_pool_out_1_V_we1;
reg max_pool_out_2_0_V_ce0;
reg max_pool_out_2_0_V_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_374;
reg   [4:0] f_0_reg_385;
reg   [2:0] r_0_reg_396;
wire   [0:0] icmp_ln10_fu_407_p2;
reg   [0:0] icmp_ln10_reg_1092;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln10_fu_413_p2;
reg   [6:0] add_ln10_reg_1096;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln29_20_fu_431_p3;
reg   [2:0] select_ln29_20_reg_1101;
wire   [4:0] select_ln29_21_fu_439_p3;
reg   [4:0] select_ln29_21_reg_1108;
wire   [7:0] tmp_fu_463_p3;
reg   [7:0] tmp_reg_1116;
wire   [10:0] add_ln1494_fu_532_p2;
reg   [10:0] add_ln1494_reg_1126;
wire   [63:0] zext_ln1494_3_fu_584_p1;
reg   [63:0] zext_ln1494_3_reg_1136;
wire   [10:0] add_ln1494_4_fu_643_p2;
reg   [10:0] add_ln1494_4_reg_1172;
wire   [63:0] zext_ln1494_5_fu_665_p1;
reg   [63:0] zext_ln1494_5_reg_1177;
wire   [9:0] add_ln1494_5_fu_685_p2;
reg   [9:0] add_ln1494_5_reg_1183;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [13:0] select_ln29_2_fu_748_p3;
reg   [13:0] select_ln29_2_reg_1248;
wire   [13:0] select_ln29_6_fu_798_p3;
reg   [13:0] select_ln29_6_reg_1254;
wire   [12:0] select_ln29_8_fu_816_p3;
reg   [12:0] select_ln29_8_reg_1260;
reg   [13:0] conv_out_4_V_load_1_reg_1265;
wire   [12:0] select_ln29_12_fu_834_p3;
reg   [12:0] select_ln29_12_reg_1271;
wire   [12:0] select_ln29_16_fu_852_p3;
reg   [12:0] select_ln29_16_reg_1276;
wire   [2:0] r_fu_860_p2;
reg   [2:0] r_reg_1281;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_378_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_f_0_phi_fu_389_p4;
reg   [2:0] ap_phi_mux_r_0_phi_fu_400_p4;
wire  signed [63:0] sext_ln1494_fu_521_p1;
wire   [63:0] zext_ln1494_2_fu_556_p1;
wire  signed [63:0] sext_ln1494_2_fu_632_p1;
wire  signed [63:0] sext_ln1494_1_fu_691_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] sext_ln1494_3_fu_731_p1;
wire   [63:0] zext_ln1494_7_fu_735_p1;
wire   [63:0] zext_ln203_fu_877_p1;
wire   [63:0] zext_ln203_1_fu_902_p1;
wire   [63:0] zext_ln203_3_fu_925_p1;
wire   [0:0] icmp_ln13_fu_425_p2;
wire   [4:0] f_fu_419_p2;
wire   [9:0] tmp_5_fu_471_p3;
wire   [10:0] zext_ln1494_fu_479_p1;
wire   [10:0] zext_ln1494_1_fu_483_p1;
wire   [10:0] sub_ln1494_fu_487_p2;
wire   [4:0] trunc_ln1494_fu_493_p1;
wire   [5:0] tmp_3_fu_503_p4;
wire   [4:0] or_ln1494_fu_497_p2;
wire   [10:0] tmp_6_fu_513_p3;
wire   [10:0] zext_ln14_1_fu_451_p1;
wire   [10:0] or_ln1494_1_fu_526_p2;
wire   [8:0] tmp_7_fu_546_p4;
wire   [8:0] tmp_s_fu_538_p3;
wire   [8:0] or_ln1494_2_fu_564_p2;
wire   [9:0] zext_ln14_fu_447_p1;
wire   [9:0] tmp_12_cast_fu_570_p3;
wire   [9:0] add_ln1494_1_fu_578_p2;
wire   [3:0] shl_ln_fu_455_p3;
wire   [3:0] or_ln26_fu_590_p2;
wire   [9:0] tmp_8_fu_596_p3;
wire   [7:0] tmp_9_fu_608_p3;
wire   [10:0] zext_ln1494_4_fu_604_p1;
wire   [10:0] zext_ln1494_6_fu_616_p1;
wire   [10:0] sub_ln1494_1_fu_620_p2;
wire   [10:0] add_ln1494_2_fu_626_p2;
wire   [10:0] add_ln1494_3_fu_637_p2;
wire   [8:0] tmp_11_fu_657_p3;
wire   [8:0] tmp_10_fu_649_p3;
wire   [8:0] or_ln1494_3_fu_671_p2;
wire   [9:0] tmp_17_cast_fu_677_p3;
wire   [0:0] icmp_ln1494_fu_699_p2;
wire   [12:0] trunc_ln1494_1_fu_695_p1;
wire   [12:0] select_ln29_fu_705_p3;
wire   [13:0] zext_ln29_fu_713_p1;
wire   [0:0] icmp_ln1494_1_fu_717_p2;
wire   [13:0] select_ln29_1_fu_723_p3;
wire   [0:0] icmp_ln1494_2_fu_742_p2;
wire   [0:0] icmp_ln1494_4_fu_760_p2;
wire   [12:0] trunc_ln1494_2_fu_756_p1;
wire   [12:0] select_ln29_4_fu_766_p3;
wire   [13:0] zext_ln29_1_fu_774_p1;
wire   [0:0] icmp_ln1494_5_fu_778_p2;
wire   [13:0] select_ln29_5_fu_784_p3;
wire   [0:0] icmp_ln1494_6_fu_792_p2;
wire   [0:0] icmp_ln1494_8_fu_810_p2;
wire   [12:0] trunc_ln1494_3_fu_806_p1;
wire   [0:0] icmp_ln1494_12_fu_828_p2;
wire   [12:0] trunc_ln1494_4_fu_824_p1;
wire   [0:0] icmp_ln1494_16_fu_846_p2;
wire   [12:0] trunc_ln1494_5_fu_842_p1;
wire   [7:0] tmp_2_fu_871_p3;
wire   [7:0] or_ln203_fu_883_p2;
wire   [8:0] zext_ln14_3_fu_868_p1;
wire   [8:0] tmp_3_cast_fu_888_p3;
wire   [8:0] add_ln203_fu_896_p2;
wire   [6:0] tmp_4_fu_908_p3;
wire   [7:0] zext_ln14_2_fu_865_p1;
wire   [7:0] zext_ln203_2_fu_915_p1;
wire   [7:0] add_ln203_1_fu_919_p2;
wire   [0:0] icmp_ln1494_3_fu_930_p2;
wire   [0:0] icmp_ln1494_7_fu_943_p2;
wire   [13:0] zext_ln29_2_fu_956_p1;
wire   [0:0] icmp_ln1494_9_fu_959_p2;
wire   [13:0] select_ln29_9_fu_965_p3;
wire   [0:0] icmp_ln1494_10_fu_973_p2;
wire   [13:0] select_ln29_10_fu_978_p3;
wire   [0:0] icmp_ln1494_11_fu_985_p2;
wire   [13:0] zext_ln29_3_fu_1000_p1;
wire   [0:0] icmp_ln1494_13_fu_1003_p2;
wire   [13:0] select_ln29_13_fu_1009_p3;
wire   [0:0] icmp_ln1494_14_fu_1017_p2;
wire   [13:0] select_ln29_14_fu_1023_p3;
wire   [0:0] icmp_ln1494_15_fu_1031_p2;
wire   [13:0] zext_ln29_4_fu_1046_p1;
wire   [0:0] icmp_ln1494_17_fu_1049_p2;
wire   [13:0] select_ln29_17_fu_1055_p3;
wire   [0:0] icmp_ln1494_18_fu_1063_p2;
wire   [13:0] select_ln29_18_fu_1069_p3;
wire   [0:0] icmp_ln1494_19_fu_1077_p2;
wire    ap_CS_fsm_state5;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        f_0_reg_385 <= select_ln29_21_reg_1108;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_385 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        indvar_flatten_reg_374 <= add_ln10_reg_1096;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_374 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        r_0_reg_396 <= r_reg_1281;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_396 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln10_reg_1096 <= add_ln10_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_407_p2 == 1'd0))) begin
        add_ln1494_4_reg_1172 <= add_ln1494_4_fu_643_p2;
        add_ln1494_5_reg_1183 <= add_ln1494_5_fu_685_p2;
        add_ln1494_reg_1126 <= add_ln1494_fu_532_p2;
        select_ln29_20_reg_1101 <= select_ln29_20_fu_431_p3;
        tmp_reg_1116[7 : 5] <= tmp_fu_463_p3[7 : 5];
        zext_ln1494_3_reg_1136[9 : 0] <= zext_ln1494_3_fu_584_p1[9 : 0];
        zext_ln1494_5_reg_1177[4 : 0] <= zext_ln1494_5_fu_665_p1[4 : 0];
zext_ln1494_5_reg_1177[8 : 6] <= zext_ln1494_5_fu_665_p1[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        conv_out_4_V_load_1_reg_1265 <= conv_out_4_V_q1;
        r_reg_1281 <= r_fu_860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln10_reg_1092 <= icmp_ln10_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        select_ln29_12_reg_1271 <= select_ln29_12_fu_834_p3;
        select_ln29_16_reg_1276 <= select_ln29_16_fu_852_p3;
        select_ln29_2_reg_1248 <= select_ln29_2_fu_748_p3;
        select_ln29_6_reg_1254 <= select_ln29_6_fu_798_p3;
        select_ln29_8_reg_1260 <= select_ln29_8_fu_816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_407_p2 == 1'd0))) begin
        select_ln29_21_reg_1108 <= select_ln29_21_fu_439_p3;
    end
end

always @ (*) begin
    if ((icmp_ln10_fu_407_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1092 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_389_p4 = select_ln29_21_reg_1108;
    end else begin
        ap_phi_mux_f_0_phi_fu_389_p4 = f_0_reg_385;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1092 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_378_p4 = add_ln10_reg_1096;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_378_p4 = indvar_flatten_reg_374;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_1092 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_400_p4 = r_reg_1281;
    end else begin
        ap_phi_mux_r_0_phi_fu_400_p4 = r_0_reg_396;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_0_V_address0 = sext_ln1494_1_fu_691_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_0_V_address0 = sext_ln1494_fu_521_p1;
        end else begin
            conv_out_0_V_address0 = 'bx;
        end
    end else begin
        conv_out_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_0_V_address1 = sext_ln1494_3_fu_731_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_0_V_address1 = sext_ln1494_2_fu_632_p1;
        end else begin
            conv_out_0_V_address1 = 'bx;
        end
    end else begin
        conv_out_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_0_V_ce0 = 1'b1;
    end else begin
        conv_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_0_V_ce1 = 1'b1;
    end else begin
        conv_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_1_V_address0 = zext_ln1494_5_reg_1177;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_1_V_address0 = zext_ln1494_2_fu_556_p1;
        end else begin
            conv_out_1_V_address0 = 'bx;
        end
    end else begin
        conv_out_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_1_V_address1 = zext_ln1494_7_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_1_V_address1 = zext_ln1494_3_fu_584_p1;
        end else begin
            conv_out_1_V_address1 = 'bx;
        end
    end else begin
        conv_out_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_1_V_ce0 = 1'b1;
    end else begin
        conv_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_1_V_ce1 = 1'b1;
    end else begin
        conv_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_2_V_address0 = zext_ln1494_3_reg_1136;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_2_V_address0 = zext_ln1494_2_fu_556_p1;
        end else begin
            conv_out_2_V_address0 = 'bx;
        end
    end else begin
        conv_out_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_2_V_address1 = zext_ln1494_7_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_2_V_address1 = zext_ln1494_5_fu_665_p1;
        end else begin
            conv_out_2_V_address1 = 'bx;
        end
    end else begin
        conv_out_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_2_V_ce0 = 1'b1;
    end else begin
        conv_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_2_V_ce1 = 1'b1;
    end else begin
        conv_out_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_3_V_address0 = zext_ln1494_5_reg_1177;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_3_V_address0 = zext_ln1494_2_fu_556_p1;
        end else begin
            conv_out_3_V_address0 = 'bx;
        end
    end else begin
        conv_out_3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_3_V_address1 = zext_ln1494_7_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_3_V_address1 = zext_ln1494_3_fu_584_p1;
        end else begin
            conv_out_3_V_address1 = 'bx;
        end
    end else begin
        conv_out_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_3_V_ce0 = 1'b1;
    end else begin
        conv_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_3_V_ce1 = 1'b1;
    end else begin
        conv_out_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_4_V_address0 = zext_ln1494_3_reg_1136;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_4_V_address0 = zext_ln1494_2_fu_556_p1;
        end else begin
            conv_out_4_V_address0 = 'bx;
        end
    end else begin
        conv_out_4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_4_V_address1 = zext_ln1494_7_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_4_V_address1 = zext_ln1494_5_fu_665_p1;
        end else begin
            conv_out_4_V_address1 = 'bx;
        end
    end else begin
        conv_out_4_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_4_V_ce0 = 1'b1;
    end else begin
        conv_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_out_4_V_ce1 = 1'b1;
    end else begin
        conv_out_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_V_ce0 = 1'b1;
    end else begin
        max_pool_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_V_ce1 = 1'b1;
    end else begin
        max_pool_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        max_pool_out_0_V_we0 = 1'b1;
    end else begin
        max_pool_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        max_pool_out_0_V_we1 = 1'b1;
    end else begin
        max_pool_out_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_V_ce0 = 1'b1;
    end else begin
        max_pool_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_V_ce1 = 1'b1;
    end else begin
        max_pool_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        max_pool_out_1_V_we0 = 1'b1;
    end else begin
        max_pool_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        max_pool_out_1_V_we1 = 1'b1;
    end else begin
        max_pool_out_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_2_0_V_ce0 = 1'b1;
    end else begin
        max_pool_out_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_1092 == 1'd0))) begin
        max_pool_out_2_0_V_we0 = 1'b1;
    end else begin
        max_pool_out_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln10_fu_407_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln10_fu_407_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_413_p2 = (ap_phi_mux_indvar_flatten_phi_fu_378_p4 + 7'd1);

assign add_ln1494_1_fu_578_p2 = (zext_ln14_fu_447_p1 + tmp_12_cast_fu_570_p3);

assign add_ln1494_2_fu_626_p2 = (zext_ln14_1_fu_451_p1 + sub_ln1494_1_fu_620_p2);

assign add_ln1494_3_fu_637_p2 = (11'd16 + sub_ln1494_1_fu_620_p2);

assign add_ln1494_4_fu_643_p2 = (zext_ln14_1_fu_451_p1 + add_ln1494_3_fu_637_p2);

assign add_ln1494_5_fu_685_p2 = (zext_ln14_fu_447_p1 + tmp_17_cast_fu_677_p3);

assign add_ln1494_fu_532_p2 = (zext_ln14_1_fu_451_p1 + or_ln1494_1_fu_526_p2);

assign add_ln203_1_fu_919_p2 = (zext_ln14_2_fu_865_p1 + zext_ln203_2_fu_915_p1);

assign add_ln203_fu_896_p2 = (zext_ln14_3_fu_868_p1 + tmp_3_cast_fu_888_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign f_fu_419_p2 = (5'd1 + ap_phi_mux_f_0_phi_fu_389_p4);

assign icmp_ln10_fu_407_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_378_p4 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_425_p2 = ((ap_phi_mux_r_0_phi_fu_400_p4 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln1494_10_fu_973_p2 = (($signed(conv_out_4_V_load_1_reg_1265) > $signed(select_ln29_9_fu_965_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_11_fu_985_p2 = (($signed(conv_out_0_V_q1) > $signed(select_ln29_10_fu_978_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_828_p2 = (($signed(conv_out_1_V_q1) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_1003_p2 = (($signed(conv_out_2_V_q0) > $signed(zext_ln29_3_fu_1000_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_1017_p2 = (($signed(conv_out_1_V_q1) > $signed(select_ln29_13_fu_1009_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_1031_p2 = (($signed(conv_out_2_V_q1) > $signed(select_ln29_14_fu_1023_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_846_p2 = (($signed(conv_out_3_V_q1) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_1049_p2 = (($signed(conv_out_4_V_q0) > $signed(zext_ln29_4_fu_1046_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_1063_p2 = (($signed(conv_out_3_V_q1) > $signed(select_ln29_17_fu_1055_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_1077_p2 = (($signed(conv_out_4_V_q1) > $signed(select_ln29_18_fu_1069_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_717_p2 = (($signed(conv_out_1_V_q0) > $signed(zext_ln29_fu_713_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_2_fu_742_p2 = (($signed(conv_out_0_V_q1) > $signed(select_ln29_1_fu_723_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_3_fu_930_p2 = (($signed(conv_out_1_V_q0) > $signed(select_ln29_2_reg_1248)) ? 1'b1 : 1'b0);

assign icmp_ln1494_4_fu_760_p2 = (($signed(conv_out_2_V_q0) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_5_fu_778_p2 = (($signed(conv_out_3_V_q0) > $signed(zext_ln29_1_fu_774_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_6_fu_792_p2 = (($signed(conv_out_2_V_q1) > $signed(select_ln29_5_fu_784_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_7_fu_943_p2 = (($signed(conv_out_3_V_q0) > $signed(select_ln29_6_reg_1254)) ? 1'b1 : 1'b0);

assign icmp_ln1494_8_fu_810_p2 = (($signed(conv_out_4_V_q0) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_9_fu_959_p2 = (($signed(conv_out_0_V_q0) > $signed(zext_ln29_2_fu_956_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_699_p2 = (($signed(conv_out_0_V_q0) > $signed(14'd0)) ? 1'b1 : 1'b0);

assign max_pool_out_0_V_address0 = zext_ln203_fu_877_p1;

assign max_pool_out_0_V_address1 = zext_ln203_1_fu_902_p1;

assign max_pool_out_0_V_d0 = ((icmp_ln1494_3_fu_930_p2[0:0] === 1'b1) ? conv_out_1_V_q0 : select_ln29_2_reg_1248);

assign max_pool_out_0_V_d1 = ((icmp_ln1494_15_fu_1031_p2[0:0] === 1'b1) ? conv_out_2_V_q1 : select_ln29_14_fu_1023_p3);

assign max_pool_out_1_V_address0 = zext_ln203_fu_877_p1;

assign max_pool_out_1_V_address1 = zext_ln203_1_fu_902_p1;

assign max_pool_out_1_V_d0 = ((icmp_ln1494_7_fu_943_p2[0:0] === 1'b1) ? conv_out_3_V_q0 : select_ln29_6_reg_1254);

assign max_pool_out_1_V_d1 = ((icmp_ln1494_19_fu_1077_p2[0:0] === 1'b1) ? conv_out_4_V_q1 : select_ln29_18_fu_1069_p3);

assign max_pool_out_2_0_V_address0 = zext_ln203_3_fu_925_p1;

assign max_pool_out_2_0_V_d0 = ((icmp_ln1494_11_fu_985_p2[0:0] === 1'b1) ? conv_out_0_V_q1 : select_ln29_10_fu_978_p3);

assign or_ln1494_1_fu_526_p2 = (sub_ln1494_fu_487_p2 | 11'd16);

assign or_ln1494_2_fu_564_p2 = (tmp_s_fu_538_p3 | 9'd16);

assign or_ln1494_3_fu_671_p2 = (tmp_10_fu_649_p3 | 9'd16);

assign or_ln1494_fu_497_p2 = (trunc_ln1494_fu_493_p1 | select_ln29_21_fu_439_p3);

assign or_ln203_fu_883_p2 = (tmp_reg_1116 | 8'd16);

assign or_ln26_fu_590_p2 = (shl_ln_fu_455_p3 | 4'd1);

assign r_fu_860_p2 = (3'd1 + select_ln29_20_reg_1101);

assign select_ln29_10_fu_978_p3 = ((icmp_ln1494_10_fu_973_p2[0:0] === 1'b1) ? conv_out_4_V_load_1_reg_1265 : select_ln29_9_fu_965_p3);

assign select_ln29_12_fu_834_p3 = ((icmp_ln1494_12_fu_828_p2[0:0] === 1'b1) ? trunc_ln1494_4_fu_824_p1 : 13'd0);

assign select_ln29_13_fu_1009_p3 = ((icmp_ln1494_13_fu_1003_p2[0:0] === 1'b1) ? conv_out_2_V_q0 : zext_ln29_3_fu_1000_p1);

assign select_ln29_14_fu_1023_p3 = ((icmp_ln1494_14_fu_1017_p2[0:0] === 1'b1) ? conv_out_1_V_q1 : select_ln29_13_fu_1009_p3);

assign select_ln29_16_fu_852_p3 = ((icmp_ln1494_16_fu_846_p2[0:0] === 1'b1) ? trunc_ln1494_5_fu_842_p1 : 13'd0);

assign select_ln29_17_fu_1055_p3 = ((icmp_ln1494_17_fu_1049_p2[0:0] === 1'b1) ? conv_out_4_V_q0 : zext_ln29_4_fu_1046_p1);

assign select_ln29_18_fu_1069_p3 = ((icmp_ln1494_18_fu_1063_p2[0:0] === 1'b1) ? conv_out_3_V_q1 : select_ln29_17_fu_1055_p3);

assign select_ln29_1_fu_723_p3 = ((icmp_ln1494_1_fu_717_p2[0:0] === 1'b1) ? conv_out_1_V_q0 : zext_ln29_fu_713_p1);

assign select_ln29_20_fu_431_p3 = ((icmp_ln13_fu_425_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_r_0_phi_fu_400_p4);

assign select_ln29_21_fu_439_p3 = ((icmp_ln13_fu_425_p2[0:0] === 1'b1) ? f_fu_419_p2 : ap_phi_mux_f_0_phi_fu_389_p4);

assign select_ln29_2_fu_748_p3 = ((icmp_ln1494_2_fu_742_p2[0:0] === 1'b1) ? conv_out_0_V_q1 : select_ln29_1_fu_723_p3);

assign select_ln29_4_fu_766_p3 = ((icmp_ln1494_4_fu_760_p2[0:0] === 1'b1) ? trunc_ln1494_2_fu_756_p1 : 13'd0);

assign select_ln29_5_fu_784_p3 = ((icmp_ln1494_5_fu_778_p2[0:0] === 1'b1) ? conv_out_3_V_q0 : zext_ln29_1_fu_774_p1);

assign select_ln29_6_fu_798_p3 = ((icmp_ln1494_6_fu_792_p2[0:0] === 1'b1) ? conv_out_2_V_q1 : select_ln29_5_fu_784_p3);

assign select_ln29_8_fu_816_p3 = ((icmp_ln1494_8_fu_810_p2[0:0] === 1'b1) ? trunc_ln1494_3_fu_806_p1 : 13'd0);

assign select_ln29_9_fu_965_p3 = ((icmp_ln1494_9_fu_959_p2[0:0] === 1'b1) ? conv_out_0_V_q0 : zext_ln29_2_fu_956_p1);

assign select_ln29_fu_705_p3 = ((icmp_ln1494_fu_699_p2[0:0] === 1'b1) ? trunc_ln1494_1_fu_695_p1 : 13'd0);

assign sext_ln1494_1_fu_691_p1 = $signed(add_ln1494_reg_1126);

assign sext_ln1494_2_fu_632_p1 = $signed(add_ln1494_2_fu_626_p2);

assign sext_ln1494_3_fu_731_p1 = $signed(add_ln1494_4_reg_1172);

assign sext_ln1494_fu_521_p1 = $signed(tmp_6_fu_513_p3);

assign shl_ln_fu_455_p3 = {{select_ln29_20_fu_431_p3}, {1'd0}};

assign sub_ln1494_1_fu_620_p2 = (zext_ln1494_4_fu_604_p1 - zext_ln1494_6_fu_616_p1);

assign sub_ln1494_fu_487_p2 = (zext_ln1494_fu_479_p1 - zext_ln1494_1_fu_483_p1);

assign tmp_10_fu_649_p3 = {{or_ln26_fu_590_p2}, {5'd0}};

assign tmp_11_fu_657_p3 = {{or_ln26_fu_590_p2}, {select_ln29_21_fu_439_p3}};

assign tmp_12_cast_fu_570_p3 = {{1'd0}, {or_ln1494_2_fu_564_p2}};

assign tmp_17_cast_fu_677_p3 = {{1'd0}, {or_ln1494_3_fu_671_p2}};

assign tmp_2_fu_871_p3 = {{select_ln29_20_reg_1101}, {select_ln29_21_reg_1108}};

assign tmp_3_cast_fu_888_p3 = {{1'd0}, {or_ln203_fu_883_p2}};

assign tmp_3_fu_503_p4 = {{sub_ln1494_fu_487_p2[10:5]}};

assign tmp_4_fu_908_p3 = {{select_ln29_20_reg_1101}, {4'd0}};

assign tmp_5_fu_471_p3 = {{select_ln29_20_fu_431_p3}, {7'd0}};

assign tmp_6_fu_513_p3 = {{tmp_3_fu_503_p4}, {or_ln1494_fu_497_p2}};

assign tmp_7_fu_546_p4 = {{{select_ln29_20_fu_431_p3}, {1'd0}}, {select_ln29_21_fu_439_p3}};

assign tmp_8_fu_596_p3 = {{or_ln26_fu_590_p2}, {6'd0}};

assign tmp_9_fu_608_p3 = {{or_ln26_fu_590_p2}, {4'd0}};

assign tmp_fu_463_p3 = {{select_ln29_20_fu_431_p3}, {5'd0}};

assign tmp_s_fu_538_p3 = {{select_ln29_20_fu_431_p3}, {6'd0}};

assign trunc_ln1494_1_fu_695_p1 = conv_out_0_V_q0[12:0];

assign trunc_ln1494_2_fu_756_p1 = conv_out_2_V_q0[12:0];

assign trunc_ln1494_3_fu_806_p1 = conv_out_4_V_q0[12:0];

assign trunc_ln1494_4_fu_824_p1 = conv_out_1_V_q1[12:0];

assign trunc_ln1494_5_fu_842_p1 = conv_out_3_V_q1[12:0];

assign trunc_ln1494_fu_493_p1 = sub_ln1494_fu_487_p2[4:0];

assign zext_ln1494_1_fu_483_p1 = tmp_fu_463_p3;

assign zext_ln1494_2_fu_556_p1 = tmp_7_fu_546_p4;

assign zext_ln1494_3_fu_584_p1 = add_ln1494_1_fu_578_p2;

assign zext_ln1494_4_fu_604_p1 = tmp_8_fu_596_p3;

assign zext_ln1494_5_fu_665_p1 = tmp_11_fu_657_p3;

assign zext_ln1494_6_fu_616_p1 = tmp_9_fu_608_p3;

assign zext_ln1494_7_fu_735_p1 = add_ln1494_5_reg_1183;

assign zext_ln1494_fu_479_p1 = tmp_5_fu_471_p3;

assign zext_ln14_1_fu_451_p1 = select_ln29_21_fu_439_p3;

assign zext_ln14_2_fu_865_p1 = select_ln29_21_reg_1108;

assign zext_ln14_3_fu_868_p1 = select_ln29_21_reg_1108;

assign zext_ln14_fu_447_p1 = select_ln29_21_fu_439_p3;

assign zext_ln203_1_fu_902_p1 = add_ln203_fu_896_p2;

assign zext_ln203_2_fu_915_p1 = tmp_4_fu_908_p3;

assign zext_ln203_3_fu_925_p1 = add_ln203_1_fu_919_p2;

assign zext_ln203_fu_877_p1 = tmp_2_fu_871_p3;

assign zext_ln29_1_fu_774_p1 = select_ln29_4_fu_766_p3;

assign zext_ln29_2_fu_956_p1 = select_ln29_8_reg_1260;

assign zext_ln29_3_fu_1000_p1 = select_ln29_12_reg_1271;

assign zext_ln29_4_fu_1046_p1 = select_ln29_16_reg_1276;

assign zext_ln29_fu_713_p1 = select_ln29_fu_705_p3;

always @ (posedge ap_clk) begin
    tmp_reg_1116[4:0] <= 5'b00000;
    zext_ln1494_3_reg_1136[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    zext_ln1494_5_reg_1177[5] <= 1'b1;
    zext_ln1494_5_reg_1177[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //max_pool_2
