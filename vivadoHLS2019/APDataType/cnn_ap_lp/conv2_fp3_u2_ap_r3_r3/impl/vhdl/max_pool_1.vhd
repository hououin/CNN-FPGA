-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_out_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv_out_V_ce0 : OUT STD_LOGIC;
    conv_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_0_0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    max_pool_out_0_0_V_ce0 : OUT STD_LOGIC;
    max_pool_out_0_0_V_we0 : OUT STD_LOGIC;
    max_pool_out_0_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_0_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_0_1_V_ce0 : OUT STD_LOGIC;
    max_pool_out_0_1_V_we0 : OUT STD_LOGIC;
    max_pool_out_0_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_0_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_0_2_V_ce0 : OUT STD_LOGIC;
    max_pool_out_0_2_V_we0 : OUT STD_LOGIC;
    max_pool_out_0_2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_1_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_1_0_V_ce0 : OUT STD_LOGIC;
    max_pool_out_1_0_V_we0 : OUT STD_LOGIC;
    max_pool_out_1_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_1_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_1_1_V_ce0 : OUT STD_LOGIC;
    max_pool_out_1_1_V_we0 : OUT STD_LOGIC;
    max_pool_out_1_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_1_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_1_2_V_ce0 : OUT STD_LOGIC;
    max_pool_out_1_2_V_we0 : OUT STD_LOGIC;
    max_pool_out_1_2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_2_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_2_0_V_ce0 : OUT STD_LOGIC;
    max_pool_out_2_0_V_we0 : OUT STD_LOGIC;
    max_pool_out_2_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_2_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_2_1_V_ce0 : OUT STD_LOGIC;
    max_pool_out_2_1_V_we0 : OUT STD_LOGIC;
    max_pool_out_2_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    max_pool_out_2_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    max_pool_out_2_2_V_ce0 : OUT STD_LOGIC;
    max_pool_out_2_2_V_we0 : OUT STD_LOGIC;
    max_pool_out_2_2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of max_pool_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv9_16 : STD_LOGIC_VECTOR (8 downto 0) := "000010110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal f_fu_367_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal f_reg_738 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln13_fu_373_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln13_reg_743 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln10_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln13_2_fu_377_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln13_2_reg_748 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln13_3_fu_381_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln13_3_reg_753 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln13_fu_385_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln13_reg_758 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal r_fu_397_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_reg_766 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_403_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_771 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln13_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln203_fu_411_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln203_reg_776 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln203_4_fu_437_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln203_4_reg_780 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln203_fu_441_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln203_reg_785 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln16_fu_447_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln16_reg_790 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal c_fu_459_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_reg_798 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln2_fu_465_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln2_reg_803 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln16_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln38_fu_485_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mpr_fu_503_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mpr_reg_816 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal mul_ln1494_fu_518_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln1494_reg_821 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln20_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln37_fu_647_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mpc_fu_665_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mpc_reg_837 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln23_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln29_fu_727_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal f_0_reg_226 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_0_reg_237 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_mul9_reg_248 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_urem11_reg_259 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_0_reg_271 : STD_LOGIC_VECTOR (3 downto 0);
    signal phi_mul_reg_282 : STD_LOGIC_VECTOR (8 downto 0);
    signal phi_urem_reg_294 : STD_LOGIC_VECTOR (3 downto 0);
    signal max_0_reg_306 : STD_LOGIC_VECTOR (13 downto 0);
    signal mpr_0_reg_327 : STD_LOGIC_VECTOR (1 downto 0);
    signal max_1_reg_338 : STD_LOGIC_VECTOR (13 downto 0);
    signal mpc_0_reg_350 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln203_7_fu_582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_8_fu_625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1494_5_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln203_1_fu_524_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_415_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_429_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln203_fu_425_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln38_fu_473_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln38_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln20_fu_493_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_509_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln1494_fu_518_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_528_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln203_5_fu_538_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln203_3_fu_542_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln203_2_fu_547_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_559_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl5_cast_fu_551_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln203_6_fu_567_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln203_fu_571_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln203_4_fu_577_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln203_5_fu_589_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln203_3_fu_594_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl3_cast_fu_598_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl4_cast_fu_606_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln203_1_fu_614_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_6_fu_620_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln37_fu_635_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln37_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln23_fu_655_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_fu_671_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1494_3_fu_676_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1494_fu_680_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_693_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_685_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1494_4_fu_701_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1494_fu_705_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1494_2_fu_711_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1494_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1494_fu_518_p00 : STD_LOGIC_VECTOR (9 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    c_0_reg_271_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
                c_0_reg_271 <= c_reg_798;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_0))) then 
                c_0_reg_271 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    f_0_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_1))) then 
                f_0_reg_226 <= f_reg_738;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_226 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    max_0_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln23_fu_659_p2 = ap_const_lv1_1))) then 
                max_0_reg_306 <= max_1_reg_338;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_0))) then 
                max_0_reg_306 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    max_1_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                max_1_reg_338 <= select_ln29_fu_727_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_0))) then 
                max_1_reg_338 <= max_0_reg_306;
            end if; 
        end if;
    end process;

    mpc_0_reg_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                mpc_0_reg_350 <= mpc_reg_837;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_0))) then 
                mpc_0_reg_350 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    mpr_0_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln23_fu_659_p2 = ap_const_lv1_1))) then 
                mpr_0_reg_327 <= mpr_reg_816;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_0))) then 
                mpr_0_reg_327 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    phi_mul9_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_1))) then 
                phi_mul9_reg_248 <= add_ln13_reg_758;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_0))) then 
                phi_mul9_reg_248 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
                phi_mul_reg_282 <= add_ln16_reg_790;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_282 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    phi_urem11_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_1))) then 
                phi_urem11_reg_259 <= select_ln38_fu_485_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_0))) then 
                phi_urem11_reg_259 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
                phi_urem_reg_294 <= select_ln37_fu_647_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_294 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    r_0_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_1))) then 
                r_0_reg_237 <= r_reg_766;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_0))) then 
                r_0_reg_237 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln13_reg_758 <= add_ln13_fu_385_p2;
                r_reg_766 <= r_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln16_reg_790 <= add_ln16_fu_447_p2;
                c_reg_798 <= c_fu_459_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_0))) then
                add_ln203_reg_785 <= add_ln203_fu_441_p2;
                    shl_ln_reg_771(4 downto 1) <= shl_ln_fu_403_p3(4 downto 1);
                trunc_ln203_reg_776 <= trunc_ln203_fu_411_p1;
                    zext_ln203_4_reg_780(4 downto 2) <= zext_ln203_4_fu_437_p1(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                f_reg_738 <= f_fu_367_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                mpc_reg_837 <= mpc_fu_665_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                mpr_reg_816 <= mpr_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_0))) then
                    mul_ln1494_reg_821(9 downto 1) <= mul_ln1494_fu_518_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_0))) then
                    shl_ln2_reg_803(4 downto 1) <= shl_ln2_fu_465_p3(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_0))) then
                    zext_ln13_2_reg_748(2 downto 0) <= zext_ln13_2_fu_377_p1(2 downto 0);
                    zext_ln13_3_reg_753(2 downto 0) <= zext_ln13_3_fu_381_p1(2 downto 0);
                    zext_ln13_reg_743(2 downto 0) <= zext_ln13_fu_373_p1(2 downto 0);
            end if;
        end if;
    end process;
    zext_ln13_reg_743(12 downto 3) <= "0000000000";
    zext_ln13_2_reg_748(7 downto 3) <= "00000";
    zext_ln13_3_reg_753(8 downto 3) <= "000000";
    shl_ln_reg_771(0) <= '0';
    zext_ln203_4_reg_780(1 downto 0) <= "00";
    zext_ln203_4_reg_780(6 downto 5) <= "00";
    shl_ln2_reg_803(0) <= '0';
    mul_ln1494_reg_821(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln10_fu_361_p2, ap_CS_fsm_state3, icmp_ln13_fu_391_p2, ap_CS_fsm_state4, icmp_ln16_fu_453_p2, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, ap_CS_fsm_state6, icmp_ln23_fu_659_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln13_fu_391_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln16_fu_453_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln23_fu_659_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln13_fu_385_p2 <= std_logic_vector(unsigned(phi_mul9_reg_248) + unsigned(ap_const_lv9_16));
    add_ln1494_2_fu_711_p2 <= std_logic_vector(unsigned(zext_ln13_reg_743) + unsigned(sub_ln1494_fu_705_p2));
    add_ln1494_fu_680_p2 <= std_logic_vector(unsigned(zext_ln1494_3_fu_676_p1) + unsigned(mul_ln1494_reg_821));
    add_ln16_fu_447_p2 <= std_logic_vector(unsigned(phi_mul_reg_282) + unsigned(ap_const_lv9_16));
    add_ln203_3_fu_542_p2 <= std_logic_vector(unsigned(zext_ln203_5_fu_538_p1) + unsigned(add_ln203_reg_785));
    add_ln203_4_fu_577_p2 <= std_logic_vector(unsigned(zext_ln13_3_reg_753) + unsigned(sub_ln203_fu_571_p2));
    add_ln203_5_fu_589_p2 <= std_logic_vector(unsigned(zext_ln203_5_fu_538_p1) + unsigned(zext_ln203_4_reg_780));
    add_ln203_6_fu_620_p2 <= std_logic_vector(unsigned(zext_ln13_2_reg_748) + unsigned(sub_ln203_1_fu_614_p2));
    add_ln203_fu_441_p2 <= std_logic_vector(unsigned(zext_ln203_4_fu_437_p1) + unsigned(zext_ln203_fu_425_p1));
    add_ln37_fu_635_p2 <= std_logic_vector(unsigned(phi_urem_reg_294) + unsigned(ap_const_lv4_1));
    add_ln38_fu_473_p2 <= std_logic_vector(unsigned(phi_urem11_reg_259) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln10_fu_361_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln10_fu_361_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_361_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_459_p2 <= std_logic_vector(unsigned(c_0_reg_271) + unsigned(ap_const_lv4_1));
    conv_out_V_address0 <= zext_ln1494_5_fu_716_p1(12 - 1 downto 0);

    conv_out_V_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_out_V_ce0 <= ap_const_logic_1;
        else 
            conv_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_367_p2 <= std_logic_vector(unsigned(f_0_reg_226) + unsigned(ap_const_lv3_1));
    i_fu_509_p2 <= std_logic_vector(unsigned(zext_ln20_fu_493_p1) + unsigned(shl_ln_reg_771));
    icmp_ln10_fu_361_p2 <= "1" when (f_0_reg_226 = ap_const_lv3_6) else "0";
    icmp_ln13_fu_391_p2 <= "1" when (r_0_reg_237 = ap_const_lv4_D) else "0";
    icmp_ln1494_fu_721_p2 <= "1" when (signed(conv_out_V_q0) > signed(max_1_reg_338)) else "0";
    icmp_ln16_fu_453_p2 <= "1" when (c_0_reg_271 = ap_const_lv4_D) else "0";
    icmp_ln20_fu_497_p2 <= "1" when (mpr_0_reg_327 = ap_const_lv2_2) else "0";
    icmp_ln23_fu_659_p2 <= "1" when (mpc_0_reg_350 = ap_const_lv2_2) else "0";
    icmp_ln37_fu_641_p2 <= "1" when (unsigned(add_ln37_fu_635_p2) < unsigned(ap_const_lv4_3)) else "0";
    icmp_ln38_fu_479_p2 <= "1" when (unsigned(add_ln38_fu_473_p2) < unsigned(ap_const_lv4_3)) else "0";
    j_fu_671_p2 <= std_logic_vector(unsigned(shl_ln2_reg_803) + unsigned(zext_ln23_fu_655_p1));
    max_pool_out_0_0_V_address0 <= zext_ln203_7_fu_582_p1(8 - 1 downto 0);

    max_pool_out_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_0_0_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_0_V_d0 <= max_0_reg_306;

    max_pool_out_0_0_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (trunc_ln203_1_fu_524_p1 = ap_const_lv3_0) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_0))) then 
            max_pool_out_0_0_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_1_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_0_1_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_0_1_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_0_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_1_V_d0 <= max_0_reg_306;

    max_pool_out_0_1_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if (((trunc_ln203_1_fu_524_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_0))) then 
            max_pool_out_0_1_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_0_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_2_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_0_2_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_0_2_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_0_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_0_2_V_d0 <= max_0_reg_306;

    max_pool_out_0_2_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if ((not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_0))) then 
            max_pool_out_0_2_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_0_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_0_V_address0 <= zext_ln203_7_fu_582_p1(7 - 1 downto 0);

    max_pool_out_1_0_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_1_0_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_0_V_d0 <= max_0_reg_306;

    max_pool_out_1_0_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (trunc_ln203_1_fu_524_p1 = ap_const_lv3_0) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_1))) then 
            max_pool_out_1_0_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_1_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_1_1_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_1_1_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_1_V_d0 <= max_0_reg_306;

    max_pool_out_1_1_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if (((trunc_ln203_1_fu_524_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_1))) then 
            max_pool_out_1_1_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_2_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_1_2_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_1_2_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_1_2_V_d0 <= max_0_reg_306;

    max_pool_out_1_2_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if ((not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1) and (trunc_ln203_reg_776 = ap_const_lv3_1))) then 
            max_pool_out_1_2_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_1_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_0_V_address0 <= zext_ln203_7_fu_582_p1(7 - 1 downto 0);

    max_pool_out_2_0_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_2_0_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_0_V_d0 <= max_0_reg_306;

    max_pool_out_2_0_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if ((not((trunc_ln203_reg_776 = ap_const_lv3_0)) and not((trunc_ln203_reg_776 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (trunc_ln203_1_fu_524_p1 = ap_const_lv3_0) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
            max_pool_out_2_0_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_1_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_2_1_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_2_1_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_2_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_1_V_d0 <= max_0_reg_306;

    max_pool_out_2_1_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if ((not((trunc_ln203_reg_776 = ap_const_lv3_0)) and not((trunc_ln203_reg_776 = ap_const_lv3_1)) and (trunc_ln203_1_fu_524_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
            max_pool_out_2_1_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_2_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_2_V_address0 <= zext_ln203_8_fu_625_p1(7 - 1 downto 0);

    max_pool_out_2_2_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            max_pool_out_2_2_V_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_2_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_2_2_V_d0 <= max_0_reg_306;

    max_pool_out_2_2_V_we0_assign_proc : process(trunc_ln203_reg_776, ap_CS_fsm_state5, icmp_ln20_fu_497_p2, trunc_ln203_1_fu_524_p1)
    begin
        if ((not((trunc_ln203_reg_776 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_524_p1 = ap_const_lv3_1)) and not((trunc_ln203_reg_776 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln20_fu_497_p2 = ap_const_lv1_1))) then 
            max_pool_out_2_2_V_we0 <= ap_const_logic_1;
        else 
            max_pool_out_2_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mpc_fu_665_p2 <= std_logic_vector(unsigned(mpc_0_reg_350) + unsigned(ap_const_lv2_1));
    mpr_fu_503_p2 <= std_logic_vector(unsigned(mpr_0_reg_327) + unsigned(ap_const_lv2_1));
    mul_ln1494_fu_518_p0 <= mul_ln1494_fu_518_p00(5 - 1 downto 0);
    mul_ln1494_fu_518_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_509_p2),10));
    mul_ln1494_fu_518_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln1494_fu_518_p0) * unsigned(ap_const_lv10_1A), 10));
    p_shl1_cast_fu_685_p3 <= (add_ln1494_fu_680_p2 & ap_const_lv3_0);
    p_shl3_cast_fu_598_p3 <= (trunc_ln203_3_fu_594_p1 & ap_const_lv3_0);
    p_shl4_cast_fu_606_p3 <= (add_ln203_5_fu_589_p2 & ap_const_lv1_0);
    p_shl5_cast_fu_551_p3 <= (trunc_ln203_2_fu_547_p1 & ap_const_lv3_0);
    r_fu_397_p2 <= std_logic_vector(unsigned(r_0_reg_237) + unsigned(ap_const_lv4_1));
    select_ln29_fu_727_p3 <= 
        conv_out_V_q0 when (icmp_ln1494_fu_721_p2(0) = '1') else 
        max_1_reg_338;
    select_ln37_fu_647_p3 <= 
        add_ln37_fu_635_p2 when (icmp_ln37_fu_641_p2(0) = '1') else 
        ap_const_lv4_0;
    select_ln38_fu_485_p3 <= 
        add_ln38_fu_473_p2 when (icmp_ln38_fu_479_p2(0) = '1') else 
        ap_const_lv4_0;
    shl_ln2_fu_465_p3 <= (c_0_reg_271 & ap_const_lv1_0);
    shl_ln_fu_403_p3 <= (r_0_reg_237 & ap_const_lv1_0);
    sub_ln1494_fu_705_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_685_p3) - unsigned(zext_ln1494_4_fu_701_p1));
    sub_ln203_1_fu_614_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_598_p3) - unsigned(p_shl4_cast_fu_606_p3));
    sub_ln203_fu_571_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_551_p3) - unsigned(zext_ln203_6_fu_567_p1));
    tmp_1_fu_415_p4 <= phi_mul9_reg_248(8 downto 6);
    tmp_2_fu_429_p3 <= (tmp_1_fu_415_p4 & ap_const_lv2_0);
    tmp_3_fu_528_p4 <= phi_mul_reg_282(8 downto 6);
    tmp_7_fu_559_p3 <= (add_ln203_3_fu_542_p2 & ap_const_lv1_0);
    tmp_8_fu_693_p3 <= (add_ln1494_fu_680_p2 & ap_const_lv1_0);
    trunc_ln203_1_fu_524_p1 <= phi_urem_reg_294(3 - 1 downto 0);
    trunc_ln203_2_fu_547_p1 <= add_ln203_3_fu_542_p2(6 - 1 downto 0);
    trunc_ln203_3_fu_594_p1 <= add_ln203_5_fu_589_p2(5 - 1 downto 0);
    trunc_ln203_fu_411_p1 <= phi_urem11_reg_259(3 - 1 downto 0);
    zext_ln13_2_fu_377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_0_reg_226),8));
    zext_ln13_3_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_0_reg_226),9));
    zext_ln13_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_0_reg_226),13));
    zext_ln1494_3_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_fu_671_p2),10));
    zext_ln1494_4_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_693_p3),13));
    zext_ln1494_5_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1494_2_fu_711_p2),64));
    zext_ln203_4_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_429_p3),7));
    zext_ln203_5_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_528_p4),7));
    zext_ln203_6_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_559_p3),9));
    zext_ln203_7_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_4_fu_577_p2),64));
    zext_ln203_8_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_6_fu_620_p2),64));
    zext_ln203_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_415_p4),7));
    zext_ln20_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mpr_0_reg_327),5));
    zext_ln23_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mpc_0_reg_350),5));
end behav;
