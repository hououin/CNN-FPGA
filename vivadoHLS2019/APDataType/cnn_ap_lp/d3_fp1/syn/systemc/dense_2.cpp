// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dense_2::ap_ST_fsm_state1 = "1";
const sc_lv<5> dense_2::ap_ST_fsm_state2 = "10";
const sc_lv<5> dense_2::ap_ST_fsm_state3 = "100";
const sc_lv<5> dense_2::ap_ST_fsm_state4 = "1000";
const sc_lv<5> dense_2::ap_ST_fsm_state5 = "10000";
const sc_lv<32> dense_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_2::ap_const_lv32_1 = "1";
const sc_lv<1> dense_2::ap_const_lv1_0 = "0";
const sc_lv<32> dense_2::ap_const_lv32_2 = "10";
const sc_lv<1> dense_2::ap_const_lv1_1 = "1";
const sc_lv<32> dense_2::ap_const_lv32_3 = "11";
const sc_lv<5> dense_2::ap_const_lv5_0 = "00000";
const sc_lv<32> dense_2::ap_const_lv32_4 = "100";
const sc_lv<14> dense_2::ap_const_lv14_0 = "00000000000000";
const sc_lv<6> dense_2::ap_const_lv6_0 = "000000";
const sc_lv<5> dense_2::ap_const_lv5_1E = "11110";
const sc_lv<5> dense_2::ap_const_lv5_1 = "1";
const sc_lv<6> dense_2::ap_const_lv6_32 = "110010";
const sc_lv<6> dense_2::ap_const_lv6_1 = "1";
const sc_lv<8> dense_2::ap_const_lv8_0 = "00000000";
const sc_lv<32> dense_2::ap_const_lv32_8 = "1000";
const sc_lv<32> dense_2::ap_const_lv32_15 = "10101";
const sc_lv<32> dense_2::ap_const_lv32_D = "1101";
const sc_lv<13> dense_2::ap_const_lv13_0 = "0000000000000";
const bool dense_2::ap_const_boolean_1 = true;

dense_2::dense_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_2_weights_V_U = new dense_2_dense_2_wlbW("dense_2_weights_V_U");
    dense_2_weights_V_U->clk(ap_clk);
    dense_2_weights_V_U->reset(ap_rst);
    dense_2_weights_V_U->address0(dense_2_weights_V_address0);
    dense_2_weights_V_U->ce0(dense_2_weights_V_ce0);
    dense_2_weights_V_U->q0(dense_2_weights_V_q0);
    dense_2_bias_V_U = new dense_2_dense_2_bmb6("dense_2_bias_V_U");
    dense_2_bias_V_U->clk(ap_clk);
    dense_2_bias_V_U->reset(ap_rst);
    dense_2_bias_V_U->address0(dense_2_bias_V_address0);
    dense_2_bias_V_U->ce0(dense_2_bias_V_ce0);
    dense_2_bias_V_U->q0(dense_2_bias_V_q0);
    cnn_mac_muladd_9sncg_U28 = new cnn_mac_muladd_9sncg<1,1,9,13,22,22>("cnn_mac_muladd_9sncg_U28");
    cnn_mac_muladd_9sncg_U28->din0(dense_2_weights_V_q0);
    cnn_mac_muladd_9sncg_U28->din1(grp_fu_291_p1);
    cnn_mac_muladd_9sncg_U28->din2(grp_fu_291_p2);
    cnn_mac_muladd_9sncg_U28->dout(grp_fu_291_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1117_fu_215_p2);
    sensitive << ( zext_ln13_reg_314 );
    sensitive << ( sub_ln1117_fu_209_p2 );

    SC_METHOD(thread_add_ln203_fu_268_p2);
    sensitive << ( sext_ln703_fu_258_p1 );
    sensitive << ( trunc_ln703_fu_254_p1 );

    SC_METHOD(thread_add_ln703_fu_262_p2);
    sensitive << ( p_Val2_s_reg_125 );
    sensitive << ( sext_ln1265_fu_250_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_148_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_148_p2 );

    SC_METHOD(thread_dense_1_out_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln14_1_fu_180_p1 );

    SC_METHOD(thread_dense_1_out_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_2_bias_V_address0);
    sensitive << ( zext_ln14_reg_308 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_2_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_2_out_V_address0);
    sensitive << ( zext_ln14_reg_308 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_out_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_out_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_6_fu_274_p3 );
    sensitive << ( add_ln203_fu_268_p2 );

    SC_METHOD(thread_dense_2_out_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_weights_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln1117_fu_220_p1 );

    SC_METHOD(thread_dense_2_weights_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_291_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_291_p10 );

    SC_METHOD(thread_grp_fu_291_p10);
    sensitive << ( dense_1_out_V_q0 );

    SC_METHOD(thread_grp_fu_291_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_s_reg_125 );

    SC_METHOD(thread_i_fu_154_p2);
    sensitive << ( i_0_reg_114 );

    SC_METHOD(thread_icmp_ln13_fu_168_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_137 );

    SC_METHOD(thread_icmp_ln9_fu_148_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_114 );

    SC_METHOD(thread_j_fu_174_p2);
    sensitive << ( j_0_reg_137 );

    SC_METHOD(thread_sext_ln1117_fu_220_p1);
    sensitive << ( add_ln1117_fu_215_p2 );

    SC_METHOD(thread_sext_ln1265_fu_250_p0);
    sensitive << ( dense_2_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln1265_fu_250_p1);
    sensitive << ( sext_ln1265_fu_250_p0 );

    SC_METHOD(thread_sext_ln703_fu_258_p0);
    sensitive << ( dense_2_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln703_fu_258_p1);
    sensitive << ( sext_ln703_fu_258_p0 );

    SC_METHOD(thread_sub_ln1117_fu_209_p2);
    sensitive << ( zext_ln1117_fu_193_p1 );
    sensitive << ( zext_ln1117_12_fu_205_p1 );

    SC_METHOD(thread_tmp_29_fu_197_p3);
    sensitive << ( j_0_reg_137 );

    SC_METHOD(thread_tmp_6_fu_274_p3);
    sensitive << ( add_ln703_fu_262_p2 );

    SC_METHOD(thread_tmp_s_fu_185_p3);
    sensitive << ( j_0_reg_137 );

    SC_METHOD(thread_trunc_ln703_fu_254_p1);
    sensitive << ( p_Val2_s_reg_125 );

    SC_METHOD(thread_zext_ln1117_12_fu_205_p1);
    sensitive << ( tmp_29_fu_197_p3 );

    SC_METHOD(thread_zext_ln1117_fu_193_p1);
    sensitive << ( tmp_s_fu_185_p3 );

    SC_METHOD(thread_zext_ln13_fu_164_p1);
    sensitive << ( i_0_reg_114 );

    SC_METHOD(thread_zext_ln14_1_fu_180_p1);
    sensitive << ( j_0_reg_137 );

    SC_METHOD(thread_zext_ln14_fu_160_p1);
    sensitive << ( i_0_reg_114 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_148_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_168_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dense_1_out_V_address0, "(port)dense_1_out_V_address0");
    sc_trace(mVcdFile, dense_1_out_V_ce0, "(port)dense_1_out_V_ce0");
    sc_trace(mVcdFile, dense_1_out_V_q0, "(port)dense_1_out_V_q0");
    sc_trace(mVcdFile, dense_2_out_V_address0, "(port)dense_2_out_V_address0");
    sc_trace(mVcdFile, dense_2_out_V_ce0, "(port)dense_2_out_V_ce0");
    sc_trace(mVcdFile, dense_2_out_V_we0, "(port)dense_2_out_V_we0");
    sc_trace(mVcdFile, dense_2_out_V_d0, "(port)dense_2_out_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_2_weights_V_address0, "dense_2_weights_V_address0");
    sc_trace(mVcdFile, dense_2_weights_V_ce0, "dense_2_weights_V_ce0");
    sc_trace(mVcdFile, dense_2_weights_V_q0, "dense_2_weights_V_q0");
    sc_trace(mVcdFile, dense_2_bias_V_address0, "dense_2_bias_V_address0");
    sc_trace(mVcdFile, dense_2_bias_V_ce0, "dense_2_bias_V_ce0");
    sc_trace(mVcdFile, dense_2_bias_V_q0, "dense_2_bias_V_q0");
    sc_trace(mVcdFile, i_fu_154_p2, "i_fu_154_p2");
    sc_trace(mVcdFile, i_reg_303, "i_reg_303");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln14_fu_160_p1, "zext_ln14_fu_160_p1");
    sc_trace(mVcdFile, zext_ln14_reg_308, "zext_ln14_reg_308");
    sc_trace(mVcdFile, icmp_ln9_fu_148_p2, "icmp_ln9_fu_148_p2");
    sc_trace(mVcdFile, zext_ln13_fu_164_p1, "zext_ln13_fu_164_p1");
    sc_trace(mVcdFile, zext_ln13_reg_314, "zext_ln13_reg_314");
    sc_trace(mVcdFile, j_fu_174_p2, "j_fu_174_p2");
    sc_trace(mVcdFile, j_reg_322, "j_reg_322");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln13_fu_168_p2, "icmp_ln13_fu_168_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_0_reg_114, "i_0_reg_114");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_Val2_s_reg_125, "p_Val2_s_reg_125");
    sc_trace(mVcdFile, j_0_reg_137, "j_0_reg_137");
    sc_trace(mVcdFile, sext_ln1117_fu_220_p1, "sext_ln1117_fu_220_p1");
    sc_trace(mVcdFile, zext_ln14_1_fu_180_p1, "zext_ln14_1_fu_180_p1");
    sc_trace(mVcdFile, tmp_s_fu_185_p3, "tmp_s_fu_185_p3");
    sc_trace(mVcdFile, tmp_29_fu_197_p3, "tmp_29_fu_197_p3");
    sc_trace(mVcdFile, zext_ln1117_fu_193_p1, "zext_ln1117_fu_193_p1");
    sc_trace(mVcdFile, zext_ln1117_12_fu_205_p1, "zext_ln1117_12_fu_205_p1");
    sc_trace(mVcdFile, sub_ln1117_fu_209_p2, "sub_ln1117_fu_209_p2");
    sc_trace(mVcdFile, add_ln1117_fu_215_p2, "add_ln1117_fu_215_p2");
    sc_trace(mVcdFile, grp_fu_291_p3, "grp_fu_291_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_250_p0, "sext_ln1265_fu_250_p0");
    sc_trace(mVcdFile, sext_ln703_fu_258_p0, "sext_ln703_fu_258_p0");
    sc_trace(mVcdFile, sext_ln1265_fu_250_p1, "sext_ln1265_fu_250_p1");
    sc_trace(mVcdFile, sext_ln703_fu_258_p1, "sext_ln703_fu_258_p1");
    sc_trace(mVcdFile, trunc_ln703_fu_254_p1, "trunc_ln703_fu_254_p1");
    sc_trace(mVcdFile, add_ln703_fu_262_p2, "add_ln703_fu_262_p2");
    sc_trace(mVcdFile, tmp_6_fu_274_p3, "tmp_6_fu_274_p3");
    sc_trace(mVcdFile, add_ln203_fu_268_p2, "add_ln203_fu_268_p2");
    sc_trace(mVcdFile, grp_fu_291_p1, "grp_fu_291_p1");
    sc_trace(mVcdFile, grp_fu_291_p2, "grp_fu_291_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_291_p10, "grp_fu_291_p10");
#endif

    }
}

dense_2::~dense_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_2_weights_V_U;
    delete dense_2_bias_V_U;
    delete cnn_mac_muladd_9sncg_U28;
}

void dense_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_reg_114 = i_reg_303.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_114 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_137 = j_reg_322.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_0))) {
        j_0_reg_137 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_s_reg_125 = grp_fu_291_p3.read().range(21, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_0))) {
        p_Val2_s_reg_125 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_303 = i_fu_154_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_322 = j_fu_174_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_0))) {
        zext_ln13_reg_314 = zext_ln13_fu_164_p1.read();
        zext_ln14_reg_308 = zext_ln14_fu_160_p1.read();
    }
}

void dense_2::thread_add_ln1117_fu_215_p2() {
    add_ln1117_fu_215_p2 = (!sub_ln1117_fu_209_p2.read().is_01() || !zext_ln13_reg_314.read().is_01())? sc_lv<12>(): (sc_biguint<12>(sub_ln1117_fu_209_p2.read()) + sc_biguint<12>(zext_ln13_reg_314.read()));
}

void dense_2::thread_add_ln203_fu_268_p2() {
    add_ln203_fu_268_p2 = (!sext_ln703_fu_258_p1.read().is_01() || !trunc_ln703_fu_254_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(sext_ln703_fu_258_p1.read()) + sc_biguint<13>(trunc_ln703_fu_254_p1.read()));
}

void dense_2::thread_add_ln703_fu_262_p2() {
    add_ln703_fu_262_p2 = (!p_Val2_s_reg_125.read().is_01() || !sext_ln1265_fu_250_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_Val2_s_reg_125.read()) + sc_bigint<14>(sext_ln1265_fu_250_p1.read()));
}

void dense_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_2::thread_dense_1_out_V_address0() {
    dense_1_out_V_address0 =  (sc_lv<6>) (zext_ln14_1_fu_180_p1.read());
}

void dense_2::thread_dense_1_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_1_out_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_bias_V_address0() {
    dense_2_bias_V_address0 =  (sc_lv<5>) (zext_ln14_reg_308.read());
}

void dense_2::thread_dense_2_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_2_bias_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_bias_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_out_V_address0() {
    dense_2_out_V_address0 =  (sc_lv<5>) (zext_ln14_reg_308.read());
}

void dense_2::thread_dense_2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_2_out_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_out_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_out_V_d0() {
    dense_2_out_V_d0 = (!tmp_6_fu_274_p3.read()[0].is_01())? sc_lv<13>(): ((tmp_6_fu_274_p3.read()[0].to_bool())? ap_const_lv13_0: add_ln203_fu_268_p2.read());
}

void dense_2::thread_dense_2_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_2_out_V_we0 = ap_const_logic_1;
    } else {
        dense_2_out_V_we0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_weights_V_address0() {
    dense_2_weights_V_address0 =  (sc_lv<11>) (sext_ln1117_fu_220_p1.read());
}

void dense_2::thread_dense_2_weights_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_2_weights_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_weights_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_grp_fu_291_p1() {
    grp_fu_291_p1 =  (sc_lv<13>) (grp_fu_291_p10.read());
}

void dense_2::thread_grp_fu_291_p10() {
    grp_fu_291_p10 = esl_zext<22,13>(dense_1_out_V_q0.read());
}

void dense_2::thread_grp_fu_291_p2() {
    grp_fu_291_p2 = esl_concat<14,8>(p_Val2_s_reg_125.read(), ap_const_lv8_0);
}

void dense_2::thread_i_fu_154_p2() {
    i_fu_154_p2 = (!i_0_reg_114.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_114.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dense_2::thread_icmp_ln13_fu_168_p2() {
    icmp_ln13_fu_168_p2 = (!j_0_reg_137.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_137.read() == ap_const_lv6_32);
}

void dense_2::thread_icmp_ln9_fu_148_p2() {
    icmp_ln9_fu_148_p2 = (!i_0_reg_114.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_114.read() == ap_const_lv5_1E);
}

void dense_2::thread_j_fu_174_p2() {
    j_fu_174_p2 = (!j_0_reg_137.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_137.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dense_2::thread_sext_ln1117_fu_220_p1() {
    sext_ln1117_fu_220_p1 = esl_sext<64,12>(add_ln1117_fu_215_p2.read());
}

void dense_2::thread_sext_ln1265_fu_250_p0() {
    sext_ln1265_fu_250_p0 = dense_2_bias_V_q0.read();
}

void dense_2::thread_sext_ln1265_fu_250_p1() {
    sext_ln1265_fu_250_p1 = esl_sext<14,9>(sext_ln1265_fu_250_p0.read());
}

void dense_2::thread_sext_ln703_fu_258_p0() {
    sext_ln703_fu_258_p0 = dense_2_bias_V_q0.read();
}

void dense_2::thread_sext_ln703_fu_258_p1() {
    sext_ln703_fu_258_p1 = esl_sext<13,9>(sext_ln703_fu_258_p0.read());
}

void dense_2::thread_sub_ln1117_fu_209_p2() {
    sub_ln1117_fu_209_p2 = (!zext_ln1117_fu_193_p1.read().is_01() || !zext_ln1117_12_fu_205_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln1117_fu_193_p1.read()) - sc_biguint<12>(zext_ln1117_12_fu_205_p1.read()));
}

void dense_2::thread_tmp_29_fu_197_p3() {
    tmp_29_fu_197_p3 = esl_concat<6,1>(j_0_reg_137.read(), ap_const_lv1_0);
}

void dense_2::thread_tmp_6_fu_274_p3() {
    tmp_6_fu_274_p3 = add_ln703_fu_262_p2.read().range(13, 13);
}

void dense_2::thread_tmp_s_fu_185_p3() {
    tmp_s_fu_185_p3 = esl_concat<6,5>(j_0_reg_137.read(), ap_const_lv5_0);
}

void dense_2::thread_trunc_ln703_fu_254_p1() {
    trunc_ln703_fu_254_p1 = p_Val2_s_reg_125.read().range(13-1, 0);
}

void dense_2::thread_zext_ln1117_12_fu_205_p1() {
    zext_ln1117_12_fu_205_p1 = esl_zext<12,7>(tmp_29_fu_197_p3.read());
}

void dense_2::thread_zext_ln1117_fu_193_p1() {
    zext_ln1117_fu_193_p1 = esl_zext<12,11>(tmp_s_fu_185_p3.read());
}

void dense_2::thread_zext_ln13_fu_164_p1() {
    zext_ln13_fu_164_p1 = esl_zext<12,5>(i_0_reg_114.read());
}

void dense_2::thread_zext_ln14_1_fu_180_p1() {
    zext_ln14_1_fu_180_p1 = esl_zext<64,6>(j_0_reg_137.read());
}

void dense_2::thread_zext_ln14_fu_160_p1() {
    zext_ln14_fu_160_p1 = esl_zext<64,5>(i_0_reg_114.read());
}

void dense_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_148_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

