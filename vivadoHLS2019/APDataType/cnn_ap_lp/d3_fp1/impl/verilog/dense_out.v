// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_q0,
        dense_2_out_V_address1,
        dense_2_out_V_ce1,
        dense_2_out_V_q1,
        prediction_V_address0,
        prediction_V_ce0,
        prediction_V_we0,
        prediction_V_d0
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 19'd65536;
parameter    ap_ST_fsm_state25 = 19'd131072;
parameter    ap_ST_fsm_state26 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
input  [12:0] dense_2_out_V_q0;
output  [4:0] dense_2_out_V_address1;
output   dense_2_out_V_ce1;
input  [12:0] dense_2_out_V_q1;
output  [3:0] prediction_V_address0;
output   prediction_V_ce0;
output   prediction_V_we0;
output  [13:0] prediction_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] dense_2_out_V_address0;
reg dense_2_out_V_ce0;
reg[4:0] dense_2_out_V_address1;
reg dense_2_out_V_ce1;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] dense_out_weights_V_s_address0;
reg    dense_out_weights_V_s_ce0;
wire  signed [8:0] dense_out_weights_V_s_q0;
wire   [3:0] dense_out_weights_V_1_address0;
reg    dense_out_weights_V_1_ce0;
wire  signed [8:0] dense_out_weights_V_1_q0;
wire   [3:0] dense_out_weights_V_2_address0;
reg    dense_out_weights_V_2_ce0;
wire  signed [7:0] dense_out_weights_V_2_q0;
wire   [3:0] dense_out_weights_V_3_address0;
reg    dense_out_weights_V_3_ce0;
wire   [7:0] dense_out_weights_V_3_q0;
wire   [3:0] dense_out_weights_V_4_address0;
reg    dense_out_weights_V_4_ce0;
wire   [8:0] dense_out_weights_V_4_q0;
wire   [3:0] dense_out_weights_V_5_address0;
reg    dense_out_weights_V_5_ce0;
wire  signed [8:0] dense_out_weights_V_5_q0;
wire   [3:0] dense_out_weights_V_6_address0;
reg    dense_out_weights_V_6_ce0;
wire  signed [8:0] dense_out_weights_V_6_q0;
wire   [3:0] dense_out_weights_V_7_address0;
reg    dense_out_weights_V_7_ce0;
wire  signed [7:0] dense_out_weights_V_7_q0;
wire   [3:0] dense_out_weights_V_8_address0;
reg    dense_out_weights_V_8_ce0;
wire   [7:0] dense_out_weights_V_8_q0;
wire   [3:0] dense_out_weights_V_9_address0;
reg    dense_out_weights_V_9_ce0;
wire   [8:0] dense_out_weights_V_9_q0;
wire   [3:0] dense_out_weights_V_10_address0;
reg    dense_out_weights_V_10_ce0;
wire  signed [8:0] dense_out_weights_V_10_q0;
wire   [3:0] dense_out_weights_V_11_address0;
reg    dense_out_weights_V_11_ce0;
wire  signed [7:0] dense_out_weights_V_11_q0;
wire   [3:0] dense_out_weights_V_12_address0;
reg    dense_out_weights_V_12_ce0;
wire  signed [8:0] dense_out_weights_V_12_q0;
wire   [3:0] dense_out_weights_V_13_address0;
reg    dense_out_weights_V_13_ce0;
wire   [7:0] dense_out_weights_V_13_q0;
wire   [3:0] dense_out_weights_V_14_address0;
reg    dense_out_weights_V_14_ce0;
wire   [8:0] dense_out_weights_V_14_q0;
wire   [3:0] dense_out_weights_V_15_address0;
reg    dense_out_weights_V_15_ce0;
wire  signed [7:0] dense_out_weights_V_15_q0;
wire   [3:0] dense_out_weights_V_16_address0;
reg    dense_out_weights_V_16_ce0;
wire  signed [8:0] dense_out_weights_V_16_q0;
wire   [3:0] dense_out_weights_V_17_address0;
reg    dense_out_weights_V_17_ce0;
wire  signed [8:0] dense_out_weights_V_17_q0;
wire   [3:0] dense_out_weights_V_18_address0;
reg    dense_out_weights_V_18_ce0;
wire   [8:0] dense_out_weights_V_18_q0;
wire   [3:0] dense_out_weights_V_19_address0;
reg    dense_out_weights_V_19_ce0;
wire  signed [8:0] dense_out_weights_V_19_q0;
wire   [3:0] dense_out_weights_V_20_address0;
reg    dense_out_weights_V_20_ce0;
wire  signed [8:0] dense_out_weights_V_20_q0;
wire   [3:0] dense_out_weights_V_21_address0;
reg    dense_out_weights_V_21_ce0;
wire  signed [8:0] dense_out_weights_V_21_q0;
wire   [3:0] dense_out_weights_V_22_address0;
reg    dense_out_weights_V_22_ce0;
wire   [7:0] dense_out_weights_V_22_q0;
wire   [3:0] dense_out_weights_V_23_address0;
reg    dense_out_weights_V_23_ce0;
wire  signed [8:0] dense_out_weights_V_23_q0;
wire   [3:0] dense_out_weights_V_24_address0;
reg    dense_out_weights_V_24_ce0;
wire  signed [8:0] dense_out_weights_V_24_q0;
wire   [3:0] dense_out_weights_V_25_address0;
reg    dense_out_weights_V_25_ce0;
wire  signed [8:0] dense_out_weights_V_25_q0;
wire   [3:0] dense_out_weights_V_26_address0;
reg    dense_out_weights_V_26_ce0;
wire   [7:0] dense_out_weights_V_26_q0;
wire   [3:0] dense_out_weights_V_27_address0;
reg    dense_out_weights_V_27_ce0;
wire   [7:0] dense_out_weights_V_27_q0;
wire   [3:0] dense_out_weights_V_28_address0;
reg    dense_out_weights_V_28_ce0;
wire  signed [7:0] dense_out_weights_V_28_q0;
wire   [3:0] dense_out_weights_V_29_address0;
reg    dense_out_weights_V_29_ce0;
wire  signed [7:0] dense_out_weights_V_29_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
reg   [3:0] d_0_reg_868;
reg   [12:0] dense_2_out_V_load_reg_1870;
wire    ap_CS_fsm_state2;
reg   [12:0] dense_2_out_V_load_1_reg_1875;
reg   [12:0] dense_2_out_V_load_2_reg_1890;
wire    ap_CS_fsm_state3;
reg   [12:0] dense_2_out_V_load_3_reg_1895;
reg   [12:0] dense_2_out_V_load_4_reg_1910;
wire    ap_CS_fsm_state4;
reg   [12:0] dense_2_out_V_load_5_reg_1915;
reg   [12:0] dense_2_out_V_load_6_reg_1930;
wire    ap_CS_fsm_state5;
reg   [12:0] dense_2_out_V_load_7_reg_1935;
reg   [12:0] dense_2_out_V_load_8_reg_1950;
wire    ap_CS_fsm_state6;
reg   [12:0] dense_2_out_V_load_9_reg_1955;
reg   [12:0] dense_2_out_V_load_10_reg_1970;
wire    ap_CS_fsm_state7;
reg   [12:0] dense_2_out_V_load_11_reg_1975;
reg   [12:0] dense_2_out_V_load_12_reg_1990;
wire    ap_CS_fsm_state8;
reg   [12:0] dense_2_out_V_load_13_reg_1995;
reg   [12:0] dense_2_out_V_load_14_reg_2010;
wire    ap_CS_fsm_state9;
reg   [12:0] dense_2_out_V_load_15_reg_2015;
reg   [12:0] dense_2_out_V_load_16_reg_2030;
wire    ap_CS_fsm_state10;
reg   [12:0] dense_2_out_V_load_17_reg_2035;
reg   [12:0] dense_2_out_V_load_18_reg_2050;
wire    ap_CS_fsm_state11;
reg   [12:0] dense_2_out_V_load_19_reg_2055;
reg   [12:0] dense_2_out_V_load_20_reg_2070;
wire    ap_CS_fsm_state12;
reg   [12:0] dense_2_out_V_load_21_reg_2075;
reg   [12:0] dense_2_out_V_load_22_reg_2090;
wire    ap_CS_fsm_state13;
reg   [12:0] dense_2_out_V_load_23_reg_2095;
reg   [12:0] dense_2_out_V_load_24_reg_2110;
wire    ap_CS_fsm_state14;
reg   [12:0] dense_2_out_V_load_25_reg_2115;
reg   [12:0] dense_2_out_V_load_26_reg_2130;
wire    ap_CS_fsm_state15;
reg   [12:0] dense_2_out_V_load_27_reg_2135;
wire   [21:0] zext_ln1117_fu_892_p1;
reg   [21:0] zext_ln1117_reg_2150;
wire    ap_CS_fsm_state16;
wire   [21:0] zext_ln1192_fu_895_p1;
reg   [21:0] zext_ln1192_reg_2155;
wire   [20:0] zext_ln1117_1_fu_898_p1;
reg   [20:0] zext_ln1117_1_reg_2160;
wire   [20:0] zext_ln1117_2_fu_901_p1;
reg   [20:0] zext_ln1117_2_reg_2165;
wire   [21:0] zext_ln1192_1_fu_904_p1;
reg   [21:0] zext_ln1192_1_reg_2170;
wire   [21:0] zext_ln1192_2_fu_907_p1;
reg   [21:0] zext_ln1192_2_reg_2175;
wire   [21:0] zext_ln1192_3_fu_910_p1;
reg   [21:0] zext_ln1192_3_reg_2180;
wire   [20:0] zext_ln1117_3_fu_913_p1;
reg   [20:0] zext_ln1117_3_reg_2185;
wire   [20:0] zext_ln1117_4_fu_916_p1;
reg   [20:0] zext_ln1117_4_reg_2190;
wire   [21:0] zext_ln1192_4_fu_919_p1;
reg   [21:0] zext_ln1192_4_reg_2195;
wire   [21:0] zext_ln1192_5_fu_922_p1;
reg   [21:0] zext_ln1192_5_reg_2200;
wire   [20:0] zext_ln1117_5_fu_925_p1;
reg   [20:0] zext_ln1117_5_reg_2205;
wire   [21:0] zext_ln1192_6_fu_928_p1;
reg   [21:0] zext_ln1192_6_reg_2210;
wire   [20:0] zext_ln1117_6_fu_931_p1;
reg   [20:0] zext_ln1117_6_reg_2215;
wire   [21:0] zext_ln1192_7_fu_934_p1;
reg   [21:0] zext_ln1192_7_reg_2220;
wire   [20:0] zext_ln1117_7_fu_937_p1;
reg   [20:0] zext_ln1117_7_reg_2225;
wire   [21:0] zext_ln1192_8_fu_940_p1;
reg   [21:0] zext_ln1192_8_reg_2230;
wire   [21:0] zext_ln1192_9_fu_943_p1;
reg   [21:0] zext_ln1192_9_reg_2235;
wire   [21:0] zext_ln1192_10_fu_946_p1;
reg   [21:0] zext_ln1192_10_reg_2240;
wire   [21:0] zext_ln1192_11_fu_949_p1;
reg   [21:0] zext_ln1192_11_reg_2245;
wire   [21:0] zext_ln1192_12_fu_952_p1;
reg   [21:0] zext_ln1192_12_reg_2250;
wire   [21:0] zext_ln1192_13_fu_955_p1;
reg   [21:0] zext_ln1192_13_reg_2255;
wire   [20:0] zext_ln1117_8_fu_958_p1;
reg   [20:0] zext_ln1117_8_reg_2260;
wire   [21:0] zext_ln1192_14_fu_961_p1;
reg   [21:0] zext_ln1192_14_reg_2265;
wire   [21:0] zext_ln1192_15_fu_964_p1;
reg   [21:0] zext_ln1192_15_reg_2270;
wire   [21:0] zext_ln1192_16_fu_967_p1;
reg   [21:0] zext_ln1192_16_reg_2275;
wire   [20:0] zext_ln1117_9_fu_970_p1;
reg   [20:0] zext_ln1117_9_reg_2280;
wire   [20:0] zext_ln1117_10_fu_973_p1;
reg   [20:0] zext_ln1117_10_reg_2285;
wire   [20:0] zext_ln1117_11_fu_976_p1;
reg   [20:0] zext_ln1117_11_reg_2290;
wire   [20:0] zext_ln41_fu_980_p1;
reg   [20:0] zext_ln41_reg_2295;
wire   [0:0] icmp_ln41_fu_984_p2;
reg   [0:0] icmp_ln41_reg_2300;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state20_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state22_pp0_stage0_iter5;
wire    ap_block_state23_pp0_stage0_iter6;
wire    ap_block_state24_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter1_reg;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter2_reg;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter3_reg;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter4_reg;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter5_reg;
reg   [0:0] icmp_ln41_reg_2300_pp0_iter6_reg;
wire   [3:0] d_fu_990_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln48_fu_996_p1;
reg   [63:0] zext_ln48_reg_2309;
reg   [63:0] zext_ln48_reg_2309_pp0_iter1_reg;
reg   [63:0] zext_ln48_reg_2309_pp0_iter2_reg;
reg   [63:0] zext_ln48_reg_2309_pp0_iter3_reg;
reg   [63:0] zext_ln48_reg_2309_pp0_iter4_reg;
reg   [63:0] zext_ln48_reg_2309_pp0_iter5_reg;
reg   [63:0] zext_ln48_reg_2309_pp0_iter6_reg;
reg  signed [7:0] dense_out_weights_V_8_reg_2365;
reg   [13:0] tmp_2_reg_2370;
reg  signed [8:0] dense_out_weights_V_10_reg_2375;
reg  signed [7:0] dense_out_weights_V_18_reg_2405;
reg   [13:0] tmp_7_reg_2410;
reg  signed [8:0] dense_out_weights_V_20_reg_2415;
reg  signed [7:0] dense_out_weights_V_28_reg_2445;
reg   [13:0] tmp_12_reg_2450;
reg  signed [8:0] dense_out_weights_V_30_reg_2455;
reg  signed [8:0] dense_out_weights_V_38_reg_2480;
reg   [13:0] tmp_17_reg_2485;
reg  signed [7:0] dense_out_weights_V_46_reg_2510;
reg   [13:0] tmp_21_reg_2515;
reg  signed [7:0] dense_out_weights_V_54_reg_2545;
reg   [13:0] tmp_25_reg_2550;
reg  signed [7:0] dense_out_weights_V_56_reg_2555;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
reg   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
wire    grp_soft_max_fu_879_ap_start;
wire    grp_soft_max_fu_879_ap_done;
wire    grp_soft_max_fu_879_ap_idle;
wire    grp_soft_max_fu_879_ap_ready;
wire   [3:0] grp_soft_max_fu_879_dense_array_V_address0;
wire    grp_soft_max_fu_879_dense_array_V_ce0;
wire    grp_soft_max_fu_879_dense_array_V_we0;
wire   [13:0] grp_soft_max_fu_879_dense_array_V_d0;
wire   [3:0] grp_soft_max_fu_879_prediction_V_address0;
wire    grp_soft_max_fu_879_prediction_V_ce0;
wire    grp_soft_max_fu_879_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_879_prediction_V_d0;
reg    grp_soft_max_fu_879_ap_start_reg;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_block_pp0_stage0;
wire   [13:0] add_ln703_fu_1615_p2;
wire  signed [21:0] mul_ln1118_fu_1622_p2;
wire   [13:0] tmp_s_fu_1013_p4;
wire  signed [21:0] grp_fu_1628_p3;
wire   [13:0] tmp_1_fu_1034_p4;
wire  signed [21:0] grp_fu_1636_p3;
wire  signed [21:0] grp_fu_1644_p3;
wire   [13:0] tmp_3_fu_1073_p4;
wire  signed [21:0] grp_fu_1652_p3;
wire   [13:0] tmp_4_fu_1094_p4;
wire  signed [21:0] grp_fu_1660_p3;
wire   [13:0] tmp_5_fu_1115_p4;
wire  signed [21:0] grp_fu_1668_p3;
wire   [13:0] tmp_6_fu_1136_p4;
wire  signed [21:0] grp_fu_1676_p3;
wire  signed [21:0] grp_fu_1684_p3;
wire   [13:0] tmp_8_fu_1175_p4;
wire  signed [21:0] grp_fu_1692_p3;
wire   [13:0] tmp_9_fu_1196_p4;
wire  signed [21:0] grp_fu_1700_p3;
wire   [13:0] tmp_10_fu_1217_p4;
wire  signed [21:0] grp_fu_1708_p3;
wire   [13:0] tmp_11_fu_1238_p4;
wire  signed [21:0] grp_fu_1716_p3;
wire  signed [21:0] grp_fu_1724_p3;
wire   [13:0] tmp_13_fu_1277_p4;
wire  signed [21:0] grp_fu_1732_p3;
wire   [13:0] tmp_14_fu_1298_p4;
wire  signed [21:0] grp_fu_1740_p3;
wire   [13:0] tmp_15_fu_1319_p4;
wire  signed [21:0] grp_fu_1748_p3;
wire   [13:0] tmp_16_fu_1340_p4;
wire  signed [21:0] grp_fu_1756_p3;
wire  signed [21:0] grp_fu_1764_p3;
wire   [13:0] tmp_18_fu_1380_p4;
wire  signed [21:0] grp_fu_1772_p3;
wire   [13:0] tmp_19_fu_1401_p4;
wire  signed [21:0] grp_fu_1780_p3;
wire   [13:0] tmp_20_fu_1422_p4;
wire  signed [21:0] grp_fu_1788_p3;
wire  signed [21:0] grp_fu_1796_p3;
wire   [13:0] tmp_22_fu_1462_p4;
wire  signed [21:0] grp_fu_1804_p3;
wire   [13:0] tmp_23_fu_1483_p4;
wire  signed [21:0] grp_fu_1812_p3;
wire   [13:0] tmp_24_fu_1504_p4;
wire  signed [21:0] grp_fu_1820_p3;
wire  signed [21:0] grp_fu_1828_p3;
wire   [13:0] tmp_26_fu_1543_p4;
wire  signed [21:0] grp_fu_1836_p3;
wire   [13:0] tmp_27_fu_1564_p4;
wire  signed [21:0] grp_fu_1844_p3;
wire   [13:0] tmp_28_fu_1585_p4;
wire  signed [21:0] grp_fu_1852_p3;
wire   [13:0] trunc_ln708_s_fu_1602_p4;
wire  signed [13:0] sext_ln1265_fu_1611_p1;
wire   [12:0] mul_ln1118_fu_1622_p0;
wire   [12:0] grp_fu_1628_p0;
wire   [21:0] grp_fu_1628_p2;
wire   [12:0] grp_fu_1636_p0;
wire   [21:0] grp_fu_1636_p2;
wire   [12:0] grp_fu_1644_p0;
wire   [21:0] grp_fu_1644_p2;
wire   [12:0] grp_fu_1652_p0;
wire   [21:0] grp_fu_1652_p2;
wire   [12:0] grp_fu_1660_p0;
wire   [21:0] grp_fu_1660_p2;
wire   [12:0] grp_fu_1668_p0;
wire   [21:0] grp_fu_1668_p2;
wire   [12:0] grp_fu_1676_p0;
wire   [21:0] grp_fu_1676_p2;
wire   [12:0] grp_fu_1684_p0;
wire   [21:0] grp_fu_1684_p2;
wire   [12:0] grp_fu_1692_p0;
wire   [21:0] grp_fu_1692_p2;
wire   [12:0] grp_fu_1700_p0;
wire   [21:0] grp_fu_1700_p2;
wire   [12:0] grp_fu_1708_p0;
wire   [21:0] grp_fu_1708_p2;
wire   [12:0] grp_fu_1716_p0;
wire   [21:0] grp_fu_1716_p2;
wire   [12:0] grp_fu_1724_p0;
wire   [21:0] grp_fu_1724_p2;
wire   [12:0] grp_fu_1732_p0;
wire   [21:0] grp_fu_1732_p2;
wire   [12:0] grp_fu_1740_p0;
wire   [21:0] grp_fu_1740_p2;
wire   [12:0] grp_fu_1748_p0;
wire   [21:0] grp_fu_1748_p2;
wire   [12:0] grp_fu_1756_p0;
wire   [21:0] grp_fu_1756_p2;
wire   [12:0] grp_fu_1764_p0;
wire   [21:0] grp_fu_1764_p2;
wire   [12:0] grp_fu_1772_p0;
wire   [21:0] grp_fu_1772_p2;
wire   [12:0] grp_fu_1780_p0;
wire   [21:0] grp_fu_1780_p2;
wire   [12:0] grp_fu_1788_p0;
wire   [21:0] grp_fu_1788_p2;
wire   [12:0] grp_fu_1796_p0;
wire   [21:0] grp_fu_1796_p2;
wire   [12:0] grp_fu_1804_p0;
wire   [21:0] grp_fu_1804_p2;
wire   [12:0] grp_fu_1812_p0;
wire   [21:0] grp_fu_1812_p2;
wire   [12:0] grp_fu_1820_p0;
wire   [21:0] grp_fu_1820_p2;
wire   [12:0] grp_fu_1828_p0;
wire   [21:0] grp_fu_1828_p2;
wire   [12:0] grp_fu_1836_p0;
wire   [21:0] grp_fu_1836_p2;
wire   [12:0] grp_fu_1844_p0;
wire   [21:0] grp_fu_1844_p2;
wire   [12:0] grp_fu_1852_p0;
wire   [21:0] grp_fu_1852_p2;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 grp_soft_max_fu_879_ap_start_reg = 1'b0;
end

dense_out_dense_osc4 #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_s_address0),
    .ce0(dense_out_weights_V_s_ce0),
    .q0(dense_out_weights_V_s_q0)
);

dense_out_dense_otde #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_1_address0),
    .ce0(dense_out_weights_V_1_ce0),
    .q0(dense_out_weights_V_1_q0)
);

dense_out_dense_oudo #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_2_address0),
    .ce0(dense_out_weights_V_2_ce0),
    .q0(dense_out_weights_V_2_q0)
);

dense_out_dense_ovdy #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_3_address0),
    .ce0(dense_out_weights_V_3_ce0),
    .q0(dense_out_weights_V_3_q0)
);

dense_out_dense_owdI #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_4_address0),
    .ce0(dense_out_weights_V_4_ce0),
    .q0(dense_out_weights_V_4_q0)
);

dense_out_dense_oxdS #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_5_address0),
    .ce0(dense_out_weights_V_5_ce0),
    .q0(dense_out_weights_V_5_q0)
);

dense_out_dense_oyd2 #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_6_address0),
    .ce0(dense_out_weights_V_6_ce0),
    .q0(dense_out_weights_V_6_q0)
);

dense_out_dense_ozec #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_7_address0),
    .ce0(dense_out_weights_V_7_ce0),
    .q0(dense_out_weights_V_7_q0)
);

dense_out_dense_oAem #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_8_address0),
    .ce0(dense_out_weights_V_8_ce0),
    .q0(dense_out_weights_V_8_q0)
);

dense_out_dense_oBew #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_9_address0),
    .ce0(dense_out_weights_V_9_ce0),
    .q0(dense_out_weights_V_9_q0)
);

dense_out_dense_oCeG #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_10_address0),
    .ce0(dense_out_weights_V_10_ce0),
    .q0(dense_out_weights_V_10_q0)
);

dense_out_dense_oDeQ #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_11_address0),
    .ce0(dense_out_weights_V_11_ce0),
    .q0(dense_out_weights_V_11_q0)
);

dense_out_dense_oEe0 #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_12_address0),
    .ce0(dense_out_weights_V_12_ce0),
    .q0(dense_out_weights_V_12_q0)
);

dense_out_dense_oFfa #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_13_address0),
    .ce0(dense_out_weights_V_13_ce0),
    .q0(dense_out_weights_V_13_q0)
);

dense_out_dense_oGfk #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_14_address0),
    .ce0(dense_out_weights_V_14_ce0),
    .q0(dense_out_weights_V_14_q0)
);

dense_out_dense_oHfu #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_15_address0),
    .ce0(dense_out_weights_V_15_ce0),
    .q0(dense_out_weights_V_15_q0)
);

dense_out_dense_oIfE #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_16_address0),
    .ce0(dense_out_weights_V_16_ce0),
    .q0(dense_out_weights_V_16_q0)
);

dense_out_dense_oJfO #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_17_address0),
    .ce0(dense_out_weights_V_17_ce0),
    .q0(dense_out_weights_V_17_q0)
);

dense_out_dense_oKfY #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_18_address0),
    .ce0(dense_out_weights_V_18_ce0),
    .q0(dense_out_weights_V_18_q0)
);

dense_out_dense_oLf8 #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_19_address0),
    .ce0(dense_out_weights_V_19_ce0),
    .q0(dense_out_weights_V_19_q0)
);

dense_out_dense_oMgi #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_20_address0),
    .ce0(dense_out_weights_V_20_ce0),
    .q0(dense_out_weights_V_20_q0)
);

dense_out_dense_oNgs #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_21_address0),
    .ce0(dense_out_weights_V_21_ce0),
    .q0(dense_out_weights_V_21_q0)
);

dense_out_dense_oOgC #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_22_address0),
    .ce0(dense_out_weights_V_22_ce0),
    .q0(dense_out_weights_V_22_q0)
);

dense_out_dense_oPgM #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_23_address0),
    .ce0(dense_out_weights_V_23_ce0),
    .q0(dense_out_weights_V_23_q0)
);

dense_out_dense_oQgW #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_24_address0),
    .ce0(dense_out_weights_V_24_ce0),
    .q0(dense_out_weights_V_24_q0)
);

dense_out_dense_oRg6 #(
    .DataWidth( 9 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_25_address0),
    .ce0(dense_out_weights_V_25_ce0),
    .q0(dense_out_weights_V_25_q0)
);

dense_out_dense_oShg #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_26_address0),
    .ce0(dense_out_weights_V_26_ce0),
    .q0(dense_out_weights_V_26_q0)
);

dense_out_dense_oThq #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_27_address0),
    .ce0(dense_out_weights_V_27_ce0),
    .q0(dense_out_weights_V_27_q0)
);

dense_out_dense_oUhA #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_28_address0),
    .ce0(dense_out_weights_V_28_ce0),
    .q0(dense_out_weights_V_28_q0)
);

dense_out_dense_oVhK #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_weights_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_29_address0),
    .ce0(dense_out_weights_V_29_ce0),
    .q0(dense_out_weights_V_29_q0)
);

dense_out_dense_oWhU #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

dense_out_dense_aXh4 #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0)
);

soft_max grp_soft_max_fu_879(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_879_ap_start),
    .ap_done(grp_soft_max_fu_879_ap_done),
    .ap_idle(grp_soft_max_fu_879_ap_idle),
    .ap_ready(grp_soft_max_fu_879_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_879_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_879_dense_array_V_ce0),
    .dense_array_V_we0(grp_soft_max_fu_879_dense_array_V_we0),
    .dense_array_V_d0(grp_soft_max_fu_879_dense_array_V_d0),
    .dense_array_V_q0(dense_array_V_q0),
    .prediction_V_address0(grp_soft_max_fu_879_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_879_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_879_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_879_prediction_V_d0)
);

cnn_mul_mul_13ns_Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_13ns_Yie_U42(
    .din0(mul_ln1118_fu_1622_p0),
    .din1(dense_out_weights_V_s_q0),
    .dout(mul_ln1118_fu_1622_p2)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U43(
    .din0(grp_fu_1628_p0),
    .din1(dense_out_weights_V_1_q0),
    .din2(grp_fu_1628_p2),
    .dout(grp_fu_1628_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U44(
    .din0(grp_fu_1636_p0),
    .din1(dense_out_weights_V_2_q0),
    .din2(grp_fu_1636_p2),
    .dout(grp_fu_1636_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U45(
    .din0(grp_fu_1644_p0),
    .din1(dense_out_weights_V_8_reg_2365),
    .din2(grp_fu_1644_p2),
    .dout(grp_fu_1644_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U46(
    .din0(grp_fu_1652_p0),
    .din1(dense_out_weights_V_10_reg_2375),
    .din2(grp_fu_1652_p2),
    .dout(grp_fu_1652_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U47(
    .din0(grp_fu_1660_p0),
    .din1(dense_out_weights_V_5_q0),
    .din2(grp_fu_1660_p2),
    .dout(grp_fu_1660_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U48(
    .din0(grp_fu_1668_p0),
    .din1(dense_out_weights_V_6_q0),
    .din2(grp_fu_1668_p2),
    .dout(grp_fu_1668_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U49(
    .din0(grp_fu_1676_p0),
    .din1(dense_out_weights_V_7_q0),
    .din2(grp_fu_1676_p2),
    .dout(grp_fu_1676_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U50(
    .din0(grp_fu_1684_p0),
    .din1(dense_out_weights_V_18_reg_2405),
    .din2(grp_fu_1684_p2),
    .dout(grp_fu_1684_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U51(
    .din0(grp_fu_1692_p0),
    .din1(dense_out_weights_V_20_reg_2415),
    .din2(grp_fu_1692_p2),
    .dout(grp_fu_1692_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U52(
    .din0(grp_fu_1700_p0),
    .din1(dense_out_weights_V_10_q0),
    .din2(grp_fu_1700_p2),
    .dout(grp_fu_1700_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U53(
    .din0(grp_fu_1708_p0),
    .din1(dense_out_weights_V_11_q0),
    .din2(grp_fu_1708_p2),
    .dout(grp_fu_1708_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U54(
    .din0(grp_fu_1716_p0),
    .din1(dense_out_weights_V_12_q0),
    .din2(grp_fu_1716_p2),
    .dout(grp_fu_1716_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U55(
    .din0(grp_fu_1724_p0),
    .din1(dense_out_weights_V_28_reg_2445),
    .din2(grp_fu_1724_p2),
    .dout(grp_fu_1724_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U56(
    .din0(grp_fu_1732_p0),
    .din1(dense_out_weights_V_30_reg_2455),
    .din2(grp_fu_1732_p2),
    .dout(grp_fu_1732_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U57(
    .din0(grp_fu_1740_p0),
    .din1(dense_out_weights_V_15_q0),
    .din2(grp_fu_1740_p2),
    .dout(grp_fu_1740_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U58(
    .din0(grp_fu_1748_p0),
    .din1(dense_out_weights_V_16_q0),
    .din2(grp_fu_1748_p2),
    .dout(grp_fu_1748_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U59(
    .din0(grp_fu_1756_p0),
    .din1(dense_out_weights_V_17_q0),
    .din2(grp_fu_1756_p2),
    .dout(grp_fu_1756_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U60(
    .din0(grp_fu_1764_p0),
    .din1(dense_out_weights_V_38_reg_2480),
    .din2(grp_fu_1764_p2),
    .dout(grp_fu_1764_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U61(
    .din0(grp_fu_1772_p0),
    .din1(dense_out_weights_V_19_q0),
    .din2(grp_fu_1772_p2),
    .dout(grp_fu_1772_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U62(
    .din0(grp_fu_1780_p0),
    .din1(dense_out_weights_V_20_q0),
    .din2(grp_fu_1780_p2),
    .dout(grp_fu_1780_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U63(
    .din0(grp_fu_1788_p0),
    .din1(dense_out_weights_V_21_q0),
    .din2(grp_fu_1788_p2),
    .dout(grp_fu_1788_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U64(
    .din0(grp_fu_1796_p0),
    .din1(dense_out_weights_V_46_reg_2510),
    .din2(grp_fu_1796_p2),
    .dout(grp_fu_1796_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U65(
    .din0(grp_fu_1804_p0),
    .din1(dense_out_weights_V_23_q0),
    .din2(grp_fu_1804_p2),
    .dout(grp_fu_1804_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U66(
    .din0(grp_fu_1812_p0),
    .din1(dense_out_weights_V_24_q0),
    .din2(grp_fu_1812_p2),
    .dout(grp_fu_1812_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U67(
    .din0(grp_fu_1820_p0),
    .din1(dense_out_weights_V_25_q0),
    .din2(grp_fu_1820_p2),
    .dout(grp_fu_1820_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U68(
    .din0(grp_fu_1828_p0),
    .din1(dense_out_weights_V_54_reg_2545),
    .din2(grp_fu_1828_p2),
    .dout(grp_fu_1828_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U69(
    .din0(grp_fu_1836_p0),
    .din1(dense_out_weights_V_56_reg_2555),
    .din2(grp_fu_1836_p2),
    .dout(grp_fu_1836_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U70(
    .din0(grp_fu_1844_p0),
    .din1(dense_out_weights_V_28_q0),
    .din2(grp_fu_1844_p2),
    .dout(grp_fu_1844_p3)
);

cnn_mac_muladd_130iy #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_130iy_U71(
    .din0(grp_fu_1852_p0),
    .din1(dense_out_weights_V_29_q0),
    .din2(grp_fu_1852_p2),
    .dout(grp_fu_1852_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state17)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_879_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            grp_soft_max_fu_879_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_879_ap_ready == 1'b1)) begin
            grp_soft_max_fu_879_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        d_0_reg_868 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_fu_984_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_0_reg_868 <= d_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_2_out_V_load_10_reg_1970 <= dense_2_out_V_q0;
        dense_2_out_V_load_11_reg_1975 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_2_out_V_load_12_reg_1990 <= dense_2_out_V_q0;
        dense_2_out_V_load_13_reg_1995 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_2_out_V_load_14_reg_2010 <= dense_2_out_V_q0;
        dense_2_out_V_load_15_reg_2015 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        dense_2_out_V_load_16_reg_2030 <= dense_2_out_V_q0;
        dense_2_out_V_load_17_reg_2035 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        dense_2_out_V_load_18_reg_2050 <= dense_2_out_V_q0;
        dense_2_out_V_load_19_reg_2055 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_2_out_V_load_1_reg_1875 <= dense_2_out_V_q1;
        dense_2_out_V_load_reg_1870 <= dense_2_out_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        dense_2_out_V_load_20_reg_2070 <= dense_2_out_V_q0;
        dense_2_out_V_load_21_reg_2075 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_2_out_V_load_22_reg_2090 <= dense_2_out_V_q0;
        dense_2_out_V_load_23_reg_2095 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        dense_2_out_V_load_24_reg_2110 <= dense_2_out_V_q0;
        dense_2_out_V_load_25_reg_2115 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_2_out_V_load_26_reg_2130 <= dense_2_out_V_q0;
        dense_2_out_V_load_27_reg_2135 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_out_V_load_2_reg_1890 <= dense_2_out_V_q0;
        dense_2_out_V_load_3_reg_1895 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_2_out_V_load_4_reg_1910 <= dense_2_out_V_q0;
        dense_2_out_V_load_5_reg_1915 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_2_out_V_load_6_reg_1930 <= dense_2_out_V_q0;
        dense_2_out_V_load_7_reg_1935 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_2_out_V_load_8_reg_1950 <= dense_2_out_V_q0;
        dense_2_out_V_load_9_reg_1955 <= dense_2_out_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_reg_2300 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_10_reg_2375 <= dense_out_weights_V_4_q0;
        dense_out_weights_V_8_reg_2365 <= dense_out_weights_V_3_q0;
        tmp_2_reg_2370 <= {{grp_fu_1636_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_2300_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_out_weights_V_18_reg_2405 <= dense_out_weights_V_8_q0;
        dense_out_weights_V_20_reg_2415 <= dense_out_weights_V_9_q0;
        tmp_7_reg_2410 <= {{grp_fu_1676_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_2300_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_out_weights_V_28_reg_2445 <= dense_out_weights_V_13_q0;
        dense_out_weights_V_30_reg_2455 <= dense_out_weights_V_14_q0;
        tmp_12_reg_2450 <= {{grp_fu_1716_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_2300_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_out_weights_V_38_reg_2480 <= dense_out_weights_V_18_q0;
        tmp_17_reg_2485 <= {{grp_fu_1756_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_2300_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_out_weights_V_46_reg_2510 <= dense_out_weights_V_22_q0;
        tmp_21_reg_2515 <= {{grp_fu_1788_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_reg_2300_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_out_weights_V_54_reg_2545 <= dense_out_weights_V_26_q0;
        dense_out_weights_V_56_reg_2555 <= dense_out_weights_V_27_q0;
        tmp_25_reg_2550 <= {{grp_fu_1820_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln41_reg_2300 <= icmp_ln41_fu_984_p2;
        icmp_ln41_reg_2300_pp0_iter1_reg <= icmp_ln41_reg_2300;
        zext_ln48_reg_2309_pp0_iter1_reg[3 : 0] <= zext_ln48_reg_2309[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln41_reg_2300_pp0_iter2_reg <= icmp_ln41_reg_2300_pp0_iter1_reg;
        icmp_ln41_reg_2300_pp0_iter3_reg <= icmp_ln41_reg_2300_pp0_iter2_reg;
        icmp_ln41_reg_2300_pp0_iter4_reg <= icmp_ln41_reg_2300_pp0_iter3_reg;
        icmp_ln41_reg_2300_pp0_iter5_reg <= icmp_ln41_reg_2300_pp0_iter4_reg;
        icmp_ln41_reg_2300_pp0_iter6_reg <= icmp_ln41_reg_2300_pp0_iter5_reg;
        zext_ln48_reg_2309_pp0_iter2_reg[3 : 0] <= zext_ln48_reg_2309_pp0_iter1_reg[3 : 0];
        zext_ln48_reg_2309_pp0_iter3_reg[3 : 0] <= zext_ln48_reg_2309_pp0_iter2_reg[3 : 0];
        zext_ln48_reg_2309_pp0_iter4_reg[3 : 0] <= zext_ln48_reg_2309_pp0_iter3_reg[3 : 0];
        zext_ln48_reg_2309_pp0_iter5_reg[3 : 0] <= zext_ln48_reg_2309_pp0_iter4_reg[3 : 0];
        zext_ln48_reg_2309_pp0_iter6_reg[3 : 0] <= zext_ln48_reg_2309_pp0_iter5_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        zext_ln1117_10_reg_2285[12 : 0] <= zext_ln1117_10_fu_973_p1[12 : 0];
        zext_ln1117_11_reg_2290[12 : 0] <= zext_ln1117_11_fu_976_p1[12 : 0];
        zext_ln1117_1_reg_2160[12 : 0] <= zext_ln1117_1_fu_898_p1[12 : 0];
        zext_ln1117_2_reg_2165[12 : 0] <= zext_ln1117_2_fu_901_p1[12 : 0];
        zext_ln1117_3_reg_2185[12 : 0] <= zext_ln1117_3_fu_913_p1[12 : 0];
        zext_ln1117_4_reg_2190[12 : 0] <= zext_ln1117_4_fu_916_p1[12 : 0];
        zext_ln1117_5_reg_2205[12 : 0] <= zext_ln1117_5_fu_925_p1[12 : 0];
        zext_ln1117_6_reg_2215[12 : 0] <= zext_ln1117_6_fu_931_p1[12 : 0];
        zext_ln1117_7_reg_2225[12 : 0] <= zext_ln1117_7_fu_937_p1[12 : 0];
        zext_ln1117_8_reg_2260[12 : 0] <= zext_ln1117_8_fu_958_p1[12 : 0];
        zext_ln1117_9_reg_2280[12 : 0] <= zext_ln1117_9_fu_970_p1[12 : 0];
        zext_ln1117_reg_2150[12 : 0] <= zext_ln1117_fu_892_p1[12 : 0];
        zext_ln1192_10_reg_2240[12 : 0] <= zext_ln1192_10_fu_946_p1[12 : 0];
        zext_ln1192_11_reg_2245[12 : 0] <= zext_ln1192_11_fu_949_p1[12 : 0];
        zext_ln1192_12_reg_2250[12 : 0] <= zext_ln1192_12_fu_952_p1[12 : 0];
        zext_ln1192_13_reg_2255[12 : 0] <= zext_ln1192_13_fu_955_p1[12 : 0];
        zext_ln1192_14_reg_2265[12 : 0] <= zext_ln1192_14_fu_961_p1[12 : 0];
        zext_ln1192_15_reg_2270[12 : 0] <= zext_ln1192_15_fu_964_p1[12 : 0];
        zext_ln1192_16_reg_2275[12 : 0] <= zext_ln1192_16_fu_967_p1[12 : 0];
        zext_ln1192_1_reg_2170[12 : 0] <= zext_ln1192_1_fu_904_p1[12 : 0];
        zext_ln1192_2_reg_2175[12 : 0] <= zext_ln1192_2_fu_907_p1[12 : 0];
        zext_ln1192_3_reg_2180[12 : 0] <= zext_ln1192_3_fu_910_p1[12 : 0];
        zext_ln1192_4_reg_2195[12 : 0] <= zext_ln1192_4_fu_919_p1[12 : 0];
        zext_ln1192_5_reg_2200[12 : 0] <= zext_ln1192_5_fu_922_p1[12 : 0];
        zext_ln1192_6_reg_2210[12 : 0] <= zext_ln1192_6_fu_928_p1[12 : 0];
        zext_ln1192_7_reg_2220[12 : 0] <= zext_ln1192_7_fu_934_p1[12 : 0];
        zext_ln1192_8_reg_2230[12 : 0] <= zext_ln1192_8_fu_940_p1[12 : 0];
        zext_ln1192_9_reg_2235[12 : 0] <= zext_ln1192_9_fu_943_p1[12 : 0];
        zext_ln1192_reg_2155[12 : 0] <= zext_ln1192_fu_895_p1[12 : 0];
        zext_ln41_reg_2295[12 : 0] <= zext_ln41_fu_980_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_fu_984_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln48_reg_2309[3 : 0] <= zext_ln48_fu_996_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln41_fu_984_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_soft_max_fu_879_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_soft_max_fu_879_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_2_out_V_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dense_2_out_V_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_2_out_V_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dense_2_out_V_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dense_2_out_V_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dense_2_out_V_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_2_out_V_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_2_out_V_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_2_out_V_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_2_out_V_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_2_out_V_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_2_out_V_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_out_V_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_2_out_V_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_2_out_V_address0 = 64'd0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_2_out_V_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        dense_2_out_V_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        dense_2_out_V_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        dense_2_out_V_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        dense_2_out_V_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        dense_2_out_V_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_2_out_V_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_2_out_V_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_2_out_V_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_2_out_V_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_2_out_V_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        dense_2_out_V_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_out_V_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dense_2_out_V_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        dense_2_out_V_address1 = 64'd1;
    end else begin
        dense_2_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        dense_2_out_V_ce1 = 1'b1;
    end else begin
        dense_2_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        dense_array_V_address0 = zext_ln48_reg_2309_pp0_iter6_reg;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_address0 = grp_soft_max_fu_879_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_ce0 = grp_soft_max_fu_879_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        dense_array_V_d0 = add_ln703_fu_1615_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_d0 = grp_soft_max_fu_879_dense_array_V_d0;
    end else begin
        dense_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_2300_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        dense_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_we0 = grp_soft_max_fu_879_dense_array_V_we0;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_weights_V_10_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_weights_V_11_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_weights_V_12_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_weights_V_13_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        dense_out_weights_V_14_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dense_out_weights_V_15_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dense_out_weights_V_16_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dense_out_weights_V_17_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        dense_out_weights_V_18_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        dense_out_weights_V_19_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_1_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        dense_out_weights_V_20_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        dense_out_weights_V_21_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        dense_out_weights_V_22_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dense_out_weights_V_23_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dense_out_weights_V_24_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dense_out_weights_V_25_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dense_out_weights_V_26_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        dense_out_weights_V_27_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        dense_out_weights_V_28_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        dense_out_weights_V_29_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_2_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_3_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_4_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_5_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_6_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_7_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_8_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_9_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_out_weights_V_s_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln41_fu_984_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter6 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln41_fu_984_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_soft_max_fu_879_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln703_fu_1615_p2 = ($signed(trunc_ln708_s_fu_1602_p4) + $signed(sext_ln1265_fu_1611_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign d_fu_990_p2 = (d_0_reg_868 + 4'd1);

assign dense_out_bias_V_address0 = zext_ln48_reg_2309_pp0_iter5_reg;

assign dense_out_weights_V_10_address0 = zext_ln48_reg_2309_pp0_iter1_reg;

assign dense_out_weights_V_11_address0 = zext_ln48_reg_2309_pp0_iter1_reg;

assign dense_out_weights_V_12_address0 = zext_ln48_reg_2309_pp0_iter1_reg;

assign dense_out_weights_V_13_address0 = zext_ln48_reg_2309_pp0_iter1_reg;

assign dense_out_weights_V_14_address0 = zext_ln48_reg_2309_pp0_iter1_reg;

assign dense_out_weights_V_15_address0 = zext_ln48_reg_2309_pp0_iter2_reg;

assign dense_out_weights_V_16_address0 = zext_ln48_reg_2309_pp0_iter2_reg;

assign dense_out_weights_V_17_address0 = zext_ln48_reg_2309_pp0_iter2_reg;

assign dense_out_weights_V_18_address0 = zext_ln48_reg_2309_pp0_iter2_reg;

assign dense_out_weights_V_19_address0 = zext_ln48_reg_2309_pp0_iter3_reg;

assign dense_out_weights_V_1_address0 = zext_ln48_fu_996_p1;

assign dense_out_weights_V_20_address0 = zext_ln48_reg_2309_pp0_iter3_reg;

assign dense_out_weights_V_21_address0 = zext_ln48_reg_2309_pp0_iter3_reg;

assign dense_out_weights_V_22_address0 = zext_ln48_reg_2309_pp0_iter3_reg;

assign dense_out_weights_V_23_address0 = zext_ln48_reg_2309_pp0_iter4_reg;

assign dense_out_weights_V_24_address0 = zext_ln48_reg_2309_pp0_iter4_reg;

assign dense_out_weights_V_25_address0 = zext_ln48_reg_2309_pp0_iter4_reg;

assign dense_out_weights_V_26_address0 = zext_ln48_reg_2309_pp0_iter4_reg;

assign dense_out_weights_V_27_address0 = zext_ln48_reg_2309_pp0_iter4_reg;

assign dense_out_weights_V_28_address0 = zext_ln48_reg_2309_pp0_iter5_reg;

assign dense_out_weights_V_29_address0 = zext_ln48_reg_2309_pp0_iter5_reg;

assign dense_out_weights_V_2_address0 = zext_ln48_fu_996_p1;

assign dense_out_weights_V_3_address0 = zext_ln48_fu_996_p1;

assign dense_out_weights_V_4_address0 = zext_ln48_fu_996_p1;

assign dense_out_weights_V_5_address0 = zext_ln48_reg_2309;

assign dense_out_weights_V_6_address0 = zext_ln48_reg_2309;

assign dense_out_weights_V_7_address0 = zext_ln48_reg_2309;

assign dense_out_weights_V_8_address0 = zext_ln48_reg_2309;

assign dense_out_weights_V_9_address0 = zext_ln48_reg_2309;

assign dense_out_weights_V_s_address0 = zext_ln48_fu_996_p1;

assign grp_fu_1628_p0 = zext_ln1192_reg_2155;

assign grp_fu_1628_p2 = {{tmp_s_fu_1013_p4}, {8'd0}};

assign grp_fu_1636_p0 = zext_ln1117_1_reg_2160;

assign grp_fu_1636_p2 = {{tmp_1_fu_1034_p4}, {8'd0}};

assign grp_fu_1644_p0 = zext_ln1117_2_reg_2165;

assign grp_fu_1644_p2 = {{tmp_2_reg_2370}, {8'd0}};

assign grp_fu_1652_p0 = zext_ln1192_1_reg_2170;

assign grp_fu_1652_p2 = {{tmp_3_fu_1073_p4}, {8'd0}};

assign grp_fu_1660_p0 = zext_ln1192_2_reg_2175;

assign grp_fu_1660_p2 = {{tmp_4_fu_1094_p4}, {8'd0}};

assign grp_fu_1668_p0 = zext_ln1192_3_reg_2180;

assign grp_fu_1668_p2 = {{tmp_5_fu_1115_p4}, {8'd0}};

assign grp_fu_1676_p0 = zext_ln1117_3_reg_2185;

assign grp_fu_1676_p2 = {{tmp_6_fu_1136_p4}, {8'd0}};

assign grp_fu_1684_p0 = zext_ln1117_4_reg_2190;

assign grp_fu_1684_p2 = {{tmp_7_reg_2410}, {8'd0}};

assign grp_fu_1692_p0 = zext_ln1192_4_reg_2195;

assign grp_fu_1692_p2 = {{tmp_8_fu_1175_p4}, {8'd0}};

assign grp_fu_1700_p0 = zext_ln1192_5_reg_2200;

assign grp_fu_1700_p2 = {{tmp_9_fu_1196_p4}, {8'd0}};

assign grp_fu_1708_p0 = zext_ln1117_5_reg_2205;

assign grp_fu_1708_p2 = {{tmp_10_fu_1217_p4}, {8'd0}};

assign grp_fu_1716_p0 = zext_ln1192_6_reg_2210;

assign grp_fu_1716_p2 = {{tmp_11_fu_1238_p4}, {8'd0}};

assign grp_fu_1724_p0 = zext_ln1117_6_reg_2215;

assign grp_fu_1724_p2 = {{tmp_12_reg_2450}, {8'd0}};

assign grp_fu_1732_p0 = zext_ln1192_7_reg_2220;

assign grp_fu_1732_p2 = {{tmp_13_fu_1277_p4}, {8'd0}};

assign grp_fu_1740_p0 = zext_ln1117_7_reg_2225;

assign grp_fu_1740_p2 = {{tmp_14_fu_1298_p4}, {8'd0}};

assign grp_fu_1748_p0 = zext_ln1192_8_reg_2230;

assign grp_fu_1748_p2 = {{tmp_15_fu_1319_p4}, {8'd0}};

assign grp_fu_1756_p0 = zext_ln1192_9_reg_2235;

assign grp_fu_1756_p2 = {{tmp_16_fu_1340_p4}, {8'd0}};

assign grp_fu_1764_p0 = zext_ln1192_10_reg_2240;

assign grp_fu_1764_p2 = {{tmp_17_reg_2485}, {8'd0}};

assign grp_fu_1772_p0 = zext_ln1192_11_reg_2245;

assign grp_fu_1772_p2 = {{tmp_18_fu_1380_p4}, {8'd0}};

assign grp_fu_1780_p0 = zext_ln1192_12_reg_2250;

assign grp_fu_1780_p2 = {{tmp_19_fu_1401_p4}, {8'd0}};

assign grp_fu_1788_p0 = zext_ln1192_13_reg_2255;

assign grp_fu_1788_p2 = {{tmp_20_fu_1422_p4}, {8'd0}};

assign grp_fu_1796_p0 = zext_ln1117_8_reg_2260;

assign grp_fu_1796_p2 = {{tmp_21_reg_2515}, {8'd0}};

assign grp_fu_1804_p0 = zext_ln1192_14_reg_2265;

assign grp_fu_1804_p2 = {{tmp_22_fu_1462_p4}, {8'd0}};

assign grp_fu_1812_p0 = zext_ln1192_15_reg_2270;

assign grp_fu_1812_p2 = {{tmp_23_fu_1483_p4}, {8'd0}};

assign grp_fu_1820_p0 = zext_ln1192_16_reg_2275;

assign grp_fu_1820_p2 = {{tmp_24_fu_1504_p4}, {8'd0}};

assign grp_fu_1828_p0 = zext_ln1117_9_reg_2280;

assign grp_fu_1828_p2 = {{tmp_25_reg_2550}, {8'd0}};

assign grp_fu_1836_p0 = zext_ln1117_10_reg_2285;

assign grp_fu_1836_p2 = {{tmp_26_fu_1543_p4}, {8'd0}};

assign grp_fu_1844_p0 = zext_ln1117_11_reg_2290;

assign grp_fu_1844_p2 = {{tmp_27_fu_1564_p4}, {8'd0}};

assign grp_fu_1852_p0 = zext_ln41_reg_2295;

assign grp_fu_1852_p2 = {{tmp_28_fu_1585_p4}, {8'd0}};

assign grp_soft_max_fu_879_ap_start = grp_soft_max_fu_879_ap_start_reg;

assign icmp_ln41_fu_984_p2 = ((d_0_reg_868 == 4'd10) ? 1'b1 : 1'b0);

assign mul_ln1118_fu_1622_p0 = zext_ln1117_reg_2150;

assign prediction_V_address0 = grp_soft_max_fu_879_prediction_V_address0;

assign prediction_V_ce0 = grp_soft_max_fu_879_prediction_V_ce0;

assign prediction_V_d0 = grp_soft_max_fu_879_prediction_V_d0;

assign prediction_V_we0 = grp_soft_max_fu_879_prediction_V_we0;

assign sext_ln1265_fu_1611_p1 = $signed(dense_out_bias_V_q0);

assign tmp_10_fu_1217_p4 = {{grp_fu_1700_p3[21:8]}};

assign tmp_11_fu_1238_p4 = {{grp_fu_1708_p3[21:8]}};

assign tmp_13_fu_1277_p4 = {{grp_fu_1724_p3[21:8]}};

assign tmp_14_fu_1298_p4 = {{grp_fu_1732_p3[21:8]}};

assign tmp_15_fu_1319_p4 = {{grp_fu_1740_p3[21:8]}};

assign tmp_16_fu_1340_p4 = {{grp_fu_1748_p3[21:8]}};

assign tmp_18_fu_1380_p4 = {{grp_fu_1764_p3[21:8]}};

assign tmp_19_fu_1401_p4 = {{grp_fu_1772_p3[21:8]}};

assign tmp_1_fu_1034_p4 = {{grp_fu_1628_p3[21:8]}};

assign tmp_20_fu_1422_p4 = {{grp_fu_1780_p3[21:8]}};

assign tmp_22_fu_1462_p4 = {{grp_fu_1796_p3[21:8]}};

assign tmp_23_fu_1483_p4 = {{grp_fu_1804_p3[21:8]}};

assign tmp_24_fu_1504_p4 = {{grp_fu_1812_p3[21:8]}};

assign tmp_26_fu_1543_p4 = {{grp_fu_1828_p3[21:8]}};

assign tmp_27_fu_1564_p4 = {{grp_fu_1836_p3[21:8]}};

assign tmp_28_fu_1585_p4 = {{grp_fu_1844_p3[21:8]}};

assign tmp_3_fu_1073_p4 = {{grp_fu_1644_p3[21:8]}};

assign tmp_4_fu_1094_p4 = {{grp_fu_1652_p3[21:8]}};

assign tmp_5_fu_1115_p4 = {{grp_fu_1660_p3[21:8]}};

assign tmp_6_fu_1136_p4 = {{grp_fu_1668_p3[21:8]}};

assign tmp_8_fu_1175_p4 = {{grp_fu_1684_p3[21:8]}};

assign tmp_9_fu_1196_p4 = {{grp_fu_1692_p3[21:8]}};

assign tmp_s_fu_1013_p4 = {{mul_ln1118_fu_1622_p2[21:8]}};

assign trunc_ln708_s_fu_1602_p4 = {{grp_fu_1852_p3[21:8]}};

assign zext_ln1117_10_fu_973_p1 = dense_2_out_V_load_27_reg_2135;

assign zext_ln1117_11_fu_976_p1 = dense_2_out_V_q0;

assign zext_ln1117_1_fu_898_p1 = dense_2_out_V_load_2_reg_1890;

assign zext_ln1117_2_fu_901_p1 = dense_2_out_V_load_3_reg_1895;

assign zext_ln1117_3_fu_913_p1 = dense_2_out_V_load_7_reg_1935;

assign zext_ln1117_4_fu_916_p1 = dense_2_out_V_load_8_reg_1950;

assign zext_ln1117_5_fu_925_p1 = dense_2_out_V_load_11_reg_1975;

assign zext_ln1117_6_fu_931_p1 = dense_2_out_V_load_13_reg_1995;

assign zext_ln1117_7_fu_937_p1 = dense_2_out_V_load_15_reg_2015;

assign zext_ln1117_8_fu_958_p1 = dense_2_out_V_load_22_reg_2090;

assign zext_ln1117_9_fu_970_p1 = dense_2_out_V_load_26_reg_2130;

assign zext_ln1117_fu_892_p1 = dense_2_out_V_load_reg_1870;

assign zext_ln1192_10_fu_946_p1 = dense_2_out_V_load_18_reg_2050;

assign zext_ln1192_11_fu_949_p1 = dense_2_out_V_load_19_reg_2055;

assign zext_ln1192_12_fu_952_p1 = dense_2_out_V_load_20_reg_2070;

assign zext_ln1192_13_fu_955_p1 = dense_2_out_V_load_21_reg_2075;

assign zext_ln1192_14_fu_961_p1 = dense_2_out_V_load_23_reg_2095;

assign zext_ln1192_15_fu_964_p1 = dense_2_out_V_load_24_reg_2110;

assign zext_ln1192_16_fu_967_p1 = dense_2_out_V_load_25_reg_2115;

assign zext_ln1192_1_fu_904_p1 = dense_2_out_V_load_4_reg_1910;

assign zext_ln1192_2_fu_907_p1 = dense_2_out_V_load_5_reg_1915;

assign zext_ln1192_3_fu_910_p1 = dense_2_out_V_load_6_reg_1930;

assign zext_ln1192_4_fu_919_p1 = dense_2_out_V_load_9_reg_1955;

assign zext_ln1192_5_fu_922_p1 = dense_2_out_V_load_10_reg_1970;

assign zext_ln1192_6_fu_928_p1 = dense_2_out_V_load_12_reg_1990;

assign zext_ln1192_7_fu_934_p1 = dense_2_out_V_load_14_reg_2010;

assign zext_ln1192_8_fu_940_p1 = dense_2_out_V_load_16_reg_2030;

assign zext_ln1192_9_fu_943_p1 = dense_2_out_V_load_17_reg_2035;

assign zext_ln1192_fu_895_p1 = dense_2_out_V_load_1_reg_1875;

assign zext_ln41_fu_980_p1 = dense_2_out_V_q1;

assign zext_ln48_fu_996_p1 = d_0_reg_868;

always @ (posedge ap_clk) begin
    zext_ln1117_reg_2150[21:13] <= 9'b000000000;
    zext_ln1192_reg_2155[21:13] <= 9'b000000000;
    zext_ln1117_1_reg_2160[20:13] <= 8'b00000000;
    zext_ln1117_2_reg_2165[20:13] <= 8'b00000000;
    zext_ln1192_1_reg_2170[21:13] <= 9'b000000000;
    zext_ln1192_2_reg_2175[21:13] <= 9'b000000000;
    zext_ln1192_3_reg_2180[21:13] <= 9'b000000000;
    zext_ln1117_3_reg_2185[20:13] <= 8'b00000000;
    zext_ln1117_4_reg_2190[20:13] <= 8'b00000000;
    zext_ln1192_4_reg_2195[21:13] <= 9'b000000000;
    zext_ln1192_5_reg_2200[21:13] <= 9'b000000000;
    zext_ln1117_5_reg_2205[20:13] <= 8'b00000000;
    zext_ln1192_6_reg_2210[21:13] <= 9'b000000000;
    zext_ln1117_6_reg_2215[20:13] <= 8'b00000000;
    zext_ln1192_7_reg_2220[21:13] <= 9'b000000000;
    zext_ln1117_7_reg_2225[20:13] <= 8'b00000000;
    zext_ln1192_8_reg_2230[21:13] <= 9'b000000000;
    zext_ln1192_9_reg_2235[21:13] <= 9'b000000000;
    zext_ln1192_10_reg_2240[21:13] <= 9'b000000000;
    zext_ln1192_11_reg_2245[21:13] <= 9'b000000000;
    zext_ln1192_12_reg_2250[21:13] <= 9'b000000000;
    zext_ln1192_13_reg_2255[21:13] <= 9'b000000000;
    zext_ln1117_8_reg_2260[20:13] <= 8'b00000000;
    zext_ln1192_14_reg_2265[21:13] <= 9'b000000000;
    zext_ln1192_15_reg_2270[21:13] <= 9'b000000000;
    zext_ln1192_16_reg_2275[21:13] <= 9'b000000000;
    zext_ln1117_9_reg_2280[20:13] <= 8'b00000000;
    zext_ln1117_10_reg_2285[20:13] <= 8'b00000000;
    zext_ln1117_11_reg_2290[20:13] <= 8'b00000000;
    zext_ln41_reg_2295[20:13] <= 8'b00000000;
    zext_ln48_reg_2309[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln48_reg_2309_pp0_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_out
