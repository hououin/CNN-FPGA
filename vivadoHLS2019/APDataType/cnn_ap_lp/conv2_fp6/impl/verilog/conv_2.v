// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_pp0_stage0 = 8'd4;
parameter    ap_ST_fsm_state6 = 8'd8;
parameter    ap_ST_fsm_state7 = 8'd16;
parameter    ap_ST_fsm_state8 = 8'd32;
parameter    ap_ST_fsm_state9 = 8'd64;
parameter    ap_ST_fsm_state10 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [10:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg conv_out_V_ce0;
reg conv_out_V_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] conv_2_weights_V_address0;
reg    conv_2_weights_V_ce0;
wire  signed [9:0] conv_2_weights_V_q0;
wire   [3:0] conv_2_bias_V_address0;
reg    conv_2_bias_V_ce0;
wire   [7:0] conv_2_bias_V_q0;
reg   [5:0] indvar_flatten21_reg_289;
reg   [1:0] wr_0_reg_300;
reg   [4:0] indvar_flatten_reg_311;
reg   [1:0] wc_0_reg_322;
reg   [13:0] p_Val2_15_reg_333;
reg   [2:0] ch_0_reg_345;
wire   [0:0] icmp_ln8_fu_372_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln8_fu_378_p2;
reg   [10:0] add_ln8_reg_1203;
wire   [0:0] icmp_ln11_fu_390_p2;
reg   [0:0] icmp_ln11_reg_1208;
wire   [3:0] select_ln37_1_fu_404_p3;
reg   [3:0] select_ln37_1_reg_1213;
wire   [4:0] select_ln37_2_fu_446_p3;
reg   [4:0] select_ln37_2_reg_1219;
wire   [3:0] select_ln37_3_fu_454_p3;
reg   [3:0] select_ln37_3_reg_1224;
wire   [63:0] zext_ln26_fu_473_p1;
reg   [63:0] zext_ln26_reg_1232;
wire   [10:0] zext_ln203_10_fu_477_p1;
reg   [10:0] zext_ln203_10_reg_1237;
reg   [10:0] conv_out_V_addr_reg_1242;
wire   [0:0] icmp_ln18_fu_505_p2;
reg   [0:0] icmp_ln18_reg_1247;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln18_reg_1247_pp0_iter1_reg;
wire   [5:0] add_ln18_1_fu_511_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] select_ln18_1_fu_537_p3;
reg   [1:0] select_ln18_1_reg_1256;
wire   [2:0] select_ln21_fu_575_p3;
reg   [2:0] select_ln21_reg_1264;
wire   [1:0] select_ln21_1_fu_587_p3;
reg   [1:0] select_ln21_1_reg_1270;
wire   [3:0] select_ln21_2_fu_607_p3;
reg   [3:0] select_ln21_2_reg_1276;
wire   [2:0] ch_fu_615_p2;
wire   [4:0] select_ln21_3_fu_627_p3;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state6;
wire   [13:0] tmp_V_4_fu_821_p2;
reg   [13:0] tmp_V_4_reg_1311;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln885_fu_827_p2;
reg   [0:0] icmp_ln885_reg_1319;
wire   [0:0] p_Result_24_fu_833_p3;
reg   [0:0] p_Result_24_reg_1323;
wire    ap_CS_fsm_state8;
wire   [13:0] tmp_V_5_fu_845_p3;
reg   [13:0] tmp_V_5_reg_1328;
wire   [31:0] sub_ln894_fu_878_p2;
reg   [31:0] sub_ln894_reg_1334;
wire   [31:0] or_ln_fu_988_p3;
reg   [31:0] or_ln_reg_1340;
wire   [0:0] icmp_ln908_fu_996_p2;
reg   [0:0] icmp_ln908_reg_1345;
wire   [10:0] trunc_ln893_fu_1002_p1;
reg   [10:0] trunc_ln893_reg_1350;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln924_fu_1133_p2;
reg   [0:0] icmp_ln924_reg_1360;
wire   [0:0] icmp_ln924_1_fu_1139_p2;
reg   [0:0] icmp_ln924_1_reg_1365;
wire   [4:0] f_fu_1155_p2;
wire    ap_CS_fsm_state10;
wire   [8:0] select_ln11_fu_1166_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg   [10:0] indvar_flatten43_reg_233;
reg   [3:0] r_0_reg_244;
reg   [8:0] indvar_flatten29_reg_255;
reg   [3:0] c_0_reg_267;
reg   [4:0] f_0_reg_278;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_304_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_wc_0_phi_fu_326_p4;
reg   [13:0] ap_phi_mux_storemerge_phi_fu_359_p4;
wire   [0:0] and_ln924_fu_1149_p2;
wire   [63:0] zext_ln203_12_fu_491_p1;
wire   [63:0] zext_ln1116_4_fu_758_p1;
wire   [63:0] zext_ln1117_3_fu_769_p1;
wire   [63:0] grp_fu_367_p0;
wire   [3:0] r_fu_384_p2;
wire   [0:0] icmp_ln14_fu_422_p2;
wire   [0:0] xor_ln37_fu_416_p2;
wire   [3:0] select_ln37_fu_396_p3;
wire   [0:0] and_ln37_fu_428_p2;
wire   [0:0] or_ln37_fu_440_p2;
wire   [3:0] c_fu_434_p2;
wire   [7:0] grp_fu_1173_p3;
wire   [11:0] zext_ln203_11_fu_481_p1;
wire   [11:0] tmp_17_cast_fu_466_p3;
wire   [11:0] add_ln203_6_fu_485_p2;
wire   [3:0] zext_ln21_fu_496_p1;
wire   [0:0] icmp_ln21_fu_523_p2;
wire   [1:0] wr_fu_517_p2;
wire   [0:0] icmp_ln24_fu_551_p2;
wire   [0:0] xor_ln18_fu_545_p2;
wire   [1:0] select_ln18_fu_529_p3;
wire   [0:0] and_ln18_fu_557_p2;
wire   [0:0] or_ln21_fu_569_p2;
wire   [1:0] wc_fu_563_p2;
wire   [3:0] zext_ln21_1_fu_583_p1;
wire   [3:0] add_ln26_fu_500_p2;
wire   [3:0] add_ln26_1_fu_595_p2;
wire   [3:0] select_ln18_2_fu_600_p3;
wire   [4:0] add_ln21_fu_621_p2;
wire   [3:0] tmp_1_fu_638_p3;
wire   [4:0] zext_ln1116_1_fu_645_p1;
wire   [4:0] zext_ln1116_fu_635_p1;
wire   [4:0] sub_ln1116_fu_649_p2;
wire   [3:0] zext_ln18_fu_659_p1;
wire   [3:0] add_ln18_fu_662_p2;
wire   [5:0] zext_ln21_2_fu_671_p1;
wire  signed [5:0] sext_ln1116_fu_655_p1;
wire   [5:0] add_ln1116_fu_674_p2;
wire   [3:0] trunc_ln1116_fu_680_p1;
wire   [6:0] p_shl_fu_684_p3;
wire   [6:0] tmp_fu_692_p3;
wire   [7:0] grp_fu_1182_p3;
wire   [8:0] tmp_6_fu_716_p3;
wire   [10:0] p_shl_cast_fu_709_p3;
wire   [10:0] zext_ln1117_2_fu_723_p1;
wire   [6:0] zext_ln1116_2_fu_733_p1;
wire   [6:0] sub_ln1116_1_fu_700_p2;
wire   [6:0] add_ln1116_1_fu_739_p2;
wire   [10:0] tmp_24_cast_fu_745_p3;
wire   [10:0] add_ln1116_2_fu_753_p2;
wire   [10:0] zext_ln1116_3_fu_736_p1;
wire   [10:0] sub_ln1117_fu_727_p2;
wire   [10:0] add_ln1117_1_fu_763_p2;
wire  signed [24:0] r_V_fu_1192_p2;
wire   [21:0] lhs_V_fu_785_p3;
wire  signed [27:0] sext_ln1118_1_fu_782_p1;
wire   [28:0] zext_ln728_fu_793_p1;
wire   [28:0] zext_ln703_fu_797_p1;
wire   [28:0] ret_V_fu_801_p2;
wire  signed [13:0] sext_ln1265_fu_817_p1;
wire   [13:0] tmp_V_fu_840_p2;
reg   [13:0] p_Result_s_fu_852_p4;
wire   [31:0] p_Result_25_fu_862_p3;
reg   [31:0] l_fu_870_p3;
wire   [31:0] lsb_index_fu_888_p2;
wire   [30:0] tmp_8_fu_894_p4;
wire   [3:0] trunc_ln897_fu_910_p1;
wire   [3:0] sub_ln897_fu_914_p2;
wire   [13:0] zext_ln897_fu_920_p1;
wire   [13:0] lshr_ln897_fu_924_p2;
wire   [13:0] p_Result_21_fu_930_p2;
wire   [0:0] icmp_ln897_fu_904_p2;
wire   [0:0] icmp_ln897_1_fu_936_p2;
wire   [0:0] tmp_9_fu_948_p3;
wire   [13:0] trunc_ln894_fu_884_p1;
wire   [13:0] add_ln899_fu_962_p2;
wire   [0:0] p_Result_22_fu_968_p3;
wire   [0:0] xor_ln899_fu_956_p2;
wire   [0:0] and_ln899_fu_976_p2;
wire   [0:0] a_fu_942_p2;
wire   [0:0] or_ln899_fu_982_p2;
wire   [31:0] zext_ln907_1_fu_1009_p1;
wire   [31:0] add_ln908_fu_1012_p2;
wire   [31:0] lshr_ln908_fu_1017_p2;
wire   [31:0] sub_ln908_fu_1027_p2;
wire   [63:0] m_fu_1006_p1;
wire   [63:0] zext_ln908_1_fu_1032_p1;
wire   [63:0] zext_ln908_fu_1023_p1;
wire   [63:0] shl_ln908_fu_1036_p2;
wire   [63:0] zext_ln911_fu_1049_p1;
wire   [63:0] m_1_fu_1042_p3;
wire   [63:0] m_2_fu_1052_p2;
wire   [62:0] m_5_fu_1058_p4;
wire   [0:0] tmp_10_fu_1072_p3;
wire   [10:0] sub_ln915_fu_1088_p2;
wire   [10:0] select_ln915_fu_1080_p3;
wire   [10:0] add_ln915_fu_1093_p2;
wire   [63:0] m_6_fu_1068_p1;
wire   [11:0] tmp_5_fu_1099_p3;
wire   [63:0] p_Result_26_fu_1106_p5;
wire   [51:0] trunc_ln4_fu_1123_p4;
wire   [0:0] or_ln924_fu_1145_p2;
wire   [0:0] grp_fu_367_p2;
wire   [8:0] add_ln11_1_fu_1160_p2;
wire   [3:0] grp_fu_1173_p0;
wire   [4:0] grp_fu_1173_p1;
wire   [3:0] grp_fu_1173_p2;
wire   [3:0] grp_fu_1182_p0;
wire   [4:0] grp_fu_1182_p1;
wire   [3:0] grp_fu_1182_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_1173_p00;
wire   [7:0] grp_fu_1173_p20;
wire   [7:0] grp_fu_1182_p00;
wire   [7:0] grp_fu_1182_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_2_conv_2_weifYi #(
    .DataWidth( 10 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
conv_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_address0),
    .ce0(conv_2_weights_V_ce0),
    .q0(conv_2_weights_V_q0)
);

conv_2_conv_2_biag8j #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_bias_V_address0),
    .ce0(conv_2_bias_V_ce0),
    .q0(conv_2_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_367_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_367_p2)
);

cnn_mac_muladd_4nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
cnn_mac_muladd_4nhbi_U12(
    .din0(grp_fu_1173_p0),
    .din1(grp_fu_1173_p1),
    .din2(grp_fu_1173_p2),
    .dout(grp_fu_1173_p3)
);

cnn_mac_muladd_4nhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
cnn_mac_muladd_4nhbi_U13(
    .din0(grp_fu_1182_p0),
    .din1(grp_fu_1182_p1),
    .din2(grp_fu_1182_p2),
    .dout(grp_fu_1182_p3)
);

cnn_mul_mul_10s_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 25 ))
cnn_mul_mul_10s_1ibs_U14(
    .din0(conv_2_weights_V_q0),
    .din1(input_V_q0),
    .dout(r_V_fu_1192_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        c_0_reg_267 <= select_ln37_3_reg_1224;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_267 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ch_0_reg_345 <= ch_fu_615_p2;
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ch_0_reg_345 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        f_0_reg_278 <= f_fu_1155_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_278 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten21_reg_289 <= add_ln18_1_fu_511_p2;
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten21_reg_289 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten29_reg_255 <= select_ln11_fu_1166_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten29_reg_255 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        indvar_flatten43_reg_233 <= add_ln8_reg_1203;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten43_reg_233 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_311 <= select_ln21_3_fu_627_p3;
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_311 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1247_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_15_reg_333 <= {{ret_V_fu_801_p2[21:8]}};
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_15_reg_333 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_0_reg_244 <= select_ln37_1_reg_1213;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_244 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wc_0_reg_322 <= select_ln21_1_reg_1270;
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wc_0_reg_322 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1247 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wr_0_reg_300 <= select_ln18_1_reg_1256;
    end else if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wr_0_reg_300 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_1203 <= add_ln8_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_out_V_addr_reg_1242 <= zext_ln203_12_fu_491_p1;
        icmp_ln11_reg_1208 <= icmp_ln11_fu_390_p2;
        select_ln37_1_reg_1213 <= select_ln37_1_fu_404_p3;
        select_ln37_2_reg_1219 <= select_ln37_2_fu_446_p3;
        select_ln37_3_reg_1224 <= select_ln37_3_fu_454_p3;
        zext_ln203_10_reg_1237[4 : 0] <= zext_ln203_10_fu_477_p1[4 : 0];
        zext_ln26_reg_1232[4 : 0] <= zext_ln26_fu_473_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln18_reg_1247 <= icmp_ln18_fu_505_p2;
        icmp_ln18_reg_1247_pp0_iter1_reg <= icmp_ln18_reg_1247;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln885_reg_1319 <= icmp_ln885_fu_827_p2;
        tmp_V_4_reg_1311 <= tmp_V_4_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln908_reg_1345 <= icmp_ln908_fu_996_p2;
        or_ln_reg_1340[0] <= or_ln_fu_988_p3[0];
        p_Result_24_reg_1323 <= tmp_V_4_reg_1311[32'd13];
        sub_ln894_reg_1334 <= sub_ln894_fu_878_p2;
        tmp_V_5_reg_1328 <= tmp_V_5_fu_845_p3;
        trunc_ln893_reg_1350 <= trunc_ln893_fu_1002_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln924_1_reg_1365 <= icmp_ln924_1_fu_1139_p2;
        icmp_ln924_reg_1360 <= icmp_ln924_fu_1133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_1_reg_1256 <= select_ln18_1_fu_537_p3;
        select_ln21_1_reg_1270 <= select_ln21_1_fu_587_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln21_2_reg_1276 <= select_ln21_2_fu_607_p3;
        select_ln21_reg_1264 <= select_ln21_fu_575_p3;
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_505_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln8_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        if (((icmp_ln885_reg_1319 == 1'd0) & (1'd1 == and_ln924_fu_1149_p2))) begin
            ap_phi_mux_storemerge_phi_fu_359_p4 = tmp_V_4_reg_1311;
        end else if (((1'd0 == and_ln924_fu_1149_p2) | (icmp_ln885_reg_1319 == 1'd1))) begin
            ap_phi_mux_storemerge_phi_fu_359_p4 = 14'd0;
        end else begin
            ap_phi_mux_storemerge_phi_fu_359_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_359_p4 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_1247 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_wc_0_phi_fu_326_p4 = select_ln21_1_reg_1270;
    end else begin
        ap_phi_mux_wc_0_phi_fu_326_p4 = wc_0_reg_322;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_1247 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_wr_0_phi_fu_304_p4 = select_ln18_1_reg_1256;
    end else begin
        ap_phi_mux_wr_0_phi_fu_304_p4 = wr_0_reg_300;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_2_bias_V_ce0 = 1'b1;
    end else begin
        conv_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln18_fu_505_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln18_fu_505_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln885_fu_827_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_942_p2 = (icmp_ln897_fu_904_p2 & icmp_ln897_1_fu_936_p2);

assign add_ln1116_1_fu_739_p2 = (zext_ln1116_2_fu_733_p1 + sub_ln1116_1_fu_700_p2);

assign add_ln1116_2_fu_753_p2 = (zext_ln203_10_reg_1237 + tmp_24_cast_fu_745_p3);

assign add_ln1116_fu_674_p2 = ($signed(zext_ln21_2_fu_671_p1) + $signed(sext_ln1116_fu_655_p1));

assign add_ln1117_1_fu_763_p2 = (zext_ln1116_3_fu_736_p1 + sub_ln1117_fu_727_p2);

assign add_ln11_1_fu_1160_p2 = (indvar_flatten29_reg_255 + 9'd1);

assign add_ln18_1_fu_511_p2 = (indvar_flatten21_reg_289 + 6'd1);

assign add_ln18_fu_662_p2 = (select_ln37_1_reg_1213 + zext_ln18_fu_659_p1);

assign add_ln203_6_fu_485_p2 = (zext_ln203_11_fu_481_p1 + tmp_17_cast_fu_466_p3);

assign add_ln21_fu_621_p2 = (indvar_flatten_reg_311 + 5'd1);

assign add_ln26_1_fu_595_p2 = (select_ln37_3_reg_1224 + zext_ln21_1_fu_583_p1);

assign add_ln26_fu_500_p2 = (select_ln37_3_reg_1224 + zext_ln21_fu_496_p1);

assign add_ln899_fu_962_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_884_p1));

assign add_ln8_fu_378_p2 = (indvar_flatten43_reg_233 + 11'd1);

assign add_ln908_fu_1012_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1334));

assign add_ln915_fu_1093_p2 = (sub_ln915_fu_1088_p2 + select_ln915_fu_1080_p3);

assign and_ln18_fu_557_p2 = (xor_ln18_fu_545_p2 & icmp_ln24_fu_551_p2);

assign and_ln37_fu_428_p2 = (xor_ln37_fu_416_p2 & icmp_ln14_fu_422_p2);

assign and_ln899_fu_976_p2 = (xor_ln899_fu_956_p2 & p_Result_22_fu_968_p3);

assign and_ln924_fu_1149_p2 = (or_ln924_fu_1145_p2 & grp_fu_367_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_434_p2 = (select_ln37_fu_396_p3 + 4'd1);

assign ch_fu_615_p2 = (select_ln21_fu_575_p3 + 3'd1);

assign conv_2_bias_V_address0 = zext_ln26_reg_1232;

assign conv_2_weights_V_address0 = zext_ln1116_4_fu_758_p1;

assign conv_out_V_address0 = conv_out_V_addr_reg_1242;

assign conv_out_V_d0 = ap_phi_mux_storemerge_phi_fu_359_p4;

assign f_fu_1155_p2 = (select_ln37_2_reg_1219 + 5'd1);

assign grp_fu_1173_p0 = grp_fu_1173_p00;

assign grp_fu_1173_p00 = select_ln37_1_fu_404_p3;

assign grp_fu_1173_p1 = 8'd11;

assign grp_fu_1173_p2 = grp_fu_1173_p20;

assign grp_fu_1173_p20 = select_ln37_3_fu_454_p3;

assign grp_fu_1182_p0 = grp_fu_1182_p00;

assign grp_fu_1182_p00 = add_ln18_fu_662_p2;

assign grp_fu_1182_p1 = 8'd13;

assign grp_fu_1182_p2 = grp_fu_1182_p20;

assign grp_fu_1182_p20 = select_ln21_2_reg_1276;

assign grp_fu_367_p0 = p_Result_26_fu_1106_p5;

assign icmp_ln11_fu_390_p2 = ((indvar_flatten29_reg_255 == 9'd176) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_422_p2 = ((f_0_reg_278 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_505_p2 = ((indvar_flatten21_reg_289 == 6'd54) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_523_p2 = ((indvar_flatten_reg_311 == 5'd18) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_551_p2 = ((ch_0_reg_345 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_827_p2 = ((tmp_V_4_fu_821_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_936_p2 = ((p_Result_21_fu_930_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_904_p2 = (($signed(tmp_8_fu_894_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_372_p2 = ((indvar_flatten43_reg_233 == 11'd1936) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_996_p2 = (($signed(lsb_index_fu_888_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_1139_p2 = ((trunc_ln4_fu_1123_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1133_p2 = ((add_ln915_fu_1093_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign input_V_address0 = zext_ln1117_3_fu_769_p1;


always @ (p_Result_25_fu_862_p3) begin
    if (p_Result_25_fu_862_p3[0] == 1'b1) begin
        l_fu_870_p3 = 32'd0;
    end else if (p_Result_25_fu_862_p3[1] == 1'b1) begin
        l_fu_870_p3 = 32'd1;
    end else if (p_Result_25_fu_862_p3[2] == 1'b1) begin
        l_fu_870_p3 = 32'd2;
    end else if (p_Result_25_fu_862_p3[3] == 1'b1) begin
        l_fu_870_p3 = 32'd3;
    end else if (p_Result_25_fu_862_p3[4] == 1'b1) begin
        l_fu_870_p3 = 32'd4;
    end else if (p_Result_25_fu_862_p3[5] == 1'b1) begin
        l_fu_870_p3 = 32'd5;
    end else if (p_Result_25_fu_862_p3[6] == 1'b1) begin
        l_fu_870_p3 = 32'd6;
    end else if (p_Result_25_fu_862_p3[7] == 1'b1) begin
        l_fu_870_p3 = 32'd7;
    end else if (p_Result_25_fu_862_p3[8] == 1'b1) begin
        l_fu_870_p3 = 32'd8;
    end else if (p_Result_25_fu_862_p3[9] == 1'b1) begin
        l_fu_870_p3 = 32'd9;
    end else if (p_Result_25_fu_862_p3[10] == 1'b1) begin
        l_fu_870_p3 = 32'd10;
    end else if (p_Result_25_fu_862_p3[11] == 1'b1) begin
        l_fu_870_p3 = 32'd11;
    end else if (p_Result_25_fu_862_p3[12] == 1'b1) begin
        l_fu_870_p3 = 32'd12;
    end else if (p_Result_25_fu_862_p3[13] == 1'b1) begin
        l_fu_870_p3 = 32'd13;
    end else if (p_Result_25_fu_862_p3[14] == 1'b1) begin
        l_fu_870_p3 = 32'd14;
    end else if (p_Result_25_fu_862_p3[15] == 1'b1) begin
        l_fu_870_p3 = 32'd15;
    end else if (p_Result_25_fu_862_p3[16] == 1'b1) begin
        l_fu_870_p3 = 32'd16;
    end else if (p_Result_25_fu_862_p3[17] == 1'b1) begin
        l_fu_870_p3 = 32'd17;
    end else if (p_Result_25_fu_862_p3[18] == 1'b1) begin
        l_fu_870_p3 = 32'd18;
    end else if (p_Result_25_fu_862_p3[19] == 1'b1) begin
        l_fu_870_p3 = 32'd19;
    end else if (p_Result_25_fu_862_p3[20] == 1'b1) begin
        l_fu_870_p3 = 32'd20;
    end else if (p_Result_25_fu_862_p3[21] == 1'b1) begin
        l_fu_870_p3 = 32'd21;
    end else if (p_Result_25_fu_862_p3[22] == 1'b1) begin
        l_fu_870_p3 = 32'd22;
    end else if (p_Result_25_fu_862_p3[23] == 1'b1) begin
        l_fu_870_p3 = 32'd23;
    end else if (p_Result_25_fu_862_p3[24] == 1'b1) begin
        l_fu_870_p3 = 32'd24;
    end else if (p_Result_25_fu_862_p3[25] == 1'b1) begin
        l_fu_870_p3 = 32'd25;
    end else if (p_Result_25_fu_862_p3[26] == 1'b1) begin
        l_fu_870_p3 = 32'd26;
    end else if (p_Result_25_fu_862_p3[27] == 1'b1) begin
        l_fu_870_p3 = 32'd27;
    end else if (p_Result_25_fu_862_p3[28] == 1'b1) begin
        l_fu_870_p3 = 32'd28;
    end else if (p_Result_25_fu_862_p3[29] == 1'b1) begin
        l_fu_870_p3 = 32'd29;
    end else if (p_Result_25_fu_862_p3[30] == 1'b1) begin
        l_fu_870_p3 = 32'd30;
    end else if (p_Result_25_fu_862_p3[31] == 1'b1) begin
        l_fu_870_p3 = 32'd31;
    end else begin
        l_fu_870_p3 = 32'd32;
    end
end

assign lhs_V_fu_785_p3 = {{p_Val2_15_reg_333}, {8'd0}};

assign lsb_index_fu_888_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_878_p2));

assign lshr_ln897_fu_924_p2 = 14'd16383 >> zext_ln897_fu_920_p1;

assign lshr_ln908_fu_1017_p2 = zext_ln907_1_fu_1009_p1 >> add_ln908_fu_1012_p2;

assign m_1_fu_1042_p3 = ((icmp_ln908_reg_1345[0:0] === 1'b1) ? zext_ln908_fu_1023_p1 : shl_ln908_fu_1036_p2);

assign m_2_fu_1052_p2 = (zext_ln911_fu_1049_p1 + m_1_fu_1042_p3);

assign m_5_fu_1058_p4 = {{m_2_fu_1052_p2[63:1]}};

assign m_6_fu_1068_p1 = m_5_fu_1058_p4;

assign m_fu_1006_p1 = tmp_V_5_reg_1328;

assign or_ln21_fu_569_p2 = (icmp_ln21_fu_523_p2 | and_ln18_fu_557_p2);

assign or_ln37_fu_440_p2 = (icmp_ln11_fu_390_p2 | and_ln37_fu_428_p2);

assign or_ln899_fu_982_p2 = (and_ln899_fu_976_p2 | a_fu_942_p2);

assign or_ln924_fu_1145_p2 = (icmp_ln924_reg_1360 | icmp_ln924_1_reg_1365);

assign or_ln_fu_988_p3 = {{31'd0}, {or_ln899_fu_982_p2}};

assign p_Result_21_fu_930_p2 = (tmp_V_5_fu_845_p3 & lshr_ln897_fu_924_p2);

assign p_Result_22_fu_968_p3 = tmp_V_5_fu_845_p3[add_ln899_fu_962_p2];

assign p_Result_24_fu_833_p3 = tmp_V_4_reg_1311[32'd13];

assign p_Result_25_fu_862_p3 = {{18'd262143}, {p_Result_s_fu_852_p4}};

assign p_Result_26_fu_1106_p5 = {{tmp_5_fu_1099_p3}, {m_6_fu_1068_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_845_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_852_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_852_p4[ap_tvar_int_0] = tmp_V_5_fu_845_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl_cast_fu_709_p3 = {{grp_fu_1182_p3}, {3'd0}};

assign p_shl_fu_684_p3 = {{trunc_ln1116_fu_680_p1}, {3'd0}};

assign r_fu_384_p2 = (r_0_reg_244 + 4'd1);

assign ret_V_fu_801_p2 = (zext_ln728_fu_793_p1 + zext_ln703_fu_797_p1);

assign select_ln11_fu_1166_p3 = ((icmp_ln11_reg_1208[0:0] === 1'b1) ? 9'd1 : add_ln11_1_fu_1160_p2);

assign select_ln18_1_fu_537_p3 = ((icmp_ln21_fu_523_p2[0:0] === 1'b1) ? wr_fu_517_p2 : ap_phi_mux_wr_0_phi_fu_304_p4);

assign select_ln18_2_fu_600_p3 = ((icmp_ln21_fu_523_p2[0:0] === 1'b1) ? select_ln37_3_reg_1224 : add_ln26_fu_500_p2);

assign select_ln18_fu_529_p3 = ((icmp_ln21_fu_523_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wc_0_phi_fu_326_p4);

assign select_ln21_1_fu_587_p3 = ((and_ln18_fu_557_p2[0:0] === 1'b1) ? wc_fu_563_p2 : select_ln18_fu_529_p3);

assign select_ln21_2_fu_607_p3 = ((and_ln18_fu_557_p2[0:0] === 1'b1) ? add_ln26_1_fu_595_p2 : select_ln18_2_fu_600_p3);

assign select_ln21_3_fu_627_p3 = ((icmp_ln21_fu_523_p2[0:0] === 1'b1) ? 5'd1 : add_ln21_fu_621_p2);

assign select_ln21_fu_575_p3 = ((or_ln21_fu_569_p2[0:0] === 1'b1) ? 3'd0 : ch_0_reg_345);

assign select_ln37_1_fu_404_p3 = ((icmp_ln11_fu_390_p2[0:0] === 1'b1) ? r_fu_384_p2 : r_0_reg_244);

assign select_ln37_2_fu_446_p3 = ((or_ln37_fu_440_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_278);

assign select_ln37_3_fu_454_p3 = ((and_ln37_fu_428_p2[0:0] === 1'b1) ? c_fu_434_p2 : select_ln37_fu_396_p3);

assign select_ln37_fu_396_p3 = ((icmp_ln11_fu_390_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_267);

assign select_ln915_fu_1080_p3 = ((tmp_10_fu_1072_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1116_fu_655_p1 = $signed(sub_ln1116_fu_649_p2);

assign sext_ln1118_1_fu_782_p1 = r_V_fu_1192_p2;

assign sext_ln1265_fu_817_p1 = $signed(conv_2_bias_V_q0);

assign shl_ln908_fu_1036_p2 = m_fu_1006_p1 << zext_ln908_1_fu_1032_p1;

assign sub_ln1116_1_fu_700_p2 = (p_shl_fu_684_p3 - tmp_fu_692_p3);

assign sub_ln1116_fu_649_p2 = (zext_ln1116_1_fu_645_p1 - zext_ln1116_fu_635_p1);

assign sub_ln1117_fu_727_p2 = (p_shl_cast_fu_709_p3 - zext_ln1117_2_fu_723_p1);

assign sub_ln894_fu_878_p2 = (32'd14 - l_fu_870_p3);

assign sub_ln897_fu_914_p2 = (4'd4 - trunc_ln897_fu_910_p1);

assign sub_ln908_fu_1027_p2 = (32'd54 - sub_ln894_reg_1334);

assign sub_ln915_fu_1088_p2 = (11'd6 - trunc_ln893_reg_1350);

assign tmp_10_fu_1072_p3 = m_2_fu_1052_p2[32'd54];

assign tmp_17_cast_fu_466_p3 = {{grp_fu_1173_p3}, {4'd0}};

assign tmp_1_fu_638_p3 = {{select_ln18_1_reg_1256}, {2'd0}};

assign tmp_24_cast_fu_745_p3 = {{add_ln1116_1_fu_739_p2}, {4'd0}};

assign tmp_5_fu_1099_p3 = {{p_Result_24_reg_1323}, {add_ln915_fu_1093_p2}};

assign tmp_6_fu_716_p3 = {{grp_fu_1182_p3}, {1'd0}};

assign tmp_8_fu_894_p4 = {{lsb_index_fu_888_p2[31:1]}};

assign tmp_9_fu_948_p3 = lsb_index_fu_888_p2[32'd31];

assign tmp_V_4_fu_821_p2 = ($signed(sext_ln1265_fu_817_p1) + $signed(p_Val2_15_reg_333));

assign tmp_V_5_fu_845_p3 = ((p_Result_24_fu_833_p3[0:0] === 1'b1) ? tmp_V_fu_840_p2 : tmp_V_4_reg_1311);

assign tmp_V_fu_840_p2 = (14'd0 - tmp_V_4_reg_1311);

assign tmp_fu_692_p3 = {{add_ln1116_fu_674_p2}, {1'd0}};

assign trunc_ln1116_fu_680_p1 = add_ln1116_fu_674_p2[3:0];

assign trunc_ln4_fu_1123_p4 = {{m_2_fu_1052_p2[52:1]}};

assign trunc_ln893_fu_1002_p1 = l_fu_870_p3[10:0];

assign trunc_ln894_fu_884_p1 = sub_ln894_fu_878_p2[13:0];

assign trunc_ln897_fu_910_p1 = sub_ln894_fu_878_p2[3:0];

assign wc_fu_563_p2 = (select_ln18_fu_529_p3 + 2'd1);

assign wr_fu_517_p2 = (ap_phi_mux_wr_0_phi_fu_304_p4 + 2'd1);

assign xor_ln18_fu_545_p2 = (icmp_ln21_fu_523_p2 ^ 1'd1);

assign xor_ln37_fu_416_p2 = (icmp_ln11_fu_390_p2 ^ 1'd1);

assign xor_ln899_fu_956_p2 = (tmp_9_fu_948_p3 ^ 1'd1);

assign zext_ln1116_1_fu_645_p1 = tmp_1_fu_638_p3;

assign zext_ln1116_2_fu_733_p1 = select_ln21_reg_1264;

assign zext_ln1116_3_fu_736_p1 = select_ln21_reg_1264;

assign zext_ln1116_4_fu_758_p1 = add_ln1116_2_fu_753_p2;

assign zext_ln1116_fu_635_p1 = select_ln18_1_reg_1256;

assign zext_ln1117_2_fu_723_p1 = tmp_6_fu_716_p3;

assign zext_ln1117_3_fu_769_p1 = add_ln1117_1_fu_763_p2;

assign zext_ln18_fu_659_p1 = select_ln18_1_reg_1256;

assign zext_ln203_10_fu_477_p1 = select_ln37_2_fu_446_p3;

assign zext_ln203_11_fu_481_p1 = select_ln37_2_fu_446_p3;

assign zext_ln203_12_fu_491_p1 = add_ln203_6_fu_485_p2;

assign zext_ln21_1_fu_583_p1 = wc_fu_563_p2;

assign zext_ln21_2_fu_671_p1 = select_ln21_1_reg_1270;

assign zext_ln21_fu_496_p1 = ap_phi_mux_wc_0_phi_fu_326_p4;

assign zext_ln26_fu_473_p1 = select_ln37_2_fu_446_p3;

assign zext_ln703_fu_797_p1 = $unsigned(sext_ln1118_1_fu_782_p1);

assign zext_ln728_fu_793_p1 = lhs_V_fu_785_p3;

assign zext_ln897_fu_920_p1 = sub_ln897_fu_914_p2;

assign zext_ln907_1_fu_1009_p1 = tmp_V_5_reg_1328;

assign zext_ln908_1_fu_1032_p1 = sub_ln908_fu_1027_p2;

assign zext_ln908_fu_1023_p1 = lshr_ln908_fu_1017_p2;

assign zext_ln911_fu_1049_p1 = or_ln_reg_1340;

always @ (posedge ap_clk) begin
    zext_ln26_reg_1232[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln203_10_reg_1237[10:5] <= 6'b000000;
    or_ln_reg_1340[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_2
