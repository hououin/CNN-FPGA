// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_out_HH_
#define _dense_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "cnn_mac_muladd_13vdy.h"
#include "dense_out_dense_osc4.h"
#include "dense_out_dense_otde.h"
#include "dense_out_dense_audo.h"

namespace ap_rtl {

struct dense_out : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > dense_2_out_V_address0;
    sc_out< sc_logic > dense_2_out_V_ce0;
    sc_in< sc_lv<13> > dense_2_out_V_q0;
    sc_out< sc_lv<4> > prediction_V_address0;
    sc_out< sc_logic > prediction_V_ce0;
    sc_out< sc_logic > prediction_V_we0;
    sc_out< sc_lv<14> > prediction_V_d0;


    // Module declarations
    dense_out(sc_module_name name);
    SC_HAS_PROCESS(dense_out);

    ~dense_out();

    sc_trace_file* mVcdFile;

    dense_out_dense_osc4* dense_out_bias_V_U;
    dense_out_dense_otde* dense_out_weights_V_U;
    dense_out_dense_audo* dense_array_V_U;
    soft_max* grp_soft_max_fu_180;
    cnn_mac_muladd_13vdy<1,1,13,9,22,22>* cnn_mac_muladd_13vdy_U42;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > dense_out_bias_V_address0;
    sc_signal< sc_logic > dense_out_bias_V_ce0;
    sc_signal< sc_lv<8> > dense_out_bias_V_q0;
    sc_signal< sc_lv<9> > dense_out_weights_V_address0;
    sc_signal< sc_logic > dense_out_weights_V_ce0;
    sc_signal< sc_lv<9> > dense_out_weights_V_q0;
    sc_signal< sc_lv<9> > indvar_flatten_reg_135;
    sc_signal< sc_lv<4> > d_0_reg_146;
    sc_signal< sc_lv<14> > p_Val2_s_reg_157;
    sc_signal< sc_lv<5> > f_0_reg_169;
    sc_signal< sc_lv<1> > icmp_ln41_fu_193_p2;
    sc_signal< sc_lv<1> > icmp_ln41_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > add_ln41_fu_199_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln46_fu_211_p2;
    sc_signal< sc_lv<1> > icmp_ln46_reg_361;
    sc_signal< sc_lv<4> > select_ln48_1_fu_225_p3;
    sc_signal< sc_lv<4> > select_ln48_1_reg_366;
    sc_signal< sc_lv<64> > zext_ln48_fu_233_p1;
    sc_signal< sc_lv<64> > zext_ln48_reg_371;
    sc_signal< sc_lv<5> > f_fu_288_p2;
    sc_signal< sc_lv<5> > f_reg_386;
    sc_signal< sc_lv<1> > icmp_ln46_1_fu_294_p2;
    sc_signal< sc_lv<1> > icmp_ln46_1_reg_391;
    sc_signal< sc_lv<14> > w_sum_V_fu_323_p4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<4> > dense_array_V_address0;
    sc_signal< sc_logic > dense_array_V_ce0;
    sc_signal< sc_logic > dense_array_V_we0;
    sc_signal< sc_lv<14> > dense_array_V_d0;
    sc_signal< sc_lv<14> > dense_array_V_q0;
    sc_signal< sc_logic > dense_array_V_ce1;
    sc_signal< sc_logic > dense_array_V_we1;
    sc_signal< sc_lv<14> > dense_array_V_q1;
    sc_signal< sc_logic > grp_soft_max_fu_180_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_180_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_180_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_180_ap_ready;
    sc_signal< sc_lv<4> > grp_soft_max_fu_180_dense_array_V_address0;
    sc_signal< sc_logic > grp_soft_max_fu_180_dense_array_V_ce0;
    sc_signal< sc_lv<4> > grp_soft_max_fu_180_dense_array_V_address1;
    sc_signal< sc_logic > grp_soft_max_fu_180_dense_array_V_ce1;
    sc_signal< sc_logic > grp_soft_max_fu_180_dense_array_V_we1;
    sc_signal< sc_lv<14> > grp_soft_max_fu_180_dense_array_V_d1;
    sc_signal< sc_lv<4> > grp_soft_max_fu_180_prediction_V_address0;
    sc_signal< sc_logic > grp_soft_max_fu_180_prediction_V_ce0;
    sc_signal< sc_logic > grp_soft_max_fu_180_prediction_V_we0;
    sc_signal< sc_lv<14> > grp_soft_max_fu_180_prediction_V_d0;
    sc_signal< sc_lv<4> > ap_phi_mux_d_0_phi_fu_150_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > ap_phi_mux_f_0_phi_fu_173_p4;
    sc_signal< sc_logic > grp_soft_max_fu_180_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > zext_ln1116_2_fu_283_p1;
    sc_signal< sc_lv<64> > zext_ln48_1_fu_242_p1;
    sc_signal< sc_lv<4> > d_fu_205_p2;
    sc_signal< sc_lv<5> > select_ln48_fu_217_p3;
    sc_signal< sc_lv<8> > tmp_fu_247_p3;
    sc_signal< sc_lv<6> > tmp_1_fu_259_p3;
    sc_signal< sc_lv<9> > zext_ln1116_1_fu_267_p1;
    sc_signal< sc_lv<9> > zext_ln1116_fu_255_p1;
    sc_signal< sc_lv<9> > add_ln1116_fu_271_p2;
    sc_signal< sc_lv<9> > zext_ln47_fu_238_p1;
    sc_signal< sc_lv<9> > add_ln1116_1_fu_277_p2;
    sc_signal< sc_lv<14> > select_ln48_2_fu_308_p3;
    sc_signal< sc_lv<22> > grp_fu_343_p3;
    sc_signal< sc_lv<14> > sext_ln1265_fu_332_p1;
    sc_signal< sc_lv<13> > grp_fu_343_p0;
    sc_signal< sc_lv<22> > grp_fu_343_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<22> > grp_fu_343_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_12C;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1116_1_fu_277_p2();
    void thread_add_ln1116_fu_271_p2();
    void thread_add_ln41_fu_199_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_d_0_phi_fu_150_p4();
    void thread_ap_phi_mux_f_0_phi_fu_173_p4();
    void thread_ap_ready();
    void thread_d_fu_205_p2();
    void thread_dense_2_out_V_address0();
    void thread_dense_2_out_V_ce0();
    void thread_dense_array_V_address0();
    void thread_dense_array_V_ce0();
    void thread_dense_array_V_ce1();
    void thread_dense_array_V_d0();
    void thread_dense_array_V_we0();
    void thread_dense_array_V_we1();
    void thread_dense_out_bias_V_address0();
    void thread_dense_out_bias_V_ce0();
    void thread_dense_out_weights_V_address0();
    void thread_dense_out_weights_V_ce0();
    void thread_f_fu_288_p2();
    void thread_grp_fu_343_p0();
    void thread_grp_fu_343_p00();
    void thread_grp_fu_343_p2();
    void thread_grp_soft_max_fu_180_ap_start();
    void thread_icmp_ln41_fu_193_p2();
    void thread_icmp_ln46_1_fu_294_p2();
    void thread_icmp_ln46_fu_211_p2();
    void thread_prediction_V_address0();
    void thread_prediction_V_ce0();
    void thread_prediction_V_d0();
    void thread_prediction_V_we0();
    void thread_select_ln48_1_fu_225_p3();
    void thread_select_ln48_2_fu_308_p3();
    void thread_select_ln48_fu_217_p3();
    void thread_sext_ln1265_fu_332_p1();
    void thread_tmp_1_fu_259_p3();
    void thread_tmp_fu_247_p3();
    void thread_w_sum_V_fu_323_p4();
    void thread_zext_ln1116_1_fu_267_p1();
    void thread_zext_ln1116_2_fu_283_p1();
    void thread_zext_ln1116_fu_255_p1();
    void thread_zext_ln47_fu_238_p1();
    void thread_zext_ln48_1_fu_242_p1();
    void thread_zext_ln48_fu_233_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
