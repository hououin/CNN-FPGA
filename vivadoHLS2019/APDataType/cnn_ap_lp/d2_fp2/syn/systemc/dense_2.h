// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_2_HH_
#define _dense_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_9sncg.h"
#include "dense_2_dense_2_blbW.h"
#include "dense_2_dense_2_wmb6.h"

namespace ap_rtl {

struct dense_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > dense_1_out_V_address0;
    sc_out< sc_logic > dense_1_out_V_ce0;
    sc_in< sc_lv<13> > dense_1_out_V_q0;
    sc_out< sc_lv<5> > dense_2_out_V_address0;
    sc_out< sc_logic > dense_2_out_V_ce0;
    sc_out< sc_logic > dense_2_out_V_we0;
    sc_out< sc_lv<13> > dense_2_out_V_d0;


    // Module declarations
    dense_2(sc_module_name name);
    SC_HAS_PROCESS(dense_2);

    ~dense_2();

    sc_trace_file* mVcdFile;

    dense_2_dense_2_blbW* dense_2_bias_V_U;
    dense_2_dense_2_wmb6* dense_2_weights_V_U;
    cnn_mac_muladd_9sncg<1,1,9,13,22,22>* cnn_mac_muladd_9sncg_U28;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > dense_2_bias_V_address0;
    sc_signal< sc_logic > dense_2_bias_V_ce0;
    sc_signal< sc_lv<9> > dense_2_bias_V_q0;
    sc_signal< sc_lv<11> > dense_2_weights_V_address0;
    sc_signal< sc_logic > dense_2_weights_V_ce0;
    sc_signal< sc_lv<9> > dense_2_weights_V_q0;
    sc_signal< sc_lv<11> > indvar_flatten_reg_130;
    sc_signal< sc_lv<5> > i_0_reg_141;
    sc_signal< sc_lv<14> > p_Val2_s_reg_152;
    sc_signal< sc_lv<6> > j_0_reg_164;
    sc_signal< sc_lv<1> > icmp_ln9_fu_175_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_370;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > add_ln9_fu_181_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_193_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_379;
    sc_signal< sc_lv<5> > select_ln14_1_fu_207_p3;
    sc_signal< sc_lv<5> > select_ln14_1_reg_384;
    sc_signal< sc_lv<64> > zext_ln14_fu_215_p1;
    sc_signal< sc_lv<64> > zext_ln14_reg_389;
    sc_signal< sc_lv<6> > j_fu_270_p2;
    sc_signal< sc_lv<6> > j_reg_404;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_276_p2;
    sc_signal< sc_lv<1> > icmp_ln13_1_reg_409;
    sc_signal< sc_lv<14> > sum_V_fu_305_p4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<5> > ap_phi_mux_i_0_phi_fu_145_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<6> > ap_phi_mux_j_0_phi_fu_168_p4;
    sc_signal< sc_lv<64> > sext_ln1117_fu_265_p1;
    sc_signal< sc_lv<64> > zext_ln14_1_fu_224_p1;
    sc_signal< sc_lv<5> > i_fu_187_p2;
    sc_signal< sc_lv<6> > select_ln14_fu_199_p3;
    sc_signal< sc_lv<11> > tmp_fu_229_p3;
    sc_signal< sc_lv<7> > tmp_s_fu_241_p3;
    sc_signal< sc_lv<12> > zext_ln1117_fu_237_p1;
    sc_signal< sc_lv<12> > zext_ln1117_1_fu_249_p1;
    sc_signal< sc_lv<12> > sub_ln1117_fu_253_p2;
    sc_signal< sc_lv<12> > zext_ln13_fu_220_p1;
    sc_signal< sc_lv<12> > add_ln1117_fu_259_p2;
    sc_signal< sc_lv<14> > select_ln14_2_fu_290_p3;
    sc_signal< sc_lv<22> > grp_fu_360_p3;
    sc_signal< sc_lv<9> > sext_ln1265_fu_314_p0;
    sc_signal< sc_lv<9> > sext_ln703_fu_327_p0;
    sc_signal< sc_lv<14> > sext_ln1265_fu_314_p1;
    sc_signal< sc_lv<13> > trunc_ln_fu_318_p4;
    sc_signal< sc_lv<13> > sext_ln703_fu_327_p1;
    sc_signal< sc_lv<14> > add_ln703_fu_331_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_343_p3;
    sc_signal< sc_lv<13> > add_ln203_fu_337_p2;
    sc_signal< sc_lv<13> > grp_fu_360_p1;
    sc_signal< sc_lv<22> > grp_fu_360_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<22> > grp_fu_360_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<11> ap_const_lv11_5DC;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1117_fu_259_p2();
    void thread_add_ln203_fu_337_p2();
    void thread_add_ln703_fu_331_p2();
    void thread_add_ln9_fu_181_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_145_p4();
    void thread_ap_phi_mux_j_0_phi_fu_168_p4();
    void thread_ap_ready();
    void thread_dense_1_out_V_address0();
    void thread_dense_1_out_V_ce0();
    void thread_dense_2_bias_V_address0();
    void thread_dense_2_bias_V_ce0();
    void thread_dense_2_out_V_address0();
    void thread_dense_2_out_V_ce0();
    void thread_dense_2_out_V_d0();
    void thread_dense_2_out_V_we0();
    void thread_dense_2_weights_V_address0();
    void thread_dense_2_weights_V_ce0();
    void thread_grp_fu_360_p1();
    void thread_grp_fu_360_p10();
    void thread_grp_fu_360_p2();
    void thread_i_fu_187_p2();
    void thread_icmp_ln13_1_fu_276_p2();
    void thread_icmp_ln13_fu_193_p2();
    void thread_icmp_ln9_fu_175_p2();
    void thread_j_fu_270_p2();
    void thread_select_ln14_1_fu_207_p3();
    void thread_select_ln14_2_fu_290_p3();
    void thread_select_ln14_fu_199_p3();
    void thread_sext_ln1117_fu_265_p1();
    void thread_sext_ln1265_fu_314_p0();
    void thread_sext_ln1265_fu_314_p1();
    void thread_sext_ln703_fu_327_p0();
    void thread_sext_ln703_fu_327_p1();
    void thread_sub_ln1117_fu_253_p2();
    void thread_sum_V_fu_305_p4();
    void thread_tmp_6_fu_343_p3();
    void thread_tmp_fu_229_p3();
    void thread_tmp_s_fu_241_p3();
    void thread_trunc_ln_fu_318_p4();
    void thread_zext_ln1117_1_fu_249_p1();
    void thread_zext_ln1117_fu_237_p1();
    void thread_zext_ln13_fu_220_p1();
    void thread_zext_ln14_1_fu_224_p1();
    void thread_zext_ln14_fu_215_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
