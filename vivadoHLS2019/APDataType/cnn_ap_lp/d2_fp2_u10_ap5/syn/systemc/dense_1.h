// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_1_HH_
#define _dense_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_9skbM.h"
#include "dense_1_dense_1_wibs.h"
#include "dense_1_dense_1_bjbC.h"

namespace ap_rtl {

struct dense_1 : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > flat_array_V_address0;
    sc_out< sc_logic > flat_array_V_ce0;
    sc_in< sc_lv<14> > flat_array_V_q0;
    sc_out< sc_lv<4> > dense_1_out_0_V_address0;
    sc_out< sc_logic > dense_1_out_0_V_ce0;
    sc_out< sc_logic > dense_1_out_0_V_we0;
    sc_out< sc_lv<13> > dense_1_out_0_V_d0;
    sc_out< sc_lv<4> > dense_1_out_1_V_address0;
    sc_out< sc_logic > dense_1_out_1_V_ce0;
    sc_out< sc_logic > dense_1_out_1_V_we0;
    sc_out< sc_lv<13> > dense_1_out_1_V_d0;
    sc_out< sc_lv<4> > dense_1_out_2_V_address0;
    sc_out< sc_logic > dense_1_out_2_V_ce0;
    sc_out< sc_logic > dense_1_out_2_V_we0;
    sc_out< sc_lv<13> > dense_1_out_2_V_d0;
    sc_out< sc_lv<4> > dense_1_out_3_V_address0;
    sc_out< sc_logic > dense_1_out_3_V_ce0;
    sc_out< sc_logic > dense_1_out_3_V_we0;
    sc_out< sc_lv<13> > dense_1_out_3_V_d0;
    sc_out< sc_lv<4> > dense_1_out_4_V_address0;
    sc_out< sc_logic > dense_1_out_4_V_ce0;
    sc_out< sc_logic > dense_1_out_4_V_we0;
    sc_out< sc_lv<13> > dense_1_out_4_V_d0;


    // Module declarations
    dense_1(sc_module_name name);
    SC_HAS_PROCESS(dense_1);

    ~dense_1();

    sc_trace_file* mVcdFile;

    dense_1_dense_1_wibs* dense_1_weights_V_U;
    dense_1_dense_1_bjbC* dense_1_bias_V_U;
    cnn_mac_muladd_9skbM<1,1,9,14,22,22>* cnn_mac_muladd_9skbM_U22;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > dense_1_weights_V_address0;
    sc_signal< sc_logic > dense_1_weights_V_ce0;
    sc_signal< sc_lv<9> > dense_1_weights_V_q0;
    sc_signal< sc_lv<6> > dense_1_bias_V_address0;
    sc_signal< sc_logic > dense_1_bias_V_ce0;
    sc_signal< sc_lv<6> > dense_1_bias_V_q0;
    sc_signal< sc_lv<13> > add_ln9_fu_259_p2;
    sc_signal< sc_lv<13> > add_ln9_reg_439;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > i_fu_271_p2;
    sc_signal< sc_lv<6> > i_reg_447;
    sc_signal< sc_lv<64> > zext_ln14_fu_277_p1;
    sc_signal< sc_lv<64> > zext_ln14_reg_452;
    sc_signal< sc_lv<1> > icmp_ln9_fu_265_p2;
    sc_signal< sc_lv<15> > zext_ln13_fu_281_p1;
    sc_signal< sc_lv<15> > zext_ln13_reg_457;
    sc_signal< sc_lv<9> > j_fu_291_p2;
    sc_signal< sc_lv<9> > j_reg_465;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > add_ln1117_10_fu_302_p2;
    sc_signal< sc_lv<15> > add_ln1117_10_reg_470;
    sc_signal< sc_lv<1> > icmp_ln13_fu_285_p2;
    sc_signal< sc_lv<4> > tmp_7_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > select_ln22_fu_422_p3;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > i_0_reg_190;
    sc_signal< sc_lv<13> > phi_mul1_reg_201;
    sc_signal< sc_lv<6> > phi_urem_reg_213;
    sc_signal< sc_lv<14> > p_Val2_s_reg_225;
    sc_signal< sc_lv<9> > j_0_reg_237;
    sc_signal< sc_lv<15> > phi_mul_reg_248;
    sc_signal< sc_lv<64> > zext_ln1117_fu_313_p1;
    sc_signal< sc_lv<64> > zext_ln14_1_fu_297_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_381_p1;
    sc_signal< sc_lv<4> > trunc_ln203_fu_377_p1;
    sc_signal< sc_lv<13> > select_ln19_fu_397_p3;
    sc_signal< sc_lv<15> > add_ln1117_fu_308_p2;
    sc_signal< sc_lv<22> > grp_fu_430_p3;
    sc_signal< sc_lv<6> > sext_ln1265_fu_353_p0;
    sc_signal< sc_lv<6> > sext_ln703_fu_361_p0;
    sc_signal< sc_lv<14> > sext_ln1265_fu_353_p1;
    sc_signal< sc_lv<13> > sext_ln703_fu_361_p1;
    sc_signal< sc_lv<13> > trunc_ln703_fu_357_p1;
    sc_signal< sc_lv<14> > add_ln703_fu_365_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_389_p3;
    sc_signal< sc_lv<13> > add_ln203_fu_371_p2;
    sc_signal< sc_lv<6> > add_ln22_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_416_p2;
    sc_signal< sc_lv<22> > grp_fu_430_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<13> ap_const_lv13_67;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<15> ap_const_lv15_32;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<6> ap_const_lv6_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1117_10_fu_302_p2();
    void thread_add_ln1117_fu_308_p2();
    void thread_add_ln203_fu_371_p2();
    void thread_add_ln22_fu_410_p2();
    void thread_add_ln703_fu_365_p2();
    void thread_add_ln9_fu_259_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dense_1_bias_V_address0();
    void thread_dense_1_bias_V_ce0();
    void thread_dense_1_out_0_V_address0();
    void thread_dense_1_out_0_V_ce0();
    void thread_dense_1_out_0_V_d0();
    void thread_dense_1_out_0_V_we0();
    void thread_dense_1_out_1_V_address0();
    void thread_dense_1_out_1_V_ce0();
    void thread_dense_1_out_1_V_d0();
    void thread_dense_1_out_1_V_we0();
    void thread_dense_1_out_2_V_address0();
    void thread_dense_1_out_2_V_ce0();
    void thread_dense_1_out_2_V_d0();
    void thread_dense_1_out_2_V_we0();
    void thread_dense_1_out_3_V_address0();
    void thread_dense_1_out_3_V_ce0();
    void thread_dense_1_out_3_V_d0();
    void thread_dense_1_out_3_V_we0();
    void thread_dense_1_out_4_V_address0();
    void thread_dense_1_out_4_V_ce0();
    void thread_dense_1_out_4_V_d0();
    void thread_dense_1_out_4_V_we0();
    void thread_dense_1_weights_V_address0();
    void thread_dense_1_weights_V_ce0();
    void thread_flat_array_V_address0();
    void thread_flat_array_V_ce0();
    void thread_grp_fu_430_p2();
    void thread_i_fu_271_p2();
    void thread_icmp_ln13_fu_285_p2();
    void thread_icmp_ln22_fu_416_p2();
    void thread_icmp_ln9_fu_265_p2();
    void thread_j_fu_291_p2();
    void thread_select_ln19_fu_397_p3();
    void thread_select_ln22_fu_422_p3();
    void thread_sext_ln1265_fu_353_p0();
    void thread_sext_ln1265_fu_353_p1();
    void thread_sext_ln703_fu_361_p0();
    void thread_sext_ln703_fu_361_p1();
    void thread_tmp_8_fu_389_p3();
    void thread_trunc_ln203_fu_377_p1();
    void thread_trunc_ln703_fu_357_p1();
    void thread_zext_ln1117_fu_313_p1();
    void thread_zext_ln13_fu_281_p1();
    void thread_zext_ln14_1_fu_297_p1();
    void thread_zext_ln14_fu_277_p1();
    void thread_zext_ln203_fu_381_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
