// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dense_1::ap_ST_fsm_state1 = "1";
const sc_lv<5> dense_1::ap_ST_fsm_state2 = "10";
const sc_lv<5> dense_1::ap_ST_fsm_state3 = "100";
const sc_lv<5> dense_1::ap_ST_fsm_state4 = "1000";
const sc_lv<5> dense_1::ap_ST_fsm_state5 = "10000";
const sc_lv<32> dense_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_1::ap_const_lv32_1 = "1";
const sc_lv<1> dense_1::ap_const_lv1_0 = "0";
const sc_lv<32> dense_1::ap_const_lv32_2 = "10";
const sc_lv<1> dense_1::ap_const_lv1_1 = "1";
const sc_lv<32> dense_1::ap_const_lv32_3 = "11";
const sc_lv<32> dense_1::ap_const_lv32_4 = "100";
const sc_lv<6> dense_1::ap_const_lv6_0 = "000000";
const sc_lv<13> dense_1::ap_const_lv13_0 = "0000000000000";
const sc_lv<14> dense_1::ap_const_lv14_0 = "00000000000000";
const sc_lv<9> dense_1::ap_const_lv9_0 = "000000000";
const sc_lv<15> dense_1::ap_const_lv15_0 = "000000000000000";
const sc_lv<4> dense_1::ap_const_lv4_3 = "11";
const sc_lv<4> dense_1::ap_const_lv4_2 = "10";
const sc_lv<4> dense_1::ap_const_lv4_1 = "1";
const sc_lv<4> dense_1::ap_const_lv4_0 = "0000";
const sc_lv<13> dense_1::ap_const_lv13_67 = "1100111";
const sc_lv<6> dense_1::ap_const_lv6_32 = "110010";
const sc_lv<6> dense_1::ap_const_lv6_1 = "1";
const sc_lv<9> dense_1::ap_const_lv9_190 = "110010000";
const sc_lv<9> dense_1::ap_const_lv9_1 = "1";
const sc_lv<15> dense_1::ap_const_lv15_32 = "110010";
const sc_lv<32> dense_1::ap_const_lv32_9 = "1001";
const sc_lv<32> dense_1::ap_const_lv32_C = "1100";
const sc_lv<8> dense_1::ap_const_lv8_0 = "00000000";
const sc_lv<32> dense_1::ap_const_lv32_8 = "1000";
const sc_lv<32> dense_1::ap_const_lv32_15 = "10101";
const sc_lv<32> dense_1::ap_const_lv32_D = "1101";
const sc_lv<6> dense_1::ap_const_lv6_5 = "101";
const bool dense_1::ap_const_boolean_1 = true;

dense_1::dense_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_1_weights_V_U = new dense_1_dense_1_wibs("dense_1_weights_V_U");
    dense_1_weights_V_U->clk(ap_clk);
    dense_1_weights_V_U->reset(ap_rst);
    dense_1_weights_V_U->address0(dense_1_weights_V_address0);
    dense_1_weights_V_U->ce0(dense_1_weights_V_ce0);
    dense_1_weights_V_U->q0(dense_1_weights_V_q0);
    dense_1_bias_V_U = new dense_1_dense_1_bjbC("dense_1_bias_V_U");
    dense_1_bias_V_U->clk(ap_clk);
    dense_1_bias_V_U->reset(ap_rst);
    dense_1_bias_V_U->address0(dense_1_bias_V_address0);
    dense_1_bias_V_U->ce0(dense_1_bias_V_ce0);
    dense_1_bias_V_U->q0(dense_1_bias_V_q0);
    cnn_mac_muladd_9skbM_U22 = new cnn_mac_muladd_9skbM<1,1,9,14,22,22>("cnn_mac_muladd_9skbM_U22");
    cnn_mac_muladd_9skbM_U22->din0(dense_1_weights_V_q0);
    cnn_mac_muladd_9skbM_U22->din1(flat_array_V_q0);
    cnn_mac_muladd_9skbM_U22->din2(grp_fu_430_p2);
    cnn_mac_muladd_9skbM_U22->dout(grp_fu_430_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1117_10_fu_302_p2);
    sensitive << ( phi_mul_reg_248 );

    SC_METHOD(thread_add_ln1117_fu_308_p2);
    sensitive << ( zext_ln13_reg_457 );
    sensitive << ( phi_mul_reg_248 );

    SC_METHOD(thread_add_ln203_fu_371_p2);
    sensitive << ( sext_ln703_fu_361_p1 );
    sensitive << ( trunc_ln703_fu_357_p1 );

    SC_METHOD(thread_add_ln22_fu_410_p2);
    sensitive << ( phi_urem_reg_213 );

    SC_METHOD(thread_add_ln703_fu_365_p2);
    sensitive << ( p_Val2_s_reg_225 );
    sensitive << ( sext_ln1265_fu_353_p1 );

    SC_METHOD(thread_add_ln9_fu_259_p2);
    sensitive << ( phi_mul1_reg_201 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_265_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_265_p2 );

    SC_METHOD(thread_dense_1_bias_V_address0);
    sensitive << ( zext_ln14_reg_452 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_1_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_1_out_0_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_fu_381_p1 );

    SC_METHOD(thread_dense_1_out_0_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_1_out_0_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln19_fu_397_p3 );

    SC_METHOD(thread_dense_1_out_0_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_fu_377_p1 );

    SC_METHOD(thread_dense_1_out_1_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_fu_381_p1 );

    SC_METHOD(thread_dense_1_out_1_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_1_out_1_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln19_fu_397_p3 );

    SC_METHOD(thread_dense_1_out_1_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_fu_377_p1 );

    SC_METHOD(thread_dense_1_out_2_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_fu_381_p1 );

    SC_METHOD(thread_dense_1_out_2_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_1_out_2_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln19_fu_397_p3 );

    SC_METHOD(thread_dense_1_out_2_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_fu_377_p1 );

    SC_METHOD(thread_dense_1_out_3_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_fu_381_p1 );

    SC_METHOD(thread_dense_1_out_3_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_1_out_3_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln19_fu_397_p3 );

    SC_METHOD(thread_dense_1_out_3_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_fu_377_p1 );

    SC_METHOD(thread_dense_1_out_4_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln203_fu_381_p1 );

    SC_METHOD(thread_dense_1_out_4_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_1_out_4_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( select_ln19_fu_397_p3 );

    SC_METHOD(thread_dense_1_out_4_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln203_fu_377_p1 );

    SC_METHOD(thread_dense_1_weights_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1117_fu_313_p1 );

    SC_METHOD(thread_dense_1_weights_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_flat_array_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln14_1_fu_297_p1 );

    SC_METHOD(thread_flat_array_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_430_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_s_reg_225 );

    SC_METHOD(thread_i_fu_271_p2);
    sensitive << ( i_0_reg_190 );

    SC_METHOD(thread_icmp_ln13_fu_285_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_237 );

    SC_METHOD(thread_icmp_ln22_fu_416_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( add_ln22_fu_410_p2 );

    SC_METHOD(thread_icmp_ln9_fu_265_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_190 );

    SC_METHOD(thread_j_fu_291_p2);
    sensitive << ( j_0_reg_237 );

    SC_METHOD(thread_select_ln19_fu_397_p3);
    sensitive << ( tmp_8_fu_389_p3 );
    sensitive << ( add_ln203_fu_371_p2 );

    SC_METHOD(thread_select_ln22_fu_422_p3);
    sensitive << ( add_ln22_fu_410_p2 );
    sensitive << ( icmp_ln22_fu_416_p2 );

    SC_METHOD(thread_sext_ln1265_fu_353_p0);
    sensitive << ( dense_1_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln1265_fu_353_p1);
    sensitive << ( sext_ln1265_fu_353_p0 );

    SC_METHOD(thread_sext_ln703_fu_361_p0);
    sensitive << ( dense_1_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln703_fu_361_p1);
    sensitive << ( sext_ln703_fu_361_p0 );

    SC_METHOD(thread_tmp_8_fu_389_p3);
    sensitive << ( add_ln703_fu_365_p2 );

    SC_METHOD(thread_trunc_ln203_fu_377_p1);
    sensitive << ( phi_urem_reg_213 );

    SC_METHOD(thread_trunc_ln703_fu_357_p1);
    sensitive << ( p_Val2_s_reg_225 );

    SC_METHOD(thread_zext_ln1117_fu_313_p1);
    sensitive << ( add_ln1117_fu_308_p2 );

    SC_METHOD(thread_zext_ln13_fu_281_p1);
    sensitive << ( i_0_reg_190 );

    SC_METHOD(thread_zext_ln14_1_fu_297_p1);
    sensitive << ( j_0_reg_237 );

    SC_METHOD(thread_zext_ln14_fu_277_p1);
    sensitive << ( i_0_reg_190 );

    SC_METHOD(thread_zext_ln203_fu_381_p1);
    sensitive << ( tmp_7_reg_490 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_265_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_285_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flat_array_V_address0, "(port)flat_array_V_address0");
    sc_trace(mVcdFile, flat_array_V_ce0, "(port)flat_array_V_ce0");
    sc_trace(mVcdFile, flat_array_V_q0, "(port)flat_array_V_q0");
    sc_trace(mVcdFile, dense_1_out_0_V_address0, "(port)dense_1_out_0_V_address0");
    sc_trace(mVcdFile, dense_1_out_0_V_ce0, "(port)dense_1_out_0_V_ce0");
    sc_trace(mVcdFile, dense_1_out_0_V_we0, "(port)dense_1_out_0_V_we0");
    sc_trace(mVcdFile, dense_1_out_0_V_d0, "(port)dense_1_out_0_V_d0");
    sc_trace(mVcdFile, dense_1_out_1_V_address0, "(port)dense_1_out_1_V_address0");
    sc_trace(mVcdFile, dense_1_out_1_V_ce0, "(port)dense_1_out_1_V_ce0");
    sc_trace(mVcdFile, dense_1_out_1_V_we0, "(port)dense_1_out_1_V_we0");
    sc_trace(mVcdFile, dense_1_out_1_V_d0, "(port)dense_1_out_1_V_d0");
    sc_trace(mVcdFile, dense_1_out_2_V_address0, "(port)dense_1_out_2_V_address0");
    sc_trace(mVcdFile, dense_1_out_2_V_ce0, "(port)dense_1_out_2_V_ce0");
    sc_trace(mVcdFile, dense_1_out_2_V_we0, "(port)dense_1_out_2_V_we0");
    sc_trace(mVcdFile, dense_1_out_2_V_d0, "(port)dense_1_out_2_V_d0");
    sc_trace(mVcdFile, dense_1_out_3_V_address0, "(port)dense_1_out_3_V_address0");
    sc_trace(mVcdFile, dense_1_out_3_V_ce0, "(port)dense_1_out_3_V_ce0");
    sc_trace(mVcdFile, dense_1_out_3_V_we0, "(port)dense_1_out_3_V_we0");
    sc_trace(mVcdFile, dense_1_out_3_V_d0, "(port)dense_1_out_3_V_d0");
    sc_trace(mVcdFile, dense_1_out_4_V_address0, "(port)dense_1_out_4_V_address0");
    sc_trace(mVcdFile, dense_1_out_4_V_ce0, "(port)dense_1_out_4_V_ce0");
    sc_trace(mVcdFile, dense_1_out_4_V_we0, "(port)dense_1_out_4_V_we0");
    sc_trace(mVcdFile, dense_1_out_4_V_d0, "(port)dense_1_out_4_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_1_weights_V_address0, "dense_1_weights_V_address0");
    sc_trace(mVcdFile, dense_1_weights_V_ce0, "dense_1_weights_V_ce0");
    sc_trace(mVcdFile, dense_1_weights_V_q0, "dense_1_weights_V_q0");
    sc_trace(mVcdFile, dense_1_bias_V_address0, "dense_1_bias_V_address0");
    sc_trace(mVcdFile, dense_1_bias_V_ce0, "dense_1_bias_V_ce0");
    sc_trace(mVcdFile, dense_1_bias_V_q0, "dense_1_bias_V_q0");
    sc_trace(mVcdFile, add_ln9_fu_259_p2, "add_ln9_fu_259_p2");
    sc_trace(mVcdFile, add_ln9_reg_439, "add_ln9_reg_439");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_271_p2, "i_fu_271_p2");
    sc_trace(mVcdFile, i_reg_447, "i_reg_447");
    sc_trace(mVcdFile, zext_ln14_fu_277_p1, "zext_ln14_fu_277_p1");
    sc_trace(mVcdFile, zext_ln14_reg_452, "zext_ln14_reg_452");
    sc_trace(mVcdFile, icmp_ln9_fu_265_p2, "icmp_ln9_fu_265_p2");
    sc_trace(mVcdFile, zext_ln13_fu_281_p1, "zext_ln13_fu_281_p1");
    sc_trace(mVcdFile, zext_ln13_reg_457, "zext_ln13_reg_457");
    sc_trace(mVcdFile, j_fu_291_p2, "j_fu_291_p2");
    sc_trace(mVcdFile, j_reg_465, "j_reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, add_ln1117_10_fu_302_p2, "add_ln1117_10_fu_302_p2");
    sc_trace(mVcdFile, add_ln1117_10_reg_470, "add_ln1117_10_reg_470");
    sc_trace(mVcdFile, icmp_ln13_fu_285_p2, "icmp_ln13_fu_285_p2");
    sc_trace(mVcdFile, tmp_7_reg_490, "tmp_7_reg_490");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, select_ln22_fu_422_p3, "select_ln22_fu_422_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_0_reg_190, "i_0_reg_190");
    sc_trace(mVcdFile, phi_mul1_reg_201, "phi_mul1_reg_201");
    sc_trace(mVcdFile, phi_urem_reg_213, "phi_urem_reg_213");
    sc_trace(mVcdFile, p_Val2_s_reg_225, "p_Val2_s_reg_225");
    sc_trace(mVcdFile, j_0_reg_237, "j_0_reg_237");
    sc_trace(mVcdFile, phi_mul_reg_248, "phi_mul_reg_248");
    sc_trace(mVcdFile, zext_ln1117_fu_313_p1, "zext_ln1117_fu_313_p1");
    sc_trace(mVcdFile, zext_ln14_1_fu_297_p1, "zext_ln14_1_fu_297_p1");
    sc_trace(mVcdFile, zext_ln203_fu_381_p1, "zext_ln203_fu_381_p1");
    sc_trace(mVcdFile, trunc_ln203_fu_377_p1, "trunc_ln203_fu_377_p1");
    sc_trace(mVcdFile, select_ln19_fu_397_p3, "select_ln19_fu_397_p3");
    sc_trace(mVcdFile, add_ln1117_fu_308_p2, "add_ln1117_fu_308_p2");
    sc_trace(mVcdFile, grp_fu_430_p3, "grp_fu_430_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_353_p0, "sext_ln1265_fu_353_p0");
    sc_trace(mVcdFile, sext_ln703_fu_361_p0, "sext_ln703_fu_361_p0");
    sc_trace(mVcdFile, sext_ln1265_fu_353_p1, "sext_ln1265_fu_353_p1");
    sc_trace(mVcdFile, sext_ln703_fu_361_p1, "sext_ln703_fu_361_p1");
    sc_trace(mVcdFile, trunc_ln703_fu_357_p1, "trunc_ln703_fu_357_p1");
    sc_trace(mVcdFile, add_ln703_fu_365_p2, "add_ln703_fu_365_p2");
    sc_trace(mVcdFile, tmp_8_fu_389_p3, "tmp_8_fu_389_p3");
    sc_trace(mVcdFile, add_ln203_fu_371_p2, "add_ln203_fu_371_p2");
    sc_trace(mVcdFile, add_ln22_fu_410_p2, "add_ln22_fu_410_p2");
    sc_trace(mVcdFile, icmp_ln22_fu_416_p2, "icmp_ln22_fu_416_p2");
    sc_trace(mVcdFile, grp_fu_430_p2, "grp_fu_430_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense_1::~dense_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_1_weights_V_U;
    delete dense_1_bias_V_U;
    delete cnn_mac_muladd_9skbM_U22;
}

void dense_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_reg_190 = i_reg_447.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_190 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_237 = j_reg_465.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_0))) {
        j_0_reg_237 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_s_reg_225 = grp_fu_430_p3.read().range(21, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_0))) {
        p_Val2_s_reg_225 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        phi_mul1_reg_201 = add_ln9_reg_439.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul1_reg_201 = ap_const_lv13_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        phi_mul_reg_248 = add_ln1117_10_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_248 = ap_const_lv15_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        phi_urem_reg_213 = select_ln22_fu_422_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_urem_reg_213 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_285_p2.read()))) {
        add_ln1117_10_reg_470 = add_ln1117_10_fu_302_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln9_reg_439 = add_ln9_fu_259_p2.read();
        i_reg_447 = i_fu_271_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_465 = j_fu_291_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_285_p2.read(), ap_const_lv1_1))) {
        tmp_7_reg_490 = phi_mul1_reg_201.read().range(12, 9);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_0))) {
        zext_ln13_reg_457 = zext_ln13_fu_281_p1.read();
        zext_ln14_reg_452 = zext_ln14_fu_277_p1.read();
    }
}

void dense_1::thread_add_ln1117_10_fu_302_p2() {
    add_ln1117_10_fu_302_p2 = (!phi_mul_reg_248.read().is_01() || !ap_const_lv15_32.is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_248.read()) + sc_biguint<15>(ap_const_lv15_32));
}

void dense_1::thread_add_ln1117_fu_308_p2() {
    add_ln1117_fu_308_p2 = (!phi_mul_reg_248.read().is_01() || !zext_ln13_reg_457.read().is_01())? sc_lv<15>(): (sc_biguint<15>(phi_mul_reg_248.read()) + sc_biguint<15>(zext_ln13_reg_457.read()));
}

void dense_1::thread_add_ln203_fu_371_p2() {
    add_ln203_fu_371_p2 = (!sext_ln703_fu_361_p1.read().is_01() || !trunc_ln703_fu_357_p1.read().is_01())? sc_lv<13>(): (sc_bigint<13>(sext_ln703_fu_361_p1.read()) + sc_biguint<13>(trunc_ln703_fu_357_p1.read()));
}

void dense_1::thread_add_ln22_fu_410_p2() {
    add_ln22_fu_410_p2 = (!phi_urem_reg_213.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(phi_urem_reg_213.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dense_1::thread_add_ln703_fu_365_p2() {
    add_ln703_fu_365_p2 = (!p_Val2_s_reg_225.read().is_01() || !sext_ln1265_fu_353_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_Val2_s_reg_225.read()) + sc_bigint<14>(sext_ln1265_fu_353_p1.read()));
}

void dense_1::thread_add_ln9_fu_259_p2() {
    add_ln9_fu_259_p2 = (!phi_mul1_reg_201.read().is_01() || !ap_const_lv13_67.is_01())? sc_lv<13>(): (sc_biguint<13>(phi_mul1_reg_201.read()) + sc_biguint<13>(ap_const_lv13_67));
}

void dense_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_bias_V_address0() {
    dense_1_bias_V_address0 =  (sc_lv<6>) (zext_ln14_reg_452.read());
}

void dense_1::thread_dense_1_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_1_bias_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_bias_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_0_V_address0() {
    dense_1_out_0_V_address0 =  (sc_lv<4>) (zext_ln203_fu_381_p1.read());
}

void dense_1::thread_dense_1_out_0_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_1_out_0_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_0_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_0_V_d0() {
    dense_1_out_0_V_d0 = select_ln19_fu_397_p3.read();
}

void dense_1::thread_dense_1_out_0_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_0))) {
        dense_1_out_0_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_0_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_1_V_address0() {
    dense_1_out_1_V_address0 =  (sc_lv<4>) (zext_ln203_fu_381_p1.read());
}

void dense_1::thread_dense_1_out_1_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_1_out_1_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_1_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_1_V_d0() {
    dense_1_out_1_V_d0 = select_ln19_fu_397_p3.read();
}

void dense_1::thread_dense_1_out_1_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_1))) {
        dense_1_out_1_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_1_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_2_V_address0() {
    dense_1_out_2_V_address0 =  (sc_lv<4>) (zext_ln203_fu_381_p1.read());
}

void dense_1::thread_dense_1_out_2_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_1_out_2_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_2_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_2_V_d0() {
    dense_1_out_2_V_d0 = select_ln19_fu_397_p3.read();
}

void dense_1::thread_dense_1_out_2_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_2))) {
        dense_1_out_2_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_2_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_3_V_address0() {
    dense_1_out_3_V_address0 =  (sc_lv<4>) (zext_ln203_fu_381_p1.read());
}

void dense_1::thread_dense_1_out_3_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_1_out_3_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_3_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_3_V_d0() {
    dense_1_out_3_V_d0 = select_ln19_fu_397_p3.read();
}

void dense_1::thread_dense_1_out_3_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_3))) {
        dense_1_out_3_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_3_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_4_V_address0() {
    dense_1_out_4_V_address0 =  (sc_lv<4>) (zext_ln203_fu_381_p1.read());
}

void dense_1::thread_dense_1_out_4_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_1_out_4_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_4_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_4_V_d0() {
    dense_1_out_4_V_d0 = select_ln19_fu_397_p3.read();
}

void dense_1::thread_dense_1_out_4_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_0) && 
         !esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_1) && 
         !esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_2) && 
         !esl_seteq<1,4,4>(trunc_ln203_fu_377_p1.read(), ap_const_lv4_3))) {
        dense_1_out_4_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_4_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_weights_V_address0() {
    dense_1_weights_V_address0 =  (sc_lv<15>) (zext_ln1117_fu_313_p1.read());
}

void dense_1::thread_dense_1_weights_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_1_weights_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_weights_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_flat_array_V_address0() {
    flat_array_V_address0 =  (sc_lv<9>) (zext_ln14_1_fu_297_p1.read());
}

void dense_1::thread_flat_array_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        flat_array_V_ce0 = ap_const_logic_1;
    } else {
        flat_array_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_grp_fu_430_p2() {
    grp_fu_430_p2 = esl_concat<14,8>(p_Val2_s_reg_225.read(), ap_const_lv8_0);
}

void dense_1::thread_i_fu_271_p2() {
    i_fu_271_p2 = (!i_0_reg_190.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_190.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dense_1::thread_icmp_ln13_fu_285_p2() {
    icmp_ln13_fu_285_p2 = (!j_0_reg_237.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_237.read() == ap_const_lv9_190);
}

void dense_1::thread_icmp_ln22_fu_416_p2() {
    icmp_ln22_fu_416_p2 = (!add_ln22_fu_410_p2.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<1>(): (sc_biguint<6>(add_ln22_fu_410_p2.read()) < sc_biguint<6>(ap_const_lv6_5));
}

void dense_1::thread_icmp_ln9_fu_265_p2() {
    icmp_ln9_fu_265_p2 = (!i_0_reg_190.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_190.read() == ap_const_lv6_32);
}

void dense_1::thread_j_fu_291_p2() {
    j_fu_291_p2 = (!j_0_reg_237.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(j_0_reg_237.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dense_1::thread_select_ln19_fu_397_p3() {
    select_ln19_fu_397_p3 = (!tmp_8_fu_389_p3.read()[0].is_01())? sc_lv<13>(): ((tmp_8_fu_389_p3.read()[0].to_bool())? ap_const_lv13_0: add_ln203_fu_371_p2.read());
}

void dense_1::thread_select_ln22_fu_422_p3() {
    select_ln22_fu_422_p3 = (!icmp_ln22_fu_416_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln22_fu_416_p2.read()[0].to_bool())? add_ln22_fu_410_p2.read(): ap_const_lv6_0);
}

void dense_1::thread_sext_ln1265_fu_353_p0() {
    sext_ln1265_fu_353_p0 = dense_1_bias_V_q0.read();
}

void dense_1::thread_sext_ln1265_fu_353_p1() {
    sext_ln1265_fu_353_p1 = esl_sext<14,6>(sext_ln1265_fu_353_p0.read());
}

void dense_1::thread_sext_ln703_fu_361_p0() {
    sext_ln703_fu_361_p0 = dense_1_bias_V_q0.read();
}

void dense_1::thread_sext_ln703_fu_361_p1() {
    sext_ln703_fu_361_p1 = esl_sext<13,6>(sext_ln703_fu_361_p0.read());
}

void dense_1::thread_tmp_8_fu_389_p3() {
    tmp_8_fu_389_p3 = add_ln703_fu_365_p2.read().range(13, 13);
}

void dense_1::thread_trunc_ln203_fu_377_p1() {
    trunc_ln203_fu_377_p1 = phi_urem_reg_213.read().range(4-1, 0);
}

void dense_1::thread_trunc_ln703_fu_357_p1() {
    trunc_ln703_fu_357_p1 = p_Val2_s_reg_225.read().range(13-1, 0);
}

void dense_1::thread_zext_ln1117_fu_313_p1() {
    zext_ln1117_fu_313_p1 = esl_zext<64,15>(add_ln1117_fu_308_p2.read());
}

void dense_1::thread_zext_ln13_fu_281_p1() {
    zext_ln13_fu_281_p1 = esl_zext<15,6>(i_0_reg_190.read());
}

void dense_1::thread_zext_ln14_1_fu_297_p1() {
    zext_ln14_1_fu_297_p1 = esl_zext<64,9>(j_0_reg_237.read());
}

void dense_1::thread_zext_ln14_fu_277_p1() {
    zext_ln14_fu_277_p1 = esl_zext<64,6>(i_0_reg_190.read());
}

void dense_1::thread_zext_ln203_fu_381_p1() {
    zext_ln203_fu_381_p1 = esl_zext<64,4>(tmp_7_reg_490.read());
}

void dense_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_265_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_285_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

