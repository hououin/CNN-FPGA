// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        input_V_address1,
        input_V_ce1,
        input_V_q1,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state11 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [9:0] input_V_address1;
output   input_V_ce1;
input  [13:0] input_V_q1;
output  [11:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_V_address0;
reg input_V_ce0;
reg[9:0] input_V_address1;
reg input_V_ce1;
reg conv_out_V_ce0;
reg conv_out_V_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] conv_1_weights_V_0_0_address0;
reg    conv_1_weights_V_0_0_ce0;
wire  signed [7:0] conv_1_weights_V_0_0_q0;
wire   [2:0] conv_1_weights_V_0_1_address0;
reg    conv_1_weights_V_0_1_ce0;
wire  signed [7:0] conv_1_weights_V_0_1_q0;
wire   [2:0] conv_1_weights_V_0_2_address0;
reg    conv_1_weights_V_0_2_ce0;
wire   [8:0] conv_1_weights_V_0_2_q0;
wire   [2:0] conv_1_weights_V_1_0_address0;
reg    conv_1_weights_V_1_0_ce0;
wire   [8:0] conv_1_weights_V_1_0_q0;
wire   [2:0] conv_1_weights_V_1_1_address0;
reg    conv_1_weights_V_1_1_ce0;
wire   [7:0] conv_1_weights_V_1_1_q0;
wire   [2:0] conv_1_weights_V_1_2_address0;
reg    conv_1_weights_V_1_2_ce0;
wire   [8:0] conv_1_weights_V_1_2_q0;
wire   [2:0] conv_1_weights_V_2_0_address0;
reg    conv_1_weights_V_2_0_ce0;
wire   [8:0] conv_1_weights_V_2_0_q0;
wire   [2:0] conv_1_weights_V_2_1_address0;
reg    conv_1_weights_V_2_1_ce0;
wire   [8:0] conv_1_weights_V_2_1_q0;
wire   [2:0] conv_1_weights_V_2_2_address0;
reg    conv_1_weights_V_2_2_ce0;
wire   [8:0] conv_1_weights_V_2_2_q0;
wire   [2:0] conv_1_bias_V_address0;
reg    conv_1_bias_V_ce0;
wire   [6:0] conv_1_bias_V_q0;
reg   [11:0] indvar_flatten30_reg_395;
reg   [4:0] r_0_reg_406;
reg   [7:0] indvar_flatten_reg_417;
reg   [4:0] c_0_reg_428;
reg   [2:0] f_0_reg_439;
wire   [4:0] r_fu_466_p2;
reg   [4:0] r_reg_1657;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln8_fu_484_p2;
reg   [0:0] icmp_ln8_reg_1662;
reg   [0:0] icmp_ln8_reg_1662_pp0_iter1_reg;
wire   [11:0] add_ln8_fu_490_p2;
reg   [11:0] add_ln8_reg_1666;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln11_fu_496_p2;
reg   [0:0] icmp_ln11_reg_1671;
wire   [4:0] select_ln32_1_fu_510_p3;
reg   [4:0] select_ln32_1_reg_1677;
wire   [10:0] sub_ln1117_fu_546_p2;
reg   [10:0] sub_ln1117_reg_1682;
wire   [4:0] add_ln23_fu_552_p2;
reg   [4:0] add_ln23_reg_1687;
wire   [4:0] add_ln32_fu_566_p2;
reg   [4:0] add_ln32_reg_1692;
wire   [2:0] select_ln32_6_fu_618_p3;
reg   [2:0] select_ln32_6_reg_1698;
wire   [4:0] select_ln32_7_fu_626_p3;
reg   [4:0] select_ln32_7_reg_1704;
wire   [10:0] zext_ln32_1_fu_638_p1;
reg   [10:0] zext_ln32_1_reg_1709;
wire   [9:0] grp_fu_1586_p3;
reg   [9:0] add_ln203_reg_1720;
wire   [10:0] zext_ln32_2_fu_667_p1;
reg   [10:0] zext_ln32_2_reg_1726;
wire   [4:0] select_ln32_9_fu_688_p3;
reg   [4:0] select_ln32_9_reg_1737;
wire   [7:0] add_ln11_fu_710_p2;
reg   [7:0] add_ln11_reg_1792;
wire   [10:0] sub_ln1117_1_fu_745_p2;
reg   [10:0] sub_ln1117_1_reg_1797;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [10:0] zext_ln32_3_fu_761_p1;
reg   [10:0] zext_ln32_3_reg_1808;
reg  signed [8:0] conv_1_weights_V_0_2_2_reg_1819;
reg   [13:0] tmp_9_reg_1824;
reg  signed [8:0] conv_1_weights_V_1_0_2_reg_1829;
reg  signed [7:0] conv_1_weights_V_1_1_2_reg_1834;
reg  signed [8:0] conv_1_weights_V_1_2_2_reg_1839;
reg  signed [8:0] conv_1_weights_V_2_0_2_reg_1844;
reg  signed [8:0] conv_1_weights_V_2_1_2_reg_1849;
reg  signed [8:0] conv_1_weights_V_2_2_2_reg_1854;
reg   [6:0] p_Val2_s_reg_1859;
wire   [10:0] add_ln1117_3_fu_862_p2;
reg   [10:0] add_ln1117_3_reg_1864;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [10:0] add_ln1117_6_fu_876_p2;
reg   [10:0] add_ln1117_6_reg_1874;
wire   [10:0] add_ln1117_9_fu_890_p2;
reg   [10:0] add_ln1117_9_reg_1884;
reg   [13:0] tmp_11_reg_1889;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] tmp_13_reg_1904;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [11:0] conv_out_V_addr_reg_1914;
reg   [13:0] tmp_15_reg_1919;
wire   [2:0] f_fu_1194_p2;
reg   [2:0] f_reg_1924;
wire   [7:0] select_ln11_fu_1199_p3;
reg   [7:0] select_ln11_reg_1929;
wire   [13:0] p_Val2_28_fu_1249_p2;
reg   [13:0] p_Val2_28_reg_1934;
wire   [0:0] icmp_ln885_fu_1255_p2;
reg   [0:0] icmp_ln885_reg_1941;
wire   [13:0] tmp_V_fu_1261_p2;
reg   [13:0] tmp_V_reg_1945;
wire   [0:0] p_Result_32_fu_1267_p3;
reg   [0:0] p_Result_32_reg_1950;
reg   [62:0] m_s_reg_1955;
reg   [0:0] tmp_23_reg_1960;
wire   [10:0] trunc_ln893_fu_1506_p1;
reg   [10:0] trunc_ln893_reg_1965;
reg   [51:0] trunc_ln7_reg_1970;
wire   [0:0] icmp_ln924_fu_1565_p2;
reg   [0:0] icmp_ln924_reg_1980;
wire   [0:0] icmp_ln924_2_fu_1571_p2;
reg   [0:0] icmp_ln924_2_reg_1985;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [11:0] ap_phi_mux_indvar_flatten30_phi_fu_399_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_410_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_421_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_432_p4;
reg   [2:0] ap_phi_mux_f_0_phi_fu_443_p4;
reg   [13:0] ap_phi_mux_storemerge_phi_fu_453_p4;
wire   [13:0] ap_phi_reg_pp0_iter1_storemerge_reg_450;
wire   [0:0] and_ln924_fu_1580_p2;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1117_10_fu_648_p1;
wire   [63:0] zext_ln1117_12_fu_677_p1;
wire   [63:0] zext_ln23_fu_696_p1;
wire   [63:0] zext_ln1117_11_fu_756_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1117_14_fu_769_p1;
wire   [63:0] zext_ln1117_13_fu_871_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1117_15_fu_885_p1;
wire  signed [63:0] sext_ln1117_fu_978_p1;
wire  signed [63:0] sext_ln1117_1_fu_982_p1;
wire   [63:0] zext_ln1117_16_fu_1093_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln203_15_fu_1106_p1;
wire   [63:0] grp_fu_461_p0;
wire   [9:0] tmp_fu_522_p3;
wire   [6:0] tmp_16_fu_534_p3;
wire   [10:0] zext_ln1117_fu_530_p1;
wire   [10:0] zext_ln1117_5_fu_542_p1;
wire   [4:0] select_ln32_3_fu_558_p3;
wire   [4:0] c_fu_472_p2;
wire   [4:0] add_ln23_1_fu_478_p2;
wire   [0:0] icmp_ln14_fu_594_p2;
wire   [0:0] xor_ln32_fu_588_p2;
wire   [4:0] select_ln32_fu_502_p3;
wire   [0:0] and_ln32_fu_600_p2;
wire   [0:0] or_ln32_fu_612_p2;
wire   [4:0] add_ln23_3_fu_606_p2;
wire   [10:0] add_ln1117_fu_642_p2;
wire   [4:0] add_ln23_4_fu_653_p2;
wire   [4:0] select_ln32_4_fu_572_p3;
wire   [4:0] select_ln32_8_fu_659_p3;
wire   [10:0] add_ln1117_4_fu_671_p2;
wire   [4:0] add_ln23_5_fu_682_p2;
wire   [4:0] select_ln32_5_fu_580_p3;
wire   [4:0] select_ln32_2_fu_716_p3;
wire   [9:0] tmp_17_fu_721_p3;
wire   [6:0] tmp_18_fu_733_p3;
wire   [10:0] zext_ln1117_6_fu_729_p1;
wire   [10:0] zext_ln1117_7_fu_741_p1;
wire   [10:0] add_ln1117_2_fu_751_p2;
wire   [10:0] add_ln1117_7_fu_764_p2;
wire  signed [21:0] mul_ln1118_1_fu_1601_p2;
wire  signed [21:0] mul_ln1118_fu_1594_p2;
wire   [13:0] tmp_8_fu_793_p4;
wire   [21:0] shl_ln_fu_802_p3;
wire  signed [22:0] sext_ln1118_3_fu_790_p1;
wire   [23:0] zext_ln703_fu_810_p1;
wire   [23:0] zext_ln1192_fu_814_p1;
wire   [23:0] add_ln1192_fu_818_p2;
wire   [9:0] tmp_s_fu_834_p3;
wire   [6:0] tmp_6_fu_845_p3;
wire   [10:0] zext_ln1117_8_fu_841_p1;
wire   [10:0] zext_ln1117_9_fu_852_p1;
wire   [10:0] sub_ln1117_2_fu_856_p2;
wire   [10:0] add_ln1117_5_fu_867_p2;
wire   [10:0] add_ln1117_8_fu_881_p2;
wire  signed [22:0] mul_ln1118_2_fu_1608_p2;
wire   [21:0] shl_ln728_1_fu_905_p3;
wire  signed [23:0] sext_ln1118_5_fu_902_p1;
wire   [24:0] zext_ln703_2_fu_912_p1;
wire   [24:0] zext_ln1192_1_fu_916_p1;
wire  signed [22:0] mul_ln1118_3_fu_1615_p2;
wire   [24:0] add_ln1192_1_fu_920_p2;
wire   [13:0] tmp_10_fu_936_p4;
wire   [21:0] shl_ln728_2_fu_946_p3;
wire  signed [23:0] sext_ln1118_7_fu_933_p1;
wire   [24:0] zext_ln703_3_fu_954_p1;
wire   [24:0] zext_ln1192_2_fu_958_p1;
wire   [24:0] add_ln1192_2_fu_962_p2;
wire  signed [21:0] mul_ln1118_4_fu_1622_p2;
wire   [21:0] shl_ln728_3_fu_996_p3;
wire  signed [22:0] sext_ln1118_9_fu_993_p1;
wire   [23:0] zext_ln703_4_fu_1003_p1;
wire   [23:0] zext_ln1192_3_fu_1007_p1;
wire  signed [22:0] mul_ln1118_5_fu_1629_p2;
wire   [23:0] add_ln1192_3_fu_1011_p2;
wire   [13:0] tmp_12_fu_1027_p4;
wire   [21:0] shl_ln728_4_fu_1037_p3;
wire  signed [23:0] sext_ln1118_11_fu_1024_p1;
wire   [24:0] zext_ln703_5_fu_1045_p1;
wire   [24:0] zext_ln1192_4_fu_1049_p1;
wire   [24:0] add_ln1192_4_fu_1053_p2;
wire   [10:0] tmp_19_fu_1076_p3;
wire   [12:0] p_shl_cast_fu_1069_p3;
wire   [12:0] zext_ln203_13_fu_1083_p1;
wire   [12:0] zext_ln203_14_fu_1097_p1;
wire   [12:0] sub_ln203_fu_1087_p2;
wire   [12:0] add_ln203_7_fu_1100_p2;
wire  signed [22:0] mul_ln1118_6_fu_1636_p2;
wire   [21:0] shl_ln728_5_fu_1121_p3;
wire  signed [23:0] sext_ln1118_13_fu_1118_p1;
wire   [24:0] zext_ln703_6_fu_1128_p1;
wire   [24:0] zext_ln1192_5_fu_1132_p1;
wire  signed [22:0] mul_ln1118_7_fu_1643_p2;
wire   [24:0] add_ln1192_5_fu_1136_p2;
wire   [13:0] tmp_14_fu_1152_p4;
wire   [21:0] shl_ln728_6_fu_1162_p3;
wire  signed [23:0] sext_ln1118_15_fu_1149_p1;
wire   [24:0] zext_ln703_7_fu_1170_p1;
wire   [24:0] zext_ln1192_6_fu_1174_p1;
wire   [24:0] add_ln1192_6_fu_1178_p2;
wire  signed [22:0] mul_ln1118_8_fu_1650_p2;
wire   [21:0] shl_ln728_7_fu_1215_p3;
wire  signed [23:0] sext_ln1118_17_fu_1212_p1;
wire   [24:0] zext_ln703_8_fu_1222_p1;
wire   [24:0] zext_ln1192_7_fu_1226_p1;
wire   [24:0] add_ln1192_7_fu_1230_p2;
wire  signed [13:0] sext_ln1265_fu_1246_p1;
wire   [13:0] trunc_ln708_8_fu_1236_p4;
wire   [13:0] tmp_V_8_fu_1274_p3;
reg   [13:0] p_Result_s_fu_1280_p4;
wire   [31:0] p_Result_33_fu_1290_p3;
reg   [31:0] l_fu_1298_p3;
wire   [31:0] sub_ln894_fu_1306_p2;
wire   [31:0] lsb_index_fu_1316_p2;
wire   [30:0] tmp_21_fu_1322_p4;
wire   [3:0] trunc_ln897_fu_1338_p1;
wire   [3:0] sub_ln897_fu_1342_p2;
wire   [13:0] zext_ln897_fu_1348_p1;
wire   [13:0] lshr_ln897_fu_1352_p2;
wire   [13:0] p_Result_29_fu_1358_p2;
wire   [0:0] icmp_ln897_fu_1332_p2;
wire   [0:0] icmp_ln897_2_fu_1364_p2;
wire   [0:0] tmp_22_fu_1376_p3;
wire   [13:0] trunc_ln894_fu_1312_p1;
wire   [13:0] add_ln899_fu_1390_p2;
wire   [0:0] p_Result_30_fu_1396_p3;
wire   [0:0] xor_ln899_fu_1384_p2;
wire   [0:0] and_ln899_fu_1404_p2;
wire   [0:0] a_fu_1370_p2;
wire   [0:0] or_ln899_fu_1410_p2;
wire   [31:0] zext_ln907_2_fu_1428_p1;
wire   [31:0] add_ln908_fu_1438_p2;
wire   [31:0] lshr_ln908_fu_1444_p2;
wire   [31:0] sub_ln908_fu_1454_p2;
wire   [63:0] m_fu_1424_p1;
wire   [63:0] zext_ln908_2_fu_1460_p1;
wire   [0:0] icmp_ln908_fu_1432_p2;
wire   [63:0] zext_ln908_fu_1450_p1;
wire   [63:0] shl_ln908_fu_1464_p2;
wire   [31:0] or_ln_fu_1416_p3;
wire   [63:0] zext_ln911_fu_1478_p1;
wire   [63:0] m_7_fu_1470_p3;
wire   [63:0] m_8_fu_1482_p2;
wire   [10:0] sub_ln915_fu_1530_p2;
wire   [10:0] select_ln915_fu_1523_p3;
wire   [10:0] add_ln915_fu_1535_p2;
wire   [63:0] m_11_fu_1520_p1;
wire   [11:0] tmp_7_fu_1541_p3;
wire   [63:0] p_Result_34_fu_1548_p5;
wire   [0:0] or_ln924_fu_1576_p2;
wire   [0:0] grp_fu_461_p2;
wire   [4:0] grp_fu_1586_p0;
wire   [5:0] grp_fu_1586_p1;
wire   [4:0] grp_fu_1586_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_CS_fsm_state11;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1586_p00;
wire   [9:0] grp_fu_1586_p20;
reg    ap_condition_379;
reg    ap_condition_387;
reg    ap_condition_384;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_0_0_address0),
    .ce0(conv_1_weights_V_0_0_ce0),
    .q0(conv_1_weights_V_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_0_1_address0),
    .ce0(conv_1_weights_V_0_1_ce0),
    .q0(conv_1_weights_V_0_1_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_0_2_address0),
    .ce0(conv_1_weights_V_0_2_ce0),
    .q0(conv_1_weights_V_0_2_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_1_0_address0),
    .ce0(conv_1_weights_V_1_0_ce0),
    .q0(conv_1_weights_V_1_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 8 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_1_1_address0),
    .ce0(conv_1_weights_V_1_1_ce0),
    .q0(conv_1_weights_V_1_1_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_1_2_address0),
    .ce0(conv_1_weights_V_1_2_ce0),
    .q0(conv_1_weights_V_1_2_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_2_0_address0),
    .ce0(conv_1_weights_V_2_0_ce0),
    .q0(conv_1_weights_V_2_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_2_1_address0),
    .ce0(conv_1_weights_V_2_1_ce0),
    .q0(conv_1_weights_V_2_1_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_2_2_address0),
    .ce0(conv_1_weights_V_2_2_ce0),
    .q0(conv_1_weights_V_2_2_q0)
);

conv_1_conv_1_biakbM #(
    .DataWidth( 7 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_V_address0),
    .ce0(conv_1_bias_V_ce0),
    .q0(conv_1_bias_V_q0)
);

cnn_dcmp_64ns_64nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64nlbW_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_461_p2)
);

cnn_mac_muladd_5nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_5nmb6_U2(
    .din0(grp_fu_1586_p0),
    .din1(grp_fu_1586_p1),
    .din2(grp_fu_1586_p2),
    .dout(grp_fu_1586_p3)
);

cnn_mul_mul_8s_14ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_8s_14ncg_U3(
    .din0(conv_1_weights_V_0_0_q0),
    .din1(input_V_q0),
    .dout(mul_ln1118_fu_1594_p2)
);

cnn_mul_mul_8s_14ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_8s_14ncg_U4(
    .din0(conv_1_weights_V_0_1_q0),
    .din1(input_V_q1),
    .dout(mul_ln1118_1_fu_1601_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U5(
    .din0(conv_1_weights_V_0_2_2_reg_1819),
    .din1(input_V_q0),
    .dout(mul_ln1118_2_fu_1608_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U6(
    .din0(conv_1_weights_V_1_0_2_reg_1829),
    .din1(input_V_q1),
    .dout(mul_ln1118_3_fu_1615_p2)
);

cnn_mul_mul_8s_14ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_8s_14ncg_U7(
    .din0(conv_1_weights_V_1_1_2_reg_1834),
    .din1(input_V_q0),
    .dout(mul_ln1118_4_fu_1622_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U8(
    .din0(conv_1_weights_V_1_2_2_reg_1839),
    .din1(input_V_q1),
    .dout(mul_ln1118_5_fu_1629_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U9(
    .din0(conv_1_weights_V_2_0_2_reg_1844),
    .din1(input_V_q0),
    .dout(mul_ln1118_6_fu_1636_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U10(
    .din0(conv_1_weights_V_2_1_2_reg_1849),
    .din1(input_V_q1),
    .dout(mul_ln1118_7_fu_1643_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_9s_14ocq_U11(
    .din0(conv_1_weights_V_2_2_2_reg_1854),
    .din1(input_V_q0),
    .dout(mul_ln1118_8_fu_1650_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_0_reg_428 <= select_ln32_7_reg_1704;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_428 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_0_reg_439 <= f_reg_1924;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_439 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten30_reg_395 <= add_ln8_reg_1666;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_395 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_417 <= select_ln11_reg_1929;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_417 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_0_reg_406 <= select_ln32_1_reg_1677;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_406 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1662 == 1'd0))) begin
        add_ln1117_3_reg_1864 <= add_ln1117_3_fu_862_p2;
        add_ln1117_6_reg_1874 <= add_ln1117_6_fu_876_p2;
        add_ln1117_9_reg_1884 <= add_ln1117_9_fu_890_p2;
        tmp_11_reg_1889 <= {{add_ln1192_2_fu_962_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_484_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln11_reg_1792 <= add_ln11_fu_710_p2;
        add_ln23_reg_1687 <= add_ln23_fu_552_p2;
        add_ln32_reg_1692 <= add_ln32_fu_566_p2;
        icmp_ln11_reg_1671 <= icmp_ln11_fu_496_p2;
        select_ln32_6_reg_1698 <= select_ln32_6_fu_618_p3;
        select_ln32_9_reg_1737 <= select_ln32_9_fu_688_p3;
        sub_ln1117_reg_1682[10 : 2] <= sub_ln1117_fu_546_p2[10 : 2];
        zext_ln32_1_reg_1709[4 : 0] <= zext_ln32_1_fu_638_p1[4 : 0];
        zext_ln32_2_reg_1726[4 : 0] <= zext_ln32_2_fu_667_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_484_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln203_reg_1720 <= grp_fu_1586_p3;
        select_ln32_1_reg_1677 <= select_ln32_1_fu_510_p3;
        select_ln32_7_reg_1704 <= select_ln32_7_fu_626_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_1666 <= add_ln8_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1662 == 1'd0))) begin
        conv_1_weights_V_0_2_2_reg_1819 <= conv_1_weights_V_0_2_q0;
        conv_1_weights_V_1_0_2_reg_1829 <= conv_1_weights_V_1_0_q0;
        conv_1_weights_V_1_1_2_reg_1834 <= conv_1_weights_V_1_1_q0;
        conv_1_weights_V_1_2_2_reg_1839 <= conv_1_weights_V_1_2_q0;
        conv_1_weights_V_2_0_2_reg_1844 <= conv_1_weights_V_2_0_q0;
        conv_1_weights_V_2_1_2_reg_1849 <= conv_1_weights_V_2_1_q0;
        conv_1_weights_V_2_2_2_reg_1854 <= conv_1_weights_V_2_2_q0;
        p_Val2_s_reg_1859 <= conv_1_bias_V_q0;
        sub_ln1117_1_reg_1797[10 : 2] <= sub_ln1117_1_fu_745_p2[10 : 2];
        tmp_9_reg_1824 <= {{add_ln1192_fu_818_p2[21:8]}};
        zext_ln32_3_reg_1808[4 : 0] <= zext_ln32_3_fu_761_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1662 == 1'd0))) begin
        conv_out_V_addr_reg_1914 <= zext_ln203_15_fu_1106_p1;
        tmp_15_reg_1919 <= {{add_ln1192_6_fu_1178_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1662 == 1'd0))) begin
        f_reg_1924 <= f_fu_1194_p2;
        select_ln11_reg_1929 <= select_ln11_fu_1199_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln885_reg_1941 <= icmp_ln885_fu_1255_p2;
        p_Val2_28_reg_1934 <= p_Val2_28_fu_1249_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln8_reg_1662 <= icmp_ln8_fu_484_p2;
        icmp_ln8_reg_1662_pp0_iter1_reg <= icmp_ln8_reg_1662;
        r_reg_1657 <= r_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln885_reg_1941 == 1'd0) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0))) begin
        icmp_ln924_2_reg_1985 <= icmp_ln924_2_fu_1571_p2;
        icmp_ln924_reg_1980 <= icmp_ln924_fu_1565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln885_reg_1941 == 1'd0) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0))) begin
        m_s_reg_1955 <= {{m_8_fu_1482_p2[63:1]}};
        p_Result_32_reg_1950 <= p_Val2_28_reg_1934[32'd13];
        tmp_23_reg_1960 <= m_8_fu_1482_p2[32'd54];
        trunc_ln7_reg_1970 <= {{m_8_fu_1482_p2[52:1]}};
        trunc_ln893_reg_1965 <= trunc_ln893_fu_1506_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln8_reg_1662 == 1'd0))) begin
        tmp_13_reg_1904 <= {{add_ln1192_4_fu_1053_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln885_fu_1255_p2 == 1'd0) & (icmp_ln8_reg_1662 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_reg_1945 <= tmp_V_fu_1261_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_484_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_432_p4 = select_ln32_7_reg_1704;
    end else begin
        ap_phi_mux_c_0_phi_fu_432_p4 = c_0_reg_428;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_443_p4 = f_reg_1924;
    end else begin
        ap_phi_mux_f_0_phi_fu_443_p4 = f_0_reg_439;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_399_p4 = add_ln8_reg_1666;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_399_p4 = indvar_flatten30_reg_395;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = select_ln11_reg_1929;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = indvar_flatten_reg_417;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1662 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_410_p4 = select_ln32_1_reg_1677;
    end else begin
        ap_phi_mux_r_0_phi_fu_410_p4 = r_0_reg_406;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_384)) begin
        if ((1'b1 == ap_condition_387)) begin
            ap_phi_mux_storemerge_phi_fu_453_p4 = p_Val2_28_reg_1934;
        end else if ((1'b1 == ap_condition_379)) begin
            ap_phi_mux_storemerge_phi_fu_453_p4 = 14'd0;
        end else begin
            ap_phi_mux_storemerge_phi_fu_453_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_450;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_453_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_450;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_bias_V_ce0 = 1'b1;
    end else begin
        conv_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_0_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_0_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_1_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_1_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_2_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_V_2_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0))) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address0 = zext_ln1117_16_fu_1093_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address0 = sext_ln1117_fu_978_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address0 = zext_ln1117_13_fu_871_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address0 = zext_ln1117_14_fu_769_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address0 = zext_ln1117_10_fu_648_p1;
        end else begin
            input_V_address0 = 'bx;
        end
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address1 = sext_ln1117_1_fu_982_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address1 = zext_ln1117_15_fu_885_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address1 = zext_ln1117_11_fu_756_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address1 = zext_ln1117_12_fu_677_p1;
        end else begin
            input_V_address1 = 'bx;
        end
    end else begin
        input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_V_ce1 = 1'b1;
    end else begin
        input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_484_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_484_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_1370_p2 = (icmp_ln897_fu_1332_p2 & icmp_ln897_2_fu_1364_p2);

assign add_ln1117_2_fu_751_p2 = (zext_ln32_1_reg_1709 + sub_ln1117_1_fu_745_p2);

assign add_ln1117_3_fu_862_p2 = (zext_ln32_1_reg_1709 + sub_ln1117_2_fu_856_p2);

assign add_ln1117_4_fu_671_p2 = (zext_ln32_2_fu_667_p1 + sub_ln1117_fu_546_p2);

assign add_ln1117_5_fu_867_p2 = (zext_ln32_2_reg_1726 + sub_ln1117_1_reg_1797);

assign add_ln1117_6_fu_876_p2 = (zext_ln32_2_reg_1726 + sub_ln1117_2_fu_856_p2);

assign add_ln1117_7_fu_764_p2 = (zext_ln32_3_fu_761_p1 + sub_ln1117_reg_1682);

assign add_ln1117_8_fu_881_p2 = (zext_ln32_3_reg_1808 + sub_ln1117_1_reg_1797);

assign add_ln1117_9_fu_890_p2 = (zext_ln32_3_reg_1808 + sub_ln1117_2_fu_856_p2);

assign add_ln1117_fu_642_p2 = (zext_ln32_1_fu_638_p1 + sub_ln1117_fu_546_p2);

assign add_ln1192_1_fu_920_p2 = (zext_ln703_2_fu_912_p1 + zext_ln1192_1_fu_916_p1);

assign add_ln1192_2_fu_962_p2 = (zext_ln703_3_fu_954_p1 + zext_ln1192_2_fu_958_p1);

assign add_ln1192_3_fu_1011_p2 = (zext_ln703_4_fu_1003_p1 + zext_ln1192_3_fu_1007_p1);

assign add_ln1192_4_fu_1053_p2 = (zext_ln703_5_fu_1045_p1 + zext_ln1192_4_fu_1049_p1);

assign add_ln1192_5_fu_1136_p2 = (zext_ln703_6_fu_1128_p1 + zext_ln1192_5_fu_1132_p1);

assign add_ln1192_6_fu_1178_p2 = (zext_ln703_7_fu_1170_p1 + zext_ln1192_6_fu_1174_p1);

assign add_ln1192_7_fu_1230_p2 = (zext_ln703_8_fu_1222_p1 + zext_ln1192_7_fu_1226_p1);

assign add_ln1192_fu_818_p2 = (zext_ln703_fu_810_p1 + zext_ln1192_fu_814_p1);

assign add_ln11_fu_710_p2 = (ap_phi_mux_indvar_flatten_phi_fu_421_p4 + 8'd1);

assign add_ln203_7_fu_1100_p2 = (zext_ln203_14_fu_1097_p1 + sub_ln203_fu_1087_p2);

assign add_ln23_1_fu_478_p2 = (ap_phi_mux_c_0_phi_fu_432_p4 + 5'd2);

assign add_ln23_3_fu_606_p2 = (select_ln32_fu_502_p3 + 5'd1);

assign add_ln23_4_fu_653_p2 = (select_ln32_fu_502_p3 + 5'd2);

assign add_ln23_5_fu_682_p2 = (select_ln32_fu_502_p3 + 5'd3);

assign add_ln23_fu_552_p2 = (ap_phi_mux_r_0_phi_fu_410_p4 + 5'd2);

assign add_ln32_fu_566_p2 = (select_ln32_3_fu_558_p3 + ap_phi_mux_r_0_phi_fu_410_p4);

assign add_ln899_fu_1390_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_1312_p1));

assign add_ln8_fu_490_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_399_p4 + 12'd1);

assign add_ln908_fu_1438_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_fu_1306_p2));

assign add_ln915_fu_1535_p2 = (sub_ln915_fu_1530_p2 + select_ln915_fu_1523_p3);

assign and_ln32_fu_600_p2 = (xor_ln32_fu_588_p2 & icmp_ln14_fu_594_p2);

assign and_ln899_fu_1404_p2 = (xor_ln899_fu_1384_p2 & p_Result_30_fu_1396_p3);

assign and_ln924_fu_1580_p2 = (or_ln924_fu_1576_p2 & grp_fu_461_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_379 = (((icmp_ln885_reg_1941 == 1'd1) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0)) | ((1'd0 == and_ln924_fu_1580_p2) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_384 = ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_387 = ((1'd1 == and_ln924_fu_1580_p2) & (icmp_ln885_reg_1941 == 1'd0) & (icmp_ln8_reg_1662_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_storemerge_reg_450 = 'bx;

assign c_fu_472_p2 = (ap_phi_mux_c_0_phi_fu_432_p4 + 5'd1);

assign conv_1_bias_V_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_0_0_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_0_1_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_0_2_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_1_0_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_1_1_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_1_2_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_2_0_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_2_1_address0 = zext_ln23_fu_696_p1;

assign conv_1_weights_V_2_2_address0 = zext_ln23_fu_696_p1;

assign conv_out_V_address0 = conv_out_V_addr_reg_1914;

assign conv_out_V_d0 = ap_phi_mux_storemerge_phi_fu_453_p4;

assign f_fu_1194_p2 = (select_ln32_6_reg_1698 + 3'd1);

assign grp_fu_1586_p0 = grp_fu_1586_p00;

assign grp_fu_1586_p00 = select_ln32_1_fu_510_p3;

assign grp_fu_1586_p1 = 10'd26;

assign grp_fu_1586_p2 = grp_fu_1586_p20;

assign grp_fu_1586_p20 = select_ln32_7_fu_626_p3;

assign grp_fu_461_p0 = p_Result_34_fu_1548_p5;

assign icmp_ln11_fu_496_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_421_p4 == 8'd156) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_594_p2 = ((ap_phi_mux_f_0_phi_fu_443_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_1255_p2 = ((p_Val2_28_fu_1249_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_1364_p2 = ((p_Result_29_fu_1358_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_1332_p2 = (($signed(tmp_21_fu_1322_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_484_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_399_p4 == 12'd4056) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_1432_p2 = (($signed(lsb_index_fu_1316_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_2_fu_1571_p2 = ((trunc_ln7_reg_1970 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1565_p2 = ((add_ln915_fu_1535_p2 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_33_fu_1290_p3) begin
    if (p_Result_33_fu_1290_p3[0] == 1'b1) begin
        l_fu_1298_p3 = 32'd0;
    end else if (p_Result_33_fu_1290_p3[1] == 1'b1) begin
        l_fu_1298_p3 = 32'd1;
    end else if (p_Result_33_fu_1290_p3[2] == 1'b1) begin
        l_fu_1298_p3 = 32'd2;
    end else if (p_Result_33_fu_1290_p3[3] == 1'b1) begin
        l_fu_1298_p3 = 32'd3;
    end else if (p_Result_33_fu_1290_p3[4] == 1'b1) begin
        l_fu_1298_p3 = 32'd4;
    end else if (p_Result_33_fu_1290_p3[5] == 1'b1) begin
        l_fu_1298_p3 = 32'd5;
    end else if (p_Result_33_fu_1290_p3[6] == 1'b1) begin
        l_fu_1298_p3 = 32'd6;
    end else if (p_Result_33_fu_1290_p3[7] == 1'b1) begin
        l_fu_1298_p3 = 32'd7;
    end else if (p_Result_33_fu_1290_p3[8] == 1'b1) begin
        l_fu_1298_p3 = 32'd8;
    end else if (p_Result_33_fu_1290_p3[9] == 1'b1) begin
        l_fu_1298_p3 = 32'd9;
    end else if (p_Result_33_fu_1290_p3[10] == 1'b1) begin
        l_fu_1298_p3 = 32'd10;
    end else if (p_Result_33_fu_1290_p3[11] == 1'b1) begin
        l_fu_1298_p3 = 32'd11;
    end else if (p_Result_33_fu_1290_p3[12] == 1'b1) begin
        l_fu_1298_p3 = 32'd12;
    end else if (p_Result_33_fu_1290_p3[13] == 1'b1) begin
        l_fu_1298_p3 = 32'd13;
    end else if (p_Result_33_fu_1290_p3[14] == 1'b1) begin
        l_fu_1298_p3 = 32'd14;
    end else if (p_Result_33_fu_1290_p3[15] == 1'b1) begin
        l_fu_1298_p3 = 32'd15;
    end else if (p_Result_33_fu_1290_p3[16] == 1'b1) begin
        l_fu_1298_p3 = 32'd16;
    end else if (p_Result_33_fu_1290_p3[17] == 1'b1) begin
        l_fu_1298_p3 = 32'd17;
    end else if (p_Result_33_fu_1290_p3[18] == 1'b1) begin
        l_fu_1298_p3 = 32'd18;
    end else if (p_Result_33_fu_1290_p3[19] == 1'b1) begin
        l_fu_1298_p3 = 32'd19;
    end else if (p_Result_33_fu_1290_p3[20] == 1'b1) begin
        l_fu_1298_p3 = 32'd20;
    end else if (p_Result_33_fu_1290_p3[21] == 1'b1) begin
        l_fu_1298_p3 = 32'd21;
    end else if (p_Result_33_fu_1290_p3[22] == 1'b1) begin
        l_fu_1298_p3 = 32'd22;
    end else if (p_Result_33_fu_1290_p3[23] == 1'b1) begin
        l_fu_1298_p3 = 32'd23;
    end else if (p_Result_33_fu_1290_p3[24] == 1'b1) begin
        l_fu_1298_p3 = 32'd24;
    end else if (p_Result_33_fu_1290_p3[25] == 1'b1) begin
        l_fu_1298_p3 = 32'd25;
    end else if (p_Result_33_fu_1290_p3[26] == 1'b1) begin
        l_fu_1298_p3 = 32'd26;
    end else if (p_Result_33_fu_1290_p3[27] == 1'b1) begin
        l_fu_1298_p3 = 32'd27;
    end else if (p_Result_33_fu_1290_p3[28] == 1'b1) begin
        l_fu_1298_p3 = 32'd28;
    end else if (p_Result_33_fu_1290_p3[29] == 1'b1) begin
        l_fu_1298_p3 = 32'd29;
    end else if (p_Result_33_fu_1290_p3[30] == 1'b1) begin
        l_fu_1298_p3 = 32'd30;
    end else if (p_Result_33_fu_1290_p3[31] == 1'b1) begin
        l_fu_1298_p3 = 32'd31;
    end else begin
        l_fu_1298_p3 = 32'd32;
    end
end

assign lsb_index_fu_1316_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_1306_p2));

assign lshr_ln897_fu_1352_p2 = 14'd16383 >> zext_ln897_fu_1348_p1;

assign lshr_ln908_fu_1444_p2 = zext_ln907_2_fu_1428_p1 >> add_ln908_fu_1438_p2;

assign m_11_fu_1520_p1 = m_s_reg_1955;

assign m_7_fu_1470_p3 = ((icmp_ln908_fu_1432_p2[0:0] === 1'b1) ? zext_ln908_fu_1450_p1 : shl_ln908_fu_1464_p2);

assign m_8_fu_1482_p2 = (zext_ln911_fu_1478_p1 + m_7_fu_1470_p3);

assign m_fu_1424_p1 = tmp_V_8_fu_1274_p3;

assign or_ln32_fu_612_p2 = (icmp_ln11_fu_496_p2 | and_ln32_fu_600_p2);

assign or_ln899_fu_1410_p2 = (and_ln899_fu_1404_p2 | a_fu_1370_p2);

assign or_ln924_fu_1576_p2 = (icmp_ln924_reg_1980 | icmp_ln924_2_reg_1985);

assign or_ln_fu_1416_p3 = {{31'd0}, {or_ln899_fu_1410_p2}};

assign p_Result_29_fu_1358_p2 = (tmp_V_8_fu_1274_p3 & lshr_ln897_fu_1352_p2);

assign p_Result_30_fu_1396_p3 = tmp_V_8_fu_1274_p3[add_ln899_fu_1390_p2];

assign p_Result_32_fu_1267_p3 = p_Val2_28_reg_1934[32'd13];

assign p_Result_33_fu_1290_p3 = {{18'd262143}, {p_Result_s_fu_1280_p4}};

assign p_Result_34_fu_1548_p5 = {{tmp_7_fu_1541_p3}, {m_11_fu_1520_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_8_fu_1274_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1280_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1280_p4[ap_tvar_int_0] = tmp_V_8_fu_1274_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_28_fu_1249_p2 = ($signed(sext_ln1265_fu_1246_p1) + $signed(trunc_ln708_8_fu_1236_p4));

assign p_shl_cast_fu_1069_p3 = {{add_ln203_reg_1720}, {3'd0}};

assign r_fu_466_p2 = (ap_phi_mux_r_0_phi_fu_410_p4 + 5'd1);

assign select_ln11_fu_1199_p3 = ((icmp_ln11_reg_1671[0:0] === 1'b1) ? 8'd1 : add_ln11_reg_1792);

assign select_ln32_1_fu_510_p3 = ((icmp_ln11_fu_496_p2[0:0] === 1'b1) ? r_fu_466_p2 : ap_phi_mux_r_0_phi_fu_410_p4);

assign select_ln32_2_fu_716_p3 = ((icmp_ln11_reg_1671[0:0] === 1'b1) ? add_ln23_reg_1687 : r_reg_1657);

assign select_ln32_3_fu_558_p3 = ((icmp_ln11_fu_496_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln32_4_fu_572_p3 = ((icmp_ln11_fu_496_p2[0:0] === 1'b1) ? 5'd1 : c_fu_472_p2);

assign select_ln32_5_fu_580_p3 = ((icmp_ln11_fu_496_p2[0:0] === 1'b1) ? 5'd2 : add_ln23_1_fu_478_p2);

assign select_ln32_6_fu_618_p3 = ((or_ln32_fu_612_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_f_0_phi_fu_443_p4);

assign select_ln32_7_fu_626_p3 = ((and_ln32_fu_600_p2[0:0] === 1'b1) ? add_ln23_3_fu_606_p2 : select_ln32_fu_502_p3);

assign select_ln32_8_fu_659_p3 = ((and_ln32_fu_600_p2[0:0] === 1'b1) ? add_ln23_4_fu_653_p2 : select_ln32_4_fu_572_p3);

assign select_ln32_9_fu_688_p3 = ((and_ln32_fu_600_p2[0:0] === 1'b1) ? add_ln23_5_fu_682_p2 : select_ln32_5_fu_580_p3);

assign select_ln32_fu_502_p3 = ((icmp_ln11_fu_496_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_432_p4);

assign select_ln915_fu_1523_p3 = ((tmp_23_reg_1960[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1117_1_fu_982_p1 = $signed(add_ln1117_6_reg_1874);

assign sext_ln1117_fu_978_p1 = $signed(add_ln1117_3_reg_1864);

assign sext_ln1118_11_fu_1024_p1 = mul_ln1118_5_fu_1629_p2;

assign sext_ln1118_13_fu_1118_p1 = mul_ln1118_6_fu_1636_p2;

assign sext_ln1118_15_fu_1149_p1 = mul_ln1118_7_fu_1643_p2;

assign sext_ln1118_17_fu_1212_p1 = mul_ln1118_8_fu_1650_p2;

assign sext_ln1118_3_fu_790_p1 = mul_ln1118_1_fu_1601_p2;

assign sext_ln1118_5_fu_902_p1 = mul_ln1118_2_fu_1608_p2;

assign sext_ln1118_7_fu_933_p1 = mul_ln1118_3_fu_1615_p2;

assign sext_ln1118_9_fu_993_p1 = mul_ln1118_4_fu_1622_p2;

assign sext_ln1265_fu_1246_p1 = $signed(p_Val2_s_reg_1859);

assign shl_ln728_1_fu_905_p3 = {{tmp_9_reg_1824}, {8'd0}};

assign shl_ln728_2_fu_946_p3 = {{tmp_10_fu_936_p4}, {8'd0}};

assign shl_ln728_3_fu_996_p3 = {{tmp_11_reg_1889}, {8'd0}};

assign shl_ln728_4_fu_1037_p3 = {{tmp_12_fu_1027_p4}, {8'd0}};

assign shl_ln728_5_fu_1121_p3 = {{tmp_13_reg_1904}, {8'd0}};

assign shl_ln728_6_fu_1162_p3 = {{tmp_14_fu_1152_p4}, {8'd0}};

assign shl_ln728_7_fu_1215_p3 = {{tmp_15_reg_1919}, {8'd0}};

assign shl_ln908_fu_1464_p2 = m_fu_1424_p1 << zext_ln908_2_fu_1460_p1;

assign shl_ln_fu_802_p3 = {{tmp_8_fu_793_p4}, {8'd0}};

assign sub_ln1117_1_fu_745_p2 = (zext_ln1117_6_fu_729_p1 - zext_ln1117_7_fu_741_p1);

assign sub_ln1117_2_fu_856_p2 = (zext_ln1117_8_fu_841_p1 - zext_ln1117_9_fu_852_p1);

assign sub_ln1117_fu_546_p2 = (zext_ln1117_fu_530_p1 - zext_ln1117_5_fu_542_p1);

assign sub_ln203_fu_1087_p2 = (p_shl_cast_fu_1069_p3 - zext_ln203_13_fu_1083_p1);

assign sub_ln894_fu_1306_p2 = (32'd14 - l_fu_1298_p3);

assign sub_ln897_fu_1342_p2 = (4'd4 - trunc_ln897_fu_1338_p1);

assign sub_ln908_fu_1454_p2 = (32'd54 - sub_ln894_fu_1306_p2);

assign sub_ln915_fu_1530_p2 = (11'd6 - trunc_ln893_reg_1965);

assign tmp_10_fu_936_p4 = {{add_ln1192_1_fu_920_p2[21:8]}};

assign tmp_12_fu_1027_p4 = {{add_ln1192_3_fu_1011_p2[21:8]}};

assign tmp_14_fu_1152_p4 = {{add_ln1192_5_fu_1136_p2[21:8]}};

assign tmp_16_fu_534_p3 = {{select_ln32_1_fu_510_p3}, {2'd0}};

assign tmp_17_fu_721_p3 = {{select_ln32_2_fu_716_p3}, {5'd0}};

assign tmp_18_fu_733_p3 = {{select_ln32_2_fu_716_p3}, {2'd0}};

assign tmp_19_fu_1076_p3 = {{add_ln203_reg_1720}, {1'd0}};

assign tmp_21_fu_1322_p4 = {{lsb_index_fu_1316_p2[31:1]}};

assign tmp_22_fu_1376_p3 = lsb_index_fu_1316_p2[32'd31];

assign tmp_6_fu_845_p3 = {{add_ln32_reg_1692}, {2'd0}};

assign tmp_7_fu_1541_p3 = {{p_Result_32_reg_1950}, {add_ln915_fu_1535_p2}};

assign tmp_8_fu_793_p4 = {{mul_ln1118_fu_1594_p2[21:8]}};

assign tmp_V_8_fu_1274_p3 = ((p_Result_32_fu_1267_p3[0:0] === 1'b1) ? tmp_V_reg_1945 : p_Val2_28_reg_1934);

assign tmp_V_fu_1261_p2 = (14'd0 - p_Val2_28_fu_1249_p2);

assign tmp_fu_522_p3 = {{select_ln32_1_fu_510_p3}, {5'd0}};

assign tmp_s_fu_834_p3 = {{add_ln32_reg_1692}, {5'd0}};

assign trunc_ln708_8_fu_1236_p4 = {{add_ln1192_7_fu_1230_p2[21:8]}};

assign trunc_ln893_fu_1506_p1 = l_fu_1298_p3[10:0];

assign trunc_ln894_fu_1312_p1 = sub_ln894_fu_1306_p2[13:0];

assign trunc_ln897_fu_1338_p1 = sub_ln894_fu_1306_p2[3:0];

assign xor_ln32_fu_588_p2 = (icmp_ln11_fu_496_p2 ^ 1'd1);

assign xor_ln899_fu_1384_p2 = (tmp_22_fu_1376_p3 ^ 1'd1);

assign zext_ln1117_10_fu_648_p1 = add_ln1117_fu_642_p2;

assign zext_ln1117_11_fu_756_p1 = add_ln1117_2_fu_751_p2;

assign zext_ln1117_12_fu_677_p1 = add_ln1117_4_fu_671_p2;

assign zext_ln1117_13_fu_871_p1 = add_ln1117_5_fu_867_p2;

assign zext_ln1117_14_fu_769_p1 = add_ln1117_7_fu_764_p2;

assign zext_ln1117_15_fu_885_p1 = add_ln1117_8_fu_881_p2;

assign zext_ln1117_16_fu_1093_p1 = add_ln1117_9_reg_1884;

assign zext_ln1117_5_fu_542_p1 = tmp_16_fu_534_p3;

assign zext_ln1117_6_fu_729_p1 = tmp_17_fu_721_p3;

assign zext_ln1117_7_fu_741_p1 = tmp_18_fu_733_p3;

assign zext_ln1117_8_fu_841_p1 = tmp_s_fu_834_p3;

assign zext_ln1117_9_fu_852_p1 = tmp_6_fu_845_p3;

assign zext_ln1117_fu_530_p1 = tmp_fu_522_p3;

assign zext_ln1192_1_fu_916_p1 = $unsigned(sext_ln1118_5_fu_902_p1);

assign zext_ln1192_2_fu_958_p1 = $unsigned(sext_ln1118_7_fu_933_p1);

assign zext_ln1192_3_fu_1007_p1 = $unsigned(sext_ln1118_9_fu_993_p1);

assign zext_ln1192_4_fu_1049_p1 = $unsigned(sext_ln1118_11_fu_1024_p1);

assign zext_ln1192_5_fu_1132_p1 = $unsigned(sext_ln1118_13_fu_1118_p1);

assign zext_ln1192_6_fu_1174_p1 = $unsigned(sext_ln1118_15_fu_1149_p1);

assign zext_ln1192_7_fu_1226_p1 = $unsigned(sext_ln1118_17_fu_1212_p1);

assign zext_ln1192_fu_814_p1 = $unsigned(sext_ln1118_3_fu_790_p1);

assign zext_ln203_13_fu_1083_p1 = tmp_19_fu_1076_p3;

assign zext_ln203_14_fu_1097_p1 = select_ln32_6_reg_1698;

assign zext_ln203_15_fu_1106_p1 = add_ln203_7_fu_1100_p2;

assign zext_ln23_fu_696_p1 = select_ln32_6_fu_618_p3;

assign zext_ln32_1_fu_638_p1 = select_ln32_7_fu_626_p3;

assign zext_ln32_2_fu_667_p1 = select_ln32_8_fu_659_p3;

assign zext_ln32_3_fu_761_p1 = select_ln32_9_reg_1737;

assign zext_ln703_2_fu_912_p1 = shl_ln728_1_fu_905_p3;

assign zext_ln703_3_fu_954_p1 = shl_ln728_2_fu_946_p3;

assign zext_ln703_4_fu_1003_p1 = shl_ln728_3_fu_996_p3;

assign zext_ln703_5_fu_1045_p1 = shl_ln728_4_fu_1037_p3;

assign zext_ln703_6_fu_1128_p1 = shl_ln728_5_fu_1121_p3;

assign zext_ln703_7_fu_1170_p1 = shl_ln728_6_fu_1162_p3;

assign zext_ln703_8_fu_1222_p1 = shl_ln728_7_fu_1215_p3;

assign zext_ln703_fu_810_p1 = shl_ln_fu_802_p3;

assign zext_ln897_fu_1348_p1 = sub_ln897_fu_1342_p2;

assign zext_ln907_2_fu_1428_p1 = tmp_V_8_fu_1274_p3;

assign zext_ln908_2_fu_1460_p1 = sub_ln908_fu_1454_p2;

assign zext_ln908_fu_1450_p1 = lshr_ln908_fu_1444_p2;

assign zext_ln911_fu_1478_p1 = or_ln_fu_1416_p3;

always @ (posedge ap_clk) begin
    sub_ln1117_reg_1682[1:0] <= 2'b00;
    zext_ln32_1_reg_1709[10:5] <= 6'b000000;
    zext_ln32_2_reg_1726[10:5] <= 6'b000000;
    sub_ln1117_1_reg_1797[1:0] <= 2'b00;
    zext_ln32_3_reg_1808[10:5] <= 6'b000000;
end

endmodule //conv_1
