// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_V_address0,
        input_0_V_ce0,
        input_0_V_q0,
        input_1_V_address0,
        input_1_V_ce0,
        input_1_V_q0,
        input_2_V_address0,
        input_2_V_ce0,
        input_2_V_q0,
        input_3_V_address0,
        input_3_V_ce0,
        input_3_V_q0,
        input_4_V_address0,
        input_4_V_ce0,
        input_4_V_q0,
        input_5_V_address0,
        input_5_V_ce0,
        input_5_V_q0,
        input_6_0_V_address0,
        input_6_0_V_ce0,
        input_6_0_V_q0,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_0_V_address0;
output   input_0_V_ce0;
input  [13:0] input_0_V_q0;
output  [7:0] input_1_V_address0;
output   input_1_V_ce0;
input  [13:0] input_1_V_q0;
output  [7:0] input_2_V_address0;
output   input_2_V_ce0;
input  [13:0] input_2_V_q0;
output  [7:0] input_3_V_address0;
output   input_3_V_ce0;
input  [13:0] input_3_V_q0;
output  [7:0] input_4_V_address0;
output   input_4_V_ce0;
input  [13:0] input_4_V_q0;
output  [7:0] input_5_V_address0;
output   input_5_V_ce0;
input  [13:0] input_5_V_q0;
output  [6:0] input_6_0_V_address0;
output   input_6_0_V_ce0;
input  [13:0] input_6_0_V_q0;
output  [10:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_0_V_ce0;
reg input_1_V_ce0;
reg input_2_V_ce0;
reg input_3_V_ce0;
reg input_4_V_ce0;
reg input_5_V_ce0;
reg input_6_0_V_ce0;
reg conv_out_V_ce0;
reg conv_out_V_we0;

(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] conv_2_weights_V_address0;
reg    conv_2_weights_V_ce0;
wire   [9:0] conv_2_weights_V_q0;
wire   [3:0] conv_2_bias_V_address0;
reg    conv_2_bias_V_ce0;
wire   [7:0] conv_2_bias_V_q0;
wire   [6:0] add_ln8_fu_477_p2;
reg   [6:0] add_ln8_reg_1223;
wire    ap_CS_fsm_state2;
wire   [3:0] r_fu_489_p2;
reg   [3:0] r_reg_1231;
wire   [3:0] c_fu_501_p2;
reg   [3:0] c_reg_1239;
wire    ap_CS_fsm_state3;
wire   [11:0] zext_ln14_fu_525_p1;
reg   [11:0] zext_ln14_reg_1244;
wire   [0:0] icmp_ln11_fu_495_p2;
wire   [4:0] f_fu_535_p2;
reg   [4:0] f_reg_1252;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln26_fu_541_p1;
reg   [63:0] zext_ln26_reg_1257;
wire   [0:0] icmp_ln14_fu_529_p2;
wire   [10:0] zext_ln203_13_fu_545_p1;
reg   [10:0] zext_ln203_13_reg_1262;
reg   [10:0] conv_out_V_addr_reg_1267;
wire   [1:0] wr_fu_573_p2;
reg   [1:0] wr_reg_1275;
wire    ap_CS_fsm_state5;
wire  signed [5:0] sext_ln1116_fu_601_p1;
reg  signed [5:0] sext_ln1116_reg_1280;
wire   [0:0] icmp_ln18_fu_567_p2;
wire   [5:0] zext_ln1117_fu_619_p1;
reg   [5:0] zext_ln1117_reg_1285;
wire   [7:0] sub_ln1117_fu_639_p2;
reg   [7:0] sub_ln1117_reg_1290;
wire   [1:0] wc_fu_655_p2;
reg   [1:0] wc_reg_1303;
wire    ap_CS_fsm_state6;
wire   [6:0] sub_ln1116_1_fu_690_p2;
reg   [6:0] sub_ln1116_1_reg_1308;
wire   [0:0] icmp_ln21_fu_649_p2;
wire   [3:0] add_ln26_1_fu_696_p2;
wire   [5:0] add_ln1117_fu_736_p2;
reg   [5:0] add_ln1117_reg_1318;
wire   [3:0] grp_fu_702_p2;
reg   [3:0] urem_ln1117_reg_1324;
wire    ap_CS_fsm_state13;
wire   [8:0] sub_ln1117_1_fu_759_p2;
reg   [8:0] sub_ln1117_1_reg_1328;
wire   [2:0] ch_fu_771_p2;
reg   [2:0] ch_reg_1336;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln24_fu_765_p2;
wire   [8:0] add_ln1117_1_fu_812_p2;
reg   [8:0] add_ln1117_1_reg_1346;
reg   [6:0] input_6_0_V_addr_reg_1351;
wire    ap_CS_fsm_state15;
wire  signed [24:0] sext_ln1116_1_fu_836_p1;
reg  signed [24:0] sext_ln1116_1_reg_1386;
wire    ap_CS_fsm_state16;
wire   [13:0] tmp_V_4_fu_883_p2;
reg   [13:0] tmp_V_4_reg_1396;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln885_fu_889_p2;
reg   [0:0] icmp_ln885_reg_1404;
wire   [0:0] p_Result_24_fu_895_p3;
reg   [0:0] p_Result_24_reg_1408;
wire    ap_CS_fsm_state18;
wire   [13:0] tmp_V_5_fu_907_p3;
reg   [13:0] tmp_V_5_reg_1413;
wire   [31:0] sub_ln894_fu_940_p2;
reg   [31:0] sub_ln894_reg_1419;
wire   [31:0] or_ln_fu_1050_p3;
reg   [31:0] or_ln_reg_1425;
wire   [0:0] icmp_ln908_fu_1058_p2;
reg   [0:0] icmp_ln908_reg_1430;
wire   [10:0] trunc_ln893_fu_1064_p1;
reg   [10:0] trunc_ln893_reg_1435;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln924_fu_1195_p2;
reg   [0:0] icmp_ln924_reg_1445;
wire   [0:0] icmp_ln924_1_fu_1201_p2;
reg   [0:0] icmp_ln924_1_reg_1450;
reg   [3:0] r_0_reg_318;
reg   [6:0] phi_mul_reg_330;
reg   [3:0] c_0_reg_342;
wire   [0:0] icmp_ln8_fu_483_p2;
reg   [4:0] f_0_reg_354;
wire    ap_CS_fsm_state21;
reg   [13:0] p_Val2_s_reg_365;
reg   [1:0] wr_0_reg_377;
reg   [13:0] w_sum_1_reg_388;
reg   [1:0] wc_0_reg_400;
reg   [13:0] p_Val2_19_reg_411;
reg   [2:0] ch_0_reg_423;
reg  signed [13:0] ap_phi_mux_phi_ln1117_phi_fu_437_p14;
reg   [13:0] storemerge_reg_460;
wire    ap_CS_fsm_state20;
wire   [0:0] and_ln924_fu_1211_p2;
wire   [63:0] zext_ln203_15_fu_558_p1;
wire   [63:0] zext_ln1116_6_fu_807_p1;
wire  signed [63:0] sext_ln1117_1_fu_822_p1;
wire   [63:0] zext_ln1117_6_fu_827_p1;
wire   [63:0] grp_fu_472_p0;
wire   [6:0] zext_ln203_fu_507_p1;
wire   [6:0] add_ln203_fu_511_p2;
wire   [10:0] tmp_10_fu_517_p3;
wire   [11:0] zext_ln203_14_fu_549_p1;
wire   [11:0] add_ln203_7_fu_553_p2;
wire   [3:0] tmp_11_fu_583_p3;
wire   [4:0] zext_ln1116_1_fu_591_p1;
wire   [4:0] zext_ln1116_fu_579_p1;
wire   [4:0] sub_ln1116_fu_595_p2;
wire   [3:0] zext_ln18_fu_563_p1;
wire   [3:0] add_ln26_fu_605_p2;
wire   [4:0] tmp_12_fu_611_p3;
wire   [6:0] tmp_13_fu_627_p3;
wire   [7:0] zext_ln1117_2_fu_635_p1;
wire   [7:0] zext_ln1117_1_fu_623_p1;
wire   [5:0] zext_ln1116_2_fu_661_p1;
wire   [5:0] add_ln1116_fu_665_p2;
wire   [3:0] trunc_ln1116_fu_670_p1;
wire   [6:0] p_shl_fu_674_p3;
wire   [6:0] tmp_18_fu_682_p3;
wire   [3:0] zext_ln21_fu_645_p1;
wire   [3:0] mul_ln1117_fu_712_p0;
wire   [9:0] mul_ln1117_fu_712_p2;
wire   [2:0] tmp_19_fu_718_p4;
wire  signed [3:0] sext_ln1117_fu_728_p1;
wire   [5:0] zext_ln1117_4_fu_732_p1;
wire   [6:0] tmp_20_fu_748_p3;
wire   [8:0] p_shl3_cast_fu_741_p3;
wire   [8:0] zext_ln1117_5_fu_755_p1;
wire   [6:0] zext_ln1116_3_fu_777_p1;
wire   [6:0] add_ln1116_1_fu_789_p2;
wire   [10:0] tmp_37_cast_fu_794_p3;
wire   [10:0] add_ln1116_2_fu_802_p2;
wire   [8:0] zext_ln1116_5_fu_785_p1;
wire   [7:0] zext_ln1116_4_fu_781_p1;
wire   [7:0] add_ln1117_2_fu_817_p2;
wire  signed [24:0] r_V_fu_1217_p2;
wire   [21:0] lhs_V_fu_847_p3;
wire  signed [27:0] sext_ln1118_1_fu_844_p1;
wire   [28:0] zext_ln728_fu_855_p1;
wire   [28:0] zext_ln703_fu_859_p1;
wire   [28:0] ret_V_fu_863_p2;
wire  signed [13:0] sext_ln1265_fu_879_p1;
wire   [13:0] tmp_V_fu_902_p2;
reg   [13:0] p_Result_s_fu_914_p4;
wire   [31:0] p_Result_25_fu_924_p3;
reg   [31:0] l_fu_932_p3;
wire   [31:0] lsb_index_fu_950_p2;
wire   [30:0] tmp_15_fu_956_p4;
wire   [3:0] trunc_ln897_fu_972_p1;
wire   [3:0] sub_ln897_fu_976_p2;
wire   [13:0] zext_ln897_fu_982_p1;
wire   [13:0] lshr_ln897_fu_986_p2;
wire   [13:0] p_Result_21_fu_992_p2;
wire   [0:0] icmp_ln897_fu_966_p2;
wire   [0:0] icmp_ln897_1_fu_998_p2;
wire   [0:0] tmp_16_fu_1010_p3;
wire   [13:0] trunc_ln894_fu_946_p1;
wire   [13:0] add_ln899_fu_1024_p2;
wire   [0:0] p_Result_22_fu_1030_p3;
wire   [0:0] xor_ln899_fu_1018_p2;
wire   [0:0] and_ln899_fu_1038_p2;
wire   [0:0] a_fu_1004_p2;
wire   [0:0] or_ln899_fu_1044_p2;
wire   [31:0] zext_ln907_1_fu_1071_p1;
wire   [31:0] add_ln908_fu_1074_p2;
wire   [31:0] lshr_ln908_fu_1079_p2;
wire   [31:0] sub_ln908_fu_1089_p2;
wire   [63:0] m_fu_1068_p1;
wire   [63:0] zext_ln908_1_fu_1094_p1;
wire   [63:0] zext_ln908_fu_1085_p1;
wire   [63:0] shl_ln908_fu_1098_p2;
wire   [63:0] zext_ln911_fu_1111_p1;
wire   [63:0] m_1_fu_1104_p3;
wire   [63:0] m_2_fu_1114_p2;
wire   [62:0] m_5_fu_1120_p4;
wire   [0:0] tmp_17_fu_1134_p3;
wire   [10:0] sub_ln915_fu_1150_p2;
wire   [10:0] select_ln915_fu_1142_p3;
wire   [10:0] add_ln915_fu_1155_p2;
wire   [63:0] m_6_fu_1130_p1;
wire   [11:0] tmp_2_fu_1161_p3;
wire   [63:0] p_Result_26_fu_1168_p5;
wire   [51:0] trunc_ln4_fu_1185_p4;
wire   [0:0] or_ln924_fu_1207_p2;
wire   [0:0] grp_fu_472_p2;
wire  signed [9:0] r_V_fu_1217_p0;
reg    grp_fu_702_ap_start;
wire    grp_fu_702_ap_done;
reg   [20:0] ap_NS_fsm;
wire   [9:0] mul_ln1117_fu_712_p00;
reg    ap_condition_340;

// power-on initialization
initial begin
#0 ap_CS_fsm = 21'd1;
end

conv_2_conv_2_weifYi #(
    .DataWidth( 10 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
conv_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_address0),
    .ce0(conv_2_weights_V_ce0),
    .q0(conv_2_weights_V_q0)
);

conv_2_conv_2_biag8j #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_bias_V_address0),
    .ce0(conv_2_bias_V_ce0),
    .q0(conv_2_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_472_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_472_p2)
);

cnn_urem_4ns_4ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 4 ))
cnn_urem_4ns_4ns_hbi_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_702_ap_start),
    .done(grp_fu_702_ap_done),
    .din0(add_ln26_1_fu_696_p2),
    .din1(4'd7),
    .ce(1'b1),
    .dout(grp_fu_702_p2)
);

cnn_mul_mul_10s_1ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 25 ))
cnn_mul_mul_10s_1ibs_U43(
    .din0(r_V_fu_1217_p0),
    .din1(ap_phi_mux_phi_ln1117_phi_fu_437_p14),
    .dout(r_V_fu_1217_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_529_p2 == 1'd1))) begin
        c_0_reg_342 <= c_reg_1239;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_483_p2 == 1'd0))) begin
        c_0_reg_342 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ch_0_reg_423 <= ch_reg_1336;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        ch_0_reg_423 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        f_0_reg_354 <= f_reg_1252;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_495_p2 == 1'd0))) begin
        f_0_reg_354 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_19_reg_411 <= {{ret_V_fu_863_p2[21:8]}};
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_Val2_19_reg_411 <= w_sum_1_reg_388;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_649_p2 == 1'd1))) begin
        p_Val2_s_reg_365 <= w_sum_1_reg_388;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_529_p2 == 1'd0))) begin
        p_Val2_s_reg_365 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_495_p2 == 1'd1))) begin
        phi_mul_reg_330 <= add_ln8_reg_1223;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_330 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_495_p2 == 1'd1))) begin
        r_0_reg_318 <= r_reg_1231;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_318 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        if (((1'd1 == and_ln924_fu_1211_p2) & (icmp_ln885_reg_1404 == 1'd0))) begin
            storemerge_reg_460 <= tmp_V_4_reg_1396;
        end else if (((icmp_ln885_reg_1404 == 1'd1) | (1'd0 == and_ln924_fu_1211_p2))) begin
            storemerge_reg_460 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln24_fu_765_p2 == 1'd1))) begin
        w_sum_1_reg_388 <= p_Val2_19_reg_411;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_567_p2 == 1'd0))) begin
        w_sum_1_reg_388 <= p_Val2_s_reg_365;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln24_fu_765_p2 == 1'd1))) begin
        wc_0_reg_400 <= wc_reg_1303;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_567_p2 == 1'd0))) begin
        wc_0_reg_400 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_649_p2 == 1'd1))) begin
        wr_0_reg_377 <= wr_reg_1275;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_529_p2 == 1'd0))) begin
        wr_0_reg_377 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln24_fu_765_p2 == 1'd0))) begin
        add_ln1117_1_reg_1346 <= add_ln1117_1_fu_812_p2;
        input_6_0_V_addr_reg_1351 <= sext_ln1117_1_fu_822_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_649_p2 == 1'd0))) begin
        add_ln1117_reg_1318 <= add_ln1117_fu_736_p2;
        sub_ln1116_1_reg_1308[6 : 1] <= sub_ln1116_1_fu_690_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_1223 <= add_ln8_fu_477_p2;
        r_reg_1231 <= r_fu_489_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_1239 <= c_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ch_reg_1336 <= ch_fu_771_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_529_p2 == 1'd0))) begin
        conv_out_V_addr_reg_1267 <= zext_ln203_15_fu_558_p1;
        zext_ln203_13_reg_1262[4 : 0] <= zext_ln203_13_fu_545_p1[4 : 0];
        zext_ln26_reg_1257[4 : 0] <= zext_ln26_fu_541_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_1252 <= f_fu_535_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        icmp_ln885_reg_1404 <= icmp_ln885_fu_889_p2;
        tmp_V_4_reg_1396 <= tmp_V_4_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        icmp_ln908_reg_1430 <= icmp_ln908_fu_1058_p2;
        or_ln_reg_1425[0] <= or_ln_fu_1050_p3[0];
        p_Result_24_reg_1408 <= tmp_V_4_reg_1396[32'd13];
        sub_ln894_reg_1419 <= sub_ln894_fu_940_p2;
        tmp_V_5_reg_1413 <= tmp_V_5_fu_907_p3;
        trunc_ln893_reg_1435 <= trunc_ln893_fu_1064_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        icmp_ln924_1_reg_1450 <= icmp_ln924_1_fu_1201_p2;
        icmp_ln924_reg_1445 <= icmp_ln924_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sext_ln1116_1_reg_1386 <= sext_ln1116_1_fu_836_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_567_p2 == 1'd0))) begin
        sext_ln1116_reg_1280 <= sext_ln1116_fu_601_p1;
        sub_ln1117_reg_1290[7 : 1] <= sub_ln1117_fu_639_p2[7 : 1];
        zext_ln1117_reg_1285[4 : 1] <= zext_ln1117_fu_619_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sub_ln1117_1_reg_1328[8 : 1] <= sub_ln1117_1_fu_759_p2[8 : 1];
        urem_ln1117_reg_1324 <= grp_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        wc_reg_1303 <= wc_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wr_reg_1275 <= wr_fu_573_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_495_p2 == 1'd0))) begin
        zext_ln14_reg_1244[10 : 4] <= zext_ln14_fu_525_p1[10 : 4];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_483_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        if ((1'b1 == ap_condition_340)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_6_0_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd5)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_5_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd4)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_4_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd3)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_3_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd2)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_2_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd1)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_1_V_q0;
        end else if ((urem_ln1117_reg_1324 == 4'd0)) begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = input_0_V_q0;
        end else begin
            ap_phi_mux_phi_ln1117_phi_fu_437_p14 = 'bx;
        end
    end else begin
        ap_phi_mux_phi_ln1117_phi_fu_437_p14 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_483_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_2_bias_V_ce0 = 1'b1;
    end else begin
        conv_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_weights_V_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_649_p2 == 1'd0))) begin
        grp_fu_702_ap_start = 1'b1;
    end else begin
        grp_fu_702_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_0_V_ce0 = 1'b1;
    end else begin
        input_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_1_V_ce0 = 1'b1;
    end else begin
        input_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_2_V_ce0 = 1'b1;
    end else begin
        input_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_3_V_ce0 = 1'b1;
    end else begin
        input_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_4_V_ce0 = 1'b1;
    end else begin
        input_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_5_V_ce0 = 1'b1;
    end else begin
        input_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        input_6_0_V_ce0 = 1'b1;
    end else begin
        input_6_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_483_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_495_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_529_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_567_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_649_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln24_fu_765_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln885_fu_889_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_1004_p2 = (icmp_ln897_fu_966_p2 & icmp_ln897_1_fu_998_p2);

assign add_ln1116_1_fu_789_p2 = (zext_ln1116_3_fu_777_p1 + sub_ln1116_1_reg_1308);

assign add_ln1116_2_fu_802_p2 = (zext_ln203_13_reg_1262 + tmp_37_cast_fu_794_p3);

assign add_ln1116_fu_665_p2 = ($signed(sext_ln1116_reg_1280) + $signed(zext_ln1116_2_fu_661_p1));

assign add_ln1117_1_fu_812_p2 = (zext_ln1116_5_fu_785_p1 + sub_ln1117_1_reg_1328);

assign add_ln1117_2_fu_817_p2 = (zext_ln1116_4_fu_781_p1 + sub_ln1117_reg_1290);

assign add_ln1117_fu_736_p2 = (zext_ln1117_reg_1285 + zext_ln1117_4_fu_732_p1);

assign add_ln203_7_fu_553_p2 = (zext_ln14_reg_1244 + zext_ln203_14_fu_549_p1);

assign add_ln203_fu_511_p2 = (phi_mul_reg_330 + zext_ln203_fu_507_p1);

assign add_ln26_1_fu_696_p2 = (zext_ln21_fu_645_p1 + c_0_reg_342);

assign add_ln26_fu_605_p2 = (zext_ln18_fu_563_p1 + r_0_reg_318);

assign add_ln899_fu_1024_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_946_p1));

assign add_ln8_fu_477_p2 = (phi_mul_reg_330 + 7'd11);

assign add_ln908_fu_1074_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1419));

assign add_ln915_fu_1155_p2 = (sub_ln915_fu_1150_p2 + select_ln915_fu_1142_p3);

assign and_ln899_fu_1038_p2 = (xor_ln899_fu_1018_p2 & p_Result_22_fu_1030_p3);

assign and_ln924_fu_1211_p2 = (or_ln924_fu_1207_p2 & grp_fu_472_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_condition_340 = (~(urem_ln1117_reg_1324 == 4'd5) & ~(urem_ln1117_reg_1324 == 4'd4) & ~(urem_ln1117_reg_1324 == 4'd3) & ~(urem_ln1117_reg_1324 == 4'd2) & ~(urem_ln1117_reg_1324 == 4'd1) & ~(urem_ln1117_reg_1324 == 4'd0));
end

assign c_fu_501_p2 = (c_0_reg_342 + 4'd1);

assign ch_fu_771_p2 = (ch_0_reg_423 + 3'd1);

assign conv_2_bias_V_address0 = zext_ln26_reg_1257;

assign conv_2_weights_V_address0 = zext_ln1116_6_fu_807_p1;

assign conv_out_V_address0 = conv_out_V_addr_reg_1267;

assign conv_out_V_d0 = storemerge_reg_460;

assign f_fu_535_p2 = (f_0_reg_354 + 5'd1);

assign grp_fu_472_p0 = p_Result_26_fu_1168_p5;

assign icmp_ln11_fu_495_p2 = ((c_0_reg_342 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_529_p2 = ((f_0_reg_354 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_567_p2 = ((wr_0_reg_377 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_649_p2 = ((wc_0_reg_400 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_765_p2 = ((ch_0_reg_423 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_889_p2 = ((tmp_V_4_fu_883_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_998_p2 = ((p_Result_21_fu_992_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_966_p2 = (($signed(tmp_15_fu_956_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_483_p2 = ((r_0_reg_318 == 4'd11) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_1058_p2 = (($signed(lsb_index_fu_950_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_1201_p2 = ((trunc_ln4_fu_1185_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1195_p2 = ((add_ln915_fu_1155_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign input_0_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_1_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_2_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_3_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_4_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_5_V_address0 = zext_ln1117_6_fu_827_p1;

assign input_6_0_V_address0 = input_6_0_V_addr_reg_1351;


always @ (p_Result_25_fu_924_p3) begin
    if (p_Result_25_fu_924_p3[0] == 1'b1) begin
        l_fu_932_p3 = 32'd0;
    end else if (p_Result_25_fu_924_p3[1] == 1'b1) begin
        l_fu_932_p3 = 32'd1;
    end else if (p_Result_25_fu_924_p3[2] == 1'b1) begin
        l_fu_932_p3 = 32'd2;
    end else if (p_Result_25_fu_924_p3[3] == 1'b1) begin
        l_fu_932_p3 = 32'd3;
    end else if (p_Result_25_fu_924_p3[4] == 1'b1) begin
        l_fu_932_p3 = 32'd4;
    end else if (p_Result_25_fu_924_p3[5] == 1'b1) begin
        l_fu_932_p3 = 32'd5;
    end else if (p_Result_25_fu_924_p3[6] == 1'b1) begin
        l_fu_932_p3 = 32'd6;
    end else if (p_Result_25_fu_924_p3[7] == 1'b1) begin
        l_fu_932_p3 = 32'd7;
    end else if (p_Result_25_fu_924_p3[8] == 1'b1) begin
        l_fu_932_p3 = 32'd8;
    end else if (p_Result_25_fu_924_p3[9] == 1'b1) begin
        l_fu_932_p3 = 32'd9;
    end else if (p_Result_25_fu_924_p3[10] == 1'b1) begin
        l_fu_932_p3 = 32'd10;
    end else if (p_Result_25_fu_924_p3[11] == 1'b1) begin
        l_fu_932_p3 = 32'd11;
    end else if (p_Result_25_fu_924_p3[12] == 1'b1) begin
        l_fu_932_p3 = 32'd12;
    end else if (p_Result_25_fu_924_p3[13] == 1'b1) begin
        l_fu_932_p3 = 32'd13;
    end else if (p_Result_25_fu_924_p3[14] == 1'b1) begin
        l_fu_932_p3 = 32'd14;
    end else if (p_Result_25_fu_924_p3[15] == 1'b1) begin
        l_fu_932_p3 = 32'd15;
    end else if (p_Result_25_fu_924_p3[16] == 1'b1) begin
        l_fu_932_p3 = 32'd16;
    end else if (p_Result_25_fu_924_p3[17] == 1'b1) begin
        l_fu_932_p3 = 32'd17;
    end else if (p_Result_25_fu_924_p3[18] == 1'b1) begin
        l_fu_932_p3 = 32'd18;
    end else if (p_Result_25_fu_924_p3[19] == 1'b1) begin
        l_fu_932_p3 = 32'd19;
    end else if (p_Result_25_fu_924_p3[20] == 1'b1) begin
        l_fu_932_p3 = 32'd20;
    end else if (p_Result_25_fu_924_p3[21] == 1'b1) begin
        l_fu_932_p3 = 32'd21;
    end else if (p_Result_25_fu_924_p3[22] == 1'b1) begin
        l_fu_932_p3 = 32'd22;
    end else if (p_Result_25_fu_924_p3[23] == 1'b1) begin
        l_fu_932_p3 = 32'd23;
    end else if (p_Result_25_fu_924_p3[24] == 1'b1) begin
        l_fu_932_p3 = 32'd24;
    end else if (p_Result_25_fu_924_p3[25] == 1'b1) begin
        l_fu_932_p3 = 32'd25;
    end else if (p_Result_25_fu_924_p3[26] == 1'b1) begin
        l_fu_932_p3 = 32'd26;
    end else if (p_Result_25_fu_924_p3[27] == 1'b1) begin
        l_fu_932_p3 = 32'd27;
    end else if (p_Result_25_fu_924_p3[28] == 1'b1) begin
        l_fu_932_p3 = 32'd28;
    end else if (p_Result_25_fu_924_p3[29] == 1'b1) begin
        l_fu_932_p3 = 32'd29;
    end else if (p_Result_25_fu_924_p3[30] == 1'b1) begin
        l_fu_932_p3 = 32'd30;
    end else if (p_Result_25_fu_924_p3[31] == 1'b1) begin
        l_fu_932_p3 = 32'd31;
    end else begin
        l_fu_932_p3 = 32'd32;
    end
end

assign lhs_V_fu_847_p3 = {{p_Val2_19_reg_411}, {8'd0}};

assign lsb_index_fu_950_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_940_p2));

assign lshr_ln897_fu_986_p2 = 14'd16383 >> zext_ln897_fu_982_p1;

assign lshr_ln908_fu_1079_p2 = zext_ln907_1_fu_1071_p1 >> add_ln908_fu_1074_p2;

assign m_1_fu_1104_p3 = ((icmp_ln908_reg_1430[0:0] === 1'b1) ? zext_ln908_fu_1085_p1 : shl_ln908_fu_1098_p2);

assign m_2_fu_1114_p2 = (zext_ln911_fu_1111_p1 + m_1_fu_1104_p3);

assign m_5_fu_1120_p4 = {{m_2_fu_1114_p2[63:1]}};

assign m_6_fu_1130_p1 = m_5_fu_1120_p4;

assign m_fu_1068_p1 = tmp_V_5_reg_1413;

assign mul_ln1117_fu_712_p0 = mul_ln1117_fu_712_p00;

assign mul_ln1117_fu_712_p00 = add_ln26_1_fu_696_p2;

assign mul_ln1117_fu_712_p2 = (mul_ln1117_fu_712_p0 * $signed('h13));

assign or_ln899_fu_1044_p2 = (and_ln899_fu_1038_p2 | a_fu_1004_p2);

assign or_ln924_fu_1207_p2 = (icmp_ln924_reg_1445 | icmp_ln924_1_reg_1450);

assign or_ln_fu_1050_p3 = {{31'd0}, {or_ln899_fu_1044_p2}};

assign p_Result_21_fu_992_p2 = (tmp_V_5_fu_907_p3 & lshr_ln897_fu_986_p2);

assign p_Result_22_fu_1030_p3 = tmp_V_5_fu_907_p3[add_ln899_fu_1024_p2];

assign p_Result_24_fu_895_p3 = tmp_V_4_reg_1396[32'd13];

assign p_Result_25_fu_924_p3 = {{18'd262143}, {p_Result_s_fu_914_p4}};

assign p_Result_26_fu_1168_p5 = {{tmp_2_fu_1161_p3}, {m_6_fu_1130_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_907_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_914_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_914_p4[ap_tvar_int_0] = tmp_V_5_fu_907_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl3_cast_fu_741_p3 = {{add_ln1117_reg_1318}, {3'd0}};

assign p_shl_fu_674_p3 = {{trunc_ln1116_fu_670_p1}, {3'd0}};

assign r_V_fu_1217_p0 = sext_ln1116_1_reg_1386;

assign r_fu_489_p2 = (r_0_reg_318 + 4'd1);

assign ret_V_fu_863_p2 = (zext_ln728_fu_855_p1 + zext_ln703_fu_859_p1);

assign select_ln915_fu_1142_p3 = ((tmp_17_fu_1134_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1116_1_fu_836_p1 = $signed(conv_2_weights_V_q0);

assign sext_ln1116_fu_601_p1 = $signed(sub_ln1116_fu_595_p2);

assign sext_ln1117_1_fu_822_p1 = $signed(add_ln1117_2_fu_817_p2);

assign sext_ln1117_fu_728_p1 = $signed(tmp_19_fu_718_p4);

assign sext_ln1118_1_fu_844_p1 = r_V_fu_1217_p2;

assign sext_ln1265_fu_879_p1 = $signed(conv_2_bias_V_q0);

assign shl_ln908_fu_1098_p2 = m_fu_1068_p1 << zext_ln908_1_fu_1094_p1;

assign sub_ln1116_1_fu_690_p2 = (p_shl_fu_674_p3 - tmp_18_fu_682_p3);

assign sub_ln1116_fu_595_p2 = (zext_ln1116_1_fu_591_p1 - zext_ln1116_fu_579_p1);

assign sub_ln1117_1_fu_759_p2 = (p_shl3_cast_fu_741_p3 - zext_ln1117_5_fu_755_p1);

assign sub_ln1117_fu_639_p2 = (zext_ln1117_2_fu_635_p1 - zext_ln1117_1_fu_623_p1);

assign sub_ln894_fu_940_p2 = (32'd14 - l_fu_932_p3);

assign sub_ln897_fu_976_p2 = (4'd4 - trunc_ln897_fu_972_p1);

assign sub_ln908_fu_1089_p2 = (32'd54 - sub_ln894_reg_1419);

assign sub_ln915_fu_1150_p2 = (11'd6 - trunc_ln893_reg_1435);

assign tmp_10_fu_517_p3 = {{add_ln203_fu_511_p2}, {4'd0}};

assign tmp_11_fu_583_p3 = {{wr_0_reg_377}, {2'd0}};

assign tmp_12_fu_611_p3 = {{add_ln26_fu_605_p2}, {1'd0}};

assign tmp_13_fu_627_p3 = {{add_ln26_fu_605_p2}, {3'd0}};

assign tmp_15_fu_956_p4 = {{lsb_index_fu_950_p2[31:1]}};

assign tmp_16_fu_1010_p3 = lsb_index_fu_950_p2[32'd31];

assign tmp_17_fu_1134_p3 = m_2_fu_1114_p2[32'd54];

assign tmp_18_fu_682_p3 = {{add_ln1116_fu_665_p2}, {1'd0}};

assign tmp_19_fu_718_p4 = {{mul_ln1117_fu_712_p2[9:7]}};

assign tmp_20_fu_748_p3 = {{add_ln1117_reg_1318}, {1'd0}};

assign tmp_2_fu_1161_p3 = {{p_Result_24_reg_1408}, {add_ln915_fu_1155_p2}};

assign tmp_37_cast_fu_794_p3 = {{add_ln1116_1_fu_789_p2}, {4'd0}};

assign tmp_V_4_fu_883_p2 = ($signed(sext_ln1265_fu_879_p1) + $signed(p_Val2_s_reg_365));

assign tmp_V_5_fu_907_p3 = ((p_Result_24_fu_895_p3[0:0] === 1'b1) ? tmp_V_fu_902_p2 : tmp_V_4_reg_1396);

assign tmp_V_fu_902_p2 = (14'd0 - tmp_V_4_reg_1396);

assign trunc_ln1116_fu_670_p1 = add_ln1116_fu_665_p2[3:0];

assign trunc_ln4_fu_1185_p4 = {{m_2_fu_1114_p2[52:1]}};

assign trunc_ln893_fu_1064_p1 = l_fu_932_p3[10:0];

assign trunc_ln894_fu_946_p1 = sub_ln894_fu_940_p2[13:0];

assign trunc_ln897_fu_972_p1 = sub_ln894_fu_940_p2[3:0];

assign wc_fu_655_p2 = (wc_0_reg_400 + 2'd1);

assign wr_fu_573_p2 = (wr_0_reg_377 + 2'd1);

assign xor_ln899_fu_1018_p2 = (tmp_16_fu_1010_p3 ^ 1'd1);

assign zext_ln1116_1_fu_591_p1 = tmp_11_fu_583_p3;

assign zext_ln1116_2_fu_661_p1 = wc_0_reg_400;

assign zext_ln1116_3_fu_777_p1 = ch_0_reg_423;

assign zext_ln1116_4_fu_781_p1 = ch_0_reg_423;

assign zext_ln1116_5_fu_785_p1 = ch_0_reg_423;

assign zext_ln1116_6_fu_807_p1 = add_ln1116_2_fu_802_p2;

assign zext_ln1116_fu_579_p1 = wr_0_reg_377;

assign zext_ln1117_1_fu_623_p1 = tmp_12_fu_611_p3;

assign zext_ln1117_2_fu_635_p1 = tmp_13_fu_627_p3;

assign zext_ln1117_4_fu_732_p1 = $unsigned(sext_ln1117_fu_728_p1);

assign zext_ln1117_5_fu_755_p1 = tmp_20_fu_748_p3;

assign zext_ln1117_6_fu_827_p1 = add_ln1117_1_reg_1346;

assign zext_ln1117_fu_619_p1 = tmp_12_fu_611_p3;

assign zext_ln14_fu_525_p1 = tmp_10_fu_517_p3;

assign zext_ln18_fu_563_p1 = wr_0_reg_377;

assign zext_ln203_13_fu_545_p1 = f_0_reg_354;

assign zext_ln203_14_fu_549_p1 = f_0_reg_354;

assign zext_ln203_15_fu_558_p1 = add_ln203_7_fu_553_p2;

assign zext_ln203_fu_507_p1 = c_0_reg_342;

assign zext_ln21_fu_645_p1 = wc_0_reg_400;

assign zext_ln26_fu_541_p1 = f_0_reg_354;

assign zext_ln703_fu_859_p1 = $unsigned(sext_ln1118_1_fu_844_p1);

assign zext_ln728_fu_855_p1 = lhs_V_fu_847_p3;

assign zext_ln897_fu_982_p1 = sub_ln897_fu_976_p2;

assign zext_ln907_1_fu_1071_p1 = tmp_V_5_reg_1413;

assign zext_ln908_1_fu_1094_p1 = sub_ln908_fu_1089_p2;

assign zext_ln908_fu_1085_p1 = lshr_ln908_fu_1079_p2;

assign zext_ln911_fu_1111_p1 = or_ln_reg_1425;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1244[3:0] <= 4'b0000;
    zext_ln14_reg_1244[11] <= 1'b0;
    zext_ln26_reg_1257[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln203_13_reg_1262[10:5] <= 6'b000000;
    zext_ln1117_reg_1285[0] <= 1'b0;
    zext_ln1117_reg_1285[5] <= 1'b0;
    sub_ln1117_reg_1290[0] <= 1'b0;
    sub_ln1116_1_reg_1308[0] <= 1'b0;
    sub_ln1117_1_reg_1328[0] <= 1'b0;
    or_ln_reg_1425[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_2
