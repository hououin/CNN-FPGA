// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        conv_out_0_V_address0,
        conv_out_0_V_ce0,
        conv_out_0_V_we0,
        conv_out_0_V_d0,
        conv_out_1_V_address0,
        conv_out_1_V_ce0,
        conv_out_1_V_we0,
        conv_out_1_V_d0,
        conv_out_2_V_address0,
        conv_out_2_V_ce0,
        conv_out_2_V_we0,
        conv_out_2_V_d0,
        conv_out_3_V_address0,
        conv_out_3_V_ce0,
        conv_out_3_V_we0,
        conv_out_3_V_d0,
        conv_out_4_V_address0,
        conv_out_4_V_ce0,
        conv_out_4_V_we0,
        conv_out_4_V_d0,
        conv_out_5_V_address0,
        conv_out_5_V_ce0,
        conv_out_5_V_we0,
        conv_out_5_V_d0,
        conv_out_6_V_address0,
        conv_out_6_V_ce0,
        conv_out_6_V_we0,
        conv_out_6_V_d0,
        conv_out_7_V_address0,
        conv_out_7_V_ce0,
        conv_out_7_V_we0,
        conv_out_7_V_d0,
        conv_out_8_V_address0,
        conv_out_8_V_ce0,
        conv_out_8_V_we0,
        conv_out_8_V_d0,
        conv_out_9_V_address0,
        conv_out_9_V_ce0,
        conv_out_9_V_we0,
        conv_out_9_V_d0,
        conv_out_10_V_address0,
        conv_out_10_V_ce0,
        conv_out_10_V_we0,
        conv_out_10_V_d0,
        conv_out_11_V_address0,
        conv_out_11_V_ce0,
        conv_out_11_V_we0,
        conv_out_11_V_d0,
        conv_out_12_V_address0,
        conv_out_12_V_ce0,
        conv_out_12_V_we0,
        conv_out_12_V_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [8:0] conv_out_0_V_address0;
output   conv_out_0_V_ce0;
output   conv_out_0_V_we0;
output  [13:0] conv_out_0_V_d0;
output  [8:0] conv_out_1_V_address0;
output   conv_out_1_V_ce0;
output   conv_out_1_V_we0;
output  [13:0] conv_out_1_V_d0;
output  [8:0] conv_out_2_V_address0;
output   conv_out_2_V_ce0;
output   conv_out_2_V_we0;
output  [13:0] conv_out_2_V_d0;
output  [8:0] conv_out_3_V_address0;
output   conv_out_3_V_ce0;
output   conv_out_3_V_we0;
output  [13:0] conv_out_3_V_d0;
output  [8:0] conv_out_4_V_address0;
output   conv_out_4_V_ce0;
output   conv_out_4_V_we0;
output  [13:0] conv_out_4_V_d0;
output  [8:0] conv_out_5_V_address0;
output   conv_out_5_V_ce0;
output   conv_out_5_V_we0;
output  [13:0] conv_out_5_V_d0;
output  [8:0] conv_out_6_V_address0;
output   conv_out_6_V_ce0;
output   conv_out_6_V_we0;
output  [13:0] conv_out_6_V_d0;
output  [8:0] conv_out_7_V_address0;
output   conv_out_7_V_ce0;
output   conv_out_7_V_we0;
output  [13:0] conv_out_7_V_d0;
output  [8:0] conv_out_8_V_address0;
output   conv_out_8_V_ce0;
output   conv_out_8_V_we0;
output  [13:0] conv_out_8_V_d0;
output  [8:0] conv_out_9_V_address0;
output   conv_out_9_V_ce0;
output   conv_out_9_V_we0;
output  [13:0] conv_out_9_V_d0;
output  [8:0] conv_out_10_V_address0;
output   conv_out_10_V_ce0;
output   conv_out_10_V_we0;
output  [13:0] conv_out_10_V_d0;
output  [8:0] conv_out_11_V_address0;
output   conv_out_11_V_ce0;
output   conv_out_11_V_we0;
output  [13:0] conv_out_11_V_d0;
output  [8:0] conv_out_12_V_address0;
output   conv_out_12_V_ce0;
output   conv_out_12_V_we0;
output  [13:0] conv_out_12_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg conv_out_0_V_ce0;
reg conv_out_0_V_we0;
reg[13:0] conv_out_0_V_d0;
reg conv_out_1_V_ce0;
reg conv_out_1_V_we0;
reg[13:0] conv_out_1_V_d0;
reg conv_out_2_V_ce0;
reg conv_out_2_V_we0;
reg[13:0] conv_out_2_V_d0;
reg conv_out_3_V_ce0;
reg conv_out_3_V_we0;
reg[13:0] conv_out_3_V_d0;
reg conv_out_4_V_ce0;
reg conv_out_4_V_we0;
reg[13:0] conv_out_4_V_d0;
reg conv_out_5_V_ce0;
reg conv_out_5_V_we0;
reg[13:0] conv_out_5_V_d0;
reg conv_out_6_V_ce0;
reg conv_out_6_V_we0;
reg[13:0] conv_out_6_V_d0;
reg conv_out_7_V_ce0;
reg conv_out_7_V_we0;
reg[13:0] conv_out_7_V_d0;
reg conv_out_8_V_ce0;
reg conv_out_8_V_we0;
reg[13:0] conv_out_8_V_d0;
reg conv_out_9_V_ce0;
reg conv_out_9_V_we0;
reg[13:0] conv_out_9_V_d0;
reg conv_out_10_V_ce0;
reg conv_out_10_V_we0;
reg[13:0] conv_out_10_V_d0;
reg conv_out_11_V_ce0;
reg conv_out_11_V_we0;
reg[13:0] conv_out_11_V_d0;
reg conv_out_12_V_ce0;
reg conv_out_12_V_we0;
reg[13:0] conv_out_12_V_d0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] conv_1_weights_V_address0;
reg    conv_1_weights_V_ce0;
wire  signed [8:0] conv_1_weights_V_q0;
wire   [2:0] conv_1_bias_V_address0;
reg    conv_1_bias_V_ce0;
wire   [6:0] conv_1_bias_V_q0;
wire   [4:0] r_fu_508_p2;
reg   [4:0] r_reg_1225;
wire    ap_CS_fsm_state2;
wire   [6:0] zext_ln11_fu_522_p1;
reg   [6:0] zext_ln11_reg_1230;
wire   [0:0] icmp_ln8_fu_502_p2;
wire   [4:0] c_fu_532_p2;
reg   [4:0] c_reg_1238;
wire    ap_CS_fsm_state3;
wire   [4:0] select_ln203_fu_550_p3;
reg   [4:0] select_ln203_reg_1243;
wire   [0:0] icmp_ln11_fu_526_p2;
wire   [9:0] sub_ln203_fu_627_p2;
reg   [9:0] sub_ln203_reg_1247;
wire   [2:0] f_fu_639_p2;
reg   [2:0] f_reg_1255;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln23_fu_645_p1;
reg   [63:0] zext_ln23_reg_1260;
wire   [0:0] icmp_ln14_fu_633_p2;
wire   [6:0] zext_ln203_19_fu_649_p1;
reg   [6:0] zext_ln203_19_reg_1265;
reg   [8:0] conv_out_0_V_addr_reg_1270;
reg   [8:0] conv_out_1_V_addr_reg_1275;
reg   [8:0] conv_out_2_V_addr_reg_1280;
reg   [8:0] conv_out_3_V_addr_reg_1285;
reg   [8:0] conv_out_4_V_addr_reg_1290;
reg   [8:0] conv_out_5_V_addr_reg_1295;
reg   [8:0] conv_out_6_V_addr_reg_1300;
reg   [8:0] conv_out_7_V_addr_reg_1305;
reg   [8:0] conv_out_8_V_addr_reg_1310;
reg   [8:0] conv_out_9_V_addr_reg_1315;
reg   [8:0] conv_out_10_V_addr_reg_1320;
reg   [8:0] conv_out_11_V_addr_reg_1325;
reg   [8:0] conv_out_12_V_addr_reg_1330;
wire   [1:0] wr_fu_689_p2;
reg   [1:0] wr_reg_1338;
wire    ap_CS_fsm_state5;
wire  signed [5:0] sext_ln1116_fu_713_p1;
reg  signed [5:0] sext_ln1116_reg_1343;
wire   [0:0] icmp_ln18_fu_683_p2;
wire   [10:0] sub_ln1117_fu_747_p2;
reg   [10:0] sub_ln1117_reg_1348;
wire   [1:0] wc_fu_763_p2;
reg   [1:0] wc_reg_1361;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln21_fu_757_p2;
wire    ap_CS_fsm_state7;
wire   [13:0] tmp_V_8_fu_881_p2;
reg   [13:0] tmp_V_8_reg_1381;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln885_fu_887_p2;
reg   [0:0] icmp_ln885_reg_1401;
wire   [0:0] p_Result_32_fu_893_p3;
reg   [0:0] p_Result_32_reg_1405;
wire    ap_CS_fsm_state9;
wire   [13:0] tmp_V_9_fu_905_p3;
reg   [13:0] tmp_V_9_reg_1410;
wire   [31:0] sub_ln894_fu_938_p2;
reg   [31:0] sub_ln894_reg_1416;
wire   [31:0] or_ln_fu_1048_p3;
reg   [31:0] or_ln_reg_1422;
wire   [0:0] icmp_ln908_fu_1056_p2;
reg   [0:0] icmp_ln908_reg_1427;
wire   [10:0] trunc_ln893_fu_1062_p1;
reg   [10:0] trunc_ln893_reg_1432;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln924_fu_1193_p2;
reg   [0:0] icmp_ln924_reg_1442;
wire   [0:0] icmp_ln924_2_fu_1199_p2;
reg   [0:0] icmp_ln924_2_reg_1447;
reg   [4:0] r_0_reg_416;
reg   [4:0] c_0_reg_428;
reg   [2:0] f_0_reg_440;
wire    ap_CS_fsm_state11;
reg   [13:0] p_Val2_s_reg_451;
reg   [1:0] wr_0_reg_463;
reg   [13:0] p_Val2_26_reg_474;
reg   [1:0] wc_0_reg_486;
wire   [63:0] zext_ln203_21_fu_662_p1;
wire   [63:0] zext_ln1116_8_fu_809_p1;
wire  signed [63:0] sext_ln1117_fu_829_p1;
wire   [0:0] and_ln924_fu_1209_p2;
wire   [63:0] grp_fu_497_p0;
wire   [5:0] tmp_14_fu_514_p3;
wire   [0:0] icmp_ln203_fu_538_p2;
wire   [4:0] add_ln203_fu_544_p2;
wire   [9:0] tmp_15_fu_558_p3;
wire   [7:0] tmp_16_fu_570_p3;
wire   [10:0] zext_ln203_fu_566_p1;
wire   [10:0] zext_ln203_16_fu_578_p1;
wire   [10:0] add_ln203_8_fu_582_p2;
wire   [1:0] tmp_21_fu_588_p4;
wire   [6:0] zext_ln203_17_fu_598_p1;
wire   [6:0] add_ln203_9_fu_602_p2;
wire   [7:0] tmp_22_fu_615_p3;
wire   [9:0] p_shl_cast_fu_607_p3;
wire   [9:0] zext_ln203_18_fu_623_p1;
wire   [9:0] zext_ln203_20_fu_653_p1;
wire   [9:0] add_ln203_10_fu_657_p2;
wire   [3:0] tmp_17_fu_695_p3;
wire   [4:0] zext_ln1116_fu_703_p1;
wire   [4:0] zext_ln18_fu_679_p1;
wire   [4:0] sub_ln1116_fu_707_p2;
wire   [4:0] add_ln23_fu_717_p2;
wire   [9:0] tmp_18_fu_723_p3;
wire   [6:0] tmp_19_fu_735_p3;
wire   [10:0] zext_ln1117_fu_731_p1;
wire   [10:0] zext_ln1117_7_fu_743_p1;
wire   [5:0] zext_ln1116_7_fu_769_p1;
wire   [5:0] add_ln1116_fu_773_p2;
wire   [3:0] trunc_ln1116_fu_778_p1;
wire   [6:0] p_shl7_cast_fu_782_p3;
wire   [6:0] p_shl8_cast_fu_790_p3;
wire   [6:0] sub_ln1116_2_fu_798_p2;
wire   [6:0] add_ln1116_3_fu_804_p2;
wire   [4:0] zext_ln21_fu_753_p1;
wire   [4:0] add_ln23_1_fu_814_p2;
wire   [10:0] zext_ln1117_8_fu_820_p1;
wire   [10:0] add_ln1117_fu_824_p2;
wire  signed [23:0] r_V_fu_1215_p2;
wire   [21:0] lhs_V_fu_845_p3;
wire  signed [27:0] sext_ln1118_2_fu_842_p1;
wire   [28:0] zext_ln703_fu_857_p1;
wire   [28:0] zext_ln728_fu_853_p1;
wire   [28:0] ret_V_fu_861_p2;
wire  signed [13:0] sext_ln1265_fu_877_p1;
wire   [13:0] tmp_V_fu_900_p2;
reg   [13:0] p_Result_s_fu_912_p4;
wire   [31:0] p_Result_33_fu_922_p3;
reg   [31:0] l_fu_930_p3;
wire   [31:0] lsb_index_fu_948_p2;
wire   [30:0] tmp_24_fu_954_p4;
wire   [3:0] trunc_ln897_fu_970_p1;
wire   [3:0] sub_ln897_fu_974_p2;
wire   [13:0] zext_ln897_fu_980_p1;
wire   [13:0] lshr_ln897_fu_984_p2;
wire   [13:0] p_Result_29_fu_990_p2;
wire   [0:0] icmp_ln897_fu_964_p2;
wire   [0:0] icmp_ln897_2_fu_996_p2;
wire   [0:0] tmp_25_fu_1008_p3;
wire   [13:0] trunc_ln894_fu_944_p1;
wire   [13:0] add_ln899_fu_1022_p2;
wire   [0:0] p_Result_30_fu_1028_p3;
wire   [0:0] xor_ln899_fu_1016_p2;
wire   [0:0] and_ln899_fu_1036_p2;
wire   [0:0] a_fu_1002_p2;
wire   [0:0] or_ln899_fu_1042_p2;
wire   [31:0] zext_ln907_2_fu_1069_p1;
wire   [31:0] add_ln908_fu_1072_p2;
wire   [31:0] lshr_ln908_fu_1077_p2;
wire   [31:0] sub_ln908_fu_1087_p2;
wire   [63:0] m_fu_1066_p1;
wire   [63:0] zext_ln908_2_fu_1092_p1;
wire   [63:0] zext_ln908_fu_1083_p1;
wire   [63:0] shl_ln908_fu_1096_p2;
wire   [63:0] zext_ln911_fu_1109_p1;
wire   [63:0] m_7_fu_1102_p3;
wire   [63:0] m_8_fu_1112_p2;
wire   [62:0] m_s_fu_1118_p4;
wire   [0:0] tmp_26_fu_1132_p3;
wire   [10:0] sub_ln915_fu_1148_p2;
wire   [10:0] select_ln915_fu_1140_p3;
wire   [10:0] add_ln915_fu_1153_p2;
wire   [63:0] m_11_fu_1128_p1;
wire   [11:0] tmp_6_fu_1159_p3;
wire   [63:0] p_Result_34_fu_1166_p5;
wire   [51:0] trunc_ln7_fu_1183_p4;
wire   [0:0] or_ln924_fu_1205_p2;
wire   [0:0] grp_fu_497_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_condition_426;
reg    ap_condition_430;
reg    ap_condition_337;
reg    ap_condition_341;
reg    ap_condition_326;
reg    ap_condition_332;
reg    ap_condition_456;
reg    ap_condition_482;
reg    ap_condition_418;
reg    ap_condition_422;
reg    ap_condition_409;
reg    ap_condition_413;
reg    ap_condition_400;
reg    ap_condition_404;
reg    ap_condition_391;
reg    ap_condition_395;
reg    ap_condition_382;
reg    ap_condition_386;
reg    ap_condition_373;
reg    ap_condition_377;
reg    ap_condition_364;
reg    ap_condition_368;
reg    ap_condition_355;
reg    ap_condition_359;
reg    ap_condition_346;
reg    ap_condition_350;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 9 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
conv_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_address0),
    .ce0(conv_1_weights_V_ce0),
    .q0(conv_1_weights_V_q0)
);

conv_1_conv_1_biacud #(
    .DataWidth( 7 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_V_address0),
    .ce0(conv_1_bias_V_ce0),
    .q0(conv_1_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_497_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_497_p2)
);

cnn_mul_mul_14s_9eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9eOg_U2(
    .din0(input_V_q0),
    .din1(conv_1_weights_V_q0),
    .dout(r_V_fu_1215_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_633_p2 == 1'd1))) begin
        c_0_reg_428 <= c_reg_1238;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_502_p2 == 1'd0))) begin
        c_0_reg_428 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        f_0_reg_440 <= f_reg_1255;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_526_p2 == 1'd0))) begin
        f_0_reg_440 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_26_reg_474 <= {{ret_V_fu_861_p2[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_683_p2 == 1'd0))) begin
        p_Val2_26_reg_474 <= p_Val2_s_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_Val2_s_reg_451 <= p_Val2_26_reg_474;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_633_p2 == 1'd0))) begin
        p_Val2_s_reg_451 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_526_p2 == 1'd1))) begin
        r_0_reg_416 <= r_reg_1225;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_416 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        wc_0_reg_486 <= wc_reg_1361;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_683_p2 == 1'd0))) begin
        wc_0_reg_486 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        wr_0_reg_463 <= wr_reg_1338;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_633_p2 == 1'd0))) begin
        wr_0_reg_463 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_1238 <= c_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_633_p2 == 1'd0))) begin
        conv_out_0_V_addr_reg_1270 <= zext_ln203_21_fu_662_p1;
        conv_out_10_V_addr_reg_1320 <= zext_ln203_21_fu_662_p1;
        conv_out_11_V_addr_reg_1325 <= zext_ln203_21_fu_662_p1;
        conv_out_12_V_addr_reg_1330 <= zext_ln203_21_fu_662_p1;
        conv_out_1_V_addr_reg_1275 <= zext_ln203_21_fu_662_p1;
        conv_out_2_V_addr_reg_1280 <= zext_ln203_21_fu_662_p1;
        conv_out_3_V_addr_reg_1285 <= zext_ln203_21_fu_662_p1;
        conv_out_4_V_addr_reg_1290 <= zext_ln203_21_fu_662_p1;
        conv_out_5_V_addr_reg_1295 <= zext_ln203_21_fu_662_p1;
        conv_out_6_V_addr_reg_1300 <= zext_ln203_21_fu_662_p1;
        conv_out_7_V_addr_reg_1305 <= zext_ln203_21_fu_662_p1;
        conv_out_8_V_addr_reg_1310 <= zext_ln203_21_fu_662_p1;
        conv_out_9_V_addr_reg_1315 <= zext_ln203_21_fu_662_p1;
        zext_ln203_19_reg_1265[2 : 0] <= zext_ln203_19_fu_649_p1[2 : 0];
        zext_ln23_reg_1260[2 : 0] <= zext_ln23_fu_645_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_1255 <= f_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln885_reg_1401 <= icmp_ln885_fu_887_p2;
        tmp_V_8_reg_1381 <= tmp_V_8_fu_881_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln908_reg_1427 <= icmp_ln908_fu_1056_p2;
        or_ln_reg_1422[0] <= or_ln_fu_1048_p3[0];
        p_Result_32_reg_1405 <= tmp_V_8_reg_1381[32'd13];
        sub_ln894_reg_1416 <= sub_ln894_fu_938_p2;
        tmp_V_9_reg_1410 <= tmp_V_9_fu_905_p3;
        trunc_ln893_reg_1432 <= trunc_ln893_fu_1062_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln924_2_reg_1447 <= icmp_ln924_2_fu_1199_p2;
        icmp_ln924_reg_1442 <= icmp_ln924_fu_1193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_reg_1225 <= r_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_526_p2 == 1'd0))) begin
        select_ln203_reg_1243 <= select_ln203_fu_550_p3;
        sub_ln203_reg_1247[9 : 1] <= sub_ln203_fu_627_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_683_p2 == 1'd0))) begin
        sext_ln1116_reg_1343 <= sext_ln1116_fu_713_p1;
        sub_ln1117_reg_1348[10 : 2] <= sub_ln1117_fu_747_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        wc_reg_1361 <= wc_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wr_reg_1338 <= wr_fu_689_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_502_p2 == 1'd0))) begin
        zext_ln11_reg_1230[5 : 1] <= zext_ln11_fu_522_p1[5 : 1];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_502_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_502_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_bias_V_ce0 = 1'b1;
    end else begin
        conv_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_weights_V_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd0)) | ((select_ln203_reg_1243 == 5'd0) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd0) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_0_V_ce0 = 1'b1;
    end else begin
        conv_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_430)) begin
            conv_out_0_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_426)) begin
            conv_out_0_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_0_V_d0 = 'bx;
        end
    end else begin
        conv_out_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd0)) | ((select_ln203_reg_1243 == 5'd0) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd0) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_0_V_we0 = 1'b1;
    end else begin
        conv_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd10)) | ((select_ln203_reg_1243 == 5'd10) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd10) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_10_V_ce0 = 1'b1;
    end else begin
        conv_out_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_341)) begin
            conv_out_10_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_337)) begin
            conv_out_10_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_10_V_d0 = 'bx;
        end
    end else begin
        conv_out_10_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd10)) | ((select_ln203_reg_1243 == 5'd10) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd10) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_10_V_we0 = 1'b1;
    end else begin
        conv_out_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd11)) | ((select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_11_V_ce0 = 1'b1;
    end else begin
        conv_out_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_332)) begin
            conv_out_11_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_326)) begin
            conv_out_11_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_11_V_d0 = 'bx;
        end
    end else begin
        conv_out_11_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd11)) | ((select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_11_V_we0 = 1'b1;
    end else begin
        conv_out_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & ((~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd1)) | (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)))) | (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_12_V_ce0 = 1'b1;
    end else begin
        conv_out_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_482)) begin
            conv_out_12_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_456)) begin
            conv_out_12_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_12_V_d0 = 'bx;
        end
    end else begin
        conv_out_12_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & ((~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd1)) | (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)))) | (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_12_V_we0 = 1'b1;
    end else begin
        conv_out_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd1)) | ((select_ln203_reg_1243 == 5'd1) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd1) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_1_V_ce0 = 1'b1;
    end else begin
        conv_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_422)) begin
            conv_out_1_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_418)) begin
            conv_out_1_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_1_V_d0 = 'bx;
        end
    end else begin
        conv_out_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd1)) | ((select_ln203_reg_1243 == 5'd1) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd1) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_1_V_we0 = 1'b1;
    end else begin
        conv_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd2)) | ((select_ln203_reg_1243 == 5'd2) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd2) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_2_V_ce0 = 1'b1;
    end else begin
        conv_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_413)) begin
            conv_out_2_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_409)) begin
            conv_out_2_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_2_V_d0 = 'bx;
        end
    end else begin
        conv_out_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd2)) | ((select_ln203_reg_1243 == 5'd2) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd2) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_2_V_we0 = 1'b1;
    end else begin
        conv_out_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd3)) | ((select_ln203_reg_1243 == 5'd3) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd3) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_3_V_ce0 = 1'b1;
    end else begin
        conv_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_404)) begin
            conv_out_3_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_400)) begin
            conv_out_3_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_3_V_d0 = 'bx;
        end
    end else begin
        conv_out_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd3)) | ((select_ln203_reg_1243 == 5'd3) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd3) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_3_V_we0 = 1'b1;
    end else begin
        conv_out_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd4)) | ((select_ln203_reg_1243 == 5'd4) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd4) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_4_V_ce0 = 1'b1;
    end else begin
        conv_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_395)) begin
            conv_out_4_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_391)) begin
            conv_out_4_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_4_V_d0 = 'bx;
        end
    end else begin
        conv_out_4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd4)) | ((select_ln203_reg_1243 == 5'd4) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd4) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_4_V_we0 = 1'b1;
    end else begin
        conv_out_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd5)) | ((select_ln203_reg_1243 == 5'd5) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd5) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_5_V_ce0 = 1'b1;
    end else begin
        conv_out_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_386)) begin
            conv_out_5_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_382)) begin
            conv_out_5_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_5_V_d0 = 'bx;
        end
    end else begin
        conv_out_5_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd5)) | ((select_ln203_reg_1243 == 5'd5) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd5) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_5_V_we0 = 1'b1;
    end else begin
        conv_out_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd6)) | ((select_ln203_reg_1243 == 5'd6) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd6) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_6_V_ce0 = 1'b1;
    end else begin
        conv_out_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_377)) begin
            conv_out_6_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_373)) begin
            conv_out_6_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_6_V_d0 = 'bx;
        end
    end else begin
        conv_out_6_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd6)) | ((select_ln203_reg_1243 == 5'd6) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd6) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_6_V_we0 = 1'b1;
    end else begin
        conv_out_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd7)) | ((select_ln203_reg_1243 == 5'd7) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd7) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_7_V_ce0 = 1'b1;
    end else begin
        conv_out_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_368)) begin
            conv_out_7_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_364)) begin
            conv_out_7_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_7_V_d0 = 'bx;
        end
    end else begin
        conv_out_7_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd7)) | ((select_ln203_reg_1243 == 5'd7) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd7) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_7_V_we0 = 1'b1;
    end else begin
        conv_out_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd8)) | ((select_ln203_reg_1243 == 5'd8) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd8) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_8_V_ce0 = 1'b1;
    end else begin
        conv_out_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_359)) begin
            conv_out_8_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_355)) begin
            conv_out_8_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_8_V_d0 = 'bx;
        end
    end else begin
        conv_out_8_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd8)) | ((select_ln203_reg_1243 == 5'd8) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd8) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_8_V_we0 = 1'b1;
    end else begin
        conv_out_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd9)) | ((select_ln203_reg_1243 == 5'd9) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd9) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_9_V_ce0 = 1'b1;
    end else begin
        conv_out_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_350)) begin
            conv_out_9_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_346)) begin
            conv_out_9_V_d0 = tmp_V_8_reg_1381;
        end else begin
            conv_out_9_V_d0 = 'bx;
        end
    end else begin
        conv_out_9_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd9)) | ((select_ln203_reg_1243 == 5'd9) & (1'd0 == and_ln924_fu_1209_p2)))) | ((1'd1 == and_ln924_fu_1209_p2) & (1'b1 == ap_CS_fsm_state11) & (select_ln203_reg_1243 == 5'd9) & (icmp_ln885_reg_1401 == 1'd0)))) begin
        conv_out_9_V_we0 = 1'b1;
    end else begin
        conv_out_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_502_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_526_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_633_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln18_fu_683_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln21_fu_757_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln885_fu_887_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_1002_p2 = (icmp_ln897_fu_964_p2 & icmp_ln897_2_fu_996_p2);

assign add_ln1116_3_fu_804_p2 = (sub_ln1116_2_fu_798_p2 + zext_ln203_19_reg_1265);

assign add_ln1116_fu_773_p2 = ($signed(sext_ln1116_reg_1343) + $signed(zext_ln1116_7_fu_769_p1));

assign add_ln1117_fu_824_p2 = (sub_ln1117_reg_1348 + zext_ln1117_8_fu_820_p1);

assign add_ln203_10_fu_657_p2 = (sub_ln203_reg_1247 + zext_ln203_20_fu_653_p1);

assign add_ln203_8_fu_582_p2 = (zext_ln203_fu_566_p1 + zext_ln203_16_fu_578_p1);

assign add_ln203_9_fu_602_p2 = (zext_ln11_reg_1230 + zext_ln203_17_fu_598_p1);

assign add_ln203_fu_544_p2 = ($signed(c_0_reg_428) + $signed(5'd19));

assign add_ln23_1_fu_814_p2 = (zext_ln21_fu_753_p1 + c_0_reg_428);

assign add_ln23_fu_717_p2 = (zext_ln18_fu_679_p1 + r_0_reg_416);

assign add_ln899_fu_1022_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_944_p1));

assign add_ln908_fu_1072_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1416));

assign add_ln915_fu_1153_p2 = (sub_ln915_fu_1148_p2 + select_ln915_fu_1140_p3);

assign and_ln899_fu_1036_p2 = (xor_ln899_fu_1016_p2 & p_Result_30_fu_1028_p3);

assign and_ln924_fu_1209_p2 = (or_ln924_fu_1205_p2 & grp_fu_497_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_326 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_332 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd11)) | ((select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_337 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd10) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_341 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd10)) | ((select_ln203_reg_1243 == 5'd10) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_346 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd9) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_350 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd9)) | ((select_ln203_reg_1243 == 5'd9) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_355 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd8) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_359 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd8)) | ((select_ln203_reg_1243 == 5'd8) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_364 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd7) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_368 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd7)) | ((select_ln203_reg_1243 == 5'd7) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_373 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd6) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_377 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd6)) | ((select_ln203_reg_1243 == 5'd6) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_382 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd5) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_386 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd5)) | ((select_ln203_reg_1243 == 5'd5) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_391 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd4) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_395 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd4)) | ((select_ln203_reg_1243 == 5'd4) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_400 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd3) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_404 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd3)) | ((select_ln203_reg_1243 == 5'd3) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_409 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd2) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_413 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd2)) | ((select_ln203_reg_1243 == 5'd2) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_418 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd1) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_422 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd1)) | ((select_ln203_reg_1243 == 5'd1) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_426 = ((1'd1 == and_ln924_fu_1209_p2) & (select_ln203_reg_1243 == 5'd0) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_430 = (((icmp_ln885_reg_1401 == 1'd1) & (select_ln203_reg_1243 == 5'd0)) | ((select_ln203_reg_1243 == 5'd0) & (1'd0 == and_ln924_fu_1209_p2)));
end

always @ (*) begin
    ap_condition_456 = (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd1 == and_ln924_fu_1209_p2) & (icmp_ln885_reg_1401 == 1'd0));
end

always @ (*) begin
    ap_condition_482 = ((~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (icmp_ln885_reg_1401 == 1'd1)) | (~(select_ln203_reg_1243 == 5'd0) & ~(select_ln203_reg_1243 == 5'd1) & ~(select_ln203_reg_1243 == 5'd2) & ~(select_ln203_reg_1243 == 5'd3) & ~(select_ln203_reg_1243 == 5'd4) & ~(select_ln203_reg_1243 == 5'd5) & ~(select_ln203_reg_1243 == 5'd6) & ~(select_ln203_reg_1243 == 5'd7) & ~(select_ln203_reg_1243 == 5'd8) & ~(select_ln203_reg_1243 == 5'd9) & ~(select_ln203_reg_1243 == 5'd10) & ~(select_ln203_reg_1243 == 5'd11) & (1'd0 == and_ln924_fu_1209_p2)));
end

assign c_fu_532_p2 = (c_0_reg_428 + 5'd1);

assign conv_1_bias_V_address0 = zext_ln23_reg_1260;

assign conv_1_weights_V_address0 = zext_ln1116_8_fu_809_p1;

assign conv_out_0_V_address0 = conv_out_0_V_addr_reg_1270;

assign conv_out_10_V_address0 = conv_out_10_V_addr_reg_1320;

assign conv_out_11_V_address0 = conv_out_11_V_addr_reg_1325;

assign conv_out_12_V_address0 = conv_out_12_V_addr_reg_1330;

assign conv_out_1_V_address0 = conv_out_1_V_addr_reg_1275;

assign conv_out_2_V_address0 = conv_out_2_V_addr_reg_1280;

assign conv_out_3_V_address0 = conv_out_3_V_addr_reg_1285;

assign conv_out_4_V_address0 = conv_out_4_V_addr_reg_1290;

assign conv_out_5_V_address0 = conv_out_5_V_addr_reg_1295;

assign conv_out_6_V_address0 = conv_out_6_V_addr_reg_1300;

assign conv_out_7_V_address0 = conv_out_7_V_addr_reg_1305;

assign conv_out_8_V_address0 = conv_out_8_V_addr_reg_1310;

assign conv_out_9_V_address0 = conv_out_9_V_addr_reg_1315;

assign f_fu_639_p2 = (f_0_reg_440 + 3'd1);

assign grp_fu_497_p0 = p_Result_34_fu_1166_p5;

assign icmp_ln11_fu_526_p2 = ((c_0_reg_428 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_633_p2 = ((f_0_reg_440 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_683_p2 = ((wr_0_reg_463 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_538_p2 = ((c_0_reg_428 < 5'd13) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_757_p2 = ((wc_0_reg_486 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_887_p2 = ((tmp_V_8_fu_881_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_996_p2 = ((p_Result_29_fu_990_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_964_p2 = (($signed(tmp_24_fu_954_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_502_p2 = ((r_0_reg_416 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_1056_p2 = (($signed(lsb_index_fu_948_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_2_fu_1199_p2 = ((trunc_ln7_fu_1183_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1193_p2 = ((add_ln915_fu_1153_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign input_V_address0 = sext_ln1117_fu_829_p1;


always @ (p_Result_33_fu_922_p3) begin
    if (p_Result_33_fu_922_p3[0] == 1'b1) begin
        l_fu_930_p3 = 32'd0;
    end else if (p_Result_33_fu_922_p3[1] == 1'b1) begin
        l_fu_930_p3 = 32'd1;
    end else if (p_Result_33_fu_922_p3[2] == 1'b1) begin
        l_fu_930_p3 = 32'd2;
    end else if (p_Result_33_fu_922_p3[3] == 1'b1) begin
        l_fu_930_p3 = 32'd3;
    end else if (p_Result_33_fu_922_p3[4] == 1'b1) begin
        l_fu_930_p3 = 32'd4;
    end else if (p_Result_33_fu_922_p3[5] == 1'b1) begin
        l_fu_930_p3 = 32'd5;
    end else if (p_Result_33_fu_922_p3[6] == 1'b1) begin
        l_fu_930_p3 = 32'd6;
    end else if (p_Result_33_fu_922_p3[7] == 1'b1) begin
        l_fu_930_p3 = 32'd7;
    end else if (p_Result_33_fu_922_p3[8] == 1'b1) begin
        l_fu_930_p3 = 32'd8;
    end else if (p_Result_33_fu_922_p3[9] == 1'b1) begin
        l_fu_930_p3 = 32'd9;
    end else if (p_Result_33_fu_922_p3[10] == 1'b1) begin
        l_fu_930_p3 = 32'd10;
    end else if (p_Result_33_fu_922_p3[11] == 1'b1) begin
        l_fu_930_p3 = 32'd11;
    end else if (p_Result_33_fu_922_p3[12] == 1'b1) begin
        l_fu_930_p3 = 32'd12;
    end else if (p_Result_33_fu_922_p3[13] == 1'b1) begin
        l_fu_930_p3 = 32'd13;
    end else if (p_Result_33_fu_922_p3[14] == 1'b1) begin
        l_fu_930_p3 = 32'd14;
    end else if (p_Result_33_fu_922_p3[15] == 1'b1) begin
        l_fu_930_p3 = 32'd15;
    end else if (p_Result_33_fu_922_p3[16] == 1'b1) begin
        l_fu_930_p3 = 32'd16;
    end else if (p_Result_33_fu_922_p3[17] == 1'b1) begin
        l_fu_930_p3 = 32'd17;
    end else if (p_Result_33_fu_922_p3[18] == 1'b1) begin
        l_fu_930_p3 = 32'd18;
    end else if (p_Result_33_fu_922_p3[19] == 1'b1) begin
        l_fu_930_p3 = 32'd19;
    end else if (p_Result_33_fu_922_p3[20] == 1'b1) begin
        l_fu_930_p3 = 32'd20;
    end else if (p_Result_33_fu_922_p3[21] == 1'b1) begin
        l_fu_930_p3 = 32'd21;
    end else if (p_Result_33_fu_922_p3[22] == 1'b1) begin
        l_fu_930_p3 = 32'd22;
    end else if (p_Result_33_fu_922_p3[23] == 1'b1) begin
        l_fu_930_p3 = 32'd23;
    end else if (p_Result_33_fu_922_p3[24] == 1'b1) begin
        l_fu_930_p3 = 32'd24;
    end else if (p_Result_33_fu_922_p3[25] == 1'b1) begin
        l_fu_930_p3 = 32'd25;
    end else if (p_Result_33_fu_922_p3[26] == 1'b1) begin
        l_fu_930_p3 = 32'd26;
    end else if (p_Result_33_fu_922_p3[27] == 1'b1) begin
        l_fu_930_p3 = 32'd27;
    end else if (p_Result_33_fu_922_p3[28] == 1'b1) begin
        l_fu_930_p3 = 32'd28;
    end else if (p_Result_33_fu_922_p3[29] == 1'b1) begin
        l_fu_930_p3 = 32'd29;
    end else if (p_Result_33_fu_922_p3[30] == 1'b1) begin
        l_fu_930_p3 = 32'd30;
    end else if (p_Result_33_fu_922_p3[31] == 1'b1) begin
        l_fu_930_p3 = 32'd31;
    end else begin
        l_fu_930_p3 = 32'd32;
    end
end

assign lhs_V_fu_845_p3 = {{p_Val2_26_reg_474}, {8'd0}};

assign lsb_index_fu_948_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_938_p2));

assign lshr_ln897_fu_984_p2 = 14'd16383 >> zext_ln897_fu_980_p1;

assign lshr_ln908_fu_1077_p2 = zext_ln907_2_fu_1069_p1 >> add_ln908_fu_1072_p2;

assign m_11_fu_1128_p1 = m_s_fu_1118_p4;

assign m_7_fu_1102_p3 = ((icmp_ln908_reg_1427[0:0] === 1'b1) ? zext_ln908_fu_1083_p1 : shl_ln908_fu_1096_p2);

assign m_8_fu_1112_p2 = (zext_ln911_fu_1109_p1 + m_7_fu_1102_p3);

assign m_fu_1066_p1 = tmp_V_9_reg_1410;

assign m_s_fu_1118_p4 = {{m_8_fu_1112_p2[63:1]}};

assign or_ln899_fu_1042_p2 = (and_ln899_fu_1036_p2 | a_fu_1002_p2);

assign or_ln924_fu_1205_p2 = (icmp_ln924_reg_1442 | icmp_ln924_2_reg_1447);

assign or_ln_fu_1048_p3 = {{31'd0}, {or_ln899_fu_1042_p2}};

assign p_Result_29_fu_990_p2 = (tmp_V_9_fu_905_p3 & lshr_ln897_fu_984_p2);

assign p_Result_30_fu_1028_p3 = tmp_V_9_fu_905_p3[add_ln899_fu_1022_p2];

assign p_Result_32_fu_893_p3 = tmp_V_8_reg_1381[32'd13];

assign p_Result_33_fu_922_p3 = {{18'd262143}, {p_Result_s_fu_912_p4}};

assign p_Result_34_fu_1166_p5 = {{tmp_6_fu_1159_p3}, {m_11_fu_1128_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_905_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_912_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_912_p4[ap_tvar_int_0] = tmp_V_9_fu_905_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl7_cast_fu_782_p3 = {{trunc_ln1116_fu_778_p1}, {3'd0}};

assign p_shl8_cast_fu_790_p3 = {{add_ln1116_fu_773_p2}, {1'd0}};

assign p_shl_cast_fu_607_p3 = {{add_ln203_9_fu_602_p2}, {3'd0}};

assign r_fu_508_p2 = (r_0_reg_416 + 5'd1);

assign ret_V_fu_861_p2 = (zext_ln703_fu_857_p1 + zext_ln728_fu_853_p1);

assign select_ln203_fu_550_p3 = ((icmp_ln203_fu_538_p2[0:0] === 1'b1) ? c_0_reg_428 : add_ln203_fu_544_p2);

assign select_ln915_fu_1140_p3 = ((tmp_26_fu_1132_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1116_fu_713_p1 = $signed(sub_ln1116_fu_707_p2);

assign sext_ln1117_fu_829_p1 = $signed(add_ln1117_fu_824_p2);

assign sext_ln1118_2_fu_842_p1 = r_V_fu_1215_p2;

assign sext_ln1265_fu_877_p1 = $signed(conv_1_bias_V_q0);

assign shl_ln908_fu_1096_p2 = m_fu_1066_p1 << zext_ln908_2_fu_1092_p1;

assign sub_ln1116_2_fu_798_p2 = (p_shl7_cast_fu_782_p3 - p_shl8_cast_fu_790_p3);

assign sub_ln1116_fu_707_p2 = (zext_ln1116_fu_703_p1 - zext_ln18_fu_679_p1);

assign sub_ln1117_fu_747_p2 = (zext_ln1117_fu_731_p1 - zext_ln1117_7_fu_743_p1);

assign sub_ln203_fu_627_p2 = (p_shl_cast_fu_607_p3 - zext_ln203_18_fu_623_p1);

assign sub_ln894_fu_938_p2 = (32'd14 - l_fu_930_p3);

assign sub_ln897_fu_974_p2 = (4'd4 - trunc_ln897_fu_970_p1);

assign sub_ln908_fu_1087_p2 = (32'd54 - sub_ln894_reg_1416);

assign sub_ln915_fu_1148_p2 = (11'd6 - trunc_ln893_reg_1432);

assign tmp_14_fu_514_p3 = {{r_0_reg_416}, {1'd0}};

assign tmp_15_fu_558_p3 = {{c_0_reg_428}, {5'd0}};

assign tmp_16_fu_570_p3 = {{c_0_reg_428}, {3'd0}};

assign tmp_17_fu_695_p3 = {{wr_0_reg_463}, {2'd0}};

assign tmp_18_fu_723_p3 = {{add_ln23_fu_717_p2}, {5'd0}};

assign tmp_19_fu_735_p3 = {{add_ln23_fu_717_p2}, {2'd0}};

assign tmp_21_fu_588_p4 = {{add_ln203_8_fu_582_p2[10:9]}};

assign tmp_22_fu_615_p3 = {{add_ln203_9_fu_602_p2}, {1'd0}};

assign tmp_24_fu_954_p4 = {{lsb_index_fu_948_p2[31:1]}};

assign tmp_25_fu_1008_p3 = lsb_index_fu_948_p2[32'd31];

assign tmp_26_fu_1132_p3 = m_8_fu_1112_p2[32'd54];

assign tmp_6_fu_1159_p3 = {{p_Result_32_reg_1405}, {add_ln915_fu_1153_p2}};

assign tmp_V_8_fu_881_p2 = ($signed(sext_ln1265_fu_877_p1) + $signed(p_Val2_s_reg_451));

assign tmp_V_9_fu_905_p3 = ((p_Result_32_fu_893_p3[0:0] === 1'b1) ? tmp_V_fu_900_p2 : tmp_V_8_reg_1381);

assign tmp_V_fu_900_p2 = (14'd0 - tmp_V_8_reg_1381);

assign trunc_ln1116_fu_778_p1 = add_ln1116_fu_773_p2[3:0];

assign trunc_ln7_fu_1183_p4 = {{m_8_fu_1112_p2[52:1]}};

assign trunc_ln893_fu_1062_p1 = l_fu_930_p3[10:0];

assign trunc_ln894_fu_944_p1 = sub_ln894_fu_938_p2[13:0];

assign trunc_ln897_fu_970_p1 = sub_ln894_fu_938_p2[3:0];

assign wc_fu_763_p2 = (wc_0_reg_486 + 2'd1);

assign wr_fu_689_p2 = (wr_0_reg_463 + 2'd1);

assign xor_ln899_fu_1016_p2 = (tmp_25_fu_1008_p3 ^ 1'd1);

assign zext_ln1116_7_fu_769_p1 = wc_0_reg_486;

assign zext_ln1116_8_fu_809_p1 = add_ln1116_3_fu_804_p2;

assign zext_ln1116_fu_703_p1 = tmp_17_fu_695_p3;

assign zext_ln1117_7_fu_743_p1 = tmp_19_fu_735_p3;

assign zext_ln1117_8_fu_820_p1 = add_ln23_1_fu_814_p2;

assign zext_ln1117_fu_731_p1 = tmp_18_fu_723_p3;

assign zext_ln11_fu_522_p1 = tmp_14_fu_514_p3;

assign zext_ln18_fu_679_p1 = wr_0_reg_463;

assign zext_ln203_16_fu_578_p1 = tmp_16_fu_570_p3;

assign zext_ln203_17_fu_598_p1 = tmp_21_fu_588_p4;

assign zext_ln203_18_fu_623_p1 = tmp_22_fu_615_p3;

assign zext_ln203_19_fu_649_p1 = f_0_reg_440;

assign zext_ln203_20_fu_653_p1 = f_0_reg_440;

assign zext_ln203_21_fu_662_p1 = add_ln203_10_fu_657_p2;

assign zext_ln203_fu_566_p1 = tmp_15_fu_558_p3;

assign zext_ln21_fu_753_p1 = wc_0_reg_486;

assign zext_ln23_fu_645_p1 = f_0_reg_440;

assign zext_ln703_fu_857_p1 = $unsigned(sext_ln1118_2_fu_842_p1);

assign zext_ln728_fu_853_p1 = lhs_V_fu_845_p3;

assign zext_ln897_fu_980_p1 = sub_ln897_fu_974_p2;

assign zext_ln907_2_fu_1069_p1 = tmp_V_9_reg_1410;

assign zext_ln908_2_fu_1092_p1 = sub_ln908_fu_1087_p2;

assign zext_ln908_fu_1083_p1 = lshr_ln908_fu_1077_p2;

assign zext_ln911_fu_1109_p1 = or_ln_reg_1422;

always @ (posedge ap_clk) begin
    zext_ln11_reg_1230[0] <= 1'b0;
    zext_ln11_reg_1230[6] <= 1'b0;
    sub_ln203_reg_1247[0] <= 1'b0;
    zext_ln23_reg_1260[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln203_19_reg_1265[6:3] <= 4'b0000;
    sub_ln1117_reg_1348[1:0] <= 2'b00;
    or_ln_reg_1422[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_1
