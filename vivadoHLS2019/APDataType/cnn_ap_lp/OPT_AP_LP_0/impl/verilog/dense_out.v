// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_2_out_0_V_address0,
        dense_2_out_0_V_ce0,
        dense_2_out_0_V_q0,
        dense_2_out_0_V_address1,
        dense_2_out_0_V_ce1,
        dense_2_out_0_V_q1,
        dense_2_out_1_V_address0,
        dense_2_out_1_V_ce0,
        dense_2_out_1_V_q0,
        dense_2_out_1_V_address1,
        dense_2_out_1_V_ce1,
        dense_2_out_1_V_q1,
        dense_2_out_2_V_address0,
        dense_2_out_2_V_ce0,
        dense_2_out_2_V_q0,
        dense_2_out_2_V_address1,
        dense_2_out_2_V_ce1,
        dense_2_out_2_V_q1,
        dense_2_out_3_V_address0,
        dense_2_out_3_V_ce0,
        dense_2_out_3_V_q0,
        dense_2_out_3_V_address1,
        dense_2_out_3_V_ce1,
        dense_2_out_3_V_q1,
        dense_2_out_4_V_address0,
        dense_2_out_4_V_ce0,
        dense_2_out_4_V_q0,
        dense_2_out_4_V_address1,
        dense_2_out_4_V_ce1,
        dense_2_out_4_V_q1,
        prediction_V_address0,
        prediction_V_ce0,
        prediction_V_we0,
        prediction_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_state7 = 7'd16;
parameter    ap_ST_fsm_state8 = 7'd32;
parameter    ap_ST_fsm_state9 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] dense_2_out_0_V_address0;
output   dense_2_out_0_V_ce0;
input  [12:0] dense_2_out_0_V_q0;
output  [2:0] dense_2_out_0_V_address1;
output   dense_2_out_0_V_ce1;
input  [12:0] dense_2_out_0_V_q1;
output  [2:0] dense_2_out_1_V_address0;
output   dense_2_out_1_V_ce0;
input  [12:0] dense_2_out_1_V_q0;
output  [2:0] dense_2_out_1_V_address1;
output   dense_2_out_1_V_ce1;
input  [12:0] dense_2_out_1_V_q1;
output  [2:0] dense_2_out_2_V_address0;
output   dense_2_out_2_V_ce0;
input  [12:0] dense_2_out_2_V_q0;
output  [2:0] dense_2_out_2_V_address1;
output   dense_2_out_2_V_ce1;
input  [12:0] dense_2_out_2_V_q1;
output  [2:0] dense_2_out_3_V_address0;
output   dense_2_out_3_V_ce0;
input  [12:0] dense_2_out_3_V_q0;
output  [2:0] dense_2_out_3_V_address1;
output   dense_2_out_3_V_ce1;
input  [12:0] dense_2_out_3_V_q1;
output  [2:0] dense_2_out_4_V_address0;
output   dense_2_out_4_V_ce0;
input  [12:0] dense_2_out_4_V_q0;
output  [2:0] dense_2_out_4_V_address1;
output   dense_2_out_4_V_ce1;
input  [12:0] dense_2_out_4_V_q1;
output  [3:0] prediction_V_address0;
output   prediction_V_ce0;
output   prediction_V_we0;
output  [13:0] prediction_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_2_out_0_V_ce0;
reg dense_2_out_0_V_ce1;
reg dense_2_out_1_V_ce0;
reg dense_2_out_1_V_ce1;
reg dense_2_out_2_V_ce0;
reg dense_2_out_2_V_ce1;
reg dense_2_out_3_V_ce0;
reg dense_2_out_3_V_ce1;
reg dense_2_out_4_V_ce0;
reg dense_2_out_4_V_ce1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire   [8:0] dense_out_weights_V_q0;
reg   [8:0] dense_out_weights_V_address1;
reg    dense_out_weights_V_ce1;
wire   [8:0] dense_out_weights_V_q1;
reg   [8:0] dense_out_weights_V_address2;
reg    dense_out_weights_V_ce2;
wire   [8:0] dense_out_weights_V_q2;
reg   [8:0] dense_out_weights_V_address3;
reg    dense_out_weights_V_ce3;
wire   [8:0] dense_out_weights_V_q3;
reg   [8:0] dense_out_weights_V_address4;
reg    dense_out_weights_V_ce4;
wire   [8:0] dense_out_weights_V_q4;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
reg   [2:0] indvars_iv34_reg_378;
reg   [2:0] indvars_iv22_reg_390;
reg   [2:0] indvars_iv14_reg_402;
reg   [13:0] p_Val2_0_reg_414;
reg   [4:0] f_0_0_reg_426;
reg  signed [8:0] reg_451;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln46_reg_1373;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [8:0] reg_455;
reg  signed [8:0] reg_459;
reg  signed [8:0] reg_463;
reg  signed [8:0] reg_467;
wire   [0:0] icmp_ln41_fu_471_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] d_fu_477_p2;
reg   [3:0] d_reg_1344;
wire   [63:0] zext_ln48_fu_483_p1;
reg   [63:0] zext_ln48_reg_1349;
wire   [9:0] zext_ln46_fu_487_p1;
reg   [9:0] zext_ln46_reg_1355;
wire   [8:0] zext_ln46_1_fu_491_p1;
reg   [8:0] zext_ln46_1_reg_1366;
wire   [0:0] icmp_ln46_fu_495_p2;
reg   [0:0] icmp_ln46_reg_1373_pp0_iter1_reg;
wire   [5:0] f_0_0_cast1_fu_501_p1;
reg   [5:0] f_0_0_cast1_reg_1377;
wire   [63:0] zext_ln1117_2_fu_742_p1;
reg   [63:0] zext_ln1117_2_reg_1436;
reg   [12:0] dense_2_out_0_V_loa_reg_1453;
reg   [12:0] dense_2_out_1_V_loa_reg_1458;
reg   [12:0] dense_2_out_2_V_loa_reg_1463;
reg   [12:0] dense_2_out_3_V_loa_reg_1468;
reg   [12:0] dense_2_out_4_V_loa_reg_1473;
reg   [12:0] dense_2_out_0_V_loa_1_reg_1483;
reg   [12:0] dense_2_out_1_V_loa_1_reg_1493;
wire   [4:0] add_ln46_8_fu_973_p2;
reg   [4:0] add_ln46_8_reg_1513;
wire   [2:0] add_ln46_9_fu_979_p2;
reg   [2:0] add_ln46_9_reg_1518;
wire   [2:0] add_ln46_10_fu_985_p2;
reg   [2:0] add_ln46_10_reg_1523;
wire   [2:0] add_ln46_11_fu_991_p2;
reg   [2:0] add_ln46_11_reg_1528;
reg   [13:0] tmp_73_reg_1533;
wire    ap_CS_fsm_state7;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage1_subdone;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
wire   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
reg    dense_array_V_ce1;
reg    dense_array_V_we1;
wire   [13:0] dense_array_V_q1;
wire    grp_soft_max_fu_438_ap_start;
wire    grp_soft_max_fu_438_ap_done;
wire    grp_soft_max_fu_438_ap_idle;
wire    grp_soft_max_fu_438_ap_ready;
wire   [3:0] grp_soft_max_fu_438_dense_array_V_address0;
wire    grp_soft_max_fu_438_dense_array_V_ce0;
wire   [3:0] grp_soft_max_fu_438_dense_array_V_address1;
wire    grp_soft_max_fu_438_dense_array_V_ce1;
wire    grp_soft_max_fu_438_dense_array_V_we1;
wire   [13:0] grp_soft_max_fu_438_dense_array_V_d1;
wire   [3:0] grp_soft_max_fu_438_prediction_V_address0;
wire    grp_soft_max_fu_438_prediction_V_ce0;
wire    grp_soft_max_fu_438_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_438_prediction_V_d0;
reg   [3:0] d_0_reg_367;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_phi_mux_indvars_iv34_phi_fu_382_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_indvars_iv22_phi_fu_394_p4;
reg   [2:0] ap_phi_mux_indvars_iv14_phi_fu_406_p4;
reg   [4:0] ap_phi_mux_f_0_0_phi_fu_430_p4;
reg    grp_soft_max_fu_438_ap_start_reg;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln1116_2_fu_540_p1;
wire   [63:0] zext_ln1117_fu_545_p1;
wire   [63:0] zext_ln1116_5_fu_593_p1;
wire   [63:0] zext_ln1116_8_fu_639_p1;
wire   [63:0] zext_ln1116_11_fu_685_p1;
wire   [63:0] zext_ln1117_1_fu_690_p1;
wire   [63:0] zext_ln1116_14_fu_737_p1;
wire   [63:0] zext_ln1116_17_fu_788_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1116_20_fu_833_p1;
wire   [63:0] zext_ln1116_23_fu_878_p1;
wire   [63:0] zext_ln1116_26_fu_923_p1;
wire   [63:0] zext_ln1116_29_fu_968_p1;
wire   [7:0] tmp_57_fu_505_p3;
wire   [5:0] tmp_58_fu_517_p3;
wire   [8:0] zext_ln1116_1_fu_525_p1;
wire   [8:0] zext_ln1116_fu_513_p1;
wire   [8:0] add_ln1116_fu_529_p2;
wire   [8:0] add_ln1116_1_fu_535_p2;
wire   [4:0] or_ln46_fu_552_p2;
wire   [7:0] tmp_59_fu_558_p3;
wire   [5:0] tmp_60_fu_570_p3;
wire   [8:0] zext_ln1116_4_fu_578_p1;
wire   [8:0] zext_ln1116_3_fu_566_p1;
wire   [8:0] add_ln1116_2_fu_582_p2;
wire   [8:0] add_ln1116_3_fu_588_p2;
wire   [4:0] add_ln46_fu_598_p2;
wire   [7:0] tmp_62_fu_604_p3;
wire   [5:0] tmp_63_fu_616_p3;
wire   [8:0] zext_ln1116_7_fu_624_p1;
wire   [8:0] zext_ln1116_6_fu_612_p1;
wire   [8:0] add_ln1116_4_fu_628_p2;
wire   [8:0] add_ln1116_5_fu_634_p2;
wire   [5:0] add_ln46_1_fu_644_p2;
wire   [8:0] tmp_65_fu_650_p3;
wire   [6:0] tmp_66_fu_662_p3;
wire   [9:0] zext_ln1116_10_fu_670_p1;
wire   [9:0] zext_ln1116_9_fu_658_p1;
wire   [9:0] add_ln1116_6_fu_674_p2;
wire   [9:0] add_ln1116_7_fu_680_p2;
wire   [5:0] add_ln46_2_fu_696_p2;
wire   [8:0] tmp_68_fu_702_p3;
wire   [6:0] tmp_69_fu_714_p3;
wire   [9:0] zext_ln1116_13_fu_722_p1;
wire   [9:0] zext_ln1116_12_fu_710_p1;
wire   [9:0] add_ln1116_8_fu_726_p2;
wire   [9:0] add_ln1116_9_fu_732_p2;
wire   [5:0] add_ln46_3_fu_748_p2;
wire   [8:0] tmp_71_fu_753_p3;
wire   [6:0] tmp_72_fu_765_p3;
wire   [9:0] zext_ln1116_16_fu_773_p1;
wire   [9:0] zext_ln1116_15_fu_761_p1;
wire   [9:0] add_ln1116_10_fu_777_p2;
wire   [9:0] add_ln1116_11_fu_783_p2;
wire   [5:0] add_ln46_4_fu_793_p2;
wire   [8:0] tmp_74_fu_798_p3;
wire   [6:0] tmp_75_fu_810_p3;
wire   [9:0] zext_ln1116_19_fu_818_p1;
wire   [9:0] zext_ln1116_18_fu_806_p1;
wire   [9:0] add_ln1116_12_fu_822_p2;
wire   [9:0] add_ln1116_13_fu_828_p2;
wire   [5:0] add_ln46_5_fu_838_p2;
wire   [8:0] tmp_77_fu_843_p3;
wire   [6:0] tmp_78_fu_855_p3;
wire   [9:0] zext_ln1116_22_fu_863_p1;
wire   [9:0] zext_ln1116_21_fu_851_p1;
wire   [9:0] add_ln1116_14_fu_867_p2;
wire   [9:0] add_ln1116_15_fu_873_p2;
wire   [5:0] add_ln46_6_fu_883_p2;
wire   [8:0] tmp_80_fu_888_p3;
wire   [6:0] tmp_81_fu_900_p3;
wire   [9:0] zext_ln1116_25_fu_908_p1;
wire   [9:0] zext_ln1116_24_fu_896_p1;
wire   [9:0] add_ln1116_16_fu_912_p2;
wire   [9:0] add_ln1116_17_fu_918_p2;
wire   [5:0] add_ln46_7_fu_928_p2;
wire   [8:0] tmp_83_fu_933_p3;
wire   [6:0] tmp_84_fu_945_p3;
wire   [9:0] zext_ln1116_28_fu_953_p1;
wire   [9:0] zext_ln1116_27_fu_941_p1;
wire   [9:0] add_ln1116_18_fu_957_p2;
wire   [9:0] add_ln1116_19_fu_963_p2;
wire  signed [21:0] grp_fu_1250_p3;
wire   [13:0] tmp_61_fu_1019_p4;
wire  signed [21:0] grp_fu_1259_p3;
wire   [13:0] tmp_64_fu_1043_p4;
wire  signed [21:0] grp_fu_1268_p3;
wire   [13:0] tmp_67_fu_1067_p4;
wire  signed [21:0] grp_fu_1277_p3;
wire   [13:0] tmp_70_fu_1091_p4;
wire  signed [21:0] grp_fu_1286_p3;
wire  signed [21:0] grp_fu_1295_p3;
wire   [13:0] tmp_76_fu_1138_p4;
wire  signed [21:0] grp_fu_1304_p3;
wire   [13:0] tmp_79_fu_1163_p4;
wire  signed [21:0] grp_fu_1313_p3;
wire   [13:0] tmp_82_fu_1188_p4;
wire  signed [21:0] grp_fu_1322_p3;
wire   [13:0] tmp_85_fu_1213_p4;
wire  signed [21:0] grp_fu_1331_p3;
wire  signed [13:0] sext_ln1265_fu_1239_p1;
wire   [12:0] grp_fu_1250_p0;
wire   [21:0] grp_fu_1250_p2;
wire   [12:0] grp_fu_1259_p0;
wire   [21:0] grp_fu_1259_p2;
wire   [12:0] grp_fu_1268_p0;
wire   [21:0] grp_fu_1268_p2;
wire   [12:0] grp_fu_1277_p0;
wire   [21:0] grp_fu_1277_p2;
wire   [12:0] grp_fu_1286_p0;
wire   [21:0] grp_fu_1286_p2;
wire   [12:0] grp_fu_1295_p0;
wire   [21:0] grp_fu_1295_p2;
wire   [12:0] grp_fu_1304_p0;
wire   [21:0] grp_fu_1304_p2;
wire   [12:0] grp_fu_1313_p0;
wire   [21:0] grp_fu_1313_p2;
wire   [12:0] grp_fu_1322_p0;
wire   [21:0] grp_fu_1322_p2;
wire   [12:0] grp_fu_1331_p0;
wire   [21:0] grp_fu_1331_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_1250_p00;
wire   [21:0] grp_fu_1259_p00;
wire   [21:0] grp_fu_1268_p00;
wire   [21:0] grp_fu_1277_p00;
wire   [21:0] grp_fu_1286_p00;
wire   [21:0] grp_fu_1295_p00;
wire   [21:0] grp_fu_1304_p00;
wire   [21:0] grp_fu_1313_p00;
wire   [21:0] grp_fu_1322_p00;
wire   [21:0] grp_fu_1331_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_soft_max_fu_438_ap_start_reg = 1'b0;
end

dense_out_dense_ochv #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0),
    .address1(dense_out_weights_V_address1),
    .ce1(dense_out_weights_V_ce1),
    .q1(dense_out_weights_V_q1),
    .address2(dense_out_weights_V_address2),
    .ce2(dense_out_weights_V_ce2),
    .q2(dense_out_weights_V_q2),
    .address3(dense_out_weights_V_address3),
    .ce3(dense_out_weights_V_ce3),
    .q3(dense_out_weights_V_q3),
    .address4(dense_out_weights_V_address4),
    .ce4(dense_out_weights_V_ce4),
    .q4(dense_out_weights_V_q4)
);

dense_out_dense_ociv #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

dense_out_dense_acjv #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0),
    .address1(grp_soft_max_fu_438_dense_array_V_address1),
    .ce1(dense_array_V_ce1),
    .we1(dense_array_V_we1),
    .d1(grp_soft_max_fu_438_dense_array_V_d1),
    .q1(dense_array_V_q1)
);

soft_max grp_soft_max_fu_438(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_438_ap_start),
    .ap_done(grp_soft_max_fu_438_ap_done),
    .ap_idle(grp_soft_max_fu_438_ap_idle),
    .ap_ready(grp_soft_max_fu_438_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_438_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_438_dense_array_V_ce0),
    .dense_array_V_q0(dense_array_V_q0),
    .dense_array_V_address1(grp_soft_max_fu_438_dense_array_V_address1),
    .dense_array_V_ce1(grp_soft_max_fu_438_dense_array_V_ce1),
    .dense_array_V_we1(grp_soft_max_fu_438_dense_array_V_we1),
    .dense_array_V_d1(grp_soft_max_fu_438_dense_array_V_d1),
    .dense_array_V_q1(dense_array_V_q1),
    .prediction_V_address0(grp_soft_max_fu_438_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_438_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_438_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_438_prediction_V_d0)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2346(
    .din0(grp_fu_1250_p0),
    .din1(reg_451),
    .din2(grp_fu_1250_p2),
    .dout(grp_fu_1250_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2347(
    .din0(grp_fu_1259_p0),
    .din1(reg_455),
    .din2(grp_fu_1259_p2),
    .dout(grp_fu_1259_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2348(
    .din0(grp_fu_1268_p0),
    .din1(reg_459),
    .din2(grp_fu_1268_p2),
    .dout(grp_fu_1268_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2349(
    .din0(grp_fu_1277_p0),
    .din1(reg_463),
    .din2(grp_fu_1277_p2),
    .dout(grp_fu_1277_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2350(
    .din0(grp_fu_1286_p0),
    .din1(reg_467),
    .din2(grp_fu_1286_p2),
    .dout(grp_fu_1286_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2351(
    .din0(grp_fu_1295_p0),
    .din1(reg_451),
    .din2(grp_fu_1295_p2),
    .dout(grp_fu_1295_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2352(
    .din0(grp_fu_1304_p0),
    .din1(reg_455),
    .din2(grp_fu_1304_p2),
    .dout(grp_fu_1304_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2353(
    .din0(grp_fu_1313_p0),
    .din1(reg_459),
    .din2(grp_fu_1313_p2),
    .dout(grp_fu_1313_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2354(
    .din0(grp_fu_1322_p0),
    .din1(reg_463),
    .din2(grp_fu_1322_p2),
    .dout(grp_fu_1322_p3)
);

cnn_mac_muladd_13ckv #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13ckv_U2355(
    .din0(grp_fu_1331_p0),
    .din1(reg_467),
    .din2(grp_fu_1331_p2),
    .dout(grp_fu_1331_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_438_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd1))) begin
            grp_soft_max_fu_438_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_438_ap_ready == 1'b1)) begin
            grp_soft_max_fu_438_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        d_0_reg_367 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        d_0_reg_367 <= d_reg_1344;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        f_0_0_reg_426 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0))) begin
        f_0_0_reg_426 <= add_ln46_8_reg_1513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        indvars_iv14_reg_402 <= 3'd1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0))) begin
        indvars_iv14_reg_402 <= add_ln46_9_reg_1518;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        indvars_iv22_reg_390 <= 3'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0))) begin
        indvars_iv22_reg_390 <= add_ln46_10_reg_1523;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        indvars_iv34_reg_378 <= 3'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0))) begin
        indvars_iv34_reg_378 <= add_ln46_11_reg_1528;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        p_Val2_0_reg_414 <= 14'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_1373_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_Val2_0_reg_414 <= {{grp_fu_1331_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_1373 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln46_10_reg_1523 <= add_ln46_10_fu_985_p2;
        add_ln46_11_reg_1528 <= add_ln46_11_fu_991_p2;
        add_ln46_8_reg_1513 <= add_ln46_8_fu_973_p2;
        add_ln46_9_reg_1518 <= add_ln46_9_fu_979_p2;
        dense_2_out_0_V_loa_1_reg_1483 <= dense_2_out_0_V_q1;
        dense_2_out_0_V_loa_reg_1453 <= dense_2_out_0_V_q0;
        dense_2_out_1_V_loa_1_reg_1493 <= dense_2_out_1_V_q1;
        dense_2_out_1_V_loa_reg_1458 <= dense_2_out_1_V_q0;
        dense_2_out_2_V_loa_reg_1463 <= dense_2_out_2_V_q0;
        dense_2_out_3_V_loa_reg_1468 <= dense_2_out_3_V_q0;
        dense_2_out_4_V_loa_reg_1473 <= dense_2_out_4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        d_reg_1344 <= d_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_fu_495_p2 == 1'd0))) begin
        f_0_0_cast1_reg_1377[4 : 0] <= f_0_0_cast1_fu_501_p1[4 : 0];
        zext_ln1117_2_reg_1436[2 : 0] <= zext_ln1117_2_fu_742_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln46_reg_1373 <= icmp_ln46_fu_495_p2;
        icmp_ln46_reg_1373_pp0_iter1_reg <= icmp_ln46_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_1373 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_451 <= dense_out_weights_V_q0;
        reg_455 <= dense_out_weights_V_q1;
        reg_459 <= dense_out_weights_V_q2;
        reg_463 <= dense_out_weights_V_q3;
        reg_467 <= dense_out_weights_V_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln46_reg_1373 == 1'd0))) begin
        tmp_73_reg_1533 <= {{grp_fu_1286_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
        zext_ln46_1_reg_1366[3 : 0] <= zext_ln46_1_fu_491_p1[3 : 0];
        zext_ln46_reg_1355[3 : 0] <= zext_ln46_fu_487_p1[3 : 0];
        zext_ln48_reg_1349[3 : 0] <= zext_ln48_fu_483_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln46_fu_495_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_soft_max_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_1373 == 1'd0))) begin
        ap_phi_mux_f_0_0_phi_fu_430_p4 = add_ln46_8_reg_1513;
    end else begin
        ap_phi_mux_f_0_0_phi_fu_430_p4 = f_0_0_reg_426;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_1373 == 1'd0))) begin
        ap_phi_mux_indvars_iv14_phi_fu_406_p4 = add_ln46_9_reg_1518;
    end else begin
        ap_phi_mux_indvars_iv14_phi_fu_406_p4 = indvars_iv14_reg_402;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_1373 == 1'd0))) begin
        ap_phi_mux_indvars_iv22_phi_fu_394_p4 = add_ln46_10_reg_1523;
    end else begin
        ap_phi_mux_indvars_iv22_phi_fu_394_p4 = indvars_iv22_reg_390;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln46_reg_1373 == 1'd0))) begin
        ap_phi_mux_indvars_iv34_phi_fu_382_p4 = add_ln46_11_reg_1528;
    end else begin
        ap_phi_mux_indvars_iv34_phi_fu_382_p4 = indvars_iv34_reg_378;
    end
end

always @ (*) begin
    if (((grp_soft_max_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_0_V_ce0 = 1'b1;
    end else begin
        dense_2_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_0_V_ce1 = 1'b1;
    end else begin
        dense_2_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_1_V_ce0 = 1'b1;
    end else begin
        dense_2_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_1_V_ce1 = 1'b1;
    end else begin
        dense_2_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_2_V_ce0 = 1'b1;
    end else begin
        dense_2_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_2_V_ce1 = 1'b1;
    end else begin
        dense_2_out_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_3_V_ce0 = 1'b1;
    end else begin
        dense_2_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_3_V_ce1 = 1'b1;
    end else begin
        dense_2_out_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_4_V_ce0 = 1'b1;
    end else begin
        dense_2_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_2_out_4_V_ce1 = 1'b1;
    end else begin
        dense_2_out_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_array_V_address0 = zext_ln48_reg_1349;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_array_V_address0 = grp_soft_max_fu_438_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_array_V_ce0 = grp_soft_max_fu_438_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_array_V_ce1 = grp_soft_max_fu_438_dense_array_V_ce1;
    end else begin
        dense_array_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_array_V_we0 = 1'b1;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_array_V_we1 = grp_soft_max_fu_438_dense_array_V_we1;
    end else begin
        dense_array_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_V_address0 = zext_ln1116_17_fu_788_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_V_address0 = zext_ln1116_2_fu_540_p1;
        end else begin
            dense_out_weights_V_address0 = 'bx;
        end
    end else begin
        dense_out_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_V_address1 = zext_ln1116_20_fu_833_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_V_address1 = zext_ln1116_5_fu_593_p1;
        end else begin
            dense_out_weights_V_address1 = 'bx;
        end
    end else begin
        dense_out_weights_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_V_address2 = zext_ln1116_23_fu_878_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_V_address2 = zext_ln1116_8_fu_639_p1;
        end else begin
            dense_out_weights_V_address2 = 'bx;
        end
    end else begin
        dense_out_weights_V_address2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_V_address3 = zext_ln1116_26_fu_923_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_V_address3 = zext_ln1116_11_fu_685_p1;
        end else begin
            dense_out_weights_V_address3 = 'bx;
        end
    end else begin
        dense_out_weights_V_address3 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_V_address4 = zext_ln1116_29_fu_968_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_V_address4 = zext_ln1116_14_fu_737_p1;
        end else begin
            dense_out_weights_V_address4 = 'bx;
        end
    end else begin
        dense_out_weights_V_address4 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_V_ce1 = 1'b1;
    end else begin
        dense_out_weights_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_V_ce2 = 1'b1;
    end else begin
        dense_out_weights_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_V_ce3 = 1'b1;
    end else begin
        dense_out_weights_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_V_ce4 = 1'b1;
    end else begin
        dense_out_weights_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln41_fu_471_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_495_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln46_fu_495_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_soft_max_fu_438_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1116_10_fu_777_p2 = (zext_ln1116_16_fu_773_p1 + zext_ln1116_15_fu_761_p1);

assign add_ln1116_11_fu_783_p2 = (add_ln1116_10_fu_777_p2 + zext_ln46_reg_1355);

assign add_ln1116_12_fu_822_p2 = (zext_ln1116_19_fu_818_p1 + zext_ln1116_18_fu_806_p1);

assign add_ln1116_13_fu_828_p2 = (add_ln1116_12_fu_822_p2 + zext_ln46_reg_1355);

assign add_ln1116_14_fu_867_p2 = (zext_ln1116_22_fu_863_p1 + zext_ln1116_21_fu_851_p1);

assign add_ln1116_15_fu_873_p2 = (add_ln1116_14_fu_867_p2 + zext_ln46_reg_1355);

assign add_ln1116_16_fu_912_p2 = (zext_ln1116_25_fu_908_p1 + zext_ln1116_24_fu_896_p1);

assign add_ln1116_17_fu_918_p2 = (add_ln1116_16_fu_912_p2 + zext_ln46_reg_1355);

assign add_ln1116_18_fu_957_p2 = (zext_ln1116_28_fu_953_p1 + zext_ln1116_27_fu_941_p1);

assign add_ln1116_19_fu_963_p2 = (add_ln1116_18_fu_957_p2 + zext_ln46_reg_1355);

assign add_ln1116_1_fu_535_p2 = (add_ln1116_fu_529_p2 + zext_ln46_1_reg_1366);

assign add_ln1116_2_fu_582_p2 = (zext_ln1116_4_fu_578_p1 + zext_ln1116_3_fu_566_p1);

assign add_ln1116_3_fu_588_p2 = (add_ln1116_2_fu_582_p2 + zext_ln46_1_reg_1366);

assign add_ln1116_4_fu_628_p2 = (zext_ln1116_7_fu_624_p1 + zext_ln1116_6_fu_612_p1);

assign add_ln1116_5_fu_634_p2 = (add_ln1116_4_fu_628_p2 + zext_ln46_1_reg_1366);

assign add_ln1116_6_fu_674_p2 = (zext_ln1116_10_fu_670_p1 + zext_ln1116_9_fu_658_p1);

assign add_ln1116_7_fu_680_p2 = (add_ln1116_6_fu_674_p2 + zext_ln46_reg_1355);

assign add_ln1116_8_fu_726_p2 = (zext_ln1116_13_fu_722_p1 + zext_ln1116_12_fu_710_p1);

assign add_ln1116_9_fu_732_p2 = (add_ln1116_8_fu_726_p2 + zext_ln46_reg_1355);

assign add_ln1116_fu_529_p2 = (zext_ln1116_1_fu_525_p1 + zext_ln1116_fu_513_p1);

assign add_ln46_10_fu_985_p2 = (indvars_iv22_reg_390 + 3'd2);

assign add_ln46_11_fu_991_p2 = (indvars_iv34_reg_378 + 3'd2);

assign add_ln46_1_fu_644_p2 = (f_0_0_cast1_fu_501_p1 + 6'd3);

assign add_ln46_2_fu_696_p2 = (f_0_0_cast1_fu_501_p1 + 6'd4);

assign add_ln46_3_fu_748_p2 = (f_0_0_cast1_reg_1377 + 6'd5);

assign add_ln46_4_fu_793_p2 = (f_0_0_cast1_reg_1377 + 6'd6);

assign add_ln46_5_fu_838_p2 = (f_0_0_cast1_reg_1377 + 6'd7);

assign add_ln46_6_fu_883_p2 = (f_0_0_cast1_reg_1377 + 6'd8);

assign add_ln46_7_fu_928_p2 = (f_0_0_cast1_reg_1377 + 6'd9);

assign add_ln46_8_fu_973_p2 = (f_0_0_reg_426 + 5'd10);

assign add_ln46_9_fu_979_p2 = (indvars_iv14_reg_402 + 3'd2);

assign add_ln46_fu_598_p2 = (ap_phi_mux_f_0_0_phi_fu_430_p4 + 5'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign d_fu_477_p2 = (d_0_reg_367 + 4'd1);

assign dense_2_out_0_V_address0 = zext_ln1117_fu_545_p1;

assign dense_2_out_0_V_address1 = zext_ln1117_2_fu_742_p1;

assign dense_2_out_1_V_address0 = zext_ln1117_fu_545_p1;

assign dense_2_out_1_V_address1 = zext_ln1117_2_fu_742_p1;

assign dense_2_out_2_V_address0 = zext_ln1117_fu_545_p1;

assign dense_2_out_2_V_address1 = zext_ln1117_2_reg_1436;

assign dense_2_out_3_V_address0 = zext_ln1117_1_fu_690_p1;

assign dense_2_out_3_V_address1 = zext_ln1117_2_reg_1436;

assign dense_2_out_4_V_address0 = zext_ln1117_1_fu_690_p1;

assign dense_2_out_4_V_address1 = zext_ln1117_2_reg_1436;

assign dense_array_V_d0 = ($signed(sext_ln1265_fu_1239_p1) + $signed(p_Val2_0_reg_414));

assign dense_out_bias_V_address0 = zext_ln48_reg_1349;

assign f_0_0_cast1_fu_501_p1 = ap_phi_mux_f_0_0_phi_fu_430_p4;

assign grp_fu_1250_p0 = grp_fu_1250_p00;

assign grp_fu_1250_p00 = dense_2_out_0_V_loa_reg_1453;

assign grp_fu_1250_p2 = {{p_Val2_0_reg_414}, {8'd0}};

assign grp_fu_1259_p0 = grp_fu_1259_p00;

assign grp_fu_1259_p00 = dense_2_out_1_V_loa_reg_1458;

assign grp_fu_1259_p2 = {{tmp_61_fu_1019_p4}, {8'd0}};

assign grp_fu_1268_p0 = grp_fu_1268_p00;

assign grp_fu_1268_p00 = dense_2_out_2_V_loa_reg_1463;

assign grp_fu_1268_p2 = {{tmp_64_fu_1043_p4}, {8'd0}};

assign grp_fu_1277_p0 = grp_fu_1277_p00;

assign grp_fu_1277_p00 = dense_2_out_3_V_loa_reg_1468;

assign grp_fu_1277_p2 = {{tmp_67_fu_1067_p4}, {8'd0}};

assign grp_fu_1286_p0 = grp_fu_1286_p00;

assign grp_fu_1286_p00 = dense_2_out_4_V_loa_reg_1473;

assign grp_fu_1286_p2 = {{tmp_70_fu_1091_p4}, {8'd0}};

assign grp_fu_1295_p0 = grp_fu_1295_p00;

assign grp_fu_1295_p00 = dense_2_out_0_V_loa_1_reg_1483;

assign grp_fu_1295_p2 = {{tmp_73_reg_1533}, {8'd0}};

assign grp_fu_1304_p0 = grp_fu_1304_p00;

assign grp_fu_1304_p00 = dense_2_out_1_V_loa_1_reg_1493;

assign grp_fu_1304_p2 = {{tmp_76_fu_1138_p4}, {8'd0}};

assign grp_fu_1313_p0 = grp_fu_1313_p00;

assign grp_fu_1313_p00 = dense_2_out_2_V_q1;

assign grp_fu_1313_p2 = {{tmp_79_fu_1163_p4}, {8'd0}};

assign grp_fu_1322_p0 = grp_fu_1322_p00;

assign grp_fu_1322_p00 = dense_2_out_3_V_q1;

assign grp_fu_1322_p2 = {{tmp_82_fu_1188_p4}, {8'd0}};

assign grp_fu_1331_p0 = grp_fu_1331_p00;

assign grp_fu_1331_p00 = dense_2_out_4_V_q1;

assign grp_fu_1331_p2 = {{tmp_85_fu_1213_p4}, {8'd0}};

assign grp_soft_max_fu_438_ap_start = grp_soft_max_fu_438_ap_start_reg;

assign icmp_ln41_fu_471_p2 = ((d_0_reg_367 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_495_p2 = ((ap_phi_mux_f_0_0_phi_fu_430_p4 == 5'd30) ? 1'b1 : 1'b0);

assign or_ln46_fu_552_p2 = (ap_phi_mux_f_0_0_phi_fu_430_p4 | 5'd1);

assign prediction_V_address0 = grp_soft_max_fu_438_prediction_V_address0;

assign prediction_V_ce0 = grp_soft_max_fu_438_prediction_V_ce0;

assign prediction_V_d0 = grp_soft_max_fu_438_prediction_V_d0;

assign prediction_V_we0 = grp_soft_max_fu_438_prediction_V_we0;

assign sext_ln1265_fu_1239_p1 = $signed(dense_out_bias_V_q0);

assign tmp_57_fu_505_p3 = {{ap_phi_mux_f_0_0_phi_fu_430_p4}, {3'd0}};

assign tmp_58_fu_517_p3 = {{ap_phi_mux_f_0_0_phi_fu_430_p4}, {1'd0}};

assign tmp_59_fu_558_p3 = {{or_ln46_fu_552_p2}, {3'd0}};

assign tmp_60_fu_570_p3 = {{or_ln46_fu_552_p2}, {1'd0}};

assign tmp_61_fu_1019_p4 = {{grp_fu_1250_p3[21:8]}};

assign tmp_62_fu_604_p3 = {{add_ln46_fu_598_p2}, {3'd0}};

assign tmp_63_fu_616_p3 = {{add_ln46_fu_598_p2}, {1'd0}};

assign tmp_64_fu_1043_p4 = {{grp_fu_1259_p3[21:8]}};

assign tmp_65_fu_650_p3 = {{add_ln46_1_fu_644_p2}, {3'd0}};

assign tmp_66_fu_662_p3 = {{add_ln46_1_fu_644_p2}, {1'd0}};

assign tmp_67_fu_1067_p4 = {{grp_fu_1268_p3[21:8]}};

assign tmp_68_fu_702_p3 = {{add_ln46_2_fu_696_p2}, {3'd0}};

assign tmp_69_fu_714_p3 = {{add_ln46_2_fu_696_p2}, {1'd0}};

assign tmp_70_fu_1091_p4 = {{grp_fu_1277_p3[21:8]}};

assign tmp_71_fu_753_p3 = {{add_ln46_3_fu_748_p2}, {3'd0}};

assign tmp_72_fu_765_p3 = {{add_ln46_3_fu_748_p2}, {1'd0}};

assign tmp_74_fu_798_p3 = {{add_ln46_4_fu_793_p2}, {3'd0}};

assign tmp_75_fu_810_p3 = {{add_ln46_4_fu_793_p2}, {1'd0}};

assign tmp_76_fu_1138_p4 = {{grp_fu_1295_p3[21:8]}};

assign tmp_77_fu_843_p3 = {{add_ln46_5_fu_838_p2}, {3'd0}};

assign tmp_78_fu_855_p3 = {{add_ln46_5_fu_838_p2}, {1'd0}};

assign tmp_79_fu_1163_p4 = {{grp_fu_1304_p3[21:8]}};

assign tmp_80_fu_888_p3 = {{add_ln46_6_fu_883_p2}, {3'd0}};

assign tmp_81_fu_900_p3 = {{add_ln46_6_fu_883_p2}, {1'd0}};

assign tmp_82_fu_1188_p4 = {{grp_fu_1313_p3[21:8]}};

assign tmp_83_fu_933_p3 = {{add_ln46_7_fu_928_p2}, {3'd0}};

assign tmp_84_fu_945_p3 = {{add_ln46_7_fu_928_p2}, {1'd0}};

assign tmp_85_fu_1213_p4 = {{grp_fu_1322_p3[21:8]}};

assign zext_ln1116_10_fu_670_p1 = tmp_66_fu_662_p3;

assign zext_ln1116_11_fu_685_p1 = add_ln1116_7_fu_680_p2;

assign zext_ln1116_12_fu_710_p1 = tmp_68_fu_702_p3;

assign zext_ln1116_13_fu_722_p1 = tmp_69_fu_714_p3;

assign zext_ln1116_14_fu_737_p1 = add_ln1116_9_fu_732_p2;

assign zext_ln1116_15_fu_761_p1 = tmp_71_fu_753_p3;

assign zext_ln1116_16_fu_773_p1 = tmp_72_fu_765_p3;

assign zext_ln1116_17_fu_788_p1 = add_ln1116_11_fu_783_p2;

assign zext_ln1116_18_fu_806_p1 = tmp_74_fu_798_p3;

assign zext_ln1116_19_fu_818_p1 = tmp_75_fu_810_p3;

assign zext_ln1116_1_fu_525_p1 = tmp_58_fu_517_p3;

assign zext_ln1116_20_fu_833_p1 = add_ln1116_13_fu_828_p2;

assign zext_ln1116_21_fu_851_p1 = tmp_77_fu_843_p3;

assign zext_ln1116_22_fu_863_p1 = tmp_78_fu_855_p3;

assign zext_ln1116_23_fu_878_p1 = add_ln1116_15_fu_873_p2;

assign zext_ln1116_24_fu_896_p1 = tmp_80_fu_888_p3;

assign zext_ln1116_25_fu_908_p1 = tmp_81_fu_900_p3;

assign zext_ln1116_26_fu_923_p1 = add_ln1116_17_fu_918_p2;

assign zext_ln1116_27_fu_941_p1 = tmp_83_fu_933_p3;

assign zext_ln1116_28_fu_953_p1 = tmp_84_fu_945_p3;

assign zext_ln1116_29_fu_968_p1 = add_ln1116_19_fu_963_p2;

assign zext_ln1116_2_fu_540_p1 = add_ln1116_1_fu_535_p2;

assign zext_ln1116_3_fu_566_p1 = tmp_59_fu_558_p3;

assign zext_ln1116_4_fu_578_p1 = tmp_60_fu_570_p3;

assign zext_ln1116_5_fu_593_p1 = add_ln1116_3_fu_588_p2;

assign zext_ln1116_6_fu_612_p1 = tmp_62_fu_604_p3;

assign zext_ln1116_7_fu_624_p1 = tmp_63_fu_616_p3;

assign zext_ln1116_8_fu_639_p1 = add_ln1116_5_fu_634_p2;

assign zext_ln1116_9_fu_658_p1 = tmp_65_fu_650_p3;

assign zext_ln1116_fu_513_p1 = tmp_57_fu_505_p3;

assign zext_ln1117_1_fu_690_p1 = ap_phi_mux_indvars_iv22_phi_fu_394_p4;

assign zext_ln1117_2_fu_742_p1 = ap_phi_mux_indvars_iv14_phi_fu_406_p4;

assign zext_ln1117_fu_545_p1 = ap_phi_mux_indvars_iv34_phi_fu_382_p4;

assign zext_ln46_1_fu_491_p1 = d_0_reg_367;

assign zext_ln46_fu_487_p1 = d_0_reg_367;

assign zext_ln48_fu_483_p1 = d_0_reg_367;

always @ (posedge ap_clk) begin
    zext_ln48_reg_1349[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln46_reg_1355[9:4] <= 6'b000000;
    zext_ln46_1_reg_1366[8:4] <= 5'b00000;
    f_0_0_cast1_reg_1377[5] <= 1'b0;
    zext_ln1117_2_reg_1436[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_out
