// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_5nfYi.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_V_address0;
    sc_out< sc_logic > conv_out_V_ce0;
    sc_in< sc_lv<14> > conv_out_V_q0;
    sc_out< sc_lv<10> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<14> > max_pool_out_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_mac_muladd_5nfYi<1,1,5,6,5,10>* cnn_mac_muladd_5nfYi_U9;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_172;
    sc_signal< sc_lv<2> > mpr_0_reg_183;
    sc_signal< sc_lv<14> > max_1_reg_194;
    sc_signal< sc_lv<2> > mpc_0_reg_207;
    sc_signal< sc_lv<1> > icmp_ln10_fu_218_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > add_ln10_fu_224_p2;
    sc_signal< sc_lv<10> > add_ln10_reg_556;
    sc_signal< sc_lv<1> > icmp_ln13_fu_236_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_561;
    sc_signal< sc_lv<3> > select_ln29_2_fu_250_p3;
    sc_signal< sc_lv<3> > select_ln29_2_reg_566;
    sc_signal< sc_lv<13> > zext_ln26_fu_258_p1;
    sc_signal< sc_lv<13> > zext_ln26_reg_571;
    sc_signal< sc_lv<11> > zext_ln26_1_fu_262_p1;
    sc_signal< sc_lv<11> > zext_ln26_1_reg_576;
    sc_signal< sc_lv<4> > select_ln13_fu_312_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_581;
    sc_signal< sc_lv<5> > select_ln13_1_fu_328_p3;
    sc_signal< sc_lv<5> > select_ln13_1_reg_587;
    sc_signal< sc_lv<4> > select_ln13_2_fu_336_p3;
    sc_signal< sc_lv<4> > select_ln13_2_reg_592;
    sc_signal< sc_lv<8> > mul_ln203_fu_348_p2;
    sc_signal< sc_lv<8> > mul_ln203_reg_597;
    sc_signal< sc_lv<5> > shl_ln2_fu_354_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_602;
    sc_signal< sc_lv<1> > icmp_ln20_fu_362_p2;
    sc_signal< sc_lv<1> > icmp_ln20_reg_607;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln20_reg_607_pp0_iter1_reg;
    sc_signal< sc_lv<3> > add_ln20_1_fu_368_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln20_fu_386_p3;
    sc_signal< sc_lv<2> > select_ln20_reg_616;
    sc_signal< sc_lv<2> > select_ln20_1_fu_394_p3;
    sc_signal< sc_lv<2> > select_ln20_1_reg_621;
    sc_signal< sc_lv<2> > mpc_fu_402_p2;
    sc_signal< sc_lv<14> > select_ln29_fu_472_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<4> > c_fu_524_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > select_ln13_3_fu_535_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<10> > indvar_flatten25_reg_116;
    sc_signal< sc_lv<3> > f_0_reg_127;
    sc_signal< sc_lv<8> > indvar_flatten7_reg_138;
    sc_signal< sc_lv<4> > r_0_reg_150;
    sc_signal< sc_lv<4> > c_0_reg_161;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_187_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln1494_5_fu_461_p1;
    sc_signal< sc_lv<64> > zext_ln203_6_fu_519_p1;
    sc_signal< sc_lv<3> > f_fu_230_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_266_p3;
    sc_signal< sc_lv<1> > icmp_ln16_fu_288_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_282_p2;
    sc_signal< sc_lv<4> > select_ln29_1_fu_242_p3;
    sc_signal< sc_lv<1> > and_ln29_fu_294_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_306_p2;
    sc_signal< sc_lv<4> > r_fu_300_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_320_p3;
    sc_signal< sc_lv<5> > select_ln29_3_fu_274_p3;
    sc_signal< sc_lv<4> > mul_ln203_fu_348_p0;
    sc_signal< sc_lv<1> > icmp_ln23_fu_380_p2;
    sc_signal< sc_lv<2> > mpr_fu_374_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_408_p1;
    sc_signal< sc_lv<5> > add_ln20_fu_411_p2;
    sc_signal< sc_lv<5> > zext_ln23_fu_420_p1;
    sc_signal< sc_lv<5> > j_fu_423_p2;
    sc_signal< sc_lv<10> > grp_fu_542_p3;
    sc_signal< sc_lv<11> > tmp_1_fu_439_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_432_p3;
    sc_signal< sc_lv<13> > zext_ln1494_4_fu_446_p1;
    sc_signal< sc_lv<13> > sub_ln1494_fu_450_p2;
    sc_signal< sc_lv<13> > add_ln1494_2_fu_456_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_466_p2;
    sc_signal< sc_lv<8> > zext_ln203_4_fu_480_p1;
    sc_signal< sc_lv<8> > add_ln203_fu_483_p2;
    sc_signal< sc_lv<9> > tmp_fu_496_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_488_p3;
    sc_signal< sc_lv<11> > zext_ln203_5_fu_504_p1;
    sc_signal< sc_lv<11> > sub_ln203_fu_508_p2;
    sc_signal< sc_lv<11> > add_ln203_3_fu_514_p2;
    sc_signal< sc_lv<8> > add_ln13_1_fu_529_p2;
    sc_signal< sc_lv<5> > grp_fu_542_p0;
    sc_signal< sc_lv<6> > grp_fu_542_p1;
    sc_signal< sc_lv<5> > grp_fu_542_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > grp_fu_542_p00;
    sc_signal< sc_lv<10> > grp_fu_542_p20;
    sc_signal< sc_lv<8> > mul_ln203_fu_348_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<10> ap_const_lv10_3F6;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<10> ap_const_lv10_1A;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_224_p2();
    void thread_add_ln13_1_fu_529_p2();
    void thread_add_ln1494_2_fu_456_p2();
    void thread_add_ln203_3_fu_514_p2();
    void thread_add_ln203_fu_483_p2();
    void thread_add_ln20_1_fu_368_p2();
    void thread_add_ln20_fu_411_p2();
    void thread_and_ln29_fu_294_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_mpr_0_phi_fu_187_p4();
    void thread_ap_ready();
    void thread_c_fu_524_p2();
    void thread_conv_out_V_address0();
    void thread_conv_out_V_ce0();
    void thread_f_fu_230_p2();
    void thread_grp_fu_542_p0();
    void thread_grp_fu_542_p00();
    void thread_grp_fu_542_p1();
    void thread_grp_fu_542_p2();
    void thread_grp_fu_542_p20();
    void thread_icmp_ln10_fu_218_p2();
    void thread_icmp_ln13_fu_236_p2();
    void thread_icmp_ln1494_fu_466_p2();
    void thread_icmp_ln16_fu_288_p2();
    void thread_icmp_ln20_fu_362_p2();
    void thread_icmp_ln23_fu_380_p2();
    void thread_j_fu_423_p2();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mpc_fu_402_p2();
    void thread_mpr_fu_374_p2();
    void thread_mul_ln203_fu_348_p0();
    void thread_mul_ln203_fu_348_p00();
    void thread_mul_ln203_fu_348_p2();
    void thread_or_ln13_fu_306_p2();
    void thread_p_shl2_cast_fu_488_p3();
    void thread_p_shl_cast_fu_432_p3();
    void thread_r_fu_300_p2();
    void thread_select_ln13_1_fu_328_p3();
    void thread_select_ln13_2_fu_336_p3();
    void thread_select_ln13_3_fu_535_p3();
    void thread_select_ln13_fu_312_p3();
    void thread_select_ln20_1_fu_394_p3();
    void thread_select_ln20_fu_386_p3();
    void thread_select_ln29_1_fu_242_p3();
    void thread_select_ln29_2_fu_250_p3();
    void thread_select_ln29_3_fu_274_p3();
    void thread_select_ln29_fu_472_p3();
    void thread_shl_ln26_mid1_fu_320_p3();
    void thread_shl_ln2_fu_354_p3();
    void thread_shl_ln_fu_266_p3();
    void thread_sub_ln1494_fu_450_p2();
    void thread_sub_ln203_fu_508_p2();
    void thread_tmp_1_fu_439_p3();
    void thread_tmp_fu_496_p3();
    void thread_xor_ln29_fu_282_p2();
    void thread_zext_ln1494_4_fu_446_p1();
    void thread_zext_ln1494_5_fu_461_p1();
    void thread_zext_ln203_4_fu_480_p1();
    void thread_zext_ln203_5_fu_504_p1();
    void thread_zext_ln203_6_fu_519_p1();
    void thread_zext_ln20_fu_408_p1();
    void thread_zext_ln23_fu_420_p1();
    void thread_zext_ln26_1_fu_262_p1();
    void thread_zext_ln26_fu_258_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
