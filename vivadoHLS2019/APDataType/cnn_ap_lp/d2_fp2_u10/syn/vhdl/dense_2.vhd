-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_1_out_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dense_1_out_V_ce0 : OUT STD_LOGIC;
    dense_1_out_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dense_1_out_V_ce1 : OUT STD_LOGIC;
    dense_1_out_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dense_2_out_V_ce0 : OUT STD_LOGIC;
    dense_2_out_V_we0 : OUT STD_LOGIC;
    dense_2_out_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
end;


architecture behav of dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_2_weights_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce0 : STD_LOGIC;
    signal dense_2_weights_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_weights_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce1 : STD_LOGIC;
    signal dense_2_weights_V_q1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_bias_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_bias_V_ce0 : STD_LOGIC;
    signal dense_2_bias_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_0_reg_305 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_0_0_reg_317 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln9_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_335_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1246 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln14_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_reg_1251 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_fu_345_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln13_reg_1257 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln13_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_reg_1271 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_10_reg_1305 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_16_reg_1330 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_22_reg_1355 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_28_reg_1380 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln13_8_fu_1056_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_8_reg_1395 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal i_0_reg_294 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_j_0_0_phi_fu_321_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1117_fu_395_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_1_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_1_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_2_fu_406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_2_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln14_3_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_3_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_4_fu_558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_4_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln14_5_fu_649_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_5_fu_749_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_6_fu_709_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_6_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln14_7_fu_800_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_7_fu_900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_8_fu_860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_8_fu_991_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln14_9_fu_951_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_9_fu_1051_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_10_fu_1011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_360_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2_fu_372_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_fu_368_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_1_fu_380_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_fu_384_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_fu_390_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln13_fu_400_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_411_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_423_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_2_fu_419_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_3_fu_431_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_1_fu_435_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_1_fu_441_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1152_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_475_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln13_fu_492_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_503_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_515_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_4_fu_511_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_5_fu_523_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_2_fu_527_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_2_fu_533_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1161_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln13_1_fu_552_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_11_fu_563_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_575_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_6_fu_571_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_7_fu_583_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_3_fu_587_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_3_fu_593_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1170_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_13_fu_626_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln13_2_fu_643_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_14_fu_654_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_666_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_8_fu_662_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_9_fu_674_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_4_fu_678_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_4_fu_684_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1179_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln13_3_fu_703_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_714_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_726_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_10_fu_722_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_11_fu_734_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_5_fu_738_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_5_fu_744_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1188_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_19_fu_777_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln13_4_fu_794_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_20_fu_805_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_21_fu_817_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_12_fu_813_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_13_fu_825_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_6_fu_829_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_6_fu_835_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1197_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln13_5_fu_854_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_23_fu_865_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_fu_877_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_14_fu_873_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_15_fu_885_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_7_fu_889_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_7_fu_895_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1206_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_25_fu_928_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln13_6_fu_945_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_26_fu_956_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_27_fu_968_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_16_fu_964_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_17_fu_976_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_8_fu_980_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_8_fu_986_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1215_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln13_7_fu_1005_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_29_fu_1016_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_fu_1028_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_18_fu_1024_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_19_fu_1036_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_9_fu_1040_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_9_fu_1046_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1224_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_31_fu_1085_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1233_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1265_fu_1111_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_fu_1119_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1265_fu_1111_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_1119_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln703_fu_1115_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_fu_1123_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_6_fu_1135_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_fu_1129_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1152_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1152_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1161_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1161_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1170_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1170_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1179_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1179_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1188_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1188_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1197_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1197_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1206_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1206_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1215_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1215_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1224_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1224_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1233_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1233_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1152_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1161_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1170_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1179_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1188_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1197_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1206_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1215_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1224_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1233_p10 : STD_LOGIC_VECTOR (21 downto 0);

    component cnn_mac_muladd_9sncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component dense_2_dense_2_wlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component dense_2_dense_2_bmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    dense_2_weights_V_U : component dense_2_dense_2_wlbW
    generic map (
        DataWidth => 9,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_weights_V_address0,
        ce0 => dense_2_weights_V_ce0,
        q0 => dense_2_weights_V_q0,
        address1 => dense_2_weights_V_address1,
        ce1 => dense_2_weights_V_ce1,
        q1 => dense_2_weights_V_q1);

    dense_2_bias_V_U : component dense_2_dense_2_bmb6
    generic map (
        DataWidth => 9,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_bias_V_address0,
        ce0 => dense_2_bias_V_ce0,
        q0 => dense_2_bias_V_q0);

    cnn_mac_muladd_9sncg_U28 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q0,
        din1 => grp_fu_1152_p1,
        din2 => grp_fu_1152_p2,
        dout => grp_fu_1152_p3);

    cnn_mac_muladd_9sncg_U29 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q1,
        din1 => grp_fu_1161_p1,
        din2 => grp_fu_1161_p2,
        dout => grp_fu_1161_p3);

    cnn_mac_muladd_9sncg_U30 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q0,
        din1 => grp_fu_1170_p1,
        din2 => grp_fu_1170_p2,
        dout => grp_fu_1170_p3);

    cnn_mac_muladd_9sncg_U31 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q1,
        din1 => grp_fu_1179_p1,
        din2 => grp_fu_1179_p2,
        dout => grp_fu_1179_p3);

    cnn_mac_muladd_9sncg_U32 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q0,
        din1 => grp_fu_1188_p1,
        din2 => grp_fu_1188_p2,
        dout => grp_fu_1188_p3);

    cnn_mac_muladd_9sncg_U33 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q1,
        din1 => grp_fu_1197_p1,
        din2 => grp_fu_1197_p2,
        dout => grp_fu_1197_p3);

    cnn_mac_muladd_9sncg_U34 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q0,
        din1 => grp_fu_1206_p1,
        din2 => grp_fu_1206_p2,
        dout => grp_fu_1206_p3);

    cnn_mac_muladd_9sncg_U35 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q1,
        din1 => grp_fu_1215_p1,
        din2 => grp_fu_1215_p2,
        dout => grp_fu_1215_p3);

    cnn_mac_muladd_9sncg_U36 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q0,
        din1 => grp_fu_1224_p1,
        din2 => grp_fu_1224_p2,
        dout => grp_fu_1224_p3);

    cnn_mac_muladd_9sncg_U37 : component cnn_mac_muladd_9sncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => dense_2_weights_V_q1,
        din1 => grp_fu_1233_p1,
        din2 => grp_fu_1233_p2,
        dout => grp_fu_1233_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln9_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln9_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i_0_reg_294 <= i_reg_1246;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_294 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_0_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                j_0_0_reg_317 <= add_ln13_8_reg_1395;
            elsif (((icmp_ln9_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_0_reg_317 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_Val2_0_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                p_Val2_0_reg_305 <= grp_fu_1233_p3(21 downto 8);
            elsif (((icmp_ln9_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_Val2_0_reg_305 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln13_8_reg_1395 <= add_ln13_8_fu_1056_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1246 <= i_fu_335_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln13_reg_1271 <= icmp_ln13_fu_349_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_10_reg_1305 <= grp_fu_1161_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_16_reg_1330 <= grp_fu_1179_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_22_reg_1355 <= grp_fu_1197_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_28_reg_1380 <= grp_fu_1215_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln13_reg_1257(4 downto 0) <= zext_ln13_fu_345_p1(4 downto 0);
                    zext_ln14_reg_1251(4 downto 0) <= zext_ln14_fu_341_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln14_reg_1251(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln13_reg_1257(11 downto 5) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln9_fu_329_p2, ap_CS_fsm_state2, icmp_ln13_fu_349_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln9_fu_329_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln13_fu_349_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln13_fu_349_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln1117_1_fu_441_p2 <= std_logic_vector(unsigned(sub_ln1117_1_fu_435_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_2_fu_533_p2 <= std_logic_vector(unsigned(sub_ln1117_2_fu_527_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_3_fu_593_p2 <= std_logic_vector(unsigned(sub_ln1117_3_fu_587_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_4_fu_684_p2 <= std_logic_vector(unsigned(sub_ln1117_4_fu_678_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_5_fu_744_p2 <= std_logic_vector(unsigned(sub_ln1117_5_fu_738_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_6_fu_835_p2 <= std_logic_vector(unsigned(sub_ln1117_6_fu_829_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_7_fu_895_p2 <= std_logic_vector(unsigned(sub_ln1117_7_fu_889_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_8_fu_986_p2 <= std_logic_vector(unsigned(sub_ln1117_8_fu_980_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_9_fu_1046_p2 <= std_logic_vector(unsigned(sub_ln1117_9_fu_1040_p2) + unsigned(zext_ln13_reg_1257));
    add_ln1117_fu_390_p2 <= std_logic_vector(unsigned(sub_ln1117_fu_384_p2) + unsigned(zext_ln13_reg_1257));
    add_ln13_1_fu_552_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_3));
    add_ln13_2_fu_643_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_4));
    add_ln13_3_fu_703_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_5));
    add_ln13_4_fu_794_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_6));
    add_ln13_5_fu_854_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_7));
    add_ln13_6_fu_945_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_8));
    add_ln13_7_fu_1005_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_9));
    add_ln13_8_fu_1056_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_A));
    add_ln13_fu_492_p2 <= std_logic_vector(unsigned(j_0_0_reg_317) + unsigned(ap_const_lv6_2));
    add_ln203_fu_1129_p2 <= std_logic_vector(signed(sext_ln703_fu_1119_p1) + signed(trunc_ln703_fu_1115_p1));
    add_ln703_fu_1123_p2 <= std_logic_vector(unsigned(p_Val2_0_reg_305) + unsigned(sext_ln1265_fu_1111_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln13_fu_349_p2)
    begin
        if ((icmp_ln13_fu_349_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln9_fu_329_p2, ap_CS_fsm_state2)
    begin
        if ((((icmp_ln9_fu_329_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_321_p4_assign_proc : process(j_0_0_reg_317, icmp_ln13_reg_1271, ap_CS_fsm_pp0_stage0, add_ln13_8_reg_1395, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln13_reg_1271 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_j_0_0_phi_fu_321_p4 <= add_ln13_8_reg_1395;
        else 
            ap_phi_mux_j_0_0_phi_fu_321_p4 <= j_0_0_reg_317;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln9_fu_329_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln9_fu_329_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, zext_ln14_1_fu_355_p1, ap_block_pp0_stage1, zext_ln14_3_fu_498_p1, ap_block_pp0_stage2, zext_ln14_5_fu_649_p1, ap_block_pp0_stage3, zext_ln14_7_fu_800_p1, ap_block_pp0_stage4, zext_ln14_9_fu_951_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_1_out_V_address0 <= zext_ln14_9_fu_951_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_1_out_V_address0 <= zext_ln14_7_fu_800_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_1_out_V_address0 <= zext_ln14_5_fu_649_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_1_out_V_address0 <= zext_ln14_3_fu_498_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_1_out_V_address0 <= zext_ln14_1_fu_355_p1(6 - 1 downto 0);
            else 
                dense_1_out_V_address0 <= "XXXXXX";
            end if;
        else 
            dense_1_out_V_address0 <= "XXXXXX";
        end if; 
    end process;


    dense_1_out_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, zext_ln14_2_fu_406_p1, ap_block_pp0_stage1, zext_ln14_4_fu_558_p1, ap_block_pp0_stage2, zext_ln14_6_fu_709_p1, ap_block_pp0_stage3, zext_ln14_8_fu_860_p1, ap_block_pp0_stage4, zext_ln14_10_fu_1011_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_1_out_V_address1 <= zext_ln14_10_fu_1011_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_1_out_V_address1 <= zext_ln14_8_fu_860_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_1_out_V_address1 <= zext_ln14_6_fu_709_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_1_out_V_address1 <= zext_ln14_4_fu_558_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_1_out_V_address1 <= zext_ln14_2_fu_406_p1(6 - 1 downto 0);
            else 
                dense_1_out_V_address1 <= "XXXXXX";
            end if;
        else 
            dense_1_out_V_address1 <= "XXXXXX";
        end if; 
    end process;


    dense_1_out_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_1_out_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_1_out_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_bias_V_address0 <= zext_ln14_reg_1251(5 - 1 downto 0);

    dense_2_bias_V_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_2_bias_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_V_address0 <= zext_ln14_reg_1251(5 - 1 downto 0);

    dense_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_out_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_V_d0 <= 
        ap_const_lv13_0 when (tmp_6_fu_1135_p3(0) = '1') else 
        add_ln203_fu_1129_p2;

    dense_2_out_V_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_out_V_we0 <= ap_const_logic_1;
        else 
            dense_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, sext_ln1117_fu_395_p1, sext_ln1117_2_fu_538_p1, ap_block_pp0_stage1, sext_ln1117_4_fu_689_p1, ap_block_pp0_stage2, sext_ln1117_6_fu_840_p1, ap_block_pp0_stage3, sext_ln1117_8_fu_991_p1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_2_weights_V_address0 <= sext_ln1117_8_fu_991_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_2_weights_V_address0 <= sext_ln1117_6_fu_840_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_2_weights_V_address0 <= sext_ln1117_4_fu_689_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address0 <= sext_ln1117_2_fu_538_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address0 <= sext_ln1117_fu_395_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, sext_ln1117_1_fu_446_p1, ap_block_pp0_stage1, sext_ln1117_3_fu_598_p1, ap_block_pp0_stage2, sext_ln1117_5_fu_749_p1, ap_block_pp0_stage3, sext_ln1117_7_fu_900_p1, ap_block_pp0_stage4, sext_ln1117_9_fu_1051_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_2_weights_V_address1 <= sext_ln1117_9_fu_1051_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_2_weights_V_address1 <= sext_ln1117_7_fu_900_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_2_weights_V_address1 <= sext_ln1117_5_fu_749_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address1 <= sext_ln1117_3_fu_598_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address1 <= sext_ln1117_1_fu_446_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1152_p1 <= grp_fu_1152_p10(13 - 1 downto 0);
    grp_fu_1152_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q0),22));
    grp_fu_1152_p2 <= (p_Val2_0_reg_305 & ap_const_lv8_0);
    grp_fu_1161_p1 <= grp_fu_1161_p10(13 - 1 downto 0);
    grp_fu_1161_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q1),22));
    grp_fu_1161_p2 <= (tmp_5_fu_475_p4 & ap_const_lv8_0);
    grp_fu_1170_p1 <= grp_fu_1170_p10(13 - 1 downto 0);
    grp_fu_1170_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q0),22));
    grp_fu_1170_p2 <= (tmp_10_reg_1305 & ap_const_lv8_0);
    grp_fu_1179_p1 <= grp_fu_1179_p10(13 - 1 downto 0);
    grp_fu_1179_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q1),22));
    grp_fu_1179_p2 <= (tmp_13_fu_626_p4 & ap_const_lv8_0);
    grp_fu_1188_p1 <= grp_fu_1188_p10(13 - 1 downto 0);
    grp_fu_1188_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q0),22));
    grp_fu_1188_p2 <= (tmp_16_reg_1330 & ap_const_lv8_0);
    grp_fu_1197_p1 <= grp_fu_1197_p10(13 - 1 downto 0);
    grp_fu_1197_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q1),22));
    grp_fu_1197_p2 <= (tmp_19_fu_777_p4 & ap_const_lv8_0);
    grp_fu_1206_p1 <= grp_fu_1206_p10(13 - 1 downto 0);
    grp_fu_1206_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q0),22));
    grp_fu_1206_p2 <= (tmp_22_reg_1355 & ap_const_lv8_0);
    grp_fu_1215_p1 <= grp_fu_1215_p10(13 - 1 downto 0);
    grp_fu_1215_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q1),22));
    grp_fu_1215_p2 <= (tmp_25_fu_928_p4 & ap_const_lv8_0);
    grp_fu_1224_p1 <= grp_fu_1224_p10(13 - 1 downto 0);
    grp_fu_1224_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q0),22));
    grp_fu_1224_p2 <= (tmp_28_reg_1380 & ap_const_lv8_0);
    grp_fu_1233_p1 <= grp_fu_1233_p10(13 - 1 downto 0);
    grp_fu_1233_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_V_q1),22));
    grp_fu_1233_p2 <= (tmp_31_fu_1085_p4 & ap_const_lv8_0);
    i_fu_335_p2 <= std_logic_vector(unsigned(i_0_reg_294) + unsigned(ap_const_lv5_1));
    icmp_ln13_fu_349_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_321_p4 = ap_const_lv6_32) else "0";
    icmp_ln9_fu_329_p2 <= "1" when (i_0_reg_294 = ap_const_lv5_1E) else "0";
    or_ln13_fu_400_p2 <= (ap_phi_mux_j_0_0_phi_fu_321_p4 or ap_const_lv6_1);
        sext_ln1117_1_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_1_fu_441_p2),64));

        sext_ln1117_2_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_2_fu_533_p2),64));

        sext_ln1117_3_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_3_fu_593_p2),64));

        sext_ln1117_4_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_4_fu_684_p2),64));

        sext_ln1117_5_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_5_fu_744_p2),64));

        sext_ln1117_6_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_6_fu_835_p2),64));

        sext_ln1117_7_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_7_fu_895_p2),64));

        sext_ln1117_8_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_8_fu_986_p2),64));

        sext_ln1117_9_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_9_fu_1046_p2),64));

        sext_ln1117_fu_395_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_fu_390_p2),64));

    sext_ln1265_fu_1111_p0 <= dense_2_bias_V_q0;
        sext_ln1265_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1265_fu_1111_p0),14));

    sext_ln703_fu_1119_p0 <= dense_2_bias_V_q0;
        sext_ln703_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_1119_p0),13));

    sub_ln1117_1_fu_435_p2 <= std_logic_vector(unsigned(zext_ln1117_2_fu_419_p1) - unsigned(zext_ln1117_3_fu_431_p1));
    sub_ln1117_2_fu_527_p2 <= std_logic_vector(unsigned(zext_ln1117_4_fu_511_p1) - unsigned(zext_ln1117_5_fu_523_p1));
    sub_ln1117_3_fu_587_p2 <= std_logic_vector(unsigned(zext_ln1117_6_fu_571_p1) - unsigned(zext_ln1117_7_fu_583_p1));
    sub_ln1117_4_fu_678_p2 <= std_logic_vector(unsigned(zext_ln1117_8_fu_662_p1) - unsigned(zext_ln1117_9_fu_674_p1));
    sub_ln1117_5_fu_738_p2 <= std_logic_vector(unsigned(zext_ln1117_10_fu_722_p1) - unsigned(zext_ln1117_11_fu_734_p1));
    sub_ln1117_6_fu_829_p2 <= std_logic_vector(unsigned(zext_ln1117_12_fu_813_p1) - unsigned(zext_ln1117_13_fu_825_p1));
    sub_ln1117_7_fu_889_p2 <= std_logic_vector(unsigned(zext_ln1117_14_fu_873_p1) - unsigned(zext_ln1117_15_fu_885_p1));
    sub_ln1117_8_fu_980_p2 <= std_logic_vector(unsigned(zext_ln1117_16_fu_964_p1) - unsigned(zext_ln1117_17_fu_976_p1));
    sub_ln1117_9_fu_1040_p2 <= std_logic_vector(unsigned(zext_ln1117_18_fu_1024_p1) - unsigned(zext_ln1117_19_fu_1036_p1));
    sub_ln1117_fu_384_p2 <= std_logic_vector(unsigned(zext_ln1117_fu_368_p1) - unsigned(zext_ln1117_1_fu_380_p1));
    tmp_11_fu_563_p3 <= (add_ln13_1_fu_552_p2 & ap_const_lv5_0);
    tmp_12_fu_575_p3 <= (add_ln13_1_fu_552_p2 & ap_const_lv1_0);
    tmp_13_fu_626_p4 <= grp_fu_1170_p3(21 downto 8);
    tmp_14_fu_654_p3 <= (add_ln13_2_fu_643_p2 & ap_const_lv5_0);
    tmp_15_fu_666_p3 <= (add_ln13_2_fu_643_p2 & ap_const_lv1_0);
    tmp_17_fu_714_p3 <= (add_ln13_3_fu_703_p2 & ap_const_lv5_0);
    tmp_18_fu_726_p3 <= (add_ln13_3_fu_703_p2 & ap_const_lv1_0);
    tmp_19_fu_777_p4 <= grp_fu_1188_p3(21 downto 8);
    tmp_20_fu_805_p3 <= (add_ln13_4_fu_794_p2 & ap_const_lv5_0);
    tmp_21_fu_817_p3 <= (add_ln13_4_fu_794_p2 & ap_const_lv1_0);
    tmp_23_fu_865_p3 <= (add_ln13_5_fu_854_p2 & ap_const_lv5_0);
    tmp_24_fu_877_p3 <= (add_ln13_5_fu_854_p2 & ap_const_lv1_0);
    tmp_25_fu_928_p4 <= grp_fu_1206_p3(21 downto 8);
    tmp_26_fu_956_p3 <= (add_ln13_6_fu_945_p2 & ap_const_lv5_0);
    tmp_27_fu_968_p3 <= (add_ln13_6_fu_945_p2 & ap_const_lv1_0);
    tmp_29_fu_1016_p3 <= (add_ln13_7_fu_1005_p2 & ap_const_lv5_0);
    tmp_2_fu_372_p3 <= (ap_phi_mux_j_0_0_phi_fu_321_p4 & ap_const_lv1_0);
    tmp_30_fu_1028_p3 <= (add_ln13_7_fu_1005_p2 & ap_const_lv1_0);
    tmp_31_fu_1085_p4 <= grp_fu_1224_p3(21 downto 8);
    tmp_3_fu_411_p3 <= (or_ln13_fu_400_p2 & ap_const_lv5_0);
    tmp_4_fu_423_p3 <= (or_ln13_fu_400_p2 & ap_const_lv1_0);
    tmp_5_fu_475_p4 <= grp_fu_1152_p3(21 downto 8);
    tmp_6_fu_1135_p3 <= add_ln703_fu_1123_p2(13 downto 13);
    tmp_7_fu_503_p3 <= (add_ln13_fu_492_p2 & ap_const_lv5_0);
    tmp_8_fu_515_p3 <= (add_ln13_fu_492_p2 & ap_const_lv1_0);
    tmp_s_fu_360_p3 <= (ap_phi_mux_j_0_0_phi_fu_321_p4 & ap_const_lv5_0);
    trunc_ln703_fu_1115_p1 <= p_Val2_0_reg_305(13 - 1 downto 0);
    zext_ln1117_10_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_714_p3),12));
    zext_ln1117_11_fu_734_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_726_p3),12));
    zext_ln1117_12_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_805_p3),12));
    zext_ln1117_13_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_817_p3),12));
    zext_ln1117_14_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_865_p3),12));
    zext_ln1117_15_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_877_p3),12));
    zext_ln1117_16_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_956_p3),12));
    zext_ln1117_17_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_968_p3),12));
    zext_ln1117_18_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_1016_p3),12));
    zext_ln1117_19_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1028_p3),12));
    zext_ln1117_1_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_372_p3),12));
    zext_ln1117_2_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_411_p3),12));
    zext_ln1117_3_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_423_p3),12));
    zext_ln1117_4_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_503_p3),12));
    zext_ln1117_5_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_515_p3),12));
    zext_ln1117_6_fu_571_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_563_p3),12));
    zext_ln1117_7_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_575_p3),12));
    zext_ln1117_8_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_654_p3),12));
    zext_ln1117_9_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_666_p3),12));
    zext_ln1117_fu_368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_360_p3),12));
    zext_ln13_fu_345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_294),12));
    zext_ln14_10_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_7_fu_1005_p2),64));
    zext_ln14_1_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_0_0_phi_fu_321_p4),64));
    zext_ln14_2_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln13_fu_400_p2),64));
    zext_ln14_3_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_fu_492_p2),64));
    zext_ln14_4_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_1_fu_552_p2),64));
    zext_ln14_5_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_2_fu_643_p2),64));
    zext_ln14_6_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_3_fu_703_p2),64));
    zext_ln14_7_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_4_fu_794_p2),64));
    zext_ln14_8_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_5_fu_854_p2),64));
    zext_ln14_9_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_6_fu_945_p2),64));
    zext_ln14_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_294),64));
end behav;
