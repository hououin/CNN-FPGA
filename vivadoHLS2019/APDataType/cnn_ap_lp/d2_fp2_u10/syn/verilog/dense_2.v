// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_1_out_V_address0,
        dense_1_out_V_ce0,
        dense_1_out_V_q0,
        dense_1_out_V_address1,
        dense_1_out_V_ce1,
        dense_1_out_V_q1,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_we0,
        dense_2_out_V_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_pp0_stage0 = 9'd4;
parameter    ap_ST_fsm_pp0_stage1 = 9'd8;
parameter    ap_ST_fsm_pp0_stage2 = 9'd16;
parameter    ap_ST_fsm_pp0_stage3 = 9'd32;
parameter    ap_ST_fsm_pp0_stage4 = 9'd64;
parameter    ap_ST_fsm_state9 = 9'd128;
parameter    ap_ST_fsm_state10 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] dense_1_out_V_address0;
output   dense_1_out_V_ce0;
input  [12:0] dense_1_out_V_q0;
output  [5:0] dense_1_out_V_address1;
output   dense_1_out_V_ce1;
input  [12:0] dense_1_out_V_q1;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
output   dense_2_out_V_we0;
output  [12:0] dense_2_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] dense_1_out_V_address0;
reg dense_1_out_V_ce0;
reg[5:0] dense_1_out_V_address1;
reg dense_1_out_V_ce1;
reg dense_2_out_V_ce0;
reg dense_2_out_V_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
reg   [10:0] dense_2_weights_V_address1;
reg    dense_2_weights_V_ce1;
wire  signed [8:0] dense_2_weights_V_q1;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
reg   [13:0] p_Val2_0_reg_305;
reg   [5:0] j_0_0_reg_317;
wire   [0:0] icmp_ln9_fu_329_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_335_p2;
reg   [4:0] i_reg_1246;
wire   [63:0] zext_ln14_fu_341_p1;
reg   [63:0] zext_ln14_reg_1251;
wire   [11:0] zext_ln13_fu_345_p1;
reg   [11:0] zext_ln13_reg_1257;
wire   [0:0] icmp_ln13_fu_349_p2;
reg   [0:0] icmp_ln13_reg_1271;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [13:0] tmp_10_reg_1305;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [13:0] tmp_16_reg_1330;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] tmp_22_reg_1355;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [13:0] tmp_28_reg_1380;
wire   [5:0] add_ln13_8_fu_1056_p2;
reg   [5:0] add_ln13_8_reg_1395;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state9;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage4_subdone;
reg   [4:0] i_0_reg_294;
wire    ap_CS_fsm_state10;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_j_0_0_phi_fu_321_p4;
wire  signed [63:0] sext_ln1117_fu_395_p1;
wire   [63:0] zext_ln14_1_fu_355_p1;
wire  signed [63:0] sext_ln1117_1_fu_446_p1;
wire   [63:0] zext_ln14_2_fu_406_p1;
wire  signed [63:0] sext_ln1117_2_fu_538_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln14_3_fu_498_p1;
wire  signed [63:0] sext_ln1117_3_fu_598_p1;
wire   [63:0] zext_ln14_4_fu_558_p1;
wire  signed [63:0] sext_ln1117_4_fu_689_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln14_5_fu_649_p1;
wire  signed [63:0] sext_ln1117_5_fu_749_p1;
wire   [63:0] zext_ln14_6_fu_709_p1;
wire  signed [63:0] sext_ln1117_6_fu_840_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln14_7_fu_800_p1;
wire  signed [63:0] sext_ln1117_7_fu_900_p1;
wire   [63:0] zext_ln14_8_fu_860_p1;
wire  signed [63:0] sext_ln1117_8_fu_991_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln14_9_fu_951_p1;
wire  signed [63:0] sext_ln1117_9_fu_1051_p1;
wire   [63:0] zext_ln14_10_fu_1011_p1;
wire   [10:0] tmp_s_fu_360_p3;
wire   [6:0] tmp_2_fu_372_p3;
wire   [11:0] zext_ln1117_fu_368_p1;
wire   [11:0] zext_ln1117_1_fu_380_p1;
wire   [11:0] sub_ln1117_fu_384_p2;
wire   [11:0] add_ln1117_fu_390_p2;
wire   [5:0] or_ln13_fu_400_p2;
wire   [10:0] tmp_3_fu_411_p3;
wire   [6:0] tmp_4_fu_423_p3;
wire   [11:0] zext_ln1117_2_fu_419_p1;
wire   [11:0] zext_ln1117_3_fu_431_p1;
wire   [11:0] sub_ln1117_1_fu_435_p2;
wire   [11:0] add_ln1117_1_fu_441_p2;
wire  signed [21:0] grp_fu_1152_p3;
wire   [13:0] tmp_5_fu_475_p4;
wire   [5:0] add_ln13_fu_492_p2;
wire   [10:0] tmp_7_fu_503_p3;
wire   [6:0] tmp_8_fu_515_p3;
wire   [11:0] zext_ln1117_4_fu_511_p1;
wire   [11:0] zext_ln1117_5_fu_523_p1;
wire   [11:0] sub_ln1117_2_fu_527_p2;
wire   [11:0] add_ln1117_2_fu_533_p2;
wire  signed [21:0] grp_fu_1161_p3;
wire   [5:0] add_ln13_1_fu_552_p2;
wire   [10:0] tmp_11_fu_563_p3;
wire   [6:0] tmp_12_fu_575_p3;
wire   [11:0] zext_ln1117_6_fu_571_p1;
wire   [11:0] zext_ln1117_7_fu_583_p1;
wire   [11:0] sub_ln1117_3_fu_587_p2;
wire   [11:0] add_ln1117_3_fu_593_p2;
wire  signed [21:0] grp_fu_1170_p3;
wire   [13:0] tmp_13_fu_626_p4;
wire   [5:0] add_ln13_2_fu_643_p2;
wire   [10:0] tmp_14_fu_654_p3;
wire   [6:0] tmp_15_fu_666_p3;
wire   [11:0] zext_ln1117_8_fu_662_p1;
wire   [11:0] zext_ln1117_9_fu_674_p1;
wire   [11:0] sub_ln1117_4_fu_678_p2;
wire   [11:0] add_ln1117_4_fu_684_p2;
wire  signed [21:0] grp_fu_1179_p3;
wire   [5:0] add_ln13_3_fu_703_p2;
wire   [10:0] tmp_17_fu_714_p3;
wire   [6:0] tmp_18_fu_726_p3;
wire   [11:0] zext_ln1117_10_fu_722_p1;
wire   [11:0] zext_ln1117_11_fu_734_p1;
wire   [11:0] sub_ln1117_5_fu_738_p2;
wire   [11:0] add_ln1117_5_fu_744_p2;
wire  signed [21:0] grp_fu_1188_p3;
wire   [13:0] tmp_19_fu_777_p4;
wire   [5:0] add_ln13_4_fu_794_p2;
wire   [10:0] tmp_20_fu_805_p3;
wire   [6:0] tmp_21_fu_817_p3;
wire   [11:0] zext_ln1117_12_fu_813_p1;
wire   [11:0] zext_ln1117_13_fu_825_p1;
wire   [11:0] sub_ln1117_6_fu_829_p2;
wire   [11:0] add_ln1117_6_fu_835_p2;
wire  signed [21:0] grp_fu_1197_p3;
wire   [5:0] add_ln13_5_fu_854_p2;
wire   [10:0] tmp_23_fu_865_p3;
wire   [6:0] tmp_24_fu_877_p3;
wire   [11:0] zext_ln1117_14_fu_873_p1;
wire   [11:0] zext_ln1117_15_fu_885_p1;
wire   [11:0] sub_ln1117_7_fu_889_p2;
wire   [11:0] add_ln1117_7_fu_895_p2;
wire  signed [21:0] grp_fu_1206_p3;
wire   [13:0] tmp_25_fu_928_p4;
wire   [5:0] add_ln13_6_fu_945_p2;
wire   [10:0] tmp_26_fu_956_p3;
wire   [6:0] tmp_27_fu_968_p3;
wire   [11:0] zext_ln1117_16_fu_964_p1;
wire   [11:0] zext_ln1117_17_fu_976_p1;
wire   [11:0] sub_ln1117_8_fu_980_p2;
wire   [11:0] add_ln1117_8_fu_986_p2;
wire  signed [21:0] grp_fu_1215_p3;
wire   [5:0] add_ln13_7_fu_1005_p2;
wire   [10:0] tmp_29_fu_1016_p3;
wire   [6:0] tmp_30_fu_1028_p3;
wire   [11:0] zext_ln1117_18_fu_1024_p1;
wire   [11:0] zext_ln1117_19_fu_1036_p1;
wire   [11:0] sub_ln1117_9_fu_1040_p2;
wire   [11:0] add_ln1117_9_fu_1046_p2;
wire  signed [21:0] grp_fu_1224_p3;
wire   [13:0] tmp_31_fu_1085_p4;
wire  signed [21:0] grp_fu_1233_p3;
wire  signed [8:0] sext_ln1265_fu_1111_p0;
wire  signed [8:0] sext_ln703_fu_1119_p0;
wire  signed [13:0] sext_ln1265_fu_1111_p1;
wire  signed [12:0] sext_ln703_fu_1119_p1;
wire   [12:0] trunc_ln703_fu_1115_p1;
wire   [13:0] add_ln703_fu_1123_p2;
wire   [0:0] tmp_6_fu_1135_p3;
wire   [12:0] add_ln203_fu_1129_p2;
wire   [12:0] grp_fu_1152_p1;
wire   [21:0] grp_fu_1152_p2;
wire   [12:0] grp_fu_1161_p1;
wire   [21:0] grp_fu_1161_p2;
wire   [12:0] grp_fu_1170_p1;
wire   [21:0] grp_fu_1170_p2;
wire   [12:0] grp_fu_1179_p1;
wire   [21:0] grp_fu_1179_p2;
wire   [12:0] grp_fu_1188_p1;
wire   [21:0] grp_fu_1188_p2;
wire   [12:0] grp_fu_1197_p1;
wire   [21:0] grp_fu_1197_p2;
wire   [12:0] grp_fu_1206_p1;
wire   [21:0] grp_fu_1206_p2;
wire   [12:0] grp_fu_1215_p1;
wire   [21:0] grp_fu_1215_p2;
wire   [12:0] grp_fu_1224_p1;
wire   [21:0] grp_fu_1224_p2;
wire   [12:0] grp_fu_1233_p1;
wire   [21:0] grp_fu_1233_p2;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_1152_p10;
wire   [21:0] grp_fu_1161_p10;
wire   [21:0] grp_fu_1170_p10;
wire   [21:0] grp_fu_1179_p10;
wire   [21:0] grp_fu_1188_p10;
wire   [21:0] grp_fu_1197_p10;
wire   [21:0] grp_fu_1206_p10;
wire   [21:0] grp_fu_1215_p10;
wire   [21:0] grp_fu_1224_p10;
wire   [21:0] grp_fu_1233_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dense_2_dense_2_wlbW #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0),
    .address1(dense_2_weights_V_address1),
    .ce1(dense_2_weights_V_ce1),
    .q1(dense_2_weights_V_q1)
);

dense_2_dense_2_bmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U28(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1152_p1),
    .din2(grp_fu_1152_p2),
    .dout(grp_fu_1152_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U29(
    .din0(dense_2_weights_V_q1),
    .din1(grp_fu_1161_p1),
    .din2(grp_fu_1161_p2),
    .dout(grp_fu_1161_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U30(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1170_p1),
    .din2(grp_fu_1170_p2),
    .dout(grp_fu_1170_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U31(
    .din0(dense_2_weights_V_q1),
    .din1(grp_fu_1179_p1),
    .din2(grp_fu_1179_p2),
    .dout(grp_fu_1179_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U32(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1188_p1),
    .din2(grp_fu_1188_p2),
    .dout(grp_fu_1188_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U33(
    .din0(dense_2_weights_V_q1),
    .din1(grp_fu_1197_p1),
    .din2(grp_fu_1197_p2),
    .dout(grp_fu_1197_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U34(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1206_p1),
    .din2(grp_fu_1206_p2),
    .dout(grp_fu_1206_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U35(
    .din0(dense_2_weights_V_q1),
    .din1(grp_fu_1215_p1),
    .din2(grp_fu_1215_p2),
    .dout(grp_fu_1215_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U36(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1224_p1),
    .din2(grp_fu_1224_p2),
    .dout(grp_fu_1224_p3)
);

cnn_mac_muladd_9sncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sncg_U37(
    .din0(dense_2_weights_V_q1),
    .din1(grp_fu_1233_p1),
    .din2(grp_fu_1233_p2),
    .dout(grp_fu_1233_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln9_fu_329_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln9_fu_329_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_0_reg_294 <= i_reg_1246;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_294 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        j_0_0_reg_317 <= add_ln13_8_reg_1395;
    end else if (((icmp_ln9_fu_329_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_0_reg_317 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_Val2_0_reg_305 <= {{grp_fu_1233_p3[21:8]}};
    end else if (((icmp_ln9_fu_329_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_0_reg_305 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln13_8_reg_1395 <= add_ln13_8_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1246 <= i_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_1271 <= icmp_ln13_fu_349_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_10_reg_1305 <= {{grp_fu_1161_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_16_reg_1330 <= {{grp_fu_1179_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_22_reg_1355 <= {{grp_fu_1197_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_28_reg_1380 <= {{grp_fu_1215_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_329_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln13_reg_1257[4 : 0] <= zext_ln13_fu_345_p1[4 : 0];
        zext_ln14_reg_1251[4 : 0] <= zext_ln14_fu_341_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln13_fu_349_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln9_fu_329_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_1271 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_j_0_0_phi_fu_321_p4 = add_ln13_8_reg_1395;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_321_p4 = j_0_0_reg_317;
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_329_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_1_out_V_address0 = zext_ln14_9_fu_951_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_1_out_V_address0 = zext_ln14_7_fu_800_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_1_out_V_address0 = zext_ln14_5_fu_649_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_1_out_V_address0 = zext_ln14_3_fu_498_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_1_out_V_address0 = zext_ln14_1_fu_355_p1;
        end else begin
            dense_1_out_V_address0 = 'bx;
        end
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_1_out_V_address1 = zext_ln14_10_fu_1011_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_1_out_V_address1 = zext_ln14_8_fu_860_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_1_out_V_address1 = zext_ln14_6_fu_709_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_1_out_V_address1 = zext_ln14_4_fu_558_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_1_out_V_address1 = zext_ln14_2_fu_406_p1;
        end else begin
            dense_1_out_V_address1 = 'bx;
        end
    end else begin
        dense_1_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_1_out_V_ce1 = 1'b1;
    end else begin
        dense_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_2_weights_V_address0 = sext_ln1117_8_fu_991_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_2_weights_V_address0 = sext_ln1117_6_fu_840_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_2_weights_V_address0 = sext_ln1117_4_fu_689_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address0 = sext_ln1117_2_fu_538_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address0 = sext_ln1117_fu_395_p1;
        end else begin
            dense_2_weights_V_address0 = 'bx;
        end
    end else begin
        dense_2_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_2_weights_V_address1 = sext_ln1117_9_fu_1051_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_2_weights_V_address1 = sext_ln1117_7_fu_900_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_2_weights_V_address1 = sext_ln1117_5_fu_749_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address1 = sext_ln1117_3_fu_598_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address1 = sext_ln1117_1_fu_446_p1;
        end else begin
            dense_2_weights_V_address1 = 'bx;
        end
    end else begin
        dense_2_weights_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce1 = 1'b1;
    end else begin
        dense_2_weights_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_329_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln13_fu_349_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln13_fu_349_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1117_1_fu_441_p2 = (sub_ln1117_1_fu_435_p2 + zext_ln13_reg_1257);

assign add_ln1117_2_fu_533_p2 = (sub_ln1117_2_fu_527_p2 + zext_ln13_reg_1257);

assign add_ln1117_3_fu_593_p2 = (sub_ln1117_3_fu_587_p2 + zext_ln13_reg_1257);

assign add_ln1117_4_fu_684_p2 = (sub_ln1117_4_fu_678_p2 + zext_ln13_reg_1257);

assign add_ln1117_5_fu_744_p2 = (sub_ln1117_5_fu_738_p2 + zext_ln13_reg_1257);

assign add_ln1117_6_fu_835_p2 = (sub_ln1117_6_fu_829_p2 + zext_ln13_reg_1257);

assign add_ln1117_7_fu_895_p2 = (sub_ln1117_7_fu_889_p2 + zext_ln13_reg_1257);

assign add_ln1117_8_fu_986_p2 = (sub_ln1117_8_fu_980_p2 + zext_ln13_reg_1257);

assign add_ln1117_9_fu_1046_p2 = (sub_ln1117_9_fu_1040_p2 + zext_ln13_reg_1257);

assign add_ln1117_fu_390_p2 = (sub_ln1117_fu_384_p2 + zext_ln13_reg_1257);

assign add_ln13_1_fu_552_p2 = (j_0_0_reg_317 + 6'd3);

assign add_ln13_2_fu_643_p2 = (j_0_0_reg_317 + 6'd4);

assign add_ln13_3_fu_703_p2 = (j_0_0_reg_317 + 6'd5);

assign add_ln13_4_fu_794_p2 = (j_0_0_reg_317 + 6'd6);

assign add_ln13_5_fu_854_p2 = (j_0_0_reg_317 + 6'd7);

assign add_ln13_6_fu_945_p2 = (j_0_0_reg_317 + 6'd8);

assign add_ln13_7_fu_1005_p2 = (j_0_0_reg_317 + 6'd9);

assign add_ln13_8_fu_1056_p2 = (j_0_0_reg_317 + 6'd10);

assign add_ln13_fu_492_p2 = (j_0_0_reg_317 + 6'd2);

assign add_ln203_fu_1129_p2 = ($signed(sext_ln703_fu_1119_p1) + $signed(trunc_ln703_fu_1115_p1));

assign add_ln703_fu_1123_p2 = ($signed(p_Val2_0_reg_305) + $signed(sext_ln1265_fu_1111_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dense_2_bias_V_address0 = zext_ln14_reg_1251;

assign dense_2_out_V_address0 = zext_ln14_reg_1251;

assign dense_2_out_V_d0 = ((tmp_6_fu_1135_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1129_p2);

assign grp_fu_1152_p1 = grp_fu_1152_p10;

assign grp_fu_1152_p10 = dense_1_out_V_q0;

assign grp_fu_1152_p2 = {{p_Val2_0_reg_305}, {8'd0}};

assign grp_fu_1161_p1 = grp_fu_1161_p10;

assign grp_fu_1161_p10 = dense_1_out_V_q1;

assign grp_fu_1161_p2 = {{tmp_5_fu_475_p4}, {8'd0}};

assign grp_fu_1170_p1 = grp_fu_1170_p10;

assign grp_fu_1170_p10 = dense_1_out_V_q0;

assign grp_fu_1170_p2 = {{tmp_10_reg_1305}, {8'd0}};

assign grp_fu_1179_p1 = grp_fu_1179_p10;

assign grp_fu_1179_p10 = dense_1_out_V_q1;

assign grp_fu_1179_p2 = {{tmp_13_fu_626_p4}, {8'd0}};

assign grp_fu_1188_p1 = grp_fu_1188_p10;

assign grp_fu_1188_p10 = dense_1_out_V_q0;

assign grp_fu_1188_p2 = {{tmp_16_reg_1330}, {8'd0}};

assign grp_fu_1197_p1 = grp_fu_1197_p10;

assign grp_fu_1197_p10 = dense_1_out_V_q1;

assign grp_fu_1197_p2 = {{tmp_19_fu_777_p4}, {8'd0}};

assign grp_fu_1206_p1 = grp_fu_1206_p10;

assign grp_fu_1206_p10 = dense_1_out_V_q0;

assign grp_fu_1206_p2 = {{tmp_22_reg_1355}, {8'd0}};

assign grp_fu_1215_p1 = grp_fu_1215_p10;

assign grp_fu_1215_p10 = dense_1_out_V_q1;

assign grp_fu_1215_p2 = {{tmp_25_fu_928_p4}, {8'd0}};

assign grp_fu_1224_p1 = grp_fu_1224_p10;

assign grp_fu_1224_p10 = dense_1_out_V_q0;

assign grp_fu_1224_p2 = {{tmp_28_reg_1380}, {8'd0}};

assign grp_fu_1233_p1 = grp_fu_1233_p10;

assign grp_fu_1233_p10 = dense_1_out_V_q1;

assign grp_fu_1233_p2 = {{tmp_31_fu_1085_p4}, {8'd0}};

assign i_fu_335_p2 = (i_0_reg_294 + 5'd1);

assign icmp_ln13_fu_349_p2 = ((ap_phi_mux_j_0_0_phi_fu_321_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_329_p2 = ((i_0_reg_294 == 5'd30) ? 1'b1 : 1'b0);

assign or_ln13_fu_400_p2 = (ap_phi_mux_j_0_0_phi_fu_321_p4 | 6'd1);

assign sext_ln1117_1_fu_446_p1 = $signed(add_ln1117_1_fu_441_p2);

assign sext_ln1117_2_fu_538_p1 = $signed(add_ln1117_2_fu_533_p2);

assign sext_ln1117_3_fu_598_p1 = $signed(add_ln1117_3_fu_593_p2);

assign sext_ln1117_4_fu_689_p1 = $signed(add_ln1117_4_fu_684_p2);

assign sext_ln1117_5_fu_749_p1 = $signed(add_ln1117_5_fu_744_p2);

assign sext_ln1117_6_fu_840_p1 = $signed(add_ln1117_6_fu_835_p2);

assign sext_ln1117_7_fu_900_p1 = $signed(add_ln1117_7_fu_895_p2);

assign sext_ln1117_8_fu_991_p1 = $signed(add_ln1117_8_fu_986_p2);

assign sext_ln1117_9_fu_1051_p1 = $signed(add_ln1117_9_fu_1046_p2);

assign sext_ln1117_fu_395_p1 = $signed(add_ln1117_fu_390_p2);

assign sext_ln1265_fu_1111_p0 = dense_2_bias_V_q0;

assign sext_ln1265_fu_1111_p1 = sext_ln1265_fu_1111_p0;

assign sext_ln703_fu_1119_p0 = dense_2_bias_V_q0;

assign sext_ln703_fu_1119_p1 = sext_ln703_fu_1119_p0;

assign sub_ln1117_1_fu_435_p2 = (zext_ln1117_2_fu_419_p1 - zext_ln1117_3_fu_431_p1);

assign sub_ln1117_2_fu_527_p2 = (zext_ln1117_4_fu_511_p1 - zext_ln1117_5_fu_523_p1);

assign sub_ln1117_3_fu_587_p2 = (zext_ln1117_6_fu_571_p1 - zext_ln1117_7_fu_583_p1);

assign sub_ln1117_4_fu_678_p2 = (zext_ln1117_8_fu_662_p1 - zext_ln1117_9_fu_674_p1);

assign sub_ln1117_5_fu_738_p2 = (zext_ln1117_10_fu_722_p1 - zext_ln1117_11_fu_734_p1);

assign sub_ln1117_6_fu_829_p2 = (zext_ln1117_12_fu_813_p1 - zext_ln1117_13_fu_825_p1);

assign sub_ln1117_7_fu_889_p2 = (zext_ln1117_14_fu_873_p1 - zext_ln1117_15_fu_885_p1);

assign sub_ln1117_8_fu_980_p2 = (zext_ln1117_16_fu_964_p1 - zext_ln1117_17_fu_976_p1);

assign sub_ln1117_9_fu_1040_p2 = (zext_ln1117_18_fu_1024_p1 - zext_ln1117_19_fu_1036_p1);

assign sub_ln1117_fu_384_p2 = (zext_ln1117_fu_368_p1 - zext_ln1117_1_fu_380_p1);

assign tmp_11_fu_563_p3 = {{add_ln13_1_fu_552_p2}, {5'd0}};

assign tmp_12_fu_575_p3 = {{add_ln13_1_fu_552_p2}, {1'd0}};

assign tmp_13_fu_626_p4 = {{grp_fu_1170_p3[21:8]}};

assign tmp_14_fu_654_p3 = {{add_ln13_2_fu_643_p2}, {5'd0}};

assign tmp_15_fu_666_p3 = {{add_ln13_2_fu_643_p2}, {1'd0}};

assign tmp_17_fu_714_p3 = {{add_ln13_3_fu_703_p2}, {5'd0}};

assign tmp_18_fu_726_p3 = {{add_ln13_3_fu_703_p2}, {1'd0}};

assign tmp_19_fu_777_p4 = {{grp_fu_1188_p3[21:8]}};

assign tmp_20_fu_805_p3 = {{add_ln13_4_fu_794_p2}, {5'd0}};

assign tmp_21_fu_817_p3 = {{add_ln13_4_fu_794_p2}, {1'd0}};

assign tmp_23_fu_865_p3 = {{add_ln13_5_fu_854_p2}, {5'd0}};

assign tmp_24_fu_877_p3 = {{add_ln13_5_fu_854_p2}, {1'd0}};

assign tmp_25_fu_928_p4 = {{grp_fu_1206_p3[21:8]}};

assign tmp_26_fu_956_p3 = {{add_ln13_6_fu_945_p2}, {5'd0}};

assign tmp_27_fu_968_p3 = {{add_ln13_6_fu_945_p2}, {1'd0}};

assign tmp_29_fu_1016_p3 = {{add_ln13_7_fu_1005_p2}, {5'd0}};

assign tmp_2_fu_372_p3 = {{ap_phi_mux_j_0_0_phi_fu_321_p4}, {1'd0}};

assign tmp_30_fu_1028_p3 = {{add_ln13_7_fu_1005_p2}, {1'd0}};

assign tmp_31_fu_1085_p4 = {{grp_fu_1224_p3[21:8]}};

assign tmp_3_fu_411_p3 = {{or_ln13_fu_400_p2}, {5'd0}};

assign tmp_4_fu_423_p3 = {{or_ln13_fu_400_p2}, {1'd0}};

assign tmp_5_fu_475_p4 = {{grp_fu_1152_p3[21:8]}};

assign tmp_6_fu_1135_p3 = add_ln703_fu_1123_p2[32'd13];

assign tmp_7_fu_503_p3 = {{add_ln13_fu_492_p2}, {5'd0}};

assign tmp_8_fu_515_p3 = {{add_ln13_fu_492_p2}, {1'd0}};

assign tmp_s_fu_360_p3 = {{ap_phi_mux_j_0_0_phi_fu_321_p4}, {5'd0}};

assign trunc_ln703_fu_1115_p1 = p_Val2_0_reg_305[12:0];

assign zext_ln1117_10_fu_722_p1 = tmp_17_fu_714_p3;

assign zext_ln1117_11_fu_734_p1 = tmp_18_fu_726_p3;

assign zext_ln1117_12_fu_813_p1 = tmp_20_fu_805_p3;

assign zext_ln1117_13_fu_825_p1 = tmp_21_fu_817_p3;

assign zext_ln1117_14_fu_873_p1 = tmp_23_fu_865_p3;

assign zext_ln1117_15_fu_885_p1 = tmp_24_fu_877_p3;

assign zext_ln1117_16_fu_964_p1 = tmp_26_fu_956_p3;

assign zext_ln1117_17_fu_976_p1 = tmp_27_fu_968_p3;

assign zext_ln1117_18_fu_1024_p1 = tmp_29_fu_1016_p3;

assign zext_ln1117_19_fu_1036_p1 = tmp_30_fu_1028_p3;

assign zext_ln1117_1_fu_380_p1 = tmp_2_fu_372_p3;

assign zext_ln1117_2_fu_419_p1 = tmp_3_fu_411_p3;

assign zext_ln1117_3_fu_431_p1 = tmp_4_fu_423_p3;

assign zext_ln1117_4_fu_511_p1 = tmp_7_fu_503_p3;

assign zext_ln1117_5_fu_523_p1 = tmp_8_fu_515_p3;

assign zext_ln1117_6_fu_571_p1 = tmp_11_fu_563_p3;

assign zext_ln1117_7_fu_583_p1 = tmp_12_fu_575_p3;

assign zext_ln1117_8_fu_662_p1 = tmp_14_fu_654_p3;

assign zext_ln1117_9_fu_674_p1 = tmp_15_fu_666_p3;

assign zext_ln1117_fu_368_p1 = tmp_s_fu_360_p3;

assign zext_ln13_fu_345_p1 = i_0_reg_294;

assign zext_ln14_10_fu_1011_p1 = add_ln13_7_fu_1005_p2;

assign zext_ln14_1_fu_355_p1 = ap_phi_mux_j_0_0_phi_fu_321_p4;

assign zext_ln14_2_fu_406_p1 = or_ln13_fu_400_p2;

assign zext_ln14_3_fu_498_p1 = add_ln13_fu_492_p2;

assign zext_ln14_4_fu_558_p1 = add_ln13_1_fu_552_p2;

assign zext_ln14_5_fu_649_p1 = add_ln13_2_fu_643_p2;

assign zext_ln14_6_fu_709_p1 = add_ln13_3_fu_703_p2;

assign zext_ln14_7_fu_800_p1 = add_ln13_4_fu_794_p2;

assign zext_ln14_8_fu_860_p1 = add_ln13_5_fu_854_p2;

assign zext_ln14_9_fu_951_p1 = add_ln13_6_fu_945_p2;

assign zext_ln14_fu_341_p1 = i_0_reg_294;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1251[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1257[11:5] <= 7'b0000000;
end

endmodule //dense_2
