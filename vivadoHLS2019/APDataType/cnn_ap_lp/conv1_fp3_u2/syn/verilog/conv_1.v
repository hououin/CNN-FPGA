// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        input_V_address1,
        input_V_ce1,
        input_V_q1,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state12 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [9:0] input_V_address1;
output   input_V_ce1;
input  [13:0] input_V_q1;
output  [11:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_V_address0;
reg input_V_ce0;
reg[9:0] input_V_address1;
reg input_V_ce1;
reg[11:0] conv_out_V_address0;
reg conv_out_V_ce0;
reg conv_out_V_we0;
reg[13:0] conv_out_V_d0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] conv_1_weights_V_address0;
reg    conv_1_weights_V_ce0;
wire  signed [8:0] conv_1_weights_V_q0;
reg   [5:0] conv_1_weights_V_address1;
reg    conv_1_weights_V_ce1;
wire  signed [8:0] conv_1_weights_V_q1;
reg   [5:0] conv_1_weights_V_address2;
reg    conv_1_weights_V_ce2;
wire  signed [8:0] conv_1_weights_V_q2;
reg   [5:0] conv_1_weights_V_address3;
reg    conv_1_weights_V_ce3;
wire   [8:0] conv_1_weights_V_q3;
reg   [2:0] conv_1_bias_V_address0;
reg    conv_1_bias_V_ce0;
wire   [6:0] conv_1_bias_V_q0;
reg   [10:0] indvar_flatten30_reg_459;
reg   [4:0] r_0_reg_470;
reg   [6:0] indvar_flatten_reg_481;
reg   [4:0] c_0_reg_492;
reg   [2:0] f_0_0_reg_503;
reg  signed [8:0] reg_541;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_2674;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [8:0] reg_546;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg  signed [8:0] reg_551;
reg  signed [8:0] reg_555;
wire   [4:0] r_fu_559_p2;
reg   [4:0] r_reg_2669;
wire   [0:0] icmp_ln8_fu_577_p2;
reg   [0:0] icmp_ln8_reg_2674_pp0_iter1_reg;
wire   [10:0] add_ln8_fu_583_p2;
reg   [10:0] add_ln8_reg_2678;
wire   [0:0] icmp_ln11_fu_589_p2;
reg   [0:0] icmp_ln11_reg_2683;
wire   [4:0] select_ln32_1_fu_603_p3;
reg   [4:0] select_ln32_1_reg_2689;
wire   [10:0] sub_ln1117_fu_635_p2;
reg   [10:0] sub_ln1117_reg_2695;
wire   [4:0] add_ln23_fu_641_p2;
reg   [4:0] add_ln23_reg_2700;
wire   [4:0] add_ln32_fu_655_p2;
reg   [4:0] add_ln32_reg_2705;
wire   [2:0] select_ln32_6_fu_707_p3;
reg   [2:0] select_ln32_6_reg_2711;
reg   [2:0] select_ln32_6_reg_2711_pp0_iter1_reg;
wire   [4:0] select_ln32_7_fu_715_p3;
reg   [4:0] select_ln32_7_reg_2721;
wire   [10:0] zext_ln32_1_fu_723_p1;
reg   [10:0] zext_ln32_1_reg_2727;
wire   [10:0] zext_ln32_2_fu_752_p1;
reg   [10:0] zext_ln32_2_reg_2738;
wire   [4:0] select_ln32_9_fu_773_p3;
reg   [4:0] select_ln32_9_reg_2749;
wire   [6:0] add_ln11_fu_828_p2;
reg   [6:0] add_ln11_reg_2779;
wire   [10:0] sub_ln1117_1_fu_863_p2;
reg   [10:0] sub_ln1117_1_reg_2784;
wire   [10:0] zext_ln32_3_fu_879_p1;
reg   [10:0] zext_ln32_3_reg_2795;
wire  signed [23:0] sext_ln1118_fu_940_p1;
reg  signed [23:0] sext_ln1118_reg_2826;
wire  signed [23:0] sext_ln1118_2_fu_948_p1;
reg  signed [23:0] sext_ln1118_2_reg_2831;
reg   [13:0] tmp_13_reg_2836;
reg   [6:0] conv_1_bias_V_load_reg_2841;
wire   [2:0] or_ln14_fu_996_p2;
reg   [2:0] or_ln14_reg_2846;
reg   [2:0] or_ln14_reg_2846_pp0_iter1_reg;
wire   [63:0] zext_ln23_1_fu_1001_p1;
reg   [63:0] zext_ln23_1_reg_2856;
wire   [10:0] add_ln1117_3_fu_1040_p2;
reg   [10:0] add_ln1117_3_reg_2866;
wire   [9:0] grp_fu_2558_p3;
reg   [9:0] add_ln203_reg_2871;
reg   [9:0] add_ln203_reg_2871_pp0_iter1_reg;
wire   [10:0] add_ln1117_6_fu_1054_p2;
reg   [10:0] add_ln1117_6_reg_2882;
wire   [10:0] add_ln1117_9_fu_1068_p2;
reg   [10:0] add_ln1117_9_reg_2892;
wire  signed [23:0] sext_ln1118_4_fu_1085_p1;
reg  signed [23:0] sext_ln1118_4_reg_2902;
wire  signed [23:0] sext_ln1118_6_fu_1117_p1;
reg  signed [23:0] sext_ln1118_6_reg_2907;
reg   [13:0] tmp_15_reg_2912;
wire   [4:0] zext_ln1116_19_fu_1166_p1;
reg   [4:0] zext_ln1116_19_reg_2917;
reg   [6:0] conv_1_bias_V_load_1_reg_2937;
wire  signed [23:0] sext_ln1118_8_fu_1206_p1;
reg  signed [23:0] sext_ln1118_8_reg_2952;
wire  signed [23:0] sext_ln1118_10_fu_1238_p1;
reg  signed [23:0] sext_ln1118_10_reg_2957;
reg   [13:0] tmp_21_reg_2962;
wire   [5:0] zext_ln1116_18_fu_1287_p1;
reg   [5:0] zext_ln1116_18_reg_2967;
reg   [13:0] tmp_31_reg_2992;
wire  signed [23:0] sext_ln1118_12_fu_1390_p1;
reg  signed [23:0] sext_ln1118_12_reg_3002;
wire  signed [23:0] sext_ln1118_14_fu_1422_p1;
reg  signed [23:0] sext_ln1118_14_reg_3007;
reg   [13:0] tmp_23_reg_3012;
reg   [13:0] tmp_33_reg_3027;
wire   [2:0] add_ln14_fu_1566_p2;
reg   [2:0] add_ln14_reg_3032;
wire   [6:0] select_ln11_fu_1571_p3;
reg   [6:0] select_ln11_reg_3037;
wire  signed [23:0] sext_ln1118_16_fu_1581_p1;
reg  signed [23:0] sext_ln1118_16_reg_3042;
wire   [13:0] add_ln703_fu_1622_p2;
reg   [13:0] add_ln703_reg_3047;
wire   [0:0] icmp_ln885_fu_1628_p2;
reg   [0:0] icmp_ln885_reg_3054;
wire   [13:0] sub_ln889_fu_1634_p2;
reg   [13:0] sub_ln889_reg_3058;
reg   [13:0] tmp_36_reg_3063;
wire   [0:0] tmp_24_fu_1756_p3;
reg   [0:0] tmp_24_reg_3068;
reg   [62:0] lshr_ln_reg_3073;
reg   [0:0] tmp_27_reg_3078;
wire   [10:0] trunc_ln893_fu_1995_p1;
reg   [10:0] trunc_ln893_reg_3083;
reg   [51:0] trunc_ln7_reg_3088;
wire   [13:0] add_ln703_1_fu_2089_p2;
reg   [13:0] add_ln703_1_reg_3093;
wire   [0:0] icmp_ln885_1_fu_2095_p2;
reg   [0:0] icmp_ln885_1_reg_3100;
wire   [13:0] sub_ln889_1_fu_2101_p2;
reg   [13:0] sub_ln889_1_reg_3104;
wire   [63:0] bitcast_ln729_fu_2147_p1;
wire   [0:0] icmp_ln924_fu_2152_p2;
reg   [0:0] icmp_ln924_reg_3114;
wire   [0:0] icmp_ln924_2_fu_2158_p2;
reg   [0:0] icmp_ln924_2_reg_3119;
wire   [0:0] tmp_38_fu_2163_p3;
reg   [0:0] tmp_38_reg_3124;
reg   [62:0] lshr_ln912_1_reg_3129;
reg   [0:0] tmp_41_reg_3134;
wire   [10:0] trunc_ln893_1_fu_2402_p1;
reg   [10:0] trunc_ln893_1_reg_3139;
reg   [51:0] trunc_ln924_1_reg_3144;
wire   [0:0] and_ln924_fu_2458_p2;
reg   [11:0] conv_out_V_addr_1_reg_3153;
wire   [63:0] bitcast_ln729_1_fu_2518_p1;
wire   [0:0] icmp_ln924_3_fu_2523_p2;
reg   [0:0] icmp_ln924_3_reg_3163;
wire   [0:0] icmp_ln924_4_fu_2529_p2;
reg   [0:0] icmp_ln924_4_reg_3168;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
reg   [10:0] ap_phi_mux_indvar_flatten30_phi_fu_463_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_474_p4;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_485_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_496_p4;
reg   [2:0] ap_phi_mux_f_0_0_phi_fu_507_p4;
reg   [13:0] ap_phi_mux_storemerge_phi_fu_517_p4;
wire   [13:0] ap_phi_reg_pp0_iter1_storemerge_reg_514;
wire    ap_block_pp0_stage3;
reg   [13:0] ap_phi_mux_storemerge1_phi_fu_528_p4;
wire   [13:0] ap_phi_reg_pp0_iter1_storemerge1_reg_525;
wire   [0:0] and_ln924_1_fu_2538_p2;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln1117_10_fu_733_p1;
wire   [63:0] zext_ln1117_12_fu_762_p1;
wire   [63:0] zext_ln23_fu_781_p1;
wire   [63:0] zext_ln1116_11_fu_801_p1;
wire   [63:0] zext_ln1116_12_fu_812_p1;
wire   [63:0] zext_ln1116_13_fu_823_p1;
wire   [63:0] zext_ln1117_11_fu_874_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1117_14_fu_887_p1;
wire   [63:0] tmp_10_fu_895_p3;
wire   [63:0] zext_ln1116_14_fu_909_p1;
wire   [63:0] zext_ln1116_15_fu_920_p1;
wire   [63:0] zext_ln1116_16_fu_931_p1;
wire   [63:0] zext_ln1117_13_fu_1049_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1117_15_fu_1063_p1;
wire   [63:0] tmp_11_fu_1073_p3;
wire   [63:0] zext_ln1116_21_fu_1178_p1;
wire   [63:0] zext_ln1116_22_fu_1189_p1;
wire  signed [63:0] sext_ln1117_fu_1194_p1;
wire  signed [63:0] sext_ln1117_1_fu_1198_p1;
wire   [63:0] zext_ln1116_23_fu_1295_p1;
wire   [63:0] tmp_28_fu_1300_p3;
wire   [63:0] zext_ln1116_24_fu_1314_p1;
wire   [63:0] zext_ln1116_25_fu_1325_p1;
wire   [63:0] zext_ln1117_16_fu_1382_p1;
wire   [63:0] zext_ln1116_26_fu_1476_p1;
wire   [63:0] tmp_29_fu_1481_p3;
wire   [63:0] zext_ln203_14_fu_2449_p1;
wire   [63:0] zext_ln203_15_fu_2473_p1;
reg   [63:0] grp_fu_536_p0;
wire   [9:0] tmp_fu_611_p3;
wire   [6:0] tmp_16_fu_623_p3;
wire   [10:0] zext_ln1117_fu_619_p1;
wire   [10:0] zext_ln1117_5_fu_631_p1;
wire   [4:0] select_ln32_3_fu_647_p3;
wire   [4:0] c_fu_565_p2;
wire   [4:0] add_ln23_1_fu_571_p2;
wire   [0:0] icmp_ln14_fu_683_p2;
wire   [0:0] xor_ln32_fu_677_p2;
wire   [4:0] select_ln32_fu_595_p3;
wire   [0:0] and_ln32_fu_689_p2;
wire   [0:0] or_ln32_fu_701_p2;
wire   [4:0] add_ln23_3_fu_695_p2;
wire   [10:0] add_ln1117_fu_727_p2;
wire   [4:0] add_ln23_4_fu_738_p2;
wire   [4:0] select_ln32_4_fu_661_p3;
wire   [4:0] select_ln32_8_fu_744_p3;
wire   [10:0] add_ln1117_4_fu_756_p2;
wire   [4:0] add_ln23_5_fu_767_p2;
wire   [4:0] select_ln32_5_fu_669_p3;
wire   [3:0] zext_ln1116_10_fu_791_p1;
wire   [3:0] add_ln1116_fu_795_p2;
wire   [4:0] zext_ln1116_9_fu_787_p1;
wire   [4:0] add_ln1116_4_fu_806_p2;
wire   [4:0] add_ln1116_5_fu_817_p2;
wire   [4:0] select_ln32_2_fu_834_p3;
wire   [9:0] tmp_17_fu_839_p3;
wire   [6:0] tmp_18_fu_851_p3;
wire   [10:0] zext_ln1117_6_fu_847_p1;
wire   [10:0] zext_ln1117_7_fu_859_p1;
wire   [10:0] add_ln1117_2_fu_869_p2;
wire   [10:0] add_ln1117_7_fu_882_p2;
wire   [5:0] zext_ln1116_8_fu_892_p1;
wire   [5:0] add_ln1116_6_fu_903_p2;
wire   [5:0] add_ln1116_7_fu_914_p2;
wire   [5:0] add_ln1116_8_fu_925_p2;
wire  signed [23:0] mul_ln1118_1_fu_2551_p2;
wire  signed [23:0] mul_ln1118_fu_2544_p2;
wire   [13:0] tmp_12_fu_955_p4;
wire   [21:0] shl_ln_fu_964_p3;
wire  signed [27:0] sext_ln1118_3_fu_952_p1;
wire   [28:0] zext_ln728_fu_972_p1;
wire   [28:0] zext_ln703_fu_976_p1;
wire   [28:0] add_ln1192_fu_980_p2;
wire   [9:0] tmp_s_fu_1009_p3;
wire   [6:0] tmp_8_fu_1020_p3;
wire   [10:0] zext_ln1117_8_fu_1016_p1;
wire   [10:0] zext_ln1117_9_fu_1027_p1;
wire   [10:0] sub_ln1117_2_fu_1031_p2;
wire   [10:0] add_ln1117_5_fu_1045_p2;
wire   [10:0] add_ln1117_8_fu_1059_p2;
wire  signed [23:0] mul_ln1118_2_fu_2566_p2;
wire   [21:0] shl_ln728_1_fu_1092_p3;
wire  signed [27:0] sext_ln1118_5_fu_1089_p1;
wire   [28:0] zext_ln728_1_fu_1099_p1;
wire   [28:0] zext_ln703_2_fu_1103_p1;
wire  signed [23:0] mul_ln1118_3_fu_2573_p2;
wire   [28:0] add_ln1192_1_fu_1107_p2;
wire   [13:0] tmp_14_fu_1124_p4;
wire   [21:0] shl_ln728_2_fu_1134_p3;
wire  signed [27:0] sext_ln1118_7_fu_1121_p1;
wire   [28:0] zext_ln728_2_fu_1142_p1;
wire   [28:0] zext_ln703_3_fu_1146_p1;
wire   [28:0] add_ln1192_2_fu_1150_p2;
wire   [3:0] zext_ln1116_20_fu_1169_p1;
wire   [3:0] add_ln1116_9_fu_1172_p2;
wire   [4:0] add_ln1116_10_fu_1183_p2;
wire  signed [23:0] mul_ln1118_4_fu_2580_p2;
wire   [21:0] shl_ln728_3_fu_1213_p3;
wire  signed [27:0] sext_ln1118_9_fu_1210_p1;
wire   [28:0] zext_ln728_3_fu_1220_p1;
wire   [28:0] zext_ln703_4_fu_1224_p1;
wire  signed [23:0] mul_ln1118_5_fu_2587_p2;
wire   [28:0] add_ln1192_3_fu_1228_p2;
wire   [13:0] tmp_20_fu_1245_p4;
wire   [21:0] shl_ln728_4_fu_1255_p3;
wire  signed [27:0] sext_ln1118_11_fu_1242_p1;
wire   [28:0] zext_ln728_4_fu_1263_p1;
wire   [28:0] zext_ln703_5_fu_1267_p1;
wire   [28:0] add_ln1192_4_fu_1271_p2;
wire   [4:0] add_ln1116_11_fu_1290_p2;
wire   [5:0] add_ln1116_12_fu_1308_p2;
wire   [5:0] add_ln1116_13_fu_1319_p2;
wire  signed [23:0] mul_ln1118_10_fu_2600_p2;
wire  signed [23:0] mul_ln1118_9_fu_2594_p2;
wire   [13:0] tmp_30_fu_1341_p4;
wire   [21:0] shl_ln728_8_fu_1350_p3;
wire  signed [27:0] sext_ln1118_20_fu_1338_p1;
wire   [28:0] zext_ln728_8_fu_1358_p1;
wire   [28:0] zext_ln703_9_fu_1362_p1;
wire   [28:0] add_ln1192_8_fu_1366_p2;
wire  signed [23:0] mul_ln1118_6_fu_2606_p2;
wire   [21:0] shl_ln728_5_fu_1397_p3;
wire  signed [27:0] sext_ln1118_13_fu_1394_p1;
wire   [28:0] zext_ln728_5_fu_1404_p1;
wire   [28:0] zext_ln703_6_fu_1408_p1;
wire  signed [23:0] mul_ln1118_7_fu_2613_p2;
wire   [28:0] add_ln1192_5_fu_1412_p2;
wire   [13:0] tmp_22_fu_1429_p4;
wire   [21:0] shl_ln728_6_fu_1439_p3;
wire  signed [27:0] sext_ln1118_15_fu_1426_p1;
wire   [28:0] zext_ln728_6_fu_1447_p1;
wire   [28:0] zext_ln703_7_fu_1451_p1;
wire   [28:0] add_ln1192_6_fu_1455_p2;
wire   [5:0] add_ln1116_14_fu_1471_p2;
wire  signed [23:0] mul_ln1118_11_fu_2620_p2;
wire   [21:0] shl_ln728_9_fu_1496_p3;
wire  signed [27:0] sext_ln1118_22_fu_1493_p1;
wire   [28:0] zext_ln728_9_fu_1503_p1;
wire   [28:0] zext_ln703_10_fu_1507_p1;
wire  signed [23:0] mul_ln1118_12_fu_2626_p2;
wire   [28:0] add_ln1192_9_fu_1511_p2;
wire   [13:0] tmp_32_fu_1524_p4;
wire   [21:0] shl_ln728_s_fu_1534_p3;
wire  signed [27:0] sext_ln1118_24_fu_1521_p1;
wire   [28:0] zext_ln728_10_fu_1542_p1;
wire   [28:0] zext_ln703_11_fu_1546_p1;
wire   [28:0] add_ln1192_10_fu_1550_p2;
wire  signed [23:0] mul_ln1118_8_fu_2632_p2;
wire   [21:0] shl_ln728_7_fu_1588_p3;
wire  signed [27:0] sext_ln1118_17_fu_1585_p1;
wire   [28:0] zext_ln728_7_fu_1595_p1;
wire   [28:0] zext_ln703_8_fu_1599_p1;
wire   [28:0] add_ln1192_7_fu_1603_p2;
wire  signed [13:0] sext_ln1265_fu_1619_p1;
wire   [13:0] trunc_ln708_8_fu_1609_p4;
wire  signed [23:0] mul_ln1118_13_fu_2639_p2;
wire   [21:0] shl_ln728_10_fu_1647_p3;
wire  signed [27:0] sext_ln1118_26_fu_1644_p1;
wire   [28:0] zext_ln728_11_fu_1654_p1;
wire   [28:0] zext_ln703_12_fu_1658_p1;
wire  signed [23:0] mul_ln1118_14_fu_2645_p2;
wire   [28:0] add_ln1192_11_fu_1662_p2;
wire   [13:0] tmp_34_fu_1675_p4;
wire   [21:0] shl_ln728_11_fu_1685_p3;
wire  signed [27:0] sext_ln1118_28_fu_1672_p1;
wire   [28:0] zext_ln728_12_fu_1693_p1;
wire   [28:0] zext_ln703_13_fu_1697_p1;
wire  signed [23:0] mul_ln1118_15_fu_2651_p2;
wire   [28:0] add_ln1192_12_fu_1701_p2;
wire   [13:0] tmp_35_fu_1714_p4;
wire   [21:0] shl_ln728_12_fu_1724_p3;
wire  signed [27:0] sext_ln1118_30_fu_1711_p1;
wire   [28:0] zext_ln728_13_fu_1732_p1;
wire   [28:0] zext_ln703_14_fu_1736_p1;
wire   [28:0] add_ln1192_13_fu_1740_p2;
wire   [13:0] select_ln888_fu_1763_p3;
reg   [13:0] p_Result_s_fu_1769_p4;
wire   [31:0] p_Result_s_71_fu_1779_p3;
reg   [31:0] l_fu_1787_p3;
wire   [31:0] sub_ln894_fu_1795_p2;
wire   [31:0] add_ln894_fu_1805_p2;
wire   [30:0] tmp_25_fu_1811_p4;
wire   [3:0] trunc_ln897_fu_1827_p1;
wire   [3:0] sub_ln897_fu_1831_p2;
wire   [13:0] zext_ln897_fu_1837_p1;
wire   [13:0] lshr_ln897_fu_1841_p2;
wire   [13:0] and_ln897_2_fu_1847_p2;
wire   [0:0] icmp_ln897_fu_1821_p2;
wire   [0:0] icmp_ln897_2_fu_1853_p2;
wire   [0:0] tmp_26_fu_1865_p3;
wire   [13:0] trunc_ln894_fu_1801_p1;
wire   [13:0] add_ln899_fu_1879_p2;
wire   [0:0] p_Result_12_fu_1885_p3;
wire   [0:0] xor_ln899_fu_1873_p2;
wire   [0:0] and_ln899_fu_1893_p2;
wire   [0:0] and_ln897_fu_1859_p2;
wire   [0:0] or_ln899_fu_1899_p2;
wire   [31:0] zext_ln908_fu_1917_p1;
wire   [31:0] add_ln908_fu_1927_p2;
wire   [31:0] lshr_ln908_fu_1933_p2;
wire   [31:0] sub_ln908_fu_1943_p2;
wire   [63:0] zext_ln907_fu_1913_p1;
wire   [63:0] zext_ln908_2_fu_1949_p1;
wire   [0:0] icmp_ln908_fu_1921_p2;
wire   [63:0] zext_ln908_4_fu_1939_p1;
wire   [63:0] shl_ln908_fu_1953_p2;
wire   [31:0] or_ln_fu_1905_p3;
wire   [63:0] zext_ln911_fu_1967_p1;
wire   [63:0] select_ln908_fu_1959_p3;
wire   [63:0] add_ln911_fu_1971_p2;
wire  signed [23:0] mul_ln1118_16_fu_2657_p2;
wire   [21:0] shl_ln728_13_fu_2016_p3;
wire  signed [27:0] sext_ln1118_32_fu_2013_p1;
wire   [28:0] zext_ln728_14_fu_2023_p1;
wire   [28:0] zext_ln703_15_fu_2027_p1;
wire  signed [23:0] mul_ln1118_17_fu_2663_p2;
wire   [28:0] add_ln1192_14_fu_2031_p2;
wire   [13:0] tmp_37_fu_2044_p4;
wire   [21:0] shl_ln728_14_fu_2054_p3;
wire  signed [27:0] sext_ln1118_34_fu_2041_p1;
wire   [28:0] zext_ln728_15_fu_2062_p1;
wire   [28:0] zext_ln703_16_fu_2066_p1;
wire   [28:0] add_ln1192_15_fu_2070_p2;
wire  signed [13:0] sext_ln1265_1_fu_2086_p1;
wire   [13:0] trunc_ln708_s_fu_2076_p4;
wire   [10:0] sub_ln915_fu_2117_p2;
wire   [10:0] select_ln915_fu_2110_p3;
wire   [10:0] add_ln915_fu_2122_p2;
wire   [63:0] zext_ln912_fu_2107_p1;
wire   [11:0] tmp_7_fu_2128_p3;
wire   [63:0] p_Result_13_fu_2135_p5;
wire   [13:0] select_ln888_1_fu_2170_p3;
reg   [13:0] p_Result_1_fu_2176_p4;
wire   [31:0] p_Result_62_1_fu_2186_p3;
reg   [31:0] l_1_fu_2194_p3;
wire   [31:0] sub_ln894_1_fu_2202_p2;
wire   [31:0] add_ln894_1_fu_2212_p2;
wire   [30:0] tmp_39_fu_2218_p4;
wire   [3:0] trunc_ln897_1_fu_2234_p1;
wire   [3:0] sub_ln897_1_fu_2238_p2;
wire   [13:0] zext_ln897_1_fu_2244_p1;
wire   [13:0] lshr_ln897_1_fu_2248_p2;
wire   [13:0] and_ln897_3_fu_2254_p2;
wire   [0:0] icmp_ln897_4_fu_2228_p2;
wire   [0:0] icmp_ln897_3_fu_2260_p2;
wire   [0:0] tmp_40_fu_2272_p3;
wire   [13:0] trunc_ln894_1_fu_2208_p1;
wire   [13:0] add_ln899_1_fu_2286_p2;
wire   [0:0] p_Result_57_1_fu_2292_p3;
wire   [0:0] xor_ln899_1_fu_2280_p2;
wire   [0:0] and_ln899_1_fu_2300_p2;
wire   [0:0] and_ln897_1_fu_2266_p2;
wire   [0:0] or_ln899_2_fu_2306_p2;
wire   [31:0] zext_ln908_5_fu_2324_p1;
wire   [31:0] add_ln908_1_fu_2334_p2;
wire   [31:0] lshr_ln908_1_fu_2340_p2;
wire   [31:0] sub_ln908_1_fu_2350_p2;
wire   [63:0] zext_ln907_1_fu_2320_p1;
wire   [63:0] zext_ln908_3_fu_2356_p1;
wire   [0:0] icmp_ln908_1_fu_2328_p2;
wire   [63:0] zext_ln908_6_fu_2346_p1;
wire   [63:0] shl_ln908_1_fu_2360_p2;
wire   [31:0] or_ln899_1_fu_2312_p3;
wire   [63:0] zext_ln911_1_fu_2374_p1;
wire   [63:0] select_ln908_1_fu_2366_p3;
wire   [63:0] add_ln911_1_fu_2378_p2;
wire   [10:0] tmp_19_fu_2423_p3;
wire   [12:0] p_shl_cast_fu_2416_p3;
wire   [12:0] zext_ln203_13_fu_2430_p1;
wire   [12:0] zext_ln1116_fu_2440_p1;
wire   [12:0] sub_ln203_fu_2434_p2;
wire   [12:0] add_ln203_7_fu_2443_p2;
wire   [0:0] or_ln924_fu_2454_p2;
wire   [0:0] grp_fu_536_p2;
wire   [12:0] zext_ln1116_17_fu_2464_p1;
wire   [12:0] add_ln203_8_fu_2467_p2;
wire   [10:0] sub_ln915_1_fu_2488_p2;
wire   [10:0] select_ln915_1_fu_2481_p3;
wire   [10:0] add_ln915_1_fu_2493_p2;
wire   [63:0] zext_ln912_1_fu_2478_p1;
wire   [11:0] tmp_9_fu_2499_p3;
wire   [63:0] p_Result_64_1_fu_2506_p5;
wire   [0:0] or_ln924_1_fu_2534_p2;
wire   [4:0] grp_fu_2558_p0;
wire   [5:0] grp_fu_2558_p1;
wire   [4:0] grp_fu_2558_p2;
wire  signed [13:0] mul_ln1118_9_fu_2594_p1;
wire  signed [13:0] mul_ln1118_10_fu_2600_p1;
wire  signed [13:0] mul_ln1118_11_fu_2620_p1;
wire  signed [13:0] mul_ln1118_12_fu_2626_p1;
wire  signed [13:0] mul_ln1118_13_fu_2639_p1;
wire  signed [13:0] mul_ln1118_14_fu_2645_p1;
wire  signed [13:0] mul_ln1118_15_fu_2651_p1;
wire  signed [13:0] mul_ln1118_16_fu_2657_p1;
wire  signed [13:0] mul_ln1118_17_fu_2663_p1;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_CS_fsm_state12;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_2558_p00;
wire   [9:0] grp_fu_2558_p20;
reg    ap_condition_456;
reg    ap_condition_464;
reg    ap_condition_461;
reg    ap_condition_436;
reg    ap_condition_444;
reg    ap_condition_441;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 9 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
conv_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_address0),
    .ce0(conv_1_weights_V_ce0),
    .q0(conv_1_weights_V_q0),
    .address1(conv_1_weights_V_address1),
    .ce1(conv_1_weights_V_ce1),
    .q1(conv_1_weights_V_q1),
    .address2(conv_1_weights_V_address2),
    .ce2(conv_1_weights_V_ce2),
    .q2(conv_1_weights_V_q2),
    .address3(conv_1_weights_V_address3),
    .ce3(conv_1_weights_V_ce3),
    .q3(conv_1_weights_V_q3)
);

conv_1_conv_1_biacud #(
    .DataWidth( 7 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_V_address0),
    .ce0(conv_1_bias_V_ce0),
    .q0(conv_1_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_536_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_536_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U2(
    .din0(conv_1_weights_V_q0),
    .din1(input_V_q0),
    .dout(mul_ln1118_fu_2544_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U3(
    .din0(conv_1_weights_V_q1),
    .din1(input_V_q1),
    .dout(mul_ln1118_1_fu_2551_p2)
);

cnn_mac_muladd_5nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_5nfYi_U4(
    .din0(grp_fu_2558_p0),
    .din1(grp_fu_2558_p1),
    .din2(grp_fu_2558_p2),
    .dout(grp_fu_2558_p3)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U5(
    .din0(reg_541),
    .din1(input_V_q0),
    .dout(mul_ln1118_2_fu_2566_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U6(
    .din0(reg_546),
    .din1(input_V_q1),
    .dout(mul_ln1118_3_fu_2573_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U7(
    .din0(reg_541),
    .din1(input_V_q0),
    .dout(mul_ln1118_4_fu_2580_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U8(
    .din0(reg_546),
    .din1(input_V_q1),
    .dout(mul_ln1118_5_fu_2587_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U9(
    .din0(conv_1_weights_V_q1),
    .din1(mul_ln1118_9_fu_2594_p1),
    .dout(mul_ln1118_9_fu_2594_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U10(
    .din0(conv_1_weights_V_q2),
    .din1(mul_ln1118_10_fu_2600_p1),
    .dout(mul_ln1118_10_fu_2600_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U11(
    .din0(reg_551),
    .din1(input_V_q0),
    .dout(mul_ln1118_6_fu_2606_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U12(
    .din0(reg_555),
    .din1(input_V_q1),
    .dout(mul_ln1118_7_fu_2613_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U13(
    .din0(reg_546),
    .din1(mul_ln1118_11_fu_2620_p1),
    .dout(mul_ln1118_11_fu_2620_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U14(
    .din0(conv_1_weights_V_q0),
    .din1(mul_ln1118_12_fu_2626_p1),
    .dout(mul_ln1118_12_fu_2626_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U15(
    .din0(reg_541),
    .din1(input_V_q0),
    .dout(mul_ln1118_8_fu_2632_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U16(
    .din0(reg_546),
    .din1(mul_ln1118_13_fu_2639_p1),
    .dout(mul_ln1118_13_fu_2639_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U17(
    .din0(reg_551),
    .din1(mul_ln1118_14_fu_2645_p1),
    .dout(mul_ln1118_14_fu_2645_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U18(
    .din0(reg_555),
    .din1(mul_ln1118_15_fu_2651_p1),
    .dout(mul_ln1118_15_fu_2651_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U19(
    .din0(reg_541),
    .din1(mul_ln1118_16_fu_2657_p1),
    .dout(mul_ln1118_16_fu_2657_p2)
);

cnn_mul_mul_9s_14eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14eOg_U20(
    .din0(reg_546),
    .din1(mul_ln1118_17_fu_2663_p1),
    .dout(mul_ln1118_17_fu_2663_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_0_reg_492 <= select_ln32_7_reg_2721;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_492 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_0_0_reg_503 <= add_ln14_reg_3032;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_0_reg_503 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten30_reg_459 <= add_ln8_reg_2678;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_459 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_481 <= select_ln11_reg_3037;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_481 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_0_reg_470 <= select_ln32_1_reg_2689;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_470 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_541 <= conv_1_weights_V_q0;
    end else if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reg_541 <= conv_1_weights_V_q2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_546 <= conv_1_weights_V_q1;
    end else if ((((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_546 <= conv_1_weights_V_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln1117_3_reg_2866 <= add_ln1117_3_fu_1040_p2;
        add_ln1117_6_reg_2882 <= add_ln1117_6_fu_1054_p2;
        add_ln1117_9_reg_2892 <= add_ln1117_9_fu_1068_p2;
        sext_ln1118_4_reg_2902 <= sext_ln1118_4_fu_1085_p1;
        sext_ln1118_6_reg_2907 <= sext_ln1118_6_fu_1117_p1;
        tmp_15_reg_2912 <= {{add_ln1192_2_fu_1150_p2[21:8]}};
        zext_ln1116_19_reg_2917[2 : 1] <= zext_ln1116_19_fu_1166_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_577_p2 == 1'd0))) begin
        add_ln11_reg_2779 <= add_ln11_fu_828_p2;
        add_ln23_reg_2700 <= add_ln23_fu_641_p2;
        add_ln32_reg_2705 <= add_ln32_fu_655_p2;
        icmp_ln11_reg_2683 <= icmp_ln11_fu_589_p2;
        select_ln32_6_reg_2711 <= select_ln32_6_fu_707_p3;
        select_ln32_9_reg_2749 <= select_ln32_9_fu_773_p3;
        sub_ln1117_reg_2695[10 : 2] <= sub_ln1117_fu_635_p2[10 : 2];
        zext_ln32_1_reg_2727[4 : 0] <= zext_ln32_1_fu_723_p1[4 : 0];
        zext_ln32_2_reg_2738[4 : 0] <= zext_ln32_2_fu_752_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln14_reg_3032 <= add_ln14_fu_1566_p2;
        select_ln11_reg_3037 <= select_ln11_fu_1571_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln203_reg_2871 <= grp_fu_2558_p3;
        conv_1_bias_V_load_1_reg_2937 <= conv_1_bias_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln203_reg_2871_pp0_iter1_reg <= add_ln203_reg_2871;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        add_ln703_1_reg_3093 <= add_ln703_1_fu_2089_p2;
        icmp_ln885_1_reg_3100 <= icmp_ln885_1_fu_2095_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_reg_3047 <= add_ln703_fu_1622_p2;
        icmp_ln885_reg_3054 <= icmp_ln885_fu_1628_p2;
        sext_ln1118_16_reg_3042 <= sext_ln1118_16_fu_1581_p1;
        tmp_36_reg_3063 <= {{add_ln1192_13_fu_1740_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_2678 <= add_ln8_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_1_bias_V_load_reg_2841 <= conv_1_bias_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        conv_out_V_addr_1_reg_3153[11 : 1] <= zext_ln203_15_fu_2473_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln8_reg_2674 <= icmp_ln8_fu_577_p2;
        icmp_ln8_reg_2674_pp0_iter1_reg <= icmp_ln8_reg_2674;
        r_reg_2669 <= r_fu_559_p2;
        select_ln32_6_reg_2711_pp0_iter1_reg <= select_ln32_6_reg_2711;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln885_reg_3054 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        icmp_ln924_2_reg_3119 <= icmp_ln924_2_fu_2158_p2;
        icmp_ln924_reg_3114 <= icmp_ln924_fu_2152_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln885_1_reg_3100 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        icmp_ln924_3_reg_3163 <= icmp_ln924_3_fu_2523_p2;
        icmp_ln924_4_reg_3168 <= icmp_ln924_4_fu_2529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln885_1_reg_3100 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        lshr_ln912_1_reg_3129 <= {{add_ln911_1_fu_2378_p2[63:1]}};
        tmp_38_reg_3124 <= add_ln703_1_reg_3093[32'd13];
        tmp_41_reg_3134 <= add_ln911_1_fu_2378_p2[32'd54];
        trunc_ln893_1_reg_3139 <= trunc_ln893_1_fu_2402_p1;
        trunc_ln924_1_reg_3144 <= {{add_ln911_1_fu_2378_p2[52:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln885_reg_3054 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        lshr_ln_reg_3073 <= {{add_ln911_fu_1971_p2[63:1]}};
        tmp_24_reg_3068 <= add_ln703_reg_3047[32'd13];
        tmp_27_reg_3078 <= add_ln911_fu_1971_p2[32'd54];
        trunc_ln7_reg_3088 <= {{add_ln911_fu_1971_p2[52:1]}};
        trunc_ln893_reg_3083 <= trunc_ln893_fu_1995_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln14_reg_2846[2 : 1] <= or_ln14_fu_996_p2[2 : 1];
        sext_ln1118_2_reg_2831 <= sext_ln1118_2_fu_948_p1;
        sext_ln1118_reg_2826 <= sext_ln1118_fu_940_p1;
        sub_ln1117_1_reg_2784[10 : 2] <= sub_ln1117_1_fu_863_p2[10 : 2];
        tmp_13_reg_2836 <= {{add_ln1192_fu_980_p2[21:8]}};
        zext_ln23_1_reg_2856[2 : 1] <= zext_ln23_1_fu_1001_p1[2 : 1];
        zext_ln32_3_reg_2795[4 : 0] <= zext_ln32_3_fu_879_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln14_reg_2846_pp0_iter1_reg[2 : 1] <= or_ln14_reg_2846[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln8_reg_2674 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_551 <= conv_1_weights_V_q2;
        reg_555 <= conv_1_weights_V_q3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_577_p2 == 1'd0))) begin
        select_ln32_1_reg_2689 <= select_ln32_1_fu_603_p3;
        select_ln32_7_reg_2721 <= select_ln32_7_fu_715_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sext_ln1118_10_reg_2957 <= sext_ln1118_10_fu_1238_p1;
        sext_ln1118_8_reg_2952 <= sext_ln1118_8_fu_1206_p1;
        tmp_21_reg_2962 <= {{add_ln1192_4_fu_1271_p2[21:8]}};
        tmp_31_reg_2992 <= {{add_ln1192_8_fu_1366_p2[21:8]}};
        zext_ln1116_18_reg_2967[2 : 1] <= zext_ln1116_18_fu_1287_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        sext_ln1118_12_reg_3002 <= sext_ln1118_12_fu_1390_p1;
        sext_ln1118_14_reg_3007 <= sext_ln1118_14_fu_1422_p1;
        tmp_23_reg_3012 <= {{add_ln1192_6_fu_1455_p2[21:8]}};
        tmp_33_reg_3027 <= {{add_ln1192_10_fu_1550_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln885_1_fu_2095_p2 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0))) begin
        sub_ln889_1_reg_3104 <= sub_ln889_1_fu_2101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln885_fu_1628_p2 == 1'd0))) begin
        sub_ln889_reg_3058 <= sub_ln889_fu_1634_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_577_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_496_p4 = select_ln32_7_reg_2721;
    end else begin
        ap_phi_mux_c_0_phi_fu_496_p4 = c_0_reg_492;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_f_0_0_phi_fu_507_p4 = add_ln14_reg_3032;
    end else begin
        ap_phi_mux_f_0_0_phi_fu_507_p4 = f_0_0_reg_503;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_463_p4 = add_ln8_reg_2678;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_463_p4 = indvar_flatten30_reg_459;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_485_p4 = select_ln11_reg_3037;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_485_p4 = indvar_flatten_reg_481;
    end
end

always @ (*) begin
    if (((icmp_ln8_reg_2674 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_474_p4 = select_ln32_1_reg_2689;
    end else begin
        ap_phi_mux_r_0_phi_fu_474_p4 = r_0_reg_470;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_461)) begin
        if ((1'b1 == ap_condition_464)) begin
            ap_phi_mux_storemerge1_phi_fu_528_p4 = add_ln703_1_reg_3093;
        end else if ((1'b1 == ap_condition_456)) begin
            ap_phi_mux_storemerge1_phi_fu_528_p4 = 14'd0;
        end else begin
            ap_phi_mux_storemerge1_phi_fu_528_p4 = ap_phi_reg_pp0_iter1_storemerge1_reg_525;
        end
    end else begin
        ap_phi_mux_storemerge1_phi_fu_528_p4 = ap_phi_reg_pp0_iter1_storemerge1_reg_525;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_441)) begin
        if ((1'b1 == ap_condition_444)) begin
            ap_phi_mux_storemerge_phi_fu_517_p4 = add_ln703_reg_3047;
        end else if ((1'b1 == ap_condition_436)) begin
            ap_phi_mux_storemerge_phi_fu_517_p4 = 14'd0;
        end else begin
            ap_phi_mux_storemerge_phi_fu_517_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_514;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_517_p4 = ap_phi_reg_pp0_iter1_storemerge_reg_514;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_bias_V_address0 = zext_ln23_1_fu_1001_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_bias_V_address0 = zext_ln23_fu_781_p1;
        end else begin
            conv_1_bias_V_address0 = 'bx;
        end
    end else begin
        conv_1_bias_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_bias_V_ce0 = 1'b1;
    end else begin
        conv_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_1_weights_V_address0 = zext_ln1116_26_fu_1476_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_V_address0 = zext_ln1116_23_fu_1295_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_V_address0 = tmp_11_fu_1073_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_V_address0 = tmp_10_fu_895_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_V_address0 = zext_ln23_fu_781_p1;
        end else begin
            conv_1_weights_V_address0 = 'bx;
        end
    end else begin
        conv_1_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_1_weights_V_address1 = tmp_29_fu_1481_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_V_address1 = tmp_28_fu_1300_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_V_address1 = zext_ln23_1_reg_2856;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_V_address1 = zext_ln1116_14_fu_909_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_V_address1 = zext_ln1116_11_fu_801_p1;
        end else begin
            conv_1_weights_V_address1 = 'bx;
        end
    end else begin
        conv_1_weights_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_V_address2 = zext_ln1116_24_fu_1314_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_V_address2 = zext_ln1116_21_fu_1178_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_V_address2 = zext_ln1116_15_fu_920_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_V_address2 = zext_ln1116_12_fu_812_p1;
        end else begin
            conv_1_weights_V_address2 = 'bx;
        end
    end else begin
        conv_1_weights_V_address2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_V_address3 = zext_ln1116_25_fu_1325_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_V_address3 = zext_ln1116_22_fu_1189_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_V_address3 = zext_ln1116_16_fu_931_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_V_address3 = zext_ln1116_13_fu_823_p1;
        end else begin
            conv_1_weights_V_address3 = 'bx;
        end
    end else begin
        conv_1_weights_V_address3 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_V_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_V_ce1 = 1'b1;
    end else begin
        conv_1_weights_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_V_ce2 = 1'b1;
    end else begin
        conv_1_weights_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_V_ce3 = 1'b1;
    end else begin
        conv_1_weights_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_V_address0 = conv_out_V_addr_1_reg_3153;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_V_address0 = zext_ln203_14_fu_2449_p1;
        end else begin
            conv_out_V_address0 = 'bx;
        end
    end else begin
        conv_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_V_d0 = ap_phi_mux_storemerge1_phi_fu_528_p4;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_V_d0 = ap_phi_mux_storemerge_phi_fu_517_p4;
        end else begin
            conv_out_V_d0 = 'bx;
        end
    end else begin
        conv_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)))) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_536_p0 = bitcast_ln729_1_fu_2518_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_536_p0 = bitcast_ln729_fu_2147_p1;
        end else begin
            grp_fu_536_p0 = 'bx;
        end
    end else begin
        grp_fu_536_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address0 = zext_ln1117_16_fu_1382_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address0 = sext_ln1117_fu_1194_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address0 = zext_ln1117_13_fu_1049_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address0 = zext_ln1117_14_fu_887_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address0 = zext_ln1117_10_fu_733_p1;
        end else begin
            input_V_address0 = 'bx;
        end
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address1 = sext_ln1117_1_fu_1198_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address1 = zext_ln1117_15_fu_1063_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address1 = zext_ln1117_11_fu_874_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address1 = zext_ln1117_12_fu_762_p1;
        end else begin
            input_V_address1 = 'bx;
        end
    end else begin
        input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_V_ce1 = 1'b1;
    end else begin
        input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_577_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_577_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1116_10_fu_1183_p2 = (zext_ln1116_19_fu_1166_p1 + 5'd12);

assign add_ln1116_11_fu_1290_p2 = ($signed(zext_ln1116_19_reg_2917) + $signed(5'd18));

assign add_ln1116_12_fu_1308_p2 = (zext_ln1116_18_fu_1287_p1 + 6'd30);

assign add_ln1116_13_fu_1319_p2 = ($signed(zext_ln1116_18_fu_1287_p1) + $signed(6'd36));

assign add_ln1116_14_fu_1471_p2 = ($signed(zext_ln1116_18_reg_2967) + $signed(6'd42));

assign add_ln1116_4_fu_806_p2 = (zext_ln1116_9_fu_787_p1 + 5'd12);

assign add_ln1116_5_fu_817_p2 = ($signed(zext_ln1116_9_fu_787_p1) + $signed(5'd18));

assign add_ln1116_6_fu_903_p2 = (zext_ln1116_8_fu_892_p1 + 6'd30);

assign add_ln1116_7_fu_914_p2 = ($signed(zext_ln1116_8_fu_892_p1) + $signed(6'd36));

assign add_ln1116_8_fu_925_p2 = ($signed(zext_ln1116_8_fu_892_p1) + $signed(6'd42));

assign add_ln1116_9_fu_1172_p2 = (zext_ln1116_20_fu_1169_p1 + 4'd6);

assign add_ln1116_fu_795_p2 = (zext_ln1116_10_fu_791_p1 + 4'd6);

assign add_ln1117_2_fu_869_p2 = (zext_ln32_1_reg_2727 + sub_ln1117_1_fu_863_p2);

assign add_ln1117_3_fu_1040_p2 = (zext_ln32_1_reg_2727 + sub_ln1117_2_fu_1031_p2);

assign add_ln1117_4_fu_756_p2 = (zext_ln32_2_fu_752_p1 + sub_ln1117_fu_635_p2);

assign add_ln1117_5_fu_1045_p2 = (zext_ln32_2_reg_2738 + sub_ln1117_1_reg_2784);

assign add_ln1117_6_fu_1054_p2 = (zext_ln32_2_reg_2738 + sub_ln1117_2_fu_1031_p2);

assign add_ln1117_7_fu_882_p2 = (zext_ln32_3_fu_879_p1 + sub_ln1117_reg_2695);

assign add_ln1117_8_fu_1059_p2 = (zext_ln32_3_reg_2795 + sub_ln1117_1_reg_2784);

assign add_ln1117_9_fu_1068_p2 = (zext_ln32_3_reg_2795 + sub_ln1117_2_fu_1031_p2);

assign add_ln1117_fu_727_p2 = (zext_ln32_1_fu_723_p1 + sub_ln1117_fu_635_p2);

assign add_ln1192_10_fu_1550_p2 = (zext_ln728_10_fu_1542_p1 + zext_ln703_11_fu_1546_p1);

assign add_ln1192_11_fu_1662_p2 = (zext_ln728_11_fu_1654_p1 + zext_ln703_12_fu_1658_p1);

assign add_ln1192_12_fu_1701_p2 = (zext_ln728_12_fu_1693_p1 + zext_ln703_13_fu_1697_p1);

assign add_ln1192_13_fu_1740_p2 = (zext_ln728_13_fu_1732_p1 + zext_ln703_14_fu_1736_p1);

assign add_ln1192_14_fu_2031_p2 = (zext_ln728_14_fu_2023_p1 + zext_ln703_15_fu_2027_p1);

assign add_ln1192_15_fu_2070_p2 = (zext_ln728_15_fu_2062_p1 + zext_ln703_16_fu_2066_p1);

assign add_ln1192_1_fu_1107_p2 = (zext_ln728_1_fu_1099_p1 + zext_ln703_2_fu_1103_p1);

assign add_ln1192_2_fu_1150_p2 = (zext_ln728_2_fu_1142_p1 + zext_ln703_3_fu_1146_p1);

assign add_ln1192_3_fu_1228_p2 = (zext_ln728_3_fu_1220_p1 + zext_ln703_4_fu_1224_p1);

assign add_ln1192_4_fu_1271_p2 = (zext_ln728_4_fu_1263_p1 + zext_ln703_5_fu_1267_p1);

assign add_ln1192_5_fu_1412_p2 = (zext_ln728_5_fu_1404_p1 + zext_ln703_6_fu_1408_p1);

assign add_ln1192_6_fu_1455_p2 = (zext_ln728_6_fu_1447_p1 + zext_ln703_7_fu_1451_p1);

assign add_ln1192_7_fu_1603_p2 = (zext_ln728_7_fu_1595_p1 + zext_ln703_8_fu_1599_p1);

assign add_ln1192_8_fu_1366_p2 = (zext_ln728_8_fu_1358_p1 + zext_ln703_9_fu_1362_p1);

assign add_ln1192_9_fu_1511_p2 = (zext_ln728_9_fu_1503_p1 + zext_ln703_10_fu_1507_p1);

assign add_ln1192_fu_980_p2 = (zext_ln728_fu_972_p1 + zext_ln703_fu_976_p1);

assign add_ln11_fu_828_p2 = (ap_phi_mux_indvar_flatten_phi_fu_485_p4 + 7'd1);

assign add_ln14_fu_1566_p2 = (select_ln32_6_reg_2711 + 3'd2);

assign add_ln203_7_fu_2443_p2 = (zext_ln1116_fu_2440_p1 + sub_ln203_fu_2434_p2);

assign add_ln203_8_fu_2467_p2 = (zext_ln1116_17_fu_2464_p1 + sub_ln203_fu_2434_p2);

assign add_ln23_1_fu_571_p2 = (ap_phi_mux_c_0_phi_fu_496_p4 + 5'd2);

assign add_ln23_3_fu_695_p2 = (select_ln32_fu_595_p3 + 5'd1);

assign add_ln23_4_fu_738_p2 = (select_ln32_fu_595_p3 + 5'd2);

assign add_ln23_5_fu_767_p2 = (select_ln32_fu_595_p3 + 5'd3);

assign add_ln23_fu_641_p2 = (ap_phi_mux_r_0_phi_fu_474_p4 + 5'd2);

assign add_ln32_fu_655_p2 = (select_ln32_3_fu_647_p3 + ap_phi_mux_r_0_phi_fu_474_p4);

assign add_ln703_1_fu_2089_p2 = ($signed(sext_ln1265_1_fu_2086_p1) + $signed(trunc_ln708_s_fu_2076_p4));

assign add_ln703_fu_1622_p2 = ($signed(sext_ln1265_fu_1619_p1) + $signed(trunc_ln708_8_fu_1609_p4));

assign add_ln894_1_fu_2212_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_1_fu_2202_p2));

assign add_ln894_fu_1805_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_1795_p2));

assign add_ln899_1_fu_2286_p2 = ($signed(14'd16331) + $signed(trunc_ln894_1_fu_2208_p1));

assign add_ln899_fu_1879_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_1801_p1));

assign add_ln8_fu_583_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_463_p4 + 11'd1);

assign add_ln908_1_fu_2334_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_1_fu_2202_p2));

assign add_ln908_fu_1927_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_fu_1795_p2));

assign add_ln911_1_fu_2378_p2 = (zext_ln911_1_fu_2374_p1 + select_ln908_1_fu_2366_p3);

assign add_ln911_fu_1971_p2 = (zext_ln911_fu_1967_p1 + select_ln908_fu_1959_p3);

assign add_ln915_1_fu_2493_p2 = (sub_ln915_1_fu_2488_p2 + select_ln915_1_fu_2481_p3);

assign add_ln915_fu_2122_p2 = (sub_ln915_fu_2117_p2 + select_ln915_fu_2110_p3);

assign and_ln32_fu_689_p2 = (xor_ln32_fu_677_p2 & icmp_ln14_fu_683_p2);

assign and_ln897_1_fu_2266_p2 = (icmp_ln897_4_fu_2228_p2 & icmp_ln897_3_fu_2260_p2);

assign and_ln897_2_fu_1847_p2 = (select_ln888_fu_1763_p3 & lshr_ln897_fu_1841_p2);

assign and_ln897_3_fu_2254_p2 = (select_ln888_1_fu_2170_p3 & lshr_ln897_1_fu_2248_p2);

assign and_ln897_fu_1859_p2 = (icmp_ln897_fu_1821_p2 & icmp_ln897_2_fu_1853_p2);

assign and_ln899_1_fu_2300_p2 = (xor_ln899_1_fu_2280_p2 & p_Result_57_1_fu_2292_p3);

assign and_ln899_fu_1893_p2 = (xor_ln899_fu_1873_p2 & p_Result_12_fu_1885_p3);

assign and_ln924_1_fu_2538_p2 = (or_ln924_1_fu_2534_p2 & grp_fu_536_p2);

assign and_ln924_fu_2458_p2 = (or_ln924_fu_2454_p2 & grp_fu_536_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_436 = (((icmp_ln885_reg_3054 == 1'd1) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)) | ((1'd0 == and_ln924_fu_2458_p2) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_441 = ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_444 = ((1'd1 == and_ln924_fu_2458_p2) & (icmp_ln885_reg_3054 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_456 = (((icmp_ln885_1_reg_3100 == 1'd1) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)) | ((1'd0 == and_ln924_1_fu_2538_p2) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_461 = ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_464 = ((1'd1 == and_ln924_1_fu_2538_p2) & (icmp_ln885_1_reg_3100 == 1'd0) & (icmp_ln8_reg_2674_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_storemerge1_reg_525 = 'bx;

assign ap_phi_reg_pp0_iter1_storemerge_reg_514 = 'bx;

assign bitcast_ln729_1_fu_2518_p1 = p_Result_64_1_fu_2506_p5;

assign bitcast_ln729_fu_2147_p1 = p_Result_13_fu_2135_p5;

assign c_fu_565_p2 = (ap_phi_mux_c_0_phi_fu_496_p4 + 5'd1);

assign grp_fu_2558_p0 = grp_fu_2558_p00;

assign grp_fu_2558_p00 = select_ln32_1_reg_2689;

assign grp_fu_2558_p1 = 10'd26;

assign grp_fu_2558_p2 = grp_fu_2558_p20;

assign grp_fu_2558_p20 = select_ln32_7_reg_2721;

assign icmp_ln11_fu_589_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_485_p4 == 7'd78) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_683_p2 = ((ap_phi_mux_f_0_0_phi_fu_507_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln885_1_fu_2095_p2 = ((add_ln703_1_fu_2089_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_1628_p2 = ((add_ln703_fu_1622_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_1853_p2 = ((and_ln897_2_fu_1847_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_3_fu_2260_p2 = ((and_ln897_3_fu_2254_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_4_fu_2228_p2 = (($signed(tmp_39_fu_2218_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_1821_p2 = (($signed(tmp_25_fu_1811_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_577_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_463_p4 == 11'd2028) ? 1'b1 : 1'b0);

assign icmp_ln908_1_fu_2328_p2 = (($signed(add_ln894_1_fu_2212_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_1921_p2 = (($signed(add_ln894_fu_1805_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_2_fu_2158_p2 = ((trunc_ln7_reg_3088 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_3_fu_2523_p2 = ((add_ln915_1_fu_2493_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln924_4_fu_2529_p2 = ((trunc_ln924_1_reg_3144 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_2152_p2 = ((add_ln915_fu_2122_p2 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_62_1_fu_2186_p3) begin
    if (p_Result_62_1_fu_2186_p3[0] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd0;
    end else if (p_Result_62_1_fu_2186_p3[1] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd1;
    end else if (p_Result_62_1_fu_2186_p3[2] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd2;
    end else if (p_Result_62_1_fu_2186_p3[3] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd3;
    end else if (p_Result_62_1_fu_2186_p3[4] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd4;
    end else if (p_Result_62_1_fu_2186_p3[5] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd5;
    end else if (p_Result_62_1_fu_2186_p3[6] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd6;
    end else if (p_Result_62_1_fu_2186_p3[7] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd7;
    end else if (p_Result_62_1_fu_2186_p3[8] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd8;
    end else if (p_Result_62_1_fu_2186_p3[9] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd9;
    end else if (p_Result_62_1_fu_2186_p3[10] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd10;
    end else if (p_Result_62_1_fu_2186_p3[11] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd11;
    end else if (p_Result_62_1_fu_2186_p3[12] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd12;
    end else if (p_Result_62_1_fu_2186_p3[13] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd13;
    end else if (p_Result_62_1_fu_2186_p3[14] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd14;
    end else if (p_Result_62_1_fu_2186_p3[15] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd15;
    end else if (p_Result_62_1_fu_2186_p3[16] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd16;
    end else if (p_Result_62_1_fu_2186_p3[17] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd17;
    end else if (p_Result_62_1_fu_2186_p3[18] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd18;
    end else if (p_Result_62_1_fu_2186_p3[19] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd19;
    end else if (p_Result_62_1_fu_2186_p3[20] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd20;
    end else if (p_Result_62_1_fu_2186_p3[21] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd21;
    end else if (p_Result_62_1_fu_2186_p3[22] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd22;
    end else if (p_Result_62_1_fu_2186_p3[23] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd23;
    end else if (p_Result_62_1_fu_2186_p3[24] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd24;
    end else if (p_Result_62_1_fu_2186_p3[25] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd25;
    end else if (p_Result_62_1_fu_2186_p3[26] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd26;
    end else if (p_Result_62_1_fu_2186_p3[27] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd27;
    end else if (p_Result_62_1_fu_2186_p3[28] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd28;
    end else if (p_Result_62_1_fu_2186_p3[29] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd29;
    end else if (p_Result_62_1_fu_2186_p3[30] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd30;
    end else if (p_Result_62_1_fu_2186_p3[31] == 1'b1) begin
        l_1_fu_2194_p3 = 32'd31;
    end else begin
        l_1_fu_2194_p3 = 32'd32;
    end
end


always @ (p_Result_s_71_fu_1779_p3) begin
    if (p_Result_s_71_fu_1779_p3[0] == 1'b1) begin
        l_fu_1787_p3 = 32'd0;
    end else if (p_Result_s_71_fu_1779_p3[1] == 1'b1) begin
        l_fu_1787_p3 = 32'd1;
    end else if (p_Result_s_71_fu_1779_p3[2] == 1'b1) begin
        l_fu_1787_p3 = 32'd2;
    end else if (p_Result_s_71_fu_1779_p3[3] == 1'b1) begin
        l_fu_1787_p3 = 32'd3;
    end else if (p_Result_s_71_fu_1779_p3[4] == 1'b1) begin
        l_fu_1787_p3 = 32'd4;
    end else if (p_Result_s_71_fu_1779_p3[5] == 1'b1) begin
        l_fu_1787_p3 = 32'd5;
    end else if (p_Result_s_71_fu_1779_p3[6] == 1'b1) begin
        l_fu_1787_p3 = 32'd6;
    end else if (p_Result_s_71_fu_1779_p3[7] == 1'b1) begin
        l_fu_1787_p3 = 32'd7;
    end else if (p_Result_s_71_fu_1779_p3[8] == 1'b1) begin
        l_fu_1787_p3 = 32'd8;
    end else if (p_Result_s_71_fu_1779_p3[9] == 1'b1) begin
        l_fu_1787_p3 = 32'd9;
    end else if (p_Result_s_71_fu_1779_p3[10] == 1'b1) begin
        l_fu_1787_p3 = 32'd10;
    end else if (p_Result_s_71_fu_1779_p3[11] == 1'b1) begin
        l_fu_1787_p3 = 32'd11;
    end else if (p_Result_s_71_fu_1779_p3[12] == 1'b1) begin
        l_fu_1787_p3 = 32'd12;
    end else if (p_Result_s_71_fu_1779_p3[13] == 1'b1) begin
        l_fu_1787_p3 = 32'd13;
    end else if (p_Result_s_71_fu_1779_p3[14] == 1'b1) begin
        l_fu_1787_p3 = 32'd14;
    end else if (p_Result_s_71_fu_1779_p3[15] == 1'b1) begin
        l_fu_1787_p3 = 32'd15;
    end else if (p_Result_s_71_fu_1779_p3[16] == 1'b1) begin
        l_fu_1787_p3 = 32'd16;
    end else if (p_Result_s_71_fu_1779_p3[17] == 1'b1) begin
        l_fu_1787_p3 = 32'd17;
    end else if (p_Result_s_71_fu_1779_p3[18] == 1'b1) begin
        l_fu_1787_p3 = 32'd18;
    end else if (p_Result_s_71_fu_1779_p3[19] == 1'b1) begin
        l_fu_1787_p3 = 32'd19;
    end else if (p_Result_s_71_fu_1779_p3[20] == 1'b1) begin
        l_fu_1787_p3 = 32'd20;
    end else if (p_Result_s_71_fu_1779_p3[21] == 1'b1) begin
        l_fu_1787_p3 = 32'd21;
    end else if (p_Result_s_71_fu_1779_p3[22] == 1'b1) begin
        l_fu_1787_p3 = 32'd22;
    end else if (p_Result_s_71_fu_1779_p3[23] == 1'b1) begin
        l_fu_1787_p3 = 32'd23;
    end else if (p_Result_s_71_fu_1779_p3[24] == 1'b1) begin
        l_fu_1787_p3 = 32'd24;
    end else if (p_Result_s_71_fu_1779_p3[25] == 1'b1) begin
        l_fu_1787_p3 = 32'd25;
    end else if (p_Result_s_71_fu_1779_p3[26] == 1'b1) begin
        l_fu_1787_p3 = 32'd26;
    end else if (p_Result_s_71_fu_1779_p3[27] == 1'b1) begin
        l_fu_1787_p3 = 32'd27;
    end else if (p_Result_s_71_fu_1779_p3[28] == 1'b1) begin
        l_fu_1787_p3 = 32'd28;
    end else if (p_Result_s_71_fu_1779_p3[29] == 1'b1) begin
        l_fu_1787_p3 = 32'd29;
    end else if (p_Result_s_71_fu_1779_p3[30] == 1'b1) begin
        l_fu_1787_p3 = 32'd30;
    end else if (p_Result_s_71_fu_1779_p3[31] == 1'b1) begin
        l_fu_1787_p3 = 32'd31;
    end else begin
        l_fu_1787_p3 = 32'd32;
    end
end

assign lshr_ln897_1_fu_2248_p2 = 14'd16383 >> zext_ln897_1_fu_2244_p1;

assign lshr_ln897_fu_1841_p2 = 14'd16383 >> zext_ln897_fu_1837_p1;

assign lshr_ln908_1_fu_2340_p2 = zext_ln908_5_fu_2324_p1 >> add_ln908_1_fu_2334_p2;

assign lshr_ln908_fu_1933_p2 = zext_ln908_fu_1917_p1 >> add_ln908_fu_1927_p2;

assign mul_ln1118_10_fu_2600_p1 = sext_ln1118_2_reg_2831;

assign mul_ln1118_11_fu_2620_p1 = sext_ln1118_4_reg_2902;

assign mul_ln1118_12_fu_2626_p1 = sext_ln1118_6_reg_2907;

assign mul_ln1118_13_fu_2639_p1 = sext_ln1118_8_reg_2952;

assign mul_ln1118_14_fu_2645_p1 = sext_ln1118_10_reg_2957;

assign mul_ln1118_15_fu_2651_p1 = sext_ln1118_12_reg_3002;

assign mul_ln1118_16_fu_2657_p1 = sext_ln1118_14_reg_3007;

assign mul_ln1118_17_fu_2663_p1 = sext_ln1118_16_reg_3042;

assign mul_ln1118_9_fu_2594_p1 = sext_ln1118_reg_2826;

assign or_ln14_fu_996_p2 = (select_ln32_6_reg_2711 | 3'd1);

assign or_ln32_fu_701_p2 = (icmp_ln11_fu_589_p2 | and_ln32_fu_689_p2);

assign or_ln899_1_fu_2312_p3 = {{31'd0}, {or_ln899_2_fu_2306_p2}};

assign or_ln899_2_fu_2306_p2 = (and_ln899_1_fu_2300_p2 | and_ln897_1_fu_2266_p2);

assign or_ln899_fu_1899_p2 = (and_ln899_fu_1893_p2 | and_ln897_fu_1859_p2);

assign or_ln924_1_fu_2534_p2 = (icmp_ln924_4_reg_3168 | icmp_ln924_3_reg_3163);

assign or_ln924_fu_2454_p2 = (icmp_ln924_reg_3114 | icmp_ln924_2_reg_3119);

assign or_ln_fu_1905_p3 = {{31'd0}, {or_ln899_fu_1899_p2}};

assign p_Result_12_fu_1885_p3 = select_ln888_fu_1763_p3[add_ln899_fu_1879_p2];

assign p_Result_13_fu_2135_p5 = {{tmp_7_fu_2128_p3}, {zext_ln912_fu_2107_p1[51:0]}};

integer ap_tvar_int_0;

always @ (select_ln888_1_fu_2170_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_1_fu_2176_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_2176_p4[ap_tvar_int_0] = select_ln888_1_fu_2170_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_Result_57_1_fu_2292_p3 = select_ln888_1_fu_2170_p3[add_ln899_1_fu_2286_p2];

assign p_Result_62_1_fu_2186_p3 = {{18'd262143}, {p_Result_1_fu_2176_p4}};

assign p_Result_64_1_fu_2506_p5 = {{tmp_9_fu_2499_p3}, {zext_ln912_1_fu_2478_p1[51:0]}};

assign p_Result_s_71_fu_1779_p3 = {{18'd262143}, {p_Result_s_fu_1769_p4}};

integer ap_tvar_int_1;

always @ (select_ln888_fu_1763_p3) begin
    for (ap_tvar_int_1 = 14 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 13 - 0) begin
            p_Result_s_fu_1769_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_s_fu_1769_p4[ap_tvar_int_1] = select_ln888_fu_1763_p3[13 - ap_tvar_int_1];
        end
    end
end

assign p_shl_cast_fu_2416_p3 = {{add_ln203_reg_2871_pp0_iter1_reg}, {3'd0}};

assign r_fu_559_p2 = (ap_phi_mux_r_0_phi_fu_474_p4 + 5'd1);

assign select_ln11_fu_1571_p3 = ((icmp_ln11_reg_2683[0:0] === 1'b1) ? 7'd1 : add_ln11_reg_2779);

assign select_ln32_1_fu_603_p3 = ((icmp_ln11_fu_589_p2[0:0] === 1'b1) ? r_fu_559_p2 : ap_phi_mux_r_0_phi_fu_474_p4);

assign select_ln32_2_fu_834_p3 = ((icmp_ln11_reg_2683[0:0] === 1'b1) ? add_ln23_reg_2700 : r_reg_2669);

assign select_ln32_3_fu_647_p3 = ((icmp_ln11_fu_589_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln32_4_fu_661_p3 = ((icmp_ln11_fu_589_p2[0:0] === 1'b1) ? 5'd1 : c_fu_565_p2);

assign select_ln32_5_fu_669_p3 = ((icmp_ln11_fu_589_p2[0:0] === 1'b1) ? 5'd2 : add_ln23_1_fu_571_p2);

assign select_ln32_6_fu_707_p3 = ((or_ln32_fu_701_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_f_0_0_phi_fu_507_p4);

assign select_ln32_7_fu_715_p3 = ((and_ln32_fu_689_p2[0:0] === 1'b1) ? add_ln23_3_fu_695_p2 : select_ln32_fu_595_p3);

assign select_ln32_8_fu_744_p3 = ((and_ln32_fu_689_p2[0:0] === 1'b1) ? add_ln23_4_fu_738_p2 : select_ln32_4_fu_661_p3);

assign select_ln32_9_fu_773_p3 = ((and_ln32_fu_689_p2[0:0] === 1'b1) ? add_ln23_5_fu_767_p2 : select_ln32_5_fu_669_p3);

assign select_ln32_fu_595_p3 = ((icmp_ln11_fu_589_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_496_p4);

assign select_ln888_1_fu_2170_p3 = ((tmp_38_fu_2163_p3[0:0] === 1'b1) ? sub_ln889_1_reg_3104 : add_ln703_1_reg_3093);

assign select_ln888_fu_1763_p3 = ((tmp_24_fu_1756_p3[0:0] === 1'b1) ? sub_ln889_reg_3058 : add_ln703_reg_3047);

assign select_ln908_1_fu_2366_p3 = ((icmp_ln908_1_fu_2328_p2[0:0] === 1'b1) ? zext_ln908_6_fu_2346_p1 : shl_ln908_1_fu_2360_p2);

assign select_ln908_fu_1959_p3 = ((icmp_ln908_fu_1921_p2[0:0] === 1'b1) ? zext_ln908_4_fu_1939_p1 : shl_ln908_fu_1953_p2);

assign select_ln915_1_fu_2481_p3 = ((tmp_41_reg_3134[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln915_fu_2110_p3 = ((tmp_27_reg_3078[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1117_1_fu_1198_p1 = $signed(add_ln1117_6_reg_2882);

assign sext_ln1117_fu_1194_p1 = $signed(add_ln1117_3_reg_2866);

assign sext_ln1118_10_fu_1238_p1 = $signed(input_V_q1);

assign sext_ln1118_11_fu_1242_p1 = mul_ln1118_5_fu_2587_p2;

assign sext_ln1118_12_fu_1390_p1 = $signed(input_V_q0);

assign sext_ln1118_13_fu_1394_p1 = mul_ln1118_6_fu_2606_p2;

assign sext_ln1118_14_fu_1422_p1 = $signed(input_V_q1);

assign sext_ln1118_15_fu_1426_p1 = mul_ln1118_7_fu_2613_p2;

assign sext_ln1118_16_fu_1581_p1 = $signed(input_V_q0);

assign sext_ln1118_17_fu_1585_p1 = mul_ln1118_8_fu_2632_p2;

assign sext_ln1118_20_fu_1338_p1 = mul_ln1118_10_fu_2600_p2;

assign sext_ln1118_22_fu_1493_p1 = mul_ln1118_11_fu_2620_p2;

assign sext_ln1118_24_fu_1521_p1 = mul_ln1118_12_fu_2626_p2;

assign sext_ln1118_26_fu_1644_p1 = mul_ln1118_13_fu_2639_p2;

assign sext_ln1118_28_fu_1672_p1 = mul_ln1118_14_fu_2645_p2;

assign sext_ln1118_2_fu_948_p1 = $signed(input_V_q1);

assign sext_ln1118_30_fu_1711_p1 = mul_ln1118_15_fu_2651_p2;

assign sext_ln1118_32_fu_2013_p1 = mul_ln1118_16_fu_2657_p2;

assign sext_ln1118_34_fu_2041_p1 = mul_ln1118_17_fu_2663_p2;

assign sext_ln1118_3_fu_952_p1 = mul_ln1118_1_fu_2551_p2;

assign sext_ln1118_4_fu_1085_p1 = $signed(input_V_q0);

assign sext_ln1118_5_fu_1089_p1 = mul_ln1118_2_fu_2566_p2;

assign sext_ln1118_6_fu_1117_p1 = $signed(input_V_q1);

assign sext_ln1118_7_fu_1121_p1 = mul_ln1118_3_fu_2573_p2;

assign sext_ln1118_8_fu_1206_p1 = $signed(input_V_q0);

assign sext_ln1118_9_fu_1210_p1 = mul_ln1118_4_fu_2580_p2;

assign sext_ln1118_fu_940_p1 = $signed(input_V_q0);

assign sext_ln1265_1_fu_2086_p1 = $signed(conv_1_bias_V_load_1_reg_2937);

assign sext_ln1265_fu_1619_p1 = $signed(conv_1_bias_V_load_reg_2841);

assign shl_ln728_10_fu_1647_p3 = {{tmp_33_reg_3027}, {8'd0}};

assign shl_ln728_11_fu_1685_p3 = {{tmp_34_fu_1675_p4}, {8'd0}};

assign shl_ln728_12_fu_1724_p3 = {{tmp_35_fu_1714_p4}, {8'd0}};

assign shl_ln728_13_fu_2016_p3 = {{tmp_36_reg_3063}, {8'd0}};

assign shl_ln728_14_fu_2054_p3 = {{tmp_37_fu_2044_p4}, {8'd0}};

assign shl_ln728_1_fu_1092_p3 = {{tmp_13_reg_2836}, {8'd0}};

assign shl_ln728_2_fu_1134_p3 = {{tmp_14_fu_1124_p4}, {8'd0}};

assign shl_ln728_3_fu_1213_p3 = {{tmp_15_reg_2912}, {8'd0}};

assign shl_ln728_4_fu_1255_p3 = {{tmp_20_fu_1245_p4}, {8'd0}};

assign shl_ln728_5_fu_1397_p3 = {{tmp_21_reg_2962}, {8'd0}};

assign shl_ln728_6_fu_1439_p3 = {{tmp_22_fu_1429_p4}, {8'd0}};

assign shl_ln728_7_fu_1588_p3 = {{tmp_23_reg_3012}, {8'd0}};

assign shl_ln728_8_fu_1350_p3 = {{tmp_30_fu_1341_p4}, {8'd0}};

assign shl_ln728_9_fu_1496_p3 = {{tmp_31_reg_2992}, {8'd0}};

assign shl_ln728_s_fu_1534_p3 = {{tmp_32_fu_1524_p4}, {8'd0}};

assign shl_ln908_1_fu_2360_p2 = zext_ln907_1_fu_2320_p1 << zext_ln908_3_fu_2356_p1;

assign shl_ln908_fu_1953_p2 = zext_ln907_fu_1913_p1 << zext_ln908_2_fu_1949_p1;

assign shl_ln_fu_964_p3 = {{tmp_12_fu_955_p4}, {8'd0}};

assign sub_ln1117_1_fu_863_p2 = (zext_ln1117_6_fu_847_p1 - zext_ln1117_7_fu_859_p1);

assign sub_ln1117_2_fu_1031_p2 = (zext_ln1117_8_fu_1016_p1 - zext_ln1117_9_fu_1027_p1);

assign sub_ln1117_fu_635_p2 = (zext_ln1117_fu_619_p1 - zext_ln1117_5_fu_631_p1);

assign sub_ln203_fu_2434_p2 = (p_shl_cast_fu_2416_p3 - zext_ln203_13_fu_2430_p1);

assign sub_ln889_1_fu_2101_p2 = (14'd0 - add_ln703_1_fu_2089_p2);

assign sub_ln889_fu_1634_p2 = (14'd0 - add_ln703_fu_1622_p2);

assign sub_ln894_1_fu_2202_p2 = (32'd14 - l_1_fu_2194_p3);

assign sub_ln894_fu_1795_p2 = (32'd14 - l_fu_1787_p3);

assign sub_ln897_1_fu_2238_p2 = (4'd4 - trunc_ln897_1_fu_2234_p1);

assign sub_ln897_fu_1831_p2 = (4'd4 - trunc_ln897_fu_1827_p1);

assign sub_ln908_1_fu_2350_p2 = (32'd54 - sub_ln894_1_fu_2202_p2);

assign sub_ln908_fu_1943_p2 = (32'd54 - sub_ln894_fu_1795_p2);

assign sub_ln915_1_fu_2488_p2 = (11'd6 - trunc_ln893_1_reg_3139);

assign sub_ln915_fu_2117_p2 = (11'd6 - trunc_ln893_reg_3083);

assign tmp_10_fu_895_p3 = {{61'd3}, {select_ln32_6_reg_2711}};

assign tmp_11_fu_1073_p3 = {{61'd6}, {select_ln32_6_reg_2711}};

assign tmp_12_fu_955_p4 = {{mul_ln1118_fu_2544_p2[21:8]}};

assign tmp_14_fu_1124_p4 = {{add_ln1192_1_fu_1107_p2[21:8]}};

assign tmp_16_fu_623_p3 = {{select_ln32_1_fu_603_p3}, {2'd0}};

assign tmp_17_fu_839_p3 = {{select_ln32_2_fu_834_p3}, {5'd0}};

assign tmp_18_fu_851_p3 = {{select_ln32_2_fu_834_p3}, {2'd0}};

assign tmp_19_fu_2423_p3 = {{add_ln203_reg_2871_pp0_iter1_reg}, {1'd0}};

assign tmp_20_fu_1245_p4 = {{add_ln1192_3_fu_1228_p2[21:8]}};

assign tmp_22_fu_1429_p4 = {{add_ln1192_5_fu_1412_p2[21:8]}};

assign tmp_24_fu_1756_p3 = add_ln703_reg_3047[32'd13];

assign tmp_25_fu_1811_p4 = {{add_ln894_fu_1805_p2[31:1]}};

assign tmp_26_fu_1865_p3 = add_ln894_fu_1805_p2[32'd31];

assign tmp_28_fu_1300_p3 = {{61'd3}, {or_ln14_reg_2846}};

assign tmp_29_fu_1481_p3 = {{61'd6}, {or_ln14_reg_2846}};

assign tmp_30_fu_1341_p4 = {{mul_ln1118_9_fu_2594_p2[21:8]}};

assign tmp_32_fu_1524_p4 = {{add_ln1192_9_fu_1511_p2[21:8]}};

assign tmp_34_fu_1675_p4 = {{add_ln1192_11_fu_1662_p2[21:8]}};

assign tmp_35_fu_1714_p4 = {{add_ln1192_12_fu_1701_p2[21:8]}};

assign tmp_37_fu_2044_p4 = {{add_ln1192_14_fu_2031_p2[21:8]}};

assign tmp_38_fu_2163_p3 = add_ln703_1_reg_3093[32'd13];

assign tmp_39_fu_2218_p4 = {{add_ln894_1_fu_2212_p2[31:1]}};

assign tmp_40_fu_2272_p3 = add_ln894_1_fu_2212_p2[32'd31];

assign tmp_7_fu_2128_p3 = {{tmp_24_reg_3068}, {add_ln915_fu_2122_p2}};

assign tmp_8_fu_1020_p3 = {{add_ln32_reg_2705}, {2'd0}};

assign tmp_9_fu_2499_p3 = {{tmp_38_reg_3124}, {add_ln915_1_fu_2493_p2}};

assign tmp_fu_611_p3 = {{select_ln32_1_fu_603_p3}, {5'd0}};

assign tmp_s_fu_1009_p3 = {{add_ln32_reg_2705}, {5'd0}};

assign trunc_ln708_8_fu_1609_p4 = {{add_ln1192_7_fu_1603_p2[21:8]}};

assign trunc_ln708_s_fu_2076_p4 = {{add_ln1192_15_fu_2070_p2[21:8]}};

assign trunc_ln893_1_fu_2402_p1 = l_1_fu_2194_p3[10:0];

assign trunc_ln893_fu_1995_p1 = l_fu_1787_p3[10:0];

assign trunc_ln894_1_fu_2208_p1 = sub_ln894_1_fu_2202_p2[13:0];

assign trunc_ln894_fu_1801_p1 = sub_ln894_fu_1795_p2[13:0];

assign trunc_ln897_1_fu_2234_p1 = sub_ln894_1_fu_2202_p2[3:0];

assign trunc_ln897_fu_1827_p1 = sub_ln894_fu_1795_p2[3:0];

assign xor_ln32_fu_677_p2 = (icmp_ln11_fu_589_p2 ^ 1'd1);

assign xor_ln899_1_fu_2280_p2 = (tmp_40_fu_2272_p3 ^ 1'd1);

assign xor_ln899_fu_1873_p2 = (tmp_26_fu_1865_p3 ^ 1'd1);

assign zext_ln1116_10_fu_791_p1 = select_ln32_6_fu_707_p3;

assign zext_ln1116_11_fu_801_p1 = add_ln1116_fu_795_p2;

assign zext_ln1116_12_fu_812_p1 = add_ln1116_4_fu_806_p2;

assign zext_ln1116_13_fu_823_p1 = add_ln1116_5_fu_817_p2;

assign zext_ln1116_14_fu_909_p1 = add_ln1116_6_fu_903_p2;

assign zext_ln1116_15_fu_920_p1 = add_ln1116_7_fu_914_p2;

assign zext_ln1116_16_fu_931_p1 = add_ln1116_8_fu_925_p2;

assign zext_ln1116_17_fu_2464_p1 = or_ln14_reg_2846_pp0_iter1_reg;

assign zext_ln1116_18_fu_1287_p1 = or_ln14_reg_2846;

assign zext_ln1116_19_fu_1166_p1 = or_ln14_reg_2846;

assign zext_ln1116_20_fu_1169_p1 = or_ln14_reg_2846;

assign zext_ln1116_21_fu_1178_p1 = add_ln1116_9_fu_1172_p2;

assign zext_ln1116_22_fu_1189_p1 = add_ln1116_10_fu_1183_p2;

assign zext_ln1116_23_fu_1295_p1 = add_ln1116_11_fu_1290_p2;

assign zext_ln1116_24_fu_1314_p1 = add_ln1116_12_fu_1308_p2;

assign zext_ln1116_25_fu_1325_p1 = add_ln1116_13_fu_1319_p2;

assign zext_ln1116_26_fu_1476_p1 = add_ln1116_14_fu_1471_p2;

assign zext_ln1116_8_fu_892_p1 = select_ln32_6_reg_2711;

assign zext_ln1116_9_fu_787_p1 = select_ln32_6_fu_707_p3;

assign zext_ln1116_fu_2440_p1 = select_ln32_6_reg_2711_pp0_iter1_reg;

assign zext_ln1117_10_fu_733_p1 = add_ln1117_fu_727_p2;

assign zext_ln1117_11_fu_874_p1 = add_ln1117_2_fu_869_p2;

assign zext_ln1117_12_fu_762_p1 = add_ln1117_4_fu_756_p2;

assign zext_ln1117_13_fu_1049_p1 = add_ln1117_5_fu_1045_p2;

assign zext_ln1117_14_fu_887_p1 = add_ln1117_7_fu_882_p2;

assign zext_ln1117_15_fu_1063_p1 = add_ln1117_8_fu_1059_p2;

assign zext_ln1117_16_fu_1382_p1 = add_ln1117_9_reg_2892;

assign zext_ln1117_5_fu_631_p1 = tmp_16_fu_623_p3;

assign zext_ln1117_6_fu_847_p1 = tmp_17_fu_839_p3;

assign zext_ln1117_7_fu_859_p1 = tmp_18_fu_851_p3;

assign zext_ln1117_8_fu_1016_p1 = tmp_s_fu_1009_p3;

assign zext_ln1117_9_fu_1027_p1 = tmp_8_fu_1020_p3;

assign zext_ln1117_fu_619_p1 = tmp_fu_611_p3;

assign zext_ln203_13_fu_2430_p1 = tmp_19_fu_2423_p3;

assign zext_ln203_14_fu_2449_p1 = add_ln203_7_fu_2443_p2;

assign zext_ln203_15_fu_2473_p1 = add_ln203_8_fu_2467_p2;

assign zext_ln23_1_fu_1001_p1 = or_ln14_fu_996_p2;

assign zext_ln23_fu_781_p1 = select_ln32_6_fu_707_p3;

assign zext_ln32_1_fu_723_p1 = select_ln32_7_fu_715_p3;

assign zext_ln32_2_fu_752_p1 = select_ln32_8_fu_744_p3;

assign zext_ln32_3_fu_879_p1 = select_ln32_9_reg_2749;

assign zext_ln703_10_fu_1507_p1 = $unsigned(sext_ln1118_22_fu_1493_p1);

assign zext_ln703_11_fu_1546_p1 = $unsigned(sext_ln1118_24_fu_1521_p1);

assign zext_ln703_12_fu_1658_p1 = $unsigned(sext_ln1118_26_fu_1644_p1);

assign zext_ln703_13_fu_1697_p1 = $unsigned(sext_ln1118_28_fu_1672_p1);

assign zext_ln703_14_fu_1736_p1 = $unsigned(sext_ln1118_30_fu_1711_p1);

assign zext_ln703_15_fu_2027_p1 = $unsigned(sext_ln1118_32_fu_2013_p1);

assign zext_ln703_16_fu_2066_p1 = $unsigned(sext_ln1118_34_fu_2041_p1);

assign zext_ln703_2_fu_1103_p1 = $unsigned(sext_ln1118_5_fu_1089_p1);

assign zext_ln703_3_fu_1146_p1 = $unsigned(sext_ln1118_7_fu_1121_p1);

assign zext_ln703_4_fu_1224_p1 = $unsigned(sext_ln1118_9_fu_1210_p1);

assign zext_ln703_5_fu_1267_p1 = $unsigned(sext_ln1118_11_fu_1242_p1);

assign zext_ln703_6_fu_1408_p1 = $unsigned(sext_ln1118_13_fu_1394_p1);

assign zext_ln703_7_fu_1451_p1 = $unsigned(sext_ln1118_15_fu_1426_p1);

assign zext_ln703_8_fu_1599_p1 = $unsigned(sext_ln1118_17_fu_1585_p1);

assign zext_ln703_9_fu_1362_p1 = $unsigned(sext_ln1118_20_fu_1338_p1);

assign zext_ln703_fu_976_p1 = $unsigned(sext_ln1118_3_fu_952_p1);

assign zext_ln728_10_fu_1542_p1 = shl_ln728_s_fu_1534_p3;

assign zext_ln728_11_fu_1654_p1 = shl_ln728_10_fu_1647_p3;

assign zext_ln728_12_fu_1693_p1 = shl_ln728_11_fu_1685_p3;

assign zext_ln728_13_fu_1732_p1 = shl_ln728_12_fu_1724_p3;

assign zext_ln728_14_fu_2023_p1 = shl_ln728_13_fu_2016_p3;

assign zext_ln728_15_fu_2062_p1 = shl_ln728_14_fu_2054_p3;

assign zext_ln728_1_fu_1099_p1 = shl_ln728_1_fu_1092_p3;

assign zext_ln728_2_fu_1142_p1 = shl_ln728_2_fu_1134_p3;

assign zext_ln728_3_fu_1220_p1 = shl_ln728_3_fu_1213_p3;

assign zext_ln728_4_fu_1263_p1 = shl_ln728_4_fu_1255_p3;

assign zext_ln728_5_fu_1404_p1 = shl_ln728_5_fu_1397_p3;

assign zext_ln728_6_fu_1447_p1 = shl_ln728_6_fu_1439_p3;

assign zext_ln728_7_fu_1595_p1 = shl_ln728_7_fu_1588_p3;

assign zext_ln728_8_fu_1358_p1 = shl_ln728_8_fu_1350_p3;

assign zext_ln728_9_fu_1503_p1 = shl_ln728_9_fu_1496_p3;

assign zext_ln728_fu_972_p1 = shl_ln_fu_964_p3;

assign zext_ln897_1_fu_2244_p1 = sub_ln897_1_fu_2238_p2;

assign zext_ln897_fu_1837_p1 = sub_ln897_fu_1831_p2;

assign zext_ln907_1_fu_2320_p1 = select_ln888_1_fu_2170_p3;

assign zext_ln907_fu_1913_p1 = select_ln888_fu_1763_p3;

assign zext_ln908_2_fu_1949_p1 = sub_ln908_fu_1943_p2;

assign zext_ln908_3_fu_2356_p1 = sub_ln908_1_fu_2350_p2;

assign zext_ln908_4_fu_1939_p1 = lshr_ln908_fu_1933_p2;

assign zext_ln908_5_fu_2324_p1 = select_ln888_1_fu_2170_p3;

assign zext_ln908_6_fu_2346_p1 = lshr_ln908_1_fu_2340_p2;

assign zext_ln908_fu_1917_p1 = select_ln888_fu_1763_p3;

assign zext_ln911_1_fu_2374_p1 = or_ln899_1_fu_2312_p3;

assign zext_ln911_fu_1967_p1 = or_ln_fu_1905_p3;

assign zext_ln912_1_fu_2478_p1 = lshr_ln912_1_reg_3129;

assign zext_ln912_fu_2107_p1 = lshr_ln_reg_3073;

always @ (posedge ap_clk) begin
    sub_ln1117_reg_2695[1:0] <= 2'b00;
    zext_ln32_1_reg_2727[10:5] <= 6'b000000;
    zext_ln32_2_reg_2738[10:5] <= 6'b000000;
    sub_ln1117_1_reg_2784[1:0] <= 2'b00;
    zext_ln32_3_reg_2795[10:5] <= 6'b000000;
    or_ln14_reg_2846[0] <= 1'b1;
    or_ln14_reg_2846_pp0_iter1_reg[0] <= 1'b1;
    zext_ln23_1_reg_2856[0] <= 1'b1;
    zext_ln23_1_reg_2856[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln1116_19_reg_2917[0] <= 1'b1;
    zext_ln1116_19_reg_2917[4:3] <= 2'b00;
    zext_ln1116_18_reg_2967[0] <= 1'b1;
    zext_ln1116_18_reg_2967[5:3] <= 3'b000;
    conv_out_V_addr_1_reg_3153[0] <= 1'b1;
end

endmodule //conv_1
