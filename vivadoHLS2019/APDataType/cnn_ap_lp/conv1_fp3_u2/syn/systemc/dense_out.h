// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_out_HH_
#define _dense_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "cnn_mac_muladd_13wdI.h"
#include "dense_out_dense_otde.h"
#include "dense_out_dense_oudo.h"
#include "dense_out_dense_avdy.h"

namespace ap_rtl {

struct dense_out : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > dense_2_out_V_address0;
    sc_out< sc_logic > dense_2_out_V_ce0;
    sc_in< sc_lv<13> > dense_2_out_V_q0;
    sc_out< sc_lv<4> > prediction_V_address0;
    sc_out< sc_logic > prediction_V_ce0;
    sc_out< sc_logic > prediction_V_we0;
    sc_out< sc_lv<14> > prediction_V_d0;


    // Module declarations
    dense_out(sc_module_name name);
    SC_HAS_PROCESS(dense_out);

    ~dense_out();

    sc_trace_file* mVcdFile;

    dense_out_dense_otde* dense_out_weights_V_U;
    dense_out_dense_oudo* dense_out_bias_V_U;
    dense_out_dense_avdy* dense_array_V_U;
    soft_max* grp_soft_max_fu_157;
    cnn_mac_muladd_13wdI<1,1,13,9,22,22>* cnn_mac_muladd_13wdI_U61;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > dense_out_weights_V_address0;
    sc_signal< sc_logic > dense_out_weights_V_ce0;
    sc_signal< sc_lv<9> > dense_out_weights_V_q0;
    sc_signal< sc_lv<4> > dense_out_bias_V_address0;
    sc_signal< sc_logic > dense_out_bias_V_ce0;
    sc_signal< sc_lv<8> > dense_out_bias_V_q0;
    sc_signal< sc_lv<4> > d_fu_176_p2;
    sc_signal< sc_lv<4> > d_reg_295;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln48_fu_182_p1;
    sc_signal< sc_lv<64> > zext_ln48_reg_300;
    sc_signal< sc_lv<1> > icmp_ln41_fu_170_p2;
    sc_signal< sc_lv<9> > zext_ln46_fu_186_p1;
    sc_signal< sc_lv<9> > zext_ln46_reg_306;
    sc_signal< sc_lv<5> > f_fu_196_p2;
    sc_signal< sc_lv<5> > f_reg_314;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln46_fu_190_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > dense_array_V_address0;
    sc_signal< sc_logic > dense_array_V_ce0;
    sc_signal< sc_logic > dense_array_V_we0;
    sc_signal< sc_lv<14> > dense_array_V_d0;
    sc_signal< sc_lv<14> > dense_array_V_q0;
    sc_signal< sc_logic > grp_soft_max_fu_157_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_157_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_157_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_157_ap_ready;
    sc_signal< sc_lv<4> > grp_soft_max_fu_157_dense_array_V_address0;
    sc_signal< sc_logic > grp_soft_max_fu_157_dense_array_V_ce0;
    sc_signal< sc_logic > grp_soft_max_fu_157_dense_array_V_we0;
    sc_signal< sc_lv<14> > grp_soft_max_fu_157_dense_array_V_d0;
    sc_signal< sc_lv<4> > grp_soft_max_fu_157_prediction_V_address0;
    sc_signal< sc_logic > grp_soft_max_fu_157_prediction_V_ce0;
    sc_signal< sc_logic > grp_soft_max_fu_157_prediction_V_we0;
    sc_signal< sc_lv<14> > grp_soft_max_fu_157_prediction_V_d0;
    sc_signal< sc_lv<4> > d_0_reg_123;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > p_Val2_s_reg_134;
    sc_signal< sc_lv<5> > f_0_reg_146;
    sc_signal< sc_logic > grp_soft_max_fu_157_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln1116_2_fu_242_p1;
    sc_signal< sc_lv<64> > zext_ln48_1_fu_202_p1;
    sc_signal< sc_lv<14> > add_ln703_fu_276_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_207_p3;
    sc_signal< sc_lv<6> > tmp_1_fu_219_p3;
    sc_signal< sc_lv<9> > zext_ln1116_1_fu_227_p1;
    sc_signal< sc_lv<9> > zext_ln1116_fu_215_p1;
    sc_signal< sc_lv<9> > add_ln1116_fu_231_p2;
    sc_signal< sc_lv<9> > add_ln1116_1_fu_237_p2;
    sc_signal< sc_lv<22> > grp_fu_283_p3;
    sc_signal< sc_lv<14> > sext_ln1265_fu_272_p1;
    sc_signal< sc_lv<13> > grp_fu_283_p0;
    sc_signal< sc_lv<22> > grp_fu_283_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<22> > grp_fu_283_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1116_1_fu_237_p2();
    void thread_add_ln1116_fu_231_p2();
    void thread_add_ln703_fu_276_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_176_p2();
    void thread_dense_2_out_V_address0();
    void thread_dense_2_out_V_ce0();
    void thread_dense_array_V_address0();
    void thread_dense_array_V_ce0();
    void thread_dense_array_V_d0();
    void thread_dense_array_V_we0();
    void thread_dense_out_bias_V_address0();
    void thread_dense_out_bias_V_ce0();
    void thread_dense_out_weights_V_address0();
    void thread_dense_out_weights_V_ce0();
    void thread_f_fu_196_p2();
    void thread_grp_fu_283_p0();
    void thread_grp_fu_283_p00();
    void thread_grp_fu_283_p2();
    void thread_grp_soft_max_fu_157_ap_start();
    void thread_icmp_ln41_fu_170_p2();
    void thread_icmp_ln46_fu_190_p2();
    void thread_prediction_V_address0();
    void thread_prediction_V_ce0();
    void thread_prediction_V_d0();
    void thread_prediction_V_we0();
    void thread_sext_ln1265_fu_272_p1();
    void thread_tmp_1_fu_219_p3();
    void thread_tmp_s_fu_207_p3();
    void thread_zext_ln1116_1_fu_227_p1();
    void thread_zext_ln1116_2_fu_242_p1();
    void thread_zext_ln1116_fu_215_p1();
    void thread_zext_ln46_fu_186_p1();
    void thread_zext_ln48_1_fu_202_p1();
    void thread_zext_ln48_fu_182_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
