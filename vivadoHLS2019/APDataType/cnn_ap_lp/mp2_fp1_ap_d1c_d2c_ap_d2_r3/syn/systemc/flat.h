// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flat_HH_
#define _flat_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mux_255_14_1_1.h"

namespace ap_rtl {

struct flat : public sc_module {
    // Port declarations 85
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > max_pool_out_0_0_V_address0;
    sc_out< sc_logic > max_pool_out_0_0_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_0_0_V_q0;
    sc_out< sc_lv<4> > max_pool_out_0_1_V_address0;
    sc_out< sc_logic > max_pool_out_0_1_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_0_1_V_q0;
    sc_out< sc_lv<4> > max_pool_out_0_2_V_address0;
    sc_out< sc_logic > max_pool_out_0_2_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_0_2_V_q0;
    sc_out< sc_lv<4> > max_pool_out_0_3_V_address0;
    sc_out< sc_logic > max_pool_out_0_3_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_0_3_V_q0;
    sc_out< sc_lv<4> > max_pool_out_0_4_V_address0;
    sc_out< sc_logic > max_pool_out_0_4_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_0_4_V_q0;
    sc_out< sc_lv<4> > max_pool_out_1_0_V_address0;
    sc_out< sc_logic > max_pool_out_1_0_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_1_0_V_q0;
    sc_out< sc_lv<4> > max_pool_out_1_1_V_address0;
    sc_out< sc_logic > max_pool_out_1_1_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_1_1_V_q0;
    sc_out< sc_lv<4> > max_pool_out_1_2_V_address0;
    sc_out< sc_logic > max_pool_out_1_2_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_1_2_V_q0;
    sc_out< sc_lv<4> > max_pool_out_1_3_V_address0;
    sc_out< sc_logic > max_pool_out_1_3_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_1_3_V_q0;
    sc_out< sc_lv<4> > max_pool_out_1_4_V_address0;
    sc_out< sc_logic > max_pool_out_1_4_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_1_4_V_q0;
    sc_out< sc_lv<4> > max_pool_out_2_0_V_address0;
    sc_out< sc_logic > max_pool_out_2_0_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_2_0_V_q0;
    sc_out< sc_lv<4> > max_pool_out_2_1_V_address0;
    sc_out< sc_logic > max_pool_out_2_1_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_2_1_V_q0;
    sc_out< sc_lv<4> > max_pool_out_2_2_V_address0;
    sc_out< sc_logic > max_pool_out_2_2_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_2_2_V_q0;
    sc_out< sc_lv<4> > max_pool_out_2_3_V_address0;
    sc_out< sc_logic > max_pool_out_2_3_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_2_3_V_q0;
    sc_out< sc_lv<4> > max_pool_out_2_4_V_address0;
    sc_out< sc_logic > max_pool_out_2_4_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_2_4_V_q0;
    sc_out< sc_lv<4> > max_pool_out_3_0_V_address0;
    sc_out< sc_logic > max_pool_out_3_0_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_3_0_V_q0;
    sc_out< sc_lv<4> > max_pool_out_3_1_V_address0;
    sc_out< sc_logic > max_pool_out_3_1_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_3_1_V_q0;
    sc_out< sc_lv<4> > max_pool_out_3_2_V_address0;
    sc_out< sc_logic > max_pool_out_3_2_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_3_2_V_q0;
    sc_out< sc_lv<4> > max_pool_out_3_3_V_address0;
    sc_out< sc_logic > max_pool_out_3_3_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_3_3_V_q0;
    sc_out< sc_lv<4> > max_pool_out_3_4_V_address0;
    sc_out< sc_logic > max_pool_out_3_4_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_3_4_V_q0;
    sc_out< sc_lv<4> > max_pool_out_4_0_V_address0;
    sc_out< sc_logic > max_pool_out_4_0_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_4_0_V_q0;
    sc_out< sc_lv<4> > max_pool_out_4_1_V_address0;
    sc_out< sc_logic > max_pool_out_4_1_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_4_1_V_q0;
    sc_out< sc_lv<4> > max_pool_out_4_2_V_address0;
    sc_out< sc_logic > max_pool_out_4_2_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_4_2_V_q0;
    sc_out< sc_lv<4> > max_pool_out_4_3_V_address0;
    sc_out< sc_logic > max_pool_out_4_3_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_4_3_V_q0;
    sc_out< sc_lv<4> > max_pool_out_4_4_V_address0;
    sc_out< sc_logic > max_pool_out_4_4_V_ce0;
    sc_in< sc_lv<14> > max_pool_out_4_4_V_q0;
    sc_out< sc_lv<9> > flat_array_V_address0;
    sc_out< sc_logic > flat_array_V_ce0;
    sc_out< sc_logic > flat_array_V_we0;
    sc_out< sc_lv<14> > flat_array_V_d0;


    // Module declarations
    flat(sc_module_name name);
    SC_HAS_PROCESS(flat);

    ~flat();

    sc_trace_file* mVcdFile;

    cnn_mux_255_14_1_1<1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,5,14>* cnn_mux_255_14_1_1_U263;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > r_fu_509_p2;
    sc_signal< sc_lv<3> > r_reg_680;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<9> > i_fu_515_p2;
    sc_signal< sc_lv<9> > i_reg_685;
    sc_signal< sc_lv<1> > icmp_ln6_fu_503_p2;
    sc_signal< sc_lv<4> > zext_ln203_fu_521_p1;
    sc_signal< sc_lv<4> > zext_ln203_reg_690;
    sc_signal< sc_lv<5> > shl_ln_fu_525_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_695;
    sc_signal< sc_lv<3> > c_fu_539_p2;
    sc_signal< sc_lv<3> > c_reg_703;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > add_ln15_fu_545_p2;
    sc_signal< sc_lv<9> > add_ln15_reg_708;
    sc_signal< sc_lv<1> > icmp_ln9_fu_533_p2;
    sc_signal< sc_lv<5> > add_ln203_fu_564_p2;
    sc_signal< sc_lv<5> > add_ln203_reg_713;
    sc_signal< sc_lv<5> > f_fu_575_p2;
    sc_signal< sc_lv<5> > f_reg_721;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln12_fu_569_p2;
    sc_signal< sc_lv<9> > add_ln15_1_fu_671_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<9> > i_0_reg_436;
    sc_signal< sc_lv<3> > r_0_reg_448;
    sc_signal< sc_lv<9> > i_1_reg_459;
    sc_signal< sc_lv<3> > c_0_reg_470;
    sc_signal< sc_lv<9> > i_2_reg_481;
    sc_signal< sc_lv<5> > f_0_reg_492;
    sc_signal< sc_lv<64> > zext_ln14_1_fu_581_p1;
    sc_signal< sc_lv<64> > zext_ln14_fu_610_p1;
    sc_signal< sc_lv<14> > tmp_1_fu_615_p27;
    sc_signal< sc_lv<4> > zext_ln203_1_fu_551_p1;
    sc_signal< sc_lv<4> > add_ln203_1_fu_555_p2;
    sc_signal< sc_lv<5> > zext_ln203_2_fu_560_p1;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_50;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_10;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln15_1_fu_671_p2();
    void thread_add_ln15_fu_545_p2();
    void thread_add_ln203_1_fu_555_p2();
    void thread_add_ln203_fu_564_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_539_p2();
    void thread_f_fu_575_p2();
    void thread_flat_array_V_address0();
    void thread_flat_array_V_ce0();
    void thread_flat_array_V_d0();
    void thread_flat_array_V_we0();
    void thread_i_fu_515_p2();
    void thread_icmp_ln12_fu_569_p2();
    void thread_icmp_ln6_fu_503_p2();
    void thread_icmp_ln9_fu_533_p2();
    void thread_max_pool_out_0_0_V_address0();
    void thread_max_pool_out_0_0_V_ce0();
    void thread_max_pool_out_0_1_V_address0();
    void thread_max_pool_out_0_1_V_ce0();
    void thread_max_pool_out_0_2_V_address0();
    void thread_max_pool_out_0_2_V_ce0();
    void thread_max_pool_out_0_3_V_address0();
    void thread_max_pool_out_0_3_V_ce0();
    void thread_max_pool_out_0_4_V_address0();
    void thread_max_pool_out_0_4_V_ce0();
    void thread_max_pool_out_1_0_V_address0();
    void thread_max_pool_out_1_0_V_ce0();
    void thread_max_pool_out_1_1_V_address0();
    void thread_max_pool_out_1_1_V_ce0();
    void thread_max_pool_out_1_2_V_address0();
    void thread_max_pool_out_1_2_V_ce0();
    void thread_max_pool_out_1_3_V_address0();
    void thread_max_pool_out_1_3_V_ce0();
    void thread_max_pool_out_1_4_V_address0();
    void thread_max_pool_out_1_4_V_ce0();
    void thread_max_pool_out_2_0_V_address0();
    void thread_max_pool_out_2_0_V_ce0();
    void thread_max_pool_out_2_1_V_address0();
    void thread_max_pool_out_2_1_V_ce0();
    void thread_max_pool_out_2_2_V_address0();
    void thread_max_pool_out_2_2_V_ce0();
    void thread_max_pool_out_2_3_V_address0();
    void thread_max_pool_out_2_3_V_ce0();
    void thread_max_pool_out_2_4_V_address0();
    void thread_max_pool_out_2_4_V_ce0();
    void thread_max_pool_out_3_0_V_address0();
    void thread_max_pool_out_3_0_V_ce0();
    void thread_max_pool_out_3_1_V_address0();
    void thread_max_pool_out_3_1_V_ce0();
    void thread_max_pool_out_3_2_V_address0();
    void thread_max_pool_out_3_2_V_ce0();
    void thread_max_pool_out_3_3_V_address0();
    void thread_max_pool_out_3_3_V_ce0();
    void thread_max_pool_out_3_4_V_address0();
    void thread_max_pool_out_3_4_V_ce0();
    void thread_max_pool_out_4_0_V_address0();
    void thread_max_pool_out_4_0_V_ce0();
    void thread_max_pool_out_4_1_V_address0();
    void thread_max_pool_out_4_1_V_ce0();
    void thread_max_pool_out_4_2_V_address0();
    void thread_max_pool_out_4_2_V_ce0();
    void thread_max_pool_out_4_3_V_address0();
    void thread_max_pool_out_4_3_V_ce0();
    void thread_max_pool_out_4_4_V_address0();
    void thread_max_pool_out_4_4_V_ce0();
    void thread_r_fu_509_p2();
    void thread_shl_ln_fu_525_p3();
    void thread_zext_ln14_1_fu_581_p1();
    void thread_zext_ln14_fu_610_p1();
    void thread_zext_ln203_1_fu_551_p1();
    void thread_zext_ln203_2_fu_560_p1();
    void thread_zext_ln203_fu_521_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
