-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_1_out_0_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_0_V_ce0 : OUT STD_LOGIC;
    dense_1_out_0_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_0_V_ce1 : OUT STD_LOGIC;
    dense_1_out_0_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_1_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_1_V_ce0 : OUT STD_LOGIC;
    dense_1_out_1_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_1_V_ce1 : OUT STD_LOGIC;
    dense_1_out_1_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_2_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_2_V_ce0 : OUT STD_LOGIC;
    dense_1_out_2_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_2_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_2_V_ce1 : OUT STD_LOGIC;
    dense_1_out_2_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_3_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_3_V_ce0 : OUT STD_LOGIC;
    dense_1_out_3_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_3_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_3_V_ce1 : OUT STD_LOGIC;
    dense_1_out_3_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_4_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_4_V_ce0 : OUT STD_LOGIC;
    dense_1_out_4_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_1_out_4_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dense_1_out_4_V_ce1 : OUT STD_LOGIC;
    dense_1_out_4_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dense_2_out_V_ce0 : OUT STD_LOGIC;
    dense_2_out_V_we0 : OUT STD_LOGIC;
    dense_2_out_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
end;


architecture behav of dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_2_weights_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce0 : STD_LOGIC;
    signal dense_2_weights_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_weights_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce1 : STD_LOGIC;
    signal dense_2_weights_V_q1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_weights_V_address2 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce2 : STD_LOGIC;
    signal dense_2_weights_V_q2 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_weights_V_address3 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce3 : STD_LOGIC;
    signal dense_2_weights_V_q3 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_weights_V_address4 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_V_ce4 : STD_LOGIC;
    signal dense_2_weights_V_q4 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_2_bias_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_bias_V_ce0 : STD_LOGIC;
    signal dense_2_bias_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvars_iv34_reg_367 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvars_iv14_reg_379 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_0_reg_391 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_0_0_reg_403 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_415 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln13_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_419 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_423 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_427 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_431 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln9_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_441_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1325 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln14_fu_447_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_reg_1330 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_fu_451_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln13_reg_1336 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln13_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_reg_1350_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1116_5_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_5_reg_1404 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_out_0_V_loa_reg_1421 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_1_V_loa_reg_1426 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_2_V_loa_reg_1431 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_3_V_loa_reg_1436 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_4_V_loa_reg_1441 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_0_V_loa_1_reg_1451 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_1_V_loa_1_reg_1461 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln13_8_fu_930_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_8_reg_1481 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_9_fu_936_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln13_9_reg_1486 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln13_10_fu_942_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln13_10_reg_1491 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_58_reg_1496 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal i_0_reg_356 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_indvars_iv34_phi_fu_371_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_indvars_iv14_phi_fu_383_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_j_0_0_phi_fu_407_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1117_fu_496_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_1_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_2_fu_597_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_3_fu_643_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_4_fu_689_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_5_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal sext_ln1117_6_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_7_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_8_fu_879_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1117_9_fu_925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_461_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_43_fu_473_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_fu_469_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_1_fu_481_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_fu_485_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_fu_491_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln13_fu_510_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_44_fu_516_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_45_fu_528_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_2_fu_524_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_3_fu_536_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_1_fu_540_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_1_fu_546_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_fu_556_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_47_fu_562_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_48_fu_574_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_4_fu_570_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_5_fu_582_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_2_fu_586_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_2_fu_592_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_1_fu_602_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_50_fu_608_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_51_fu_620_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_6_fu_616_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_7_fu_628_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_3_fu_632_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_3_fu_638_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_2_fu_648_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_fu_654_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_54_fu_666_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_8_fu_662_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_9_fu_674_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_4_fu_678_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_4_fu_684_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_3_fu_700_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_56_fu_706_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_57_fu_718_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_10_fu_714_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_11_fu_726_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_5_fu_730_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_5_fu_736_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_4_fu_746_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_59_fu_752_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_60_fu_764_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_12_fu_760_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_13_fu_772_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_6_fu_776_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_6_fu_782_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_5_fu_792_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_62_fu_798_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_fu_810_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_14_fu_806_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_15_fu_818_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_7_fu_822_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_7_fu_828_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_6_fu_838_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_65_fu_844_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_66_fu_856_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_16_fu_852_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_17_fu_864_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_8_fu_868_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_8_fu_874_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln13_7_fu_884_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_68_fu_890_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_69_fu_902_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1117_18_fu_898_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1117_19_fu_910_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1117_9_fu_914_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln1117_9_fu_920_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1231_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_46_fu_970_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1240_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_49_fu_994_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1249_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_52_fu_1018_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1258_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_55_fu_1042_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1267_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1276_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_61_fu_1089_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1285_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_64_fu_1114_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1294_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_67_fu_1139_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1303_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_70_fu_1164_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1312_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1265_fu_1190_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln703_fu_1198_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1265_fu_1190_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_fu_1198_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln703_fu_1194_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_fu_1202_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_4_fu_1214_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_fu_1208_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1231_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1231_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1240_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1240_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1249_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1249_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1258_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1258_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1267_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1267_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1276_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1276_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1285_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1285_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1294_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1294_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1303_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1303_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1312_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1312_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1231_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1240_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1249_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1258_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1267_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1276_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1285_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1294_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1303_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1312_p10 : STD_LOGIC_VECTOR (21 downto 0);

    component cnn_mac_muladd_9sbom IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component dense_2_dense_2_wbml IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address2 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address3 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address4 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component dense_2_dense_2_bbnm IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;



begin
    dense_2_weights_V_U : component dense_2_dense_2_wbml
    generic map (
        DataWidth => 9,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_weights_V_address0,
        ce0 => dense_2_weights_V_ce0,
        q0 => dense_2_weights_V_q0,
        address1 => dense_2_weights_V_address1,
        ce1 => dense_2_weights_V_ce1,
        q1 => dense_2_weights_V_q1,
        address2 => dense_2_weights_V_address2,
        ce2 => dense_2_weights_V_ce2,
        q2 => dense_2_weights_V_q2,
        address3 => dense_2_weights_V_address3,
        ce3 => dense_2_weights_V_ce3,
        q3 => dense_2_weights_V_q3,
        address4 => dense_2_weights_V_address4,
        ce4 => dense_2_weights_V_ce4,
        q4 => dense_2_weights_V_q4);

    dense_2_bias_V_U : component dense_2_dense_2_bbnm
    generic map (
        DataWidth => 9,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_bias_V_address0,
        ce0 => dense_2_bias_V_ce0,
        q0 => dense_2_bias_V_q0);

    cnn_mac_muladd_9sbom_U503 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_415,
        din1 => grp_fu_1231_p1,
        din2 => grp_fu_1231_p2,
        dout => grp_fu_1231_p3);

    cnn_mac_muladd_9sbom_U504 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_419,
        din1 => grp_fu_1240_p1,
        din2 => grp_fu_1240_p2,
        dout => grp_fu_1240_p3);

    cnn_mac_muladd_9sbom_U505 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_423,
        din1 => grp_fu_1249_p1,
        din2 => grp_fu_1249_p2,
        dout => grp_fu_1249_p3);

    cnn_mac_muladd_9sbom_U506 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_427,
        din1 => grp_fu_1258_p1,
        din2 => grp_fu_1258_p2,
        dout => grp_fu_1258_p3);

    cnn_mac_muladd_9sbom_U507 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_431,
        din1 => grp_fu_1267_p1,
        din2 => grp_fu_1267_p2,
        dout => grp_fu_1267_p3);

    cnn_mac_muladd_9sbom_U508 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_415,
        din1 => grp_fu_1276_p1,
        din2 => grp_fu_1276_p2,
        dout => grp_fu_1276_p3);

    cnn_mac_muladd_9sbom_U509 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_419,
        din1 => grp_fu_1285_p1,
        din2 => grp_fu_1285_p2,
        dout => grp_fu_1285_p3);

    cnn_mac_muladd_9sbom_U510 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_423,
        din1 => grp_fu_1294_p1,
        din2 => grp_fu_1294_p2,
        dout => grp_fu_1294_p3);

    cnn_mac_muladd_9sbom_U511 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_427,
        din1 => grp_fu_1303_p1,
        din2 => grp_fu_1303_p2,
        dout => grp_fu_1303_p3);

    cnn_mac_muladd_9sbom_U512 : component cnn_mac_muladd_9sbom
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 13,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => reg_431,
        din1 => grp_fu_1312_p1,
        din2 => grp_fu_1312_p2,
        dout => grp_fu_1312_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_0_reg_356 <= i_reg_1325;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_356 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvars_iv14_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                indvars_iv14_reg_379 <= ap_const_lv4_1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
                indvars_iv14_reg_379 <= add_ln13_9_reg_1486;
            end if; 
        end if;
    end process;

    indvars_iv34_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                indvars_iv34_reg_367 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
                indvars_iv34_reg_367 <= add_ln13_10_reg_1491;
            end if; 
        end if;
    end process;

    j_0_0_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                j_0_0_reg_403 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
                j_0_0_reg_403 <= add_ln13_8_reg_1481;
            end if; 
        end if;
    end process;

    p_Val2_0_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then 
                p_Val2_0_reg_391 <= ap_const_lv14_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1350_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                p_Val2_0_reg_391 <= grp_fu_1312_p3(21 downto 8);
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1350 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln13_10_reg_1491 <= add_ln13_10_fu_942_p2;
                add_ln13_8_reg_1481 <= add_ln13_8_fu_930_p2;
                add_ln13_9_reg_1486 <= add_ln13_9_fu_936_p2;
                dense_1_out_0_V_loa_1_reg_1451 <= dense_1_out_0_V_q1;
                dense_1_out_0_V_loa_reg_1421 <= dense_1_out_0_V_q0;
                dense_1_out_1_V_loa_1_reg_1461 <= dense_1_out_1_V_q1;
                dense_1_out_1_V_loa_reg_1426 <= dense_1_out_1_V_q0;
                dense_1_out_2_V_loa_reg_1431 <= dense_1_out_2_V_q0;
                dense_1_out_3_V_loa_reg_1436 <= dense_1_out_3_V_q0;
                dense_1_out_4_V_loa_reg_1441 <= dense_1_out_4_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1325 <= i_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln13_reg_1350 <= icmp_ln13_fu_455_p2;
                icmp_ln13_reg_1350_pp0_iter1_reg <= icmp_ln13_reg_1350;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1350 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_1350 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_415 <= dense_2_weights_V_q0;
                reg_419 <= dense_2_weights_V_q1;
                reg_423 <= dense_2_weights_V_q2;
                reg_427 <= dense_2_weights_V_q3;
                reg_431 <= dense_2_weights_V_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then
                tmp_58_reg_1496 <= grp_fu_1267_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln13_fu_455_p2 = ap_const_lv1_0))) then
                    zext_ln1116_5_reg_1404(3 downto 0) <= zext_ln1116_5_fu_694_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_0))) then
                    zext_ln13_reg_1336(4 downto 0) <= zext_ln13_fu_451_p1(4 downto 0);
                    zext_ln14_reg_1330(4 downto 0) <= zext_ln14_fu_447_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln14_reg_1330(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln13_reg_1336(11 downto 5) <= "0000000";
    zext_ln1116_5_reg_1404(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln9_fu_435_p2, ap_CS_fsm_state2, icmp_ln13_fu_455_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_fu_455_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_fu_455_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1117_1_fu_546_p2 <= std_logic_vector(unsigned(sub_ln1117_1_fu_540_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_2_fu_592_p2 <= std_logic_vector(unsigned(sub_ln1117_2_fu_586_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_3_fu_638_p2 <= std_logic_vector(unsigned(sub_ln1117_3_fu_632_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_4_fu_684_p2 <= std_logic_vector(unsigned(sub_ln1117_4_fu_678_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_5_fu_736_p2 <= std_logic_vector(unsigned(sub_ln1117_5_fu_730_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_6_fu_782_p2 <= std_logic_vector(unsigned(sub_ln1117_6_fu_776_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_7_fu_828_p2 <= std_logic_vector(unsigned(sub_ln1117_7_fu_822_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_8_fu_874_p2 <= std_logic_vector(unsigned(sub_ln1117_8_fu_868_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_9_fu_920_p2 <= std_logic_vector(unsigned(sub_ln1117_9_fu_914_p2) + unsigned(zext_ln13_reg_1336));
    add_ln1117_fu_491_p2 <= std_logic_vector(unsigned(sub_ln1117_fu_485_p2) + unsigned(zext_ln13_reg_1336));
    add_ln13_10_fu_942_p2 <= std_logic_vector(unsigned(indvars_iv34_reg_367) + unsigned(ap_const_lv4_2));
    add_ln13_1_fu_602_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_0_0_phi_fu_407_p4) + unsigned(ap_const_lv6_3));
    add_ln13_2_fu_648_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_0_0_phi_fu_407_p4) + unsigned(ap_const_lv6_4));
    add_ln13_3_fu_700_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_5));
    add_ln13_4_fu_746_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_6));
    add_ln13_5_fu_792_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_7));
    add_ln13_6_fu_838_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_8));
    add_ln13_7_fu_884_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_9));
    add_ln13_8_fu_930_p2 <= std_logic_vector(unsigned(j_0_0_reg_403) + unsigned(ap_const_lv6_A));
    add_ln13_9_fu_936_p2 <= std_logic_vector(unsigned(indvars_iv14_reg_379) + unsigned(ap_const_lv4_2));
    add_ln13_fu_556_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_0_0_phi_fu_407_p4) + unsigned(ap_const_lv6_2));
    add_ln203_fu_1208_p2 <= std_logic_vector(signed(sext_ln703_fu_1198_p1) + signed(trunc_ln703_fu_1194_p1));
    add_ln703_fu_1202_p2 <= std_logic_vector(unsigned(p_Val2_0_reg_391) + unsigned(sext_ln1265_fu_1190_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln13_fu_455_p2)
    begin
        if ((icmp_ln13_fu_455_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln9_fu_435_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvars_iv14_phi_fu_383_p4_assign_proc : process(indvars_iv14_reg_379, icmp_ln13_reg_1350, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln13_9_reg_1486, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv14_phi_fu_383_p4 <= add_ln13_9_reg_1486;
        else 
            ap_phi_mux_indvars_iv14_phi_fu_383_p4 <= indvars_iv14_reg_379;
        end if; 
    end process;


    ap_phi_mux_indvars_iv34_phi_fu_371_p4_assign_proc : process(indvars_iv34_reg_367, icmp_ln13_reg_1350, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln13_10_reg_1491, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv34_phi_fu_371_p4 <= add_ln13_10_reg_1491;
        else 
            ap_phi_mux_indvars_iv34_phi_fu_371_p4 <= indvars_iv34_reg_367;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_407_p4_assign_proc : process(j_0_0_reg_403, icmp_ln13_reg_1350, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln13_8_reg_1481, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_reg_1350 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_0_phi_fu_407_p4 <= add_ln13_8_reg_1481;
        else 
            ap_phi_mux_j_0_0_phi_fu_407_p4 <= j_0_0_reg_403;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln9_fu_435_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_435_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_out_0_V_address0 <= zext_ln1116_fu_501_p1(4 - 1 downto 0);
    dense_1_out_0_V_address1 <= zext_ln1116_5_fu_694_p1(4 - 1 downto 0);

    dense_1_out_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_0_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_0_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_0_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_out_1_V_address0 <= zext_ln1116_fu_501_p1(4 - 1 downto 0);
    dense_1_out_1_V_address1 <= zext_ln1116_5_fu_694_p1(4 - 1 downto 0);

    dense_1_out_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_1_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_1_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_1_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_out_2_V_address0 <= zext_ln1116_fu_501_p1(4 - 1 downto 0);
    dense_1_out_2_V_address1 <= zext_ln1116_5_reg_1404(4 - 1 downto 0);

    dense_1_out_2_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_2_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_2_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_out_3_V_address0 <= zext_ln1116_fu_501_p1(4 - 1 downto 0);
    dense_1_out_3_V_address1 <= zext_ln1116_5_reg_1404(4 - 1 downto 0);

    dense_1_out_3_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_3_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_3_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_out_4_V_address0 <= zext_ln1116_fu_501_p1(4 - 1 downto 0);
    dense_1_out_4_V_address1 <= zext_ln1116_5_reg_1404(4 - 1 downto 0);

    dense_1_out_4_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_4_V_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_4_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_1_out_4_V_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_bias_V_address0 <= zext_ln14_reg_1330(5 - 1 downto 0);

    dense_2_bias_V_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_2_bias_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_V_address0 <= zext_ln14_reg_1330(5 - 1 downto 0);

    dense_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_2_out_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_V_d0 <= 
        ap_const_lv13_0 when (tmp_4_fu_1214_p3(0) = '1') else 
        add_ln203_fu_1208_p2;

    dense_2_out_V_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_2_out_V_we0 <= ap_const_logic_1;
        else 
            dense_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln1117_fu_496_p1, sext_ln1117_5_fu_741_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address0 <= sext_ln1117_5_fu_741_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address0 <= sext_ln1117_fu_496_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln1117_1_fu_551_p1, ap_block_pp0_stage1, sext_ln1117_6_fu_787_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address1 <= sext_ln1117_6_fu_787_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address1 <= sext_ln1117_1_fu_551_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_address2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln1117_2_fu_597_p1, ap_block_pp0_stage1, sext_ln1117_7_fu_833_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address2 <= sext_ln1117_7_fu_833_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address2 <= sext_ln1117_2_fu_597_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address2 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address2 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_address3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln1117_3_fu_643_p1, ap_block_pp0_stage1, sext_ln1117_8_fu_879_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address3 <= sext_ln1117_8_fu_879_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address3 <= sext_ln1117_3_fu_643_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address3 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address3 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_address4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln1117_4_fu_689_p1, ap_block_pp0_stage1, sext_ln1117_9_fu_925_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_V_address4 <= sext_ln1117_9_fu_925_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_V_address4 <= sext_ln1117_4_fu_689_p1(11 - 1 downto 0);
            else 
                dense_2_weights_V_address4 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_V_address4 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce2 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce3 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_V_ce4 <= ap_const_logic_1;
        else 
            dense_2_weights_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1231_p1 <= grp_fu_1231_p10(13 - 1 downto 0);
    grp_fu_1231_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_0_V_loa_reg_1421),22));
    grp_fu_1231_p2 <= (p_Val2_0_reg_391 & ap_const_lv8_0);
    grp_fu_1240_p1 <= grp_fu_1240_p10(13 - 1 downto 0);
    grp_fu_1240_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_1_V_loa_reg_1426),22));
    grp_fu_1240_p2 <= (tmp_46_fu_970_p4 & ap_const_lv8_0);
    grp_fu_1249_p1 <= grp_fu_1249_p10(13 - 1 downto 0);
    grp_fu_1249_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_2_V_loa_reg_1431),22));
    grp_fu_1249_p2 <= (tmp_49_fu_994_p4 & ap_const_lv8_0);
    grp_fu_1258_p1 <= grp_fu_1258_p10(13 - 1 downto 0);
    grp_fu_1258_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_3_V_loa_reg_1436),22));
    grp_fu_1258_p2 <= (tmp_52_fu_1018_p4 & ap_const_lv8_0);
    grp_fu_1267_p1 <= grp_fu_1267_p10(13 - 1 downto 0);
    grp_fu_1267_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_4_V_loa_reg_1441),22));
    grp_fu_1267_p2 <= (tmp_55_fu_1042_p4 & ap_const_lv8_0);
    grp_fu_1276_p1 <= grp_fu_1276_p10(13 - 1 downto 0);
    grp_fu_1276_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_0_V_loa_1_reg_1451),22));
    grp_fu_1276_p2 <= (tmp_58_reg_1496 & ap_const_lv8_0);
    grp_fu_1285_p1 <= grp_fu_1285_p10(13 - 1 downto 0);
    grp_fu_1285_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_1_V_loa_1_reg_1461),22));
    grp_fu_1285_p2 <= (tmp_61_fu_1089_p4 & ap_const_lv8_0);
    grp_fu_1294_p1 <= grp_fu_1294_p10(13 - 1 downto 0);
    grp_fu_1294_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_2_V_q1),22));
    grp_fu_1294_p2 <= (tmp_64_fu_1114_p4 & ap_const_lv8_0);
    grp_fu_1303_p1 <= grp_fu_1303_p10(13 - 1 downto 0);
    grp_fu_1303_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_3_V_q1),22));
    grp_fu_1303_p2 <= (tmp_67_fu_1139_p4 & ap_const_lv8_0);
    grp_fu_1312_p1 <= grp_fu_1312_p10(13 - 1 downto 0);
    grp_fu_1312_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_1_out_4_V_q1),22));
    grp_fu_1312_p2 <= (tmp_70_fu_1164_p4 & ap_const_lv8_0);
    i_fu_441_p2 <= std_logic_vector(unsigned(i_0_reg_356) + unsigned(ap_const_lv5_1));
    icmp_ln13_fu_455_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_407_p4 = ap_const_lv6_32) else "0";
    icmp_ln9_fu_435_p2 <= "1" when (i_0_reg_356 = ap_const_lv5_1E) else "0";
    or_ln13_fu_510_p2 <= (ap_phi_mux_j_0_0_phi_fu_407_p4 or ap_const_lv6_1);
        sext_ln1117_1_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_1_fu_546_p2),64));

        sext_ln1117_2_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_2_fu_592_p2),64));

        sext_ln1117_3_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_3_fu_638_p2),64));

        sext_ln1117_4_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_4_fu_684_p2),64));

        sext_ln1117_5_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_5_fu_736_p2),64));

        sext_ln1117_6_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_6_fu_782_p2),64));

        sext_ln1117_7_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_7_fu_828_p2),64));

        sext_ln1117_8_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_8_fu_874_p2),64));

        sext_ln1117_9_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_9_fu_920_p2),64));

        sext_ln1117_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1117_fu_491_p2),64));

    sext_ln1265_fu_1190_p0 <= dense_2_bias_V_q0;
        sext_ln1265_fu_1190_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1265_fu_1190_p0),14));

    sext_ln703_fu_1198_p0 <= dense_2_bias_V_q0;
        sext_ln703_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_1198_p0),13));

    sub_ln1117_1_fu_540_p2 <= std_logic_vector(unsigned(zext_ln1117_2_fu_524_p1) - unsigned(zext_ln1117_3_fu_536_p1));
    sub_ln1117_2_fu_586_p2 <= std_logic_vector(unsigned(zext_ln1117_4_fu_570_p1) - unsigned(zext_ln1117_5_fu_582_p1));
    sub_ln1117_3_fu_632_p2 <= std_logic_vector(unsigned(zext_ln1117_6_fu_616_p1) - unsigned(zext_ln1117_7_fu_628_p1));
    sub_ln1117_4_fu_678_p2 <= std_logic_vector(unsigned(zext_ln1117_8_fu_662_p1) - unsigned(zext_ln1117_9_fu_674_p1));
    sub_ln1117_5_fu_730_p2 <= std_logic_vector(unsigned(zext_ln1117_10_fu_714_p1) - unsigned(zext_ln1117_11_fu_726_p1));
    sub_ln1117_6_fu_776_p2 <= std_logic_vector(unsigned(zext_ln1117_12_fu_760_p1) - unsigned(zext_ln1117_13_fu_772_p1));
    sub_ln1117_7_fu_822_p2 <= std_logic_vector(unsigned(zext_ln1117_14_fu_806_p1) - unsigned(zext_ln1117_15_fu_818_p1));
    sub_ln1117_8_fu_868_p2 <= std_logic_vector(unsigned(zext_ln1117_16_fu_852_p1) - unsigned(zext_ln1117_17_fu_864_p1));
    sub_ln1117_9_fu_914_p2 <= std_logic_vector(unsigned(zext_ln1117_18_fu_898_p1) - unsigned(zext_ln1117_19_fu_910_p1));
    sub_ln1117_fu_485_p2 <= std_logic_vector(unsigned(zext_ln1117_fu_469_p1) - unsigned(zext_ln1117_1_fu_481_p1));
    tmp_43_fu_473_p3 <= (ap_phi_mux_j_0_0_phi_fu_407_p4 & ap_const_lv1_0);
    tmp_44_fu_516_p3 <= (or_ln13_fu_510_p2 & ap_const_lv5_0);
    tmp_45_fu_528_p3 <= (or_ln13_fu_510_p2 & ap_const_lv1_0);
    tmp_46_fu_970_p4 <= grp_fu_1231_p3(21 downto 8);
    tmp_47_fu_562_p3 <= (add_ln13_fu_556_p2 & ap_const_lv5_0);
    tmp_48_fu_574_p3 <= (add_ln13_fu_556_p2 & ap_const_lv1_0);
    tmp_49_fu_994_p4 <= grp_fu_1240_p3(21 downto 8);
    tmp_4_fu_1214_p3 <= add_ln703_fu_1202_p2(13 downto 13);
    tmp_50_fu_608_p3 <= (add_ln13_1_fu_602_p2 & ap_const_lv5_0);
    tmp_51_fu_620_p3 <= (add_ln13_1_fu_602_p2 & ap_const_lv1_0);
    tmp_52_fu_1018_p4 <= grp_fu_1249_p3(21 downto 8);
    tmp_53_fu_654_p3 <= (add_ln13_2_fu_648_p2 & ap_const_lv5_0);
    tmp_54_fu_666_p3 <= (add_ln13_2_fu_648_p2 & ap_const_lv1_0);
    tmp_55_fu_1042_p4 <= grp_fu_1258_p3(21 downto 8);
    tmp_56_fu_706_p3 <= (add_ln13_3_fu_700_p2 & ap_const_lv5_0);
    tmp_57_fu_718_p3 <= (add_ln13_3_fu_700_p2 & ap_const_lv1_0);
    tmp_59_fu_752_p3 <= (add_ln13_4_fu_746_p2 & ap_const_lv5_0);
    tmp_60_fu_764_p3 <= (add_ln13_4_fu_746_p2 & ap_const_lv1_0);
    tmp_61_fu_1089_p4 <= grp_fu_1276_p3(21 downto 8);
    tmp_62_fu_798_p3 <= (add_ln13_5_fu_792_p2 & ap_const_lv5_0);
    tmp_63_fu_810_p3 <= (add_ln13_5_fu_792_p2 & ap_const_lv1_0);
    tmp_64_fu_1114_p4 <= grp_fu_1285_p3(21 downto 8);
    tmp_65_fu_844_p3 <= (add_ln13_6_fu_838_p2 & ap_const_lv5_0);
    tmp_66_fu_856_p3 <= (add_ln13_6_fu_838_p2 & ap_const_lv1_0);
    tmp_67_fu_1139_p4 <= grp_fu_1294_p3(21 downto 8);
    tmp_68_fu_890_p3 <= (add_ln13_7_fu_884_p2 & ap_const_lv5_0);
    tmp_69_fu_902_p3 <= (add_ln13_7_fu_884_p2 & ap_const_lv1_0);
    tmp_70_fu_1164_p4 <= grp_fu_1303_p3(21 downto 8);
    tmp_s_fu_461_p3 <= (ap_phi_mux_j_0_0_phi_fu_407_p4 & ap_const_lv5_0);
    trunc_ln703_fu_1194_p1 <= p_Val2_0_reg_391(13 - 1 downto 0);
    zext_ln1116_5_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_indvars_iv14_phi_fu_383_p4),64));
    zext_ln1116_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_indvars_iv34_phi_fu_371_p4),64));
    zext_ln1117_10_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_706_p3),12));
    zext_ln1117_11_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_718_p3),12));
    zext_ln1117_12_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_752_p3),12));
    zext_ln1117_13_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_764_p3),12));
    zext_ln1117_14_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_798_p3),12));
    zext_ln1117_15_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_810_p3),12));
    zext_ln1117_16_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_844_p3),12));
    zext_ln1117_17_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_856_p3),12));
    zext_ln1117_18_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_890_p3),12));
    zext_ln1117_19_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_902_p3),12));
    zext_ln1117_1_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_473_p3),12));
    zext_ln1117_2_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_516_p3),12));
    zext_ln1117_3_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_528_p3),12));
    zext_ln1117_4_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_562_p3),12));
    zext_ln1117_5_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_574_p3),12));
    zext_ln1117_6_fu_616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_608_p3),12));
    zext_ln1117_7_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_620_p3),12));
    zext_ln1117_8_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_53_fu_654_p3),12));
    zext_ln1117_9_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_666_p3),12));
    zext_ln1117_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_461_p3),12));
    zext_ln13_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_356),12));
    zext_ln14_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_356),64));
end behav;
