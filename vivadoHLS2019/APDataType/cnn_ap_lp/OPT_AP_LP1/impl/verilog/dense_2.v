// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_1_out_0_V_address0,
        dense_1_out_0_V_ce0,
        dense_1_out_0_V_q0,
        dense_1_out_0_V_address1,
        dense_1_out_0_V_ce1,
        dense_1_out_0_V_q1,
        dense_1_out_1_V_address0,
        dense_1_out_1_V_ce0,
        dense_1_out_1_V_q0,
        dense_1_out_1_V_address1,
        dense_1_out_1_V_ce1,
        dense_1_out_1_V_q1,
        dense_1_out_2_V_address0,
        dense_1_out_2_V_ce0,
        dense_1_out_2_V_q0,
        dense_1_out_2_V_address1,
        dense_1_out_2_V_ce1,
        dense_1_out_2_V_q1,
        dense_1_out_3_V_address0,
        dense_1_out_3_V_ce0,
        dense_1_out_3_V_q0,
        dense_1_out_3_V_address1,
        dense_1_out_3_V_ce1,
        dense_1_out_3_V_q1,
        dense_1_out_4_V_address0,
        dense_1_out_4_V_ce0,
        dense_1_out_4_V_q0,
        dense_1_out_4_V_address1,
        dense_1_out_4_V_ce1,
        dense_1_out_4_V_q1,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_we0,
        dense_2_out_V_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_pp0_stage1 = 6'd8;
parameter    ap_ST_fsm_state7 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] dense_1_out_0_V_address0;
output   dense_1_out_0_V_ce0;
input  [12:0] dense_1_out_0_V_q0;
output  [3:0] dense_1_out_0_V_address1;
output   dense_1_out_0_V_ce1;
input  [12:0] dense_1_out_0_V_q1;
output  [3:0] dense_1_out_1_V_address0;
output   dense_1_out_1_V_ce0;
input  [12:0] dense_1_out_1_V_q0;
output  [3:0] dense_1_out_1_V_address1;
output   dense_1_out_1_V_ce1;
input  [12:0] dense_1_out_1_V_q1;
output  [3:0] dense_1_out_2_V_address0;
output   dense_1_out_2_V_ce0;
input  [12:0] dense_1_out_2_V_q0;
output  [3:0] dense_1_out_2_V_address1;
output   dense_1_out_2_V_ce1;
input  [12:0] dense_1_out_2_V_q1;
output  [3:0] dense_1_out_3_V_address0;
output   dense_1_out_3_V_ce0;
input  [12:0] dense_1_out_3_V_q0;
output  [3:0] dense_1_out_3_V_address1;
output   dense_1_out_3_V_ce1;
input  [12:0] dense_1_out_3_V_q1;
output  [3:0] dense_1_out_4_V_address0;
output   dense_1_out_4_V_ce0;
input  [12:0] dense_1_out_4_V_q0;
output  [3:0] dense_1_out_4_V_address1;
output   dense_1_out_4_V_ce1;
input  [12:0] dense_1_out_4_V_q1;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
output   dense_2_out_V_we0;
output  [12:0] dense_2_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_1_out_0_V_ce0;
reg dense_1_out_0_V_ce1;
reg dense_1_out_1_V_ce0;
reg dense_1_out_1_V_ce1;
reg dense_1_out_2_V_ce0;
reg dense_1_out_2_V_ce1;
reg dense_1_out_3_V_ce0;
reg dense_1_out_3_V_ce1;
reg dense_1_out_4_V_ce0;
reg dense_1_out_4_V_ce1;
reg dense_2_out_V_ce0;
reg dense_2_out_V_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire   [8:0] dense_2_weights_V_q0;
reg   [10:0] dense_2_weights_V_address1;
reg    dense_2_weights_V_ce1;
wire   [8:0] dense_2_weights_V_q1;
reg   [10:0] dense_2_weights_V_address2;
reg    dense_2_weights_V_ce2;
wire   [8:0] dense_2_weights_V_q2;
reg   [10:0] dense_2_weights_V_address3;
reg    dense_2_weights_V_ce3;
wire   [8:0] dense_2_weights_V_q3;
reg   [10:0] dense_2_weights_V_address4;
reg    dense_2_weights_V_ce4;
wire   [8:0] dense_2_weights_V_q4;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
reg   [3:0] indvars_iv34_reg_367;
reg   [3:0] indvars_iv14_reg_379;
reg   [13:0] p_Val2_0_reg_391;
reg   [5:0] j_0_0_reg_403;
reg  signed [8:0] reg_415;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln13_reg_1350;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg  signed [8:0] reg_419;
reg  signed [8:0] reg_423;
reg  signed [8:0] reg_427;
reg  signed [8:0] reg_431;
wire   [0:0] icmp_ln9_fu_435_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_441_p2;
reg   [4:0] i_reg_1325;
wire   [63:0] zext_ln14_fu_447_p1;
reg   [63:0] zext_ln14_reg_1330;
wire   [11:0] zext_ln13_fu_451_p1;
reg   [11:0] zext_ln13_reg_1336;
wire   [0:0] icmp_ln13_fu_455_p2;
reg   [0:0] icmp_ln13_reg_1350_pp0_iter1_reg;
wire   [63:0] zext_ln1116_5_fu_694_p1;
reg   [63:0] zext_ln1116_5_reg_1404;
reg   [12:0] dense_1_out_0_V_loa_reg_1421;
reg   [12:0] dense_1_out_1_V_loa_reg_1426;
reg   [12:0] dense_1_out_2_V_loa_reg_1431;
reg   [12:0] dense_1_out_3_V_loa_reg_1436;
reg   [12:0] dense_1_out_4_V_loa_reg_1441;
reg   [12:0] dense_1_out_0_V_loa_1_reg_1451;
reg   [12:0] dense_1_out_1_V_loa_1_reg_1461;
wire   [5:0] add_ln13_8_fu_930_p2;
reg   [5:0] add_ln13_8_reg_1481;
wire   [3:0] add_ln13_9_fu_936_p2;
reg   [3:0] add_ln13_9_reg_1486;
wire   [3:0] add_ln13_10_fu_942_p2;
reg   [3:0] add_ln13_10_reg_1491;
reg   [13:0] tmp_58_reg_1496;
wire    ap_CS_fsm_state7;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage1_subdone;
reg   [4:0] i_0_reg_356;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_phi_mux_indvars_iv34_phi_fu_371_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_indvars_iv14_phi_fu_383_p4;
reg   [5:0] ap_phi_mux_j_0_0_phi_fu_407_p4;
wire  signed [63:0] sext_ln1117_fu_496_p1;
wire   [63:0] zext_ln1116_fu_501_p1;
wire  signed [63:0] sext_ln1117_1_fu_551_p1;
wire  signed [63:0] sext_ln1117_2_fu_597_p1;
wire  signed [63:0] sext_ln1117_3_fu_643_p1;
wire  signed [63:0] sext_ln1117_4_fu_689_p1;
wire  signed [63:0] sext_ln1117_5_fu_741_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] sext_ln1117_6_fu_787_p1;
wire  signed [63:0] sext_ln1117_7_fu_833_p1;
wire  signed [63:0] sext_ln1117_8_fu_879_p1;
wire  signed [63:0] sext_ln1117_9_fu_925_p1;
wire   [10:0] tmp_s_fu_461_p3;
wire   [6:0] tmp_43_fu_473_p3;
wire   [11:0] zext_ln1117_fu_469_p1;
wire   [11:0] zext_ln1117_1_fu_481_p1;
wire   [11:0] sub_ln1117_fu_485_p2;
wire   [11:0] add_ln1117_fu_491_p2;
wire   [5:0] or_ln13_fu_510_p2;
wire   [10:0] tmp_44_fu_516_p3;
wire   [6:0] tmp_45_fu_528_p3;
wire   [11:0] zext_ln1117_2_fu_524_p1;
wire   [11:0] zext_ln1117_3_fu_536_p1;
wire   [11:0] sub_ln1117_1_fu_540_p2;
wire   [11:0] add_ln1117_1_fu_546_p2;
wire   [5:0] add_ln13_fu_556_p2;
wire   [10:0] tmp_47_fu_562_p3;
wire   [6:0] tmp_48_fu_574_p3;
wire   [11:0] zext_ln1117_4_fu_570_p1;
wire   [11:0] zext_ln1117_5_fu_582_p1;
wire   [11:0] sub_ln1117_2_fu_586_p2;
wire   [11:0] add_ln1117_2_fu_592_p2;
wire   [5:0] add_ln13_1_fu_602_p2;
wire   [10:0] tmp_50_fu_608_p3;
wire   [6:0] tmp_51_fu_620_p3;
wire   [11:0] zext_ln1117_6_fu_616_p1;
wire   [11:0] zext_ln1117_7_fu_628_p1;
wire   [11:0] sub_ln1117_3_fu_632_p2;
wire   [11:0] add_ln1117_3_fu_638_p2;
wire   [5:0] add_ln13_2_fu_648_p2;
wire   [10:0] tmp_53_fu_654_p3;
wire   [6:0] tmp_54_fu_666_p3;
wire   [11:0] zext_ln1117_8_fu_662_p1;
wire   [11:0] zext_ln1117_9_fu_674_p1;
wire   [11:0] sub_ln1117_4_fu_678_p2;
wire   [11:0] add_ln1117_4_fu_684_p2;
wire   [5:0] add_ln13_3_fu_700_p2;
wire   [10:0] tmp_56_fu_706_p3;
wire   [6:0] tmp_57_fu_718_p3;
wire   [11:0] zext_ln1117_10_fu_714_p1;
wire   [11:0] zext_ln1117_11_fu_726_p1;
wire   [11:0] sub_ln1117_5_fu_730_p2;
wire   [11:0] add_ln1117_5_fu_736_p2;
wire   [5:0] add_ln13_4_fu_746_p2;
wire   [10:0] tmp_59_fu_752_p3;
wire   [6:0] tmp_60_fu_764_p3;
wire   [11:0] zext_ln1117_12_fu_760_p1;
wire   [11:0] zext_ln1117_13_fu_772_p1;
wire   [11:0] sub_ln1117_6_fu_776_p2;
wire   [11:0] add_ln1117_6_fu_782_p2;
wire   [5:0] add_ln13_5_fu_792_p2;
wire   [10:0] tmp_62_fu_798_p3;
wire   [6:0] tmp_63_fu_810_p3;
wire   [11:0] zext_ln1117_14_fu_806_p1;
wire   [11:0] zext_ln1117_15_fu_818_p1;
wire   [11:0] sub_ln1117_7_fu_822_p2;
wire   [11:0] add_ln1117_7_fu_828_p2;
wire   [5:0] add_ln13_6_fu_838_p2;
wire   [10:0] tmp_65_fu_844_p3;
wire   [6:0] tmp_66_fu_856_p3;
wire   [11:0] zext_ln1117_16_fu_852_p1;
wire   [11:0] zext_ln1117_17_fu_864_p1;
wire   [11:0] sub_ln1117_8_fu_868_p2;
wire   [11:0] add_ln1117_8_fu_874_p2;
wire   [5:0] add_ln13_7_fu_884_p2;
wire   [10:0] tmp_68_fu_890_p3;
wire   [6:0] tmp_69_fu_902_p3;
wire   [11:0] zext_ln1117_18_fu_898_p1;
wire   [11:0] zext_ln1117_19_fu_910_p1;
wire   [11:0] sub_ln1117_9_fu_914_p2;
wire   [11:0] add_ln1117_9_fu_920_p2;
wire  signed [21:0] grp_fu_1231_p3;
wire   [13:0] tmp_46_fu_970_p4;
wire  signed [21:0] grp_fu_1240_p3;
wire   [13:0] tmp_49_fu_994_p4;
wire  signed [21:0] grp_fu_1249_p3;
wire   [13:0] tmp_52_fu_1018_p4;
wire  signed [21:0] grp_fu_1258_p3;
wire   [13:0] tmp_55_fu_1042_p4;
wire  signed [21:0] grp_fu_1267_p3;
wire  signed [21:0] grp_fu_1276_p3;
wire   [13:0] tmp_61_fu_1089_p4;
wire  signed [21:0] grp_fu_1285_p3;
wire   [13:0] tmp_64_fu_1114_p4;
wire  signed [21:0] grp_fu_1294_p3;
wire   [13:0] tmp_67_fu_1139_p4;
wire  signed [21:0] grp_fu_1303_p3;
wire   [13:0] tmp_70_fu_1164_p4;
wire  signed [21:0] grp_fu_1312_p3;
wire  signed [8:0] sext_ln1265_fu_1190_p0;
wire  signed [8:0] sext_ln703_fu_1198_p0;
wire  signed [13:0] sext_ln1265_fu_1190_p1;
wire  signed [12:0] sext_ln703_fu_1198_p1;
wire   [12:0] trunc_ln703_fu_1194_p1;
wire   [13:0] add_ln703_fu_1202_p2;
wire   [0:0] tmp_4_fu_1214_p3;
wire   [12:0] add_ln203_fu_1208_p2;
wire   [12:0] grp_fu_1231_p1;
wire   [21:0] grp_fu_1231_p2;
wire   [12:0] grp_fu_1240_p1;
wire   [21:0] grp_fu_1240_p2;
wire   [12:0] grp_fu_1249_p1;
wire   [21:0] grp_fu_1249_p2;
wire   [12:0] grp_fu_1258_p1;
wire   [21:0] grp_fu_1258_p2;
wire   [12:0] grp_fu_1267_p1;
wire   [21:0] grp_fu_1267_p2;
wire   [12:0] grp_fu_1276_p1;
wire   [21:0] grp_fu_1276_p2;
wire   [12:0] grp_fu_1285_p1;
wire   [21:0] grp_fu_1285_p2;
wire   [12:0] grp_fu_1294_p1;
wire   [21:0] grp_fu_1294_p2;
wire   [12:0] grp_fu_1303_p1;
wire   [21:0] grp_fu_1303_p2;
wire   [12:0] grp_fu_1312_p1;
wire   [21:0] grp_fu_1312_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_1231_p10;
wire   [21:0] grp_fu_1240_p10;
wire   [21:0] grp_fu_1249_p10;
wire   [21:0] grp_fu_1258_p10;
wire   [21:0] grp_fu_1267_p10;
wire   [21:0] grp_fu_1276_p10;
wire   [21:0] grp_fu_1285_p10;
wire   [21:0] grp_fu_1294_p10;
wire   [21:0] grp_fu_1303_p10;
wire   [21:0] grp_fu_1312_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dense_2_dense_2_wbml #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0),
    .address1(dense_2_weights_V_address1),
    .ce1(dense_2_weights_V_ce1),
    .q1(dense_2_weights_V_q1),
    .address2(dense_2_weights_V_address2),
    .ce2(dense_2_weights_V_ce2),
    .q2(dense_2_weights_V_q2),
    .address3(dense_2_weights_V_address3),
    .ce3(dense_2_weights_V_ce3),
    .q3(dense_2_weights_V_q3),
    .address4(dense_2_weights_V_address4),
    .ce4(dense_2_weights_V_ce4),
    .q4(dense_2_weights_V_q4)
);

dense_2_dense_2_bbnm #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U503(
    .din0(reg_415),
    .din1(grp_fu_1231_p1),
    .din2(grp_fu_1231_p2),
    .dout(grp_fu_1231_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U504(
    .din0(reg_419),
    .din1(grp_fu_1240_p1),
    .din2(grp_fu_1240_p2),
    .dout(grp_fu_1240_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U505(
    .din0(reg_423),
    .din1(grp_fu_1249_p1),
    .din2(grp_fu_1249_p2),
    .dout(grp_fu_1249_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U506(
    .din0(reg_427),
    .din1(grp_fu_1258_p1),
    .din2(grp_fu_1258_p2),
    .dout(grp_fu_1258_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U507(
    .din0(reg_431),
    .din1(grp_fu_1267_p1),
    .din2(grp_fu_1267_p2),
    .dout(grp_fu_1267_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U508(
    .din0(reg_415),
    .din1(grp_fu_1276_p1),
    .din2(grp_fu_1276_p2),
    .dout(grp_fu_1276_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U509(
    .din0(reg_419),
    .din1(grp_fu_1285_p1),
    .din2(grp_fu_1285_p2),
    .dout(grp_fu_1285_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U510(
    .din0(reg_423),
    .din1(grp_fu_1294_p1),
    .din2(grp_fu_1294_p2),
    .dout(grp_fu_1294_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U511(
    .din0(reg_427),
    .din1(grp_fu_1303_p1),
    .din2(grp_fu_1303_p2),
    .dout(grp_fu_1303_p3)
);

cnn_mac_muladd_9sbom #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbom_U512(
    .din0(reg_431),
    .din1(grp_fu_1312_p1),
    .din2(grp_fu_1312_p2),
    .dout(grp_fu_1312_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_0_reg_356 <= i_reg_1325;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_356 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
        indvars_iv14_reg_379 <= 4'd1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1350 == 1'd0))) begin
        indvars_iv14_reg_379 <= add_ln13_9_reg_1486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
        indvars_iv34_reg_367 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1350 == 1'd0))) begin
        indvars_iv34_reg_367 <= add_ln13_10_reg_1491;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
        j_0_0_reg_403 <= 6'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1350 == 1'd0))) begin
        j_0_0_reg_403 <= add_ln13_8_reg_1481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
        p_Val2_0_reg_391 <= 14'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln13_reg_1350_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_Val2_0_reg_391 <= {{grp_fu_1312_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln13_reg_1350 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln13_10_reg_1491 <= add_ln13_10_fu_942_p2;
        add_ln13_8_reg_1481 <= add_ln13_8_fu_930_p2;
        add_ln13_9_reg_1486 <= add_ln13_9_fu_936_p2;
        dense_1_out_0_V_loa_1_reg_1451 <= dense_1_out_0_V_q1;
        dense_1_out_0_V_loa_reg_1421 <= dense_1_out_0_V_q0;
        dense_1_out_1_V_loa_1_reg_1461 <= dense_1_out_1_V_q1;
        dense_1_out_1_V_loa_reg_1426 <= dense_1_out_1_V_q0;
        dense_1_out_2_V_loa_reg_1431 <= dense_1_out_2_V_q0;
        dense_1_out_3_V_loa_reg_1436 <= dense_1_out_3_V_q0;
        dense_1_out_4_V_loa_reg_1441 <= dense_1_out_4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1325 <= i_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln13_reg_1350 <= icmp_ln13_fu_455_p2;
        icmp_ln13_reg_1350_pp0_iter1_reg <= icmp_ln13_reg_1350;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1350 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln13_reg_1350 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_415 <= dense_2_weights_V_q0;
        reg_419 <= dense_2_weights_V_q1;
        reg_423 <= dense_2_weights_V_q2;
        reg_427 <= dense_2_weights_V_q3;
        reg_431 <= dense_2_weights_V_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_1350 == 1'd0))) begin
        tmp_58_reg_1496 <= {{grp_fu_1267_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_fu_455_p2 == 1'd0))) begin
        zext_ln1116_5_reg_1404[3 : 0] <= zext_ln1116_5_fu_694_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd0))) begin
        zext_ln13_reg_1336[4 : 0] <= zext_ln13_fu_451_p1[4 : 0];
        zext_ln14_reg_1330[4 : 0] <= zext_ln14_fu_447_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln13_fu_455_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_1350 == 1'd0))) begin
        ap_phi_mux_indvars_iv14_phi_fu_383_p4 = add_ln13_9_reg_1486;
    end else begin
        ap_phi_mux_indvars_iv14_phi_fu_383_p4 = indvars_iv14_reg_379;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_1350 == 1'd0))) begin
        ap_phi_mux_indvars_iv34_phi_fu_371_p4 = add_ln13_10_reg_1491;
    end else begin
        ap_phi_mux_indvars_iv34_phi_fu_371_p4 = indvars_iv34_reg_367;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_1350 == 1'd0))) begin
        ap_phi_mux_j_0_0_phi_fu_407_p4 = add_ln13_8_reg_1481;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_407_p4 = j_0_0_reg_403;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_0_V_ce0 = 1'b1;
    end else begin
        dense_1_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_0_V_ce1 = 1'b1;
    end else begin
        dense_1_out_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_1_V_ce0 = 1'b1;
    end else begin
        dense_1_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_1_V_ce1 = 1'b1;
    end else begin
        dense_1_out_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_2_V_ce0 = 1'b1;
    end else begin
        dense_1_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_2_V_ce1 = 1'b1;
    end else begin
        dense_1_out_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_3_V_ce0 = 1'b1;
    end else begin
        dense_1_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_3_V_ce1 = 1'b1;
    end else begin
        dense_1_out_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_4_V_ce0 = 1'b1;
    end else begin
        dense_1_out_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dense_1_out_4_V_ce1 = 1'b1;
    end else begin
        dense_1_out_4_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address0 = sext_ln1117_5_fu_741_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address0 = sext_ln1117_fu_496_p1;
        end else begin
            dense_2_weights_V_address0 = 'bx;
        end
    end else begin
        dense_2_weights_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address1 = sext_ln1117_6_fu_787_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address1 = sext_ln1117_1_fu_551_p1;
        end else begin
            dense_2_weights_V_address1 = 'bx;
        end
    end else begin
        dense_2_weights_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address2 = sext_ln1117_7_fu_833_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address2 = sext_ln1117_2_fu_597_p1;
        end else begin
            dense_2_weights_V_address2 = 'bx;
        end
    end else begin
        dense_2_weights_V_address2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address3 = sext_ln1117_8_fu_879_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address3 = sext_ln1117_3_fu_643_p1;
        end else begin
            dense_2_weights_V_address3 = 'bx;
        end
    end else begin
        dense_2_weights_V_address3 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_V_address4 = sext_ln1117_9_fu_925_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_V_address4 = sext_ln1117_4_fu_689_p1;
        end else begin
            dense_2_weights_V_address4 = 'bx;
        end
    end else begin
        dense_2_weights_V_address4 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce1 = 1'b1;
    end else begin
        dense_2_weights_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce2 = 1'b1;
    end else begin
        dense_2_weights_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce3 = 1'b1;
    end else begin
        dense_2_weights_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_V_ce4 = 1'b1;
    end else begin
        dense_2_weights_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_435_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_fu_455_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_fu_455_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1117_1_fu_546_p2 = (sub_ln1117_1_fu_540_p2 + zext_ln13_reg_1336);

assign add_ln1117_2_fu_592_p2 = (sub_ln1117_2_fu_586_p2 + zext_ln13_reg_1336);

assign add_ln1117_3_fu_638_p2 = (sub_ln1117_3_fu_632_p2 + zext_ln13_reg_1336);

assign add_ln1117_4_fu_684_p2 = (sub_ln1117_4_fu_678_p2 + zext_ln13_reg_1336);

assign add_ln1117_5_fu_736_p2 = (sub_ln1117_5_fu_730_p2 + zext_ln13_reg_1336);

assign add_ln1117_6_fu_782_p2 = (sub_ln1117_6_fu_776_p2 + zext_ln13_reg_1336);

assign add_ln1117_7_fu_828_p2 = (sub_ln1117_7_fu_822_p2 + zext_ln13_reg_1336);

assign add_ln1117_8_fu_874_p2 = (sub_ln1117_8_fu_868_p2 + zext_ln13_reg_1336);

assign add_ln1117_9_fu_920_p2 = (sub_ln1117_9_fu_914_p2 + zext_ln13_reg_1336);

assign add_ln1117_fu_491_p2 = (sub_ln1117_fu_485_p2 + zext_ln13_reg_1336);

assign add_ln13_10_fu_942_p2 = (indvars_iv34_reg_367 + 4'd2);

assign add_ln13_1_fu_602_p2 = (ap_phi_mux_j_0_0_phi_fu_407_p4 + 6'd3);

assign add_ln13_2_fu_648_p2 = (ap_phi_mux_j_0_0_phi_fu_407_p4 + 6'd4);

assign add_ln13_3_fu_700_p2 = (j_0_0_reg_403 + 6'd5);

assign add_ln13_4_fu_746_p2 = (j_0_0_reg_403 + 6'd6);

assign add_ln13_5_fu_792_p2 = (j_0_0_reg_403 + 6'd7);

assign add_ln13_6_fu_838_p2 = (j_0_0_reg_403 + 6'd8);

assign add_ln13_7_fu_884_p2 = (j_0_0_reg_403 + 6'd9);

assign add_ln13_8_fu_930_p2 = (j_0_0_reg_403 + 6'd10);

assign add_ln13_9_fu_936_p2 = (indvars_iv14_reg_379 + 4'd2);

assign add_ln13_fu_556_p2 = (ap_phi_mux_j_0_0_phi_fu_407_p4 + 6'd2);

assign add_ln203_fu_1208_p2 = ($signed(sext_ln703_fu_1198_p1) + $signed(trunc_ln703_fu_1194_p1));

assign add_ln703_fu_1202_p2 = ($signed(p_Val2_0_reg_391) + $signed(sext_ln1265_fu_1190_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dense_1_out_0_V_address0 = zext_ln1116_fu_501_p1;

assign dense_1_out_0_V_address1 = zext_ln1116_5_fu_694_p1;

assign dense_1_out_1_V_address0 = zext_ln1116_fu_501_p1;

assign dense_1_out_1_V_address1 = zext_ln1116_5_fu_694_p1;

assign dense_1_out_2_V_address0 = zext_ln1116_fu_501_p1;

assign dense_1_out_2_V_address1 = zext_ln1116_5_reg_1404;

assign dense_1_out_3_V_address0 = zext_ln1116_fu_501_p1;

assign dense_1_out_3_V_address1 = zext_ln1116_5_reg_1404;

assign dense_1_out_4_V_address0 = zext_ln1116_fu_501_p1;

assign dense_1_out_4_V_address1 = zext_ln1116_5_reg_1404;

assign dense_2_bias_V_address0 = zext_ln14_reg_1330;

assign dense_2_out_V_address0 = zext_ln14_reg_1330;

assign dense_2_out_V_d0 = ((tmp_4_fu_1214_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1208_p2);

assign grp_fu_1231_p1 = grp_fu_1231_p10;

assign grp_fu_1231_p10 = dense_1_out_0_V_loa_reg_1421;

assign grp_fu_1231_p2 = {{p_Val2_0_reg_391}, {8'd0}};

assign grp_fu_1240_p1 = grp_fu_1240_p10;

assign grp_fu_1240_p10 = dense_1_out_1_V_loa_reg_1426;

assign grp_fu_1240_p2 = {{tmp_46_fu_970_p4}, {8'd0}};

assign grp_fu_1249_p1 = grp_fu_1249_p10;

assign grp_fu_1249_p10 = dense_1_out_2_V_loa_reg_1431;

assign grp_fu_1249_p2 = {{tmp_49_fu_994_p4}, {8'd0}};

assign grp_fu_1258_p1 = grp_fu_1258_p10;

assign grp_fu_1258_p10 = dense_1_out_3_V_loa_reg_1436;

assign grp_fu_1258_p2 = {{tmp_52_fu_1018_p4}, {8'd0}};

assign grp_fu_1267_p1 = grp_fu_1267_p10;

assign grp_fu_1267_p10 = dense_1_out_4_V_loa_reg_1441;

assign grp_fu_1267_p2 = {{tmp_55_fu_1042_p4}, {8'd0}};

assign grp_fu_1276_p1 = grp_fu_1276_p10;

assign grp_fu_1276_p10 = dense_1_out_0_V_loa_1_reg_1451;

assign grp_fu_1276_p2 = {{tmp_58_reg_1496}, {8'd0}};

assign grp_fu_1285_p1 = grp_fu_1285_p10;

assign grp_fu_1285_p10 = dense_1_out_1_V_loa_1_reg_1461;

assign grp_fu_1285_p2 = {{tmp_61_fu_1089_p4}, {8'd0}};

assign grp_fu_1294_p1 = grp_fu_1294_p10;

assign grp_fu_1294_p10 = dense_1_out_2_V_q1;

assign grp_fu_1294_p2 = {{tmp_64_fu_1114_p4}, {8'd0}};

assign grp_fu_1303_p1 = grp_fu_1303_p10;

assign grp_fu_1303_p10 = dense_1_out_3_V_q1;

assign grp_fu_1303_p2 = {{tmp_67_fu_1139_p4}, {8'd0}};

assign grp_fu_1312_p1 = grp_fu_1312_p10;

assign grp_fu_1312_p10 = dense_1_out_4_V_q1;

assign grp_fu_1312_p2 = {{tmp_70_fu_1164_p4}, {8'd0}};

assign i_fu_441_p2 = (i_0_reg_356 + 5'd1);

assign icmp_ln13_fu_455_p2 = ((ap_phi_mux_j_0_0_phi_fu_407_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_435_p2 = ((i_0_reg_356 == 5'd30) ? 1'b1 : 1'b0);

assign or_ln13_fu_510_p2 = (ap_phi_mux_j_0_0_phi_fu_407_p4 | 6'd1);

assign sext_ln1117_1_fu_551_p1 = $signed(add_ln1117_1_fu_546_p2);

assign sext_ln1117_2_fu_597_p1 = $signed(add_ln1117_2_fu_592_p2);

assign sext_ln1117_3_fu_643_p1 = $signed(add_ln1117_3_fu_638_p2);

assign sext_ln1117_4_fu_689_p1 = $signed(add_ln1117_4_fu_684_p2);

assign sext_ln1117_5_fu_741_p1 = $signed(add_ln1117_5_fu_736_p2);

assign sext_ln1117_6_fu_787_p1 = $signed(add_ln1117_6_fu_782_p2);

assign sext_ln1117_7_fu_833_p1 = $signed(add_ln1117_7_fu_828_p2);

assign sext_ln1117_8_fu_879_p1 = $signed(add_ln1117_8_fu_874_p2);

assign sext_ln1117_9_fu_925_p1 = $signed(add_ln1117_9_fu_920_p2);

assign sext_ln1117_fu_496_p1 = $signed(add_ln1117_fu_491_p2);

assign sext_ln1265_fu_1190_p0 = dense_2_bias_V_q0;

assign sext_ln1265_fu_1190_p1 = sext_ln1265_fu_1190_p0;

assign sext_ln703_fu_1198_p0 = dense_2_bias_V_q0;

assign sext_ln703_fu_1198_p1 = sext_ln703_fu_1198_p0;

assign sub_ln1117_1_fu_540_p2 = (zext_ln1117_2_fu_524_p1 - zext_ln1117_3_fu_536_p1);

assign sub_ln1117_2_fu_586_p2 = (zext_ln1117_4_fu_570_p1 - zext_ln1117_5_fu_582_p1);

assign sub_ln1117_3_fu_632_p2 = (zext_ln1117_6_fu_616_p1 - zext_ln1117_7_fu_628_p1);

assign sub_ln1117_4_fu_678_p2 = (zext_ln1117_8_fu_662_p1 - zext_ln1117_9_fu_674_p1);

assign sub_ln1117_5_fu_730_p2 = (zext_ln1117_10_fu_714_p1 - zext_ln1117_11_fu_726_p1);

assign sub_ln1117_6_fu_776_p2 = (zext_ln1117_12_fu_760_p1 - zext_ln1117_13_fu_772_p1);

assign sub_ln1117_7_fu_822_p2 = (zext_ln1117_14_fu_806_p1 - zext_ln1117_15_fu_818_p1);

assign sub_ln1117_8_fu_868_p2 = (zext_ln1117_16_fu_852_p1 - zext_ln1117_17_fu_864_p1);

assign sub_ln1117_9_fu_914_p2 = (zext_ln1117_18_fu_898_p1 - zext_ln1117_19_fu_910_p1);

assign sub_ln1117_fu_485_p2 = (zext_ln1117_fu_469_p1 - zext_ln1117_1_fu_481_p1);

assign tmp_43_fu_473_p3 = {{ap_phi_mux_j_0_0_phi_fu_407_p4}, {1'd0}};

assign tmp_44_fu_516_p3 = {{or_ln13_fu_510_p2}, {5'd0}};

assign tmp_45_fu_528_p3 = {{or_ln13_fu_510_p2}, {1'd0}};

assign tmp_46_fu_970_p4 = {{grp_fu_1231_p3[21:8]}};

assign tmp_47_fu_562_p3 = {{add_ln13_fu_556_p2}, {5'd0}};

assign tmp_48_fu_574_p3 = {{add_ln13_fu_556_p2}, {1'd0}};

assign tmp_49_fu_994_p4 = {{grp_fu_1240_p3[21:8]}};

assign tmp_4_fu_1214_p3 = add_ln703_fu_1202_p2[32'd13];

assign tmp_50_fu_608_p3 = {{add_ln13_1_fu_602_p2}, {5'd0}};

assign tmp_51_fu_620_p3 = {{add_ln13_1_fu_602_p2}, {1'd0}};

assign tmp_52_fu_1018_p4 = {{grp_fu_1249_p3[21:8]}};

assign tmp_53_fu_654_p3 = {{add_ln13_2_fu_648_p2}, {5'd0}};

assign tmp_54_fu_666_p3 = {{add_ln13_2_fu_648_p2}, {1'd0}};

assign tmp_55_fu_1042_p4 = {{grp_fu_1258_p3[21:8]}};

assign tmp_56_fu_706_p3 = {{add_ln13_3_fu_700_p2}, {5'd0}};

assign tmp_57_fu_718_p3 = {{add_ln13_3_fu_700_p2}, {1'd0}};

assign tmp_59_fu_752_p3 = {{add_ln13_4_fu_746_p2}, {5'd0}};

assign tmp_60_fu_764_p3 = {{add_ln13_4_fu_746_p2}, {1'd0}};

assign tmp_61_fu_1089_p4 = {{grp_fu_1276_p3[21:8]}};

assign tmp_62_fu_798_p3 = {{add_ln13_5_fu_792_p2}, {5'd0}};

assign tmp_63_fu_810_p3 = {{add_ln13_5_fu_792_p2}, {1'd0}};

assign tmp_64_fu_1114_p4 = {{grp_fu_1285_p3[21:8]}};

assign tmp_65_fu_844_p3 = {{add_ln13_6_fu_838_p2}, {5'd0}};

assign tmp_66_fu_856_p3 = {{add_ln13_6_fu_838_p2}, {1'd0}};

assign tmp_67_fu_1139_p4 = {{grp_fu_1294_p3[21:8]}};

assign tmp_68_fu_890_p3 = {{add_ln13_7_fu_884_p2}, {5'd0}};

assign tmp_69_fu_902_p3 = {{add_ln13_7_fu_884_p2}, {1'd0}};

assign tmp_70_fu_1164_p4 = {{grp_fu_1303_p3[21:8]}};

assign tmp_s_fu_461_p3 = {{ap_phi_mux_j_0_0_phi_fu_407_p4}, {5'd0}};

assign trunc_ln703_fu_1194_p1 = p_Val2_0_reg_391[12:0];

assign zext_ln1116_5_fu_694_p1 = ap_phi_mux_indvars_iv14_phi_fu_383_p4;

assign zext_ln1116_fu_501_p1 = ap_phi_mux_indvars_iv34_phi_fu_371_p4;

assign zext_ln1117_10_fu_714_p1 = tmp_56_fu_706_p3;

assign zext_ln1117_11_fu_726_p1 = tmp_57_fu_718_p3;

assign zext_ln1117_12_fu_760_p1 = tmp_59_fu_752_p3;

assign zext_ln1117_13_fu_772_p1 = tmp_60_fu_764_p3;

assign zext_ln1117_14_fu_806_p1 = tmp_62_fu_798_p3;

assign zext_ln1117_15_fu_818_p1 = tmp_63_fu_810_p3;

assign zext_ln1117_16_fu_852_p1 = tmp_65_fu_844_p3;

assign zext_ln1117_17_fu_864_p1 = tmp_66_fu_856_p3;

assign zext_ln1117_18_fu_898_p1 = tmp_68_fu_890_p3;

assign zext_ln1117_19_fu_910_p1 = tmp_69_fu_902_p3;

assign zext_ln1117_1_fu_481_p1 = tmp_43_fu_473_p3;

assign zext_ln1117_2_fu_524_p1 = tmp_44_fu_516_p3;

assign zext_ln1117_3_fu_536_p1 = tmp_45_fu_528_p3;

assign zext_ln1117_4_fu_570_p1 = tmp_47_fu_562_p3;

assign zext_ln1117_5_fu_582_p1 = tmp_48_fu_574_p3;

assign zext_ln1117_6_fu_616_p1 = tmp_50_fu_608_p3;

assign zext_ln1117_7_fu_628_p1 = tmp_51_fu_620_p3;

assign zext_ln1117_8_fu_662_p1 = tmp_53_fu_654_p3;

assign zext_ln1117_9_fu_674_p1 = tmp_54_fu_666_p3;

assign zext_ln1117_fu_469_p1 = tmp_s_fu_461_p3;

assign zext_ln13_fu_451_p1 = i_0_reg_356;

assign zext_ln14_fu_447_p1 = i_0_reg_356;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1330[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1336[11:5] <= 7'b0000000;
    zext_ln1116_5_reg_1404[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_2
