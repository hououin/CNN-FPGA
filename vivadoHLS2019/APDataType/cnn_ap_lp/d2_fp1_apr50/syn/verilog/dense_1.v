// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        flat_array_V_address0,
        flat_array_V_ce0,
        flat_array_V_q0,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_return_29,
        ap_return_30,
        ap_return_31,
        ap_return_32,
        ap_return_33,
        ap_return_34,
        ap_return_35,
        ap_return_36,
        ap_return_37,
        ap_return_38,
        ap_return_39,
        ap_return_40,
        ap_return_41,
        ap_return_42,
        ap_return_43,
        ap_return_44,
        ap_return_45,
        ap_return_46,
        ap_return_47,
        ap_return_48,
        ap_return_49
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] flat_array_V_address0;
output   flat_array_V_ce0;
input  [13:0] flat_array_V_q0;
output  [13:0] ap_return_0;
output  [13:0] ap_return_1;
output  [13:0] ap_return_2;
output  [13:0] ap_return_3;
output  [13:0] ap_return_4;
output  [13:0] ap_return_5;
output  [13:0] ap_return_6;
output  [13:0] ap_return_7;
output  [13:0] ap_return_8;
output  [13:0] ap_return_9;
output  [13:0] ap_return_10;
output  [13:0] ap_return_11;
output  [13:0] ap_return_12;
output  [13:0] ap_return_13;
output  [13:0] ap_return_14;
output  [13:0] ap_return_15;
output  [13:0] ap_return_16;
output  [13:0] ap_return_17;
output  [13:0] ap_return_18;
output  [13:0] ap_return_19;
output  [13:0] ap_return_20;
output  [13:0] ap_return_21;
output  [13:0] ap_return_22;
output  [13:0] ap_return_23;
output  [13:0] ap_return_24;
output  [13:0] ap_return_25;
output  [13:0] ap_return_26;
output  [13:0] ap_return_27;
output  [13:0] ap_return_28;
output  [13:0] ap_return_29;
output  [13:0] ap_return_30;
output  [13:0] ap_return_31;
output  [13:0] ap_return_32;
output  [13:0] ap_return_33;
output  [13:0] ap_return_34;
output  [13:0] ap_return_35;
output  [13:0] ap_return_36;
output  [13:0] ap_return_37;
output  [13:0] ap_return_38;
output  [13:0] ap_return_39;
output  [13:0] ap_return_40;
output  [13:0] ap_return_41;
output  [13:0] ap_return_42;
output  [13:0] ap_return_43;
output  [13:0] ap_return_44;
output  [13:0] ap_return_45;
output  [13:0] ap_return_46;
output  [13:0] ap_return_47;
output  [13:0] ap_return_48;
output  [13:0] ap_return_49;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg flat_array_V_ce0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [14:0] dense_1_weights_V_address0;
reg    dense_1_weights_V_ce0;
wire  signed [8:0] dense_1_weights_V_q0;
wire   [5:0] dense_1_bias_V_address0;
reg    dense_1_bias_V_ce0;
wire   [5:0] dense_1_bias_V_q0;
wire   [12:0] add_ln9_fu_579_p2;
reg   [12:0] add_ln9_reg_1975;
wire    ap_CS_fsm_state2;
wire   [5:0] i_fu_591_p2;
reg   [5:0] i_reg_1983;
wire   [63:0] zext_ln14_fu_597_p1;
reg   [63:0] zext_ln14_reg_1988;
wire   [0:0] icmp_ln9_fu_585_p2;
wire   [14:0] zext_ln13_fu_601_p1;
reg   [14:0] zext_ln13_reg_1993;
wire   [8:0] j_fu_919_p2;
reg   [8:0] j_reg_2001;
wire    ap_CS_fsm_state3;
wire   [14:0] add_ln1117_1_fu_930_p2;
reg   [14:0] add_ln1117_1_reg_2006;
wire   [0:0] icmp_ln13_fu_913_p2;
reg   [0:0] tmp_51_reg_2026;
wire    ap_CS_fsm_state4;
reg   [5:0] i_0_reg_363;
wire    ap_CS_fsm_state5;
reg   [12:0] phi_mul1_reg_375;
reg   [13:0] p_Val2_s_reg_387;
reg   [8:0] j_0_reg_399;
reg   [14:0] phi_mul_reg_410;
wire   [63:0] zext_ln1117_fu_941_p1;
wire   [63:0] zext_ln14_1_fu_925_p1;
reg   [13:0] dense_1_out_24_1_V_fu_120;
wire   [13:0] select_ln203_1_fu_1642_p3;
wire   [5:0] select_ln203_50_fu_1015_p3;
reg   [13:0] dense_1_out_8_0_V_s_fu_124;
wire   [13:0] select_ln203_19_fu_1410_p3;
reg   [13:0] dense_1_out_24_0_V_fu_128;
wire   [13:0] select_ln203_fu_1635_p3;
reg   [13:0] dense_1_out_23_1_V_fu_132;
wire   [13:0] select_ln203_49_fu_1050_p3;
reg   [13:0] dense_1_out_8_1_V_s_fu_136;
wire   [13:0] select_ln203_18_fu_1403_p3;
reg   [13:0] dense_1_out_23_0_V_fu_140;
wire   [13:0] select_ln203_48_fu_1043_p3;
reg   [13:0] dense_1_out_22_1_V_fu_144;
wire   [13:0] select_ln203_47_fu_1074_p3;
reg   [13:0] dense_1_out_9_0_V_s_fu_148;
wire   [13:0] select_ln203_21_fu_1386_p3;
reg   [13:0] dense_1_out_22_0_V_fu_152;
wire   [13:0] select_ln203_46_fu_1067_p3;
reg   [13:0] dense_1_out_21_1_V_fu_156;
wire   [13:0] select_ln203_45_fu_1098_p3;
reg   [13:0] dense_1_out_9_1_V_s_fu_160;
wire   [13:0] select_ln203_20_fu_1379_p3;
reg   [13:0] dense_1_out_21_0_V_fu_164;
wire   [13:0] select_ln203_44_fu_1091_p3;
reg   [13:0] dense_1_out_20_1_V_fu_168;
wire   [13:0] select_ln203_43_fu_1122_p3;
reg   [13:0] dense_1_out_10_0_V_fu_172;
wire   [13:0] select_ln203_23_fu_1362_p3;
reg   [13:0] dense_1_out_20_0_V_fu_176;
wire   [13:0] select_ln203_42_fu_1115_p3;
reg   [13:0] dense_1_out_19_1_V_fu_180;
wire   [13:0] select_ln203_41_fu_1146_p3;
reg   [13:0] dense_1_out_10_1_V_fu_184;
wire   [13:0] select_ln203_22_fu_1355_p3;
reg   [13:0] dense_1_out_19_0_V_fu_188;
wire   [13:0] select_ln203_40_fu_1139_p3;
reg   [13:0] dense_1_out_18_1_V_fu_192;
wire   [13:0] select_ln203_39_fu_1170_p3;
reg   [13:0] dense_1_out_11_0_V_fu_196;
wire   [13:0] select_ln203_25_fu_1338_p3;
reg   [13:0] dense_1_out_18_0_V_fu_200;
wire   [13:0] select_ln203_38_fu_1163_p3;
reg   [13:0] dense_1_out_17_1_V_fu_204;
wire   [13:0] select_ln203_37_fu_1194_p3;
reg   [13:0] dense_1_out_11_1_V_fu_208;
wire   [13:0] select_ln203_24_fu_1331_p3;
reg   [13:0] dense_1_out_17_0_V_fu_212;
wire   [13:0] select_ln203_36_fu_1187_p3;
reg   [13:0] dense_1_out_16_1_V_fu_216;
wire   [13:0] select_ln203_35_fu_1218_p3;
reg   [13:0] dense_1_out_12_0_V_fu_220;
wire   [13:0] select_ln203_27_fu_1314_p3;
reg   [13:0] dense_1_out_16_0_V_fu_224;
wire   [13:0] select_ln203_34_fu_1211_p3;
reg   [13:0] dense_1_out_15_1_V_fu_228;
wire   [13:0] select_ln203_33_fu_1242_p3;
reg   [13:0] dense_1_out_12_1_V_fu_232;
wire   [13:0] select_ln203_26_fu_1307_p3;
reg   [13:0] dense_1_out_15_0_V_fu_236;
wire   [13:0] select_ln203_32_fu_1235_p3;
reg   [13:0] dense_1_out_14_1_V_fu_240;
wire   [13:0] select_ln203_31_fu_1266_p3;
reg   [13:0] dense_1_out_13_0_V_fu_244;
wire   [13:0] select_ln203_29_fu_1290_p3;
reg   [13:0] dense_1_out_14_0_V_fu_248;
wire   [13:0] select_ln203_30_fu_1259_p3;
reg   [13:0] dense_1_out_13_1_V_fu_252;
wire   [13:0] select_ln203_28_fu_1283_p3;
reg   [13:0] dense_1_out_7_1_V_s_fu_256;
wire   [13:0] select_ln203_17_fu_1434_p3;
reg   [0:0] write_flag_0_fu_260;
wire   [0:0] or_ln203_fu_1614_p2;
reg   [13:0] dense_1_out_7_0_V_s_fu_264;
wire   [13:0] select_ln203_16_fu_1427_p3;
reg   [13:0] dense_1_out_V_086_fu_268;
wire   [13:0] select_ln203_3_fu_1607_p3;
reg   [13:0] dense_1_out_6_1_V_s_fu_272;
wire   [13:0] select_ln203_15_fu_1458_p3;
reg   [13:0] dense_1_out_6_0_V_s_fu_276;
wire   [13:0] select_ln203_14_fu_1451_p3;
reg   [13:0] dense_1_out_0_1_V_s_fu_280;
wire   [13:0] select_ln203_2_fu_1600_p3;
reg   [13:0] dense_1_out_5_1_V_s_fu_284;
wire   [13:0] select_ln203_13_fu_1482_p3;
reg   [13:0] dense_1_out_5_0_V_s_fu_288;
wire   [13:0] select_ln203_12_fu_1475_p3;
reg   [13:0] dense_1_out_1_0_V_s_fu_292;
wire   [13:0] select_ln203_5_fu_1578_p3;
reg   [13:0] dense_1_out_4_1_V_s_fu_296;
wire   [13:0] select_ln203_11_fu_1506_p3;
reg   [13:0] dense_1_out_4_0_V_s_fu_300;
wire   [13:0] select_ln203_10_fu_1499_p3;
reg   [13:0] dense_1_out_1_1_V_s_fu_304;
wire   [13:0] select_ln203_4_fu_1571_p3;
reg   [13:0] dense_1_out_3_1_V_s_fu_308;
wire   [13:0] select_ln203_9_fu_1530_p3;
reg   [13:0] dense_1_out_3_0_V_s_fu_312;
wire   [13:0] select_ln203_8_fu_1523_p3;
reg   [13:0] dense_1_out_2_0_V_s_fu_316;
wire   [13:0] select_ln203_7_fu_1554_p3;
reg   [13:0] dense_1_out_2_1_V_s_fu_320;
wire   [13:0] select_ln203_6_fu_1547_p3;
wire   [13:0] select_ln23_fu_605_p3;
wire   [14:0] add_ln1117_fu_936_p2;
wire  signed [21:0] grp_fu_1659_p3;
wire  signed [5:0] sext_ln1265_fu_979_p0;
wire  signed [5:0] sext_ln703_fu_987_p0;
wire  signed [13:0] sext_ln1265_fu_979_p1;
wire   [12:0] trunc_ln703_fu_983_p1;
wire  signed [12:0] sext_ln703_fu_987_p1;
wire   [0:0] icmp_ln203_fu_1003_p2;
wire   [5:0] add_ln203_6_fu_1009_p2;
wire   [13:0] add_ln703_fu_991_p2;
wire   [0:0] tmp_52_fu_1023_p3;
wire   [12:0] add_ln203_fu_997_p2;
wire   [12:0] select_ln19_fu_1031_p3;
wire   [13:0] zext_ln19_fu_1039_p1;
wire   [0:0] xor_ln203_fu_1595_p2;
wire   [21:0] grp_fu_1659_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
end

dense_1_dense_1_wibs #(
    .DataWidth( 9 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_weights_V_address0),
    .ce0(dense_1_weights_V_ce0),
    .q0(dense_1_weights_V_q0)
);

dense_1_dense_1_bjbC #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_bias_V_address0),
    .ce0(dense_1_bias_V_ce0),
    .q0(dense_1_bias_V_q0)
);

cnn_mac_muladd_9skbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9skbM_U22(
    .din0(dense_1_weights_V_q0),
    .din1(flat_array_V_q0),
    .din2(grp_fu_1659_p2),
    .dout(grp_fu_1659_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_reg_363 <= i_reg_1983;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_363 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_399 <= j_reg_2001;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd0))) begin
        j_0_reg_399 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_s_reg_387 <= {{grp_fu_1659_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd0))) begin
        p_Val2_s_reg_387 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        phi_mul1_reg_375 <= add_ln9_reg_1975;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul1_reg_375 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_410 <= add_ln1117_1_reg_2006;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd0))) begin
        phi_mul_reg_410 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd0))) begin
        write_flag_0_fu_260 <= or_ln203_fu_1614_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        write_flag_0_fu_260 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_913_p2 == 1'd0))) begin
        add_ln1117_1_reg_2006 <= add_ln1117_1_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln9_reg_1975 <= add_ln9_fu_579_p2;
        i_reg_1983 <= i_fu_591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd0))) begin
        dense_1_out_0_1_V_s_fu_280 <= select_ln203_2_fu_1600_p3;
        dense_1_out_V_086_fu_268 <= select_ln203_3_fu_1607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd10))) begin
        dense_1_out_10_0_V_fu_172 <= select_ln203_23_fu_1362_p3;
        dense_1_out_10_1_V_fu_184 <= select_ln203_22_fu_1355_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd11))) begin
        dense_1_out_11_0_V_fu_196 <= select_ln203_25_fu_1338_p3;
        dense_1_out_11_1_V_fu_208 <= select_ln203_24_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd12))) begin
        dense_1_out_12_0_V_fu_220 <= select_ln203_27_fu_1314_p3;
        dense_1_out_12_1_V_fu_232 <= select_ln203_26_fu_1307_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd13))) begin
        dense_1_out_13_0_V_fu_244 <= select_ln203_29_fu_1290_p3;
        dense_1_out_13_1_V_fu_252 <= select_ln203_28_fu_1283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd14))) begin
        dense_1_out_14_0_V_fu_248 <= select_ln203_30_fu_1259_p3;
        dense_1_out_14_1_V_fu_240 <= select_ln203_31_fu_1266_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd15))) begin
        dense_1_out_15_0_V_fu_236 <= select_ln203_32_fu_1235_p3;
        dense_1_out_15_1_V_fu_228 <= select_ln203_33_fu_1242_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd16))) begin
        dense_1_out_16_0_V_fu_224 <= select_ln203_34_fu_1211_p3;
        dense_1_out_16_1_V_fu_216 <= select_ln203_35_fu_1218_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd17))) begin
        dense_1_out_17_0_V_fu_212 <= select_ln203_36_fu_1187_p3;
        dense_1_out_17_1_V_fu_204 <= select_ln203_37_fu_1194_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd18))) begin
        dense_1_out_18_0_V_fu_200 <= select_ln203_38_fu_1163_p3;
        dense_1_out_18_1_V_fu_192 <= select_ln203_39_fu_1170_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd19))) begin
        dense_1_out_19_0_V_fu_188 <= select_ln203_40_fu_1139_p3;
        dense_1_out_19_1_V_fu_180 <= select_ln203_41_fu_1146_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd1))) begin
        dense_1_out_1_0_V_s_fu_292 <= select_ln203_5_fu_1578_p3;
        dense_1_out_1_1_V_s_fu_304 <= select_ln203_4_fu_1571_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd20))) begin
        dense_1_out_20_0_V_fu_176 <= select_ln203_42_fu_1115_p3;
        dense_1_out_20_1_V_fu_168 <= select_ln203_43_fu_1122_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd21))) begin
        dense_1_out_21_0_V_fu_164 <= select_ln203_44_fu_1091_p3;
        dense_1_out_21_1_V_fu_156 <= select_ln203_45_fu_1098_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd22))) begin
        dense_1_out_22_0_V_fu_152 <= select_ln203_46_fu_1067_p3;
        dense_1_out_22_1_V_fu_144 <= select_ln203_47_fu_1074_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd23))) begin
        dense_1_out_23_0_V_fu_140 <= select_ln203_48_fu_1043_p3;
        dense_1_out_23_1_V_fu_132 <= select_ln203_49_fu_1050_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln203_50_fu_1015_p3 == 6'd23) & ~(select_ln203_50_fu_1015_p3 == 6'd22) & ~(select_ln203_50_fu_1015_p3 == 6'd21) & ~(select_ln203_50_fu_1015_p3 == 6'd20) & ~(select_ln203_50_fu_1015_p3 == 6'd19) & ~(select_ln203_50_fu_1015_p3 == 6'd18) & ~(select_ln203_50_fu_1015_p3 == 6'd17) & ~(select_ln203_50_fu_1015_p3 == 6'd16) & ~(select_ln203_50_fu_1015_p3 == 6'd15) & ~(select_ln203_50_fu_1015_p3 == 6'd14) & ~(select_ln203_50_fu_1015_p3 == 6'd13) & ~(select_ln203_50_fu_1015_p3 == 6'd12) & ~(select_ln203_50_fu_1015_p3 == 6'd11) & ~(select_ln203_50_fu_1015_p3 == 6'd10) & ~(select_ln203_50_fu_1015_p3 == 6'd9) & ~(select_ln203_50_fu_1015_p3 == 6'd8) & ~(select_ln203_50_fu_1015_p3 == 6'd7) & ~(select_ln203_50_fu_1015_p3 == 6'd6) & ~(select_ln203_50_fu_1015_p3 == 6'd5) & ~(select_ln203_50_fu_1015_p3 == 6'd4) & ~(select_ln203_50_fu_1015_p3 == 6'd3) & ~(select_ln203_50_fu_1015_p3 == 6'd2) & ~(select_ln203_50_fu_1015_p3 == 6'd1) & ~(select_ln203_50_fu_1015_p3 == 6'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        dense_1_out_24_0_V_fu_128 <= select_ln203_fu_1635_p3;
        dense_1_out_24_1_V_fu_120 <= select_ln203_1_fu_1642_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd2))) begin
        dense_1_out_2_0_V_s_fu_316 <= select_ln203_7_fu_1554_p3;
        dense_1_out_2_1_V_s_fu_320 <= select_ln203_6_fu_1547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd3))) begin
        dense_1_out_3_0_V_s_fu_312 <= select_ln203_8_fu_1523_p3;
        dense_1_out_3_1_V_s_fu_308 <= select_ln203_9_fu_1530_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd4))) begin
        dense_1_out_4_0_V_s_fu_300 <= select_ln203_10_fu_1499_p3;
        dense_1_out_4_1_V_s_fu_296 <= select_ln203_11_fu_1506_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd5))) begin
        dense_1_out_5_0_V_s_fu_288 <= select_ln203_12_fu_1475_p3;
        dense_1_out_5_1_V_s_fu_284 <= select_ln203_13_fu_1482_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd6))) begin
        dense_1_out_6_0_V_s_fu_276 <= select_ln203_14_fu_1451_p3;
        dense_1_out_6_1_V_s_fu_272 <= select_ln203_15_fu_1458_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd7))) begin
        dense_1_out_7_0_V_s_fu_264 <= select_ln203_16_fu_1427_p3;
        dense_1_out_7_1_V_s_fu_256 <= select_ln203_17_fu_1434_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd8))) begin
        dense_1_out_8_0_V_s_fu_124 <= select_ln203_19_fu_1410_p3;
        dense_1_out_8_1_V_s_fu_136 <= select_ln203_18_fu_1403_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (select_ln203_50_fu_1015_p3 == 6'd9))) begin
        dense_1_out_9_0_V_s_fu_148 <= select_ln203_21_fu_1386_p3;
        dense_1_out_9_1_V_s_fu_160 <= select_ln203_20_fu_1379_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_2001 <= j_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_913_p2 == 1'd1))) begin
        tmp_51_reg_2026 <= phi_mul1_reg_375[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd0))) begin
        zext_ln13_reg_1993[5 : 0] <= zext_ln13_fu_601_p1[5 : 0];
        zext_ln14_reg_1988[5 : 0] <= zext_ln14_fu_597_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_1_bias_V_ce0 = 1'b1;
    end else begin
        dense_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_1_weights_V_ce0 = 1'b1;
    end else begin
        dense_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        flat_array_V_ce0 = 1'b1;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_585_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_913_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1117_1_fu_930_p2 = (phi_mul_reg_410 + 15'd50);

assign add_ln1117_fu_936_p2 = (phi_mul_reg_410 + zext_ln13_reg_1993);

assign add_ln203_6_fu_1009_p2 = ($signed(6'd39) + $signed(i_0_reg_363));

assign add_ln203_fu_997_p2 = ($signed(trunc_ln703_fu_983_p1) + $signed(sext_ln703_fu_987_p1));

assign add_ln703_fu_991_p2 = ($signed(sext_ln1265_fu_979_p1) + $signed(p_Val2_s_reg_387));

assign add_ln9_fu_579_p2 = (phi_mul1_reg_375 + 13'd82);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_return_0 = select_ln23_fu_605_p3;

assign ap_return_1 = dense_1_out_0_1_V_s_fu_280;

assign ap_return_10 = dense_1_out_5_0_V_s_fu_288;

assign ap_return_11 = dense_1_out_5_1_V_s_fu_284;

assign ap_return_12 = dense_1_out_6_0_V_s_fu_276;

assign ap_return_13 = dense_1_out_6_1_V_s_fu_272;

assign ap_return_14 = dense_1_out_7_0_V_s_fu_264;

assign ap_return_15 = dense_1_out_7_1_V_s_fu_256;

assign ap_return_16 = dense_1_out_8_0_V_s_fu_124;

assign ap_return_17 = dense_1_out_8_1_V_s_fu_136;

assign ap_return_18 = dense_1_out_9_0_V_s_fu_148;

assign ap_return_19 = dense_1_out_9_1_V_s_fu_160;

assign ap_return_2 = dense_1_out_1_0_V_s_fu_292;

assign ap_return_20 = dense_1_out_10_0_V_fu_172;

assign ap_return_21 = dense_1_out_10_1_V_fu_184;

assign ap_return_22 = dense_1_out_11_0_V_fu_196;

assign ap_return_23 = dense_1_out_11_1_V_fu_208;

assign ap_return_24 = dense_1_out_12_0_V_fu_220;

assign ap_return_25 = dense_1_out_12_1_V_fu_232;

assign ap_return_26 = dense_1_out_13_0_V_fu_244;

assign ap_return_27 = dense_1_out_13_1_V_fu_252;

assign ap_return_28 = dense_1_out_14_0_V_fu_248;

assign ap_return_29 = dense_1_out_14_1_V_fu_240;

assign ap_return_3 = dense_1_out_1_1_V_s_fu_304;

assign ap_return_30 = dense_1_out_15_0_V_fu_236;

assign ap_return_31 = dense_1_out_15_1_V_fu_228;

assign ap_return_32 = dense_1_out_16_0_V_fu_224;

assign ap_return_33 = dense_1_out_16_1_V_fu_216;

assign ap_return_34 = dense_1_out_17_0_V_fu_212;

assign ap_return_35 = dense_1_out_17_1_V_fu_204;

assign ap_return_36 = dense_1_out_18_0_V_fu_200;

assign ap_return_37 = dense_1_out_18_1_V_fu_192;

assign ap_return_38 = dense_1_out_19_0_V_fu_188;

assign ap_return_39 = dense_1_out_19_1_V_fu_180;

assign ap_return_4 = dense_1_out_2_0_V_s_fu_316;

assign ap_return_40 = dense_1_out_20_0_V_fu_176;

assign ap_return_41 = dense_1_out_20_1_V_fu_168;

assign ap_return_42 = dense_1_out_21_0_V_fu_164;

assign ap_return_43 = dense_1_out_21_1_V_fu_156;

assign ap_return_44 = dense_1_out_22_0_V_fu_152;

assign ap_return_45 = dense_1_out_22_1_V_fu_144;

assign ap_return_46 = dense_1_out_23_0_V_fu_140;

assign ap_return_47 = dense_1_out_23_1_V_fu_132;

assign ap_return_48 = dense_1_out_24_0_V_fu_128;

assign ap_return_49 = dense_1_out_24_1_V_fu_120;

assign ap_return_5 = dense_1_out_2_1_V_s_fu_320;

assign ap_return_6 = dense_1_out_3_0_V_s_fu_312;

assign ap_return_7 = dense_1_out_3_1_V_s_fu_308;

assign ap_return_8 = dense_1_out_4_0_V_s_fu_300;

assign ap_return_9 = dense_1_out_4_1_V_s_fu_296;

assign dense_1_bias_V_address0 = zext_ln14_reg_1988;

assign dense_1_weights_V_address0 = zext_ln1117_fu_941_p1;

assign flat_array_V_address0 = zext_ln14_1_fu_925_p1;

assign grp_fu_1659_p2 = {{p_Val2_s_reg_387}, {8'd0}};

assign i_fu_591_p2 = (i_0_reg_363 + 6'd1);

assign icmp_ln13_fu_913_p2 = ((j_0_reg_399 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1003_p2 = ((i_0_reg_363 < 6'd25) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_585_p2 = ((i_0_reg_363 == 6'd50) ? 1'b1 : 1'b0);

assign j_fu_919_p2 = (j_0_reg_399 + 9'd1);

assign or_ln203_fu_1614_p2 = (xor_ln203_fu_1595_p2 | write_flag_0_fu_260);

assign select_ln19_fu_1031_p3 = ((tmp_52_fu_1023_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_997_p2);

assign select_ln203_10_fu_1499_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_4_0_V_s_fu_300 : zext_ln19_fu_1039_p1);

assign select_ln203_11_fu_1506_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_4_1_V_s_fu_296);

assign select_ln203_12_fu_1475_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_5_0_V_s_fu_288 : zext_ln19_fu_1039_p1);

assign select_ln203_13_fu_1482_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_5_1_V_s_fu_284);

assign select_ln203_14_fu_1451_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_6_0_V_s_fu_276 : zext_ln19_fu_1039_p1);

assign select_ln203_15_fu_1458_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_6_1_V_s_fu_272);

assign select_ln203_16_fu_1427_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_7_0_V_s_fu_264 : zext_ln19_fu_1039_p1);

assign select_ln203_17_fu_1434_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_7_1_V_s_fu_256);

assign select_ln203_18_fu_1403_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_8_1_V_s_fu_136);

assign select_ln203_19_fu_1410_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_8_0_V_s_fu_124 : zext_ln19_fu_1039_p1);

assign select_ln203_1_fu_1642_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_24_1_V_fu_120);

assign select_ln203_20_fu_1379_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_9_1_V_s_fu_160);

assign select_ln203_21_fu_1386_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_9_0_V_s_fu_148 : zext_ln19_fu_1039_p1);

assign select_ln203_22_fu_1355_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_10_1_V_fu_184);

assign select_ln203_23_fu_1362_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_10_0_V_fu_172 : zext_ln19_fu_1039_p1);

assign select_ln203_24_fu_1331_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_11_1_V_fu_208);

assign select_ln203_25_fu_1338_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_11_0_V_fu_196 : zext_ln19_fu_1039_p1);

assign select_ln203_26_fu_1307_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_12_1_V_fu_232);

assign select_ln203_27_fu_1314_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_12_0_V_fu_220 : zext_ln19_fu_1039_p1);

assign select_ln203_28_fu_1283_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_13_1_V_fu_252);

assign select_ln203_29_fu_1290_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_13_0_V_fu_244 : zext_ln19_fu_1039_p1);

assign select_ln203_2_fu_1600_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_0_1_V_s_fu_280);

assign select_ln203_30_fu_1259_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_14_0_V_fu_248 : zext_ln19_fu_1039_p1);

assign select_ln203_31_fu_1266_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_14_1_V_fu_240);

assign select_ln203_32_fu_1235_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_15_0_V_fu_236 : zext_ln19_fu_1039_p1);

assign select_ln203_33_fu_1242_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_15_1_V_fu_228);

assign select_ln203_34_fu_1211_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_16_0_V_fu_224 : zext_ln19_fu_1039_p1);

assign select_ln203_35_fu_1218_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_16_1_V_fu_216);

assign select_ln203_36_fu_1187_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_17_0_V_fu_212 : zext_ln19_fu_1039_p1);

assign select_ln203_37_fu_1194_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_17_1_V_fu_204);

assign select_ln203_38_fu_1163_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_18_0_V_fu_200 : zext_ln19_fu_1039_p1);

assign select_ln203_39_fu_1170_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_18_1_V_fu_192);

assign select_ln203_3_fu_1607_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_V_086_fu_268 : zext_ln19_fu_1039_p1);

assign select_ln203_40_fu_1139_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_19_0_V_fu_188 : zext_ln19_fu_1039_p1);

assign select_ln203_41_fu_1146_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_19_1_V_fu_180);

assign select_ln203_42_fu_1115_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_20_0_V_fu_176 : zext_ln19_fu_1039_p1);

assign select_ln203_43_fu_1122_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_20_1_V_fu_168);

assign select_ln203_44_fu_1091_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_21_0_V_fu_164 : zext_ln19_fu_1039_p1);

assign select_ln203_45_fu_1098_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_21_1_V_fu_156);

assign select_ln203_46_fu_1067_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_22_0_V_fu_152 : zext_ln19_fu_1039_p1);

assign select_ln203_47_fu_1074_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_22_1_V_fu_144);

assign select_ln203_48_fu_1043_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_23_0_V_fu_140 : zext_ln19_fu_1039_p1);

assign select_ln203_49_fu_1050_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_23_1_V_fu_132);

assign select_ln203_4_fu_1571_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_1_1_V_s_fu_304);

assign select_ln203_50_fu_1015_p3 = ((icmp_ln203_fu_1003_p2[0:0] === 1'b1) ? i_0_reg_363 : add_ln203_6_fu_1009_p2);

assign select_ln203_5_fu_1578_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_1_0_V_s_fu_292 : zext_ln19_fu_1039_p1);

assign select_ln203_6_fu_1547_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_2_1_V_s_fu_320);

assign select_ln203_7_fu_1554_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_2_0_V_s_fu_316 : zext_ln19_fu_1039_p1);

assign select_ln203_8_fu_1523_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_3_0_V_s_fu_312 : zext_ln19_fu_1039_p1);

assign select_ln203_9_fu_1530_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? zext_ln19_fu_1039_p1 : dense_1_out_3_1_V_s_fu_308);

assign select_ln203_fu_1635_p3 = ((tmp_51_reg_2026[0:0] === 1'b1) ? dense_1_out_24_0_V_fu_128 : zext_ln19_fu_1039_p1);

assign select_ln23_fu_605_p3 = ((write_flag_0_fu_260[0:0] === 1'b1) ? dense_1_out_V_086_fu_268 : 14'd0);

assign sext_ln1265_fu_979_p0 = dense_1_bias_V_q0;

assign sext_ln1265_fu_979_p1 = sext_ln1265_fu_979_p0;

assign sext_ln703_fu_987_p0 = dense_1_bias_V_q0;

assign sext_ln703_fu_987_p1 = sext_ln703_fu_987_p0;

assign tmp_52_fu_1023_p3 = add_ln703_fu_991_p2[32'd13];

assign trunc_ln703_fu_983_p1 = p_Val2_s_reg_387[12:0];

assign xor_ln203_fu_1595_p2 = (tmp_51_reg_2026 ^ 1'd1);

assign zext_ln1117_fu_941_p1 = add_ln1117_fu_936_p2;

assign zext_ln13_fu_601_p1 = i_0_reg_363;

assign zext_ln14_1_fu_925_p1 = j_0_reg_399;

assign zext_ln14_fu_597_p1 = i_0_reg_363;

assign zext_ln19_fu_1039_p1 = select_ln19_fu_1031_p3;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1988[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1993[14:6] <= 9'b000000000;
end

endmodule //dense_1
