-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cnn_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cnn_input_ce0 : OUT STD_LOGIC;
    cnn_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    prediction_output_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_output_ce0 : OUT STD_LOGIC;
    prediction_output_we0 : OUT STD_LOGIC;
    prediction_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=18.460000,HLS_SYN_LAT=455944,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=57,HLS_SYN_FF=5664,HLS_SYN_LUT=9343,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv14_3FE8 : STD_LOGIC_VECTOR (13 downto 0) := "11111111101000";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_fu_732_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1674 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ix_in_fu_738_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_in_reg_1679 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln23_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln203_fu_768_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_reg_1684 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_fu_780_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_1692 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln203_fu_790_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_reg_1697 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln25_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_fu_800_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln28_reg_1707 : STD_LOGIC_VECTOR (9 downto 0);
    signal cnn_input_load_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln603_3_fu_1081_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln603_3_reg_1718 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal dense_1_out_0_0_V_reg_1723 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_dense_1_fu_679_ap_ready : STD_LOGIC;
    signal grp_dense_1_fu_679_ap_done : STD_LOGIC;
    signal dense_1_out_0_1_V_reg_1728 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_1_0_V_reg_1733 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_1_1_V_reg_1738 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_2_0_V_reg_1743 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_2_1_V_reg_1748 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_3_0_V_reg_1753 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_3_1_V_reg_1758 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_4_0_V_reg_1763 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_4_1_V_reg_1768 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_5_0_V_reg_1773 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_5_1_V_reg_1778 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_6_0_V_reg_1783 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_6_1_V_reg_1788 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_7_0_V_reg_1793 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_7_1_V_reg_1798 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_8_0_V_reg_1803 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_8_1_V_reg_1808 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_9_0_V_reg_1813 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_9_1_V_reg_1818 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_10_0_V_reg_1823 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_10_1_V_reg_1828 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_11_0_V_reg_1833 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_11_1_V_reg_1838 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_12_0_V_reg_1843 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_12_1_V_reg_1848 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_13_0_V_reg_1853 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_13_1_V_reg_1858 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_14_0_V_reg_1863 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_14_1_V_reg_1868 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_15_0_V_reg_1873 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_15_1_V_reg_1878 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_16_0_V_reg_1883 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_16_1_V_reg_1888 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_17_0_V_reg_1893 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_17_1_V_reg_1898 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_18_0_V_reg_1903 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_18_1_V_reg_1908 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_19_0_V_reg_1913 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_19_1_V_reg_1918 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_20_0_V_reg_1923 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_20_1_V_reg_1928 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_21_0_V_reg_1933 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_21_1_V_reg_1938 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_22_0_V_reg_1943 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_22_1_V_reg_1948 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_23_0_V_reg_1953 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_23_1_V_reg_1958 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_24_0_V_reg_1963 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_24_1_V_reg_1968 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_1_fu_1349_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_1976 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln70_fu_1355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_reg_1981 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln69_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_1991 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal p_Result_43_fu_1366_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_43_reg_1996 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_13_fu_1380_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_13_reg_2001 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln944_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_2006 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1524_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_reg_2012 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_2017 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_1538_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_2022 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_1_input_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_1_input_V_ce0 : STD_LOGIC;
    signal conv_1_input_V_we0 : STD_LOGIC;
    signal conv_1_input_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_out_V_ce0 : STD_LOGIC;
    signal conv_1_out_V_we0 : STD_LOGIC;
    signal conv_1_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_1_out_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pool_1_out_V_ce0 : STD_LOGIC;
    signal max_pool_1_out_V_we0 : STD_LOGIC;
    signal max_pool_1_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_1_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_2_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_2_out_V_ce0 : STD_LOGIC;
    signal conv_2_out_V_we0 : STD_LOGIC;
    signal conv_2_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_2_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_2_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal max_pool_2_out_V_ce0 : STD_LOGIC;
    signal max_pool_2_out_V_we0 : STD_LOGIC;
    signal max_pool_2_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_2_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal flat_array_V_ce0 : STD_LOGIC;
    signal flat_array_V_we0 : STD_LOGIC;
    signal flat_array_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal flat_array_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_out_V_ce0 : STD_LOGIC;
    signal dense_2_out_V_we0 : STD_LOGIC;
    signal dense_2_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal prediction_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal prediction_V_ce0 : STD_LOGIC;
    signal prediction_V_we0 : STD_LOGIC;
    signal prediction_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal prediction_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_2_fu_502_ap_start : STD_LOGIC;
    signal grp_dense_2_fu_502_ap_done : STD_LOGIC;
    signal grp_dense_2_fu_502_ap_idle : STD_LOGIC;
    signal grp_dense_2_fu_502_ap_ready : STD_LOGIC;
    signal grp_dense_2_fu_502_dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_2_fu_502_dense_2_out_V_ce0 : STD_LOGIC;
    signal grp_dense_2_fu_502_dense_2_out_V_we0 : STD_LOGIC;
    signal grp_dense_2_fu_502_dense_2_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_conv_2_fu_659_ap_start : STD_LOGIC;
    signal grp_conv_2_fu_659_ap_done : STD_LOGIC;
    signal grp_conv_2_fu_659_ap_idle : STD_LOGIC;
    signal grp_conv_2_fu_659_ap_ready : STD_LOGIC;
    signal grp_conv_2_fu_659_input_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_2_fu_659_input_V_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_659_conv_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_2_fu_659_conv_out_V_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_659_conv_out_V_we0 : STD_LOGIC;
    signal grp_conv_2_fu_659_conv_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv_1_fu_669_ap_start : STD_LOGIC;
    signal grp_conv_1_fu_669_ap_done : STD_LOGIC;
    signal grp_conv_1_fu_669_ap_idle : STD_LOGIC;
    signal grp_conv_1_fu_669_ap_ready : STD_LOGIC;
    signal grp_conv_1_fu_669_input_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_1_fu_669_input_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_669_conv_out_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_1_fu_669_conv_out_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_669_conv_out_V_we0 : STD_LOGIC;
    signal grp_conv_1_fu_669_conv_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_start : STD_LOGIC;
    signal grp_dense_1_fu_679_ap_idle : STD_LOGIC;
    signal grp_dense_1_fu_679_flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dense_1_fu_679_flat_array_V_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_679_ap_return_0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_5 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_6 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_7 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_8 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_9 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_10 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_11 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_12 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_13 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_14 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_15 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_16 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_17 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_18 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_19 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_20 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_21 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_22 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_23 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_24 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_25 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_26 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_27 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_28 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_29 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_30 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_31 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_32 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_33 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_34 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_35 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_36 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_37 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_38 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_39 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_40 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_41 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_42 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_43 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_44 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_45 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_46 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_47 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_48 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_679_ap_return_49 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_out_fu_688_ap_start : STD_LOGIC;
    signal grp_dense_out_fu_688_ap_done : STD_LOGIC;
    signal grp_dense_out_fu_688_ap_idle : STD_LOGIC;
    signal grp_dense_out_fu_688_ap_ready : STD_LOGIC;
    signal grp_dense_out_fu_688_dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_out_fu_688_dense_2_out_V_ce0 : STD_LOGIC;
    signal grp_dense_out_fu_688_prediction_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_out_fu_688_prediction_V_ce0 : STD_LOGIC;
    signal grp_dense_out_fu_688_prediction_V_we0 : STD_LOGIC;
    signal grp_dense_out_fu_688_prediction_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_max_pool_1_fu_704_ap_start : STD_LOGIC;
    signal grp_max_pool_1_fu_704_ap_done : STD_LOGIC;
    signal grp_max_pool_1_fu_704_ap_idle : STD_LOGIC;
    signal grp_max_pool_1_fu_704_ap_ready : STD_LOGIC;
    signal grp_max_pool_1_fu_704_conv_out_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_max_pool_1_fu_704_conv_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_704_max_pool_out_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_max_pool_1_fu_704_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_704_max_pool_out_V_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_704_max_pool_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_max_pool_2_fu_710_ap_start : STD_LOGIC;
    signal grp_max_pool_2_fu_710_ap_done : STD_LOGIC;
    signal grp_max_pool_2_fu_710_ap_idle : STD_LOGIC;
    signal grp_max_pool_2_fu_710_ap_ready : STD_LOGIC;
    signal grp_max_pool_2_fu_710_conv_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_2_fu_710_conv_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_710_max_pool_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_max_pool_2_fu_710_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_710_max_pool_out_V_we0 : STD_LOGIC;
    signal grp_max_pool_2_fu_710_max_pool_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_flat_fu_716_ap_start : STD_LOGIC;
    signal grp_flat_fu_716_ap_done : STD_LOGIC;
    signal grp_flat_fu_716_ap_idle : STD_LOGIC;
    signal grp_flat_fu_716_ap_ready : STD_LOGIC;
    signal grp_flat_fu_716_max_pool_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_716_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_flat_fu_716_flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_716_flat_array_V_ce0 : STD_LOGIC;
    signal grp_flat_fu_716_flat_array_V_we0 : STD_LOGIC;
    signal grp_flat_fu_716_flat_array_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ix_in_0_reg_447 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_reg_459 : STD_LOGIC_VECTOR (4 downto 0);
    signal ix_in_1_reg_470 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal j_0_reg_480 : STD_LOGIC_VECTOR (4 downto 0);
    signal i24_0_reg_491 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_dense_2_fu_502_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_conv_2_fu_659_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_conv_1_fu_669_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_dense_1_fu_679_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_dense_out_fu_688_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_max_pool_1_fu_704_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_max_pool_2_fu_710_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_flat_fu_716_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal zext_ln27_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_744_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_756_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln203_fu_752_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_17_fu_764_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_18_fu_786_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_822_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln565_fu_836_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_fu_840_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_42_fu_848_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_41_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_852_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln556_fu_810_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_832_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_872_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln581_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_884_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_890_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_896_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_858_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_fu_904_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_930_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_934_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_944_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_947_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_914_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln581cast_fu_963_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln571_fu_866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln582_fu_908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln581_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_967_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln586_fu_940_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal and_ln585_1_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_955_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal and_ln582_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_fu_1039_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln603_1_fu_1053_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln603_1_fu_1061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln603_2_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln603_2_fu_1067_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_fu_1374_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_s_fu_1388_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_44_fu_1398_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_1406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1424_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_1430_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_1446_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln947_fu_1450_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln947_fu_1456_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln947_fu_1460_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_36_fu_1466_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln947_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln947_1_fu_1472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln944_fu_1420_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln949_fu_1498_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_37_fu_1504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_1478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln949_fu_1518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_1542_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_fu_1545_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln958_fu_1556_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln958_fu_1550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln958_fu_1561_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_12_fu_1567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_13_fu_1574_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_s_fu_1579_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_68_fu_1593_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln964_fu_1601_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln964_fu_1609_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_1614_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_16_fu_1589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1620_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_45_fu_1627_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln739_fu_1639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);

    component dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_1_out_0_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_0_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_1_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_1_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_2_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_2_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_3_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_3_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_4_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_4_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_5_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_5_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_6_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_6_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_7_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_7_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_8_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_8_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_9_0_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_9_1_V_s : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_10_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_10_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_11_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_11_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_12_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_12_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_13_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_13_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_14_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_14_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_15_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_15_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_16_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_16_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_17_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_17_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_18_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_18_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_19_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_19_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_20_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_20_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_21_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_21_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_22_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_22_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_23_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_23_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_24_0_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_24_1_V_read : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_V_ce0 : OUT STD_LOGIC;
        dense_2_out_V_we0 : OUT STD_LOGIC;
        dense_2_out_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component conv_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_V_ce0 : OUT STD_LOGIC;
        input_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_we0 : OUT STD_LOGIC;
        conv_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component conv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_V_ce0 : OUT STD_LOGIC;
        input_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_we0 : OUT STD_LOGIC;
        conv_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flat_array_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_V_ce0 : OUT STD_LOGIC;
        flat_array_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (13 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dense_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_V_ce0 : OUT STD_LOGIC;
        dense_2_out_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        prediction_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_V_ce0 : OUT STD_LOGIC;
        prediction_V_we0 : OUT STD_LOGIC;
        prediction_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component max_pool_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_we0 : OUT STD_LOGIC;
        max_pool_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component max_pool_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_we0 : OUT STD_LOGIC;
        max_pool_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component flat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        flat_array_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_V_ce0 : OUT STD_LOGIC;
        flat_array_V_we0 : OUT STD_LOGIC;
        flat_array_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_fpext_32ns_64bnm IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component cnn_conv_1_input_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_1_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_max_pool_1_oubll IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_2_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_max_pool_2_oubml IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_dense_2_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component dense_out_dense_abjl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    conv_1_input_V_U : component cnn_conv_1_input_V
    generic map (
        DataWidth => 14,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_V_address0,
        ce0 => conv_1_input_V_ce0,
        we0 => conv_1_input_V_we0,
        d0 => select_ln603_3_reg_1718,
        q0 => conv_1_input_V_q0);

    conv_1_out_V_U : component cnn_conv_1_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 4056,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_out_V_address0,
        ce0 => conv_1_out_V_ce0,
        we0 => conv_1_out_V_we0,
        d0 => conv_1_out_V_d0,
        q0 => conv_1_out_V_q0);

    max_pool_1_out_V_U : component cnn_max_pool_1_oubll
    generic map (
        DataWidth => 14,
        AddressRange => 1014,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => max_pool_1_out_V_address0,
        ce0 => max_pool_1_out_V_ce0,
        we0 => max_pool_1_out_V_we0,
        d0 => max_pool_1_out_V_d0,
        q0 => max_pool_1_out_V_q0);

    conv_2_out_V_U : component cnn_conv_2_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 1936,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_2_out_V_address0,
        ce0 => conv_2_out_V_ce0,
        we0 => conv_2_out_V_we0,
        d0 => conv_2_out_V_d0,
        q0 => conv_2_out_V_q0);

    max_pool_2_out_V_U : component cnn_max_pool_2_oubml
    generic map (
        DataWidth => 14,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => max_pool_2_out_V_address0,
        ce0 => max_pool_2_out_V_ce0,
        we0 => max_pool_2_out_V_we0,
        d0 => max_pool_2_out_V_d0,
        q0 => max_pool_2_out_V_q0);

    flat_array_V_U : component cnn_max_pool_2_oubml
    generic map (
        DataWidth => 14,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => flat_array_V_address0,
        ce0 => flat_array_V_ce0,
        we0 => flat_array_V_we0,
        d0 => flat_array_V_d0,
        q0 => flat_array_V_q0);

    dense_2_out_V_U : component cnn_dense_2_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_out_V_address0,
        ce0 => dense_2_out_V_ce0,
        we0 => dense_2_out_V_we0,
        d0 => dense_2_out_V_d0,
        q0 => dense_2_out_V_q0);

    prediction_V_U : component dense_out_dense_abjl
    generic map (
        DataWidth => 14,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => prediction_V_address0,
        ce0 => prediction_V_ce0,
        we0 => prediction_V_we0,
        d0 => prediction_V_d0,
        q0 => prediction_V_q0);

    grp_dense_2_fu_502 : component dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_2_fu_502_ap_start,
        ap_done => grp_dense_2_fu_502_ap_done,
        ap_idle => grp_dense_2_fu_502_ap_idle,
        ap_ready => grp_dense_2_fu_502_ap_ready,
        dense_1_out_0_0_V_s => dense_1_out_0_0_V_reg_1723,
        dense_1_out_0_1_V_s => dense_1_out_0_1_V_reg_1728,
        dense_1_out_1_0_V_s => dense_1_out_1_0_V_reg_1733,
        dense_1_out_1_1_V_s => dense_1_out_1_1_V_reg_1738,
        dense_1_out_2_0_V_s => dense_1_out_2_0_V_reg_1743,
        dense_1_out_2_1_V_s => dense_1_out_2_1_V_reg_1748,
        dense_1_out_3_0_V_s => dense_1_out_3_0_V_reg_1753,
        dense_1_out_3_1_V_s => dense_1_out_3_1_V_reg_1758,
        dense_1_out_4_0_V_s => dense_1_out_4_0_V_reg_1763,
        dense_1_out_4_1_V_s => dense_1_out_4_1_V_reg_1768,
        dense_1_out_5_0_V_s => dense_1_out_5_0_V_reg_1773,
        dense_1_out_5_1_V_s => dense_1_out_5_1_V_reg_1778,
        dense_1_out_6_0_V_s => dense_1_out_6_0_V_reg_1783,
        dense_1_out_6_1_V_s => dense_1_out_6_1_V_reg_1788,
        dense_1_out_7_0_V_s => dense_1_out_7_0_V_reg_1793,
        dense_1_out_7_1_V_s => dense_1_out_7_1_V_reg_1798,
        dense_1_out_8_0_V_s => dense_1_out_8_0_V_reg_1803,
        dense_1_out_8_1_V_s => dense_1_out_8_1_V_reg_1808,
        dense_1_out_9_0_V_s => dense_1_out_9_0_V_reg_1813,
        dense_1_out_9_1_V_s => dense_1_out_9_1_V_reg_1818,
        dense_1_out_10_0_V_read => dense_1_out_10_0_V_reg_1823,
        dense_1_out_10_1_V_read => dense_1_out_10_1_V_reg_1828,
        dense_1_out_11_0_V_read => dense_1_out_11_0_V_reg_1833,
        dense_1_out_11_1_V_read => dense_1_out_11_1_V_reg_1838,
        dense_1_out_12_0_V_read => dense_1_out_12_0_V_reg_1843,
        dense_1_out_12_1_V_read => dense_1_out_12_1_V_reg_1848,
        dense_1_out_13_0_V_read => dense_1_out_13_0_V_reg_1853,
        dense_1_out_13_1_V_read => dense_1_out_13_1_V_reg_1858,
        dense_1_out_14_0_V_read => dense_1_out_14_0_V_reg_1863,
        dense_1_out_14_1_V_read => dense_1_out_14_1_V_reg_1868,
        dense_1_out_15_0_V_read => dense_1_out_15_0_V_reg_1873,
        dense_1_out_15_1_V_read => dense_1_out_15_1_V_reg_1878,
        dense_1_out_16_0_V_read => dense_1_out_16_0_V_reg_1883,
        dense_1_out_16_1_V_read => dense_1_out_16_1_V_reg_1888,
        dense_1_out_17_0_V_read => dense_1_out_17_0_V_reg_1893,
        dense_1_out_17_1_V_read => dense_1_out_17_1_V_reg_1898,
        dense_1_out_18_0_V_read => dense_1_out_18_0_V_reg_1903,
        dense_1_out_18_1_V_read => dense_1_out_18_1_V_reg_1908,
        dense_1_out_19_0_V_read => dense_1_out_19_0_V_reg_1913,
        dense_1_out_19_1_V_read => dense_1_out_19_1_V_reg_1918,
        dense_1_out_20_0_V_read => dense_1_out_20_0_V_reg_1923,
        dense_1_out_20_1_V_read => dense_1_out_20_1_V_reg_1928,
        dense_1_out_21_0_V_read => dense_1_out_21_0_V_reg_1933,
        dense_1_out_21_1_V_read => dense_1_out_21_1_V_reg_1938,
        dense_1_out_22_0_V_read => dense_1_out_22_0_V_reg_1943,
        dense_1_out_22_1_V_read => dense_1_out_22_1_V_reg_1948,
        dense_1_out_23_0_V_read => dense_1_out_23_0_V_reg_1953,
        dense_1_out_23_1_V_read => dense_1_out_23_1_V_reg_1958,
        dense_1_out_24_0_V_read => dense_1_out_24_0_V_reg_1963,
        dense_1_out_24_1_V_read => dense_1_out_24_1_V_reg_1968,
        dense_2_out_V_address0 => grp_dense_2_fu_502_dense_2_out_V_address0,
        dense_2_out_V_ce0 => grp_dense_2_fu_502_dense_2_out_V_ce0,
        dense_2_out_V_we0 => grp_dense_2_fu_502_dense_2_out_V_we0,
        dense_2_out_V_d0 => grp_dense_2_fu_502_dense_2_out_V_d0);

    grp_conv_2_fu_659 : component conv_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_2_fu_659_ap_start,
        ap_done => grp_conv_2_fu_659_ap_done,
        ap_idle => grp_conv_2_fu_659_ap_idle,
        ap_ready => grp_conv_2_fu_659_ap_ready,
        input_V_address0 => grp_conv_2_fu_659_input_V_address0,
        input_V_ce0 => grp_conv_2_fu_659_input_V_ce0,
        input_V_q0 => max_pool_1_out_V_q0,
        conv_out_V_address0 => grp_conv_2_fu_659_conv_out_V_address0,
        conv_out_V_ce0 => grp_conv_2_fu_659_conv_out_V_ce0,
        conv_out_V_we0 => grp_conv_2_fu_659_conv_out_V_we0,
        conv_out_V_d0 => grp_conv_2_fu_659_conv_out_V_d0);

    grp_conv_1_fu_669 : component conv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_1_fu_669_ap_start,
        ap_done => grp_conv_1_fu_669_ap_done,
        ap_idle => grp_conv_1_fu_669_ap_idle,
        ap_ready => grp_conv_1_fu_669_ap_ready,
        input_V_address0 => grp_conv_1_fu_669_input_V_address0,
        input_V_ce0 => grp_conv_1_fu_669_input_V_ce0,
        input_V_q0 => conv_1_input_V_q0,
        conv_out_V_address0 => grp_conv_1_fu_669_conv_out_V_address0,
        conv_out_V_ce0 => grp_conv_1_fu_669_conv_out_V_ce0,
        conv_out_V_we0 => grp_conv_1_fu_669_conv_out_V_we0,
        conv_out_V_d0 => grp_conv_1_fu_669_conv_out_V_d0);

    grp_dense_1_fu_679 : component dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_1_fu_679_ap_start,
        ap_done => grp_dense_1_fu_679_ap_done,
        ap_idle => grp_dense_1_fu_679_ap_idle,
        ap_ready => grp_dense_1_fu_679_ap_ready,
        flat_array_V_address0 => grp_dense_1_fu_679_flat_array_V_address0,
        flat_array_V_ce0 => grp_dense_1_fu_679_flat_array_V_ce0,
        flat_array_V_q0 => flat_array_V_q0,
        ap_return_0 => grp_dense_1_fu_679_ap_return_0,
        ap_return_1 => grp_dense_1_fu_679_ap_return_1,
        ap_return_2 => grp_dense_1_fu_679_ap_return_2,
        ap_return_3 => grp_dense_1_fu_679_ap_return_3,
        ap_return_4 => grp_dense_1_fu_679_ap_return_4,
        ap_return_5 => grp_dense_1_fu_679_ap_return_5,
        ap_return_6 => grp_dense_1_fu_679_ap_return_6,
        ap_return_7 => grp_dense_1_fu_679_ap_return_7,
        ap_return_8 => grp_dense_1_fu_679_ap_return_8,
        ap_return_9 => grp_dense_1_fu_679_ap_return_9,
        ap_return_10 => grp_dense_1_fu_679_ap_return_10,
        ap_return_11 => grp_dense_1_fu_679_ap_return_11,
        ap_return_12 => grp_dense_1_fu_679_ap_return_12,
        ap_return_13 => grp_dense_1_fu_679_ap_return_13,
        ap_return_14 => grp_dense_1_fu_679_ap_return_14,
        ap_return_15 => grp_dense_1_fu_679_ap_return_15,
        ap_return_16 => grp_dense_1_fu_679_ap_return_16,
        ap_return_17 => grp_dense_1_fu_679_ap_return_17,
        ap_return_18 => grp_dense_1_fu_679_ap_return_18,
        ap_return_19 => grp_dense_1_fu_679_ap_return_19,
        ap_return_20 => grp_dense_1_fu_679_ap_return_20,
        ap_return_21 => grp_dense_1_fu_679_ap_return_21,
        ap_return_22 => grp_dense_1_fu_679_ap_return_22,
        ap_return_23 => grp_dense_1_fu_679_ap_return_23,
        ap_return_24 => grp_dense_1_fu_679_ap_return_24,
        ap_return_25 => grp_dense_1_fu_679_ap_return_25,
        ap_return_26 => grp_dense_1_fu_679_ap_return_26,
        ap_return_27 => grp_dense_1_fu_679_ap_return_27,
        ap_return_28 => grp_dense_1_fu_679_ap_return_28,
        ap_return_29 => grp_dense_1_fu_679_ap_return_29,
        ap_return_30 => grp_dense_1_fu_679_ap_return_30,
        ap_return_31 => grp_dense_1_fu_679_ap_return_31,
        ap_return_32 => grp_dense_1_fu_679_ap_return_32,
        ap_return_33 => grp_dense_1_fu_679_ap_return_33,
        ap_return_34 => grp_dense_1_fu_679_ap_return_34,
        ap_return_35 => grp_dense_1_fu_679_ap_return_35,
        ap_return_36 => grp_dense_1_fu_679_ap_return_36,
        ap_return_37 => grp_dense_1_fu_679_ap_return_37,
        ap_return_38 => grp_dense_1_fu_679_ap_return_38,
        ap_return_39 => grp_dense_1_fu_679_ap_return_39,
        ap_return_40 => grp_dense_1_fu_679_ap_return_40,
        ap_return_41 => grp_dense_1_fu_679_ap_return_41,
        ap_return_42 => grp_dense_1_fu_679_ap_return_42,
        ap_return_43 => grp_dense_1_fu_679_ap_return_43,
        ap_return_44 => grp_dense_1_fu_679_ap_return_44,
        ap_return_45 => grp_dense_1_fu_679_ap_return_45,
        ap_return_46 => grp_dense_1_fu_679_ap_return_46,
        ap_return_47 => grp_dense_1_fu_679_ap_return_47,
        ap_return_48 => grp_dense_1_fu_679_ap_return_48,
        ap_return_49 => grp_dense_1_fu_679_ap_return_49);

    grp_dense_out_fu_688 : component dense_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_out_fu_688_ap_start,
        ap_done => grp_dense_out_fu_688_ap_done,
        ap_idle => grp_dense_out_fu_688_ap_idle,
        ap_ready => grp_dense_out_fu_688_ap_ready,
        dense_2_out_V_address0 => grp_dense_out_fu_688_dense_2_out_V_address0,
        dense_2_out_V_ce0 => grp_dense_out_fu_688_dense_2_out_V_ce0,
        dense_2_out_V_q0 => dense_2_out_V_q0,
        prediction_V_address0 => grp_dense_out_fu_688_prediction_V_address0,
        prediction_V_ce0 => grp_dense_out_fu_688_prediction_V_ce0,
        prediction_V_we0 => grp_dense_out_fu_688_prediction_V_we0,
        prediction_V_d0 => grp_dense_out_fu_688_prediction_V_d0);

    grp_max_pool_1_fu_704 : component max_pool_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pool_1_fu_704_ap_start,
        ap_done => grp_max_pool_1_fu_704_ap_done,
        ap_idle => grp_max_pool_1_fu_704_ap_idle,
        ap_ready => grp_max_pool_1_fu_704_ap_ready,
        conv_out_V_address0 => grp_max_pool_1_fu_704_conv_out_V_address0,
        conv_out_V_ce0 => grp_max_pool_1_fu_704_conv_out_V_ce0,
        conv_out_V_q0 => conv_1_out_V_q0,
        max_pool_out_V_address0 => grp_max_pool_1_fu_704_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_max_pool_1_fu_704_max_pool_out_V_ce0,
        max_pool_out_V_we0 => grp_max_pool_1_fu_704_max_pool_out_V_we0,
        max_pool_out_V_d0 => grp_max_pool_1_fu_704_max_pool_out_V_d0);

    grp_max_pool_2_fu_710 : component max_pool_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pool_2_fu_710_ap_start,
        ap_done => grp_max_pool_2_fu_710_ap_done,
        ap_idle => grp_max_pool_2_fu_710_ap_idle,
        ap_ready => grp_max_pool_2_fu_710_ap_ready,
        conv_out_V_address0 => grp_max_pool_2_fu_710_conv_out_V_address0,
        conv_out_V_ce0 => grp_max_pool_2_fu_710_conv_out_V_ce0,
        conv_out_V_q0 => conv_2_out_V_q0,
        max_pool_out_V_address0 => grp_max_pool_2_fu_710_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_max_pool_2_fu_710_max_pool_out_V_ce0,
        max_pool_out_V_we0 => grp_max_pool_2_fu_710_max_pool_out_V_we0,
        max_pool_out_V_d0 => grp_max_pool_2_fu_710_max_pool_out_V_d0);

    grp_flat_fu_716 : component flat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_flat_fu_716_ap_start,
        ap_done => grp_flat_fu_716_ap_done,
        ap_idle => grp_flat_fu_716_ap_idle,
        ap_ready => grp_flat_fu_716_ap_ready,
        max_pool_out_V_address0 => grp_flat_fu_716_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_flat_fu_716_max_pool_out_V_ce0,
        max_pool_out_V_q0 => max_pool_2_out_V_q0,
        flat_array_V_address0 => grp_flat_fu_716_flat_array_V_address0,
        flat_array_V_ce0 => grp_flat_fu_716_flat_array_V_ce0,
        flat_array_V_we0 => grp_flat_fu_716_flat_array_V_we0,
        flat_array_V_d0 => grp_flat_fu_716_flat_array_V_d0);

    cnn_fpext_32ns_64bnm_U197 : component cnn_fpext_32ns_64bnm
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cnn_input_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_722_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv_1_fu_669_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv_1_fu_669_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_conv_1_fu_669_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_1_fu_669_ap_ready = ap_const_logic_1)) then 
                    grp_conv_1_fu_669_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_2_fu_659_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv_2_fu_659_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_conv_2_fu_659_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_2_fu_659_ap_ready = ap_const_logic_1)) then 
                    grp_conv_2_fu_659_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_1_fu_679_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_1_fu_679_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_dense_1_fu_679_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_1_fu_679_ap_ready = ap_const_logic_1)) then 
                    grp_dense_1_fu_679_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_2_fu_502_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_2_fu_502_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_dense_1_fu_679_ap_done = ap_const_logic_1))) then 
                    grp_dense_2_fu_502_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_2_fu_502_ap_ready = ap_const_logic_1)) then 
                    grp_dense_2_fu_502_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_out_fu_688_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_out_fu_688_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_dense_out_fu_688_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_out_fu_688_ap_ready = ap_const_logic_1)) then 
                    grp_dense_out_fu_688_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_flat_fu_716_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_flat_fu_716_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_flat_fu_716_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_flat_fu_716_ap_ready = ap_const_logic_1)) then 
                    grp_flat_fu_716_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_1_fu_704_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pool_1_fu_704_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_max_pool_1_fu_704_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_1_fu_704_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_1_fu_704_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_2_fu_710_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pool_2_fu_710_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_max_pool_2_fu_710_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_2_fu_710_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_2_fu_710_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i24_0_reg_491_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i24_0_reg_491 <= i_1_reg_1976;
            elsif (((grp_dense_out_fu_688_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                i24_0_reg_491 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_774_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_459 <= i_reg_1674;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_459 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ix_in_0_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_774_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix_in_0_reg_447 <= ix_in_reg_1679;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ix_in_0_reg_447 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    ix_in_1_reg_470_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                ix_in_1_reg_470 <= add_ln28_reg_1707;
            elsif (((icmp_ln23_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix_in_1_reg_470 <= ix_in_0_reg_447;
            end if; 
        end if;
    end process;

    j_0_reg_480_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                j_0_reg_480 <= j_reg_1692;
            elsif (((icmp_ln23_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_480 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_774_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln203_reg_1697 <= add_ln203_fu_790_p2;
                add_ln28_reg_1707 <= add_ln28_fu_800_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cnn_input_load_reg_1712 <= cnn_input_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_dense_1_fu_679_ap_done = ap_const_logic_1))) then
                dense_1_out_0_0_V_reg_1723 <= grp_dense_1_fu_679_ap_return_0;
                dense_1_out_0_1_V_reg_1728 <= grp_dense_1_fu_679_ap_return_1;
                dense_1_out_10_0_V_reg_1823 <= grp_dense_1_fu_679_ap_return_20;
                dense_1_out_10_1_V_reg_1828 <= grp_dense_1_fu_679_ap_return_21;
                dense_1_out_11_0_V_reg_1833 <= grp_dense_1_fu_679_ap_return_22;
                dense_1_out_11_1_V_reg_1838 <= grp_dense_1_fu_679_ap_return_23;
                dense_1_out_12_0_V_reg_1843 <= grp_dense_1_fu_679_ap_return_24;
                dense_1_out_12_1_V_reg_1848 <= grp_dense_1_fu_679_ap_return_25;
                dense_1_out_13_0_V_reg_1853 <= grp_dense_1_fu_679_ap_return_26;
                dense_1_out_13_1_V_reg_1858 <= grp_dense_1_fu_679_ap_return_27;
                dense_1_out_14_0_V_reg_1863 <= grp_dense_1_fu_679_ap_return_28;
                dense_1_out_14_1_V_reg_1868 <= grp_dense_1_fu_679_ap_return_29;
                dense_1_out_15_0_V_reg_1873 <= grp_dense_1_fu_679_ap_return_30;
                dense_1_out_15_1_V_reg_1878 <= grp_dense_1_fu_679_ap_return_31;
                dense_1_out_16_0_V_reg_1883 <= grp_dense_1_fu_679_ap_return_32;
                dense_1_out_16_1_V_reg_1888 <= grp_dense_1_fu_679_ap_return_33;
                dense_1_out_17_0_V_reg_1893 <= grp_dense_1_fu_679_ap_return_34;
                dense_1_out_17_1_V_reg_1898 <= grp_dense_1_fu_679_ap_return_35;
                dense_1_out_18_0_V_reg_1903 <= grp_dense_1_fu_679_ap_return_36;
                dense_1_out_18_1_V_reg_1908 <= grp_dense_1_fu_679_ap_return_37;
                dense_1_out_19_0_V_reg_1913 <= grp_dense_1_fu_679_ap_return_38;
                dense_1_out_19_1_V_reg_1918 <= grp_dense_1_fu_679_ap_return_39;
                dense_1_out_1_0_V_reg_1733 <= grp_dense_1_fu_679_ap_return_2;
                dense_1_out_1_1_V_reg_1738 <= grp_dense_1_fu_679_ap_return_3;
                dense_1_out_20_0_V_reg_1923 <= grp_dense_1_fu_679_ap_return_40;
                dense_1_out_20_1_V_reg_1928 <= grp_dense_1_fu_679_ap_return_41;
                dense_1_out_21_0_V_reg_1933 <= grp_dense_1_fu_679_ap_return_42;
                dense_1_out_21_1_V_reg_1938 <= grp_dense_1_fu_679_ap_return_43;
                dense_1_out_22_0_V_reg_1943 <= grp_dense_1_fu_679_ap_return_44;
                dense_1_out_22_1_V_reg_1948 <= grp_dense_1_fu_679_ap_return_45;
                dense_1_out_23_0_V_reg_1953 <= grp_dense_1_fu_679_ap_return_46;
                dense_1_out_23_1_V_reg_1958 <= grp_dense_1_fu_679_ap_return_47;
                dense_1_out_24_0_V_reg_1963 <= grp_dense_1_fu_679_ap_return_48;
                dense_1_out_24_1_V_reg_1968 <= grp_dense_1_fu_679_ap_return_49;
                dense_1_out_2_0_V_reg_1743 <= grp_dense_1_fu_679_ap_return_4;
                dense_1_out_2_1_V_reg_1748 <= grp_dense_1_fu_679_ap_return_5;
                dense_1_out_3_0_V_reg_1753 <= grp_dense_1_fu_679_ap_return_6;
                dense_1_out_3_1_V_reg_1758 <= grp_dense_1_fu_679_ap_return_7;
                dense_1_out_4_0_V_reg_1763 <= grp_dense_1_fu_679_ap_return_8;
                dense_1_out_4_1_V_reg_1768 <= grp_dense_1_fu_679_ap_return_9;
                dense_1_out_5_0_V_reg_1773 <= grp_dense_1_fu_679_ap_return_10;
                dense_1_out_5_1_V_reg_1778 <= grp_dense_1_fu_679_ap_return_11;
                dense_1_out_6_0_V_reg_1783 <= grp_dense_1_fu_679_ap_return_12;
                dense_1_out_6_1_V_reg_1788 <= grp_dense_1_fu_679_ap_return_13;
                dense_1_out_7_0_V_reg_1793 <= grp_dense_1_fu_679_ap_return_14;
                dense_1_out_7_1_V_reg_1798 <= grp_dense_1_fu_679_ap_return_15;
                dense_1_out_8_0_V_reg_1803 <= grp_dense_1_fu_679_ap_return_16;
                dense_1_out_8_1_V_reg_1808 <= grp_dense_1_fu_679_ap_return_17;
                dense_1_out_9_0_V_reg_1813 <= grp_dense_1_fu_679_ap_return_18;
                dense_1_out_9_1_V_reg_1818 <= grp_dense_1_fu_679_ap_return_19;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                i_1_reg_1976 <= i_1_fu_1349_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1674 <= i_fu_732_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                icmp_ln935_reg_1991 <= icmp_ln935_fu_1360_p2;
                icmp_ln958_reg_2017 <= icmp_ln958_fu_1532_p2;
                    or_ln_reg_2012(0) <= or_ln_fu_1524_p3(0);
                p_Result_43_reg_1996 <= prediction_V_q0(13 downto 13);
                sub_ln944_reg_2006 <= sub_ln944_fu_1414_p2;
                tmp_V_13_reg_2001 <= tmp_V_13_fu_1380_p3;
                trunc_ln943_reg_2022 <= trunc_ln943_fu_1538_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                ix_in_reg_1679 <= ix_in_fu_738_p2;
                    sub_ln203_reg_1684(10 downto 2) <= sub_ln203_fu_768_p2(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_1692 <= j_fu_780_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                select_ln603_3_reg_1718 <= select_ln603_3_fu_1081_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln69_fu_1343_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    zext_ln70_reg_1981(3 downto 0) <= zext_ln70_fu_1355_p1(3 downto 0);
            end if;
        end if;
    end process;
    sub_ln203_reg_1684(1 downto 0) <= "00";
    zext_ln70_reg_1981(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    or_ln_reg_2012(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln23_fu_726_p2, ap_CS_fsm_state3, icmp_ln25_fu_774_p2, ap_CS_fsm_state18, grp_dense_1_fu_679_ap_done, ap_CS_fsm_state22, icmp_ln69_fu_1343_p2, grp_dense_2_fu_502_ap_done, grp_conv_2_fu_659_ap_done, grp_conv_1_fu_669_ap_done, grp_dense_out_fu_688_ap_done, grp_max_pool_1_fu_704_ap_done, grp_max_pool_2_fu_710_ap_done, grp_flat_fu_716_ap_done, ap_CS_fsm_state21, ap_CS_fsm_state19, ap_CS_fsm_state12, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln25_fu_774_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_conv_1_fu_669_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_max_pool_1_fu_704_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_conv_2_fu_659_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_max_pool_2_fu_710_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_flat_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_dense_1_fu_679_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                if (((grp_dense_2_fu_502_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_dense_out_fu_688_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln69_fu_1343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_872_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_832_p1));
    a_fu_1478_p2 <= (icmp_ln947_fu_1440_p2 and icmp_ln947_1_fu_1472_p2);
    add_ln203_fu_790_p2 <= std_logic_vector(unsigned(sub_ln203_reg_1684) + unsigned(zext_ln203_18_fu_786_p1));
    add_ln28_fu_800_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ix_in_1_reg_470));
    add_ln581_fu_884_p2 <= std_logic_vector(signed(ap_const_lv12_FF8) + signed(F2_fu_872_p2));
    add_ln949_fu_1498_p2 <= std_logic_vector(signed(ap_const_lv14_3FE8) + signed(trunc_ln944_fu_1420_p1));
    add_ln958_fu_1545_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(sub_ln944_reg_2006));
    add_ln964_fu_1614_p2 <= std_logic_vector(unsigned(select_ln964_fu_1601_p3) + unsigned(sub_ln964_fu_1609_p2));
    and_ln581_fu_997_p2 <= (xor_ln582_fu_991_p2 and icmp_ln581_fu_878_p2);
    and_ln582_fu_979_p2 <= (xor_ln571_fu_973_p2 and icmp_ln582_fu_908_p2);
    and_ln585_1_fu_1015_p2 <= (icmp_ln585_fu_918_p2 and and_ln581_fu_997_p2);
    and_ln585_fu_1009_p2 <= (xor_ln585_fu_1003_p2 and and_ln581_fu_997_p2);
    and_ln603_fu_1033_p2 <= (xor_ln581_fu_1027_p2 and icmp_ln603_fu_924_p2);
    and_ln949_fu_1512_p2 <= (xor_ln949_fu_1492_p2 and p_Result_37_fu_1504_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state22, icmp_ln69_fu_1343_p2)
    begin
        if (((icmp_ln69_fu_1343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state22, icmp_ln69_fu_1343_p2)
    begin
        if (((icmp_ln69_fu_1343_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_934_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_858_p3),to_integer(unsigned('0' & zext_ln586_fu_930_p1(31-1 downto 0)))));
    bitcast_ln696_fu_944_p1 <= cnn_input_load_reg_1712;
    bitcast_ln739_fu_1639_p1 <= p_Result_45_fu_1627_p5;
    cnn_input_address0 <= zext_ln27_fu_795_p1(10 - 1 downto 0);

    cnn_input_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cnn_input_ce0 <= ap_const_logic_1;
        else 
            cnn_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_V_address0_assign_proc : process(grp_conv_1_fu_669_input_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state8, sext_ln203_fu_1089_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_V_address0 <= sext_ln203_fu_1089_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_V_address0 <= grp_conv_1_fu_669_input_V_address0;
        else 
            conv_1_input_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_1_input_V_ce0_assign_proc : process(grp_conv_1_fu_669_input_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_V_ce0 <= grp_conv_1_fu_669_input_V_ce0;
        else 
            conv_1_input_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_V_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_669_conv_out_V_address0, grp_max_pool_1_fu_704_conv_out_V_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_V_address0 <= ap_const_lv64_0(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_V_address0 <= grp_max_pool_1_fu_704_conv_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_V_address0 <= grp_conv_1_fu_669_conv_out_V_address0;
        else 
            conv_1_out_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_669_conv_out_V_ce0, grp_max_pool_1_fu_704_conv_out_V_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_V_ce0 <= grp_max_pool_1_fu_704_conv_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_V_ce0 <= grp_conv_1_fu_669_conv_out_V_ce0;
        else 
            conv_1_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_669_conv_out_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_V_d0 <= grp_conv_1_fu_669_conv_out_V_d0;
        else 
            conv_1_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_726_p2, grp_conv_1_fu_669_conv_out_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln23_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            conv_1_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_V_we0 <= grp_conv_1_fu_669_conv_out_V_we0;
        else 
            conv_1_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_659_conv_out_V_address0, grp_max_pool_2_fu_710_conv_out_V_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv_2_out_V_address0 <= grp_max_pool_2_fu_710_conv_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_address0 <= grp_conv_2_fu_659_conv_out_V_address0;
        else 
            conv_2_out_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_659_conv_out_V_ce0, grp_max_pool_2_fu_710_conv_out_V_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv_2_out_V_ce0 <= grp_max_pool_2_fu_710_conv_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_ce0 <= grp_conv_2_fu_659_conv_out_V_ce0;
        else 
            conv_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_659_conv_out_V_d0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_d0 <= grp_conv_2_fu_659_conv_out_V_d0;
        else 
            conv_2_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_726_p2, grp_conv_2_fu_659_conv_out_V_we0, ap_CS_fsm_state12)
    begin
        if (((icmp_ln23_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            conv_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_we0 <= grp_conv_2_fu_659_conv_out_V_we0;
        else 
            conv_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_V_address0_assign_proc : process(grp_dense_2_fu_502_dense_2_out_V_address0, grp_dense_out_fu_688_dense_2_out_V_address0, ap_CS_fsm_state21, ap_CS_fsm_state19, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_2_out_V_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_2_out_V_address0 <= grp_dense_out_fu_688_dense_2_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_2_out_V_address0 <= grp_dense_2_fu_502_dense_2_out_V_address0;
        else 
            dense_2_out_V_address0 <= "XXXXX";
        end if; 
    end process;


    dense_2_out_V_ce0_assign_proc : process(grp_dense_2_fu_502_dense_2_out_V_ce0, grp_dense_out_fu_688_dense_2_out_V_ce0, ap_CS_fsm_state21, ap_CS_fsm_state19, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_2_out_V_ce0 <= grp_dense_out_fu_688_dense_2_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_2_out_V_ce0 <= grp_dense_2_fu_502_dense_2_out_V_ce0;
        else 
            dense_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_V_d0_assign_proc : process(grp_dense_2_fu_502_dense_2_out_V_d0, ap_CS_fsm_state19, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_2_out_V_d0 <= ap_const_lv13_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_2_out_V_d0 <= grp_dense_2_fu_502_dense_2_out_V_d0;
        else 
            dense_2_out_V_d0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_out_V_we0_assign_proc : process(grp_dense_2_fu_502_dense_2_out_V_we0, ap_CS_fsm_state19, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_2_out_V_we0 <= grp_dense_2_fu_502_dense_2_out_V_we0;
        else 
            dense_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_fu_822_p4 <= ireg_V_fu_806_p1(62 downto 52);

    flat_array_V_address0_assign_proc : process(ap_CS_fsm_state18, grp_dense_1_fu_679_flat_array_V_address0, grp_flat_fu_716_flat_array_V_address0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            flat_array_V_address0 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_address0 <= grp_flat_fu_716_flat_array_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            flat_array_V_address0 <= grp_dense_1_fu_679_flat_array_V_address0;
        else 
            flat_array_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    flat_array_V_ce0_assign_proc : process(ap_CS_fsm_state18, grp_dense_1_fu_679_flat_array_V_ce0, grp_max_pool_2_fu_710_ap_done, grp_flat_fu_716_flat_array_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((grp_max_pool_2_fu_710_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            flat_array_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_ce0 <= grp_flat_fu_716_flat_array_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            flat_array_V_ce0 <= grp_dense_1_fu_679_flat_array_V_ce0;
        else 
            flat_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_V_d0_assign_proc : process(grp_flat_fu_716_flat_array_V_d0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            flat_array_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_d0 <= grp_flat_fu_716_flat_array_V_d0;
        else 
            flat_array_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    flat_array_V_we0_assign_proc : process(grp_max_pool_2_fu_710_ap_done, grp_flat_fu_716_flat_array_V_we0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((grp_max_pool_2_fu_710_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            flat_array_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_we0 <= grp_flat_fu_716_flat_array_V_we0;
        else 
            flat_array_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv_1_fu_669_ap_start <= grp_conv_1_fu_669_ap_start_reg;
    grp_conv_2_fu_659_ap_start <= grp_conv_2_fu_659_ap_start_reg;
    grp_dense_1_fu_679_ap_start <= grp_dense_1_fu_679_ap_start_reg;
    grp_dense_2_fu_502_ap_start <= grp_dense_2_fu_502_ap_start_reg;
    grp_dense_out_fu_688_ap_start <= grp_dense_out_fu_688_ap_start_reg;
    grp_flat_fu_716_ap_start <= grp_flat_fu_716_ap_start_reg;
    grp_max_pool_1_fu_704_ap_start <= grp_max_pool_1_fu_704_ap_start_reg;
    grp_max_pool_2_fu_710_ap_start <= grp_max_pool_2_fu_710_ap_start_reg;
    i_1_fu_1349_p2 <= std_logic_vector(unsigned(i24_0_reg_491) + unsigned(ap_const_lv4_1));
    i_fu_732_p2 <= std_logic_vector(unsigned(i_0_reg_459) + unsigned(ap_const_lv5_1));
    icmp_ln23_fu_726_p2 <= "1" when (i_0_reg_459 = ap_const_lv5_1C) else "0";
    icmp_ln25_fu_774_p2 <= "1" when (j_0_reg_480 = ap_const_lv5_1C) else "0";
    icmp_ln571_fu_866_p2 <= "1" when (trunc_ln556_fu_810_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_878_p2 <= "1" when (signed(F2_fu_872_p2) > signed(ap_const_lv12_8)) else "0";
    icmp_ln582_fu_908_p2 <= "1" when (F2_fu_872_p2 = ap_const_lv12_8) else "0";
    icmp_ln585_fu_918_p2 <= "1" when (unsigned(sh_amt_fu_896_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_924_p2 <= "1" when (unsigned(sh_amt_fu_896_p3) < unsigned(ap_const_lv12_E)) else "0";
    icmp_ln69_fu_1343_p2 <= "1" when (i24_0_reg_491 = ap_const_lv4_A) else "0";
    icmp_ln935_fu_1360_p2 <= "1" when (prediction_V_q0 = ap_const_lv14_0) else "0";
    icmp_ln947_1_fu_1472_p2 <= "0" when (p_Result_36_fu_1466_p2 = ap_const_lv14_0) else "1";
    icmp_ln947_fu_1440_p2 <= "1" when (signed(tmp_66_fu_1430_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln958_fu_1532_p2 <= "1" when (signed(lsb_index_fu_1424_p2) > signed(ap_const_lv32_0)) else "0";
    ireg_V_fu_806_p1 <= grp_fu_722_p1;
    ix_in_fu_738_p2 <= std_logic_vector(unsigned(ix_in_0_reg_447) + unsigned(ap_const_lv10_1C));
    j_fu_780_p2 <= std_logic_vector(unsigned(j_0_reg_480) + unsigned(ap_const_lv5_1));
    
    l_fu_1406_p3_proc : process(p_Result_44_fu_1398_p3)
    begin
        l_fu_1406_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_44_fu_1398_p3(i) = '1' then
                l_fu_1406_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_1424_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE8) + signed(sub_ln944_fu_1414_p2));
    lshr_ln947_fu_1460_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv14_3FFF),to_integer(unsigned('0' & zext_ln947_fu_1456_p1(14-1 downto 0)))));
    lshr_ln958_fu_1550_p2 <= std_logic_vector(shift_right(unsigned(m_fu_1542_p1),to_integer(unsigned('0' & add_ln958_fu_1545_p2(31-1 downto 0)))));
    m_12_fu_1567_p3 <= 
        lshr_ln958_fu_1550_p2 when (icmp_ln958_reg_2017(0) = '1') else 
        shl_ln958_fu_1561_p2;
    m_13_fu_1574_p2 <= std_logic_vector(unsigned(m_12_fu_1567_p3) + unsigned(or_ln_reg_2012));
    m_16_fu_1589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_fu_1579_p4),32));
    m_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_13_reg_2001),32));
    m_s_fu_1579_p4 <= m_13_fu_1574_p2(31 downto 1);
    man_V_1_fu_852_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_42_fu_848_p1));
    man_V_2_fu_858_p3 <= 
        man_V_1_fu_852_p2 when (p_Result_41_fu_814_p3(0) = '1') else 
        p_Result_42_fu_848_p1;

    max_pool_1_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_659_input_V_address0, grp_max_pool_1_fu_704_max_pool_out_V_address0, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_address0 <= grp_max_pool_1_fu_704_max_pool_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            max_pool_1_out_V_address0 <= grp_conv_2_fu_659_input_V_address0;
        else 
            max_pool_1_out_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_659_input_V_ce0, grp_max_pool_1_fu_704_max_pool_out_V_ce0, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_ce0 <= grp_max_pool_1_fu_704_max_pool_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            max_pool_1_out_V_ce0 <= grp_conv_2_fu_659_input_V_ce0;
        else 
            max_pool_1_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_1_fu_704_max_pool_out_V_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_d0 <= grp_max_pool_1_fu_704_max_pool_out_V_d0;
        else 
            max_pool_1_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_726_p2, grp_max_pool_1_fu_704_max_pool_out_V_we0, ap_CS_fsm_state10)
    begin
        if (((icmp_ln23_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            max_pool_1_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_we0 <= grp_max_pool_1_fu_704_max_pool_out_V_we0;
        else 
            max_pool_1_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_710_max_pool_out_V_address0, grp_flat_fu_716_max_pool_out_V_address0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_address0 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            max_pool_2_out_V_address0 <= grp_flat_fu_716_max_pool_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_address0 <= grp_max_pool_2_fu_710_max_pool_out_V_address0;
        else 
            max_pool_2_out_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_710_max_pool_out_V_ce0, grp_flat_fu_716_max_pool_out_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            max_pool_2_out_V_ce0 <= grp_flat_fu_716_max_pool_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_ce0 <= grp_max_pool_2_fu_710_max_pool_out_V_ce0;
        else 
            max_pool_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_710_max_pool_out_V_d0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_d0 <= grp_max_pool_2_fu_710_max_pool_out_V_d0;
        else 
            max_pool_2_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_726_p2, grp_max_pool_2_fu_710_max_pool_out_V_we0, ap_CS_fsm_state14)
    begin
        if (((icmp_ln23_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            max_pool_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_we0 <= grp_max_pool_2_fu_710_max_pool_out_V_we0;
        else 
            max_pool_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_fu_1021_p2 <= (or_ln582_fu_985_p2 or icmp_ln581_fu_878_p2);
    or_ln582_fu_985_p2 <= (icmp_ln582_fu_908_p2 or icmp_ln571_fu_866_p2);
    or_ln603_1_fu_1061_p2 <= (and_ln585_fu_1009_p2 or and_ln582_fu_979_p2);
    or_ln603_2_fu_1075_p2 <= (or_ln603_fu_1047_p2 or or_ln603_1_fu_1061_p2);
    or_ln603_fu_1047_p2 <= (and_ln603_fu_1033_p2 or and_ln585_1_fu_1015_p2);
    or_ln949_fu_1518_p2 <= (and_ln949_fu_1512_p2 or a_fu_1478_p2);
    or_ln_fu_1524_p3 <= (ap_const_lv31_0 & or_ln949_fu_1518_p2);
    p_Result_36_fu_1466_p2 <= (tmp_V_13_fu_1380_p3 and lshr_ln947_fu_1460_p2);
    p_Result_37_fu_1504_p3 <= tmp_V_13_fu_1380_p3(to_integer(unsigned(add_ln949_fu_1498_p2)) downto to_integer(unsigned(add_ln949_fu_1498_p2))) when (to_integer(unsigned(add_ln949_fu_1498_p2))>= 0 and to_integer(unsigned(add_ln949_fu_1498_p2))<=13) else "-";
    p_Result_41_fu_814_p3 <= ireg_V_fu_806_p1(63 downto 63);
    p_Result_42_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_840_p3),54));
    p_Result_43_fu_1366_p3 <= prediction_V_q0(13 downto 13);
    p_Result_44_fu_1398_p3 <= (ap_const_lv18_3FFFF & p_Result_s_fu_1388_p4);
    p_Result_45_fu_1627_p5 <= (tmp_9_fu_1620_p3 & m_16_fu_1589_p1(22 downto 0));
    
    p_Result_s_fu_1388_p4_proc : process(tmp_V_13_fu_1380_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(14+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(14+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable p_Result_s_fu_1388_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(14 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_D(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_13_fu_1380_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(14-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(14-1-unsigned(ap_const_lv32_D(4-1 downto 0)));
            for p_Result_s_fu_1388_p4_i in 0 to 14-1 loop
                v0_cpy(p_Result_s_fu_1388_p4_i) := tmp_V_13_fu_1380_p3(14-1-p_Result_s_fu_1388_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(14-1 downto 0)))));
        res_mask := res_mask(14-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_1388_p4 <= resvalue(14-1 downto 0);
    end process;


    prediction_V_address0_assign_proc : process(ap_CS_fsm_state22, zext_ln70_fu_1355_p1, grp_dense_out_fu_688_prediction_V_address0, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            prediction_V_address0 <= zext_ln70_fu_1355_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            prediction_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_V_address0 <= grp_dense_out_fu_688_prediction_V_address0;
        else 
            prediction_V_address0 <= "XXXX";
        end if; 
    end process;


    prediction_V_ce0_assign_proc : process(ap_CS_fsm_state22, grp_dense_2_fu_502_ap_done, grp_dense_out_fu_688_prediction_V_ce0, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((grp_dense_2_fu_502_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            prediction_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_V_ce0 <= grp_dense_out_fu_688_prediction_V_ce0;
        else 
            prediction_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_V_d0_assign_proc : process(grp_dense_out_fu_688_prediction_V_d0, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            prediction_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_V_d0 <= grp_dense_out_fu_688_prediction_V_d0;
        else 
            prediction_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    prediction_V_we0_assign_proc : process(grp_dense_2_fu_502_ap_done, grp_dense_out_fu_688_prediction_V_we0, ap_CS_fsm_state21, ap_CS_fsm_state19)
    begin
        if (((grp_dense_2_fu_502_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            prediction_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            prediction_V_we0 <= grp_dense_out_fu_688_prediction_V_we0;
        else 
            prediction_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prediction_output_address0 <= zext_ln70_reg_1981(4 - 1 downto 0);

    prediction_output_ce0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            prediction_output_ce0 <= ap_const_logic_1;
        else 
            prediction_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prediction_output_d0 <= 
        ap_const_lv32_0 when (icmp_ln935_reg_1991(0) = '1') else 
        bitcast_ln739_fu_1639_p1;

    prediction_output_we0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            prediction_output_we0 <= ap_const_logic_1;
        else 
            prediction_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln588_fu_955_p3 <= 
        ap_const_lv14_3FFF when (tmp_70_fu_947_p3(0) = '1') else 
        ap_const_lv14_0;
    select_ln603_1_fu_1053_p3 <= 
        select_ln588_fu_955_p3 when (and_ln585_fu_1009_p2(0) = '1') else 
        trunc_ln583_fu_914_p1;
    select_ln603_2_fu_1067_p3 <= 
        select_ln603_fu_1039_p3 when (or_ln603_fu_1047_p2(0) = '1') else 
        select_ln603_1_fu_1053_p3;
    select_ln603_3_fu_1081_p3 <= 
        select_ln603_2_fu_1067_p3 when (or_ln603_2_fu_1075_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln603_fu_1039_p3 <= 
        shl_ln604_fu_967_p2 when (and_ln603_fu_1033_p2(0) = '1') else 
        trunc_ln586_fu_940_p1;
    select_ln964_fu_1601_p3 <= 
        ap_const_lv8_7F when (tmp_68_fu_1593_p3(0) = '1') else 
        ap_const_lv8_7E;
        sext_ln203_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_reg_1697),64));

        sext_ln581_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_896_p3),32));

    sext_ln581cast_fu_963_p1 <= sext_ln581_fu_904_p1(14 - 1 downto 0);
    sh_amt_fu_896_p3 <= 
        add_ln581_fu_884_p2 when (icmp_ln581_fu_878_p2(0) = '1') else 
        sub_ln581_fu_890_p2;
    shl_ln604_fu_967_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_914_p1),to_integer(unsigned('0' & sext_ln581cast_fu_963_p1(14-1 downto 0)))));
    shl_ln958_fu_1561_p2 <= std_logic_vector(shift_left(unsigned(m_fu_1542_p1),to_integer(unsigned('0' & sub_ln958_fu_1556_p2(31-1 downto 0)))));
    sub_ln203_fu_768_p2 <= std_logic_vector(unsigned(zext_ln203_fu_752_p1) - unsigned(zext_ln203_17_fu_764_p1));
    sub_ln581_fu_890_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) - unsigned(F2_fu_872_p2));
    sub_ln944_fu_1414_p2 <= std_logic_vector(unsigned(ap_const_lv32_E) - unsigned(l_fu_1406_p3));
    sub_ln947_fu_1450_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(trunc_ln947_fu_1446_p1));
    sub_ln958_fu_1556_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_2006));
    sub_ln964_fu_1609_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln943_reg_2022));
    tmp_54_fu_756_p3 <= (i_0_reg_459 & ap_const_lv2_0);
    tmp_66_fu_1430_p4 <= lsb_index_fu_1424_p2(31 downto 1);
    tmp_67_fu_1484_p3 <= lsb_index_fu_1424_p2(31 downto 31);
    tmp_68_fu_1593_p3 <= m_13_fu_1574_p2(25 downto 25);
    tmp_70_fu_947_p3 <= bitcast_ln696_fu_944_p1(31 downto 31);
    tmp_9_fu_1620_p3 <= (p_Result_43_reg_1996 & add_ln964_fu_1614_p2);
    tmp_V_13_fu_1380_p3 <= 
        tmp_V_fu_1374_p2 when (p_Result_43_fu_1366_p3(0) = '1') else 
        prediction_V_q0;
    tmp_V_fu_1374_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(prediction_V_q0));
    tmp_fu_840_p3 <= (ap_const_lv1_1 & trunc_ln565_fu_836_p1);
    tmp_s_fu_744_p3 <= (i_0_reg_459 & ap_const_lv5_0);
    trunc_ln556_fu_810_p1 <= ireg_V_fu_806_p1(63 - 1 downto 0);
    trunc_ln565_fu_836_p1 <= ireg_V_fu_806_p1(52 - 1 downto 0);
    trunc_ln583_fu_914_p1 <= man_V_2_fu_858_p3(14 - 1 downto 0);
    trunc_ln586_fu_940_p1 <= ashr_ln586_fu_934_p2(14 - 1 downto 0);
    trunc_ln943_fu_1538_p1 <= l_fu_1406_p3(8 - 1 downto 0);
    trunc_ln944_fu_1420_p1 <= sub_ln944_fu_1414_p2(14 - 1 downto 0);
    trunc_ln947_fu_1446_p1 <= sub_ln944_fu_1414_p2(4 - 1 downto 0);
    xor_ln571_fu_973_p2 <= (icmp_ln571_fu_866_p2 xor ap_const_lv1_1);
    xor_ln581_fu_1027_p2 <= (or_ln581_fu_1021_p2 xor ap_const_lv1_1);
    xor_ln582_fu_991_p2 <= (or_ln582_fu_985_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1003_p2 <= (icmp_ln585_fu_918_p2 xor ap_const_lv1_1);
    xor_ln949_fu_1492_p2 <= (tmp_67_fu_1484_p3 xor ap_const_lv1_1);
    zext_ln203_17_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_756_p3),11));
    zext_ln203_18_fu_786_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_480),11));
    zext_ln203_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_744_p3),11));
    zext_ln27_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ix_in_1_reg_470),64));
    zext_ln461_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_822_p4),12));
    zext_ln586_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_904_p1),54));
    zext_ln70_fu_1355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i24_0_reg_491),64));
    zext_ln947_fu_1456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_1450_p2),14));
end behav;
