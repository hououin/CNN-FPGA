// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> dense_1::ap_ST_fsm_state1 = "1";
const sc_lv<3> dense_1::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> dense_1::ap_ST_fsm_state4 = "100";
const bool dense_1::ap_const_boolean_1 = true;
const sc_lv<32> dense_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_1::ap_const_lv32_1 = "1";
const bool dense_1::ap_const_boolean_0 = false;
const sc_lv<1> dense_1::ap_const_lv1_0 = "0";
const sc_lv<1> dense_1::ap_const_lv1_1 = "1";
const sc_lv<15> dense_1::ap_const_lv15_0 = "000000000000000";
const sc_lv<6> dense_1::ap_const_lv6_0 = "000000";
const sc_lv<14> dense_1::ap_const_lv14_0 = "00000000000000";
const sc_lv<9> dense_1::ap_const_lv9_0 = "000000000";
const sc_lv<15> dense_1::ap_const_lv15_4E20 = "100111000100000";
const sc_lv<15> dense_1::ap_const_lv15_1 = "1";
const sc_lv<6> dense_1::ap_const_lv6_1 = "1";
const sc_lv<9> dense_1::ap_const_lv9_190 = "110010000";
const sc_lv<9> dense_1::ap_const_lv9_1 = "1";
const sc_lv<8> dense_1::ap_const_lv8_0 = "00000000";
const sc_lv<32> dense_1::ap_const_lv32_8 = "1000";
const sc_lv<32> dense_1::ap_const_lv32_15 = "10101";
const sc_lv<32> dense_1::ap_const_lv32_14 = "10100";
const sc_lv<32> dense_1::ap_const_lv32_D = "1101";
const sc_lv<13> dense_1::ap_const_lv13_0 = "0000000000000";
const sc_lv<15> dense_1::ap_const_lv15_32 = "110010";
const sc_lv<32> dense_1::ap_const_lv32_2 = "10";

dense_1::dense_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_1_bias_V_U = new dense_1_dense_1_bibs("dense_1_bias_V_U");
    dense_1_bias_V_U->clk(ap_clk);
    dense_1_bias_V_U->reset(ap_rst);
    dense_1_bias_V_U->address0(dense_1_bias_V_address0);
    dense_1_bias_V_U->ce0(dense_1_bias_V_ce0);
    dense_1_bias_V_U->q0(dense_1_bias_V_q0);
    dense_1_weights_V_U = new dense_1_dense_1_wjbC("dense_1_weights_V_U");
    dense_1_weights_V_U->clk(ap_clk);
    dense_1_weights_V_U->reset(ap_rst);
    dense_1_weights_V_U->address0(dense_1_weights_V_address0);
    dense_1_weights_V_U->ce0(dense_1_weights_V_ce0);
    dense_1_weights_V_U->q0(dense_1_weights_V_q0);
    cnn_mac_muladd_9nkbM_U22 = new cnn_mac_muladd_9nkbM<1,1,9,7,6,15>("cnn_mac_muladd_9nkbM_U22");
    cnn_mac_muladd_9nkbM_U22->din0(grp_fu_323_p0);
    cnn_mac_muladd_9nkbM_U22->din1(grp_fu_323_p1);
    cnn_mac_muladd_9nkbM_U22->din2(grp_fu_323_p2);
    cnn_mac_muladd_9nkbM_U22->dout(grp_fu_323_p3);
    cnn_mac_muladd_14lbW_U23 = new cnn_mac_muladd_14lbW<1,1,14,9,22,22>("cnn_mac_muladd_14lbW_U23");
    cnn_mac_muladd_14lbW_U23->din0(flat_array_V_q0);
    cnn_mac_muladd_14lbW_U23->din1(dense_1_weights_V_q0);
    cnn_mac_muladd_14lbW_U23->din2(grp_fu_332_p2);
    cnn_mac_muladd_14lbW_U23->dout(grp_fu_332_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln203_fu_300_p2);
    sensitive << ( trunc_ln_fu_281_p4 );
    sensitive << ( sext_ln703_fu_290_p1 );

    SC_METHOD(thread_add_ln703_fu_294_p2);
    sensitive << ( sum_V_fu_268_p4 );
    sensitive << ( sext_ln1265_fu_277_p1 );

    SC_METHOD(thread_add_ln9_fu_177_p2);
    sensitive << ( indvar_flatten_reg_126 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln9_fu_171_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_141_p4);
    sensitive << ( i_0_reg_137 );
    sensitive << ( icmp_ln9_reg_342 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln14_1_reg_356 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_j_0_phi_fu_164_p4);
    sensitive << ( j_0_reg_160 );
    sensitive << ( icmp_ln9_reg_342 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j_reg_376 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_dense_1_bias_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln14_fu_211_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_dense_1_bias_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_dense_1_out_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln14_reg_361 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_dense_1_out_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dense_1_out_V_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_fu_306_p3 );
    sensitive << ( add_ln203_fu_300_p2 );

    SC_METHOD(thread_dense_1_out_V_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln13_1_reg_381 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dense_1_weights_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln1117_1_fu_229_p1 );

    SC_METHOD(thread_dense_1_weights_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_flat_array_V_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_1_fu_220_p1 );

    SC_METHOD(thread_flat_array_V_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_323_p0);
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_323_p00 );

    SC_METHOD(thread_grp_fu_323_p00);
    sensitive << ( select_ln14_fu_195_p3 );

    SC_METHOD(thread_grp_fu_323_p1);
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_323_p2);
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_323_p20 );

    SC_METHOD(thread_grp_fu_323_p20);
    sensitive << ( select_ln14_1_fu_203_p3 );

    SC_METHOD(thread_grp_fu_332_p2);
    sensitive << ( icmp_ln9_reg_342 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( select_ln14_2_fu_253_p3 );

    SC_METHOD(thread_i_fu_183_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_141_p4 );

    SC_METHOD(thread_icmp_ln13_1_fu_239_p2);
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_fu_233_p2 );

    SC_METHOD(thread_icmp_ln13_fu_189_p2);
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_164_p4 );

    SC_METHOD(thread_icmp_ln9_fu_171_p2);
    sensitive << ( indvar_flatten_reg_126 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_233_p2);
    sensitive << ( select_ln14_fu_195_p3 );

    SC_METHOD(thread_select_ln14_1_fu_203_p3);
    sensitive << ( icmp_ln13_fu_189_p2 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_141_p4 );
    sensitive << ( i_fu_183_p2 );

    SC_METHOD(thread_select_ln14_2_fu_253_p3);
    sensitive << ( p_Val2_s_reg_148 );
    sensitive << ( icmp_ln13_reg_351 );

    SC_METHOD(thread_select_ln14_fu_195_p3);
    sensitive << ( icmp_ln13_fu_189_p2 );
    sensitive << ( ap_phi_mux_j_0_phi_fu_164_p4 );

    SC_METHOD(thread_sext_ln1265_fu_277_p0);
    sensitive << ( dense_1_bias_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_sext_ln1265_fu_277_p1);
    sensitive << ( sext_ln1265_fu_277_p0 );

    SC_METHOD(thread_sext_ln703_fu_290_p0);
    sensitive << ( dense_1_bias_V_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_sext_ln703_fu_290_p1);
    sensitive << ( sext_ln703_fu_290_p0 );

    SC_METHOD(thread_sum_V_fu_268_p4);
    sensitive << ( grp_fu_332_p3 );

    SC_METHOD(thread_tmp_fu_306_p3);
    sensitive << ( add_ln703_fu_294_p2 );

    SC_METHOD(thread_trunc_ln_fu_281_p4);
    sensitive << ( grp_fu_332_p3 );

    SC_METHOD(thread_zext_ln1117_1_fu_229_p1);
    sensitive << ( grp_fu_323_p3 );

    SC_METHOD(thread_zext_ln14_1_fu_220_p1);
    sensitive << ( select_ln14_fu_195_p3 );

    SC_METHOD(thread_zext_ln14_fu_211_p1);
    sensitive << ( select_ln14_1_fu_203_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln9_fu_171_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, flat_array_V_address0, "(port)flat_array_V_address0");
    sc_trace(mVcdFile, flat_array_V_ce0, "(port)flat_array_V_ce0");
    sc_trace(mVcdFile, flat_array_V_q0, "(port)flat_array_V_q0");
    sc_trace(mVcdFile, dense_1_out_V_address0, "(port)dense_1_out_V_address0");
    sc_trace(mVcdFile, dense_1_out_V_ce0, "(port)dense_1_out_V_ce0");
    sc_trace(mVcdFile, dense_1_out_V_we0, "(port)dense_1_out_V_we0");
    sc_trace(mVcdFile, dense_1_out_V_d0, "(port)dense_1_out_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_1_bias_V_address0, "dense_1_bias_V_address0");
    sc_trace(mVcdFile, dense_1_bias_V_ce0, "dense_1_bias_V_ce0");
    sc_trace(mVcdFile, dense_1_bias_V_q0, "dense_1_bias_V_q0");
    sc_trace(mVcdFile, dense_1_weights_V_address0, "dense_1_weights_V_address0");
    sc_trace(mVcdFile, dense_1_weights_V_ce0, "dense_1_weights_V_ce0");
    sc_trace(mVcdFile, dense_1_weights_V_q0, "dense_1_weights_V_q0");
    sc_trace(mVcdFile, indvar_flatten_reg_126, "indvar_flatten_reg_126");
    sc_trace(mVcdFile, i_0_reg_137, "i_0_reg_137");
    sc_trace(mVcdFile, p_Val2_s_reg_148, "p_Val2_s_reg_148");
    sc_trace(mVcdFile, j_0_reg_160, "j_0_reg_160");
    sc_trace(mVcdFile, icmp_ln9_fu_171_p2, "icmp_ln9_fu_171_p2");
    sc_trace(mVcdFile, icmp_ln9_reg_342, "icmp_ln9_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln9_fu_177_p2, "add_ln9_fu_177_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln13_fu_189_p2, "icmp_ln13_fu_189_p2");
    sc_trace(mVcdFile, icmp_ln13_reg_351, "icmp_ln13_reg_351");
    sc_trace(mVcdFile, select_ln14_1_fu_203_p3, "select_ln14_1_fu_203_p3");
    sc_trace(mVcdFile, select_ln14_1_reg_356, "select_ln14_1_reg_356");
    sc_trace(mVcdFile, zext_ln14_fu_211_p1, "zext_ln14_fu_211_p1");
    sc_trace(mVcdFile, zext_ln14_reg_361, "zext_ln14_reg_361");
    sc_trace(mVcdFile, j_fu_233_p2, "j_fu_233_p2");
    sc_trace(mVcdFile, j_reg_376, "j_reg_376");
    sc_trace(mVcdFile, icmp_ln13_1_fu_239_p2, "icmp_ln13_1_fu_239_p2");
    sc_trace(mVcdFile, icmp_ln13_1_reg_381, "icmp_ln13_1_reg_381");
    sc_trace(mVcdFile, sum_V_fu_268_p4, "sum_V_fu_268_p4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_141_p4, "ap_phi_mux_i_0_phi_fu_141_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_j_0_phi_fu_164_p4, "ap_phi_mux_j_0_phi_fu_164_p4");
    sc_trace(mVcdFile, zext_ln1117_1_fu_229_p1, "zext_ln1117_1_fu_229_p1");
    sc_trace(mVcdFile, zext_ln14_1_fu_220_p1, "zext_ln14_1_fu_220_p1");
    sc_trace(mVcdFile, i_fu_183_p2, "i_fu_183_p2");
    sc_trace(mVcdFile, select_ln14_fu_195_p3, "select_ln14_fu_195_p3");
    sc_trace(mVcdFile, grp_fu_323_p3, "grp_fu_323_p3");
    sc_trace(mVcdFile, select_ln14_2_fu_253_p3, "select_ln14_2_fu_253_p3");
    sc_trace(mVcdFile, grp_fu_332_p3, "grp_fu_332_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_277_p0, "sext_ln1265_fu_277_p0");
    sc_trace(mVcdFile, sext_ln703_fu_290_p0, "sext_ln703_fu_290_p0");
    sc_trace(mVcdFile, sext_ln1265_fu_277_p1, "sext_ln1265_fu_277_p1");
    sc_trace(mVcdFile, trunc_ln_fu_281_p4, "trunc_ln_fu_281_p4");
    sc_trace(mVcdFile, sext_ln703_fu_290_p1, "sext_ln703_fu_290_p1");
    sc_trace(mVcdFile, add_ln703_fu_294_p2, "add_ln703_fu_294_p2");
    sc_trace(mVcdFile, tmp_fu_306_p3, "tmp_fu_306_p3");
    sc_trace(mVcdFile, add_ln203_fu_300_p2, "add_ln203_fu_300_p2");
    sc_trace(mVcdFile, grp_fu_323_p0, "grp_fu_323_p0");
    sc_trace(mVcdFile, grp_fu_323_p1, "grp_fu_323_p1");
    sc_trace(mVcdFile, grp_fu_323_p2, "grp_fu_323_p2");
    sc_trace(mVcdFile, grp_fu_332_p2, "grp_fu_332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_323_p00, "grp_fu_323_p00");
    sc_trace(mVcdFile, grp_fu_323_p20, "grp_fu_323_p20");
#endif

    }
}

dense_1::~dense_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_1_bias_V_U;
    delete dense_1_weights_V_U;
    delete cnn_mac_muladd_9nkbM_U22;
    delete cnn_mac_muladd_14lbW_U23;
}

void dense_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_reg_342.read(), ap_const_lv1_0))) {
        i_0_reg_137 = select_ln14_1_reg_356.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_137 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_126 = add_ln9_fu_177_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_126 = ap_const_lv15_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_reg_342.read(), ap_const_lv1_0))) {
        j_0_reg_160 = j_reg_376.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_160 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_reg_342.read(), ap_const_lv1_0))) {
        p_Val2_s_reg_148 = grp_fu_332_p3.read().range(21, 8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_s_reg_148 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_0))) {
        icmp_ln13_1_reg_381 = icmp_ln13_1_fu_239_p2.read();
        icmp_ln13_reg_351 = icmp_ln13_fu_189_p2.read();
        zext_ln14_reg_361 = zext_ln14_fu_211_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln9_reg_342 = icmp_ln9_fu_171_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_0))) {
        j_reg_376 = j_fu_233_p2.read();
        select_ln14_1_reg_356 = select_ln14_1_fu_203_p3.read();
    }
}

void dense_1::thread_add_ln203_fu_300_p2() {
    add_ln203_fu_300_p2 = (!trunc_ln_fu_281_p4.read().is_01() || !sext_ln703_fu_290_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(trunc_ln_fu_281_p4.read()) + sc_bigint<13>(sext_ln703_fu_290_p1.read()));
}

void dense_1::thread_add_ln703_fu_294_p2() {
    add_ln703_fu_294_p2 = (!sext_ln1265_fu_277_p1.read().is_01() || !sum_V_fu_268_p4.read().is_01())? sc_lv<14>(): (sc_bigint<14>(sext_ln1265_fu_277_p1.read()) + sc_biguint<14>(sum_V_fu_268_p4.read()));
}

void dense_1::thread_add_ln9_fu_177_p2() {
    add_ln9_fu_177_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(indvar_flatten_reg_126.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void dense_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void dense_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void dense_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense_1::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense_1::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense_1::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void dense_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dense_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dense_1::thread_ap_phi_mux_i_0_phi_fu_141_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_reg_342.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_141_p4 = select_ln14_1_reg_356.read();
    } else {
        ap_phi_mux_i_0_phi_fu_141_p4 = i_0_reg_137.read();
    }
}

void dense_1::thread_ap_phi_mux_j_0_phi_fu_164_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_reg_342.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_j_0_phi_fu_164_p4 = j_reg_376.read();
    } else {
        ap_phi_mux_j_0_phi_fu_164_p4 = j_0_reg_160.read();
    }
}

void dense_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_bias_V_address0() {
    dense_1_bias_V_address0 =  (sc_lv<6>) (zext_ln14_fu_211_p1.read());
}

void dense_1::thread_dense_1_bias_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_1_bias_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_bias_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_V_address0() {
    dense_1_out_V_address0 =  (sc_lv<6>) (zext_ln14_reg_361.read());
}

void dense_1::thread_dense_1_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        dense_1_out_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_out_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_out_V_d0() {
    dense_1_out_V_d0 = (!tmp_fu_306_p3.read()[0].is_01())? sc_lv<13>(): ((tmp_fu_306_p3.read()[0].to_bool())? ap_const_lv13_0: add_ln203_fu_300_p2.read());
}

void dense_1::thread_dense_1_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_1_reg_381.read(), ap_const_lv1_1))) {
        dense_1_out_V_we0 = ap_const_logic_1;
    } else {
        dense_1_out_V_we0 = ap_const_logic_0;
    }
}

void dense_1::thread_dense_1_weights_V_address0() {
    dense_1_weights_V_address0 =  (sc_lv<15>) (zext_ln1117_1_fu_229_p1.read());
}

void dense_1::thread_dense_1_weights_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_1_weights_V_ce0 = ap_const_logic_1;
    } else {
        dense_1_weights_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_flat_array_V_address0() {
    flat_array_V_address0 =  (sc_lv<9>) (zext_ln14_1_fu_220_p1.read());
}

void dense_1::thread_flat_array_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        flat_array_V_ce0 = ap_const_logic_1;
    } else {
        flat_array_V_ce0 = ap_const_logic_0;
    }
}

void dense_1::thread_grp_fu_323_p0() {
    grp_fu_323_p0 =  (sc_lv<9>) (grp_fu_323_p00.read());
}

void dense_1::thread_grp_fu_323_p00() {
    grp_fu_323_p00 = esl_zext<15,9>(select_ln14_fu_195_p3.read());
}

void dense_1::thread_grp_fu_323_p1() {
    grp_fu_323_p1 =  (sc_lv<7>) (ap_const_lv15_32);
}

void dense_1::thread_grp_fu_323_p2() {
    grp_fu_323_p2 =  (sc_lv<6>) (grp_fu_323_p20.read());
}

void dense_1::thread_grp_fu_323_p20() {
    grp_fu_323_p20 = esl_zext<15,6>(select_ln14_1_fu_203_p3.read());
}

void dense_1::thread_grp_fu_332_p2() {
    grp_fu_332_p2 = esl_concat<14,8>(select_ln14_2_fu_253_p3.read(), ap_const_lv8_0);
}

void dense_1::thread_i_fu_183_p2() {
    i_fu_183_p2 = (!ap_phi_mux_i_0_phi_fu_141_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_i_0_phi_fu_141_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dense_1::thread_icmp_ln13_1_fu_239_p2() {
    icmp_ln13_1_fu_239_p2 = (!j_fu_233_p2.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(j_fu_233_p2.read() == ap_const_lv9_190);
}

void dense_1::thread_icmp_ln13_fu_189_p2() {
    icmp_ln13_fu_189_p2 = (!ap_phi_mux_j_0_phi_fu_164_p4.read().is_01() || !ap_const_lv9_190.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_j_0_phi_fu_164_p4.read() == ap_const_lv9_190);
}

void dense_1::thread_icmp_ln9_fu_171_p2() {
    icmp_ln9_fu_171_p2 = (!indvar_flatten_reg_126.read().is_01() || !ap_const_lv15_4E20.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_126.read() == ap_const_lv15_4E20);
}

void dense_1::thread_j_fu_233_p2() {
    j_fu_233_p2 = (!select_ln14_fu_195_p3.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(select_ln14_fu_195_p3.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void dense_1::thread_select_ln14_1_fu_203_p3() {
    select_ln14_1_fu_203_p3 = (!icmp_ln13_fu_189_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln13_fu_189_p2.read()[0].to_bool())? i_fu_183_p2.read(): ap_phi_mux_i_0_phi_fu_141_p4.read());
}

void dense_1::thread_select_ln14_2_fu_253_p3() {
    select_ln14_2_fu_253_p3 = (!icmp_ln13_reg_351.read()[0].is_01())? sc_lv<14>(): ((icmp_ln13_reg_351.read()[0].to_bool())? ap_const_lv14_0: p_Val2_s_reg_148.read());
}

void dense_1::thread_select_ln14_fu_195_p3() {
    select_ln14_fu_195_p3 = (!icmp_ln13_fu_189_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln13_fu_189_p2.read()[0].to_bool())? ap_const_lv9_0: ap_phi_mux_j_0_phi_fu_164_p4.read());
}

void dense_1::thread_sext_ln1265_fu_277_p0() {
    sext_ln1265_fu_277_p0 = dense_1_bias_V_q0.read();
}

void dense_1::thread_sext_ln1265_fu_277_p1() {
    sext_ln1265_fu_277_p1 = esl_sext<14,6>(sext_ln1265_fu_277_p0.read());
}

void dense_1::thread_sext_ln703_fu_290_p0() {
    sext_ln703_fu_290_p0 = dense_1_bias_V_q0.read();
}

void dense_1::thread_sext_ln703_fu_290_p1() {
    sext_ln703_fu_290_p1 = esl_sext<13,6>(sext_ln703_fu_290_p0.read());
}

void dense_1::thread_sum_V_fu_268_p4() {
    sum_V_fu_268_p4 = grp_fu_332_p3.read().range(21, 8);
}

void dense_1::thread_tmp_fu_306_p3() {
    tmp_fu_306_p3 = add_ln703_fu_294_p2.read().range(13, 13);
}

void dense_1::thread_trunc_ln_fu_281_p4() {
    trunc_ln_fu_281_p4 = grp_fu_332_p3.read().range(20, 8);
}

void dense_1::thread_zext_ln1117_1_fu_229_p1() {
    zext_ln1117_1_fu_229_p1 = esl_zext<64,15>(grp_fu_323_p3.read());
}

void dense_1::thread_zext_ln14_1_fu_220_p1() {
    zext_ln14_1_fu_220_p1 = esl_zext<64,9>(select_ln14_fu_195_p3.read());
}

void dense_1::thread_zext_ln14_fu_211_p1() {
    zext_ln14_fu_211_p1 = esl_zext<64,6>(select_ln14_1_fu_203_p3.read());
}

void dense_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln9_fu_171_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

