// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.990188,HLS_SYN_LAT=438841,HLS_SYN_TPT=none,HLS_SYN_MEM=31,HLS_SYN_DSP=9,HLS_SYN_FF=2303,HLS_SYN_LUT=8352,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_input_address0,
        cnn_input_ce0,
        cnn_input_q0,
        prediction_output_address0,
        prediction_output_ce0,
        prediction_output_we0,
        prediction_output_d0
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_state17 = 30'd65536;
parameter    ap_ST_fsm_state18 = 30'd131072;
parameter    ap_ST_fsm_state19 = 30'd262144;
parameter    ap_ST_fsm_state20 = 30'd524288;
parameter    ap_ST_fsm_state21 = 30'd1048576;
parameter    ap_ST_fsm_state22 = 30'd2097152;
parameter    ap_ST_fsm_state23 = 30'd4194304;
parameter    ap_ST_fsm_state24 = 30'd8388608;
parameter    ap_ST_fsm_state25 = 30'd16777216;
parameter    ap_ST_fsm_state26 = 30'd33554432;
parameter    ap_ST_fsm_state27 = 30'd67108864;
parameter    ap_ST_fsm_state28 = 30'd134217728;
parameter    ap_ST_fsm_state29 = 30'd268435456;
parameter    ap_ST_fsm_state30 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] cnn_input_address0;
output   cnn_input_ce0;
input  [31:0] cnn_input_q0;
output  [3:0] prediction_output_address0;
output   prediction_output_ce0;
output   prediction_output_we0;
output  [31:0] prediction_output_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cnn_input_ce0;
reg prediction_output_ce0;
reg prediction_output_we0;

(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
wire   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire  signed [8:0] dense_out_weights_V_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
wire   [4:0] i_fu_695_p2;
reg   [4:0] i_reg_1661;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_701_p2;
reg   [9:0] ix_in_reg_1666;
wire   [0:0] icmp_ln23_fu_689_p2;
wire   [10:0] sub_ln203_fu_731_p2;
reg   [10:0] sub_ln203_reg_1671;
wire   [4:0] j_fu_743_p2;
reg   [4:0] j_reg_1679;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln203_8_fu_753_p2;
reg   [10:0] add_ln203_8_reg_1684;
wire   [0:0] icmp_ln25_fu_737_p2;
wire   [9:0] add_ln28_fu_763_p2;
reg   [9:0] add_ln28_reg_1694;
reg   [31:0] cnn_input_load_reg_1699;
wire    ap_CS_fsm_state4;
wire   [13:0] select_ln603_3_fu_1044_p3;
reg   [13:0] select_ln603_3_reg_1705;
wire    ap_CS_fsm_state5;
wire   [4:0] i_1_fu_1062_p2;
reg   [4:0] i_1_reg_1713;
wire    ap_CS_fsm_state19;
wire   [63:0] zext_ln14_fu_1068_p1;
reg   [63:0] zext_ln14_reg_1718;
wire   [0:0] icmp_ln9_fu_1056_p2;
wire   [11:0] zext_ln13_fu_1072_p1;
reg   [11:0] zext_ln13_reg_1724;
wire   [5:0] j_1_fu_1082_p2;
reg   [5:0] j_1_reg_1732;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln13_fu_1076_p2;
wire    ap_CS_fsm_state21;
wire   [3:0] d_fu_1205_p2;
reg   [3:0] d_reg_1760;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln48_fu_1211_p1;
reg   [63:0] zext_ln48_reg_1765;
wire   [0:0] icmp_ln41_fu_1199_p2;
wire   [8:0] zext_ln46_fu_1215_p1;
reg   [8:0] zext_ln46_reg_1771;
wire   [4:0] f_fu_1225_p2;
reg   [4:0] f_reg_1779;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln46_fu_1219_p2;
wire    ap_CS_fsm_state25;
wire   [3:0] i_2_fu_1318_p2;
reg   [3:0] i_2_reg_1807;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln70_fu_1324_p1;
reg   [63:0] zext_ln70_reg_1812;
wire   [0:0] icmp_ln69_fu_1312_p2;
wire   [0:0] icmp_ln935_fu_1329_p2;
reg   [0:0] icmp_ln935_reg_1822;
wire    ap_CS_fsm_state29;
wire   [0:0] p_Result_41_fu_1335_p3;
reg   [0:0] p_Result_41_reg_1827;
wire   [13:0] tmp_V_13_fu_1349_p3;
reg   [13:0] tmp_V_13_reg_1832;
wire   [31:0] sub_ln944_fu_1383_p2;
reg   [31:0] sub_ln944_reg_1837;
wire   [31:0] or_ln_fu_1493_p3;
reg   [31:0] or_ln_reg_1843;
wire   [0:0] icmp_ln958_fu_1501_p2;
reg   [0:0] icmp_ln958_reg_1848;
wire   [7:0] trunc_ln943_fu_1507_p1;
reg   [7:0] trunc_ln943_reg_1853;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
reg   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
reg   [9:0] conv_1_input_V_address0;
reg    conv_1_input_V_ce0;
reg    conv_1_input_V_we0;
wire   [13:0] conv_1_input_V_q0;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg   [10:0] conv_2_out_V_address0;
reg    conv_2_out_V_ce0;
reg    conv_2_out_V_we0;
reg   [13:0] conv_2_out_V_d0;
wire   [13:0] conv_2_out_V_q0;
reg   [8:0] max_pool_2_out_V_address0;
reg    max_pool_2_out_V_ce0;
reg    max_pool_2_out_V_we0;
reg   [13:0] max_pool_2_out_V_d0;
wire   [13:0] max_pool_2_out_V_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire   [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_conv_2_fu_625_ap_start;
wire    grp_conv_2_fu_625_ap_done;
wire    grp_conv_2_fu_625_ap_idle;
wire    grp_conv_2_fu_625_ap_ready;
wire   [9:0] grp_conv_2_fu_625_input_V_address0;
wire    grp_conv_2_fu_625_input_V_ce0;
wire   [10:0] grp_conv_2_fu_625_conv_out_V_address0;
wire    grp_conv_2_fu_625_conv_out_V_ce0;
wire    grp_conv_2_fu_625_conv_out_V_we0;
wire   [13:0] grp_conv_2_fu_625_conv_out_V_d0;
wire    grp_conv_1_fu_635_ap_start;
wire    grp_conv_1_fu_635_ap_done;
wire    grp_conv_1_fu_635_ap_idle;
wire    grp_conv_1_fu_635_ap_ready;
wire   [9:0] grp_conv_1_fu_635_input_V_address0;
wire    grp_conv_1_fu_635_input_V_ce0;
wire   [11:0] grp_conv_1_fu_635_conv_out_V_address0;
wire    grp_conv_1_fu_635_conv_out_V_ce0;
wire    grp_conv_1_fu_635_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_635_conv_out_V_d0;
wire    grp_soft_max_fu_645_ap_start;
wire    grp_soft_max_fu_645_ap_done;
wire    grp_soft_max_fu_645_ap_idle;
wire    grp_soft_max_fu_645_ap_ready;
wire   [3:0] grp_soft_max_fu_645_dense_array_V_address0;
wire    grp_soft_max_fu_645_dense_array_V_ce0;
wire    grp_soft_max_fu_645_dense_array_V_we0;
wire   [13:0] grp_soft_max_fu_645_dense_array_V_d0;
wire   [3:0] grp_soft_max_fu_645_prediction_V_address0;
wire    grp_soft_max_fu_645_prediction_V_ce0;
wire    grp_soft_max_fu_645_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_645_prediction_V_d0;
wire    grp_max_pool_1_fu_657_ap_start;
wire    grp_max_pool_1_fu_657_ap_done;
wire    grp_max_pool_1_fu_657_ap_idle;
wire    grp_max_pool_1_fu_657_ap_ready;
wire   [11:0] grp_max_pool_1_fu_657_conv_out_V_address0;
wire    grp_max_pool_1_fu_657_conv_out_V_ce0;
wire   [9:0] grp_max_pool_1_fu_657_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_657_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_657_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_657_max_pool_out_V_d0;
wire    grp_max_pool_2_fu_663_ap_start;
wire    grp_max_pool_2_fu_663_ap_done;
wire    grp_max_pool_2_fu_663_ap_idle;
wire    grp_max_pool_2_fu_663_ap_ready;
wire   [10:0] grp_max_pool_2_fu_663_conv_out_V_address0;
wire    grp_max_pool_2_fu_663_conv_out_V_ce0;
wire   [8:0] grp_max_pool_2_fu_663_max_pool_out_V_address0;
wire    grp_max_pool_2_fu_663_max_pool_out_V_ce0;
wire    grp_max_pool_2_fu_663_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_2_fu_663_max_pool_out_V_d0;
wire    grp_dense_1_fu_669_ap_start;
wire    grp_dense_1_fu_669_ap_done;
wire    grp_dense_1_fu_669_ap_idle;
wire    grp_dense_1_fu_669_ap_ready;
wire   [8:0] grp_dense_1_fu_669_flat_array_V_address0;
wire    grp_dense_1_fu_669_flat_array_V_ce0;
wire   [5:0] grp_dense_1_fu_669_dense_1_out_V_address0;
wire    grp_dense_1_fu_669_dense_1_out_V_ce0;
wire    grp_dense_1_fu_669_dense_1_out_V_we0;
wire   [12:0] grp_dense_1_fu_669_dense_1_out_V_d0;
wire    grp_flat_fu_679_ap_start;
wire    grp_flat_fu_679_ap_done;
wire    grp_flat_fu_679_ap_idle;
wire    grp_flat_fu_679_ap_ready;
wire   [8:0] grp_flat_fu_679_max_pool_out_V_address0;
wire    grp_flat_fu_679_max_pool_out_V_ce0;
wire   [8:0] grp_flat_fu_679_flat_array_V_address0;
wire    grp_flat_fu_679_flat_array_V_ce0;
wire    grp_flat_fu_679_flat_array_V_we0;
wire   [13:0] grp_flat_fu_679_flat_array_V_d0;
reg   [9:0] ix_in_0_reg_502;
reg   [4:0] i_0_reg_514;
reg   [9:0] ix_in_1_reg_525;
wire    ap_CS_fsm_state6;
reg   [4:0] j_0_reg_535;
reg   [4:0] i_0_i_reg_546;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
reg   [13:0] p_Val2_31_reg_557;
reg   [5:0] j_0_i_reg_569;
reg   [3:0] d_0_i_reg_580;
wire    ap_CS_fsm_state26;
reg   [13:0] p_Val2_37_reg_591;
reg   [4:0] f_0_i_reg_603;
reg   [3:0] i24_0_reg_614;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state30;
reg    grp_conv_2_fu_625_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_conv_1_fu_635_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_soft_max_fu_645_ap_start_reg;
reg    grp_max_pool_1_fu_657_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_max_pool_2_fu_663_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_dense_1_fu_669_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_flat_fu_679_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln27_fu_758_p1;
wire  signed [63:0] sext_ln203_fu_1052_p1;
wire  signed [63:0] sext_ln1117_fu_1128_p1;
wire   [63:0] zext_ln14_2_fu_1088_p1;
wire   [63:0] zext_ln1116_9_fu_1271_p1;
wire   [63:0] zext_ln48_1_fu_1231_p1;
wire   [12:0] select_ln19_fu_1190_p3;
wire   [13:0] add_ln703_1_fu_1305_p2;
wire   [9:0] tmp_12_fu_707_p3;
wire   [6:0] tmp_13_fu_719_p3;
wire   [10:0] zext_ln203_fu_715_p1;
wire   [10:0] zext_ln203_17_fu_727_p1;
wire   [10:0] zext_ln203_18_fu_749_p1;
wire   [63:0] grp_fu_685_p1;
wire   [63:0] ireg_V_fu_769_p1;
wire   [10:0] exp_tmp_V_fu_785_p4;
wire   [51:0] trunc_ln565_fu_799_p1;
wire   [52:0] tmp_fu_803_p3;
wire   [53:0] p_Result_40_fu_811_p1;
wire   [0:0] p_Result_39_fu_777_p3;
wire   [53:0] man_V_1_fu_815_p2;
wire   [62:0] trunc_ln556_fu_773_p1;
wire   [11:0] zext_ln461_fu_795_p1;
wire   [11:0] F2_fu_835_p2;
wire   [0:0] icmp_ln581_fu_841_p2;
wire   [11:0] add_ln581_fu_847_p2;
wire   [11:0] sub_ln581_fu_853_p2;
wire  signed [11:0] sh_amt_fu_859_p3;
wire   [53:0] man_V_2_fu_821_p3;
wire  signed [31:0] sext_ln581_fu_867_p1;
wire   [53:0] zext_ln586_fu_893_p1;
wire   [53:0] ashr_ln586_fu_897_p2;
wire   [31:0] bitcast_ln696_fu_907_p1;
wire   [0:0] tmp_20_fu_910_p3;
wire   [13:0] trunc_ln583_fu_877_p1;
wire   [13:0] sext_ln581cast_fu_926_p1;
wire   [0:0] icmp_ln571_fu_829_p2;
wire   [0:0] icmp_ln582_fu_871_p2;
wire   [0:0] xor_ln571_fu_936_p2;
wire   [0:0] or_ln582_fu_948_p2;
wire   [0:0] xor_ln582_fu_954_p2;
wire   [0:0] icmp_ln585_fu_881_p2;
wire   [0:0] and_ln581_fu_960_p2;
wire   [0:0] xor_ln585_fu_966_p2;
wire   [0:0] or_ln581_fu_984_p2;
wire   [0:0] icmp_ln603_fu_887_p2;
wire   [0:0] xor_ln581_fu_990_p2;
wire   [0:0] and_ln603_fu_996_p2;
wire   [13:0] shl_ln604_fu_930_p2;
wire   [13:0] trunc_ln586_fu_903_p1;
wire   [0:0] and_ln585_1_fu_978_p2;
wire   [0:0] and_ln585_fu_972_p2;
wire   [13:0] select_ln588_fu_918_p3;
wire   [0:0] and_ln582_fu_942_p2;
wire   [0:0] or_ln603_fu_1010_p2;
wire   [13:0] select_ln603_fu_1002_p3;
wire   [13:0] select_ln603_1_fu_1016_p3;
wire   [0:0] or_ln603_1_fu_1024_p2;
wire   [0:0] or_ln603_2_fu_1038_p2;
wire   [13:0] select_ln603_2_fu_1030_p3;
wire   [10:0] tmp_14_fu_1093_p3;
wire   [6:0] tmp_15_fu_1105_p3;
wire   [11:0] zext_ln1117_fu_1101_p1;
wire   [11:0] zext_ln1117_7_fu_1113_p1;
wire   [11:0] sub_ln1117_fu_1117_p2;
wire   [11:0] add_ln1117_fu_1123_p2;
wire  signed [21:0] grp_fu_1620_p3;
wire  signed [8:0] sext_ln1265_fu_1158_p0;
wire  signed [8:0] sext_ln703_fu_1166_p0;
wire  signed [13:0] sext_ln1265_fu_1158_p1;
wire  signed [12:0] sext_ln703_fu_1166_p1;
wire   [12:0] trunc_ln703_fu_1162_p1;
wire   [13:0] add_ln703_fu_1170_p2;
wire   [0:0] tmp_21_fu_1182_p3;
wire   [12:0] add_ln203_fu_1176_p2;
wire   [7:0] tmp_16_fu_1236_p3;
wire   [5:0] tmp_17_fu_1248_p3;
wire   [8:0] zext_ln1116_8_fu_1256_p1;
wire   [8:0] zext_ln1116_fu_1244_p1;
wire   [8:0] add_ln1116_fu_1260_p2;
wire   [8:0] add_ln1116_4_fu_1266_p2;
wire  signed [21:0] grp_fu_1629_p3;
wire  signed [13:0] sext_ln1265_1_fu_1301_p1;
wire   [13:0] tmp_V_fu_1343_p2;
reg   [13:0] p_Result_s_fu_1357_p4;
wire   [31:0] p_Result_42_fu_1367_p3;
reg   [31:0] l_fu_1375_p3;
wire   [31:0] lsb_index_fu_1393_p2;
wire   [30:0] tmp_23_fu_1399_p4;
wire   [3:0] trunc_ln947_fu_1415_p1;
wire   [3:0] sub_ln947_fu_1419_p2;
wire   [13:0] zext_ln947_fu_1425_p1;
wire   [13:0] lshr_ln947_fu_1429_p2;
wire   [13:0] p_Result_36_fu_1435_p2;
wire   [0:0] icmp_ln947_fu_1409_p2;
wire   [0:0] icmp_ln947_1_fu_1441_p2;
wire   [0:0] tmp_24_fu_1453_p3;
wire   [13:0] trunc_ln944_fu_1389_p1;
wire   [13:0] add_ln949_fu_1467_p2;
wire   [0:0] p_Result_37_fu_1473_p3;
wire   [0:0] xor_ln949_fu_1461_p2;
wire   [0:0] and_ln949_fu_1481_p2;
wire   [0:0] a_fu_1447_p2;
wire   [0:0] or_ln949_fu_1487_p2;
wire   [31:0] m_fu_1511_p1;
wire   [31:0] add_ln958_fu_1514_p2;
wire   [31:0] sub_ln958_fu_1525_p2;
wire   [31:0] lshr_ln958_fu_1519_p2;
wire   [31:0] shl_ln958_fu_1530_p2;
wire   [31:0] m_12_fu_1536_p3;
wire   [31:0] m_13_fu_1543_p2;
wire   [30:0] m_s_fu_1548_p4;
wire   [0:0] tmp_25_fu_1562_p3;
wire   [7:0] select_ln964_fu_1570_p3;
wire   [7:0] sub_ln964_fu_1578_p2;
wire   [7:0] add_ln964_fu_1583_p2;
wire   [31:0] m_16_fu_1558_p1;
wire   [8:0] tmp_s_fu_1589_p3;
wire   [31:0] p_Result_43_fu_1596_p5;
wire   [31:0] bitcast_ln739_fu_1608_p1;
wire   [12:0] grp_fu_1620_p1;
wire   [21:0] grp_fu_1620_p2;
wire   [12:0] grp_fu_1629_p0;
wire   [21:0] grp_fu_1629_p2;
reg   [29:0] ap_NS_fsm;
wire   [21:0] grp_fu_1620_p10;
wire   [21:0] grp_fu_1629_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
#0 grp_conv_2_fu_625_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_635_ap_start_reg = 1'b0;
#0 grp_soft_max_fu_645_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_657_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_663_ap_start_reg = 1'b0;
#0 grp_dense_1_fu_669_ap_start_reg = 1'b0;
#0 grp_flat_fu_679_ap_start_reg = 1'b0;
end

cnn_dense_2_weighqcK #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0)
);

cnn_dense_2_bias_V #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_dense_out_weircU #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0)
);

cnn_dense_out_biasc4 #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0)
);

cnn_conv_1_input_V #(
    .DataWidth( 14 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_V_address0),
    .ce0(conv_1_input_V_ce0),
    .we0(conv_1_input_V_we0),
    .d0(select_ln603_3_reg_1705),
    .q0(conv_1_input_V_q0)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0)
);

cnn_max_pool_1_outde #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0)
);

cnn_conv_2_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_V_address0),
    .ce0(conv_2_out_V_ce0),
    .we0(conv_2_out_V_we0),
    .d0(conv_2_out_V_d0),
    .q0(conv_2_out_V_q0)
);

cnn_max_pool_2_ouudo #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_V_address0),
    .ce0(max_pool_2_out_V_ce0),
    .we0(max_pool_2_out_V_we0),
    .d0(max_pool_2_out_V_d0),
    .q0(max_pool_2_out_V_q0)
);

cnn_max_pool_2_ouudo #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

conv_2 grp_conv_2_fu_625(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_2_fu_625_ap_start),
    .ap_done(grp_conv_2_fu_625_ap_done),
    .ap_idle(grp_conv_2_fu_625_ap_idle),
    .ap_ready(grp_conv_2_fu_625_ap_ready),
    .input_V_address0(grp_conv_2_fu_625_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_625_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .conv_out_V_address0(grp_conv_2_fu_625_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_2_fu_625_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_2_fu_625_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_2_fu_625_conv_out_V_d0)
);

conv_1 grp_conv_1_fu_635(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_1_fu_635_ap_start),
    .ap_done(grp_conv_1_fu_635_ap_done),
    .ap_idle(grp_conv_1_fu_635_ap_idle),
    .ap_ready(grp_conv_1_fu_635_ap_ready),
    .input_V_address0(grp_conv_1_fu_635_input_V_address0),
    .input_V_ce0(grp_conv_1_fu_635_input_V_ce0),
    .input_V_q0(conv_1_input_V_q0),
    .conv_out_V_address0(grp_conv_1_fu_635_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_635_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_635_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_635_conv_out_V_d0)
);

soft_max grp_soft_max_fu_645(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_645_ap_start),
    .ap_done(grp_soft_max_fu_645_ap_done),
    .ap_idle(grp_soft_max_fu_645_ap_idle),
    .ap_ready(grp_soft_max_fu_645_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_645_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_645_dense_array_V_ce0),
    .dense_array_V_we0(grp_soft_max_fu_645_dense_array_V_we0),
    .dense_array_V_d0(grp_soft_max_fu_645_dense_array_V_d0),
    .dense_array_V_q0(dense_array_V_q0),
    .prediction_V_address0(grp_soft_max_fu_645_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_645_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_645_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_645_prediction_V_d0)
);

max_pool_1 grp_max_pool_1_fu_657(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_1_fu_657_ap_start),
    .ap_done(grp_max_pool_1_fu_657_ap_done),
    .ap_idle(grp_max_pool_1_fu_657_ap_idle),
    .ap_ready(grp_max_pool_1_fu_657_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_657_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_657_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_1_fu_657_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_657_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_657_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_657_max_pool_out_V_d0)
);

max_pool_2 grp_max_pool_2_fu_663(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_2_fu_663_ap_start),
    .ap_done(grp_max_pool_2_fu_663_ap_done),
    .ap_idle(grp_max_pool_2_fu_663_ap_idle),
    .ap_ready(grp_max_pool_2_fu_663_ap_ready),
    .conv_out_V_address0(grp_max_pool_2_fu_663_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_2_fu_663_conv_out_V_ce0),
    .conv_out_V_q0(conv_2_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_2_fu_663_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_2_fu_663_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_2_fu_663_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_2_fu_663_max_pool_out_V_d0)
);

dense_1 grp_dense_1_fu_669(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_1_fu_669_ap_start),
    .ap_done(grp_dense_1_fu_669_ap_done),
    .ap_idle(grp_dense_1_fu_669_ap_idle),
    .ap_ready(grp_dense_1_fu_669_ap_ready),
    .flat_array_V_address0(grp_dense_1_fu_669_flat_array_V_address0),
    .flat_array_V_ce0(grp_dense_1_fu_669_flat_array_V_ce0),
    .flat_array_V_q0(flat_array_V_q0),
    .dense_1_out_V_address0(grp_dense_1_fu_669_dense_1_out_V_address0),
    .dense_1_out_V_ce0(grp_dense_1_fu_669_dense_1_out_V_ce0),
    .dense_1_out_V_we0(grp_dense_1_fu_669_dense_1_out_V_we0),
    .dense_1_out_V_d0(grp_dense_1_fu_669_dense_1_out_V_d0)
);

flat grp_flat_fu_679(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_flat_fu_679_ap_start),
    .ap_done(grp_flat_fu_679_ap_done),
    .ap_idle(grp_flat_fu_679_ap_idle),
    .ap_ready(grp_flat_fu_679_ap_ready),
    .max_pool_out_V_address0(grp_flat_fu_679_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_flat_fu_679_max_pool_out_V_ce0),
    .max_pool_out_V_q0(max_pool_2_out_V_q0),
    .flat_array_V_address0(grp_flat_fu_679_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_679_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_679_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_679_flat_array_V_d0)
);

cnn_fpext_32ns_64vdy #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64vdy_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cnn_input_q0),
    .ce(1'b1),
    .dout(grp_fu_685_p1)
);

cnn_mac_muladd_9swdI #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9swdI_U39(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1620_p1),
    .din2(grp_fu_1620_p2),
    .dout(grp_fu_1620_p3)
);

cnn_mac_muladd_13xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13xdS_U40(
    .din0(grp_fu_1629_p0),
    .din1(dense_out_weights_V_q0),
    .din2(grp_fu_1629_p2),
    .dout(grp_fu_1629_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_1_fu_635_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_635_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_635_ap_ready == 1'b1)) begin
            grp_conv_1_fu_635_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_2_fu_625_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_625_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_625_ap_ready == 1'b1)) begin
            grp_conv_2_fu_625_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_1_fu_669_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_dense_1_fu_669_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_669_ap_ready == 1'b1)) begin
            grp_dense_1_fu_669_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_flat_fu_679_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_679_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_679_ap_ready == 1'b1)) begin
            grp_flat_fu_679_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_1_fu_657_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_657_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_657_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_657_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_2_fu_663_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_663_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_663_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_663_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_645_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln41_fu_1199_p2 == 1'd1))) begin
            grp_soft_max_fu_645_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_645_ap_ready == 1'b1)) begin
            grp_soft_max_fu_645_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd1))) begin
        d_0_i_reg_580 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        d_0_i_reg_580 <= d_reg_1760;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        f_0_i_reg_603 <= f_reg_1779;
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln41_fu_1199_p2 == 1'd0))) begin
        f_0_i_reg_603 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i24_0_reg_614 <= i_2_reg_1807;
    end else if (((grp_soft_max_fu_645_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        i24_0_reg_614 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_0_i_reg_546 <= i_1_reg_1713;
    end else if (((grp_dense_1_fu_669_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_0_i_reg_546 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_737_p2 == 1'd1))) begin
        i_0_reg_514 <= i_reg_1661;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_514 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_737_p2 == 1'd1))) begin
        ix_in_0_reg_502 <= ix_in_reg_1666;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_502 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_525 <= add_ln28_reg_1694;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd0))) begin
        ix_in_1_reg_525 <= ix_in_0_reg_502;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_0_i_reg_569 <= j_1_reg_1732;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd0))) begin
        j_0_i_reg_569 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_535 <= j_reg_1679;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd0))) begin
        j_0_reg_535 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        p_Val2_31_reg_557 <= {{grp_fu_1620_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd0))) begin
        p_Val2_31_reg_557 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        p_Val2_37_reg_591 <= {{grp_fu_1629_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln41_fu_1199_p2 == 1'd0))) begin
        p_Val2_37_reg_591 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_737_p2 == 1'd0))) begin
        add_ln203_8_reg_1684 <= add_ln203_8_fu_753_p2;
        add_ln28_reg_1694 <= add_ln28_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_1699 <= cnn_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        d_reg_1760 <= d_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        f_reg_1779 <= f_fu_1225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_1_reg_1713 <= i_1_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_2_reg_1807 <= i_2_fu_1318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1661 <= i_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        icmp_ln935_reg_1822 <= icmp_ln935_fu_1329_p2;
        icmp_ln958_reg_1848 <= icmp_ln958_fu_1501_p2;
        or_ln_reg_1843[0] <= or_ln_fu_1493_p3[0];
        p_Result_41_reg_1827 <= prediction_V_q0[32'd13];
        sub_ln944_reg_1837 <= sub_ln944_fu_1383_p2;
        tmp_V_13_reg_1832 <= tmp_V_13_fu_1349_p3;
        trunc_ln943_reg_1853 <= trunc_ln943_fu_1507_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd0))) begin
        ix_in_reg_1666 <= ix_in_fu_701_p2;
        sub_ln203_reg_1671[10 : 2] <= sub_ln203_fu_731_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_1_reg_1732 <= j_1_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1679 <= j_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_1705 <= select_ln603_3_fu_1044_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd0))) begin
        zext_ln13_reg_1724[4 : 0] <= zext_ln13_fu_1072_p1[4 : 0];
        zext_ln14_reg_1718[4 : 0] <= zext_ln14_fu_1068_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln41_fu_1199_p2 == 1'd0))) begin
        zext_ln46_reg_1771[3 : 0] <= zext_ln46_fu_1215_p1[3 : 0];
        zext_ln48_reg_1765[3 : 0] <= zext_ln48_fu_1211_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln69_fu_1312_p2 == 1'd0))) begin
        zext_ln70_reg_1812[3 : 0] <= zext_ln70_fu_1324_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln69_fu_1312_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln69_fu_1312_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_ce0 = 1'b1;
    end else begin
        cnn_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_address0 = sext_ln203_fu_1052_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_address0 = grp_conv_1_fu_635_input_V_address0;
    end else begin
        conv_1_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce0 = grp_conv_1_fu_635_input_V_ce0;
    end else begin
        conv_1_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_we0 = 1'b1;
    end else begin
        conv_1_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_657_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_635_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_657_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_635_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_635_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd1))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_635_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_address0 = grp_max_pool_2_fu_663_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_address0 = grp_conv_2_fu_625_conv_out_V_address0;
    end else begin
        conv_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce0 = grp_max_pool_2_fu_663_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_ce0 = grp_conv_2_fu_625_conv_out_V_ce0;
    end else begin
        conv_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_d0 = grp_conv_2_fu_625_conv_out_V_d0;
    end else begin
        conv_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd1))) begin
        conv_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_we0 = grp_conv_2_fu_625_conv_out_V_we0;
    end else begin
        conv_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_address0 = zext_ln14_2_fu_1088_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_address0 = grp_dense_1_fu_669_dense_1_out_V_address0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((grp_flat_fu_679_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_ce0 = grp_dense_1_fu_669_dense_1_out_V_ce0;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_d0 = grp_dense_1_fu_669_dense_1_out_V_d0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_flat_fu_679_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dense_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_we0 = grp_dense_1_fu_669_dense_1_out_V_we0;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        dense_2_out_V_address0 = zext_ln48_1_fu_1231_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_address0 = zext_ln14_reg_1718;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_address0 = 64'd0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state24) | ((grp_dense_1_fu_669_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_d0 = select_ln19_fu_1190_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_d0 = 13'd0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((grp_dense_1_fu_669_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_address0 = zext_ln48_reg_1765;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_address0 = grp_soft_max_fu_645_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_ce0 = grp_soft_max_fu_645_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_d0 = add_ln703_1_fu_1305_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_d0 = grp_soft_max_fu_645_dense_array_V_d0;
    end else begin
        dense_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_we0 = grp_soft_max_fu_645_dense_array_V_we0;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_679_flat_array_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_address0 = grp_dense_1_fu_669_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_663_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_679_flat_array_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_ce0 = grp_dense_1_fu_669_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_679_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_663_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_679_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_657_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_625_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_657_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_625_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_657_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd1))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_657_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_address0 = grp_flat_fu_679_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_address0 = grp_max_pool_2_fu_663_max_pool_out_V_address0;
    end else begin
        max_pool_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_ce0 = grp_flat_fu_679_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_ce0 = grp_max_pool_2_fu_663_max_pool_out_V_ce0;
    end else begin
        max_pool_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_d0 = grp_max_pool_2_fu_663_max_pool_out_V_d0;
    end else begin
        max_pool_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd1))) begin
        max_pool_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_we0 = grp_max_pool_2_fu_663_max_pool_out_V_we0;
    end else begin
        max_pool_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        prediction_V_address0 = zext_ln70_fu_1324_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        prediction_V_address0 = grp_soft_max_fu_645_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state19))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        prediction_V_ce0 = grp_soft_max_fu_645_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        prediction_V_d0 = grp_soft_max_fu_645_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd1))) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        prediction_V_we0 = grp_soft_max_fu_645_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        prediction_output_ce0 = 1'b1;
    end else begin
        prediction_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        prediction_output_we0 = 1'b1;
    end else begin
        prediction_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_689_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_737_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_635_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_657_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_625_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_663_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_679_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_dense_1_fu_669_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln9_fu_1056_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln13_fu_1076_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln41_fu_1199_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln46_fu_1219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_soft_max_fu_645_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln69_fu_1312_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_835_p2 = (12'd1075 - zext_ln461_fu_795_p1);

assign a_fu_1447_p2 = (icmp_ln947_fu_1409_p2 & icmp_ln947_1_fu_1441_p2);

assign add_ln1116_4_fu_1266_p2 = (add_ln1116_fu_1260_p2 + zext_ln46_reg_1771);

assign add_ln1116_fu_1260_p2 = (zext_ln1116_8_fu_1256_p1 + zext_ln1116_fu_1244_p1);

assign add_ln1117_fu_1123_p2 = (sub_ln1117_fu_1117_p2 + zext_ln13_reg_1724);

assign add_ln203_8_fu_753_p2 = (sub_ln203_reg_1671 + zext_ln203_18_fu_749_p1);

assign add_ln203_fu_1176_p2 = ($signed(sext_ln703_fu_1166_p1) + $signed(trunc_ln703_fu_1162_p1));

assign add_ln28_fu_763_p2 = (10'd1 + ix_in_1_reg_525);

assign add_ln581_fu_847_p2 = ($signed(12'd4088) + $signed(F2_fu_835_p2));

assign add_ln703_1_fu_1305_p2 = ($signed(sext_ln1265_1_fu_1301_p1) + $signed(p_Val2_37_reg_591));

assign add_ln703_fu_1170_p2 = ($signed(p_Val2_31_reg_557) + $signed(sext_ln1265_fu_1158_p1));

assign add_ln949_fu_1467_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1389_p1));

assign add_ln958_fu_1514_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1837));

assign add_ln964_fu_1583_p2 = (select_ln964_fu_1570_p3 + sub_ln964_fu_1578_p2);

assign and_ln581_fu_960_p2 = (xor_ln582_fu_954_p2 & icmp_ln581_fu_841_p2);

assign and_ln582_fu_942_p2 = (xor_ln571_fu_936_p2 & icmp_ln582_fu_871_p2);

assign and_ln585_1_fu_978_p2 = (icmp_ln585_fu_881_p2 & and_ln581_fu_960_p2);

assign and_ln585_fu_972_p2 = (xor_ln585_fu_966_p2 & and_ln581_fu_960_p2);

assign and_ln603_fu_996_p2 = (xor_ln581_fu_990_p2 & icmp_ln603_fu_887_p2);

assign and_ln949_fu_1481_p2 = (xor_ln949_fu_1461_p2 & p_Result_37_fu_1473_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln586_fu_897_p2 = $signed(man_V_2_fu_821_p3) >>> zext_ln586_fu_893_p1;

assign bitcast_ln696_fu_907_p1 = cnn_input_load_reg_1699;

assign bitcast_ln739_fu_1608_p1 = p_Result_43_fu_1596_p5;

assign cnn_input_address0 = zext_ln27_fu_758_p1;

assign d_fu_1205_p2 = (d_0_i_reg_580 + 4'd1);

assign dense_2_bias_V_address0 = zext_ln14_reg_1718;

assign dense_2_weights_V_address0 = sext_ln1117_fu_1128_p1;

assign dense_out_bias_V_address0 = zext_ln48_reg_1765;

assign dense_out_weights_V_address0 = zext_ln1116_9_fu_1271_p1;

assign exp_tmp_V_fu_785_p4 = {{ireg_V_fu_769_p1[62:52]}};

assign f_fu_1225_p2 = (f_0_i_reg_603 + 5'd1);

assign grp_conv_1_fu_635_ap_start = grp_conv_1_fu_635_ap_start_reg;

assign grp_conv_2_fu_625_ap_start = grp_conv_2_fu_625_ap_start_reg;

assign grp_dense_1_fu_669_ap_start = grp_dense_1_fu_669_ap_start_reg;

assign grp_flat_fu_679_ap_start = grp_flat_fu_679_ap_start_reg;

assign grp_fu_1620_p1 = grp_fu_1620_p10;

assign grp_fu_1620_p10 = dense_1_out_V_q0;

assign grp_fu_1620_p2 = {{p_Val2_31_reg_557}, {8'd0}};

assign grp_fu_1629_p0 = grp_fu_1629_p00;

assign grp_fu_1629_p00 = dense_2_out_V_q0;

assign grp_fu_1629_p2 = {{p_Val2_37_reg_591}, {8'd0}};

assign grp_max_pool_1_fu_657_ap_start = grp_max_pool_1_fu_657_ap_start_reg;

assign grp_max_pool_2_fu_663_ap_start = grp_max_pool_2_fu_663_ap_start_reg;

assign grp_soft_max_fu_645_ap_start = grp_soft_max_fu_645_ap_start_reg;

assign i_1_fu_1062_p2 = (i_0_i_reg_546 + 5'd1);

assign i_2_fu_1318_p2 = (i24_0_reg_614 + 4'd1);

assign i_fu_695_p2 = (i_0_reg_514 + 5'd1);

assign icmp_ln13_fu_1076_p2 = ((j_0_i_reg_569 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_689_p2 = ((i_0_reg_514 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_737_p2 = ((j_0_reg_535 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1199_p2 = ((d_0_i_reg_580 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1219_p2 = ((f_0_i_reg_603 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_829_p2 = ((trunc_ln556_fu_773_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_841_p2 = (($signed(F2_fu_835_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_871_p2 = ((F2_fu_835_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_881_p2 = ((sh_amt_fu_859_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_887_p2 = ((sh_amt_fu_859_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1312_p2 = ((i24_0_reg_614 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1329_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1441_p2 = ((p_Result_36_fu_1435_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1409_p2 = (($signed(tmp_23_fu_1399_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1501_p2 = (($signed(lsb_index_fu_1393_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1056_p2 = ((i_0_i_reg_546 == 5'd30) ? 1'b1 : 1'b0);

assign ireg_V_fu_769_p1 = grp_fu_685_p1;

assign ix_in_fu_701_p2 = (ix_in_0_reg_502 + 10'd28);

assign j_1_fu_1082_p2 = (j_0_i_reg_569 + 6'd1);

assign j_fu_743_p2 = (j_0_reg_535 + 5'd1);


always @ (p_Result_42_fu_1367_p3) begin
    if (p_Result_42_fu_1367_p3[0] == 1'b1) begin
        l_fu_1375_p3 = 32'd0;
    end else if (p_Result_42_fu_1367_p3[1] == 1'b1) begin
        l_fu_1375_p3 = 32'd1;
    end else if (p_Result_42_fu_1367_p3[2] == 1'b1) begin
        l_fu_1375_p3 = 32'd2;
    end else if (p_Result_42_fu_1367_p3[3] == 1'b1) begin
        l_fu_1375_p3 = 32'd3;
    end else if (p_Result_42_fu_1367_p3[4] == 1'b1) begin
        l_fu_1375_p3 = 32'd4;
    end else if (p_Result_42_fu_1367_p3[5] == 1'b1) begin
        l_fu_1375_p3 = 32'd5;
    end else if (p_Result_42_fu_1367_p3[6] == 1'b1) begin
        l_fu_1375_p3 = 32'd6;
    end else if (p_Result_42_fu_1367_p3[7] == 1'b1) begin
        l_fu_1375_p3 = 32'd7;
    end else if (p_Result_42_fu_1367_p3[8] == 1'b1) begin
        l_fu_1375_p3 = 32'd8;
    end else if (p_Result_42_fu_1367_p3[9] == 1'b1) begin
        l_fu_1375_p3 = 32'd9;
    end else if (p_Result_42_fu_1367_p3[10] == 1'b1) begin
        l_fu_1375_p3 = 32'd10;
    end else if (p_Result_42_fu_1367_p3[11] == 1'b1) begin
        l_fu_1375_p3 = 32'd11;
    end else if (p_Result_42_fu_1367_p3[12] == 1'b1) begin
        l_fu_1375_p3 = 32'd12;
    end else if (p_Result_42_fu_1367_p3[13] == 1'b1) begin
        l_fu_1375_p3 = 32'd13;
    end else if (p_Result_42_fu_1367_p3[14] == 1'b1) begin
        l_fu_1375_p3 = 32'd14;
    end else if (p_Result_42_fu_1367_p3[15] == 1'b1) begin
        l_fu_1375_p3 = 32'd15;
    end else if (p_Result_42_fu_1367_p3[16] == 1'b1) begin
        l_fu_1375_p3 = 32'd16;
    end else if (p_Result_42_fu_1367_p3[17] == 1'b1) begin
        l_fu_1375_p3 = 32'd17;
    end else if (p_Result_42_fu_1367_p3[18] == 1'b1) begin
        l_fu_1375_p3 = 32'd18;
    end else if (p_Result_42_fu_1367_p3[19] == 1'b1) begin
        l_fu_1375_p3 = 32'd19;
    end else if (p_Result_42_fu_1367_p3[20] == 1'b1) begin
        l_fu_1375_p3 = 32'd20;
    end else if (p_Result_42_fu_1367_p3[21] == 1'b1) begin
        l_fu_1375_p3 = 32'd21;
    end else if (p_Result_42_fu_1367_p3[22] == 1'b1) begin
        l_fu_1375_p3 = 32'd22;
    end else if (p_Result_42_fu_1367_p3[23] == 1'b1) begin
        l_fu_1375_p3 = 32'd23;
    end else if (p_Result_42_fu_1367_p3[24] == 1'b1) begin
        l_fu_1375_p3 = 32'd24;
    end else if (p_Result_42_fu_1367_p3[25] == 1'b1) begin
        l_fu_1375_p3 = 32'd25;
    end else if (p_Result_42_fu_1367_p3[26] == 1'b1) begin
        l_fu_1375_p3 = 32'd26;
    end else if (p_Result_42_fu_1367_p3[27] == 1'b1) begin
        l_fu_1375_p3 = 32'd27;
    end else if (p_Result_42_fu_1367_p3[28] == 1'b1) begin
        l_fu_1375_p3 = 32'd28;
    end else if (p_Result_42_fu_1367_p3[29] == 1'b1) begin
        l_fu_1375_p3 = 32'd29;
    end else if (p_Result_42_fu_1367_p3[30] == 1'b1) begin
        l_fu_1375_p3 = 32'd30;
    end else if (p_Result_42_fu_1367_p3[31] == 1'b1) begin
        l_fu_1375_p3 = 32'd31;
    end else begin
        l_fu_1375_p3 = 32'd32;
    end
end

assign lsb_index_fu_1393_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1383_p2));

assign lshr_ln947_fu_1429_p2 = 14'd16383 >> zext_ln947_fu_1425_p1;

assign lshr_ln958_fu_1519_p2 = m_fu_1511_p1 >> add_ln958_fu_1514_p2;

assign m_12_fu_1536_p3 = ((icmp_ln958_reg_1848[0:0] === 1'b1) ? lshr_ln958_fu_1519_p2 : shl_ln958_fu_1530_p2);

assign m_13_fu_1543_p2 = (m_12_fu_1536_p3 + or_ln_reg_1843);

assign m_16_fu_1558_p1 = m_s_fu_1548_p4;

assign m_fu_1511_p1 = tmp_V_13_reg_1832;

assign m_s_fu_1548_p4 = {{m_13_fu_1543_p2[31:1]}};

assign man_V_1_fu_815_p2 = (54'd0 - p_Result_40_fu_811_p1);

assign man_V_2_fu_821_p3 = ((p_Result_39_fu_777_p3[0:0] === 1'b1) ? man_V_1_fu_815_p2 : p_Result_40_fu_811_p1);

assign or_ln581_fu_984_p2 = (or_ln582_fu_948_p2 | icmp_ln581_fu_841_p2);

assign or_ln582_fu_948_p2 = (icmp_ln582_fu_871_p2 | icmp_ln571_fu_829_p2);

assign or_ln603_1_fu_1024_p2 = (and_ln585_fu_972_p2 | and_ln582_fu_942_p2);

assign or_ln603_2_fu_1038_p2 = (or_ln603_fu_1010_p2 | or_ln603_1_fu_1024_p2);

assign or_ln603_fu_1010_p2 = (and_ln603_fu_996_p2 | and_ln585_1_fu_978_p2);

assign or_ln949_fu_1487_p2 = (and_ln949_fu_1481_p2 | a_fu_1447_p2);

assign or_ln_fu_1493_p3 = {{31'd0}, {or_ln949_fu_1487_p2}};

assign p_Result_36_fu_1435_p2 = (tmp_V_13_fu_1349_p3 & lshr_ln947_fu_1429_p2);

assign p_Result_37_fu_1473_p3 = tmp_V_13_fu_1349_p3[add_ln949_fu_1467_p2];

assign p_Result_39_fu_777_p3 = ireg_V_fu_769_p1[32'd63];

assign p_Result_40_fu_811_p1 = tmp_fu_803_p3;

assign p_Result_41_fu_1335_p3 = prediction_V_q0[32'd13];

assign p_Result_42_fu_1367_p3 = {{18'd262143}, {p_Result_s_fu_1357_p4}};

assign p_Result_43_fu_1596_p5 = {{tmp_s_fu_1589_p3}, {m_16_fu_1558_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_13_fu_1349_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1357_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1357_p4[ap_tvar_int_0] = tmp_V_13_fu_1349_p3[13 - ap_tvar_int_0];
        end
    end
end

assign prediction_output_address0 = zext_ln70_reg_1812;

assign prediction_output_d0 = ((icmp_ln935_reg_1822[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1608_p1);

assign select_ln19_fu_1190_p3 = ((tmp_21_fu_1182_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1176_p2);

assign select_ln588_fu_918_p3 = ((tmp_20_fu_910_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_1_fu_1016_p3 = ((and_ln585_fu_972_p2[0:0] === 1'b1) ? select_ln588_fu_918_p3 : trunc_ln583_fu_877_p1);

assign select_ln603_2_fu_1030_p3 = ((or_ln603_fu_1010_p2[0:0] === 1'b1) ? select_ln603_fu_1002_p3 : select_ln603_1_fu_1016_p3);

assign select_ln603_3_fu_1044_p3 = ((or_ln603_2_fu_1038_p2[0:0] === 1'b1) ? select_ln603_2_fu_1030_p3 : 14'd0);

assign select_ln603_fu_1002_p3 = ((and_ln603_fu_996_p2[0:0] === 1'b1) ? shl_ln604_fu_930_p2 : trunc_ln586_fu_903_p1);

assign select_ln964_fu_1570_p3 = ((tmp_25_fu_1562_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1128_p1 = $signed(add_ln1117_fu_1123_p2);

assign sext_ln1265_1_fu_1301_p1 = $signed(dense_out_bias_V_q0);

assign sext_ln1265_fu_1158_p0 = dense_2_bias_V_q0;

assign sext_ln1265_fu_1158_p1 = sext_ln1265_fu_1158_p0;

assign sext_ln203_fu_1052_p1 = $signed(add_ln203_8_reg_1684);

assign sext_ln581_fu_867_p1 = sh_amt_fu_859_p3;

assign sext_ln581cast_fu_926_p1 = sext_ln581_fu_867_p1[13:0];

assign sext_ln703_fu_1166_p0 = dense_2_bias_V_q0;

assign sext_ln703_fu_1166_p1 = sext_ln703_fu_1166_p0;

assign sh_amt_fu_859_p3 = ((icmp_ln581_fu_841_p2[0:0] === 1'b1) ? add_ln581_fu_847_p2 : sub_ln581_fu_853_p2);

assign shl_ln604_fu_930_p2 = trunc_ln583_fu_877_p1 << sext_ln581cast_fu_926_p1;

assign shl_ln958_fu_1530_p2 = m_fu_1511_p1 << sub_ln958_fu_1525_p2;

assign sub_ln1117_fu_1117_p2 = (zext_ln1117_fu_1101_p1 - zext_ln1117_7_fu_1113_p1);

assign sub_ln203_fu_731_p2 = (zext_ln203_fu_715_p1 - zext_ln203_17_fu_727_p1);

assign sub_ln581_fu_853_p2 = (12'd8 - F2_fu_835_p2);

assign sub_ln944_fu_1383_p2 = (32'd14 - l_fu_1375_p3);

assign sub_ln947_fu_1419_p2 = (4'd7 - trunc_ln947_fu_1415_p1);

assign sub_ln958_fu_1525_p2 = (32'd25 - sub_ln944_reg_1837);

assign sub_ln964_fu_1578_p2 = (8'd6 - trunc_ln943_reg_1853);

assign tmp_12_fu_707_p3 = {{i_0_reg_514}, {5'd0}};

assign tmp_13_fu_719_p3 = {{i_0_reg_514}, {2'd0}};

assign tmp_14_fu_1093_p3 = {{j_0_i_reg_569}, {5'd0}};

assign tmp_15_fu_1105_p3 = {{j_0_i_reg_569}, {1'd0}};

assign tmp_16_fu_1236_p3 = {{f_0_i_reg_603}, {3'd0}};

assign tmp_17_fu_1248_p3 = {{f_0_i_reg_603}, {1'd0}};

assign tmp_20_fu_910_p3 = bitcast_ln696_fu_907_p1[32'd31];

assign tmp_21_fu_1182_p3 = add_ln703_fu_1170_p2[32'd13];

assign tmp_23_fu_1399_p4 = {{lsb_index_fu_1393_p2[31:1]}};

assign tmp_24_fu_1453_p3 = lsb_index_fu_1393_p2[32'd31];

assign tmp_25_fu_1562_p3 = m_13_fu_1543_p2[32'd25];

assign tmp_V_13_fu_1349_p3 = ((p_Result_41_fu_1335_p3[0:0] === 1'b1) ? tmp_V_fu_1343_p2 : prediction_V_q0);

assign tmp_V_fu_1343_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_803_p3 = {{1'd1}, {trunc_ln565_fu_799_p1}};

assign tmp_s_fu_1589_p3 = {{p_Result_41_reg_1827}, {add_ln964_fu_1583_p2}};

assign trunc_ln556_fu_773_p1 = ireg_V_fu_769_p1[62:0];

assign trunc_ln565_fu_799_p1 = ireg_V_fu_769_p1[51:0];

assign trunc_ln583_fu_877_p1 = man_V_2_fu_821_p3[13:0];

assign trunc_ln586_fu_903_p1 = ashr_ln586_fu_897_p2[13:0];

assign trunc_ln703_fu_1162_p1 = p_Val2_31_reg_557[12:0];

assign trunc_ln943_fu_1507_p1 = l_fu_1375_p3[7:0];

assign trunc_ln944_fu_1389_p1 = sub_ln944_fu_1383_p2[13:0];

assign trunc_ln947_fu_1415_p1 = sub_ln944_fu_1383_p2[3:0];

assign xor_ln571_fu_936_p2 = (icmp_ln571_fu_829_p2 ^ 1'd1);

assign xor_ln581_fu_990_p2 = (or_ln581_fu_984_p2 ^ 1'd1);

assign xor_ln582_fu_954_p2 = (or_ln582_fu_948_p2 ^ 1'd1);

assign xor_ln585_fu_966_p2 = (icmp_ln585_fu_881_p2 ^ 1'd1);

assign xor_ln949_fu_1461_p2 = (tmp_24_fu_1453_p3 ^ 1'd1);

assign zext_ln1116_8_fu_1256_p1 = tmp_17_fu_1248_p3;

assign zext_ln1116_9_fu_1271_p1 = add_ln1116_4_fu_1266_p2;

assign zext_ln1116_fu_1244_p1 = tmp_16_fu_1236_p3;

assign zext_ln1117_7_fu_1113_p1 = tmp_15_fu_1105_p3;

assign zext_ln1117_fu_1101_p1 = tmp_14_fu_1093_p3;

assign zext_ln13_fu_1072_p1 = i_0_i_reg_546;

assign zext_ln14_2_fu_1088_p1 = j_0_i_reg_569;

assign zext_ln14_fu_1068_p1 = i_0_i_reg_546;

assign zext_ln203_17_fu_727_p1 = tmp_13_fu_719_p3;

assign zext_ln203_18_fu_749_p1 = j_0_reg_535;

assign zext_ln203_fu_715_p1 = tmp_12_fu_707_p3;

assign zext_ln27_fu_758_p1 = ix_in_1_reg_525;

assign zext_ln461_fu_795_p1 = exp_tmp_V_fu_785_p4;

assign zext_ln46_fu_1215_p1 = d_0_i_reg_580;

assign zext_ln48_1_fu_1231_p1 = f_0_i_reg_603;

assign zext_ln48_fu_1211_p1 = d_0_i_reg_580;

assign zext_ln586_fu_893_p1 = $unsigned(sext_ln581_fu_867_p1);

assign zext_ln70_fu_1324_p1 = i24_0_reg_614;

assign zext_ln947_fu_1425_p1 = sub_ln947_fu_1419_p2;

always @ (posedge ap_clk) begin
    sub_ln203_reg_1671[1:0] <= 2'b00;
    zext_ln14_reg_1718[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1724[11:5] <= 7'b0000000;
    zext_ln48_reg_1765[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln46_reg_1771[8:4] <= 5'b00000;
    zext_ln70_reg_1812[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_1843[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
