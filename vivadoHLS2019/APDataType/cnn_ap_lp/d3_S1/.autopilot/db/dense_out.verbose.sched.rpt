

================================================================
== Vivado HLS Report for 'dense_out'
================================================================
* Date:           Sat Aug 10 20:51:37 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn_ap_lp
* Solution:       d3_S1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    16.990|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  646|  646|  646|  646|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                        |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Dense_Loop_Flat_Loop  |  300|  300|         2|          1|          1|   300|    yes   |
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%dense_array_V = alloca [10 x i14], align 2" [cnn_ap_lp/dense_out.cpp:38]   --->   Operation 6 'alloca' 'dense_array_V' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 10> <RAM>
ST_1 : Operation 7 [1/1] (1.76ns)   --->   "br label %0" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 9.71>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i9 [ 0, %.preheader.preheader ], [ %add_ln41, %ifFalse ]" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 8 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%d_0 = phi i4 [ 0, %.preheader.preheader ], [ %select_ln48_1, %ifFalse ]" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 9 'phi' 'd_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%p_Val2_s = phi i14 [ 0, %.preheader.preheader ], [ %w_sum_V, %ifFalse ]"   --->   Operation 10 'phi' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%f_0 = phi i5 [ 0, %.preheader.preheader ], [ %f, %ifFalse ]"   --->   Operation 11 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (1.66ns)   --->   "%icmp_ln41 = icmp eq i9 %indvar_flatten, -212" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 12 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (1.82ns)   --->   "%add_ln41 = add i9 %indvar_flatten, 1" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 13 'add' 'add_ln41' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "br i1 %icmp_ln41, label %1, label %Flat_Loop" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 14 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.73ns)   --->   "%d = add i4 %d_0, 1" [cnn_ap_lp/dense_out.cpp:41]   --->   Operation 15 'add' 'd' <Predicate = (!icmp_ln41)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (1.36ns)   --->   "%icmp_ln46 = icmp eq i5 %f_0, -2" [cnn_ap_lp/dense_out.cpp:46]   --->   Operation 16 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln41)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.21ns)   --->   "%select_ln48 = select i1 %icmp_ln46, i5 0, i5 %f_0" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 17 'select' 'select_ln48' <Predicate = (!icmp_ln41)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.02ns)   --->   "%select_ln48_1 = select i1 %icmp_ln46, i4 %d, i4 %d_0" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 18 'select' 'select_ln48_1' <Predicate = (!icmp_ln41)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i4 %select_ln48_1 to i64" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 19 'zext' 'zext_ln48' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln47 = zext i4 %select_ln48_1 to i9" [cnn_ap_lp/dense_out.cpp:47]   --->   Operation 20 'zext' 'zext_ln47' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i5 %select_ln48 to i64" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 21 'zext' 'zext_ln48_1' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %select_ln48, i3 0)" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 22 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i8 %tmp to i9" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 23 'zext' 'zext_ln1116' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_s = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %select_ln48, i1 false)" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 24 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln1116_1 = zext i6 %tmp_s to i9" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 25 'zext' 'zext_ln1116_1' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1116 = add i9 %zext_ln1116_1, %zext_ln1116" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 26 'add' 'add_ln1116' <Predicate = (!icmp_ln41)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.84> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 27 [1/1] (3.69ns) (root node of TernaryAdder)   --->   "%add_ln1116_1 = add i9 %add_ln1116, %zext_ln47" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 27 'add' 'add_ln1116_1' <Predicate = (!icmp_ln41)> <Delay = 3.69> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.84> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln1116_2 = zext i9 %add_ln1116_1 to i64" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 28 'zext' 'zext_ln1116_2' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%dense_out_weights_V_s = getelementptr [300 x i9]* @dense_out_weights_V, i64 0, i64 %zext_ln1116_2" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 29 'getelementptr' 'dense_out_weights_V_s' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 30 [2/2] (3.25ns)   --->   "%dense_out_weights_V_1 = load i9* %dense_out_weights_V_s, align 2" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 30 'load' 'dense_out_weights_V_1' <Predicate = (!icmp_ln41)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10> <ROM>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%dense_2_out_V_addr = getelementptr [30 x i13]* %dense_2_out_V, i64 0, i64 %zext_ln48_1" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 31 'getelementptr' 'dense_2_out_V_addr' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 32 [2/2] (2.32ns)   --->   "%dense_2_out_V_load = load i13* %dense_2_out_V_addr, align 2" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 32 'load' 'dense_2_out_V_load' <Predicate = (!icmp_ln41)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 10> <RAM>
ST_2 : Operation 33 [1/1] (1.78ns)   --->   "%f = add i5 %select_ln48, 1" [cnn_ap_lp/dense_out.cpp:46]   --->   Operation 33 'add' 'f' <Predicate = (!icmp_ln41)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.36ns)   --->   "%icmp_ln46_1 = icmp eq i5 %f, -2" [cnn_ap_lp/dense_out.cpp:46]   --->   Operation 34 'icmp' 'icmp_ln46_1' <Predicate = (!icmp_ln41)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46_1, label %ifTrue, label %ifFalse" [cnn_ap_lp/dense_out.cpp:46]   --->   Operation 35 'br' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%dense_out_bias_V_add = getelementptr [10 x i8]* @dense_out_bias_V, i64 0, i64 %zext_ln48" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 36 'getelementptr' 'dense_out_bias_V_add' <Predicate = (!icmp_ln41 & icmp_ln46_1)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (3.25ns)   --->   "%p_Val2_16 = load i8* %dense_out_bias_V_add, align 1" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 37 'load' 'p_Val2_16' <Predicate = (!icmp_ln41 & icmp_ln46_1)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10> <ROM>

State 3 <SV = 2> <Delay = 13.7>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @Dense_Loop_Flat_Loop)"   --->   Operation 38 'specloopname' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 300, i64 300, i64 300)"   --->   Operation 39 'speclooptripcount' 'empty' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str6) nounwind" [cnn_ap_lp/dense_out.cpp:47]   --->   Operation 40 'specloopname' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str6)" [cnn_ap_lp/dense_out.cpp:47]   --->   Operation 41 'specregionbegin' 'tmp_9' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str416) nounwind" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 42 'specpipeline' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 43 [1/2] (3.25ns)   --->   "%dense_out_weights_V_1 = load i9* %dense_out_weights_V_s, align 2" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 43 'load' 'dense_out_weights_V_1' <Predicate = (!icmp_ln41)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10> <ROM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%sext_ln1192 = sext i9 %dense_out_weights_V_1 to i22" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 44 'sext' 'sext_ln1192' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 45 [1/2] (2.32ns)   --->   "%dense_2_out_V_load = load i13* %dense_2_out_V_addr, align 2" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 45 'load' 'dense_2_out_V_load' <Predicate = (!icmp_ln41)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 10> <RAM>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln1192 = zext i13 %dense_2_out_V_load to i22" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 46 'zext' 'zext_ln1192' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (3.36ns) (grouped into DSP with root node ret_V)   --->   "%mul_ln1192 = mul i22 %zext_ln1192, %sext_ln1192" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 47 'mul' 'mul_ln1192' <Predicate = (!icmp_ln41)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 48 [1/1] (0.70ns)   --->   "%select_ln48_2 = select i1 %icmp_ln46, i14 0, i14 %p_Val2_s" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 48 'select' 'select_ln48_2' <Predicate = (!icmp_ln41)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%lhs_V = call i22 @_ssdm_op_BitConcatenate.i22.i14.i8(i14 %select_ln48_2, i8 0)" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 49 'bitconcatenate' 'lhs_V' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (3.02ns) (root node of the DSP)   --->   "%ret_V = add i22 %mul_ln1192, %lhs_V" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 50 'add' 'ret_V' <Predicate = (!icmp_ln41)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%w_sum_V = call i14 @_ssdm_op_PartSelect.i14.i22.i32.i32(i22 %ret_V, i32 8, i32 21)" [cnn_ap_lp/dense_out.cpp:48]   --->   Operation 51 'partselect' 'w_sum_V' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%empty_53 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str6, i32 %tmp_9)" [cnn_ap_lp/dense_out.cpp:50]   --->   Operation 52 'specregionend' 'empty_53' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_3 : Operation 53 [1/2] (3.25ns)   --->   "%p_Val2_16 = load i8* %dense_out_bias_V_add, align 1" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 53 'load' 'p_Val2_16' <Predicate = (icmp_ln46_1)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 10> <ROM>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln1265 = sext i8 %p_Val2_16 to i14" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 54 'sext' 'sext_ln1265' <Predicate = (icmp_ln46_1)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (1.81ns)   --->   "%add_ln703 = add i14 %sext_ln1265, %w_sum_V" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 55 'add' 'add_ln703' <Predicate = (icmp_ln46_1)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.81> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%dense_array_V_addr = getelementptr [10 x i14]* %dense_array_V, i64 0, i64 %zext_ln48" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 56 'getelementptr' 'dense_array_V_addr' <Predicate = (icmp_ln46_1)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (2.32ns)   --->   "store i14 %add_ln703, i14* %dense_array_V_addr, align 2" [cnn_ap_lp/dense_out.cpp:51]   --->   Operation 57 'store' <Predicate = (icmp_ln46_1)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 10> <RAM>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "br label %ifFalse"   --->   Operation 58 'br' <Predicate = (icmp_ln46_1)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br label %0"   --->   Operation 59 'br' <Predicate = (!icmp_ln41)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (0.00ns)   --->   "call fastcc void @soft_max([10 x i14]* %dense_array_V, [10 x i14]* %prediction_V)" [cnn_ap_lp/dense_out.cpp:54]   --->   Operation 60 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 3> <Delay = 0.00>
ST_5 : Operation 61 [1/2] (0.00ns)   --->   "call fastcc void @soft_max([10 x i14]* %dense_array_V, [10 x i14]* %prediction_V)" [cnn_ap_lp/dense_out.cpp:54]   --->   Operation 61 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "ret void" [cnn_ap_lp/dense_out.cpp:55]   --->   Operation 62 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', cnn_ap_lp/dense_out.cpp:41) with incoming values : ('add_ln41', cnn_ap_lp/dense_out.cpp:41) [11]  (1.77 ns)

 <State 2>: 9.71ns
The critical path consists of the following:
	'phi' operation ('d_0', cnn_ap_lp/dense_out.cpp:48) with incoming values : ('select_ln48_1', cnn_ap_lp/dense_out.cpp:48) [12]  (0 ns)
	'add' operation ('d', cnn_ap_lp/dense_out.cpp:41) [19]  (1.74 ns)
	'select' operation ('select_ln48_1', cnn_ap_lp/dense_out.cpp:48) [24]  (1.02 ns)
	'add' operation ('add_ln1116_1', cnn_ap_lp/dense_out.cpp:48) [36]  (3.7 ns)
	'getelementptr' operation ('dense_out_weights_V_s', cnn_ap_lp/dense_out.cpp:48) [38]  (0 ns)
	'load' operation ('dense_out_weights_V_1', cnn_ap_lp/dense_out.cpp:48) on array 'dense_out_weights_V' [39]  (3.25 ns)

 <State 3>: 13.8ns
The critical path consists of the following:
	'load' operation ('dense_out_weights_V_1', cnn_ap_lp/dense_out.cpp:48) on array 'dense_out_weights_V' [39]  (3.25 ns)
	'mul' operation of DSP[47] ('mul_ln1192', cnn_ap_lp/dense_out.cpp:48) [44]  (3.36 ns)
	'add' operation of DSP[47] ('ret.V', cnn_ap_lp/dense_out.cpp:48) [47]  (3.02 ns)
	'add' operation ('add_ln703', cnn_ap_lp/dense_out.cpp:51) [57]  (1.81 ns)
	'store' operation ('store_ln51', cnn_ap_lp/dense_out.cpp:51) of variable 'add_ln703', cnn_ap_lp/dense_out.cpp:51 on array 'dense_array.V', cnn_ap_lp/dense_out.cpp:38 [59]  (2.32 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
