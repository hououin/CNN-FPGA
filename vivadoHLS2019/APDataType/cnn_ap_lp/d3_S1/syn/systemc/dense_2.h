// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_2_HH_
#define _dense_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_9sncg.h"
#include "dense_2_dense_2_wlbW.h"
#include "dense_2_dense_2_bmb6.h"

namespace ap_rtl {

struct dense_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > dense_1_out_V_address0;
    sc_out< sc_logic > dense_1_out_V_ce0;
    sc_in< sc_lv<13> > dense_1_out_V_q0;
    sc_out< sc_lv<5> > dense_2_out_V_address0;
    sc_out< sc_logic > dense_2_out_V_ce0;
    sc_out< sc_logic > dense_2_out_V_we0;
    sc_out< sc_lv<13> > dense_2_out_V_d0;


    // Module declarations
    dense_2(sc_module_name name);
    SC_HAS_PROCESS(dense_2);

    ~dense_2();

    sc_trace_file* mVcdFile;

    dense_2_dense_2_wlbW* dense_2_weights_V_U;
    dense_2_dense_2_bmb6* dense_2_bias_V_U;
    cnn_mac_muladd_9sncg<1,1,9,13,22,22>* cnn_mac_muladd_9sncg_U28;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > dense_2_weights_V_address0;
    sc_signal< sc_logic > dense_2_weights_V_ce0;
    sc_signal< sc_lv<9> > dense_2_weights_V_q0;
    sc_signal< sc_lv<5> > dense_2_bias_V_address0;
    sc_signal< sc_logic > dense_2_bias_V_ce0;
    sc_signal< sc_lv<9> > dense_2_bias_V_q0;
    sc_signal< sc_lv<5> > i_fu_154_p2;
    sc_signal< sc_lv<5> > i_reg_303;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln14_fu_160_p1;
    sc_signal< sc_lv<64> > zext_ln14_reg_308;
    sc_signal< sc_lv<1> > icmp_ln9_fu_148_p2;
    sc_signal< sc_lv<12> > zext_ln13_fu_164_p1;
    sc_signal< sc_lv<12> > zext_ln13_reg_314;
    sc_signal< sc_lv<6> > j_fu_174_p2;
    sc_signal< sc_lv<6> > j_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_168_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > i_0_reg_114;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > p_Val2_s_reg_125;
    sc_signal< sc_lv<6> > j_0_reg_137;
    sc_signal< sc_lv<64> > sext_ln1117_fu_220_p1;
    sc_signal< sc_lv<64> > zext_ln14_1_fu_180_p1;
    sc_signal< sc_lv<11> > tmp_s_fu_185_p3;
    sc_signal< sc_lv<7> > tmp_1_fu_197_p3;
    sc_signal< sc_lv<12> > zext_ln1117_fu_193_p1;
    sc_signal< sc_lv<12> > zext_ln1117_1_fu_205_p1;
    sc_signal< sc_lv<12> > sub_ln1117_fu_209_p2;
    sc_signal< sc_lv<12> > add_ln1117_fu_215_p2;
    sc_signal< sc_lv<22> > grp_fu_291_p3;
    sc_signal< sc_lv<9> > sext_ln1265_fu_250_p0;
    sc_signal< sc_lv<9> > sext_ln703_fu_258_p0;
    sc_signal< sc_lv<14> > sext_ln1265_fu_250_p1;
    sc_signal< sc_lv<13> > sext_ln703_fu_258_p1;
    sc_signal< sc_lv<13> > trunc_ln703_fu_254_p1;
    sc_signal< sc_lv<14> > add_ln703_fu_262_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_274_p3;
    sc_signal< sc_lv<13> > add_ln203_fu_268_p2;
    sc_signal< sc_lv<13> > grp_fu_291_p1;
    sc_signal< sc_lv<22> > grp_fu_291_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_lv<22> > grp_fu_291_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<13> ap_const_lv13_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1117_fu_215_p2();
    void thread_add_ln203_fu_268_p2();
    void thread_add_ln703_fu_262_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_dense_1_out_V_address0();
    void thread_dense_1_out_V_ce0();
    void thread_dense_2_bias_V_address0();
    void thread_dense_2_bias_V_ce0();
    void thread_dense_2_out_V_address0();
    void thread_dense_2_out_V_ce0();
    void thread_dense_2_out_V_d0();
    void thread_dense_2_out_V_we0();
    void thread_dense_2_weights_V_address0();
    void thread_dense_2_weights_V_ce0();
    void thread_grp_fu_291_p1();
    void thread_grp_fu_291_p10();
    void thread_grp_fu_291_p2();
    void thread_i_fu_154_p2();
    void thread_icmp_ln13_fu_168_p2();
    void thread_icmp_ln9_fu_148_p2();
    void thread_j_fu_174_p2();
    void thread_sext_ln1117_fu_220_p1();
    void thread_sext_ln1265_fu_250_p0();
    void thread_sext_ln1265_fu_250_p1();
    void thread_sext_ln703_fu_258_p0();
    void thread_sext_ln703_fu_258_p1();
    void thread_sub_ln1117_fu_209_p2();
    void thread_tmp_1_fu_197_p3();
    void thread_tmp_6_fu_274_p3();
    void thread_tmp_s_fu_185_p3();
    void thread_trunc_ln703_fu_254_p1();
    void thread_zext_ln1117_1_fu_205_p1();
    void thread_zext_ln1117_fu_193_p1();
    void thread_zext_ln13_fu_164_p1();
    void thread_zext_ln14_1_fu_180_p1();
    void thread_zext_ln14_fu_160_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
