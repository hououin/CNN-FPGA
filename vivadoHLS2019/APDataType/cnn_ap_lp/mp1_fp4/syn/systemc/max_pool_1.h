// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_V_address0;
    sc_out< sc_logic > conv_out_V_ce0;
    sc_in< sc_lv<14> > conv_out_V_q0;
    sc_out< sc_lv<12> > conv_out_V_address1;
    sc_out< sc_logic > conv_out_V_ce1;
    sc_in< sc_lv<14> > conv_out_V_q1;
    sc_out< sc_lv<10> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<14> > max_pool_out_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten59_reg_128;
    sc_signal< sc_lv<3> > f_0_reg_139;
    sc_signal< sc_lv<9> > indvar_flatten22_reg_150;
    sc_signal< sc_lv<4> > r_0_reg_161;
    sc_signal< sc_lv<6> > indvar_flatten_reg_173;
    sc_signal< sc_lv<4> > c_0_reg_184;
    sc_signal< sc_lv<14> > max_0_reg_195;
    sc_signal< sc_lv<2> > mpr_0_reg_207;
    sc_signal< sc_lv<5> > shl_ln2_fu_218_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_698;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > or_ln27_fu_226_p2;
    sc_signal< sc_lv<5> > or_ln27_reg_703;
    sc_signal< sc_lv<1> > icmp_ln10_fu_232_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_708;
    sc_signal< sc_lv<1> > icmp_ln10_reg_708_pp0_iter1_reg;
    sc_signal< sc_lv<11> > add_ln10_fu_238_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_250_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_717;
    sc_signal< sc_lv<3> > select_ln29_3_fu_256_p3;
    sc_signal< sc_lv<3> > select_ln29_3_reg_723;
    sc_signal< sc_lv<1> > and_ln29_1_fu_288_p2;
    sc_signal< sc_lv<1> > and_ln29_1_reg_730;
    sc_signal< sc_lv<1> > or_ln13_fu_294_p2;
    sc_signal< sc_lv<1> > or_ln13_reg_736;
    sc_signal< sc_lv<1> > and_ln13_fu_320_p2;
    sc_signal< sc_lv<1> > and_ln13_reg_742;
    sc_signal< sc_lv<4> > c_fu_326_p2;
    sc_signal< sc_lv<4> > c_reg_748;
    sc_signal< sc_lv<1> > or_ln16_1_fu_338_p2;
    sc_signal< sc_lv<1> > or_ln16_1_reg_753;
    sc_signal< sc_lv<1> > or_ln16_1_reg_753_pp0_iter1_reg;
    sc_signal< sc_lv<2> > select_ln16_1_fu_344_p3;
    sc_signal< sc_lv<2> > select_ln16_1_reg_758;
    sc_signal< sc_lv<4> > select_ln16_4_fu_352_p3;
    sc_signal< sc_lv<4> > select_ln16_4_reg_763;
    sc_signal< sc_lv<2> > mpr_fu_360_p2;
    sc_signal< sc_lv<2> > mpr_reg_769;
    sc_signal< sc_lv<6> > select_ln16_5_fu_372_p3;
    sc_signal< sc_lv<9> > select_ln13_5_fu_386_p3;
    sc_signal< sc_lv<4> > select_ln13_2_fu_443_p3;
    sc_signal< sc_lv<4> > select_ln13_2_reg_785;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_612_p2;
    sc_signal< sc_lv<1> > icmp_ln20_1_reg_800;
    sc_signal< sc_lv<11> > add_ln203_3_fu_652_p2;
    sc_signal< sc_lv<11> > add_ln203_3_reg_804;
    sc_signal< sc_lv<14> > select_ln29_1_fu_685_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<3> > ap_phi_mux_f_0_phi_fu_143_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_165_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_188_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_211_p4;
    sc_signal< sc_lv<64> > zext_ln1494_4_fu_564_p1;
    sc_signal< sc_lv<64> > zext_ln1494_6_fu_607_p1;
    sc_signal< sc_lv<64> > zext_ln203_6_fu_694_p1;
    sc_signal< sc_lv<3> > f_fu_244_p2;
    sc_signal< sc_lv<1> > icmp_ln20_fu_270_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_264_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_282_p2;
    sc_signal< sc_lv<1> > xor_ln13_fu_308_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_276_p2;
    sc_signal< sc_lv<1> > or_ln13_1_fu_314_p2;
    sc_signal< sc_lv<4> > select_ln13_fu_300_p3;
    sc_signal< sc_lv<1> > or_ln16_fu_332_p2;
    sc_signal< sc_lv<6> > add_ln16_fu_366_p2;
    sc_signal< sc_lv<9> > add_ln13_1_fu_380_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_407_p3;
    sc_signal< sc_lv<4> > select_ln29_2_fu_394_p3;
    sc_signal< sc_lv<4> > r_fu_422_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_428_p3;
    sc_signal< sc_lv<5> > select_ln29_4_fu_415_p3;
    sc_signal< sc_lv<4> > mul_ln203_fu_454_p0;
    sc_signal< sc_lv<5> > shl_ln27_mid1_fu_472_p3;
    sc_signal< sc_lv<5> > select_ln13_3_fu_460_p3;
    sc_signal< sc_lv<5> > select_ln16_2_fu_479_p3;
    sc_signal< sc_lv<5> > or_ln27_1_fu_490_p2;
    sc_signal< sc_lv<5> > select_ln13_4_fu_466_p3;
    sc_signal< sc_lv<5> > select_ln16_3_fu_496_p3;
    sc_signal< sc_lv<5> > zext_ln20_fu_507_p1;
    sc_signal< sc_lv<5> > select_ln13_1_fu_436_p3;
    sc_signal< sc_lv<5> > i_fu_510_p2;
    sc_signal< sc_lv<5> > mul_ln1494_fu_520_p0;
    sc_signal< sc_lv<10> > mul_ln1494_fu_520_p2;
    sc_signal< sc_lv<10> > zext_ln16_fu_486_p1;
    sc_signal< sc_lv<10> > add_ln1494_fu_526_p2;
    sc_signal< sc_lv<11> > tmp_fu_540_p3;
    sc_signal< sc_lv<13> > p_shl3_cast_fu_532_p3;
    sc_signal< sc_lv<13> > zext_ln1494_3_fu_548_p1;
    sc_signal< sc_lv<13> > sub_ln1494_fu_552_p2;
    sc_signal< sc_lv<13> > zext_ln26_1_fu_404_p1;
    sc_signal< sc_lv<13> > add_ln1494_2_fu_558_p2;
    sc_signal< sc_lv<10> > zext_ln16_1_fu_503_p1;
    sc_signal< sc_lv<10> > add_ln1494_3_fu_569_p2;
    sc_signal< sc_lv<11> > tmp_1_fu_583_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_575_p3;
    sc_signal< sc_lv<13> > zext_ln1494_5_fu_591_p1;
    sc_signal< sc_lv<13> > sub_ln1494_1_fu_595_p2;
    sc_signal< sc_lv<13> > add_ln1494_4_fu_601_p2;
    sc_signal< sc_lv<8> > zext_ln203_4_fu_617_p1;
    sc_signal< sc_lv<8> > mul_ln203_fu_454_p2;
    sc_signal< sc_lv<8> > add_ln203_fu_620_p2;
    sc_signal< sc_lv<9> > tmp_2_fu_634_p3;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_626_p3;
    sc_signal< sc_lv<11> > zext_ln203_5_fu_642_p1;
    sc_signal< sc_lv<11> > zext_ln26_fu_401_p1;
    sc_signal< sc_lv<11> > sub_ln203_fu_646_p2;
    sc_signal< sc_lv<14> > select_ln16_fu_658_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_665_p2;
    sc_signal< sc_lv<14> > select_ln29_fu_671_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_679_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln1494_fu_520_p00;
    sc_signal< sc_lv<8> > mul_ln203_fu_454_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<11> ap_const_lv11_7EC;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_152;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<6> ap_const_lv6_1A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_238_p2();
    void thread_add_ln13_1_fu_380_p2();
    void thread_add_ln1494_2_fu_558_p2();
    void thread_add_ln1494_3_fu_569_p2();
    void thread_add_ln1494_4_fu_601_p2();
    void thread_add_ln1494_fu_526_p2();
    void thread_add_ln16_fu_366_p2();
    void thread_add_ln203_3_fu_652_p2();
    void thread_add_ln203_fu_620_p2();
    void thread_and_ln13_fu_320_p2();
    void thread_and_ln29_1_fu_288_p2();
    void thread_and_ln29_fu_276_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_188_p4();
    void thread_ap_phi_mux_f_0_phi_fu_143_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_211_p4();
    void thread_ap_phi_mux_r_0_phi_fu_165_p4();
    void thread_ap_ready();
    void thread_c_fu_326_p2();
    void thread_conv_out_V_address0();
    void thread_conv_out_V_address1();
    void thread_conv_out_V_ce0();
    void thread_conv_out_V_ce1();
    void thread_f_fu_244_p2();
    void thread_i_fu_510_p2();
    void thread_icmp_ln10_fu_232_p2();
    void thread_icmp_ln13_fu_250_p2();
    void thread_icmp_ln1494_1_fu_679_p2();
    void thread_icmp_ln1494_fu_665_p2();
    void thread_icmp_ln16_fu_282_p2();
    void thread_icmp_ln20_1_fu_612_p2();
    void thread_icmp_ln20_fu_270_p2();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mpr_fu_360_p2();
    void thread_mul_ln1494_fu_520_p0();
    void thread_mul_ln1494_fu_520_p00();
    void thread_mul_ln1494_fu_520_p2();
    void thread_mul_ln203_fu_454_p0();
    void thread_mul_ln203_fu_454_p00();
    void thread_mul_ln203_fu_454_p2();
    void thread_or_ln13_1_fu_314_p2();
    void thread_or_ln13_fu_294_p2();
    void thread_or_ln16_1_fu_338_p2();
    void thread_or_ln16_fu_332_p2();
    void thread_or_ln27_1_fu_490_p2();
    void thread_or_ln27_fu_226_p2();
    void thread_p_shl3_cast_fu_532_p3();
    void thread_p_shl5_cast_fu_626_p3();
    void thread_p_shl_cast_fu_575_p3();
    void thread_r_fu_422_p2();
    void thread_select_ln13_1_fu_436_p3();
    void thread_select_ln13_2_fu_443_p3();
    void thread_select_ln13_3_fu_460_p3();
    void thread_select_ln13_4_fu_466_p3();
    void thread_select_ln13_5_fu_386_p3();
    void thread_select_ln13_fu_300_p3();
    void thread_select_ln16_1_fu_344_p3();
    void thread_select_ln16_2_fu_479_p3();
    void thread_select_ln16_3_fu_496_p3();
    void thread_select_ln16_4_fu_352_p3();
    void thread_select_ln16_5_fu_372_p3();
    void thread_select_ln16_fu_658_p3();
    void thread_select_ln29_1_fu_685_p3();
    void thread_select_ln29_2_fu_394_p3();
    void thread_select_ln29_3_fu_256_p3();
    void thread_select_ln29_4_fu_415_p3();
    void thread_select_ln29_fu_671_p3();
    void thread_shl_ln26_mid1_fu_428_p3();
    void thread_shl_ln27_mid1_fu_472_p3();
    void thread_shl_ln2_fu_218_p3();
    void thread_shl_ln_fu_407_p3();
    void thread_sub_ln1494_1_fu_595_p2();
    void thread_sub_ln1494_fu_552_p2();
    void thread_sub_ln203_fu_646_p2();
    void thread_tmp_1_fu_583_p3();
    void thread_tmp_2_fu_634_p3();
    void thread_tmp_fu_540_p3();
    void thread_xor_ln13_fu_308_p2();
    void thread_xor_ln29_fu_264_p2();
    void thread_zext_ln1494_3_fu_548_p1();
    void thread_zext_ln1494_4_fu_564_p1();
    void thread_zext_ln1494_5_fu_591_p1();
    void thread_zext_ln1494_6_fu_607_p1();
    void thread_zext_ln16_1_fu_503_p1();
    void thread_zext_ln16_fu_486_p1();
    void thread_zext_ln203_4_fu_617_p1();
    void thread_zext_ln203_5_fu_642_p1();
    void thread_zext_ln203_6_fu_694_p1();
    void thread_zext_ln20_fu_507_p1();
    void thread_zext_ln26_1_fu_404_p1();
    void thread_zext_ln26_fu_401_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
