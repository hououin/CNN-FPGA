// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module flat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_pool_out_V_address0,
        max_pool_out_V_ce0,
        max_pool_out_V_q0,
        flat_array_0_V_address0,
        flat_array_0_V_ce0,
        flat_array_0_V_we0,
        flat_array_0_V_d0,
        flat_array_1_V_address0,
        flat_array_1_V_ce0,
        flat_array_1_V_we0,
        flat_array_1_V_d0,
        flat_array_2_V_address0,
        flat_array_2_V_ce0,
        flat_array_2_V_we0,
        flat_array_2_V_d0,
        flat_array_3_V_address0,
        flat_array_3_V_ce0,
        flat_array_3_V_we0,
        flat_array_3_V_d0,
        flat_array_4_V_address0,
        flat_array_4_V_ce0,
        flat_array_4_V_we0,
        flat_array_4_V_d0,
        flat_array_5_V_address0,
        flat_array_5_V_ce0,
        flat_array_5_V_we0,
        flat_array_5_V_d0,
        flat_array_6_V_address0,
        flat_array_6_V_ce0,
        flat_array_6_V_we0,
        flat_array_6_V_d0,
        flat_array_7_V_address0,
        flat_array_7_V_ce0,
        flat_array_7_V_we0,
        flat_array_7_V_d0,
        flat_array_8_V_address0,
        flat_array_8_V_ce0,
        flat_array_8_V_we0,
        flat_array_8_V_d0,
        flat_array_9_V_address0,
        flat_array_9_V_ce0,
        flat_array_9_V_we0,
        flat_array_9_V_d0,
        flat_array_10_V_address0,
        flat_array_10_V_ce0,
        flat_array_10_V_we0,
        flat_array_10_V_d0,
        flat_array_11_V_address0,
        flat_array_11_V_ce0,
        flat_array_11_V_we0,
        flat_array_11_V_d0,
        flat_array_12_V_address0,
        flat_array_12_V_ce0,
        flat_array_12_V_we0,
        flat_array_12_V_d0,
        flat_array_13_V_address0,
        flat_array_13_V_ce0,
        flat_array_13_V_we0,
        flat_array_13_V_d0,
        flat_array_14_V_address0,
        flat_array_14_V_ce0,
        flat_array_14_V_we0,
        flat_array_14_V_d0,
        flat_array_15_V_address0,
        flat_array_15_V_ce0,
        flat_array_15_V_we0,
        flat_array_15_V_d0,
        flat_array_16_V_address0,
        flat_array_16_V_ce0,
        flat_array_16_V_we0,
        flat_array_16_V_d0,
        flat_array_17_V_address0,
        flat_array_17_V_ce0,
        flat_array_17_V_we0,
        flat_array_17_V_d0,
        flat_array_18_V_address0,
        flat_array_18_V_ce0,
        flat_array_18_V_we0,
        flat_array_18_V_d0,
        flat_array_19_V_address0,
        flat_array_19_V_ce0,
        flat_array_19_V_we0,
        flat_array_19_V_d0,
        flat_array_20_V_address0,
        flat_array_20_V_ce0,
        flat_array_20_V_we0,
        flat_array_20_V_d0,
        flat_array_21_V_address0,
        flat_array_21_V_ce0,
        flat_array_21_V_we0,
        flat_array_21_V_d0,
        flat_array_22_V_address0,
        flat_array_22_V_ce0,
        flat_array_22_V_we0,
        flat_array_22_V_d0,
        flat_array_23_V_address0,
        flat_array_23_V_ce0,
        flat_array_23_V_we0,
        flat_array_23_V_d0,
        flat_array_24_V_address0,
        flat_array_24_V_ce0,
        flat_array_24_V_we0,
        flat_array_24_V_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state15 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] max_pool_out_V_address0;
output   max_pool_out_V_ce0;
input  [13:0] max_pool_out_V_q0;
output  [3:0] flat_array_0_V_address0;
output   flat_array_0_V_ce0;
output   flat_array_0_V_we0;
output  [13:0] flat_array_0_V_d0;
output  [3:0] flat_array_1_V_address0;
output   flat_array_1_V_ce0;
output   flat_array_1_V_we0;
output  [13:0] flat_array_1_V_d0;
output  [3:0] flat_array_2_V_address0;
output   flat_array_2_V_ce0;
output   flat_array_2_V_we0;
output  [13:0] flat_array_2_V_d0;
output  [3:0] flat_array_3_V_address0;
output   flat_array_3_V_ce0;
output   flat_array_3_V_we0;
output  [13:0] flat_array_3_V_d0;
output  [3:0] flat_array_4_V_address0;
output   flat_array_4_V_ce0;
output   flat_array_4_V_we0;
output  [13:0] flat_array_4_V_d0;
output  [3:0] flat_array_5_V_address0;
output   flat_array_5_V_ce0;
output   flat_array_5_V_we0;
output  [13:0] flat_array_5_V_d0;
output  [3:0] flat_array_6_V_address0;
output   flat_array_6_V_ce0;
output   flat_array_6_V_we0;
output  [13:0] flat_array_6_V_d0;
output  [3:0] flat_array_7_V_address0;
output   flat_array_7_V_ce0;
output   flat_array_7_V_we0;
output  [13:0] flat_array_7_V_d0;
output  [3:0] flat_array_8_V_address0;
output   flat_array_8_V_ce0;
output   flat_array_8_V_we0;
output  [13:0] flat_array_8_V_d0;
output  [3:0] flat_array_9_V_address0;
output   flat_array_9_V_ce0;
output   flat_array_9_V_we0;
output  [13:0] flat_array_9_V_d0;
output  [3:0] flat_array_10_V_address0;
output   flat_array_10_V_ce0;
output   flat_array_10_V_we0;
output  [13:0] flat_array_10_V_d0;
output  [3:0] flat_array_11_V_address0;
output   flat_array_11_V_ce0;
output   flat_array_11_V_we0;
output  [13:0] flat_array_11_V_d0;
output  [3:0] flat_array_12_V_address0;
output   flat_array_12_V_ce0;
output   flat_array_12_V_we0;
output  [13:0] flat_array_12_V_d0;
output  [3:0] flat_array_13_V_address0;
output   flat_array_13_V_ce0;
output   flat_array_13_V_we0;
output  [13:0] flat_array_13_V_d0;
output  [3:0] flat_array_14_V_address0;
output   flat_array_14_V_ce0;
output   flat_array_14_V_we0;
output  [13:0] flat_array_14_V_d0;
output  [3:0] flat_array_15_V_address0;
output   flat_array_15_V_ce0;
output   flat_array_15_V_we0;
output  [13:0] flat_array_15_V_d0;
output  [3:0] flat_array_16_V_address0;
output   flat_array_16_V_ce0;
output   flat_array_16_V_we0;
output  [13:0] flat_array_16_V_d0;
output  [3:0] flat_array_17_V_address0;
output   flat_array_17_V_ce0;
output   flat_array_17_V_we0;
output  [13:0] flat_array_17_V_d0;
output  [3:0] flat_array_18_V_address0;
output   flat_array_18_V_ce0;
output   flat_array_18_V_we0;
output  [13:0] flat_array_18_V_d0;
output  [3:0] flat_array_19_V_address0;
output   flat_array_19_V_ce0;
output   flat_array_19_V_we0;
output  [13:0] flat_array_19_V_d0;
output  [3:0] flat_array_20_V_address0;
output   flat_array_20_V_ce0;
output   flat_array_20_V_we0;
output  [13:0] flat_array_20_V_d0;
output  [3:0] flat_array_21_V_address0;
output   flat_array_21_V_ce0;
output   flat_array_21_V_we0;
output  [13:0] flat_array_21_V_d0;
output  [3:0] flat_array_22_V_address0;
output   flat_array_22_V_ce0;
output   flat_array_22_V_we0;
output  [13:0] flat_array_22_V_d0;
output  [3:0] flat_array_23_V_address0;
output   flat_array_23_V_ce0;
output   flat_array_23_V_we0;
output  [13:0] flat_array_23_V_d0;
output  [3:0] flat_array_24_V_address0;
output   flat_array_24_V_ce0;
output   flat_array_24_V_we0;
output  [13:0] flat_array_24_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_pool_out_V_ce0;
reg flat_array_0_V_ce0;
reg flat_array_0_V_we0;
reg flat_array_1_V_ce0;
reg flat_array_1_V_we0;
reg flat_array_2_V_ce0;
reg flat_array_2_V_we0;
reg flat_array_3_V_ce0;
reg flat_array_3_V_we0;
reg flat_array_4_V_ce0;
reg flat_array_4_V_we0;
reg flat_array_5_V_ce0;
reg flat_array_5_V_we0;
reg flat_array_6_V_ce0;
reg flat_array_6_V_we0;
reg flat_array_7_V_ce0;
reg flat_array_7_V_we0;
reg flat_array_8_V_ce0;
reg flat_array_8_V_we0;
reg flat_array_9_V_ce0;
reg flat_array_9_V_we0;
reg flat_array_10_V_ce0;
reg flat_array_10_V_we0;
reg flat_array_11_V_ce0;
reg flat_array_11_V_we0;
reg flat_array_12_V_ce0;
reg flat_array_12_V_we0;
reg flat_array_13_V_ce0;
reg flat_array_13_V_we0;
reg flat_array_14_V_ce0;
reg flat_array_14_V_we0;
reg flat_array_15_V_ce0;
reg flat_array_15_V_we0;
reg flat_array_16_V_ce0;
reg flat_array_16_V_we0;
reg flat_array_17_V_ce0;
reg flat_array_17_V_we0;
reg flat_array_18_V_ce0;
reg flat_array_18_V_we0;
reg flat_array_19_V_ce0;
reg flat_array_19_V_we0;
reg flat_array_20_V_ce0;
reg flat_array_20_V_we0;
reg flat_array_21_V_ce0;
reg flat_array_21_V_we0;
reg flat_array_22_V_ce0;
reg flat_array_22_V_we0;
reg flat_array_23_V_ce0;
reg flat_array_23_V_we0;
reg flat_array_24_V_ce0;
reg flat_array_24_V_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] indvar_flatten17_reg_537;
reg   [8:0] i_0_reg_548;
reg   [2:0] r_0_reg_559;
reg   [7:0] indvar_flatten_reg_570;
reg   [8:0] i_1_reg_581;
reg   [2:0] c_0_reg_592;
reg   [8:0] i_2_reg_603;
reg   [4:0] f_0_reg_614;
wire   [0:0] icmp_ln6_fu_625_p2;
reg   [0:0] icmp_ln6_reg_901;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln6_fu_631_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln15_3_fu_679_p3;
reg   [2:0] select_ln15_3_reg_910;
wire   [8:0] select_ln6_fu_705_p3;
wire   [8:0] select_ln15_4_fu_725_p3;
wire   [4:0] select_ln15_5_fu_739_p3;
reg   [4:0] select_ln15_5_reg_927;
wire   [2:0] select_ln15_6_fu_747_p3;
reg   [2:0] select_ln15_6_reg_932;
wire   [8:0] select_ln9_fu_755_p3;
reg   [5:0] tmp_13_reg_943;
reg   [5:0] tmp_13_reg_943_pp0_iter1_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter2_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter3_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter4_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter5_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter6_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter7_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter8_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter9_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter10_reg;
reg   [5:0] tmp_13_reg_943_pp0_iter11_reg;
wire   [8:0] add_ln15_1_fu_782_p2;
wire   [4:0] f_fu_788_p2;
wire   [7:0] select_ln9_1_fu_800_p3;
wire   [9:0] add_ln203_6_fu_848_p2;
reg   [9:0] add_ln203_6_reg_963;
reg   [9:0] add_ln203_6_reg_963_pp0_iter2_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter3_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter4_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter5_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter6_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter7_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter8_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter9_reg;
reg   [9:0] add_ln203_6_reg_963_pp0_iter10_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg   [2:0] ap_phi_mux_r_0_phi_fu_563_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_c_0_phi_fu_596_p4;
wire   [63:0] zext_ln203_12_fu_854_p1;
wire   [63:0] zext_ln203_fu_865_p1;
wire   [5:0] trunc_ln203_fu_858_p1;
wire   [0:0] icmp_ln9_fu_649_p2;
wire   [8:0] add_ln15_fu_643_p2;
wire   [2:0] r_fu_637_p2;
wire   [0:0] icmp_ln12_fu_693_p2;
wire   [0:0] xor_ln15_fu_687_p2;
wire   [2:0] select_ln15_1_fu_663_p3;
wire   [8:0] select_ln15_fu_655_p3;
wire   [0:0] and_ln15_fu_699_p2;
wire   [8:0] add_ln15_2_fu_719_p2;
wire   [8:0] select_ln15_2_fu_671_p3;
wire   [0:0] or_ln15_fu_733_p2;
wire   [2:0] c_fu_713_p2;
wire   [5:0] grp_fu_763_p1;
wire   [19:0] mul_ln203_fu_894_p2;
wire   [7:0] add_ln9_fu_794_p2;
wire   [4:0] tmp_fu_811_p3;
wire   [5:0] zext_ln203_10_fu_818_p1;
wire   [5:0] zext_ln203_9_fu_808_p1;
wire   [5:0] zext_ln15_fu_828_p1;
wire   [5:0] add_ln203_fu_822_p2;
wire   [5:0] add_ln203_5_fu_831_p2;
wire   [9:0] zext_ln203_11_fu_845_p1;
wire   [9:0] tmp_23_cast_fu_837_p3;
wire   [5:0] grp_fu_763_p2;
wire  signed [8:0] sext_ln203_fu_862_p1;
wire   [10:0] mul_ln203_fu_894_p0;
wire   [8:0] mul_ln203_fu_894_p1;
wire    ap_CS_fsm_state15;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [19:0] mul_ln203_fu_894_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

cnn_urem_9ns_6ns_bjl #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 6 ))
cnn_urem_9ns_6ns_bjl_U298(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln15_4_fu_725_p3),
    .din1(grp_fu_763_p1),
    .ce(1'b1),
    .dout(grp_fu_763_p2)
);

cnn_mul_mul_11ns_bkl #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 20 ))
cnn_mul_mul_11ns_bkl_U299(
    .din0(mul_ln203_fu_894_p0),
    .din1(mul_ln203_fu_894_p1),
    .dout(mul_ln203_fu_894_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_reg_592 <= select_ln15_6_reg_932;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_592 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_0_reg_614 <= f_fu_788_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_614 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_548 <= select_ln6_fu_705_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_548 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_581 <= select_ln9_fu_755_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_1_reg_581 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_603 <= add_ln15_1_fu_782_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_reg_603 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten17_reg_537 <= add_ln6_fu_631_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_537 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_570 <= select_ln9_1_fu_800_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_570 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_0_reg_559 <= select_ln15_3_reg_910;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_559 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_901 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln203_6_reg_963 <= add_ln203_6_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln203_6_reg_963_pp0_iter10_reg <= add_ln203_6_reg_963_pp0_iter9_reg;
        add_ln203_6_reg_963_pp0_iter2_reg <= add_ln203_6_reg_963;
        add_ln203_6_reg_963_pp0_iter3_reg <= add_ln203_6_reg_963_pp0_iter2_reg;
        add_ln203_6_reg_963_pp0_iter4_reg <= add_ln203_6_reg_963_pp0_iter3_reg;
        add_ln203_6_reg_963_pp0_iter5_reg <= add_ln203_6_reg_963_pp0_iter4_reg;
        add_ln203_6_reg_963_pp0_iter6_reg <= add_ln203_6_reg_963_pp0_iter5_reg;
        add_ln203_6_reg_963_pp0_iter7_reg <= add_ln203_6_reg_963_pp0_iter6_reg;
        add_ln203_6_reg_963_pp0_iter8_reg <= add_ln203_6_reg_963_pp0_iter7_reg;
        add_ln203_6_reg_963_pp0_iter9_reg <= add_ln203_6_reg_963_pp0_iter8_reg;
        tmp_13_reg_943_pp0_iter10_reg <= tmp_13_reg_943_pp0_iter9_reg;
        tmp_13_reg_943_pp0_iter11_reg <= tmp_13_reg_943_pp0_iter10_reg;
        tmp_13_reg_943_pp0_iter2_reg <= tmp_13_reg_943_pp0_iter1_reg;
        tmp_13_reg_943_pp0_iter3_reg <= tmp_13_reg_943_pp0_iter2_reg;
        tmp_13_reg_943_pp0_iter4_reg <= tmp_13_reg_943_pp0_iter3_reg;
        tmp_13_reg_943_pp0_iter5_reg <= tmp_13_reg_943_pp0_iter4_reg;
        tmp_13_reg_943_pp0_iter6_reg <= tmp_13_reg_943_pp0_iter5_reg;
        tmp_13_reg_943_pp0_iter7_reg <= tmp_13_reg_943_pp0_iter6_reg;
        tmp_13_reg_943_pp0_iter8_reg <= tmp_13_reg_943_pp0_iter7_reg;
        tmp_13_reg_943_pp0_iter9_reg <= tmp_13_reg_943_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln6_reg_901 <= icmp_ln6_fu_625_p2;
        tmp_13_reg_943_pp0_iter1_reg <= tmp_13_reg_943;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_3_reg_910 <= select_ln15_3_fu_679_p3;
        select_ln15_6_reg_932 <= select_ln15_6_fu_747_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_625_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_5_reg_927 <= select_ln15_5_fu_739_p3;
        tmp_13_reg_943 <= {{mul_ln203_fu_894_p2[19:14]}};
    end
end

always @ (*) begin
    if ((icmp_ln6_fu_625_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln6_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_596_p4 = select_ln15_6_reg_932;
    end else begin
        ap_phi_mux_c_0_phi_fu_596_p4 = c_0_reg_592;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln6_reg_901 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_563_p4 = select_ln15_3_reg_910;
    end else begin
        ap_phi_mux_r_0_phi_fu_563_p4 = r_0_reg_559;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_0_V_ce0 = 1'b1;
    end else begin
        flat_array_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_0_V_we0 = 1'b1;
    end else begin
        flat_array_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_10_V_ce0 = 1'b1;
    end else begin
        flat_array_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_10_V_we0 = 1'b1;
    end else begin
        flat_array_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_11_V_ce0 = 1'b1;
    end else begin
        flat_array_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_11_V_we0 = 1'b1;
    end else begin
        flat_array_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_12_V_ce0 = 1'b1;
    end else begin
        flat_array_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_12_V_we0 = 1'b1;
    end else begin
        flat_array_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_13_V_ce0 = 1'b1;
    end else begin
        flat_array_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_13_V_we0 = 1'b1;
    end else begin
        flat_array_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_14_V_ce0 = 1'b1;
    end else begin
        flat_array_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_14_V_we0 = 1'b1;
    end else begin
        flat_array_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_15_V_ce0 = 1'b1;
    end else begin
        flat_array_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_15_V_we0 = 1'b1;
    end else begin
        flat_array_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_16_V_ce0 = 1'b1;
    end else begin
        flat_array_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_16_V_we0 = 1'b1;
    end else begin
        flat_array_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_17_V_ce0 = 1'b1;
    end else begin
        flat_array_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_17_V_we0 = 1'b1;
    end else begin
        flat_array_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_18_V_ce0 = 1'b1;
    end else begin
        flat_array_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_18_V_we0 = 1'b1;
    end else begin
        flat_array_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_19_V_ce0 = 1'b1;
    end else begin
        flat_array_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_19_V_we0 = 1'b1;
    end else begin
        flat_array_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_1_V_ce0 = 1'b1;
    end else begin
        flat_array_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_1_V_we0 = 1'b1;
    end else begin
        flat_array_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_20_V_ce0 = 1'b1;
    end else begin
        flat_array_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_20_V_we0 = 1'b1;
    end else begin
        flat_array_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_21_V_ce0 = 1'b1;
    end else begin
        flat_array_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_21_V_we0 = 1'b1;
    end else begin
        flat_array_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_22_V_ce0 = 1'b1;
    end else begin
        flat_array_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_22_V_we0 = 1'b1;
    end else begin
        flat_array_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_23_V_ce0 = 1'b1;
    end else begin
        flat_array_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_23_V_we0 = 1'b1;
    end else begin
        flat_array_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_24_V_ce0 = 1'b1;
    end else begin
        flat_array_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_fu_858_p1 == 6'd0) & ~(trunc_ln203_fu_858_p1 == 6'd1) & ~(trunc_ln203_fu_858_p1 == 6'd2) & ~(trunc_ln203_fu_858_p1 == 6'd3) & ~(trunc_ln203_fu_858_p1 == 6'd4) & ~(trunc_ln203_fu_858_p1 == 6'd5) & ~(trunc_ln203_fu_858_p1 == 6'd6) & ~(trunc_ln203_fu_858_p1 == 6'd7) & ~(trunc_ln203_fu_858_p1 == 6'd8) & ~(trunc_ln203_fu_858_p1 == 6'd9) & ~(trunc_ln203_fu_858_p1 == 6'd10) & ~(trunc_ln203_fu_858_p1 == 6'd11) & ~(trunc_ln203_fu_858_p1 == 6'd12) & ~(trunc_ln203_fu_858_p1 == 6'd13) & ~(trunc_ln203_fu_858_p1 == 6'd14) & ~(trunc_ln203_fu_858_p1 == 6'd15) & ~(trunc_ln203_fu_858_p1 == 6'd16) & ~(trunc_ln203_fu_858_p1 == 6'd17) & ~(trunc_ln203_fu_858_p1 == 6'd18) & ~(trunc_ln203_fu_858_p1 == 6'd19) & ~(trunc_ln203_fu_858_p1 == 6'd20) & ~(trunc_ln203_fu_858_p1 == 6'd21) & ~(trunc_ln203_fu_858_p1 == 6'd22) & ~(trunc_ln203_fu_858_p1 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_24_V_we0 = 1'b1;
    end else begin
        flat_array_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_2_V_ce0 = 1'b1;
    end else begin
        flat_array_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_2_V_we0 = 1'b1;
    end else begin
        flat_array_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_3_V_ce0 = 1'b1;
    end else begin
        flat_array_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_3_V_we0 = 1'b1;
    end else begin
        flat_array_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_4_V_ce0 = 1'b1;
    end else begin
        flat_array_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_4_V_we0 = 1'b1;
    end else begin
        flat_array_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_5_V_ce0 = 1'b1;
    end else begin
        flat_array_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_5_V_we0 = 1'b1;
    end else begin
        flat_array_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_6_V_ce0 = 1'b1;
    end else begin
        flat_array_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_6_V_we0 = 1'b1;
    end else begin
        flat_array_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_7_V_ce0 = 1'b1;
    end else begin
        flat_array_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_7_V_we0 = 1'b1;
    end else begin
        flat_array_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_8_V_ce0 = 1'b1;
    end else begin
        flat_array_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_8_V_we0 = 1'b1;
    end else begin
        flat_array_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_9_V_ce0 = 1'b1;
    end else begin
        flat_array_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_fu_858_p1 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        flat_array_9_V_we0 = 1'b1;
    end else begin
        flat_array_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        max_pool_out_V_ce0 = 1'b1;
    end else begin
        max_pool_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln6_fu_625_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter11 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter12 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln6_fu_625_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_1_fu_782_p2 = (select_ln15_4_fu_725_p3 + 9'd1);

assign add_ln15_2_fu_719_p2 = (9'd16 + select_ln15_fu_655_p3);

assign add_ln15_fu_643_p2 = (9'd80 + i_0_reg_548);

assign add_ln203_5_fu_831_p2 = (zext_ln15_fu_828_p1 + add_ln203_fu_822_p2);

assign add_ln203_6_fu_848_p2 = (zext_ln203_11_fu_845_p1 + tmp_23_cast_fu_837_p3);

assign add_ln203_fu_822_p2 = (zext_ln203_10_fu_818_p1 + zext_ln203_9_fu_808_p1);

assign add_ln6_fu_631_p2 = (indvar_flatten17_reg_537 + 9'd1);

assign add_ln9_fu_794_p2 = (indvar_flatten_reg_570 + 8'd1);

assign and_ln15_fu_699_p2 = (xor_ln15_fu_687_p2 & icmp_ln12_fu_693_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_713_p2 = (3'd1 + select_ln15_1_fu_663_p3);

assign f_fu_788_p2 = (select_ln15_5_fu_739_p3 + 5'd1);

assign flat_array_0_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_0_V_d0 = max_pool_out_V_q0;

assign flat_array_10_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_10_V_d0 = max_pool_out_V_q0;

assign flat_array_11_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_11_V_d0 = max_pool_out_V_q0;

assign flat_array_12_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_12_V_d0 = max_pool_out_V_q0;

assign flat_array_13_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_13_V_d0 = max_pool_out_V_q0;

assign flat_array_14_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_14_V_d0 = max_pool_out_V_q0;

assign flat_array_15_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_15_V_d0 = max_pool_out_V_q0;

assign flat_array_16_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_16_V_d0 = max_pool_out_V_q0;

assign flat_array_17_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_17_V_d0 = max_pool_out_V_q0;

assign flat_array_18_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_18_V_d0 = max_pool_out_V_q0;

assign flat_array_19_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_19_V_d0 = max_pool_out_V_q0;

assign flat_array_1_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_1_V_d0 = max_pool_out_V_q0;

assign flat_array_20_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_20_V_d0 = max_pool_out_V_q0;

assign flat_array_21_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_21_V_d0 = max_pool_out_V_q0;

assign flat_array_22_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_22_V_d0 = max_pool_out_V_q0;

assign flat_array_23_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_23_V_d0 = max_pool_out_V_q0;

assign flat_array_24_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_24_V_d0 = max_pool_out_V_q0;

assign flat_array_2_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_2_V_d0 = max_pool_out_V_q0;

assign flat_array_3_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_3_V_d0 = max_pool_out_V_q0;

assign flat_array_4_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_4_V_d0 = max_pool_out_V_q0;

assign flat_array_5_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_5_V_d0 = max_pool_out_V_q0;

assign flat_array_6_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_6_V_d0 = max_pool_out_V_q0;

assign flat_array_7_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_7_V_d0 = max_pool_out_V_q0;

assign flat_array_8_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_8_V_d0 = max_pool_out_V_q0;

assign flat_array_9_V_address0 = zext_ln203_fu_865_p1;

assign flat_array_9_V_d0 = max_pool_out_V_q0;

assign grp_fu_763_p1 = 9'd25;

assign icmp_ln12_fu_693_p2 = ((f_0_reg_614 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln6_fu_625_p2 = ((indvar_flatten17_reg_537 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_649_p2 = ((indvar_flatten_reg_570 == 8'd80) ? 1'b1 : 1'b0);

assign max_pool_out_V_address0 = zext_ln203_12_fu_854_p1;

assign mul_ln203_fu_894_p0 = 20'd656;

assign mul_ln203_fu_894_p1 = mul_ln203_fu_894_p10;

assign mul_ln203_fu_894_p10 = select_ln15_4_fu_725_p3;

assign or_ln15_fu_733_p2 = (icmp_ln9_fu_649_p2 | and_ln15_fu_699_p2);

assign r_fu_637_p2 = (3'd1 + ap_phi_mux_r_0_phi_fu_563_p4);

assign select_ln15_1_fu_663_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_c_0_phi_fu_596_p4);

assign select_ln15_2_fu_671_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? add_ln15_fu_643_p2 : i_2_reg_603);

assign select_ln15_3_fu_679_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? r_fu_637_p2 : ap_phi_mux_r_0_phi_fu_563_p4);

assign select_ln15_4_fu_725_p3 = ((and_ln15_fu_699_p2[0:0] === 1'b1) ? add_ln15_2_fu_719_p2 : select_ln15_2_fu_671_p3);

assign select_ln15_5_fu_739_p3 = ((or_ln15_fu_733_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_614);

assign select_ln15_6_fu_747_p3 = ((and_ln15_fu_699_p2[0:0] === 1'b1) ? c_fu_713_p2 : select_ln15_1_fu_663_p3);

assign select_ln15_fu_655_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? add_ln15_fu_643_p2 : i_1_reg_581);

assign select_ln6_fu_705_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? add_ln15_fu_643_p2 : i_0_reg_548);

assign select_ln9_1_fu_800_p3 = ((icmp_ln9_fu_649_p2[0:0] === 1'b1) ? 8'd1 : add_ln9_fu_794_p2);

assign select_ln9_fu_755_p3 = ((and_ln15_fu_699_p2[0:0] === 1'b1) ? add_ln15_2_fu_719_p2 : select_ln15_fu_655_p3);

assign sext_ln203_fu_862_p1 = $signed(tmp_13_reg_943_pp0_iter11_reg);

assign tmp_23_cast_fu_837_p3 = {{add_ln203_5_fu_831_p2}, {4'd0}};

assign tmp_fu_811_p3 = {{select_ln15_3_reg_910}, {2'd0}};

assign trunc_ln203_fu_858_p1 = grp_fu_763_p2[5:0];

assign xor_ln15_fu_687_p2 = (icmp_ln9_fu_649_p2 ^ 1'd1);

assign zext_ln15_fu_828_p1 = select_ln15_6_reg_932;

assign zext_ln203_10_fu_818_p1 = tmp_fu_811_p3;

assign zext_ln203_11_fu_845_p1 = select_ln15_5_reg_927;

assign zext_ln203_12_fu_854_p1 = add_ln203_6_reg_963_pp0_iter10_reg;

assign zext_ln203_9_fu_808_p1 = select_ln15_3_reg_910;

assign zext_ln203_fu_865_p1 = $unsigned(sext_ln203_fu_862_p1);

endmodule //flat
