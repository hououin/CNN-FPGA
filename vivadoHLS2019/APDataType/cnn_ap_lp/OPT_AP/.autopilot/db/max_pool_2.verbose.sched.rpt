

================================================================
== Vivado HLS Report for 'max_pool_2'
================================================================
* Date:           Sun Aug 11 21:27:50 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn_ap_lp
* Solution:       OPT_AP
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    17.357|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  802|  802|  802|  802|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                                      |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name              | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Col_Loop_Pool_Row_Loop  |  800|  800|         2|          1|          1|   800|    yes   |
        +--------------------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (1.76ns)   --->   "br label %1" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 5 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 17.3>
ST_2 : Operation 6 [1/1] (0.00ns)   --->   "%indvar_flatten59 = phi i10 [ 0, %0 ], [ %add_ln10, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 6 'phi' 'indvar_flatten59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%f_0 = phi i5 [ 0, %0 ], [ %select_ln29_3, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 7 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten22 = phi i7 [ 0, %0 ], [ %select_ln13_5, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 8 'phi' 'indvar_flatten22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %select_ln13_2, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 9 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i5 [ 0, %0 ], [ %select_ln16_5, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 10 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %select_ln16_4, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 11 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%max_0 = phi i14 [ 0, %0 ], [ %select_ln29_1, %ifFalse ]" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 12 'phi' 'max_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%mpr_0 = phi i2 [ 0, %0 ], [ %mpr, %ifFalse ]"   --->   Operation 13 'phi' 'mpr_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%shl_ln1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c_0, i1 false)" [cnn_ap_lp/max_pool_2.cpp:27]   --->   Operation 14 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%or_ln27 = or i4 %shl_ln1, 1" [cnn_ap_lp/max_pool_2.cpp:27]   --->   Operation 15 'or' 'or_ln27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.77ns)   --->   "%icmp_ln10 = icmp eq i10 %indvar_flatten59, -224" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 16 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.73ns)   --->   "%add_ln10 = add i10 %indvar_flatten59, 1" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 17 'add' 'add_ln10' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Pool_Row_Loop" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.78ns)   --->   "%f = add i5 %f_0, 1" [cnn_ap_lp/max_pool_2.cpp:10]   --->   Operation 19 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.48ns)   --->   "%icmp_ln13 = icmp eq i7 %indvar_flatten22, 50" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 20 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.98ns)   --->   "%select_ln29_2 = select i1 %icmp_ln13, i3 0, i3 %r_0" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 21 'select' 'select_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.21ns)   --->   "%select_ln29_3 = select i1 %icmp_ln13, i5 %f, i5 %f_0" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 22 'select' 'select_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i5 %select_ln29_3 to i12" [cnn_ap_lp/max_pool_2.cpp:26]   --->   Operation 23 'zext' 'zext_ln26_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r_0, i1 false)" [cnn_ap_lp/max_pool_2.cpp:26]   --->   Operation 24 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%select_ln29_4 = select i1 %icmp_ln13, i4 0, i4 %shl_ln" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 25 'select' 'select_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.97ns)   --->   "%xor_ln29 = xor i1 %icmp_ln13, true" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 26 'xor' 'xor_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.95ns)   --->   "%icmp_ln20 = icmp eq i2 %mpr_0, -2" [cnn_ap_lp/max_pool_2.cpp:20]   --->   Operation 27 'icmp' 'icmp_ln20' <Predicate = (!icmp_ln10)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%and_ln29 = and i1 %icmp_ln20, %xor_ln29" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 28 'and' 'and_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.36ns)   --->   "%icmp_ln16 = icmp eq i5 %indvar_flatten, 10" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 29 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.97ns)   --->   "%and_ln29_1 = and i1 %icmp_ln16, %xor_ln29" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 30 'and' 'and_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.65ns)   --->   "%r = add i3 %select_ln29_2, 1" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 31 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns)   --->   "%or_ln13 = or i1 %and_ln29_1, %icmp_ln13" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 32 'or' 'or_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.98ns)   --->   "%select_ln13 = select i1 %or_ln13, i3 0, i3 %c_0" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 33 'select' 'select_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%shl_ln26_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r, i1 false)" [cnn_ap_lp/max_pool_2.cpp:26]   --->   Operation 34 'bitconcatenate' 'shl_ln26_mid1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%select_ln13_1 = select i1 %and_ln29_1, i4 %shl_ln26_mid1, i4 %select_ln29_4" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 35 'select' 'select_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.98ns)   --->   "%select_ln13_2 = select i1 %and_ln29_1, i3 %r, i3 %select_ln29_2" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 36 'select' 'select_ln13_2' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494)   --->   "%select_ln13_3 = select i1 %or_ln13, i4 0, i4 %shl_ln1" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 37 'select' 'select_ln13_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_2)   --->   "%select_ln13_4 = select i1 %or_ln13, i4 1, i4 %or_ln27" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 38 'select' 'select_ln13_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%xor_ln13 = xor i1 %icmp_ln16, true" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 39 'xor' 'xor_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%or_ln13_1 = or i1 %icmp_ln13, %xor_ln13" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 40 'or' 'or_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln13 = and i1 %and_ln29, %or_ln13_1" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 41 'and' 'and_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.65ns)   --->   "%c = add i3 %select_ln13, 1" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 42 'add' 'c' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln16_1)   --->   "%or_ln16 = or i1 %and_ln13, %and_ln29_1" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 43 'or' 'or_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln16_1 = or i1 %or_ln16, %icmp_ln13" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 44 'or' 'or_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.99ns)   --->   "%select_ln16_1 = select i1 %or_ln16_1, i2 0, i2 %mpr_0" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 45 'select' 'select_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%shl_ln27_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c, i1 false)" [cnn_ap_lp/max_pool_2.cpp:27]   --->   Operation 46 'bitconcatenate' 'shl_ln27_mid1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494)   --->   "%select_ln16_2 = select i1 %and_ln13, i4 %shl_ln27_mid1, i4 %select_ln13_3" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 47 'select' 'select_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494)   --->   "%zext_ln16 = zext i4 %select_ln16_2 to i8" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 48 'zext' 'zext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_2)   --->   "%or_ln27_1 = or i4 %shl_ln27_mid1, 1" [cnn_ap_lp/max_pool_2.cpp:27]   --->   Operation 49 'or' 'or_ln27_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_2)   --->   "%select_ln16_3 = select i1 %and_ln13, i4 %or_ln27_1, i4 %select_ln13_4" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 50 'select' 'select_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln1494_2)   --->   "%zext_ln16_1 = zext i4 %select_ln16_3 to i8" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 51 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.98ns)   --->   "%select_ln16_4 = select i1 %and_ln13, i3 %c, i3 %select_ln13" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 52 'select' 'select_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%zext_ln20 = zext i2 %select_ln16_1 to i4" [cnn_ap_lp/max_pool_2.cpp:20]   --->   Operation 53 'zext' 'zext_ln20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (1.73ns) (out node of the LUT)   --->   "%i = add i4 %select_ln13_1, %zext_ln20" [cnn_ap_lp/max_pool_2.cpp:26]   --->   Operation 54 'add' 'i' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln1494 = zext i4 %i to i8" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 55 'zext' 'zext_ln1494' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (3.49ns)   --->   "%mul_ln1494 = mul i8 %zext_ln1494, 11" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 56 'mul' 'mul_ln1494' <Predicate = (!icmp_ln10)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln1494 = add i8 %zext_ln16, %mul_ln1494" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 57 'add' 'add_ln1494' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_2_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %add_ln1494, i4 0)" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 58 'bitconcatenate' 'tmp_2_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (1.54ns)   --->   "%add_ln1494_1 = add i12 %zext_ln26_1, %tmp_2_cast" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 59 'add' 'add_ln1494_1' <Predicate = (!icmp_ln10)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln1494_1 = zext i12 %add_ln1494_1 to i64" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 60 'zext' 'zext_ln1494_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%conv_out_V_addr = getelementptr [1936 x i14]* %conv_out_V, i64 0, i64 %zext_ln1494_1" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 61 'getelementptr' 'conv_out_V_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln1494_2 = add i8 %zext_ln16_1, %mul_ln1494" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 62 'add' 'add_ln1494_2' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_4_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %add_ln1494_2, i4 0)" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 63 'bitconcatenate' 'tmp_4_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.54ns)   --->   "%add_ln1494_3 = add i12 %zext_ln26_1, %tmp_4_cast" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 64 'add' 'add_ln1494_3' <Predicate = (!icmp_ln10)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln1494_2 = zext i12 %add_ln1494_3 to i64" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 65 'zext' 'zext_ln1494_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%conv_out_V_addr_1 = getelementptr [1936 x i14]* %conv_out_V, i64 0, i64 %zext_ln1494_2" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 66 'getelementptr' 'conv_out_V_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 67 [2/2] (3.25ns)   --->   "%conv_out_V_load = load i14* %conv_out_V_addr, align 2" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 67 'load' 'conv_out_V_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 400> <RAM>
ST_2 : Operation 68 [2/2] (3.25ns)   --->   "%conv_out_V_load_1 = load i14* %conv_out_V_addr_1, align 2" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 68 'load' 'conv_out_V_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 400> <RAM>
ST_2 : Operation 69 [1/1] (1.56ns)   --->   "%mpr = add i2 %select_ln16_1, 1" [cnn_ap_lp/max_pool_2.cpp:20]   --->   Operation 69 'add' 'mpr' <Predicate = (!icmp_ln10)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (1.78ns)   --->   "%add_ln16 = add i5 %indvar_flatten, 1" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 70 'add' 'add_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (1.21ns)   --->   "%select_ln16_5 = select i1 %or_ln13, i5 1, i5 %add_ln16" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 71 'select' 'select_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.87ns)   --->   "%add_ln13_1 = add i7 %indvar_flatten22, 1" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 72 'add' 'add_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.99ns)   --->   "%select_ln13_5 = select i1 %icmp_ln13, i7 1, i7 %add_ln13_1" [cnn_ap_lp/max_pool_2.cpp:13]   --->   Operation 73 'select' 'select_ln13_5' <Predicate = (!icmp_ln10)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 12.3>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([35 x i8]* @Filter_Loop_Col_Loop)"   --->   Operation 74 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 800, i64 800, i64 800)"   --->   Operation 75 'speclooptripcount' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i5 %select_ln29_3 to i10" [cnn_ap_lp/max_pool_2.cpp:26]   --->   Operation 76 'zext' 'zext_ln26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([32 x i8]* @Row_Loop_Col_Loop_Po)"   --->   Operation 77 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i3 %select_ln13_2 to i6" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 78 'zext' 'zext_ln203' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln13_2, i2 0)" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 79 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i5 %tmp to i6" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 80 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (1.78ns)   --->   "%add_ln203 = add i6 %zext_ln203_1, %zext_ln203" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 81 'add' 'add_ln203' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([23 x i8]* @Col_Loop_Pool_Row_Lo)"   --->   Operation 82 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.70ns)   --->   "%select_ln16 = select i1 %or_ln16_1, i14 0, i14 %max_0" [cnn_ap_lp/max_pool_2.cpp:16]   --->   Operation 83 'select' 'select_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str3) nounwind" [cnn_ap_lp/max_pool_2.cpp:21]   --->   Operation 84 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str3)" [cnn_ap_lp/max_pool_2.cpp:21]   --->   Operation 85 'specregionbegin' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str4) nounwind" [cnn_ap_lp/max_pool_2.cpp:22]   --->   Operation 86 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 87 [1/2] (3.25ns)   --->   "%conv_out_V_load = load i14* %conv_out_V_addr, align 2" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 87 'load' 'conv_out_V_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 400> <RAM>
ST_3 : Operation 88 [1/1] (2.20ns)   --->   "%icmp_ln1494 = icmp sgt i14 %conv_out_V_load, %select_ln16" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 88 'icmp' 'icmp_ln1494' <Predicate = (!icmp_ln10)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.70ns)   --->   "%select_ln29 = select i1 %icmp_ln1494, i14 %conv_out_V_load, i14 %select_ln16" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 89 'select' 'select_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 90 [1/2] (3.25ns)   --->   "%conv_out_V_load_1 = load i14* %conv_out_V_addr_1, align 2" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 90 'load' 'conv_out_V_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 400> <RAM>
ST_3 : Operation 91 [1/1] (2.20ns)   --->   "%icmp_ln1494_1 = icmp sgt i14 %conv_out_V_load_1, %select_ln29" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 91 'icmp' 'icmp_ln1494_1' <Predicate = (!icmp_ln10)> <Delay = 2.20> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.70ns)   --->   "%select_ln29_1 = select i1 %icmp_ln1494_1, i14 %conv_out_V_load_1, i14 %select_ln29" [cnn_ap_lp/max_pool_2.cpp:29]   --->   Operation 92 'select' 'select_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str3, i32 %tmp_5)" [cnn_ap_lp/max_pool_2.cpp:34]   --->   Operation 93 'specregionend' 'empty_47' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.95ns)   --->   "%icmp_ln20_1 = icmp eq i2 %mpr, -2" [cnn_ap_lp/max_pool_2.cpp:20]   --->   Operation 94 'icmp' 'icmp_ln20_1' <Predicate = (!icmp_ln10)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_1, label %ifTrue, label %ifFalse" [cnn_ap_lp/max_pool_2.cpp:20]   --->   Operation 95 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln203_2 = zext i3 %select_ln16_4 to i6" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 96 'zext' 'zext_ln203_2' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (1.82ns)   --->   "%add_ln203_1 = add i6 %add_ln203, %zext_ln203_2" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 97 'add' 'add_ln203_1' <Predicate = (icmp_ln20_1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_7_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %add_ln203_1, i4 0)" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 98 'bitconcatenate' 'tmp_7_cast' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (1.73ns)   --->   "%add_ln203_2 = add i10 %tmp_7_cast, %zext_ln26" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 99 'add' 'add_ln203_2' <Predicate = (icmp_ln20_1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln203_3 = zext i10 %add_ln203_2 to i64" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 100 'zext' 'zext_ln203_3' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%max_pool_out_V_addr = getelementptr [400 x i14]* %max_pool_out_V, i64 0, i64 %zext_ln203_3" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 101 'getelementptr' 'max_pool_out_V_addr' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (3.25ns)   --->   "store i14 %select_ln29_1, i14* %max_pool_out_V_addr, align 2" [cnn_ap_lp/max_pool_2.cpp:36]   --->   Operation 102 'store' <Predicate = (icmp_ln20_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 14> <Depth = 400> <RAM>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "br label %ifFalse"   --->   Operation 103 'br' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 104 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "ret void" [cnn_ap_lp/max_pool_2.cpp:40]   --->   Operation 105 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten59', cnn_ap_lp/max_pool_2.cpp:10) with incoming values : ('add_ln10', cnn_ap_lp/max_pool_2.cpp:10) [5]  (1.77 ns)

 <State 2>: 17.4ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten22', cnn_ap_lp/max_pool_2.cpp:13) with incoming values : ('select_ln13_5', cnn_ap_lp/max_pool_2.cpp:13) [7]  (0 ns)
	'icmp' operation ('icmp_ln13', cnn_ap_lp/max_pool_2.cpp:13) [22]  (1.49 ns)
	'xor' operation ('xor_ln29', cnn_ap_lp/max_pool_2.cpp:29) [29]  (0.978 ns)
	'and' operation ('and_ln29_1', cnn_ap_lp/max_pool_2.cpp:29) [33]  (0.978 ns)
	'or' operation ('or_ln16', cnn_ap_lp/max_pool_2.cpp:16) [52]  (0 ns)
	'or' operation ('or_ln16_1', cnn_ap_lp/max_pool_2.cpp:16) [53]  (0.978 ns)
	'select' operation ('select_ln16_1', cnn_ap_lp/max_pool_2.cpp:16) [55]  (0.993 ns)
	'add' operation ('i', cnn_ap_lp/max_pool_2.cpp:26) [67]  (1.74 ns)
	'mul' operation ('mul_ln1494', cnn_ap_lp/max_pool_2.cpp:29) [69]  (3.49 ns)
	'add' operation ('add_ln1494', cnn_ap_lp/max_pool_2.cpp:29) [70]  (1.92 ns)
	'add' operation ('add_ln1494_1', cnn_ap_lp/max_pool_2.cpp:29) [72]  (1.55 ns)
	'getelementptr' operation ('conv_out_V_addr', cnn_ap_lp/max_pool_2.cpp:29) [74]  (0 ns)
	'load' operation ('conv_out_V_load', cnn_ap_lp/max_pool_2.cpp:29) on array 'conv_out_V' [80]  (3.25 ns)

 <State 3>: 12.3ns
The critical path consists of the following:
	'load' operation ('conv_out_V_load', cnn_ap_lp/max_pool_2.cpp:29) on array 'conv_out_V' [80]  (3.25 ns)
	'icmp' operation ('icmp_ln1494', cnn_ap_lp/max_pool_2.cpp:29) [81]  (2.21 ns)
	'select' operation ('select_ln29', cnn_ap_lp/max_pool_2.cpp:29) [82]  (0.702 ns)
	'icmp' operation ('icmp_ln1494_1', cnn_ap_lp/max_pool_2.cpp:29) [84]  (2.21 ns)
	'select' operation ('select_ln29_1', cnn_ap_lp/max_pool_2.cpp:29) [85]  (0.702 ns)
	'store' operation ('store_ln36', cnn_ap_lp/max_pool_2.cpp:36) of variable 'select_ln29_1', cnn_ap_lp/max_pool_2.cpp:29 on array 'max_pool_out_V' [97]  (3.25 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
