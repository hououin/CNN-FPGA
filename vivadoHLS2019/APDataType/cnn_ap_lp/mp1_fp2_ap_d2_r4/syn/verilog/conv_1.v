// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        conv_out_0_V_address0,
        conv_out_0_V_ce0,
        conv_out_0_V_we0,
        conv_out_0_V_d0,
        conv_out_1_V_address0,
        conv_out_1_V_ce0,
        conv_out_1_V_we0,
        conv_out_1_V_d0,
        conv_out_2_V_address0,
        conv_out_2_V_ce0,
        conv_out_2_V_we0,
        conv_out_2_V_d0,
        conv_out_3_V_address0,
        conv_out_3_V_ce0,
        conv_out_3_V_we0,
        conv_out_3_V_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [10:0] conv_out_0_V_address0;
output   conv_out_0_V_ce0;
output   conv_out_0_V_we0;
output  [13:0] conv_out_0_V_d0;
output  [10:0] conv_out_1_V_address0;
output   conv_out_1_V_ce0;
output   conv_out_1_V_we0;
output  [13:0] conv_out_1_V_d0;
output  [9:0] conv_out_2_V_address0;
output   conv_out_2_V_ce0;
output   conv_out_2_V_we0;
output  [13:0] conv_out_2_V_d0;
output  [9:0] conv_out_3_V_address0;
output   conv_out_3_V_ce0;
output   conv_out_3_V_we0;
output  [13:0] conv_out_3_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_V_ce0;
reg conv_out_0_V_ce0;
reg conv_out_0_V_we0;
reg[13:0] conv_out_0_V_d0;
reg conv_out_1_V_ce0;
reg conv_out_1_V_we0;
reg[13:0] conv_out_1_V_d0;
reg conv_out_2_V_ce0;
reg conv_out_2_V_we0;
reg[13:0] conv_out_2_V_d0;
reg conv_out_3_V_ce0;
reg conv_out_3_V_we0;
reg[13:0] conv_out_3_V_d0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] conv_1_weights_V_address0;
reg    conv_1_weights_V_ce0;
wire  signed [8:0] conv_1_weights_V_q0;
wire   [2:0] conv_1_bias_V_address0;
reg    conv_1_bias_V_ce0;
wire   [6:0] conv_1_bias_V_q0;
wire   [4:0] r_fu_353_p2;
reg   [4:0] r_reg_1099;
wire    ap_CS_fsm_state2;
wire  signed [9:0] sext_ln203_fu_381_p1;
reg  signed [9:0] sext_ln203_reg_1104;
wire   [0:0] icmp_ln8_fu_347_p2;
wire  signed [9:0] sext_ln203_13_fu_403_p1;
reg  signed [9:0] sext_ln203_13_reg_1109;
wire   [4:0] c_fu_413_p2;
reg   [4:0] c_reg_1117;
wire    ap_CS_fsm_state3;
wire   [1:0] trunc_ln203_fu_419_p1;
reg   [1:0] trunc_ln203_reg_1122;
wire   [0:0] icmp_ln11_fu_407_p2;
wire   [11:0] sub_ln203_2_fu_466_p2;
reg   [11:0] sub_ln203_2_reg_1126;
wire   [10:0] sub_ln203_3_fu_497_p2;
reg   [10:0] sub_ln203_3_reg_1131;
wire   [2:0] f_fu_509_p2;
reg   [2:0] f_reg_1139;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln23_fu_515_p1;
reg   [63:0] zext_ln23_reg_1144;
wire   [0:0] icmp_ln14_fu_503_p2;
wire   [6:0] zext_ln203_14_fu_519_p1;
reg   [6:0] zext_ln203_14_reg_1149;
reg   [10:0] conv_out_0_V_addr_reg_1154;
reg   [10:0] conv_out_1_V_addr_reg_1159;
reg   [9:0] conv_out_2_V_addr_reg_1164;
reg   [9:0] conv_out_3_V_addr_reg_1169;
wire   [1:0] wr_fu_563_p2;
reg   [1:0] wr_reg_1177;
wire    ap_CS_fsm_state5;
wire  signed [5:0] sext_ln1116_fu_587_p1;
reg  signed [5:0] sext_ln1116_reg_1182;
wire   [0:0] icmp_ln18_fu_557_p2;
wire   [10:0] sub_ln1117_fu_621_p2;
reg   [10:0] sub_ln1117_reg_1187;
wire   [1:0] wc_fu_637_p2;
reg   [1:0] wc_reg_1200;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln21_fu_631_p2;
wire    ap_CS_fsm_state7;
wire   [13:0] tmp_V_8_fu_755_p2;
reg   [13:0] tmp_V_8_reg_1220;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln885_fu_761_p2;
reg   [0:0] icmp_ln885_reg_1231;
wire   [0:0] p_Result_32_fu_767_p3;
reg   [0:0] p_Result_32_reg_1235;
wire    ap_CS_fsm_state9;
wire   [13:0] tmp_V_9_fu_779_p3;
reg   [13:0] tmp_V_9_reg_1240;
wire   [31:0] sub_ln894_fu_812_p2;
reg   [31:0] sub_ln894_reg_1246;
wire   [31:0] or_ln_fu_922_p3;
reg   [31:0] or_ln_reg_1252;
wire   [0:0] icmp_ln908_fu_930_p2;
reg   [0:0] icmp_ln908_reg_1257;
wire   [10:0] trunc_ln893_fu_936_p1;
reg   [10:0] trunc_ln893_reg_1262;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln924_fu_1067_p2;
reg   [0:0] icmp_ln924_reg_1272;
wire   [0:0] icmp_ln924_2_fu_1073_p2;
reg   [0:0] icmp_ln924_2_reg_1277;
reg   [4:0] r_0_reg_261;
reg   [4:0] c_0_reg_273;
reg   [2:0] f_0_reg_285;
wire    ap_CS_fsm_state11;
reg   [13:0] p_Val2_s_reg_296;
reg   [1:0] wr_0_reg_308;
reg   [13:0] p_Val2_26_reg_319;
reg   [1:0] wc_0_reg_331;
wire   [63:0] zext_ln203_17_fu_536_p1;
wire   [63:0] zext_ln203_18_fu_547_p1;
wire   [63:0] zext_ln1116_7_fu_683_p1;
wire  signed [63:0] sext_ln1117_fu_703_p1;
wire   [0:0] and_ln924_fu_1083_p2;
wire   [63:0] grp_fu_342_p0;
wire   [7:0] tmp_15_fu_363_p3;
wire   [8:0] zext_ln203_11_fu_371_p1;
wire   [8:0] zext_ln203_fu_359_p1;
wire   [8:0] sub_ln203_fu_375_p2;
wire   [5:0] tmp_16_fu_385_p3;
wire   [8:0] zext_ln203_12_fu_393_p1;
wire   [8:0] sub_ln203_1_fu_397_p2;
wire   [2:0] tmp_21_fu_423_p4;
wire   [9:0] zext_ln203_13_fu_433_p1;
wire   [9:0] add_ln203_fu_437_p2;
wire   [8:0] trunc_ln203_1_fu_442_p1;
wire   [10:0] tmp_22_fu_454_p3;
wire   [11:0] p_shl5_cast_fu_446_p3;
wire  signed [11:0] sext_ln203_14_fu_462_p1;
wire   [9:0] add_ln203_30_fu_472_p2;
wire   [7:0] trunc_ln203_2_fu_477_p1;
wire   [10:0] p_shl3_cast_fu_481_p3;
wire   [10:0] p_shl4_cast_fu_489_p3;
wire   [11:0] zext_ln203_16_fu_527_p1;
wire   [11:0] add_ln203_31_fu_531_p2;
wire   [10:0] zext_ln203_15_fu_523_p1;
wire   [10:0] add_ln203_32_fu_542_p2;
wire   [3:0] tmp_17_fu_569_p3;
wire   [4:0] zext_ln1116_fu_577_p1;
wire   [4:0] zext_ln18_fu_553_p1;
wire   [4:0] sub_ln1116_fu_581_p2;
wire   [4:0] add_ln23_fu_591_p2;
wire   [9:0] tmp_18_fu_597_p3;
wire   [6:0] tmp_19_fu_609_p3;
wire   [10:0] zext_ln1117_fu_605_p1;
wire   [10:0] zext_ln1117_4_fu_617_p1;
wire   [5:0] zext_ln1116_6_fu_643_p1;
wire   [5:0] add_ln1116_fu_647_p2;
wire   [3:0] trunc_ln1116_fu_652_p1;
wire   [6:0] p_shl10_cast_fu_656_p3;
wire   [6:0] p_shl11_cast_fu_664_p3;
wire   [6:0] sub_ln1116_2_fu_672_p2;
wire   [6:0] add_ln1116_3_fu_678_p2;
wire   [4:0] zext_ln21_fu_627_p1;
wire   [4:0] add_ln23_1_fu_688_p2;
wire   [10:0] zext_ln1117_5_fu_694_p1;
wire   [10:0] add_ln1117_fu_698_p2;
wire  signed [23:0] r_V_fu_1089_p2;
wire   [21:0] lhs_V_fu_719_p3;
wire  signed [27:0] sext_ln1118_2_fu_716_p1;
wire   [28:0] zext_ln703_fu_731_p1;
wire   [28:0] zext_ln728_fu_727_p1;
wire   [28:0] ret_V_fu_735_p2;
wire  signed [13:0] sext_ln1265_fu_751_p1;
wire   [13:0] tmp_V_fu_774_p2;
reg   [13:0] p_Result_s_fu_786_p4;
wire   [31:0] p_Result_33_fu_796_p3;
reg   [31:0] l_fu_804_p3;
wire   [31:0] lsb_index_fu_822_p2;
wire   [30:0] tmp_24_fu_828_p4;
wire   [3:0] trunc_ln897_fu_844_p1;
wire   [3:0] sub_ln897_fu_848_p2;
wire   [13:0] zext_ln897_fu_854_p1;
wire   [13:0] lshr_ln897_fu_858_p2;
wire   [13:0] p_Result_29_fu_864_p2;
wire   [0:0] icmp_ln897_fu_838_p2;
wire   [0:0] icmp_ln897_2_fu_870_p2;
wire   [0:0] tmp_25_fu_882_p3;
wire   [13:0] trunc_ln894_fu_818_p1;
wire   [13:0] add_ln899_fu_896_p2;
wire   [0:0] p_Result_30_fu_902_p3;
wire   [0:0] xor_ln899_fu_890_p2;
wire   [0:0] and_ln899_fu_910_p2;
wire   [0:0] a_fu_876_p2;
wire   [0:0] or_ln899_fu_916_p2;
wire   [31:0] zext_ln907_2_fu_943_p1;
wire   [31:0] add_ln908_fu_946_p2;
wire   [31:0] lshr_ln908_fu_951_p2;
wire   [31:0] sub_ln908_fu_961_p2;
wire   [63:0] m_fu_940_p1;
wire   [63:0] zext_ln908_2_fu_966_p1;
wire   [63:0] zext_ln908_fu_957_p1;
wire   [63:0] shl_ln908_fu_970_p2;
wire   [63:0] zext_ln911_fu_983_p1;
wire   [63:0] m_7_fu_976_p3;
wire   [63:0] m_8_fu_986_p2;
wire   [62:0] m_s_fu_992_p4;
wire   [0:0] tmp_26_fu_1006_p3;
wire   [10:0] sub_ln915_fu_1022_p2;
wire   [10:0] select_ln915_fu_1014_p3;
wire   [10:0] add_ln915_fu_1027_p2;
wire   [63:0] m_11_fu_1002_p1;
wire   [11:0] tmp_6_fu_1033_p3;
wire   [63:0] p_Result_34_fu_1040_p5;
wire   [51:0] trunc_ln8_fu_1057_p4;
wire   [0:0] or_ln924_fu_1079_p2;
wire   [0:0] grp_fu_342_p2;
reg   [10:0] ap_NS_fsm;
reg    ap_condition_269;
reg    ap_condition_273;
reg    ap_condition_261;
reg    ap_condition_265;
reg    ap_condition_250;
reg    ap_condition_256;
reg    ap_condition_278;
reg    ap_condition_282;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 9 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
conv_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_V_address0),
    .ce0(conv_1_weights_V_ce0),
    .q0(conv_1_weights_V_q0)
);

conv_1_conv_1_biacud #(
    .DataWidth( 7 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_V_address0),
    .ce0(conv_1_bias_V_ce0),
    .q0(conv_1_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_342_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_342_p2)
);

cnn_mul_mul_14s_9eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9eOg_U2(
    .din0(input_V_q0),
    .din1(conv_1_weights_V_q0),
    .dout(r_V_fu_1089_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_503_p2 == 1'd1))) begin
        c_0_reg_273 <= c_reg_1117;
    end else if (((icmp_ln8_fu_347_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        c_0_reg_273 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        f_0_reg_285 <= f_reg_1139;
    end else if (((icmp_ln11_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        f_0_reg_285 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_26_reg_319 <= {{ret_V_fu_735_p2[21:8]}};
    end else if (((icmp_ln18_fu_557_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        p_Val2_26_reg_319 <= p_Val2_s_reg_296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_631_p2 == 1'd1))) begin
        p_Val2_s_reg_296 <= p_Val2_26_reg_319;
    end else if (((icmp_ln14_fu_503_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        p_Val2_s_reg_296 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_407_p2 == 1'd1))) begin
        r_0_reg_261 <= r_reg_1099;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_261 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        wc_0_reg_331 <= wc_reg_1200;
    end else if (((icmp_ln18_fu_557_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        wc_0_reg_331 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_631_p2 == 1'd1))) begin
        wr_0_reg_308 <= wr_reg_1177;
    end else if (((icmp_ln14_fu_503_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        wr_0_reg_308 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_1117 <= c_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_503_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        conv_out_0_V_addr_reg_1154 <= zext_ln203_17_fu_536_p1;
        conv_out_1_V_addr_reg_1159 <= zext_ln203_17_fu_536_p1;
        conv_out_2_V_addr_reg_1164 <= zext_ln203_18_fu_547_p1;
        conv_out_3_V_addr_reg_1169 <= zext_ln203_18_fu_547_p1;
        zext_ln203_14_reg_1149[2 : 0] <= zext_ln203_14_fu_519_p1[2 : 0];
        zext_ln23_reg_1144[2 : 0] <= zext_ln23_fu_515_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_1139 <= f_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln885_reg_1231 <= icmp_ln885_fu_761_p2;
        tmp_V_8_reg_1220 <= tmp_V_8_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln908_reg_1257 <= icmp_ln908_fu_930_p2;
        or_ln_reg_1252[0] <= or_ln_fu_922_p3[0];
        p_Result_32_reg_1235 <= tmp_V_8_reg_1220[32'd13];
        sub_ln894_reg_1246 <= sub_ln894_fu_812_p2;
        tmp_V_9_reg_1240 <= tmp_V_9_fu_779_p3;
        trunc_ln893_reg_1262 <= trunc_ln893_fu_936_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln924_2_reg_1277 <= icmp_ln924_2_fu_1073_p2;
        icmp_ln924_reg_1272 <= icmp_ln924_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_reg_1099 <= r_fu_353_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_557_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sext_ln1116_reg_1182 <= sext_ln1116_fu_587_p1;
        sub_ln1117_reg_1187[10 : 2] <= sub_ln1117_fu_621_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_347_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sext_ln203_13_reg_1109[9 : 1] <= sext_ln203_13_fu_403_p1[9 : 1];
        sext_ln203_reg_1104 <= sext_ln203_fu_381_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        sub_ln203_2_reg_1126[11 : 1] <= sub_ln203_2_fu_466_p2[11 : 1];
        sub_ln203_3_reg_1131[10 : 1] <= sub_ln203_3_fu_497_p2[10 : 1];
        trunc_ln203_reg_1122 <= trunc_ln203_fu_419_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        wc_reg_1200 <= wc_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        wr_reg_1177 <= wr_fu_563_p2;
    end
end

always @ (*) begin
    if ((((icmp_ln8_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_bias_V_ce0 = 1'b1;
    end else begin
        conv_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_weights_V_ce0 = 1'b1;
    end else begin
        conv_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd0)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0)))) begin
        conv_out_0_V_ce0 = 1'b1;
    end else begin
        conv_out_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_273)) begin
            conv_out_0_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_269)) begin
            conv_out_0_V_d0 = tmp_V_8_reg_1220;
        end else begin
            conv_out_0_V_d0 = 'bx;
        end
    end else begin
        conv_out_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd0)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0)))) begin
        conv_out_0_V_we0 = 1'b1;
    end else begin
        conv_out_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd1)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1)))) begin
        conv_out_1_V_ce0 = 1'b1;
    end else begin
        conv_out_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_265)) begin
            conv_out_1_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_261)) begin
            conv_out_1_V_d0 = tmp_V_8_reg_1220;
        end else begin
            conv_out_1_V_d0 = 'bx;
        end
    end else begin
        conv_out_1_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd1)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1)))) begin
        conv_out_1_V_we0 = 1'b1;
    end else begin
        conv_out_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd2)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2)))) begin
        conv_out_2_V_ce0 = 1'b1;
    end else begin
        conv_out_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_256)) begin
            conv_out_2_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_250)) begin
            conv_out_2_V_d0 = tmp_V_8_reg_1220;
        end else begin
            conv_out_2_V_d0 = 'bx;
        end
    end else begin
        conv_out_2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd2)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2)))) begin
        conv_out_2_V_we0 = 1'b1;
    end else begin
        conv_out_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd3)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3)))) begin
        conv_out_3_V_ce0 = 1'b1;
    end else begin
        conv_out_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((1'b1 == ap_condition_282)) begin
            conv_out_3_V_d0 = 14'd0;
        end else if ((1'b1 == ap_condition_278)) begin
            conv_out_3_V_d0 = tmp_V_8_reg_1220;
        end else begin
            conv_out_3_V_d0 = 'bx;
        end
    end else begin
        conv_out_3_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd3)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3)))) | ((icmp_ln885_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3)))) begin
        conv_out_3_V_we0 = 1'b1;
    end else begin
        conv_out_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_407_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_503_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln18_fu_557_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln21_fu_631_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln885_fu_761_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_876_p2 = (icmp_ln897_fu_838_p2 & icmp_ln897_2_fu_870_p2);

assign add_ln1116_3_fu_678_p2 = (sub_ln1116_2_fu_672_p2 + zext_ln203_14_reg_1149);

assign add_ln1116_fu_647_p2 = ($signed(sext_ln1116_reg_1182) + $signed(zext_ln1116_6_fu_643_p1));

assign add_ln1117_fu_698_p2 = (sub_ln1117_reg_1187 + zext_ln1117_5_fu_694_p1);

assign add_ln203_30_fu_472_p2 = ($signed(zext_ln203_13_fu_433_p1) + $signed(sext_ln203_13_reg_1109));

assign add_ln203_31_fu_531_p2 = (sub_ln203_2_reg_1126 + zext_ln203_16_fu_527_p1);

assign add_ln203_32_fu_542_p2 = (sub_ln203_3_reg_1131 + zext_ln203_15_fu_523_p1);

assign add_ln203_fu_437_p2 = ($signed(zext_ln203_13_fu_433_p1) + $signed(sext_ln203_reg_1104));

assign add_ln23_1_fu_688_p2 = (zext_ln21_fu_627_p1 + c_0_reg_273);

assign add_ln23_fu_591_p2 = (zext_ln18_fu_553_p1 + r_0_reg_261);

assign add_ln899_fu_896_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_818_p1));

assign add_ln908_fu_946_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1246));

assign add_ln915_fu_1027_p2 = (sub_ln915_fu_1022_p2 + select_ln915_fu_1014_p3);

assign and_ln899_fu_910_p2 = (xor_ln899_fu_890_p2 & p_Result_30_fu_902_p3);

assign and_ln924_fu_1083_p2 = (or_ln924_fu_1079_p2 & grp_fu_342_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_250 = ((icmp_ln885_reg_1231 == 1'd0) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2));
end

always @ (*) begin
    ap_condition_256 = (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd2)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd2)));
end

always @ (*) begin
    ap_condition_261 = ((icmp_ln885_reg_1231 == 1'd0) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1));
end

always @ (*) begin
    ap_condition_265 = (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd1)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd1)));
end

always @ (*) begin
    ap_condition_269 = ((icmp_ln885_reg_1231 == 1'd0) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0));
end

always @ (*) begin
    ap_condition_273 = (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd0)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd0)));
end

always @ (*) begin
    ap_condition_278 = ((icmp_ln885_reg_1231 == 1'd0) & (1'd1 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3));
end

always @ (*) begin
    ap_condition_282 = (((icmp_ln885_reg_1231 == 1'd1) & (trunc_ln203_reg_1122 == 2'd3)) | ((1'd0 == and_ln924_fu_1083_p2) & (trunc_ln203_reg_1122 == 2'd3)));
end

assign c_fu_413_p2 = (c_0_reg_273 + 5'd1);

assign conv_1_bias_V_address0 = zext_ln23_reg_1144;

assign conv_1_weights_V_address0 = zext_ln1116_7_fu_683_p1;

assign conv_out_0_V_address0 = conv_out_0_V_addr_reg_1154;

assign conv_out_1_V_address0 = conv_out_1_V_addr_reg_1159;

assign conv_out_2_V_address0 = conv_out_2_V_addr_reg_1164;

assign conv_out_3_V_address0 = conv_out_3_V_addr_reg_1169;

assign f_fu_509_p2 = (f_0_reg_285 + 3'd1);

assign grp_fu_342_p0 = p_Result_34_fu_1040_p5;

assign icmp_ln11_fu_407_p2 = ((c_0_reg_273 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_503_p2 = ((f_0_reg_285 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_557_p2 = ((wr_0_reg_308 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_631_p2 = ((wc_0_reg_331 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_761_p2 = ((tmp_V_8_fu_755_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_870_p2 = ((p_Result_29_fu_864_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_838_p2 = (($signed(tmp_24_fu_828_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_347_p2 = ((r_0_reg_261 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_930_p2 = (($signed(lsb_index_fu_822_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_2_fu_1073_p2 = ((trunc_ln8_fu_1057_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1067_p2 = ((add_ln915_fu_1027_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign input_V_address0 = sext_ln1117_fu_703_p1;


always @ (p_Result_33_fu_796_p3) begin
    if (p_Result_33_fu_796_p3[0] == 1'b1) begin
        l_fu_804_p3 = 32'd0;
    end else if (p_Result_33_fu_796_p3[1] == 1'b1) begin
        l_fu_804_p3 = 32'd1;
    end else if (p_Result_33_fu_796_p3[2] == 1'b1) begin
        l_fu_804_p3 = 32'd2;
    end else if (p_Result_33_fu_796_p3[3] == 1'b1) begin
        l_fu_804_p3 = 32'd3;
    end else if (p_Result_33_fu_796_p3[4] == 1'b1) begin
        l_fu_804_p3 = 32'd4;
    end else if (p_Result_33_fu_796_p3[5] == 1'b1) begin
        l_fu_804_p3 = 32'd5;
    end else if (p_Result_33_fu_796_p3[6] == 1'b1) begin
        l_fu_804_p3 = 32'd6;
    end else if (p_Result_33_fu_796_p3[7] == 1'b1) begin
        l_fu_804_p3 = 32'd7;
    end else if (p_Result_33_fu_796_p3[8] == 1'b1) begin
        l_fu_804_p3 = 32'd8;
    end else if (p_Result_33_fu_796_p3[9] == 1'b1) begin
        l_fu_804_p3 = 32'd9;
    end else if (p_Result_33_fu_796_p3[10] == 1'b1) begin
        l_fu_804_p3 = 32'd10;
    end else if (p_Result_33_fu_796_p3[11] == 1'b1) begin
        l_fu_804_p3 = 32'd11;
    end else if (p_Result_33_fu_796_p3[12] == 1'b1) begin
        l_fu_804_p3 = 32'd12;
    end else if (p_Result_33_fu_796_p3[13] == 1'b1) begin
        l_fu_804_p3 = 32'd13;
    end else if (p_Result_33_fu_796_p3[14] == 1'b1) begin
        l_fu_804_p3 = 32'd14;
    end else if (p_Result_33_fu_796_p3[15] == 1'b1) begin
        l_fu_804_p3 = 32'd15;
    end else if (p_Result_33_fu_796_p3[16] == 1'b1) begin
        l_fu_804_p3 = 32'd16;
    end else if (p_Result_33_fu_796_p3[17] == 1'b1) begin
        l_fu_804_p3 = 32'd17;
    end else if (p_Result_33_fu_796_p3[18] == 1'b1) begin
        l_fu_804_p3 = 32'd18;
    end else if (p_Result_33_fu_796_p3[19] == 1'b1) begin
        l_fu_804_p3 = 32'd19;
    end else if (p_Result_33_fu_796_p3[20] == 1'b1) begin
        l_fu_804_p3 = 32'd20;
    end else if (p_Result_33_fu_796_p3[21] == 1'b1) begin
        l_fu_804_p3 = 32'd21;
    end else if (p_Result_33_fu_796_p3[22] == 1'b1) begin
        l_fu_804_p3 = 32'd22;
    end else if (p_Result_33_fu_796_p3[23] == 1'b1) begin
        l_fu_804_p3 = 32'd23;
    end else if (p_Result_33_fu_796_p3[24] == 1'b1) begin
        l_fu_804_p3 = 32'd24;
    end else if (p_Result_33_fu_796_p3[25] == 1'b1) begin
        l_fu_804_p3 = 32'd25;
    end else if (p_Result_33_fu_796_p3[26] == 1'b1) begin
        l_fu_804_p3 = 32'd26;
    end else if (p_Result_33_fu_796_p3[27] == 1'b1) begin
        l_fu_804_p3 = 32'd27;
    end else if (p_Result_33_fu_796_p3[28] == 1'b1) begin
        l_fu_804_p3 = 32'd28;
    end else if (p_Result_33_fu_796_p3[29] == 1'b1) begin
        l_fu_804_p3 = 32'd29;
    end else if (p_Result_33_fu_796_p3[30] == 1'b1) begin
        l_fu_804_p3 = 32'd30;
    end else if (p_Result_33_fu_796_p3[31] == 1'b1) begin
        l_fu_804_p3 = 32'd31;
    end else begin
        l_fu_804_p3 = 32'd32;
    end
end

assign lhs_V_fu_719_p3 = {{p_Val2_26_reg_319}, {8'd0}};

assign lsb_index_fu_822_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_812_p2));

assign lshr_ln897_fu_858_p2 = 14'd16383 >> zext_ln897_fu_854_p1;

assign lshr_ln908_fu_951_p2 = zext_ln907_2_fu_943_p1 >> add_ln908_fu_946_p2;

assign m_11_fu_1002_p1 = m_s_fu_992_p4;

assign m_7_fu_976_p3 = ((icmp_ln908_reg_1257[0:0] === 1'b1) ? zext_ln908_fu_957_p1 : shl_ln908_fu_970_p2);

assign m_8_fu_986_p2 = (zext_ln911_fu_983_p1 + m_7_fu_976_p3);

assign m_fu_940_p1 = tmp_V_9_reg_1240;

assign m_s_fu_992_p4 = {{m_8_fu_986_p2[63:1]}};

assign or_ln899_fu_916_p2 = (and_ln899_fu_910_p2 | a_fu_876_p2);

assign or_ln924_fu_1079_p2 = (icmp_ln924_reg_1272 | icmp_ln924_2_reg_1277);

assign or_ln_fu_922_p3 = {{31'd0}, {or_ln899_fu_916_p2}};

assign p_Result_29_fu_864_p2 = (tmp_V_9_fu_779_p3 & lshr_ln897_fu_858_p2);

assign p_Result_30_fu_902_p3 = tmp_V_9_fu_779_p3[add_ln899_fu_896_p2];

assign p_Result_32_fu_767_p3 = tmp_V_8_reg_1220[32'd13];

assign p_Result_33_fu_796_p3 = {{18'd262143}, {p_Result_s_fu_786_p4}};

assign p_Result_34_fu_1040_p5 = {{tmp_6_fu_1033_p3}, {m_11_fu_1002_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_779_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_786_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_786_p4[ap_tvar_int_0] = tmp_V_9_fu_779_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl10_cast_fu_656_p3 = {{trunc_ln1116_fu_652_p1}, {3'd0}};

assign p_shl11_cast_fu_664_p3 = {{add_ln1116_fu_647_p2}, {1'd0}};

assign p_shl3_cast_fu_481_p3 = {{trunc_ln203_2_fu_477_p1}, {3'd0}};

assign p_shl4_cast_fu_489_p3 = {{add_ln203_30_fu_472_p2}, {1'd0}};

assign p_shl5_cast_fu_446_p3 = {{trunc_ln203_1_fu_442_p1}, {3'd0}};

assign r_fu_353_p2 = (r_0_reg_261 + 5'd1);

assign ret_V_fu_735_p2 = (zext_ln703_fu_731_p1 + zext_ln728_fu_727_p1);

assign select_ln915_fu_1014_p3 = ((tmp_26_fu_1006_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1116_fu_587_p1 = $signed(sub_ln1116_fu_581_p2);

assign sext_ln1117_fu_703_p1 = $signed(add_ln1117_fu_698_p2);

assign sext_ln1118_2_fu_716_p1 = r_V_fu_1089_p2;

assign sext_ln1265_fu_751_p1 = $signed(conv_1_bias_V_q0);

assign sext_ln203_13_fu_403_p1 = $signed(sub_ln203_1_fu_397_p2);

assign sext_ln203_14_fu_462_p1 = $signed(tmp_22_fu_454_p3);

assign sext_ln203_fu_381_p1 = $signed(sub_ln203_fu_375_p2);

assign shl_ln908_fu_970_p2 = m_fu_940_p1 << zext_ln908_2_fu_966_p1;

assign sub_ln1116_2_fu_672_p2 = (p_shl10_cast_fu_656_p3 - p_shl11_cast_fu_664_p3);

assign sub_ln1116_fu_581_p2 = (zext_ln1116_fu_577_p1 - zext_ln18_fu_553_p1);

assign sub_ln1117_fu_621_p2 = (zext_ln1117_fu_605_p1 - zext_ln1117_4_fu_617_p1);

assign sub_ln203_1_fu_397_p2 = (zext_ln203_11_fu_371_p1 - zext_ln203_12_fu_393_p1);

assign sub_ln203_2_fu_466_p2 = ($signed(p_shl5_cast_fu_446_p3) - $signed(sext_ln203_14_fu_462_p1));

assign sub_ln203_3_fu_497_p2 = (p_shl3_cast_fu_481_p3 - p_shl4_cast_fu_489_p3);

assign sub_ln203_fu_375_p2 = (zext_ln203_11_fu_371_p1 - zext_ln203_fu_359_p1);

assign sub_ln894_fu_812_p2 = (32'd14 - l_fu_804_p3);

assign sub_ln897_fu_848_p2 = (4'd4 - trunc_ln897_fu_844_p1);

assign sub_ln908_fu_961_p2 = (32'd54 - sub_ln894_reg_1246);

assign sub_ln915_fu_1022_p2 = (11'd6 - trunc_ln893_reg_1262);

assign tmp_15_fu_363_p3 = {{r_0_reg_261}, {3'd0}};

assign tmp_16_fu_385_p3 = {{r_0_reg_261}, {1'd0}};

assign tmp_17_fu_569_p3 = {{wr_0_reg_308}, {2'd0}};

assign tmp_18_fu_597_p3 = {{add_ln23_fu_591_p2}, {5'd0}};

assign tmp_19_fu_609_p3 = {{add_ln23_fu_591_p2}, {2'd0}};

assign tmp_21_fu_423_p4 = {{c_0_reg_273[4:2]}};

assign tmp_22_fu_454_p3 = {{add_ln203_fu_437_p2}, {1'd0}};

assign tmp_24_fu_828_p4 = {{lsb_index_fu_822_p2[31:1]}};

assign tmp_25_fu_882_p3 = lsb_index_fu_822_p2[32'd31];

assign tmp_26_fu_1006_p3 = m_8_fu_986_p2[32'd54];

assign tmp_6_fu_1033_p3 = {{p_Result_32_reg_1235}, {add_ln915_fu_1027_p2}};

assign tmp_V_8_fu_755_p2 = ($signed(sext_ln1265_fu_751_p1) + $signed(p_Val2_s_reg_296));

assign tmp_V_9_fu_779_p3 = ((p_Result_32_fu_767_p3[0:0] === 1'b1) ? tmp_V_fu_774_p2 : tmp_V_8_reg_1220);

assign tmp_V_fu_774_p2 = (14'd0 - tmp_V_8_reg_1220);

assign trunc_ln1116_fu_652_p1 = add_ln1116_fu_647_p2[3:0];

assign trunc_ln203_1_fu_442_p1 = add_ln203_fu_437_p2[8:0];

assign trunc_ln203_2_fu_477_p1 = add_ln203_30_fu_472_p2[7:0];

assign trunc_ln203_fu_419_p1 = c_0_reg_273[1:0];

assign trunc_ln893_fu_936_p1 = l_fu_804_p3[10:0];

assign trunc_ln894_fu_818_p1 = sub_ln894_fu_812_p2[13:0];

assign trunc_ln897_fu_844_p1 = sub_ln894_fu_812_p2[3:0];

assign trunc_ln8_fu_1057_p4 = {{m_8_fu_986_p2[52:1]}};

assign wc_fu_637_p2 = (wc_0_reg_331 + 2'd1);

assign wr_fu_563_p2 = (wr_0_reg_308 + 2'd1);

assign xor_ln899_fu_890_p2 = (tmp_25_fu_882_p3 ^ 1'd1);

assign zext_ln1116_6_fu_643_p1 = wc_0_reg_331;

assign zext_ln1116_7_fu_683_p1 = add_ln1116_3_fu_678_p2;

assign zext_ln1116_fu_577_p1 = tmp_17_fu_569_p3;

assign zext_ln1117_4_fu_617_p1 = tmp_19_fu_609_p3;

assign zext_ln1117_5_fu_694_p1 = add_ln23_1_fu_688_p2;

assign zext_ln1117_fu_605_p1 = tmp_18_fu_597_p3;

assign zext_ln18_fu_553_p1 = wr_0_reg_308;

assign zext_ln203_11_fu_371_p1 = tmp_15_fu_363_p3;

assign zext_ln203_12_fu_393_p1 = tmp_16_fu_385_p3;

assign zext_ln203_13_fu_433_p1 = tmp_21_fu_423_p4;

assign zext_ln203_14_fu_519_p1 = f_0_reg_285;

assign zext_ln203_15_fu_523_p1 = f_0_reg_285;

assign zext_ln203_16_fu_527_p1 = f_0_reg_285;

assign zext_ln203_17_fu_536_p1 = add_ln203_31_fu_531_p2;

assign zext_ln203_18_fu_547_p1 = add_ln203_32_fu_542_p2;

assign zext_ln203_fu_359_p1 = r_0_reg_261;

assign zext_ln21_fu_627_p1 = wc_0_reg_331;

assign zext_ln23_fu_515_p1 = f_0_reg_285;

assign zext_ln703_fu_731_p1 = $unsigned(sext_ln1118_2_fu_716_p1);

assign zext_ln728_fu_727_p1 = lhs_V_fu_719_p3;

assign zext_ln897_fu_854_p1 = sub_ln897_fu_848_p2;

assign zext_ln907_2_fu_943_p1 = tmp_V_9_reg_1240;

assign zext_ln908_2_fu_966_p1 = sub_ln908_fu_961_p2;

assign zext_ln908_fu_957_p1 = lshr_ln908_fu_951_p2;

assign zext_ln911_fu_983_p1 = or_ln_reg_1252;

always @ (posedge ap_clk) begin
    sext_ln203_13_reg_1109[0] <= 1'b0;
    sub_ln203_2_reg_1126[0] <= 1'b0;
    sub_ln203_3_reg_1131[0] <= 1'b0;
    zext_ln23_reg_1144[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln203_14_reg_1149[6:3] <= 4'b0000;
    sub_ln1117_reg_1187[1:0] <= 2'b00;
    or_ln_reg_1252[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_1
