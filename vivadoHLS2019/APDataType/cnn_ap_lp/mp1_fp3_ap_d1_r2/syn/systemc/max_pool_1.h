// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_5nfYi.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > conv_out_0_V_address0;
    sc_out< sc_logic > conv_out_0_V_ce0;
    sc_in< sc_lv<14> > conv_out_0_V_q0;
    sc_out< sc_lv<11> > conv_out_0_V_address1;
    sc_out< sc_logic > conv_out_0_V_ce1;
    sc_in< sc_lv<14> > conv_out_0_V_q1;
    sc_out< sc_lv<11> > conv_out_1_V_address0;
    sc_out< sc_logic > conv_out_1_V_ce0;
    sc_in< sc_lv<14> > conv_out_1_V_q0;
    sc_out< sc_lv<11> > conv_out_1_V_address1;
    sc_out< sc_logic > conv_out_1_V_ce1;
    sc_in< sc_lv<14> > conv_out_1_V_q1;
    sc_out< sc_lv<10> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<14> > max_pool_out_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_mac_muladd_5nfYi<1,1,5,4,4,8>* cnn_mac_muladd_5nfYi_U10;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten13_reg_143;
    sc_signal< sc_lv<3> > f_0_reg_154;
    sc_signal< sc_lv<8> > indvar_flatten_reg_165;
    sc_signal< sc_lv<4> > r_0_reg_176;
    sc_signal< sc_lv<4> > c_0_reg_188;
    sc_signal< sc_lv<1> > icmp_ln10_fu_200_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_543;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_543_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln10_reg_543_pp0_iter2_reg;
    sc_signal< sc_lv<10> > add_ln10_fu_206_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_218_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_552;
    sc_signal< sc_lv<3> > select_ln29_5_fu_224_p3;
    sc_signal< sc_lv<3> > select_ln29_5_reg_559;
    sc_signal< sc_lv<8> > select_ln13_fu_238_p3;
    sc_signal< sc_lv<4> > select_ln36_1_fu_295_p3;
    sc_signal< sc_lv<4> > select_ln36_1_reg_571;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<64> > zext_ln1494_5_fu_367_p1;
    sc_signal< sc_lv<64> > zext_ln1494_5_reg_576;
    sc_signal< sc_lv<12> > add_ln1494_4_fu_414_p2;
    sc_signal< sc_lv<12> > add_ln1494_4_reg_586;
    sc_signal< sc_lv<11> > add_ln203_3_fu_448_p2;
    sc_signal< sc_lv<11> > add_ln203_3_reg_591;
    sc_signal< sc_lv<11> > add_ln203_3_reg_591_pp0_iter2_reg;
    sc_signal< sc_lv<4> > c_fu_454_p2;
    sc_signal< sc_lv<4> > c_reg_596;
    sc_signal< sc_lv<13> > select_ln29_fu_470_p3;
    sc_signal< sc_lv<13> > select_ln29_reg_606;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<3> > ap_phi_mux_f_0_phi_fu_158_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_180_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_192_p4;
    sc_signal< sc_lv<64> > zext_ln1494_8_fu_478_p1;
    sc_signal< sc_lv<64> > zext_ln203_6_fu_529_p1;
    sc_signal< sc_lv<3> > f_fu_212_p2;
    sc_signal< sc_lv<8> > add_ln13_fu_232_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_264_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_259_p2;
    sc_signal< sc_lv<4> > select_ln29_4_fu_246_p3;
    sc_signal< sc_lv<1> > and_ln29_fu_270_p2;
    sc_signal< sc_lv<1> > or_ln36_fu_282_p2;
    sc_signal< sc_lv<4> > r_fu_276_p2;
    sc_signal< sc_lv<4> > mul_ln1494_fu_311_p1;
    sc_signal< sc_lv<4> > select_ln36_fu_287_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_317_p3;
    sc_signal< sc_lv<9> > zext_ln1494_3_fu_325_p1;
    sc_signal< sc_lv<9> > mul_ln1494_fu_311_p2;
    sc_signal< sc_lv<9> > add_ln1494_fu_329_p2;
    sc_signal< sc_lv<10> > tmp_fu_343_p3;
    sc_signal< sc_lv<12> > p_shl4_cast_fu_335_p3;
    sc_signal< sc_lv<12> > zext_ln1494_4_fu_351_p1;
    sc_signal< sc_lv<12> > zext_ln36_1_fu_256_p1;
    sc_signal< sc_lv<12> > sub_ln1494_fu_355_p2;
    sc_signal< sc_lv<12> > add_ln1494_2_fu_361_p2;
    sc_signal< sc_lv<5> > or_ln27_fu_372_p2;
    sc_signal< sc_lv<9> > zext_ln1494_6_fu_378_p1;
    sc_signal< sc_lv<9> > add_ln1494_3_fu_382_p2;
    sc_signal< sc_lv<10> > tmp_1_fu_396_p3;
    sc_signal< sc_lv<12> > p_shl2_cast_fu_388_p3;
    sc_signal< sc_lv<12> > zext_ln1494_7_fu_404_p1;
    sc_signal< sc_lv<12> > sub_ln1494_1_fu_408_p2;
    sc_signal< sc_lv<8> > grp_fu_533_p3;
    sc_signal< sc_lv<9> > tmp_2_fu_431_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_424_p3;
    sc_signal< sc_lv<11> > zext_ln203_5_fu_438_p1;
    sc_signal< sc_lv<11> > zext_ln36_fu_253_p1;
    sc_signal< sc_lv<11> > sub_ln203_fu_442_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_464_p2;
    sc_signal< sc_lv<13> > trunc_ln1494_fu_460_p1;
    sc_signal< sc_lv<14> > zext_ln29_fu_483_p1;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_486_p2;
    sc_signal< sc_lv<14> > select_ln29_1_fu_492_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_500_p2;
    sc_signal< sc_lv<14> > select_ln29_2_fu_506_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_514_p2;
    sc_signal< sc_lv<5> > grp_fu_533_p0;
    sc_signal< sc_lv<4> > grp_fu_533_p1;
    sc_signal< sc_lv<4> > grp_fu_533_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_533_p10;
    sc_signal< sc_lv<8> > grp_fu_533_p20;
    sc_signal< sc_lv<9> > mul_ln1494_fu_311_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<10> ap_const_lv10_3F6;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_1A;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_206_p2();
    void thread_add_ln13_fu_232_p2();
    void thread_add_ln1494_2_fu_361_p2();
    void thread_add_ln1494_3_fu_382_p2();
    void thread_add_ln1494_4_fu_414_p2();
    void thread_add_ln1494_fu_329_p2();
    void thread_add_ln203_3_fu_448_p2();
    void thread_and_ln29_fu_270_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_192_p4();
    void thread_ap_phi_mux_f_0_phi_fu_158_p4();
    void thread_ap_phi_mux_r_0_phi_fu_180_p4();
    void thread_ap_ready();
    void thread_c_fu_454_p2();
    void thread_conv_out_0_V_address0();
    void thread_conv_out_0_V_address1();
    void thread_conv_out_0_V_ce0();
    void thread_conv_out_0_V_ce1();
    void thread_conv_out_1_V_address0();
    void thread_conv_out_1_V_address1();
    void thread_conv_out_1_V_ce0();
    void thread_conv_out_1_V_ce1();
    void thread_f_fu_212_p2();
    void thread_grp_fu_533_p0();
    void thread_grp_fu_533_p1();
    void thread_grp_fu_533_p10();
    void thread_grp_fu_533_p2();
    void thread_grp_fu_533_p20();
    void thread_icmp_ln10_fu_200_p2();
    void thread_icmp_ln13_fu_218_p2();
    void thread_icmp_ln1494_1_fu_486_p2();
    void thread_icmp_ln1494_2_fu_500_p2();
    void thread_icmp_ln1494_3_fu_514_p2();
    void thread_icmp_ln1494_fu_464_p2();
    void thread_icmp_ln16_fu_264_p2();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mul_ln1494_fu_311_p1();
    void thread_mul_ln1494_fu_311_p10();
    void thread_mul_ln1494_fu_311_p2();
    void thread_or_ln27_fu_372_p2();
    void thread_or_ln36_fu_282_p2();
    void thread_p_shl2_cast_fu_388_p3();
    void thread_p_shl4_cast_fu_335_p3();
    void thread_p_shl_cast_fu_424_p3();
    void thread_r_fu_276_p2();
    void thread_select_ln13_fu_238_p3();
    void thread_select_ln29_1_fu_492_p3();
    void thread_select_ln29_2_fu_506_p3();
    void thread_select_ln29_4_fu_246_p3();
    void thread_select_ln29_5_fu_224_p3();
    void thread_select_ln29_fu_470_p3();
    void thread_select_ln36_1_fu_295_p3();
    void thread_select_ln36_fu_287_p3();
    void thread_shl_ln_fu_317_p3();
    void thread_sub_ln1494_1_fu_408_p2();
    void thread_sub_ln1494_fu_355_p2();
    void thread_sub_ln203_fu_442_p2();
    void thread_tmp_1_fu_396_p3();
    void thread_tmp_2_fu_431_p3();
    void thread_tmp_fu_343_p3();
    void thread_trunc_ln1494_fu_460_p1();
    void thread_xor_ln29_fu_259_p2();
    void thread_zext_ln1494_3_fu_325_p1();
    void thread_zext_ln1494_4_fu_351_p1();
    void thread_zext_ln1494_5_fu_367_p1();
    void thread_zext_ln1494_6_fu_378_p1();
    void thread_zext_ln1494_7_fu_404_p1();
    void thread_zext_ln1494_8_fu_478_p1();
    void thread_zext_ln203_5_fu_438_p1();
    void thread_zext_ln203_6_fu_529_p1();
    void thread_zext_ln29_fu_483_p1();
    void thread_zext_ln36_1_fu_256_p1();
    void thread_zext_ln36_fu_253_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
