-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cnn_input_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cnn_input_ce0 : OUT STD_LOGIC;
    cnn_input_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    prediction_output_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_output_ce0 : OUT STD_LOGIC;
    prediction_output_we0 : OUT STD_LOGIC;
    prediction_output_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.314483,HLS_SYN_LAT=337276,HLS_SYN_TPT=none,HLS_SYN_MEM=41,HLS_SYN_DSP=35,HLS_SYN_FF=6004,HLS_SYN_LUT=16908,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv11_2B : STD_LOGIC_VECTOR (10 downto 0) := "00000101011";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv12_E : STD_LOGIC_VECTOR (11 downto 0) := "000000001110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_3FFF : STD_LOGIC_VECTOR (13 downto 0) := "11111111111111";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv14_3FE8 : STD_LOGIC_VECTOR (13 downto 0) := "11111111101000";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln23_fu_711_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_reg_1495 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_1_fu_723_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_reg_1503 : STD_LOGIC_VECTOR (4 downto 0);
    signal ix_in_fu_729_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_in_reg_1508 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln23_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln203_fu_735_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln203_reg_1513 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln203_fu_777_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_reg_1517 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_13_fu_783_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_13_reg_1522 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_fu_795_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_1530 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln25_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_16_fu_806_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_16_reg_1540 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_14_fu_826_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_14_reg_1545 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_15_fu_831_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln203_15_reg_1550 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln23_fu_848_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cnn_input_load_reg_1560 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_31_reg_1566 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal trunc_ln565_fu_886_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln565_reg_1571 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln571_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln571_reg_1576 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_896_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1582 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln28_fu_1153_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln28_fu_1161_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_fu_1173_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1606 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal zext_ln70_fu_1179_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_reg_1611 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln69_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln935_reg_1621 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_Result_33_fu_1190_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_33_reg_1626 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_9_fu_1204_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_V_9_reg_1631 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln944_fu_1238_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_reg_1636 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_1348_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_reg_1642 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln958_fu_1356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln958_reg_1647 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_1362_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln943_reg_1652 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_1_input_0_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_0_0_V_ce0 : STD_LOGIC;
    signal conv_1_input_0_0_V_we0 : STD_LOGIC;
    signal conv_1_input_0_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_0_0_V_ce1 : STD_LOGIC;
    signal conv_1_input_0_0_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_0_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_0_1_V_ce0 : STD_LOGIC;
    signal conv_1_input_0_1_V_we0 : STD_LOGIC;
    signal conv_1_input_0_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_0_1_V_ce1 : STD_LOGIC;
    signal conv_1_input_0_1_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_0_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_0_2_V_ce0 : STD_LOGIC;
    signal conv_1_input_0_2_V_we0 : STD_LOGIC;
    signal conv_1_input_0_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_0_2_V_ce1 : STD_LOGIC;
    signal conv_1_input_0_2_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_1_0_V_ce0 : STD_LOGIC;
    signal conv_1_input_1_0_V_we0 : STD_LOGIC;
    signal conv_1_input_1_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_0_V_ce1 : STD_LOGIC;
    signal conv_1_input_1_0_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_1_1_V_ce0 : STD_LOGIC;
    signal conv_1_input_1_1_V_we0 : STD_LOGIC;
    signal conv_1_input_1_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_1_V_ce1 : STD_LOGIC;
    signal conv_1_input_1_1_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_1_2_V_ce0 : STD_LOGIC;
    signal conv_1_input_1_2_V_we0 : STD_LOGIC;
    signal conv_1_input_1_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_1_2_V_ce1 : STD_LOGIC;
    signal conv_1_input_1_2_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_2_0_V_ce0 : STD_LOGIC;
    signal conv_1_input_2_0_V_we0 : STD_LOGIC;
    signal conv_1_input_2_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_0_V_ce1 : STD_LOGIC;
    signal conv_1_input_2_0_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_2_1_V_ce0 : STD_LOGIC;
    signal conv_1_input_2_1_V_we0 : STD_LOGIC;
    signal conv_1_input_2_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_1_V_ce1 : STD_LOGIC;
    signal conv_1_input_2_1_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_input_2_2_V_ce0 : STD_LOGIC;
    signal conv_1_input_2_2_V_we0 : STD_LOGIC;
    signal conv_1_input_2_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_input_2_2_V_ce1 : STD_LOGIC;
    signal conv_1_input_2_2_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_out_0_V_ce0 : STD_LOGIC;
    signal conv_1_out_0_V_we0 : STD_LOGIC;
    signal conv_1_out_0_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_0_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_out_1_V_ce0 : STD_LOGIC;
    signal conv_1_out_1_V_we0 : STD_LOGIC;
    signal conv_1_out_1_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_1_out_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_1_out_2_V_ce0 : STD_LOGIC;
    signal conv_1_out_2_V_we0 : STD_LOGIC;
    signal conv_1_out_2_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_1_out_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pool_1_out_V_ce0 : STD_LOGIC;
    signal max_pool_1_out_V_we0 : STD_LOGIC;
    signal max_pool_1_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_1_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_2_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_2_out_V_ce0 : STD_LOGIC;
    signal conv_2_out_V_we0 : STD_LOGIC;
    signal conv_2_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv_2_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_2_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal max_pool_2_out_V_ce0 : STD_LOGIC;
    signal max_pool_2_out_V_we0 : STD_LOGIC;
    signal max_pool_2_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal max_pool_2_out_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal flat_array_V_ce0 : STD_LOGIC;
    signal flat_array_V_we0 : STD_LOGIC;
    signal flat_array_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal flat_array_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_1_out_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dense_1_out_V_ce0 : STD_LOGIC;
    signal dense_1_out_V_we0 : STD_LOGIC;
    signal dense_1_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_out_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_out_V_ce0 : STD_LOGIC;
    signal dense_2_out_V_we0 : STD_LOGIC;
    signal dense_2_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_V_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal prediction_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal prediction_V_ce0 : STD_LOGIC;
    signal prediction_V_we0 : STD_LOGIC;
    signal prediction_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal prediction_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv_1_fu_621_ap_start : STD_LOGIC;
    signal grp_conv_1_fu_621_ap_done : STD_LOGIC;
    signal grp_conv_1_fu_621_ap_idle : STD_LOGIC;
    signal grp_conv_1_fu_621_ap_ready : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_0_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_0_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_0_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_1_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_1_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_1_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_2_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_0_2_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_0_2_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_0_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_0_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_0_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_1_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_1_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_1_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_2_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_1_2_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_1_2_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_0_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_0_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_0_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_0_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_1_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_1_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_1_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_1_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_2_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_2_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_input_2_2_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv_1_fu_621_input_2_2_V_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_1_fu_621_conv_out_0_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_0_V_we0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_0_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv_1_fu_621_conv_out_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_1_fu_621_conv_out_1_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_1_V_we0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_1_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv_1_fu_621_conv_out_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_1_fu_621_conv_out_2_V_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_2_V_we0 : STD_LOGIC;
    signal grp_conv_1_fu_621_conv_out_2_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv_2_fu_641_ap_start : STD_LOGIC;
    signal grp_conv_2_fu_641_ap_done : STD_LOGIC;
    signal grp_conv_2_fu_641_ap_idle : STD_LOGIC;
    signal grp_conv_2_fu_641_ap_ready : STD_LOGIC;
    signal grp_conv_2_fu_641_input_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_2_fu_641_input_V_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_641_conv_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_2_fu_641_conv_out_V_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_641_conv_out_V_we0 : STD_LOGIC;
    signal grp_conv_2_fu_641_conv_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_out_fu_651_ap_start : STD_LOGIC;
    signal grp_dense_out_fu_651_ap_done : STD_LOGIC;
    signal grp_dense_out_fu_651_ap_idle : STD_LOGIC;
    signal grp_dense_out_fu_651_ap_ready : STD_LOGIC;
    signal grp_dense_out_fu_651_dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_out_fu_651_dense_2_out_V_ce0 : STD_LOGIC;
    signal grp_dense_out_fu_651_prediction_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_out_fu_651_prediction_V_ce0 : STD_LOGIC;
    signal grp_dense_out_fu_651_prediction_V_we0 : STD_LOGIC;
    signal grp_dense_out_fu_651_prediction_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_max_pool_1_fu_667_ap_start : STD_LOGIC;
    signal grp_max_pool_1_fu_667_ap_done : STD_LOGIC;
    signal grp_max_pool_1_fu_667_ap_idle : STD_LOGIC;
    signal grp_max_pool_1_fu_667_ap_ready : STD_LOGIC;
    signal grp_max_pool_1_fu_667_conv_out_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_1_fu_667_conv_out_0_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_667_conv_out_1_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_1_fu_667_conv_out_1_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_667_conv_out_2_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_1_fu_667_conv_out_2_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_667_max_pool_out_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_max_pool_1_fu_667_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_667_max_pool_out_V_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_667_max_pool_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_max_pool_2_fu_675_ap_start : STD_LOGIC;
    signal grp_max_pool_2_fu_675_ap_done : STD_LOGIC;
    signal grp_max_pool_2_fu_675_ap_idle : STD_LOGIC;
    signal grp_max_pool_2_fu_675_ap_ready : STD_LOGIC;
    signal grp_max_pool_2_fu_675_conv_out_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_2_fu_675_conv_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_675_max_pool_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_max_pool_2_fu_675_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_675_max_pool_out_V_we0 : STD_LOGIC;
    signal grp_max_pool_2_fu_675_max_pool_out_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_dense_1_fu_681_ap_start : STD_LOGIC;
    signal grp_dense_1_fu_681_ap_done : STD_LOGIC;
    signal grp_dense_1_fu_681_ap_idle : STD_LOGIC;
    signal grp_dense_1_fu_681_ap_ready : STD_LOGIC;
    signal grp_dense_1_fu_681_flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dense_1_fu_681_flat_array_V_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_681_dense_1_out_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dense_1_fu_681_dense_1_out_V_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_681_dense_1_out_V_we0 : STD_LOGIC;
    signal grp_dense_1_fu_681_dense_1_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_dense_2_fu_691_ap_start : STD_LOGIC;
    signal grp_dense_2_fu_691_ap_done : STD_LOGIC;
    signal grp_dense_2_fu_691_ap_idle : STD_LOGIC;
    signal grp_dense_2_fu_691_ap_ready : STD_LOGIC;
    signal grp_dense_2_fu_691_dense_1_out_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dense_2_fu_691_dense_1_out_V_ce0 : STD_LOGIC;
    signal grp_dense_2_fu_691_dense_2_out_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_2_fu_691_dense_2_out_V_ce0 : STD_LOGIC;
    signal grp_dense_2_fu_691_dense_2_out_V_we0 : STD_LOGIC;
    signal grp_dense_2_fu_691_dense_2_out_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_flat_fu_701_ap_start : STD_LOGIC;
    signal grp_flat_fu_701_ap_done : STD_LOGIC;
    signal grp_flat_fu_701_ap_idle : STD_LOGIC;
    signal grp_flat_fu_701_ap_ready : STD_LOGIC;
    signal grp_flat_fu_701_max_pool_out_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_701_max_pool_out_V_ce0 : STD_LOGIC;
    signal grp_flat_fu_701_flat_array_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_701_flat_array_V_ce0 : STD_LOGIC;
    signal grp_flat_fu_701_flat_array_V_we0 : STD_LOGIC;
    signal grp_flat_fu_701_flat_array_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ix_in_0_reg_519 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_reg_531 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul5_reg_542 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_urem7_reg_553 : STD_LOGIC_VECTOR (4 downto 0);
    signal ix_in_1_reg_565 : STD_LOGIC_VECTOR (9 downto 0);
    signal j_0_reg_576 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul_reg_587 : STD_LOGIC_VECTOR (10 downto 0);
    signal phi_urem_reg_598 : STD_LOGIC_VECTOR (4 downto 0);
    signal i24_0_reg_610 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_conv_1_fu_621_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_conv_2_fu_641_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_dense_out_fu_651_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_max_pool_1_fu_667_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_max_pool_2_fu_675_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_dense_1_fu_681_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_dense_2_fu_691_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_flat_fu_701_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal zext_ln27_fu_801_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_34_fu_1126_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_35_fu_1132_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln203_1_fu_1122_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln603_fu_1105_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_61_fu_739_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_62_fu_753_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_63_fu_765_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln203_32_fu_773_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_31_fu_761_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_fu_749_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_70_fu_812_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln203_33_fu_822_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln23_8_fu_836_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln23_1_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_856_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_872_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln556_fu_860_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln461_fu_882_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_902_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_32_fu_909_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_913_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln581_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln581_fu_931_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln581_fu_936_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_941_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_919_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal sext_ln581_fu_949_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln586_fu_974_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln586_fu_978_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal bitcast_ln696_fu_988_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln583_fu_958_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln581cast_fu_1007_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln582_fu_953_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln571_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln582_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln582_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln582_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln585_fu_962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln581_fu_1047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln585_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln585_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln588_fu_999_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln582_fu_1028_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal and_ln585_1_fu_1073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln586_fu_984_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln585_fu_1065_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln581_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln603_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln581_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln603_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln604_fu_1011_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln585_1_fu_1079_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln28_2_fu_1141_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln28_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_1198_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_13_fu_1212_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_34_fu_1222_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_1230_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_1248_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1254_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_1270_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln947_fu_1274_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln947_fu_1280_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln947_fu_1284_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_s_fu_1290_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln947_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln947_1_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln944_fu_1244_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln949_fu_1322_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_27_fu_1328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_fu_1336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln949_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_1366_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln958_fu_1369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln958_fu_1380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln958_fu_1374_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln958_fu_1385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_7_fu_1391_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_8_fu_1398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_s_fu_1403_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_67_fu_1417_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln964_fu_1425_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln964_fu_1433_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_1438_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_11_fu_1413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1444_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_35_fu_1451_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln739_fu_1463_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);

    component conv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_0_V_ce0 : OUT STD_LOGIC;
        input_0_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_0_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_0_V_ce1 : OUT STD_LOGIC;
        input_0_0_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_1_V_ce0 : OUT STD_LOGIC;
        input_0_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_1_V_ce1 : OUT STD_LOGIC;
        input_0_1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_2_V_ce0 : OUT STD_LOGIC;
        input_0_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_0_2_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_0_2_V_ce1 : OUT STD_LOGIC;
        input_0_2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_0_V_ce0 : OUT STD_LOGIC;
        input_1_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_0_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_0_V_ce1 : OUT STD_LOGIC;
        input_1_0_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_1_V_ce0 : OUT STD_LOGIC;
        input_1_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_1_V_ce1 : OUT STD_LOGIC;
        input_1_1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_2_V_ce0 : OUT STD_LOGIC;
        input_1_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_1_2_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_1_2_V_ce1 : OUT STD_LOGIC;
        input_1_2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_0_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_0_V_ce0 : OUT STD_LOGIC;
        input_2_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_0_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_0_V_ce1 : OUT STD_LOGIC;
        input_2_0_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_1_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_1_V_ce0 : OUT STD_LOGIC;
        input_2_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_1_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_1_V_ce1 : OUT STD_LOGIC;
        input_2_1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_2_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_2_V_ce0 : OUT STD_LOGIC;
        input_2_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        input_2_2_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_2_2_V_ce1 : OUT STD_LOGIC;
        input_2_2_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_0_V_ce0 : OUT STD_LOGIC;
        conv_out_0_V_we0 : OUT STD_LOGIC;
        conv_out_0_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv_out_1_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_1_V_ce0 : OUT STD_LOGIC;
        conv_out_1_V_we0 : OUT STD_LOGIC;
        conv_out_1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv_out_2_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_2_V_ce0 : OUT STD_LOGIC;
        conv_out_2_V_we0 : OUT STD_LOGIC;
        conv_out_2_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component conv_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_V_ce0 : OUT STD_LOGIC;
        input_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_we0 : OUT STD_LOGIC;
        conv_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dense_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_V_ce0 : OUT STD_LOGIC;
        dense_2_out_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        prediction_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_V_ce0 : OUT STD_LOGIC;
        prediction_V_we0 : OUT STD_LOGIC;
        prediction_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component max_pool_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_0_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_0_V_ce0 : OUT STD_LOGIC;
        conv_out_0_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_1_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_1_V_ce0 : OUT STD_LOGIC;
        conv_out_1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        conv_out_2_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_2_V_ce0 : OUT STD_LOGIC;
        conv_out_2_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_we0 : OUT STD_LOGIC;
        max_pool_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component max_pool_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_V_ce0 : OUT STD_LOGIC;
        conv_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_we0 : OUT STD_LOGIC;
        max_pool_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flat_array_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_V_ce0 : OUT STD_LOGIC;
        flat_array_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_1_out_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dense_1_out_V_ce0 : OUT STD_LOGIC;
        dense_1_out_V_we0 : OUT STD_LOGIC;
        dense_1_out_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_1_out_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dense_1_out_V_ce0 : OUT STD_LOGIC;
        dense_1_out_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        dense_2_out_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_V_ce0 : OUT STD_LOGIC;
        dense_2_out_V_we0 : OUT STD_LOGIC;
        dense_2_out_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component flat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_V_ce0 : OUT STD_LOGIC;
        max_pool_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        flat_array_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_V_ce0 : OUT STD_LOGIC;
        flat_array_V_we0 : OUT STD_LOGIC;
        flat_array_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_fpext_32ns_64KfY IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component cnn_conv_1_input_zec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_1_input_Aem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_1_input_DeQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_1_out_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_max_pool_1_ouIfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_conv_2_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_max_pool_2_ouJfO IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_dense_1_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component cnn_dense_2_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component dense_out_dense_axdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    conv_1_input_0_0_V_U : component cnn_conv_1_input_zec
    generic map (
        DataWidth => 14,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_0_0_V_address0,
        ce0 => conv_1_input_0_0_V_ce0,
        we0 => conv_1_input_0_0_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_0_0_V_q0,
        address1 => grp_conv_1_fu_621_input_0_0_V_address1,
        ce1 => conv_1_input_0_0_V_ce1,
        q1 => conv_1_input_0_0_V_q1);

    conv_1_input_0_1_V_U : component cnn_conv_1_input_Aem
    generic map (
        DataWidth => 14,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_0_1_V_address0,
        ce0 => conv_1_input_0_1_V_ce0,
        we0 => conv_1_input_0_1_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_0_1_V_q0,
        address1 => grp_conv_1_fu_621_input_0_1_V_address1,
        ce1 => conv_1_input_0_1_V_ce1,
        q1 => conv_1_input_0_1_V_q1);

    conv_1_input_0_2_V_U : component cnn_conv_1_input_Aem
    generic map (
        DataWidth => 14,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_0_2_V_address0,
        ce0 => conv_1_input_0_2_V_ce0,
        we0 => conv_1_input_0_2_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_0_2_V_q0,
        address1 => grp_conv_1_fu_621_input_0_2_V_address1,
        ce1 => conv_1_input_0_2_V_ce1,
        q1 => conv_1_input_0_2_V_q1);

    conv_1_input_1_0_V_U : component cnn_conv_1_input_Aem
    generic map (
        DataWidth => 14,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_1_0_V_address0,
        ce0 => conv_1_input_1_0_V_ce0,
        we0 => conv_1_input_1_0_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_1_0_V_q0,
        address1 => grp_conv_1_fu_621_input_1_0_V_address1,
        ce1 => conv_1_input_1_0_V_ce1,
        q1 => conv_1_input_1_0_V_q1);

    conv_1_input_1_1_V_U : component cnn_conv_1_input_DeQ
    generic map (
        DataWidth => 14,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_1_1_V_address0,
        ce0 => conv_1_input_1_1_V_ce0,
        we0 => conv_1_input_1_1_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_1_1_V_q0,
        address1 => grp_conv_1_fu_621_input_1_1_V_address1,
        ce1 => conv_1_input_1_1_V_ce1,
        q1 => conv_1_input_1_1_V_q1);

    conv_1_input_1_2_V_U : component cnn_conv_1_input_DeQ
    generic map (
        DataWidth => 14,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_1_2_V_address0,
        ce0 => conv_1_input_1_2_V_ce0,
        we0 => conv_1_input_1_2_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_1_2_V_q0,
        address1 => grp_conv_1_fu_621_input_1_2_V_address1,
        ce1 => conv_1_input_1_2_V_ce1,
        q1 => conv_1_input_1_2_V_q1);

    conv_1_input_2_0_V_U : component cnn_conv_1_input_Aem
    generic map (
        DataWidth => 14,
        AddressRange => 90,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_2_0_V_address0,
        ce0 => conv_1_input_2_0_V_ce0,
        we0 => conv_1_input_2_0_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_2_0_V_q0,
        address1 => grp_conv_1_fu_621_input_2_0_V_address1,
        ce1 => conv_1_input_2_0_V_ce1,
        q1 => conv_1_input_2_0_V_q1);

    conv_1_input_2_1_V_U : component cnn_conv_1_input_DeQ
    generic map (
        DataWidth => 14,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_2_1_V_address0,
        ce0 => conv_1_input_2_1_V_ce0,
        we0 => conv_1_input_2_1_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_2_1_V_q0,
        address1 => grp_conv_1_fu_621_input_2_1_V_address1,
        ce1 => conv_1_input_2_1_V_ce1,
        q1 => conv_1_input_2_1_V_q1);

    conv_1_input_2_2_V_U : component cnn_conv_1_input_DeQ
    generic map (
        DataWidth => 14,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_input_2_2_V_address0,
        ce0 => conv_1_input_2_2_V_ce0,
        we0 => conv_1_input_2_2_V_we0,
        d0 => select_ln603_fu_1105_p3,
        q0 => conv_1_input_2_2_V_q0,
        address1 => grp_conv_1_fu_621_input_2_2_V_address1,
        ce1 => conv_1_input_2_2_V_ce1,
        q1 => conv_1_input_2_2_V_q1);

    conv_1_out_0_V_U : component cnn_conv_1_out_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 1352,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_out_0_V_address0,
        ce0 => conv_1_out_0_V_ce0,
        we0 => conv_1_out_0_V_we0,
        d0 => conv_1_out_0_V_d0,
        q0 => conv_1_out_0_V_q0);

    conv_1_out_1_V_U : component cnn_conv_1_out_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 1352,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_out_1_V_address0,
        ce0 => conv_1_out_1_V_ce0,
        we0 => conv_1_out_1_V_we0,
        d0 => grp_conv_1_fu_621_conv_out_1_V_d0,
        q0 => conv_1_out_1_V_q0);

    conv_1_out_2_V_U : component cnn_conv_1_out_0_V
    generic map (
        DataWidth => 14,
        AddressRange => 1352,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_out_2_V_address0,
        ce0 => conv_1_out_2_V_ce0,
        we0 => conv_1_out_2_V_we0,
        d0 => grp_conv_1_fu_621_conv_out_2_V_d0,
        q0 => conv_1_out_2_V_q0);

    max_pool_1_out_V_U : component cnn_max_pool_1_ouIfE
    generic map (
        DataWidth => 14,
        AddressRange => 1014,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => max_pool_1_out_V_address0,
        ce0 => max_pool_1_out_V_ce0,
        we0 => max_pool_1_out_V_we0,
        d0 => max_pool_1_out_V_d0,
        q0 => max_pool_1_out_V_q0);

    conv_2_out_V_U : component cnn_conv_2_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 1936,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_2_out_V_address0,
        ce0 => conv_2_out_V_ce0,
        we0 => conv_2_out_V_we0,
        d0 => conv_2_out_V_d0,
        q0 => conv_2_out_V_q0);

    max_pool_2_out_V_U : component cnn_max_pool_2_ouJfO
    generic map (
        DataWidth => 14,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => max_pool_2_out_V_address0,
        ce0 => max_pool_2_out_V_ce0,
        we0 => max_pool_2_out_V_we0,
        d0 => max_pool_2_out_V_d0,
        q0 => max_pool_2_out_V_q0);

    flat_array_V_U : component cnn_max_pool_2_ouJfO
    generic map (
        DataWidth => 14,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => flat_array_V_address0,
        ce0 => flat_array_V_ce0,
        we0 => flat_array_V_we0,
        d0 => flat_array_V_d0,
        q0 => flat_array_V_q0);

    dense_1_out_V_U : component cnn_dense_1_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_out_V_address0,
        ce0 => dense_1_out_V_ce0,
        we0 => dense_1_out_V_we0,
        d0 => dense_1_out_V_d0,
        q0 => dense_1_out_V_q0);

    dense_2_out_V_U : component cnn_dense_2_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_out_V_address0,
        ce0 => dense_2_out_V_ce0,
        we0 => dense_2_out_V_we0,
        d0 => dense_2_out_V_d0,
        q0 => dense_2_out_V_q0);

    prediction_V_U : component dense_out_dense_axdS
    generic map (
        DataWidth => 14,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => prediction_V_address0,
        ce0 => prediction_V_ce0,
        we0 => prediction_V_we0,
        d0 => prediction_V_d0,
        q0 => prediction_V_q0);

    grp_conv_1_fu_621 : component conv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_1_fu_621_ap_start,
        ap_done => grp_conv_1_fu_621_ap_done,
        ap_idle => grp_conv_1_fu_621_ap_idle,
        ap_ready => grp_conv_1_fu_621_ap_ready,
        input_0_0_V_address0 => grp_conv_1_fu_621_input_0_0_V_address0,
        input_0_0_V_ce0 => grp_conv_1_fu_621_input_0_0_V_ce0,
        input_0_0_V_q0 => conv_1_input_0_0_V_q0,
        input_0_0_V_address1 => grp_conv_1_fu_621_input_0_0_V_address1,
        input_0_0_V_ce1 => grp_conv_1_fu_621_input_0_0_V_ce1,
        input_0_0_V_q1 => conv_1_input_0_0_V_q1,
        input_0_1_V_address0 => grp_conv_1_fu_621_input_0_1_V_address0,
        input_0_1_V_ce0 => grp_conv_1_fu_621_input_0_1_V_ce0,
        input_0_1_V_q0 => conv_1_input_0_1_V_q0,
        input_0_1_V_address1 => grp_conv_1_fu_621_input_0_1_V_address1,
        input_0_1_V_ce1 => grp_conv_1_fu_621_input_0_1_V_ce1,
        input_0_1_V_q1 => conv_1_input_0_1_V_q1,
        input_0_2_V_address0 => grp_conv_1_fu_621_input_0_2_V_address0,
        input_0_2_V_ce0 => grp_conv_1_fu_621_input_0_2_V_ce0,
        input_0_2_V_q0 => conv_1_input_0_2_V_q0,
        input_0_2_V_address1 => grp_conv_1_fu_621_input_0_2_V_address1,
        input_0_2_V_ce1 => grp_conv_1_fu_621_input_0_2_V_ce1,
        input_0_2_V_q1 => conv_1_input_0_2_V_q1,
        input_1_0_V_address0 => grp_conv_1_fu_621_input_1_0_V_address0,
        input_1_0_V_ce0 => grp_conv_1_fu_621_input_1_0_V_ce0,
        input_1_0_V_q0 => conv_1_input_1_0_V_q0,
        input_1_0_V_address1 => grp_conv_1_fu_621_input_1_0_V_address1,
        input_1_0_V_ce1 => grp_conv_1_fu_621_input_1_0_V_ce1,
        input_1_0_V_q1 => conv_1_input_1_0_V_q1,
        input_1_1_V_address0 => grp_conv_1_fu_621_input_1_1_V_address0,
        input_1_1_V_ce0 => grp_conv_1_fu_621_input_1_1_V_ce0,
        input_1_1_V_q0 => conv_1_input_1_1_V_q0,
        input_1_1_V_address1 => grp_conv_1_fu_621_input_1_1_V_address1,
        input_1_1_V_ce1 => grp_conv_1_fu_621_input_1_1_V_ce1,
        input_1_1_V_q1 => conv_1_input_1_1_V_q1,
        input_1_2_V_address0 => grp_conv_1_fu_621_input_1_2_V_address0,
        input_1_2_V_ce0 => grp_conv_1_fu_621_input_1_2_V_ce0,
        input_1_2_V_q0 => conv_1_input_1_2_V_q0,
        input_1_2_V_address1 => grp_conv_1_fu_621_input_1_2_V_address1,
        input_1_2_V_ce1 => grp_conv_1_fu_621_input_1_2_V_ce1,
        input_1_2_V_q1 => conv_1_input_1_2_V_q1,
        input_2_0_V_address0 => grp_conv_1_fu_621_input_2_0_V_address0,
        input_2_0_V_ce0 => grp_conv_1_fu_621_input_2_0_V_ce0,
        input_2_0_V_q0 => conv_1_input_2_0_V_q0,
        input_2_0_V_address1 => grp_conv_1_fu_621_input_2_0_V_address1,
        input_2_0_V_ce1 => grp_conv_1_fu_621_input_2_0_V_ce1,
        input_2_0_V_q1 => conv_1_input_2_0_V_q1,
        input_2_1_V_address0 => grp_conv_1_fu_621_input_2_1_V_address0,
        input_2_1_V_ce0 => grp_conv_1_fu_621_input_2_1_V_ce0,
        input_2_1_V_q0 => conv_1_input_2_1_V_q0,
        input_2_1_V_address1 => grp_conv_1_fu_621_input_2_1_V_address1,
        input_2_1_V_ce1 => grp_conv_1_fu_621_input_2_1_V_ce1,
        input_2_1_V_q1 => conv_1_input_2_1_V_q1,
        input_2_2_V_address0 => grp_conv_1_fu_621_input_2_2_V_address0,
        input_2_2_V_ce0 => grp_conv_1_fu_621_input_2_2_V_ce0,
        input_2_2_V_q0 => conv_1_input_2_2_V_q0,
        input_2_2_V_address1 => grp_conv_1_fu_621_input_2_2_V_address1,
        input_2_2_V_ce1 => grp_conv_1_fu_621_input_2_2_V_ce1,
        input_2_2_V_q1 => conv_1_input_2_2_V_q1,
        conv_out_0_V_address0 => grp_conv_1_fu_621_conv_out_0_V_address0,
        conv_out_0_V_ce0 => grp_conv_1_fu_621_conv_out_0_V_ce0,
        conv_out_0_V_we0 => grp_conv_1_fu_621_conv_out_0_V_we0,
        conv_out_0_V_d0 => grp_conv_1_fu_621_conv_out_0_V_d0,
        conv_out_1_V_address0 => grp_conv_1_fu_621_conv_out_1_V_address0,
        conv_out_1_V_ce0 => grp_conv_1_fu_621_conv_out_1_V_ce0,
        conv_out_1_V_we0 => grp_conv_1_fu_621_conv_out_1_V_we0,
        conv_out_1_V_d0 => grp_conv_1_fu_621_conv_out_1_V_d0,
        conv_out_2_V_address0 => grp_conv_1_fu_621_conv_out_2_V_address0,
        conv_out_2_V_ce0 => grp_conv_1_fu_621_conv_out_2_V_ce0,
        conv_out_2_V_we0 => grp_conv_1_fu_621_conv_out_2_V_we0,
        conv_out_2_V_d0 => grp_conv_1_fu_621_conv_out_2_V_d0);

    grp_conv_2_fu_641 : component conv_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_2_fu_641_ap_start,
        ap_done => grp_conv_2_fu_641_ap_done,
        ap_idle => grp_conv_2_fu_641_ap_idle,
        ap_ready => grp_conv_2_fu_641_ap_ready,
        input_V_address0 => grp_conv_2_fu_641_input_V_address0,
        input_V_ce0 => grp_conv_2_fu_641_input_V_ce0,
        input_V_q0 => max_pool_1_out_V_q0,
        conv_out_V_address0 => grp_conv_2_fu_641_conv_out_V_address0,
        conv_out_V_ce0 => grp_conv_2_fu_641_conv_out_V_ce0,
        conv_out_V_we0 => grp_conv_2_fu_641_conv_out_V_we0,
        conv_out_V_d0 => grp_conv_2_fu_641_conv_out_V_d0);

    grp_dense_out_fu_651 : component dense_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_out_fu_651_ap_start,
        ap_done => grp_dense_out_fu_651_ap_done,
        ap_idle => grp_dense_out_fu_651_ap_idle,
        ap_ready => grp_dense_out_fu_651_ap_ready,
        dense_2_out_V_address0 => grp_dense_out_fu_651_dense_2_out_V_address0,
        dense_2_out_V_ce0 => grp_dense_out_fu_651_dense_2_out_V_ce0,
        dense_2_out_V_q0 => dense_2_out_V_q0,
        prediction_V_address0 => grp_dense_out_fu_651_prediction_V_address0,
        prediction_V_ce0 => grp_dense_out_fu_651_prediction_V_ce0,
        prediction_V_we0 => grp_dense_out_fu_651_prediction_V_we0,
        prediction_V_d0 => grp_dense_out_fu_651_prediction_V_d0);

    grp_max_pool_1_fu_667 : component max_pool_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pool_1_fu_667_ap_start,
        ap_done => grp_max_pool_1_fu_667_ap_done,
        ap_idle => grp_max_pool_1_fu_667_ap_idle,
        ap_ready => grp_max_pool_1_fu_667_ap_ready,
        conv_out_0_V_address0 => grp_max_pool_1_fu_667_conv_out_0_V_address0,
        conv_out_0_V_ce0 => grp_max_pool_1_fu_667_conv_out_0_V_ce0,
        conv_out_0_V_q0 => conv_1_out_0_V_q0,
        conv_out_1_V_address0 => grp_max_pool_1_fu_667_conv_out_1_V_address0,
        conv_out_1_V_ce0 => grp_max_pool_1_fu_667_conv_out_1_V_ce0,
        conv_out_1_V_q0 => conv_1_out_1_V_q0,
        conv_out_2_V_address0 => grp_max_pool_1_fu_667_conv_out_2_V_address0,
        conv_out_2_V_ce0 => grp_max_pool_1_fu_667_conv_out_2_V_ce0,
        conv_out_2_V_q0 => conv_1_out_2_V_q0,
        max_pool_out_V_address0 => grp_max_pool_1_fu_667_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_max_pool_1_fu_667_max_pool_out_V_ce0,
        max_pool_out_V_we0 => grp_max_pool_1_fu_667_max_pool_out_V_we0,
        max_pool_out_V_d0 => grp_max_pool_1_fu_667_max_pool_out_V_d0);

    grp_max_pool_2_fu_675 : component max_pool_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_max_pool_2_fu_675_ap_start,
        ap_done => grp_max_pool_2_fu_675_ap_done,
        ap_idle => grp_max_pool_2_fu_675_ap_idle,
        ap_ready => grp_max_pool_2_fu_675_ap_ready,
        conv_out_V_address0 => grp_max_pool_2_fu_675_conv_out_V_address0,
        conv_out_V_ce0 => grp_max_pool_2_fu_675_conv_out_V_ce0,
        conv_out_V_q0 => conv_2_out_V_q0,
        max_pool_out_V_address0 => grp_max_pool_2_fu_675_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_max_pool_2_fu_675_max_pool_out_V_ce0,
        max_pool_out_V_we0 => grp_max_pool_2_fu_675_max_pool_out_V_we0,
        max_pool_out_V_d0 => grp_max_pool_2_fu_675_max_pool_out_V_d0);

    grp_dense_1_fu_681 : component dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_1_fu_681_ap_start,
        ap_done => grp_dense_1_fu_681_ap_done,
        ap_idle => grp_dense_1_fu_681_ap_idle,
        ap_ready => grp_dense_1_fu_681_ap_ready,
        flat_array_V_address0 => grp_dense_1_fu_681_flat_array_V_address0,
        flat_array_V_ce0 => grp_dense_1_fu_681_flat_array_V_ce0,
        flat_array_V_q0 => flat_array_V_q0,
        dense_1_out_V_address0 => grp_dense_1_fu_681_dense_1_out_V_address0,
        dense_1_out_V_ce0 => grp_dense_1_fu_681_dense_1_out_V_ce0,
        dense_1_out_V_we0 => grp_dense_1_fu_681_dense_1_out_V_we0,
        dense_1_out_V_d0 => grp_dense_1_fu_681_dense_1_out_V_d0);

    grp_dense_2_fu_691 : component dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dense_2_fu_691_ap_start,
        ap_done => grp_dense_2_fu_691_ap_done,
        ap_idle => grp_dense_2_fu_691_ap_idle,
        ap_ready => grp_dense_2_fu_691_ap_ready,
        dense_1_out_V_address0 => grp_dense_2_fu_691_dense_1_out_V_address0,
        dense_1_out_V_ce0 => grp_dense_2_fu_691_dense_1_out_V_ce0,
        dense_1_out_V_q0 => dense_1_out_V_q0,
        dense_2_out_V_address0 => grp_dense_2_fu_691_dense_2_out_V_address0,
        dense_2_out_V_ce0 => grp_dense_2_fu_691_dense_2_out_V_ce0,
        dense_2_out_V_we0 => grp_dense_2_fu_691_dense_2_out_V_we0,
        dense_2_out_V_d0 => grp_dense_2_fu_691_dense_2_out_V_d0);

    grp_flat_fu_701 : component flat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_flat_fu_701_ap_start,
        ap_done => grp_flat_fu_701_ap_done,
        ap_idle => grp_flat_fu_701_ap_idle,
        ap_ready => grp_flat_fu_701_ap_ready,
        max_pool_out_V_address0 => grp_flat_fu_701_max_pool_out_V_address0,
        max_pool_out_V_ce0 => grp_flat_fu_701_max_pool_out_V_ce0,
        max_pool_out_V_q0 => max_pool_2_out_V_q0,
        flat_array_V_address0 => grp_flat_fu_701_flat_array_V_address0,
        flat_array_V_ce0 => grp_flat_fu_701_flat_array_V_ce0,
        flat_array_V_we0 => grp_flat_fu_701_flat_array_V_we0,
        flat_array_V_d0 => grp_flat_fu_701_flat_array_V_d0);

    cnn_fpext_32ns_64KfY_U99 : component cnn_fpext_32ns_64KfY
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cnn_input_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_707_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv_1_fu_621_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv_1_fu_621_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_conv_1_fu_621_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_1_fu_621_ap_ready = ap_const_logic_1)) then 
                    grp_conv_1_fu_621_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_2_fu_641_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv_2_fu_641_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_conv_2_fu_641_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_2_fu_641_ap_ready = ap_const_logic_1)) then 
                    grp_conv_2_fu_641_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_1_fu_681_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_1_fu_681_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_dense_1_fu_681_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_1_fu_681_ap_ready = ap_const_logic_1)) then 
                    grp_dense_1_fu_681_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_2_fu_691_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_2_fu_691_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_dense_2_fu_691_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_2_fu_691_ap_ready = ap_const_logic_1)) then 
                    grp_dense_2_fu_691_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_out_fu_651_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dense_out_fu_651_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_dense_out_fu_651_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_out_fu_651_ap_ready = ap_const_logic_1)) then 
                    grp_dense_out_fu_651_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_flat_fu_701_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_flat_fu_701_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                    grp_flat_fu_701_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_flat_fu_701_ap_ready = ap_const_logic_1)) then 
                    grp_flat_fu_701_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_1_fu_667_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pool_1_fu_667_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_max_pool_1_fu_667_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_1_fu_667_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_1_fu_667_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_2_fu_675_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_max_pool_2_fu_675_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_max_pool_2_fu_675_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_2_fu_675_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_2_fu_675_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i24_0_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                i24_0_reg_610 <= i_reg_1606;
            elsif (((grp_dense_out_fu_651_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                i24_0_reg_610 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_0_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_531 <= i_1_reg_1503;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_531 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ix_in_0_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix_in_0_reg_519 <= ix_in_reg_1508;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ix_in_0_reg_519 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    ix_in_1_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                ix_in_1_reg_565 <= add_ln28_fu_1161_p2;
            elsif (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix_in_1_reg_565 <= ix_in_0_reg_519;
            end if; 
        end if;
    end process;

    j_0_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                j_0_reg_576 <= j_reg_1530;
            elsif (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_576 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    phi_mul5_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_mul5_reg_542 <= add_ln23_reg_1495;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul5_reg_542 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_587_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                phi_mul_reg_587 <= add_ln203_16_reg_1540;
            elsif (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_reg_587 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    phi_urem7_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                phi_urem7_reg_553 <= select_ln23_fu_848_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_urem7_reg_553 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                phi_urem_reg_598 <= select_ln28_fu_1153_p3;
            elsif (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_urem_reg_598 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                F2_reg_1582 <= F2_fu_896_p2;
                icmp_ln571_reg_1576 <= icmp_ln571_fu_890_p2;
                p_Result_31_reg_1566 <= ireg_V_fu_856_p1(63 downto 63);
                trunc_ln565_reg_1571 <= trunc_ln565_fu_886_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln203_13_reg_1522 <= add_ln203_13_fu_783_p2;
                    add_ln203_reg_1517(7 downto 1) <= add_ln203_fu_777_p2(7 downto 1);
                ix_in_reg_1508 <= ix_in_fu_729_p2;
                trunc_ln203_reg_1513 <= trunc_ln203_fu_735_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_789_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln203_14_reg_1545 <= add_ln203_14_fu_826_p2;
                add_ln203_15_reg_1550 <= add_ln203_15_fu_831_p2;
                add_ln203_16_reg_1540 <= add_ln203_16_fu_806_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln23_reg_1495 <= add_ln23_fu_711_p2;
                i_1_reg_1503 <= i_1_fu_723_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                cnn_input_load_reg_1560 <= cnn_input_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                i_reg_1606 <= i_fu_1173_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                icmp_ln935_reg_1621 <= icmp_ln935_fu_1184_p2;
                icmp_ln958_reg_1647 <= icmp_ln958_fu_1356_p2;
                    or_ln_reg_1642(0) <= or_ln_fu_1348_p3(0);
                p_Result_33_reg_1626 <= prediction_V_q0(13 downto 13);
                sub_ln944_reg_1636 <= sub_ln944_fu_1238_p2;
                tmp_V_9_reg_1631 <= tmp_V_9_fu_1204_p3;
                trunc_ln943_reg_1652 <= trunc_ln943_fu_1362_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_1530 <= j_fu_795_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln69_fu_1167_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    zext_ln70_reg_1611(3 downto 0) <= zext_ln70_fu_1179_p1(3 downto 0);
            end if;
        end if;
    end process;
    add_ln203_reg_1517(0) <= '0';
    zext_ln70_reg_1611(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    or_ln_reg_1642(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln23_fu_717_p2, ap_CS_fsm_state3, icmp_ln25_fu_789_p2, ap_CS_fsm_state23, icmp_ln69_fu_1167_p2, grp_conv_1_fu_621_ap_done, grp_conv_2_fu_641_ap_done, grp_dense_out_fu_651_ap_done, grp_max_pool_1_fu_667_ap_done, grp_max_pool_2_fu_675_ap_done, grp_dense_1_fu_681_ap_done, grp_dense_2_fu_691_ap_done, grp_flat_fu_701_ap_done, ap_CS_fsm_state22, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state16)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_717_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln25_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_conv_1_fu_621_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_max_pool_1_fu_667_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_conv_2_fu_641_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_max_pool_2_fu_675_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((grp_flat_fu_701_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_dense_1_fu_681_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_dense_2_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_dense_out_fu_651_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln69_fu_1167_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_896_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln461_fu_882_p1));
    a_fu_1302_p2 <= (icmp_ln947_fu_1264_p2 and icmp_ln947_1_fu_1296_p2);
    add_ln203_13_fu_783_p2 <= std_logic_vector(unsigned(zext_ln203_fu_749_p1) + unsigned(zext_ln203_31_fu_761_p1));
    add_ln203_14_fu_826_p2 <= std_logic_vector(unsigned(add_ln203_reg_1517) + unsigned(zext_ln203_33_fu_822_p1));
    add_ln203_15_fu_831_p2 <= std_logic_vector(unsigned(add_ln203_13_reg_1522) + unsigned(zext_ln203_33_fu_822_p1));
    add_ln203_16_fu_806_p2 <= std_logic_vector(unsigned(ap_const_lv11_2B) + unsigned(phi_mul_reg_587));
    add_ln203_fu_777_p2 <= std_logic_vector(unsigned(zext_ln203_32_fu_773_p1) + unsigned(zext_ln203_31_fu_761_p1));
    add_ln23_8_fu_836_p2 <= std_logic_vector(unsigned(phi_urem7_reg_553) + unsigned(ap_const_lv5_1));
    add_ln23_fu_711_p2 <= std_logic_vector(unsigned(phi_mul5_reg_542) + unsigned(ap_const_lv11_2B));
    add_ln28_2_fu_1141_p2 <= std_logic_vector(unsigned(phi_urem_reg_598) + unsigned(ap_const_lv5_1));
    add_ln28_fu_1161_p2 <= std_logic_vector(unsigned(ix_in_1_reg_565) + unsigned(ap_const_lv10_1));
    add_ln581_fu_931_p2 <= std_logic_vector(signed(ap_const_lv12_FF8) + signed(F2_reg_1582));
    add_ln949_fu_1322_p2 <= std_logic_vector(signed(ap_const_lv14_3FE8) + signed(trunc_ln944_fu_1244_p1));
    add_ln958_fu_1369_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE7) + signed(sub_ln944_reg_1636));
    add_ln964_fu_1438_p2 <= std_logic_vector(unsigned(select_ln964_fu_1425_p3) + unsigned(sub_ln964_fu_1433_p2));
    and_ln581_fu_1047_p2 <= (xor_ln582_fu_1041_p2 and icmp_ln581_fu_926_p2);
    and_ln582_fu_1022_p2 <= (xor_ln571_fu_1017_p2 and icmp_ln582_fu_953_p2);
    and_ln585_1_fu_1073_p2 <= (icmp_ln585_fu_962_p2 and and_ln581_fu_1047_p2);
    and_ln585_fu_1059_p2 <= (xor_ln585_fu_1053_p2 and and_ln581_fu_1047_p2);
    and_ln603_fu_1099_p2 <= (xor_ln581_fu_1093_p2 and icmp_ln603_fu_968_p2);
    and_ln949_fu_1336_p2 <= (xor_ln949_fu_1316_p2 and p_Result_27_fu_1328_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state23, icmp_ln69_fu_1167_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln69_fu_1167_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23, icmp_ln69_fu_1167_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln69_fu_1167_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ashr_ln586_fu_978_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_919_p3),to_integer(unsigned('0' & zext_ln586_fu_974_p1(31-1 downto 0)))));
    bitcast_ln696_fu_988_p1 <= cnn_input_load_reg_1560;
    bitcast_ln739_fu_1463_p1 <= p_Result_35_fu_1451_p5;
    cnn_input_address0 <= zext_ln27_fu_801_p1(10 - 1 downto 0);

    cnn_input_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cnn_input_ce0 <= ap_const_logic_1;
        else 
            cnn_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_0_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_0_V_address0, ap_CS_fsm_state8, zext_ln203_34_fu_1126_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_0_V_address0 <= zext_ln203_34_fu_1126_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_0_V_address0 <= grp_conv_1_fu_621_input_0_0_V_address0;
        else 
            conv_1_input_0_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_0_0_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_0_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_0_V_ce0 <= grp_conv_1_fu_621_input_0_0_V_ce0;
        else 
            conv_1_input_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_0_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_0_0_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_0_V_ce1 <= grp_conv_1_fu_621_input_0_0_V_ce1;
        else 
            conv_1_input_0_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_0_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if (((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0) and (trunc_ln203_reg_1513 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_0_0_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_1_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_1_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_1_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_1_V_address0 <= grp_conv_1_fu_621_input_0_1_V_address0;
        else 
            conv_1_input_0_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_0_1_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_1_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_1_V_ce0 <= grp_conv_1_fu_621_input_0_1_V_ce0;
        else 
            conv_1_input_0_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_1_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_0_1_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_1_V_ce1 <= grp_conv_1_fu_621_input_0_1_V_ce1;
        else 
            conv_1_input_0_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_1_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if (((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1) and (trunc_ln203_reg_1513 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_0_1_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_0_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_2_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_2_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_2_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_2_V_address0 <= grp_conv_1_fu_621_input_0_2_V_address0;
        else 
            conv_1_input_0_2_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_0_2_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_0_2_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_0_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_2_V_ce0 <= grp_conv_1_fu_621_input_0_2_V_ce0;
        else 
            conv_1_input_0_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_2_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_0_2_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_0_2_V_ce1 <= grp_conv_1_fu_621_input_0_2_V_ce1;
        else 
            conv_1_input_0_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_0_2_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if ((not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1)) and (trunc_ln203_reg_1513 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_0_2_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_0_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_0_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_0_V_address0, ap_CS_fsm_state8, zext_ln203_34_fu_1126_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_0_V_address0 <= zext_ln203_34_fu_1126_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_0_V_address0 <= grp_conv_1_fu_621_input_1_0_V_address0;
        else 
            conv_1_input_1_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_1_0_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_0_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_0_V_ce0 <= grp_conv_1_fu_621_input_1_0_V_ce0;
        else 
            conv_1_input_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_0_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_1_0_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_0_V_ce1 <= grp_conv_1_fu_621_input_1_0_V_ce1;
        else 
            conv_1_input_1_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_0_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if (((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0) and (trunc_ln203_reg_1513 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_1_0_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_1_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_1_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_1_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_1_V_address0 <= grp_conv_1_fu_621_input_1_1_V_address0;
        else 
            conv_1_input_1_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_1_1_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_1_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_1_V_ce0 <= grp_conv_1_fu_621_input_1_1_V_ce0;
        else 
            conv_1_input_1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_1_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_1_1_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_1_V_ce1 <= grp_conv_1_fu_621_input_1_1_V_ce1;
        else 
            conv_1_input_1_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_1_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if (((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1) and (trunc_ln203_reg_1513 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_1_1_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_2_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_2_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_2_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_2_V_address0 <= grp_conv_1_fu_621_input_1_2_V_address0;
        else 
            conv_1_input_1_2_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_1_2_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_1_2_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_1_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_2_V_ce0 <= grp_conv_1_fu_621_input_1_2_V_ce0;
        else 
            conv_1_input_1_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_2_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_1_2_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_1_2_V_ce1 <= grp_conv_1_fu_621_input_1_2_V_ce1;
        else 
            conv_1_input_1_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_1_2_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if ((not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1)) and (trunc_ln203_reg_1513 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_1_2_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_1_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_0_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_0_V_address0, ap_CS_fsm_state8, zext_ln203_34_fu_1126_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_0_V_address0 <= zext_ln203_34_fu_1126_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_0_V_address0 <= grp_conv_1_fu_621_input_2_0_V_address0;
        else 
            conv_1_input_2_0_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_2_0_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_0_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_0_V_ce0 <= grp_conv_1_fu_621_input_2_0_V_ce0;
        else 
            conv_1_input_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_0_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_2_0_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_0_V_ce1 <= grp_conv_1_fu_621_input_2_0_V_ce1;
        else 
            conv_1_input_2_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_0_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if ((not((trunc_ln203_reg_1513 = ap_const_lv3_1)) and not((trunc_ln203_reg_1513 = ap_const_lv3_0)) and (trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_2_0_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_1_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_1_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_1_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_1_V_address0 <= grp_conv_1_fu_621_input_2_1_V_address0;
        else 
            conv_1_input_2_1_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_2_1_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_1_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_1_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_1_V_ce0 <= grp_conv_1_fu_621_input_2_1_V_ce0;
        else 
            conv_1_input_2_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_1_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_2_1_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_1_V_ce1 <= grp_conv_1_fu_621_input_2_1_V_ce1;
        else 
            conv_1_input_2_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_1_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if ((not((trunc_ln203_reg_1513 = ap_const_lv3_1)) and not((trunc_ln203_reg_1513 = ap_const_lv3_0)) and (trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_2_1_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_2_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_2_V_address0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_2_V_address0, ap_CS_fsm_state8, zext_ln203_35_fu_1132_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_2_V_address0 <= zext_ln203_35_fu_1132_p1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_2_V_address0 <= grp_conv_1_fu_621_input_2_2_V_address0;
        else 
            conv_1_input_2_2_V_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv_1_input_2_2_V_ce0_assign_proc : process(ap_CS_fsm_state6, grp_conv_1_fu_621_input_2_2_V_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv_1_input_2_2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_2_V_ce0 <= grp_conv_1_fu_621_input_2_2_V_ce0;
        else 
            conv_1_input_2_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_2_V_ce1_assign_proc : process(grp_conv_1_fu_621_input_2_2_V_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_input_2_2_V_ce1 <= grp_conv_1_fu_621_input_2_2_V_ce1;
        else 
            conv_1_input_2_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_2_2_V_we0_assign_proc : process(trunc_ln203_reg_1513, ap_CS_fsm_state6, trunc_ln203_1_fu_1122_p1)
    begin
        if ((not((trunc_ln203_reg_1513 = ap_const_lv3_1)) and not((trunc_ln203_reg_1513 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_0)) and not((trunc_ln203_1_fu_1122_p1 = ap_const_lv3_1)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv_1_input_2_2_V_we0 <= ap_const_logic_1;
        else 
            conv_1_input_2_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_0_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_621_conv_out_0_V_address0, grp_max_pool_1_fu_667_conv_out_0_V_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_0_V_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_0_V_address0 <= grp_max_pool_1_fu_667_conv_out_0_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_0_V_address0 <= grp_conv_1_fu_621_conv_out_0_V_address0;
        else 
            conv_1_out_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_0_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_621_conv_out_0_V_ce0, grp_max_pool_1_fu_667_conv_out_0_V_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_0_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_0_V_ce0 <= grp_max_pool_1_fu_667_conv_out_0_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_0_V_ce0 <= grp_conv_1_fu_621_conv_out_0_V_ce0;
        else 
            conv_1_out_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_0_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_conv_1_fu_621_conv_out_0_V_d0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_1_out_0_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_0_V_d0 <= grp_conv_1_fu_621_conv_out_0_V_d0;
        else 
            conv_1_out_0_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_0_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_717_p2, grp_conv_1_fu_621_conv_out_0_V_we0, ap_CS_fsm_state8)
    begin
        if (((icmp_ln23_fu_717_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            conv_1_out_0_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_0_V_we0 <= grp_conv_1_fu_621_conv_out_0_V_we0;
        else 
            conv_1_out_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_V_address0_assign_proc : process(grp_conv_1_fu_621_conv_out_1_V_address0, grp_max_pool_1_fu_667_conv_out_1_V_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_1_V_address0 <= grp_max_pool_1_fu_667_conv_out_1_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_1_V_address0 <= grp_conv_1_fu_621_conv_out_1_V_address0;
        else 
            conv_1_out_1_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_1_V_ce0_assign_proc : process(grp_conv_1_fu_621_conv_out_1_V_ce0, grp_max_pool_1_fu_667_conv_out_1_V_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_1_V_ce0 <= grp_max_pool_1_fu_667_conv_out_1_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_1_V_ce0 <= grp_conv_1_fu_621_conv_out_1_V_ce0;
        else 
            conv_1_out_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_1_V_we0_assign_proc : process(grp_conv_1_fu_621_conv_out_1_V_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_1_V_we0 <= grp_conv_1_fu_621_conv_out_1_V_we0;
        else 
            conv_1_out_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_V_address0_assign_proc : process(grp_conv_1_fu_621_conv_out_2_V_address0, grp_max_pool_1_fu_667_conv_out_2_V_address0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_2_V_address0 <= grp_max_pool_1_fu_667_conv_out_2_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_2_V_address0 <= grp_conv_1_fu_621_conv_out_2_V_address0;
        else 
            conv_1_out_2_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_2_V_ce0_assign_proc : process(grp_conv_1_fu_621_conv_out_2_V_ce0, grp_max_pool_1_fu_667_conv_out_2_V_ce0, ap_CS_fsm_state8, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            conv_1_out_2_V_ce0 <= grp_max_pool_1_fu_667_conv_out_2_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_2_V_ce0 <= grp_conv_1_fu_621_conv_out_2_V_ce0;
        else 
            conv_1_out_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_2_V_we0_assign_proc : process(grp_conv_1_fu_621_conv_out_2_V_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            conv_1_out_2_V_we0 <= grp_conv_1_fu_621_conv_out_2_V_we0;
        else 
            conv_1_out_2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_641_conv_out_V_address0, grp_max_pool_2_fu_675_conv_out_V_address0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_address0 <= ap_const_lv64_0(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv_2_out_V_address0 <= grp_max_pool_2_fu_675_conv_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_address0 <= grp_conv_2_fu_641_conv_out_V_address0;
        else 
            conv_2_out_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_641_conv_out_V_ce0, grp_max_pool_2_fu_675_conv_out_V_ce0, ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv_2_out_V_ce0 <= grp_max_pool_2_fu_675_conv_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_ce0 <= grp_conv_2_fu_641_conv_out_V_ce0;
        else 
            conv_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_641_conv_out_V_d0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv_2_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_d0 <= grp_conv_2_fu_641_conv_out_V_d0;
        else 
            conv_2_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_717_p2, grp_conv_2_fu_641_conv_out_V_we0, ap_CS_fsm_state12)
    begin
        if (((icmp_ln23_fu_717_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            conv_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv_2_out_V_we0 <= grp_conv_2_fu_641_conv_out_V_we0;
        else 
            conv_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_V_address0_assign_proc : process(grp_dense_1_fu_681_dense_1_out_V_address0, grp_dense_2_fu_691_dense_1_out_V_address0, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_1_out_V_address0 <= ap_const_lv64_0(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_1_out_V_address0 <= grp_dense_2_fu_691_dense_1_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_1_out_V_address0 <= grp_dense_1_fu_681_dense_1_out_V_address0;
        else 
            dense_1_out_V_address0 <= "XXXXXX";
        end if; 
    end process;


    dense_1_out_V_ce0_assign_proc : process(grp_dense_1_fu_681_dense_1_out_V_ce0, grp_dense_2_fu_691_dense_1_out_V_ce0, grp_flat_fu_701_ap_done, ap_CS_fsm_state18, ap_CS_fsm_state20, ap_CS_fsm_state16)
    begin
        if (((grp_flat_fu_701_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dense_1_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_1_out_V_ce0 <= grp_dense_2_fu_691_dense_1_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_1_out_V_ce0 <= grp_dense_1_fu_681_dense_1_out_V_ce0;
        else 
            dense_1_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_V_d0_assign_proc : process(grp_dense_1_fu_681_dense_1_out_V_d0, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_1_out_V_d0 <= ap_const_lv13_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_1_out_V_d0 <= grp_dense_1_fu_681_dense_1_out_V_d0;
        else 
            dense_1_out_V_d0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_out_V_we0_assign_proc : process(grp_dense_1_fu_681_dense_1_out_V_we0, grp_flat_fu_701_ap_done, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if (((grp_flat_fu_701_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dense_1_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_1_out_V_we0 <= grp_dense_1_fu_681_dense_1_out_V_we0;
        else 
            dense_1_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_V_address0_assign_proc : process(grp_dense_out_fu_651_dense_2_out_V_address0, grp_dense_2_fu_691_dense_2_out_V_address0, ap_CS_fsm_state22, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_out_V_address0 <= ap_const_lv64_0(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_out_V_address0 <= grp_dense_2_fu_691_dense_2_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_out_V_address0 <= grp_dense_out_fu_651_dense_2_out_V_address0;
        else 
            dense_2_out_V_address0 <= "XXXXX";
        end if; 
    end process;


    dense_2_out_V_ce0_assign_proc : process(grp_dense_out_fu_651_dense_2_out_V_ce0, grp_dense_1_fu_681_ap_done, grp_dense_2_fu_691_dense_2_out_V_ce0, ap_CS_fsm_state22, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if (((grp_dense_1_fu_681_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            dense_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_out_V_ce0 <= grp_dense_2_fu_691_dense_2_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_out_V_ce0 <= grp_dense_out_fu_651_dense_2_out_V_ce0;
        else 
            dense_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_V_d0_assign_proc : process(grp_dense_2_fu_691_dense_2_out_V_d0, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_out_V_d0 <= ap_const_lv13_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_out_V_d0 <= grp_dense_2_fu_691_dense_2_out_V_d0;
        else 
            dense_2_out_V_d0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_out_V_we0_assign_proc : process(grp_dense_1_fu_681_ap_done, grp_dense_2_fu_691_dense_2_out_V_we0, ap_CS_fsm_state18, ap_CS_fsm_state20)
    begin
        if (((grp_dense_1_fu_681_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            dense_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_out_V_we0 <= grp_dense_2_fu_691_dense_2_out_V_we0;
        else 
            dense_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_fu_872_p4 <= ireg_V_fu_856_p1(62 downto 52);

    flat_array_V_address0_assign_proc : process(grp_dense_1_fu_681_flat_array_V_address0, grp_flat_fu_701_flat_array_V_address0, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            flat_array_V_address0 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_address0 <= grp_flat_fu_701_flat_array_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            flat_array_V_address0 <= grp_dense_1_fu_681_flat_array_V_address0;
        else 
            flat_array_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    flat_array_V_ce0_assign_proc : process(grp_max_pool_2_fu_675_ap_done, grp_dense_1_fu_681_flat_array_V_ce0, grp_flat_fu_701_flat_array_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state18, ap_CS_fsm_state16)
    begin
        if (((grp_max_pool_2_fu_675_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            flat_array_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_ce0 <= grp_flat_fu_701_flat_array_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            flat_array_V_ce0 <= grp_dense_1_fu_681_flat_array_V_ce0;
        else 
            flat_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_V_d0_assign_proc : process(grp_flat_fu_701_flat_array_V_d0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            flat_array_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_d0 <= grp_flat_fu_701_flat_array_V_d0;
        else 
            flat_array_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    flat_array_V_we0_assign_proc : process(grp_max_pool_2_fu_675_ap_done, grp_flat_fu_701_flat_array_V_we0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if (((grp_max_pool_2_fu_675_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            flat_array_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            flat_array_V_we0 <= grp_flat_fu_701_flat_array_V_we0;
        else 
            flat_array_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv_1_fu_621_ap_start <= grp_conv_1_fu_621_ap_start_reg;
    grp_conv_2_fu_641_ap_start <= grp_conv_2_fu_641_ap_start_reg;
    grp_dense_1_fu_681_ap_start <= grp_dense_1_fu_681_ap_start_reg;
    grp_dense_2_fu_691_ap_start <= grp_dense_2_fu_691_ap_start_reg;
    grp_dense_out_fu_651_ap_start <= grp_dense_out_fu_651_ap_start_reg;
    grp_flat_fu_701_ap_start <= grp_flat_fu_701_ap_start_reg;
    grp_max_pool_1_fu_667_ap_start <= grp_max_pool_1_fu_667_ap_start_reg;
    grp_max_pool_2_fu_675_ap_start <= grp_max_pool_2_fu_675_ap_start_reg;
    i_1_fu_723_p2 <= std_logic_vector(unsigned(i_0_reg_531) + unsigned(ap_const_lv5_1));
    i_fu_1173_p2 <= std_logic_vector(unsigned(i24_0_reg_610) + unsigned(ap_const_lv4_1));
    icmp_ln23_1_fu_842_p2 <= "1" when (unsigned(add_ln23_8_fu_836_p2) < unsigned(ap_const_lv5_3)) else "0";
    icmp_ln23_fu_717_p2 <= "1" when (i_0_reg_531 = ap_const_lv5_1C) else "0";
    icmp_ln25_fu_789_p2 <= "1" when (j_0_reg_576 = ap_const_lv5_1C) else "0";
    icmp_ln28_fu_1147_p2 <= "1" when (unsigned(add_ln28_2_fu_1141_p2) < unsigned(ap_const_lv5_3)) else "0";
    icmp_ln571_fu_890_p2 <= "1" when (trunc_ln556_fu_860_p1 = ap_const_lv63_0) else "0";
    icmp_ln581_fu_926_p2 <= "1" when (signed(F2_reg_1582) > signed(ap_const_lv12_8)) else "0";
    icmp_ln582_fu_953_p2 <= "1" when (F2_reg_1582 = ap_const_lv12_8) else "0";
    icmp_ln585_fu_962_p2 <= "1" when (unsigned(sh_amt_fu_941_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln603_fu_968_p2 <= "1" when (unsigned(sh_amt_fu_941_p3) < unsigned(ap_const_lv12_E)) else "0";
    icmp_ln69_fu_1167_p2 <= "1" when (i24_0_reg_610 = ap_const_lv4_A) else "0";
    icmp_ln935_fu_1184_p2 <= "1" when (prediction_V_q0 = ap_const_lv14_0) else "0";
    icmp_ln947_1_fu_1296_p2 <= "0" when (p_Result_s_fu_1290_p2 = ap_const_lv14_0) else "1";
    icmp_ln947_fu_1264_p2 <= "1" when (signed(tmp_65_fu_1254_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln958_fu_1356_p2 <= "1" when (signed(lsb_index_fu_1248_p2) > signed(ap_const_lv32_0)) else "0";
    ireg_V_fu_856_p1 <= grp_fu_707_p1;
    ix_in_fu_729_p2 <= std_logic_vector(unsigned(ap_const_lv10_1C) + unsigned(ix_in_0_reg_519));
    j_fu_795_p2 <= std_logic_vector(unsigned(j_0_reg_576) + unsigned(ap_const_lv5_1));
    
    l_fu_1230_p3_proc : process(p_Result_34_fu_1222_p3)
    begin
        l_fu_1230_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_34_fu_1222_p3(i) = '1' then
                l_fu_1230_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_1248_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFE8) + signed(sub_ln944_fu_1238_p2));
    lshr_ln947_fu_1284_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv14_3FFF),to_integer(unsigned('0' & zext_ln947_fu_1280_p1(14-1 downto 0)))));
    lshr_ln958_fu_1374_p2 <= std_logic_vector(shift_right(unsigned(m_fu_1366_p1),to_integer(unsigned('0' & add_ln958_fu_1369_p2(31-1 downto 0)))));
    m_11_fu_1413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_s_fu_1403_p4),32));
    m_7_fu_1391_p3 <= 
        lshr_ln958_fu_1374_p2 when (icmp_ln958_reg_1647(0) = '1') else 
        shl_ln958_fu_1385_p2;
    m_8_fu_1398_p2 <= std_logic_vector(unsigned(m_7_fu_1391_p3) + unsigned(or_ln_reg_1642));
    m_fu_1366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_9_reg_1631),32));
    m_s_fu_1403_p4 <= m_8_fu_1398_p2(31 downto 1);
    man_V_1_fu_913_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_32_fu_909_p1));
    man_V_2_fu_919_p3 <= 
        man_V_1_fu_913_p2 when (p_Result_31_reg_1566(0) = '1') else 
        p_Result_32_fu_909_p1;

    max_pool_1_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_641_input_V_address0, grp_max_pool_1_fu_667_max_pool_out_V_address0, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_address0 <= ap_const_lv64_0(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_address0 <= grp_max_pool_1_fu_667_max_pool_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            max_pool_1_out_V_address0 <= grp_conv_2_fu_641_input_V_address0;
        else 
            max_pool_1_out_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_conv_2_fu_641_input_V_ce0, grp_max_pool_1_fu_667_max_pool_out_V_ce0, ap_CS_fsm_state12, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_ce0 <= grp_max_pool_1_fu_667_max_pool_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            max_pool_1_out_V_ce0 <= grp_conv_2_fu_641_input_V_ce0;
        else 
            max_pool_1_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_1_fu_667_max_pool_out_V_d0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_1_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_d0 <= grp_max_pool_1_fu_667_max_pool_out_V_d0;
        else 
            max_pool_1_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_717_p2, grp_max_pool_1_fu_667_max_pool_out_V_we0, ap_CS_fsm_state10)
    begin
        if (((icmp_ln23_fu_717_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            max_pool_1_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            max_pool_1_out_V_we0 <= grp_max_pool_1_fu_667_max_pool_out_V_we0;
        else 
            max_pool_1_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_V_address0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_675_max_pool_out_V_address0, grp_flat_fu_701_max_pool_out_V_address0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_address0 <= ap_const_lv64_0(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            max_pool_2_out_V_address0 <= grp_flat_fu_701_max_pool_out_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_address0 <= grp_max_pool_2_fu_675_max_pool_out_V_address0;
        else 
            max_pool_2_out_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_V_ce0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_675_max_pool_out_V_ce0, grp_flat_fu_701_max_pool_out_V_ce0, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            max_pool_2_out_V_ce0 <= grp_flat_fu_701_max_pool_out_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_ce0 <= grp_max_pool_2_fu_675_max_pool_out_V_ce0;
        else 
            max_pool_2_out_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_V_d0_assign_proc : process(ap_CS_fsm_state2, grp_max_pool_2_fu_675_max_pool_out_V_d0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            max_pool_2_out_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_d0 <= grp_max_pool_2_fu_675_max_pool_out_V_d0;
        else 
            max_pool_2_out_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_V_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln23_fu_717_p2, grp_max_pool_2_fu_675_max_pool_out_V_we0, ap_CS_fsm_state14)
    begin
        if (((icmp_ln23_fu_717_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            max_pool_2_out_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            max_pool_2_out_V_we0 <= grp_max_pool_2_fu_675_max_pool_out_V_we0;
        else 
            max_pool_2_out_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln581_fu_1087_p2 <= (or_ln582_fu_1036_p2 or icmp_ln581_fu_926_p2);
    or_ln582_fu_1036_p2 <= (icmp_ln582_fu_953_p2 or icmp_ln571_reg_1576);
    or_ln949_fu_1342_p2 <= (and_ln949_fu_1336_p2 or a_fu_1302_p2);
    or_ln_fu_1348_p3 <= (ap_const_lv31_0 & or_ln949_fu_1342_p2);
    
    p_Result_13_fu_1212_p4_proc : process(tmp_V_9_fu_1204_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(14+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(14+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable p_Result_13_fu_1212_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(14 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(14 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(4 - 1 downto 0) := ap_const_lv32_D(4 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(4 - 1 downto 0) := ap_const_lv32_0(4 - 1 downto 0);
        v0_cpy := tmp_V_9_fu_1204_p3;
        if (vlo_cpy(4 - 1 downto 0) > vhi_cpy(4 - 1 downto 0)) then
            vhi_cpy(4-1 downto 0) := std_logic_vector(14-1-unsigned(ap_const_lv32_0(4-1 downto 0)));
            vlo_cpy(4-1 downto 0) := std_logic_vector(14-1-unsigned(ap_const_lv32_D(4-1 downto 0)));
            for p_Result_13_fu_1212_p4_i in 0 to 14-1 loop
                v0_cpy(p_Result_13_fu_1212_p4_i) := tmp_V_9_fu_1204_p3(14-1-p_Result_13_fu_1212_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(4-1 downto 0)))));

        section := (others=>'0');
        section(4-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(4-1 downto 0)) - unsigned(vlo_cpy(4-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(14-1 downto 0)))));
        res_mask := res_mask(14-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_13_fu_1212_p4 <= resvalue(14-1 downto 0);
    end process;

    p_Result_27_fu_1328_p3 <= tmp_V_9_fu_1204_p3(to_integer(unsigned(add_ln949_fu_1322_p2)) downto to_integer(unsigned(add_ln949_fu_1322_p2))) when (to_integer(unsigned(add_ln949_fu_1322_p2))>= 0 and to_integer(unsigned(add_ln949_fu_1322_p2))<=13) else "-";
    p_Result_32_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_902_p3),54));
    p_Result_33_fu_1190_p3 <= prediction_V_q0(13 downto 13);
    p_Result_34_fu_1222_p3 <= (ap_const_lv18_3FFFF & p_Result_13_fu_1212_p4);
    p_Result_35_fu_1451_p5 <= (tmp_s_fu_1444_p3 & m_11_fu_1413_p1(22 downto 0));
    p_Result_s_fu_1290_p2 <= (tmp_V_9_fu_1204_p3 and lshr_ln947_fu_1284_p2);

    prediction_V_address0_assign_proc : process(ap_CS_fsm_state23, zext_ln70_fu_1179_p1, grp_dense_out_fu_651_prediction_V_address0, ap_CS_fsm_state22, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            prediction_V_address0 <= zext_ln70_fu_1179_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            prediction_V_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            prediction_V_address0 <= grp_dense_out_fu_651_prediction_V_address0;
        else 
            prediction_V_address0 <= "XXXX";
        end if; 
    end process;


    prediction_V_ce0_assign_proc : process(ap_CS_fsm_state23, grp_dense_out_fu_651_prediction_V_ce0, grp_dense_2_fu_691_ap_done, ap_CS_fsm_state22, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((grp_dense_2_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            prediction_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            prediction_V_ce0 <= grp_dense_out_fu_651_prediction_V_ce0;
        else 
            prediction_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    prediction_V_d0_assign_proc : process(grp_dense_out_fu_651_prediction_V_d0, ap_CS_fsm_state22, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            prediction_V_d0 <= ap_const_lv14_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            prediction_V_d0 <= grp_dense_out_fu_651_prediction_V_d0;
        else 
            prediction_V_d0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    prediction_V_we0_assign_proc : process(grp_dense_out_fu_651_prediction_V_we0, grp_dense_2_fu_691_ap_done, ap_CS_fsm_state22, ap_CS_fsm_state20)
    begin
        if (((grp_dense_2_fu_691_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            prediction_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            prediction_V_we0 <= grp_dense_out_fu_651_prediction_V_we0;
        else 
            prediction_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prediction_output_address0 <= zext_ln70_reg_1611(4 - 1 downto 0);

    prediction_output_ce0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            prediction_output_ce0 <= ap_const_logic_1;
        else 
            prediction_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    prediction_output_d0 <= 
        ap_const_lv32_0 when (icmp_ln935_reg_1621(0) = '1') else 
        bitcast_ln739_fu_1463_p1;

    prediction_output_we0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            prediction_output_we0 <= ap_const_logic_1;
        else 
            prediction_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln23_fu_848_p3 <= 
        add_ln23_8_fu_836_p2 when (icmp_ln23_1_fu_842_p2(0) = '1') else 
        ap_const_lv5_0;
    select_ln28_fu_1153_p3 <= 
        add_ln28_2_fu_1141_p2 when (icmp_ln28_fu_1147_p2(0) = '1') else 
        ap_const_lv5_0;
    select_ln582_fu_1028_p3 <= 
        trunc_ln583_fu_958_p1 when (and_ln582_fu_1022_p2(0) = '1') else 
        ap_const_lv14_0;
    select_ln585_1_fu_1079_p3 <= 
        trunc_ln586_fu_984_p1 when (and_ln585_1_fu_1073_p2(0) = '1') else 
        select_ln585_fu_1065_p3;
    select_ln585_fu_1065_p3 <= 
        select_ln588_fu_999_p3 when (and_ln585_fu_1059_p2(0) = '1') else 
        select_ln582_fu_1028_p3;
    select_ln588_fu_999_p3 <= 
        ap_const_lv14_3FFF when (tmp_69_fu_991_p3(0) = '1') else 
        ap_const_lv14_0;
    select_ln603_fu_1105_p3 <= 
        shl_ln604_fu_1011_p2 when (and_ln603_fu_1099_p2(0) = '1') else 
        select_ln585_1_fu_1079_p3;
    select_ln964_fu_1425_p3 <= 
        ap_const_lv8_7F when (tmp_67_fu_1417_p3(0) = '1') else 
        ap_const_lv8_7E;
        sext_ln581_fu_949_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_941_p3),32));

    sext_ln581cast_fu_1007_p1 <= sext_ln581_fu_949_p1(14 - 1 downto 0);
    sh_amt_fu_941_p3 <= 
        add_ln581_fu_931_p2 when (icmp_ln581_fu_926_p2(0) = '1') else 
        sub_ln581_fu_936_p2;
    shl_ln604_fu_1011_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln583_fu_958_p1),to_integer(unsigned('0' & sext_ln581cast_fu_1007_p1(14-1 downto 0)))));
    shl_ln958_fu_1385_p2 <= std_logic_vector(shift_left(unsigned(m_fu_1366_p1),to_integer(unsigned('0' & sub_ln958_fu_1380_p2(31-1 downto 0)))));
    sub_ln581_fu_936_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) - unsigned(F2_reg_1582));
    sub_ln944_fu_1238_p2 <= std_logic_vector(unsigned(ap_const_lv32_E) - unsigned(l_fu_1230_p3));
    sub_ln947_fu_1274_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(trunc_ln947_fu_1270_p1));
    sub_ln958_fu_1380_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_reg_1636));
    sub_ln964_fu_1433_p2 <= std_logic_vector(unsigned(ap_const_lv8_6) - unsigned(trunc_ln943_reg_1652));
    tmp_61_fu_739_p4 <= phi_mul5_reg_542(10 downto 7);
    tmp_62_fu_753_p3 <= (tmp_61_fu_739_p4 & ap_const_lv3_0);
    tmp_63_fu_765_p3 <= (tmp_61_fu_739_p4 & ap_const_lv1_0);
    tmp_65_fu_1254_p4 <= lsb_index_fu_1248_p2(31 downto 1);
    tmp_66_fu_1308_p3 <= lsb_index_fu_1248_p2(31 downto 31);
    tmp_67_fu_1417_p3 <= m_8_fu_1398_p2(25 downto 25);
    tmp_69_fu_991_p3 <= bitcast_ln696_fu_988_p1(31 downto 31);
    tmp_70_fu_812_p4 <= phi_mul_reg_587(10 downto 7);
    tmp_V_9_fu_1204_p3 <= 
        tmp_V_fu_1198_p2 when (p_Result_33_fu_1190_p3(0) = '1') else 
        prediction_V_q0;
    tmp_V_fu_1198_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(prediction_V_q0));
    tmp_fu_902_p3 <= (ap_const_lv1_1 & trunc_ln565_reg_1571);
    tmp_s_fu_1444_p3 <= (p_Result_33_reg_1626 & add_ln964_fu_1438_p2);
    trunc_ln203_1_fu_1122_p1 <= phi_urem_reg_598(3 - 1 downto 0);
    trunc_ln203_fu_735_p1 <= phi_urem7_reg_553(3 - 1 downto 0);
    trunc_ln556_fu_860_p1 <= ireg_V_fu_856_p1(63 - 1 downto 0);
    trunc_ln565_fu_886_p1 <= ireg_V_fu_856_p1(52 - 1 downto 0);
    trunc_ln583_fu_958_p1 <= man_V_2_fu_919_p3(14 - 1 downto 0);
    trunc_ln586_fu_984_p1 <= ashr_ln586_fu_978_p2(14 - 1 downto 0);
    trunc_ln943_fu_1362_p1 <= l_fu_1230_p3(8 - 1 downto 0);
    trunc_ln944_fu_1244_p1 <= sub_ln944_fu_1238_p2(14 - 1 downto 0);
    trunc_ln947_fu_1270_p1 <= sub_ln944_fu_1238_p2(4 - 1 downto 0);
    xor_ln571_fu_1017_p2 <= (icmp_ln571_reg_1576 xor ap_const_lv1_1);
    xor_ln581_fu_1093_p2 <= (or_ln581_fu_1087_p2 xor ap_const_lv1_1);
    xor_ln582_fu_1041_p2 <= (or_ln582_fu_1036_p2 xor ap_const_lv1_1);
    xor_ln585_fu_1053_p2 <= (icmp_ln585_fu_962_p2 xor ap_const_lv1_1);
    xor_ln949_fu_1316_p2 <= (tmp_66_fu_1308_p3 xor ap_const_lv1_1);
    zext_ln203_31_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_753_p3),8));
    zext_ln203_32_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_765_p3),8));
    zext_ln203_33_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_812_p4),8));
    zext_ln203_34_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_14_reg_1545),64));
    zext_ln203_35_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_15_reg_1550),64));
    zext_ln203_fu_749_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_739_p4),8));
    zext_ln27_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ix_in_1_reg_565),64));
    zext_ln461_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_872_p4),12));
    zext_ln586_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln581_fu_949_p1),54));
    zext_ln70_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i24_0_reg_610),64));
    zext_ln947_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_1274_p2),14));
end behav;
