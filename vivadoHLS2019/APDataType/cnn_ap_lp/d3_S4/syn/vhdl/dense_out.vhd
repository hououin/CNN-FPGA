-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_out is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_2_out_0_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_0_V_ce0 : OUT STD_LOGIC;
    dense_2_out_0_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_0_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_0_V_ce1 : OUT STD_LOGIC;
    dense_2_out_0_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_1_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_1_V_ce0 : OUT STD_LOGIC;
    dense_2_out_1_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_1_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_1_V_ce1 : OUT STD_LOGIC;
    dense_2_out_1_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_2_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_2_V_ce0 : OUT STD_LOGIC;
    dense_2_out_2_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_2_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_2_V_ce1 : OUT STD_LOGIC;
    dense_2_out_2_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_3_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_3_V_ce0 : OUT STD_LOGIC;
    dense_2_out_3_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_3_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_3_V_ce1 : OUT STD_LOGIC;
    dense_2_out_3_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_4_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_4_V_ce0 : OUT STD_LOGIC;
    dense_2_out_4_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
    dense_2_out_4_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_2_out_4_V_ce1 : OUT STD_LOGIC;
    dense_2_out_4_V_q1 : IN STD_LOGIC_VECTOR (12 downto 0);
    prediction_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_V_ce0 : OUT STD_LOGIC;
    prediction_V_we0 : OUT STD_LOGIC;
    prediction_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
end;


architecture behav of dense_out is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_out_weights_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_ce0 : STD_LOGIC;
    signal dense_out_weights_V_q0 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_ce1 : STD_LOGIC;
    signal dense_out_weights_V_q1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_ce2 : STD_LOGIC;
    signal dense_out_weights_V_q2 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_ce3 : STD_LOGIC;
    signal dense_out_weights_V_q3 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_address4 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_weights_V_ce4 : STD_LOGIC;
    signal dense_out_weights_V_q4 : STD_LOGIC_VECTOR (8 downto 0);
    signal dense_out_bias_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_out_bias_V_ce0 : STD_LOGIC;
    signal dense_out_bias_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv34_reg_378 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvars_iv22_reg_390 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvars_iv14_reg_402 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_0_reg_414 : STD_LOGIC_VECTOR (13 downto 0);
    signal f_0_0_reg_426 : STD_LOGIC_VECTOR (4 downto 0);
    signal reg_451 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln46_reg_1373 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_455 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_459 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_463 : STD_LOGIC_VECTOR (8 downto 0);
    signal reg_467 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln41_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal d_fu_477_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal d_reg_1344 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln48_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_reg_1349 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln46_fu_487_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln46_reg_1355 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln46_1_fu_491_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln46_1_reg_1366 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln46_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1373_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal f_0_0_cast1_fu_501_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal f_0_0_cast1_reg_1377 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1117_2_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_2_reg_1436 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_out_0_V_loa_reg_1453 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_1_V_loa_reg_1458 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_2_V_loa_reg_1463 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_3_V_loa_reg_1468 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_4_V_loa_reg_1473 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_0_V_loa_1_reg_1483 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_2_out_1_V_loa_1_reg_1493 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln46_8_fu_973_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_8_reg_1513 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln46_9_fu_979_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln46_9_reg_1518 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln46_10_fu_985_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln46_10_reg_1523 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln46_11_fu_991_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln46_11_reg_1528 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_reg_1533 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal dense_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_array_V_ce0 : STD_LOGIC;
    signal dense_array_V_we0 : STD_LOGIC;
    signal dense_array_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_array_V_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal dense_array_V_ce1 : STD_LOGIC;
    signal dense_array_V_we1 : STD_LOGIC;
    signal dense_array_V_q1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_soft_max_fu_438_ap_start : STD_LOGIC;
    signal grp_soft_max_fu_438_ap_done : STD_LOGIC;
    signal grp_soft_max_fu_438_ap_idle : STD_LOGIC;
    signal grp_soft_max_fu_438_ap_ready : STD_LOGIC;
    signal grp_soft_max_fu_438_dense_array_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_soft_max_fu_438_dense_array_V_ce0 : STD_LOGIC;
    signal grp_soft_max_fu_438_dense_array_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_soft_max_fu_438_dense_array_V_ce1 : STD_LOGIC;
    signal grp_soft_max_fu_438_dense_array_V_we1 : STD_LOGIC;
    signal grp_soft_max_fu_438_dense_array_V_d1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_soft_max_fu_438_prediction_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_soft_max_fu_438_prediction_V_ce0 : STD_LOGIC;
    signal grp_soft_max_fu_438_prediction_V_we0 : STD_LOGIC;
    signal grp_soft_max_fu_438_prediction_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal d_0_reg_367 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_indvars_iv34_phi_fu_382_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_indvars_iv22_phi_fu_394_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvars_iv14_phi_fu_406_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_f_0_0_phi_fu_430_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_soft_max_fu_438_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln1116_2_fu_540_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_fu_545_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_5_fu_593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_8_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_11_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1117_1_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_14_fu_737_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_17_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln1116_20_fu_833_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_23_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_26_fu_923_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1116_29_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_505_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_517_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1116_1_fu_525_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1116_fu_513_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_fu_529_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_1_fu_535_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln46_fu_552_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_558_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_570_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1116_4_fu_578_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1116_3_fu_566_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_2_fu_582_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_3_fu_588_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln46_fu_598_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_616_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1116_7_fu_624_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1116_6_fu_612_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_4_fu_628_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1116_5_fu_634_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln46_1_fu_644_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_650_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_fu_662_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_10_fu_670_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_9_fu_658_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_6_fu_674_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_7_fu_680_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_2_fu_696_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_12_fu_702_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_13_fu_714_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_13_fu_722_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_12_fu_710_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_8_fu_726_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_9_fu_732_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_3_fu_748_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_15_fu_753_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_765_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_16_fu_773_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_15_fu_761_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_10_fu_777_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_11_fu_783_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_4_fu_793_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_798_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_19_fu_810_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_19_fu_818_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_18_fu_806_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_12_fu_822_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_13_fu_828_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_5_fu_838_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_21_fu_843_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_22_fu_855_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_22_fu_863_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_21_fu_851_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_14_fu_867_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_15_fu_873_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_6_fu_883_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_24_fu_888_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_25_fu_900_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_25_fu_908_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_24_fu_896_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_16_fu_912_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_17_fu_918_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_7_fu_928_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_fu_933_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_945_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1116_28_fu_953_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1116_27_fu_941_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_18_fu_957_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1116_19_fu_963_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1250_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_1019_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1259_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_8_fu_1043_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1268_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_11_fu_1067_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1277_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_14_fu_1091_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1286_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1295_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_20_fu_1138_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1304_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_23_fu_1163_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1313_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_26_fu_1188_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1322_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_29_fu_1213_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1331_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1265_fu_1239_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1250_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1250_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1259_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1268_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1268_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1277_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1277_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1286_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1286_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1295_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1295_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1304_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1304_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1313_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1313_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1322_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1322_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1331_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1331_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1250_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1259_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1268_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1277_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1286_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1295_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1304_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1313_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1322_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1331_p00 : STD_LOGIC_VECTOR (21 downto 0);

    component soft_max IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_array_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dense_array_V_ce0 : OUT STD_LOGIC;
        dense_array_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        dense_array_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        dense_array_V_ce1 : OUT STD_LOGIC;
        dense_array_V_we1 : OUT STD_LOGIC;
        dense_array_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        dense_array_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
        prediction_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_V_ce0 : OUT STD_LOGIC;
        prediction_V_we0 : OUT STD_LOGIC;
        prediction_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component cnn_mac_muladd_13vdy IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component dense_out_dense_osc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (8 downto 0);
        address4 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component dense_out_dense_otde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component dense_out_dense_audo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (13 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    dense_out_weights_V_U : component dense_out_dense_osc4
    generic map (
        DataWidth => 9,
        AddressRange => 300,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_out_weights_V_address0,
        ce0 => dense_out_weights_V_ce0,
        q0 => dense_out_weights_V_q0,
        address1 => dense_out_weights_V_address1,
        ce1 => dense_out_weights_V_ce1,
        q1 => dense_out_weights_V_q1,
        address2 => dense_out_weights_V_address2,
        ce2 => dense_out_weights_V_ce2,
        q2 => dense_out_weights_V_q2,
        address3 => dense_out_weights_V_address3,
        ce3 => dense_out_weights_V_ce3,
        q3 => dense_out_weights_V_q3,
        address4 => dense_out_weights_V_address4,
        ce4 => dense_out_weights_V_ce4,
        q4 => dense_out_weights_V_q4);

    dense_out_bias_V_U : component dense_out_dense_otde
    generic map (
        DataWidth => 8,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_out_bias_V_address0,
        ce0 => dense_out_bias_V_ce0,
        q0 => dense_out_bias_V_q0);

    dense_array_V_U : component dense_out_dense_audo
    generic map (
        DataWidth => 14,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_array_V_address0,
        ce0 => dense_array_V_ce0,
        we0 => dense_array_V_we0,
        d0 => dense_array_V_d0,
        q0 => dense_array_V_q0,
        address1 => grp_soft_max_fu_438_dense_array_V_address1,
        ce1 => dense_array_V_ce1,
        we1 => dense_array_V_we1,
        d1 => grp_soft_max_fu_438_dense_array_V_d1,
        q1 => dense_array_V_q1);

    grp_soft_max_fu_438 : component soft_max
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_soft_max_fu_438_ap_start,
        ap_done => grp_soft_max_fu_438_ap_done,
        ap_idle => grp_soft_max_fu_438_ap_idle,
        ap_ready => grp_soft_max_fu_438_ap_ready,
        dense_array_V_address0 => grp_soft_max_fu_438_dense_array_V_address0,
        dense_array_V_ce0 => grp_soft_max_fu_438_dense_array_V_ce0,
        dense_array_V_q0 => dense_array_V_q0,
        dense_array_V_address1 => grp_soft_max_fu_438_dense_array_V_address1,
        dense_array_V_ce1 => grp_soft_max_fu_438_dense_array_V_ce1,
        dense_array_V_we1 => grp_soft_max_fu_438_dense_array_V_we1,
        dense_array_V_d1 => grp_soft_max_fu_438_dense_array_V_d1,
        dense_array_V_q1 => dense_array_V_q1,
        prediction_V_address0 => grp_soft_max_fu_438_prediction_V_address0,
        prediction_V_ce0 => grp_soft_max_fu_438_prediction_V_ce0,
        prediction_V_we0 => grp_soft_max_fu_438_prediction_V_we0,
        prediction_V_d0 => grp_soft_max_fu_438_prediction_V_d0);

    cnn_mac_muladd_13vdy_U46 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1250_p0,
        din1 => reg_451,
        din2 => grp_fu_1250_p2,
        dout => grp_fu_1250_p3);

    cnn_mac_muladd_13vdy_U47 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1259_p0,
        din1 => reg_455,
        din2 => grp_fu_1259_p2,
        dout => grp_fu_1259_p3);

    cnn_mac_muladd_13vdy_U48 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1268_p0,
        din1 => reg_459,
        din2 => grp_fu_1268_p2,
        dout => grp_fu_1268_p3);

    cnn_mac_muladd_13vdy_U49 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1277_p0,
        din1 => reg_463,
        din2 => grp_fu_1277_p2,
        dout => grp_fu_1277_p3);

    cnn_mac_muladd_13vdy_U50 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1286_p0,
        din1 => reg_467,
        din2 => grp_fu_1286_p2,
        dout => grp_fu_1286_p3);

    cnn_mac_muladd_13vdy_U51 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1295_p0,
        din1 => reg_451,
        din2 => grp_fu_1295_p2,
        dout => grp_fu_1295_p3);

    cnn_mac_muladd_13vdy_U52 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1304_p0,
        din1 => reg_455,
        din2 => grp_fu_1304_p2,
        dout => grp_fu_1304_p3);

    cnn_mac_muladd_13vdy_U53 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1313_p0,
        din1 => reg_459,
        din2 => grp_fu_1313_p2,
        dout => grp_fu_1313_p3);

    cnn_mac_muladd_13vdy_U54 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1322_p0,
        din1 => reg_463,
        din2 => grp_fu_1322_p2,
        dout => grp_fu_1322_p3);

    cnn_mac_muladd_13vdy_U55 : component cnn_mac_muladd_13vdy
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 9,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1331_p0,
        din1 => reg_467,
        din2 => grp_fu_1331_p2,
        dout => grp_fu_1331_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_soft_max_fu_438_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_soft_max_fu_438_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_1))) then 
                    grp_soft_max_fu_438_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_soft_max_fu_438_ap_ready = ap_const_logic_1)) then 
                    grp_soft_max_fu_438_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d_0_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                d_0_reg_367 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                d_0_reg_367 <= d_reg_1344;
            end if; 
        end if;
    end process;

    f_0_0_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                f_0_0_reg_426 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
                f_0_0_reg_426 <= add_ln46_8_reg_1513;
            end if; 
        end if;
    end process;

    indvars_iv14_reg_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                indvars_iv14_reg_402 <= ap_const_lv3_1;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
                indvars_iv14_reg_402 <= add_ln46_9_reg_1518;
            end if; 
        end if;
    end process;

    indvars_iv22_reg_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                indvars_iv22_reg_390 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
                indvars_iv22_reg_390 <= add_ln46_10_reg_1523;
            end if; 
        end if;
    end process;

    indvars_iv34_reg_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                indvars_iv34_reg_378 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
                indvars_iv34_reg_378 <= add_ln46_11_reg_1528;
            end if; 
        end if;
    end process;

    p_Val2_0_reg_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then 
                p_Val2_0_reg_414 <= ap_const_lv14_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln46_reg_1373_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                p_Val2_0_reg_414 <= grp_fu_1331_p3(21 downto 8);
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln46_reg_1373 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln46_10_reg_1523 <= add_ln46_10_fu_985_p2;
                add_ln46_11_reg_1528 <= add_ln46_11_fu_991_p2;
                add_ln46_8_reg_1513 <= add_ln46_8_fu_973_p2;
                add_ln46_9_reg_1518 <= add_ln46_9_fu_979_p2;
                dense_2_out_0_V_loa_1_reg_1483 <= dense_2_out_0_V_q1;
                dense_2_out_0_V_loa_reg_1453 <= dense_2_out_0_V_q0;
                dense_2_out_1_V_loa_1_reg_1493 <= dense_2_out_1_V_q1;
                dense_2_out_1_V_loa_reg_1458 <= dense_2_out_1_V_q0;
                dense_2_out_2_V_loa_reg_1463 <= dense_2_out_2_V_q0;
                dense_2_out_3_V_loa_reg_1468 <= dense_2_out_3_V_q0;
                dense_2_out_4_V_loa_reg_1473 <= dense_2_out_4_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                d_reg_1344 <= d_fu_477_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_fu_495_p2 = ap_const_lv1_0))) then
                    f_0_0_cast1_reg_1377(4 downto 0) <= f_0_0_cast1_fu_501_p1(4 downto 0);
                    zext_ln1117_2_reg_1436(2 downto 0) <= zext_ln1117_2_fu_742_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln46_reg_1373 <= icmp_ln46_fu_495_p2;
                icmp_ln46_reg_1373_pp0_iter1_reg <= icmp_ln46_reg_1373;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln46_reg_1373 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_451 <= dense_out_weights_V_q0;
                reg_455 <= dense_out_weights_V_q1;
                reg_459 <= dense_out_weights_V_q2;
                reg_463 <= dense_out_weights_V_q3;
                reg_467 <= dense_out_weights_V_q4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then
                tmp_17_reg_1533 <= grp_fu_1286_p3(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then
                    zext_ln46_1_reg_1366(3 downto 0) <= zext_ln46_1_fu_491_p1(3 downto 0);
                    zext_ln46_reg_1355(3 downto 0) <= zext_ln46_fu_487_p1(3 downto 0);
                    zext_ln48_reg_1349(3 downto 0) <= zext_ln48_fu_483_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln48_reg_1349(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln46_reg_1355(9 downto 4) <= "000000";
    zext_ln46_1_reg_1366(8 downto 4) <= "00000";
    f_0_0_cast1_reg_1377(5) <= '0';
    zext_ln1117_2_reg_1436(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln41_fu_471_p2, ap_CS_fsm_state2, icmp_ln46_fu_495_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, grp_soft_max_fu_438_ap_done, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln41_fu_471_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln46_fu_495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln46_fu_495_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state9 => 
                if (((grp_soft_max_fu_438_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln1116_10_fu_777_p2 <= std_logic_vector(unsigned(zext_ln1116_16_fu_773_p1) + unsigned(zext_ln1116_15_fu_761_p1));
    add_ln1116_11_fu_783_p2 <= std_logic_vector(unsigned(add_ln1116_10_fu_777_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_12_fu_822_p2 <= std_logic_vector(unsigned(zext_ln1116_19_fu_818_p1) + unsigned(zext_ln1116_18_fu_806_p1));
    add_ln1116_13_fu_828_p2 <= std_logic_vector(unsigned(add_ln1116_12_fu_822_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_14_fu_867_p2 <= std_logic_vector(unsigned(zext_ln1116_22_fu_863_p1) + unsigned(zext_ln1116_21_fu_851_p1));
    add_ln1116_15_fu_873_p2 <= std_logic_vector(unsigned(add_ln1116_14_fu_867_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_16_fu_912_p2 <= std_logic_vector(unsigned(zext_ln1116_25_fu_908_p1) + unsigned(zext_ln1116_24_fu_896_p1));
    add_ln1116_17_fu_918_p2 <= std_logic_vector(unsigned(add_ln1116_16_fu_912_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_18_fu_957_p2 <= std_logic_vector(unsigned(zext_ln1116_28_fu_953_p1) + unsigned(zext_ln1116_27_fu_941_p1));
    add_ln1116_19_fu_963_p2 <= std_logic_vector(unsigned(add_ln1116_18_fu_957_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_1_fu_535_p2 <= std_logic_vector(unsigned(add_ln1116_fu_529_p2) + unsigned(zext_ln46_1_reg_1366));
    add_ln1116_2_fu_582_p2 <= std_logic_vector(unsigned(zext_ln1116_4_fu_578_p1) + unsigned(zext_ln1116_3_fu_566_p1));
    add_ln1116_3_fu_588_p2 <= std_logic_vector(unsigned(add_ln1116_2_fu_582_p2) + unsigned(zext_ln46_1_reg_1366));
    add_ln1116_4_fu_628_p2 <= std_logic_vector(unsigned(zext_ln1116_7_fu_624_p1) + unsigned(zext_ln1116_6_fu_612_p1));
    add_ln1116_5_fu_634_p2 <= std_logic_vector(unsigned(add_ln1116_4_fu_628_p2) + unsigned(zext_ln46_1_reg_1366));
    add_ln1116_6_fu_674_p2 <= std_logic_vector(unsigned(zext_ln1116_10_fu_670_p1) + unsigned(zext_ln1116_9_fu_658_p1));
    add_ln1116_7_fu_680_p2 <= std_logic_vector(unsigned(add_ln1116_6_fu_674_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_8_fu_726_p2 <= std_logic_vector(unsigned(zext_ln1116_13_fu_722_p1) + unsigned(zext_ln1116_12_fu_710_p1));
    add_ln1116_9_fu_732_p2 <= std_logic_vector(unsigned(add_ln1116_8_fu_726_p2) + unsigned(zext_ln46_reg_1355));
    add_ln1116_fu_529_p2 <= std_logic_vector(unsigned(zext_ln1116_1_fu_525_p1) + unsigned(zext_ln1116_fu_513_p1));
    add_ln46_10_fu_985_p2 <= std_logic_vector(unsigned(indvars_iv22_reg_390) + unsigned(ap_const_lv3_2));
    add_ln46_11_fu_991_p2 <= std_logic_vector(unsigned(indvars_iv34_reg_378) + unsigned(ap_const_lv3_2));
    add_ln46_1_fu_644_p2 <= std_logic_vector(unsigned(f_0_0_cast1_fu_501_p1) + unsigned(ap_const_lv6_3));
    add_ln46_2_fu_696_p2 <= std_logic_vector(unsigned(f_0_0_cast1_fu_501_p1) + unsigned(ap_const_lv6_4));
    add_ln46_3_fu_748_p2 <= std_logic_vector(unsigned(f_0_0_cast1_reg_1377) + unsigned(ap_const_lv6_5));
    add_ln46_4_fu_793_p2 <= std_logic_vector(unsigned(f_0_0_cast1_reg_1377) + unsigned(ap_const_lv6_6));
    add_ln46_5_fu_838_p2 <= std_logic_vector(unsigned(f_0_0_cast1_reg_1377) + unsigned(ap_const_lv6_7));
    add_ln46_6_fu_883_p2 <= std_logic_vector(unsigned(f_0_0_cast1_reg_1377) + unsigned(ap_const_lv6_8));
    add_ln46_7_fu_928_p2 <= std_logic_vector(unsigned(f_0_0_cast1_reg_1377) + unsigned(ap_const_lv6_9));
    add_ln46_8_fu_973_p2 <= std_logic_vector(unsigned(f_0_0_reg_426) + unsigned(ap_const_lv5_A));
    add_ln46_9_fu_979_p2 <= std_logic_vector(unsigned(indvars_iv14_reg_402) + unsigned(ap_const_lv3_2));
    add_ln46_fu_598_p2 <= std_logic_vector(unsigned(ap_phi_mux_f_0_0_phi_fu_430_p4) + unsigned(ap_const_lv5_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln46_fu_495_p2)
    begin
        if ((icmp_ln46_fu_495_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_soft_max_fu_438_ap_done, ap_CS_fsm_state9)
    begin
        if ((((grp_soft_max_fu_438_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_f_0_0_phi_fu_430_p4_assign_proc : process(f_0_0_reg_426, icmp_ln46_reg_1373, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln46_8_reg_1513, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
            ap_phi_mux_f_0_0_phi_fu_430_p4 <= add_ln46_8_reg_1513;
        else 
            ap_phi_mux_f_0_0_phi_fu_430_p4 <= f_0_0_reg_426;
        end if; 
    end process;


    ap_phi_mux_indvars_iv14_phi_fu_406_p4_assign_proc : process(indvars_iv14_reg_402, icmp_ln46_reg_1373, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln46_9_reg_1518, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv14_phi_fu_406_p4 <= add_ln46_9_reg_1518;
        else 
            ap_phi_mux_indvars_iv14_phi_fu_406_p4 <= indvars_iv14_reg_402;
        end if; 
    end process;


    ap_phi_mux_indvars_iv22_phi_fu_394_p4_assign_proc : process(indvars_iv22_reg_390, icmp_ln46_reg_1373, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln46_10_reg_1523, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv22_phi_fu_394_p4 <= add_ln46_10_reg_1523;
        else 
            ap_phi_mux_indvars_iv22_phi_fu_394_p4 <= indvars_iv22_reg_390;
        end if; 
    end process;


    ap_phi_mux_indvars_iv34_phi_fu_382_p4_assign_proc : process(indvars_iv34_reg_378, icmp_ln46_reg_1373, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln46_11_reg_1528, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln46_reg_1373 = ap_const_lv1_0))) then 
            ap_phi_mux_indvars_iv34_phi_fu_382_p4 <= add_ln46_11_reg_1528;
        else 
            ap_phi_mux_indvars_iv34_phi_fu_382_p4 <= indvars_iv34_reg_378;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_soft_max_fu_438_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_soft_max_fu_438_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    d_fu_477_p2 <= std_logic_vector(unsigned(d_0_reg_367) + unsigned(ap_const_lv4_1));
    dense_2_out_0_V_address0 <= zext_ln1117_fu_545_p1(3 - 1 downto 0);
    dense_2_out_0_V_address1 <= zext_ln1117_2_fu_742_p1(3 - 1 downto 0);

    dense_2_out_0_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_0_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_0_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_0_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_out_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_1_V_address0 <= zext_ln1117_fu_545_p1(3 - 1 downto 0);
    dense_2_out_1_V_address1 <= zext_ln1117_2_fu_742_p1(3 - 1 downto 0);

    dense_2_out_1_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_1_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_1_V_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_1_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_out_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_2_V_address0 <= zext_ln1117_fu_545_p1(3 - 1 downto 0);
    dense_2_out_2_V_address1 <= zext_ln1117_2_reg_1436(3 - 1 downto 0);

    dense_2_out_2_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_2_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_2_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_out_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_3_V_address0 <= zext_ln1117_1_fu_690_p1(3 - 1 downto 0);
    dense_2_out_3_V_address1 <= zext_ln1117_2_reg_1436(3 - 1 downto 0);

    dense_2_out_3_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_3_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_3_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_3_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_out_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_4_V_address0 <= zext_ln1117_1_fu_690_p1(3 - 1 downto 0);
    dense_2_out_4_V_address1 <= zext_ln1117_2_reg_1436(3 - 1 downto 0);

    dense_2_out_4_V_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_4_V_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_4_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_4_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_out_4_V_ce1 <= ap_const_logic_1;
        else 
            dense_2_out_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_V_address0_assign_proc : process(zext_ln48_reg_1349, grp_soft_max_fu_438_dense_array_V_address0, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_array_V_address0 <= zext_ln48_reg_1349(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_array_V_address0 <= grp_soft_max_fu_438_dense_array_V_address0;
        else 
            dense_array_V_address0 <= "XXXX";
        end if; 
    end process;


    dense_array_V_ce0_assign_proc : process(grp_soft_max_fu_438_dense_array_V_ce0, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_array_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_array_V_ce0 <= grp_soft_max_fu_438_dense_array_V_ce0;
        else 
            dense_array_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_V_ce1_assign_proc : process(grp_soft_max_fu_438_dense_array_V_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_array_V_ce1 <= grp_soft_max_fu_438_dense_array_V_ce1;
        else 
            dense_array_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_array_V_d0 <= std_logic_vector(signed(sext_ln1265_fu_1239_p1) + signed(p_Val2_0_reg_414));

    dense_array_V_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_array_V_we0 <= ap_const_logic_1;
        else 
            dense_array_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_array_V_we1_assign_proc : process(grp_soft_max_fu_438_dense_array_V_we1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_array_V_we1 <= grp_soft_max_fu_438_dense_array_V_we1;
        else 
            dense_array_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_out_bias_V_address0 <= zext_ln48_reg_1349(4 - 1 downto 0);

    dense_out_bias_V_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_out_bias_V_ce0 <= ap_const_logic_1;
        else 
            dense_out_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_out_weights_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln1116_2_fu_540_p1, zext_ln1116_17_fu_788_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_out_weights_V_address0 <= zext_ln1116_17_fu_788_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_out_weights_V_address0 <= zext_ln1116_2_fu_540_p1(9 - 1 downto 0);
            else 
                dense_out_weights_V_address0 <= "XXXXXXXXX";
            end if;
        else 
            dense_out_weights_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    dense_out_weights_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln1116_5_fu_593_p1, ap_block_pp0_stage1, zext_ln1116_20_fu_833_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_out_weights_V_address1 <= zext_ln1116_20_fu_833_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_out_weights_V_address1 <= zext_ln1116_5_fu_593_p1(9 - 1 downto 0);
            else 
                dense_out_weights_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            dense_out_weights_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    dense_out_weights_V_address2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln1116_8_fu_639_p1, ap_block_pp0_stage1, zext_ln1116_23_fu_878_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_out_weights_V_address2 <= zext_ln1116_23_fu_878_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_out_weights_V_address2 <= zext_ln1116_8_fu_639_p1(9 - 1 downto 0);
            else 
                dense_out_weights_V_address2 <= "XXXXXXXXX";
            end if;
        else 
            dense_out_weights_V_address2 <= "XXXXXXXXX";
        end if; 
    end process;


    dense_out_weights_V_address3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln1116_11_fu_685_p1, ap_block_pp0_stage1, zext_ln1116_26_fu_923_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_out_weights_V_address3 <= zext_ln1116_26_fu_923_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_out_weights_V_address3 <= zext_ln1116_11_fu_685_p1(9 - 1 downto 0);
            else 
                dense_out_weights_V_address3 <= "XXXXXXXXX";
            end if;
        else 
            dense_out_weights_V_address3 <= "XXXXXXXXX";
        end if; 
    end process;


    dense_out_weights_V_address4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln1116_14_fu_737_p1, ap_block_pp0_stage1, zext_ln1116_29_fu_968_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_out_weights_V_address4 <= zext_ln1116_29_fu_968_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_out_weights_V_address4 <= zext_ln1116_14_fu_737_p1(9 - 1 downto 0);
            else 
                dense_out_weights_V_address4 <= "XXXXXXXXX";
            end if;
        else 
            dense_out_weights_V_address4 <= "XXXXXXXXX";
        end if; 
    end process;


    dense_out_weights_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_out_weights_V_ce0 <= ap_const_logic_1;
        else 
            dense_out_weights_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_out_weights_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_out_weights_V_ce1 <= ap_const_logic_1;
        else 
            dense_out_weights_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_out_weights_V_ce2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_out_weights_V_ce2 <= ap_const_logic_1;
        else 
            dense_out_weights_V_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    dense_out_weights_V_ce3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_out_weights_V_ce3 <= ap_const_logic_1;
        else 
            dense_out_weights_V_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    dense_out_weights_V_ce4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_out_weights_V_ce4 <= ap_const_logic_1;
        else 
            dense_out_weights_V_ce4 <= ap_const_logic_0;
        end if; 
    end process;

    f_0_0_cast1_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_f_0_0_phi_fu_430_p4),6));
    grp_fu_1250_p0 <= grp_fu_1250_p00(13 - 1 downto 0);
    grp_fu_1250_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_0_V_loa_reg_1453),22));
    grp_fu_1250_p2 <= (p_Val2_0_reg_414 & ap_const_lv8_0);
    grp_fu_1259_p0 <= grp_fu_1259_p00(13 - 1 downto 0);
    grp_fu_1259_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_1_V_loa_reg_1458),22));
    grp_fu_1259_p2 <= (tmp_5_fu_1019_p4 & ap_const_lv8_0);
    grp_fu_1268_p0 <= grp_fu_1268_p00(13 - 1 downto 0);
    grp_fu_1268_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_2_V_loa_reg_1463),22));
    grp_fu_1268_p2 <= (tmp_8_fu_1043_p4 & ap_const_lv8_0);
    grp_fu_1277_p0 <= grp_fu_1277_p00(13 - 1 downto 0);
    grp_fu_1277_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_3_V_loa_reg_1468),22));
    grp_fu_1277_p2 <= (tmp_11_fu_1067_p4 & ap_const_lv8_0);
    grp_fu_1286_p0 <= grp_fu_1286_p00(13 - 1 downto 0);
    grp_fu_1286_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_4_V_loa_reg_1473),22));
    grp_fu_1286_p2 <= (tmp_14_fu_1091_p4 & ap_const_lv8_0);
    grp_fu_1295_p0 <= grp_fu_1295_p00(13 - 1 downto 0);
    grp_fu_1295_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_0_V_loa_1_reg_1483),22));
    grp_fu_1295_p2 <= (tmp_17_reg_1533 & ap_const_lv8_0);
    grp_fu_1304_p0 <= grp_fu_1304_p00(13 - 1 downto 0);
    grp_fu_1304_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_1_V_loa_1_reg_1493),22));
    grp_fu_1304_p2 <= (tmp_20_fu_1138_p4 & ap_const_lv8_0);
    grp_fu_1313_p0 <= grp_fu_1313_p00(13 - 1 downto 0);
    grp_fu_1313_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_2_V_q1),22));
    grp_fu_1313_p2 <= (tmp_23_fu_1163_p4 & ap_const_lv8_0);
    grp_fu_1322_p0 <= grp_fu_1322_p00(13 - 1 downto 0);
    grp_fu_1322_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_3_V_q1),22));
    grp_fu_1322_p2 <= (tmp_26_fu_1188_p4 & ap_const_lv8_0);
    grp_fu_1331_p0 <= grp_fu_1331_p00(13 - 1 downto 0);
    grp_fu_1331_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dense_2_out_4_V_q1),22));
    grp_fu_1331_p2 <= (tmp_29_fu_1213_p4 & ap_const_lv8_0);
    grp_soft_max_fu_438_ap_start <= grp_soft_max_fu_438_ap_start_reg;
    icmp_ln41_fu_471_p2 <= "1" when (d_0_reg_367 = ap_const_lv4_A) else "0";
    icmp_ln46_fu_495_p2 <= "1" when (ap_phi_mux_f_0_0_phi_fu_430_p4 = ap_const_lv5_1E) else "0";
    or_ln46_fu_552_p2 <= (ap_phi_mux_f_0_0_phi_fu_430_p4 or ap_const_lv5_1);
    prediction_V_address0 <= grp_soft_max_fu_438_prediction_V_address0;
    prediction_V_ce0 <= grp_soft_max_fu_438_prediction_V_ce0;
    prediction_V_d0 <= grp_soft_max_fu_438_prediction_V_d0;
    prediction_V_we0 <= grp_soft_max_fu_438_prediction_V_we0;
        sext_ln1265_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(dense_out_bias_V_q0),14));

    tmp_10_fu_662_p3 <= (add_ln46_1_fu_644_p2 & ap_const_lv1_0);
    tmp_11_fu_1067_p4 <= grp_fu_1268_p3(21 downto 8);
    tmp_12_fu_702_p3 <= (add_ln46_2_fu_696_p2 & ap_const_lv3_0);
    tmp_13_fu_714_p3 <= (add_ln46_2_fu_696_p2 & ap_const_lv1_0);
    tmp_14_fu_1091_p4 <= grp_fu_1277_p3(21 downto 8);
    tmp_15_fu_753_p3 <= (add_ln46_3_fu_748_p2 & ap_const_lv3_0);
    tmp_16_fu_765_p3 <= (add_ln46_3_fu_748_p2 & ap_const_lv1_0);
    tmp_18_fu_798_p3 <= (add_ln46_4_fu_793_p2 & ap_const_lv3_0);
    tmp_19_fu_810_p3 <= (add_ln46_4_fu_793_p2 & ap_const_lv1_0);
    tmp_1_fu_505_p3 <= (ap_phi_mux_f_0_0_phi_fu_430_p4 & ap_const_lv3_0);
    tmp_20_fu_1138_p4 <= grp_fu_1295_p3(21 downto 8);
    tmp_21_fu_843_p3 <= (add_ln46_5_fu_838_p2 & ap_const_lv3_0);
    tmp_22_fu_855_p3 <= (add_ln46_5_fu_838_p2 & ap_const_lv1_0);
    tmp_23_fu_1163_p4 <= grp_fu_1304_p3(21 downto 8);
    tmp_24_fu_888_p3 <= (add_ln46_6_fu_883_p2 & ap_const_lv3_0);
    tmp_25_fu_900_p3 <= (add_ln46_6_fu_883_p2 & ap_const_lv1_0);
    tmp_26_fu_1188_p4 <= grp_fu_1313_p3(21 downto 8);
    tmp_27_fu_933_p3 <= (add_ln46_7_fu_928_p2 & ap_const_lv3_0);
    tmp_28_fu_945_p3 <= (add_ln46_7_fu_928_p2 & ap_const_lv1_0);
    tmp_29_fu_1213_p4 <= grp_fu_1322_p3(21 downto 8);
    tmp_2_fu_517_p3 <= (ap_phi_mux_f_0_0_phi_fu_430_p4 & ap_const_lv1_0);
    tmp_3_fu_558_p3 <= (or_ln46_fu_552_p2 & ap_const_lv3_0);
    tmp_4_fu_570_p3 <= (or_ln46_fu_552_p2 & ap_const_lv1_0);
    tmp_5_fu_1019_p4 <= grp_fu_1250_p3(21 downto 8);
    tmp_6_fu_604_p3 <= (add_ln46_fu_598_p2 & ap_const_lv3_0);
    tmp_7_fu_616_p3 <= (add_ln46_fu_598_p2 & ap_const_lv1_0);
    tmp_8_fu_1043_p4 <= grp_fu_1259_p3(21 downto 8);
    tmp_9_fu_650_p3 <= (add_ln46_1_fu_644_p2 & ap_const_lv3_0);
    zext_ln1116_10_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_662_p3),10));
    zext_ln1116_11_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_7_fu_680_p2),64));
    zext_ln1116_12_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_702_p3),10));
    zext_ln1116_13_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_714_p3),10));
    zext_ln1116_14_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_9_fu_732_p2),64));
    zext_ln1116_15_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_753_p3),10));
    zext_ln1116_16_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_765_p3),10));
    zext_ln1116_17_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_11_fu_783_p2),64));
    zext_ln1116_18_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_798_p3),10));
    zext_ln1116_19_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_810_p3),10));
    zext_ln1116_1_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_517_p3),9));
    zext_ln1116_20_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_13_fu_828_p2),64));
    zext_ln1116_21_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_843_p3),10));
    zext_ln1116_22_fu_863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_855_p3),10));
    zext_ln1116_23_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_15_fu_873_p2),64));
    zext_ln1116_24_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_888_p3),10));
    zext_ln1116_25_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_900_p3),10));
    zext_ln1116_26_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_17_fu_918_p2),64));
    zext_ln1116_27_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_933_p3),10));
    zext_ln1116_28_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_945_p3),10));
    zext_ln1116_29_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_19_fu_963_p2),64));
    zext_ln1116_2_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_1_fu_535_p2),64));
    zext_ln1116_3_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_558_p3),9));
    zext_ln1116_4_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_570_p3),9));
    zext_ln1116_5_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_3_fu_588_p2),64));
    zext_ln1116_6_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_604_p3),9));
    zext_ln1116_7_fu_624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_616_p3),9));
    zext_ln1116_8_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1116_5_fu_634_p2),64));
    zext_ln1116_9_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_650_p3),10));
    zext_ln1116_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_505_p3),9));
    zext_ln1117_1_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_indvars_iv22_phi_fu_394_p4),64));
    zext_ln1117_2_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_indvars_iv14_phi_fu_406_p4),64));
    zext_ln1117_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_indvars_iv34_phi_fu_382_p4),64));
    zext_ln46_1_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_0_reg_367),9));
    zext_ln46_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_0_reg_367),10));
    zext_ln48_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_0_reg_367),64));
end behav;
