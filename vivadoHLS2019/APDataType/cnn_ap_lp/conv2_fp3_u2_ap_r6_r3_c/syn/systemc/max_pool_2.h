// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > conv_out_0_V_address0;
    sc_out< sc_logic > conv_out_0_V_ce0;
    sc_in< sc_lv<14> > conv_out_0_V_q0;
    sc_out< sc_lv<10> > conv_out_1_V_address0;
    sc_out< sc_logic > conv_out_1_V_ce0;
    sc_in< sc_lv<14> > conv_out_1_V_q0;
    sc_out< sc_lv<9> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<14> > max_pool_out_V_d0;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > f_fu_198_p2;
    sc_signal< sc_lv<5> > f_reg_423;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > zext_ln13_fu_204_p1;
    sc_signal< sc_lv<12> > zext_ln13_reg_428;
    sc_signal< sc_lv<1> > icmp_ln10_fu_192_p2;
    sc_signal< sc_lv<10> > zext_ln13_1_fu_208_p1;
    sc_signal< sc_lv<10> > zext_ln13_1_reg_433;
    sc_signal< sc_lv<3> > r_fu_218_p2;
    sc_signal< sc_lv<3> > r_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln_fu_224_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_446;
    sc_signal< sc_lv<1> > icmp_ln13_fu_212_p2;
    sc_signal< sc_lv<6> > add_ln203_fu_248_p2;
    sc_signal< sc_lv<6> > add_ln203_reg_451;
    sc_signal< sc_lv<3> > c_fu_260_p2;
    sc_signal< sc_lv<3> > c_reg_459;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > shl_ln1_fu_266_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_464;
    sc_signal< sc_lv<1> > icmp_ln16_fu_254_p2;
    sc_signal< sc_lv<2> > mpr_fu_284_p2;
    sc_signal< sc_lv<2> > mpr_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > trunc_ln26_fu_290_p1;
    sc_signal< sc_lv<1> > trunc_ln26_reg_477;
    sc_signal< sc_lv<1> > icmp_ln20_fu_278_p2;
    sc_signal< sc_lv<7> > mul_ln1494_fu_313_p2;
    sc_signal< sc_lv<7> > mul_ln1494_reg_482;
    sc_signal< sc_lv<2> > mpc_fu_356_p2;
    sc_signal< sc_lv<2> > mpc_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln23_fu_350_p2;
    sc_signal< sc_lv<14> > select_ln29_fu_412_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<5> > f_0_reg_111;
    sc_signal< sc_lv<3> > r_0_reg_122;
    sc_signal< sc_lv<3> > c_0_reg_133;
    sc_signal< sc_lv<14> > max_0_reg_145;
    sc_signal< sc_lv<2> > mpr_0_reg_158;
    sc_signal< sc_lv<14> > max_1_reg_169;
    sc_signal< sc_lv<2> > mpc_0_reg_181;
    sc_signal< sc_lv<64> > zext_ln203_3_fu_341_p1;
    sc_signal< sc_lv<64> > zext_ln1494_3_fu_393_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_236_p3;
    sc_signal< sc_lv<6> > zext_ln203_fu_232_p1;
    sc_signal< sc_lv<6> > zext_ln203_1_fu_244_p1;
    sc_signal< sc_lv<4> > zext_ln20_fu_274_p1;
    sc_signal< sc_lv<4> > i_fu_294_p2;
    sc_signal< sc_lv<3> > tmp_5_fu_299_p4;
    sc_signal< sc_lv<3> > mul_ln1494_fu_313_p1;
    sc_signal< sc_lv<6> > zext_ln203_2_fu_319_p1;
    sc_signal< sc_lv<6> > add_ln203_1_fu_323_p2;
    sc_signal< sc_lv<10> > tmp_6_cast_fu_328_p3;
    sc_signal< sc_lv<10> > add_ln203_2_fu_336_p2;
    sc_signal< sc_lv<4> > zext_ln23_fu_346_p1;
    sc_signal< sc_lv<4> > j_fu_362_p2;
    sc_signal< sc_lv<7> > zext_ln1494_1_fu_367_p1;
    sc_signal< sc_lv<7> > add_ln1494_fu_371_p2;
    sc_signal< sc_lv<11> > tmp_6_fu_376_p3;
    sc_signal< sc_lv<12> > zext_ln1494_2_fu_384_p1;
    sc_signal< sc_lv<12> > add_ln1494_1_fu_388_p2;
    sc_signal< sc_lv<14> > max_V_fu_399_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_406_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<7> > mul_ln1494_fu_313_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<7> ap_const_lv7_B;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln1494_1_fu_388_p2();
    void thread_add_ln1494_fu_371_p2();
    void thread_add_ln203_1_fu_323_p2();
    void thread_add_ln203_2_fu_336_p2();
    void thread_add_ln203_fu_248_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_260_p2();
    void thread_conv_out_0_V_address0();
    void thread_conv_out_0_V_ce0();
    void thread_conv_out_1_V_address0();
    void thread_conv_out_1_V_ce0();
    void thread_f_fu_198_p2();
    void thread_i_fu_294_p2();
    void thread_icmp_ln10_fu_192_p2();
    void thread_icmp_ln13_fu_212_p2();
    void thread_icmp_ln1494_fu_406_p2();
    void thread_icmp_ln16_fu_254_p2();
    void thread_icmp_ln20_fu_278_p2();
    void thread_icmp_ln23_fu_350_p2();
    void thread_j_fu_362_p2();
    void thread_max_V_fu_399_p3();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mpc_fu_356_p2();
    void thread_mpr_fu_284_p2();
    void thread_mul_ln1494_fu_313_p1();
    void thread_mul_ln1494_fu_313_p10();
    void thread_mul_ln1494_fu_313_p2();
    void thread_r_fu_218_p2();
    void thread_select_ln29_fu_412_p3();
    void thread_shl_ln1_fu_266_p3();
    void thread_shl_ln_fu_224_p3();
    void thread_tmp_4_fu_236_p3();
    void thread_tmp_5_fu_299_p4();
    void thread_tmp_6_cast_fu_328_p3();
    void thread_tmp_6_fu_376_p3();
    void thread_trunc_ln26_fu_290_p1();
    void thread_zext_ln13_1_fu_208_p1();
    void thread_zext_ln13_fu_204_p1();
    void thread_zext_ln1494_1_fu_367_p1();
    void thread_zext_ln1494_2_fu_384_p1();
    void thread_zext_ln1494_3_fu_393_p1();
    void thread_zext_ln203_1_fu_244_p1();
    void thread_zext_ln203_2_fu_319_p1();
    void thread_zext_ln203_3_fu_341_p1();
    void thread_zext_ln203_fu_232_p1();
    void thread_zext_ln20_fu_274_p1();
    void thread_zext_ln23_fu_346_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
