// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=19.866250,HLS_SYN_LAT=337957,HLS_SYN_TPT=none,HLS_SYN_MEM=39,HLS_SYN_DSP=41,HLS_SYN_FF=5916,HLS_SYN_LUT=18716,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_input_address0,
        cnn_input_ce0,
        cnn_input_q0,
        prediction_output_address0,
        prediction_output_ce0,
        prediction_output_we0,
        prediction_output_d0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] cnn_input_address0;
output   cnn_input_ce0;
input  [31:0] cnn_input_q0;
output  [3:0] prediction_output_address0;
output   prediction_output_ce0;
output   prediction_output_we0;
output  [31:0] prediction_output_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cnn_input_ce0;
reg prediction_output_ce0;
reg prediction_output_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] add_ln23_fu_691_p2;
reg   [10:0] add_ln23_reg_1475;
wire    ap_CS_fsm_state2;
wire   [4:0] i_1_fu_703_p2;
reg   [4:0] i_1_reg_1483;
wire   [9:0] ix_in_fu_709_p2;
reg   [9:0] ix_in_reg_1488;
wire   [0:0] icmp_ln23_fu_697_p2;
wire   [2:0] trunc_ln203_fu_715_p1;
reg   [2:0] trunc_ln203_reg_1493;
wire   [7:0] add_ln203_fu_757_p2;
reg   [7:0] add_ln203_reg_1497;
wire   [7:0] add_ln203_11_fu_763_p2;
reg   [7:0] add_ln203_11_reg_1502;
wire   [4:0] j_fu_775_p2;
reg   [4:0] j_reg_1510;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_769_p2;
wire   [10:0] add_ln203_14_fu_786_p2;
reg   [10:0] add_ln203_14_reg_1520;
wire   [7:0] add_ln203_12_fu_806_p2;
reg   [7:0] add_ln203_12_reg_1525;
wire   [7:0] add_ln203_13_fu_811_p2;
reg   [7:0] add_ln203_13_reg_1530;
wire   [4:0] select_ln23_fu_828_p3;
reg   [31:0] cnn_input_load_reg_1540;
wire    ap_CS_fsm_state4;
reg   [0:0] p_Result_31_reg_1546;
wire    ap_CS_fsm_state5;
wire   [51:0] trunc_ln565_fu_866_p1;
reg   [51:0] trunc_ln565_reg_1551;
wire   [0:0] icmp_ln571_fu_870_p2;
reg   [0:0] icmp_ln571_reg_1556;
wire   [11:0] F2_fu_876_p2;
reg   [11:0] F2_reg_1562;
wire   [4:0] select_ln28_fu_1133_p3;
wire    ap_CS_fsm_state6;
wire   [9:0] add_ln28_fu_1141_p2;
wire   [3:0] i_fu_1153_p2;
reg   [3:0] i_reg_1586;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln70_fu_1159_p1;
reg   [63:0] zext_ln70_reg_1591;
wire   [0:0] icmp_ln69_fu_1147_p2;
wire   [0:0] icmp_ln935_fu_1164_p2;
reg   [0:0] icmp_ln935_reg_1601;
wire    ap_CS_fsm_state24;
wire   [0:0] p_Result_33_fu_1170_p3;
reg   [0:0] p_Result_33_reg_1606;
wire   [13:0] tmp_V_9_fu_1184_p3;
reg   [13:0] tmp_V_9_reg_1611;
wire   [31:0] sub_ln944_fu_1218_p2;
reg   [31:0] sub_ln944_reg_1616;
wire   [31:0] or_ln_fu_1328_p3;
reg   [31:0] or_ln_reg_1622;
wire   [0:0] icmp_ln958_fu_1336_p2;
reg   [0:0] icmp_ln958_reg_1627;
wire   [7:0] trunc_ln943_fu_1342_p1;
reg   [7:0] trunc_ln943_reg_1632;
reg   [6:0] conv_1_input_0_0_V_address0;
reg    conv_1_input_0_0_V_ce0;
reg    conv_1_input_0_0_V_we0;
wire   [13:0] conv_1_input_0_0_V_q0;
reg   [6:0] conv_1_input_0_1_V_address0;
reg    conv_1_input_0_1_V_ce0;
reg    conv_1_input_0_1_V_we0;
wire   [13:0] conv_1_input_0_1_V_q0;
reg   [6:0] conv_1_input_0_2_V_address0;
reg    conv_1_input_0_2_V_ce0;
reg    conv_1_input_0_2_V_we0;
wire   [13:0] conv_1_input_0_2_V_q0;
reg   [6:0] conv_1_input_1_0_V_address0;
reg    conv_1_input_1_0_V_ce0;
reg    conv_1_input_1_0_V_we0;
wire   [13:0] conv_1_input_1_0_V_q0;
reg   [6:0] conv_1_input_1_1_V_address0;
reg    conv_1_input_1_1_V_ce0;
reg    conv_1_input_1_1_V_we0;
wire   [13:0] conv_1_input_1_1_V_q0;
reg   [6:0] conv_1_input_1_2_V_address0;
reg    conv_1_input_1_2_V_ce0;
reg    conv_1_input_1_2_V_we0;
wire   [13:0] conv_1_input_1_2_V_q0;
reg   [6:0] conv_1_input_2_0_V_address0;
reg    conv_1_input_2_0_V_ce0;
reg    conv_1_input_2_0_V_we0;
wire   [13:0] conv_1_input_2_0_V_q0;
reg   [6:0] conv_1_input_2_1_V_address0;
reg    conv_1_input_2_1_V_ce0;
reg    conv_1_input_2_1_V_we0;
wire   [13:0] conv_1_input_2_1_V_q0;
reg   [6:0] conv_1_input_2_2_V_address0;
reg    conv_1_input_2_2_V_ce0;
reg    conv_1_input_2_2_V_we0;
wire   [13:0] conv_1_input_2_2_V_q0;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg    conv_1_out_V_ce1;
reg    conv_1_out_V_we1;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg   [10:0] conv_2_out_V_address0;
reg    conv_2_out_V_ce0;
reg    conv_2_out_V_we0;
reg   [13:0] conv_2_out_V_d0;
wire   [13:0] conv_2_out_V_q0;
reg   [8:0] max_pool_2_out_V_address0;
reg    max_pool_2_out_V_ce0;
reg    max_pool_2_out_V_we0;
reg   [13:0] max_pool_2_out_V_d0;
wire   [13:0] max_pool_2_out_V_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire   [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_conv_1_fu_609_ap_start;
wire    grp_conv_1_fu_609_ap_done;
wire    grp_conv_1_fu_609_ap_idle;
wire    grp_conv_1_fu_609_ap_ready;
wire   [6:0] grp_conv_1_fu_609_input_0_0_V_address0;
wire    grp_conv_1_fu_609_input_0_0_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_0_1_V_address0;
wire    grp_conv_1_fu_609_input_0_1_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_0_2_V_address0;
wire    grp_conv_1_fu_609_input_0_2_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_1_0_V_address0;
wire    grp_conv_1_fu_609_input_1_0_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_1_1_V_address0;
wire    grp_conv_1_fu_609_input_1_1_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_1_2_V_address0;
wire    grp_conv_1_fu_609_input_1_2_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_2_0_V_address0;
wire    grp_conv_1_fu_609_input_2_0_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_2_1_V_address0;
wire    grp_conv_1_fu_609_input_2_1_V_ce0;
wire   [6:0] grp_conv_1_fu_609_input_2_2_V_address0;
wire    grp_conv_1_fu_609_input_2_2_V_ce0;
wire   [11:0] grp_conv_1_fu_609_conv_out_V_address0;
wire    grp_conv_1_fu_609_conv_out_V_ce0;
wire    grp_conv_1_fu_609_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_609_conv_out_V_d0;
wire   [11:0] grp_conv_1_fu_609_conv_out_V_address1;
wire    grp_conv_1_fu_609_conv_out_V_ce1;
wire    grp_conv_1_fu_609_conv_out_V_we1;
wire   [13:0] grp_conv_1_fu_609_conv_out_V_d1;
wire    grp_conv_2_fu_623_ap_start;
wire    grp_conv_2_fu_623_ap_done;
wire    grp_conv_2_fu_623_ap_idle;
wire    grp_conv_2_fu_623_ap_ready;
wire   [9:0] grp_conv_2_fu_623_input_V_address0;
wire    grp_conv_2_fu_623_input_V_ce0;
wire   [10:0] grp_conv_2_fu_623_conv_out_V_address0;
wire    grp_conv_2_fu_623_conv_out_V_ce0;
wire    grp_conv_2_fu_623_conv_out_V_we0;
wire   [13:0] grp_conv_2_fu_623_conv_out_V_d0;
wire    grp_dense_out_fu_633_ap_start;
wire    grp_dense_out_fu_633_ap_done;
wire    grp_dense_out_fu_633_ap_idle;
wire    grp_dense_out_fu_633_ap_ready;
wire   [4:0] grp_dense_out_fu_633_dense_2_out_V_address0;
wire    grp_dense_out_fu_633_dense_2_out_V_ce0;
wire   [3:0] grp_dense_out_fu_633_prediction_V_address0;
wire    grp_dense_out_fu_633_prediction_V_ce0;
wire    grp_dense_out_fu_633_prediction_V_we0;
wire   [13:0] grp_dense_out_fu_633_prediction_V_d0;
wire    grp_max_pool_1_fu_649_ap_start;
wire    grp_max_pool_1_fu_649_ap_done;
wire    grp_max_pool_1_fu_649_ap_idle;
wire    grp_max_pool_1_fu_649_ap_ready;
wire   [11:0] grp_max_pool_1_fu_649_conv_out_V_address0;
wire    grp_max_pool_1_fu_649_conv_out_V_ce0;
wire   [9:0] grp_max_pool_1_fu_649_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_649_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_649_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_649_max_pool_out_V_d0;
wire    grp_max_pool_2_fu_655_ap_start;
wire    grp_max_pool_2_fu_655_ap_done;
wire    grp_max_pool_2_fu_655_ap_idle;
wire    grp_max_pool_2_fu_655_ap_ready;
wire   [10:0] grp_max_pool_2_fu_655_conv_out_V_address0;
wire    grp_max_pool_2_fu_655_conv_out_V_ce0;
wire   [8:0] grp_max_pool_2_fu_655_max_pool_out_V_address0;
wire    grp_max_pool_2_fu_655_max_pool_out_V_ce0;
wire    grp_max_pool_2_fu_655_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_2_fu_655_max_pool_out_V_d0;
wire    grp_dense_1_fu_661_ap_start;
wire    grp_dense_1_fu_661_ap_done;
wire    grp_dense_1_fu_661_ap_idle;
wire    grp_dense_1_fu_661_ap_ready;
wire   [8:0] grp_dense_1_fu_661_flat_array_V_address0;
wire    grp_dense_1_fu_661_flat_array_V_ce0;
wire   [5:0] grp_dense_1_fu_661_dense_1_out_V_address0;
wire    grp_dense_1_fu_661_dense_1_out_V_ce0;
wire    grp_dense_1_fu_661_dense_1_out_V_we0;
wire   [12:0] grp_dense_1_fu_661_dense_1_out_V_d0;
wire    grp_dense_2_fu_671_ap_start;
wire    grp_dense_2_fu_671_ap_done;
wire    grp_dense_2_fu_671_ap_idle;
wire    grp_dense_2_fu_671_ap_ready;
wire   [5:0] grp_dense_2_fu_671_dense_1_out_V_address0;
wire    grp_dense_2_fu_671_dense_1_out_V_ce0;
wire   [4:0] grp_dense_2_fu_671_dense_2_out_V_address0;
wire    grp_dense_2_fu_671_dense_2_out_V_ce0;
wire    grp_dense_2_fu_671_dense_2_out_V_we0;
wire   [12:0] grp_dense_2_fu_671_dense_2_out_V_d0;
wire    grp_flat_fu_681_ap_start;
wire    grp_flat_fu_681_ap_done;
wire    grp_flat_fu_681_ap_idle;
wire    grp_flat_fu_681_ap_ready;
wire   [8:0] grp_flat_fu_681_max_pool_out_V_address0;
wire    grp_flat_fu_681_max_pool_out_V_ce0;
wire   [8:0] grp_flat_fu_681_flat_array_V_address0;
wire    grp_flat_fu_681_flat_array_V_ce0;
wire    grp_flat_fu_681_flat_array_V_we0;
wire   [13:0] grp_flat_fu_681_flat_array_V_d0;
reg   [9:0] ix_in_0_reg_507;
reg   [4:0] i_0_reg_519;
reg   [10:0] phi_mul5_reg_530;
reg   [4:0] phi_urem7_reg_541;
reg   [9:0] ix_in_1_reg_553;
reg   [4:0] j_0_reg_564;
reg   [10:0] phi_mul_reg_575;
reg   [4:0] phi_urem_reg_586;
reg   [3:0] i24_0_reg_598;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state25;
reg    grp_conv_1_fu_609_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_conv_2_fu_623_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_dense_out_fu_633_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_max_pool_1_fu_649_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_max_pool_2_fu_655_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_dense_1_fu_661_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_dense_2_fu_671_ap_start_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_flat_fu_681_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln27_fu_781_p1;
wire   [63:0] zext_ln203_24_fu_1106_p1;
wire   [63:0] zext_ln203_25_fu_1112_p1;
wire   [2:0] trunc_ln203_1_fu_1102_p1;
wire   [13:0] select_ln603_fu_1085_p3;
wire   [3:0] tmp_95_fu_719_p4;
wire   [6:0] tmp_96_fu_733_p3;
wire   [4:0] tmp_97_fu_745_p3;
wire   [7:0] zext_ln203_22_fu_753_p1;
wire   [7:0] zext_ln203_21_fu_741_p1;
wire   [7:0] zext_ln203_fu_729_p1;
wire   [3:0] tmp_104_fu_792_p4;
wire   [7:0] zext_ln203_23_fu_802_p1;
wire   [4:0] add_ln23_5_fu_816_p2;
wire   [0:0] icmp_ln23_1_fu_822_p2;
wire   [63:0] grp_fu_687_p1;
wire   [63:0] ireg_V_fu_836_p1;
wire   [10:0] exp_tmp_V_fu_852_p4;
wire   [62:0] trunc_ln556_fu_840_p1;
wire   [11:0] zext_ln461_fu_862_p1;
wire   [52:0] tmp_fu_882_p3;
wire   [53:0] p_Result_32_fu_889_p1;
wire   [53:0] man_V_1_fu_893_p2;
wire   [0:0] icmp_ln581_fu_906_p2;
wire   [11:0] add_ln581_fu_911_p2;
wire   [11:0] sub_ln581_fu_916_p2;
wire  signed [11:0] sh_amt_fu_921_p3;
wire   [53:0] man_V_2_fu_899_p3;
wire  signed [31:0] sext_ln581_fu_929_p1;
wire   [53:0] zext_ln586_fu_954_p1;
wire   [53:0] ashr_ln586_fu_958_p2;
wire   [31:0] bitcast_ln696_fu_968_p1;
wire   [0:0] tmp_103_fu_971_p3;
wire   [13:0] trunc_ln583_fu_938_p1;
wire   [13:0] sext_ln581cast_fu_987_p1;
wire   [0:0] icmp_ln582_fu_933_p2;
wire   [0:0] xor_ln571_fu_997_p2;
wire   [0:0] and_ln582_fu_1002_p2;
wire   [0:0] or_ln582_fu_1016_p2;
wire   [0:0] xor_ln582_fu_1021_p2;
wire   [0:0] icmp_ln585_fu_942_p2;
wire   [0:0] and_ln581_fu_1027_p2;
wire   [0:0] xor_ln585_fu_1033_p2;
wire   [0:0] and_ln585_fu_1039_p2;
wire   [13:0] select_ln588_fu_979_p3;
wire   [13:0] select_ln582_fu_1008_p3;
wire   [0:0] and_ln585_1_fu_1053_p2;
wire   [13:0] trunc_ln586_fu_964_p1;
wire   [13:0] select_ln585_fu_1045_p3;
wire   [0:0] or_ln581_fu_1067_p2;
wire   [0:0] icmp_ln603_fu_948_p2;
wire   [0:0] xor_ln581_fu_1073_p2;
wire   [0:0] and_ln603_fu_1079_p2;
wire   [13:0] shl_ln604_fu_991_p2;
wire   [13:0] select_ln585_1_fu_1059_p3;
wire   [4:0] add_ln28_2_fu_1121_p2;
wire   [0:0] icmp_ln28_fu_1127_p2;
wire   [13:0] tmp_V_fu_1178_p2;
reg   [13:0] p_Result_13_fu_1192_p4;
wire   [31:0] p_Result_34_fu_1202_p3;
reg   [31:0] l_fu_1210_p3;
wire   [31:0] lsb_index_fu_1228_p2;
wire   [30:0] tmp_99_fu_1234_p4;
wire   [3:0] trunc_ln947_fu_1250_p1;
wire   [3:0] sub_ln947_fu_1254_p2;
wire   [13:0] zext_ln947_fu_1260_p1;
wire   [13:0] lshr_ln947_fu_1264_p2;
wire   [13:0] p_Result_s_fu_1270_p2;
wire   [0:0] icmp_ln947_fu_1244_p2;
wire   [0:0] icmp_ln947_1_fu_1276_p2;
wire   [0:0] tmp_100_fu_1288_p3;
wire   [13:0] trunc_ln944_fu_1224_p1;
wire   [13:0] add_ln949_fu_1302_p2;
wire   [0:0] p_Result_27_fu_1308_p3;
wire   [0:0] xor_ln949_fu_1296_p2;
wire   [0:0] and_ln949_fu_1316_p2;
wire   [0:0] a_fu_1282_p2;
wire   [0:0] or_ln949_fu_1322_p2;
wire   [31:0] m_fu_1346_p1;
wire   [31:0] add_ln958_fu_1349_p2;
wire   [31:0] sub_ln958_fu_1360_p2;
wire   [31:0] lshr_ln958_fu_1354_p2;
wire   [31:0] shl_ln958_fu_1365_p2;
wire   [31:0] m_7_fu_1371_p3;
wire   [31:0] m_8_fu_1378_p2;
wire   [30:0] m_s_fu_1383_p4;
wire   [0:0] tmp_101_fu_1397_p3;
wire   [7:0] select_ln964_fu_1405_p3;
wire   [7:0] sub_ln964_fu_1413_p2;
wire   [7:0] add_ln964_fu_1418_p2;
wire   [31:0] m_11_fu_1393_p1;
wire   [8:0] tmp_s_fu_1424_p3;
wire   [31:0] p_Result_35_fu_1431_p5;
wire   [31:0] bitcast_ln739_fu_1443_p1;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_conv_1_fu_609_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_623_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_633_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_649_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_655_ap_start_reg = 1'b0;
#0 grp_dense_1_fu_661_ap_start_reg = 1'b0;
#0 grp_dense_2_fu_671_ap_start_reg = 1'b0;
#0 grp_flat_fu_681_ap_start_reg = 1'b0;
end

cnn_conv_1_input_Gfk #(
    .DataWidth( 14 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
conv_1_input_0_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_0_0_V_address0),
    .ce0(conv_1_input_0_0_V_ce0),
    .we0(conv_1_input_0_0_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_0_0_V_q0)
);

cnn_conv_1_input_Hfu #(
    .DataWidth( 14 ),
    .AddressRange( 90 ),
    .AddressWidth( 7 ))
conv_1_input_0_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_0_1_V_address0),
    .ce0(conv_1_input_0_1_V_ce0),
    .we0(conv_1_input_0_1_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_0_1_V_q0)
);

cnn_conv_1_input_Hfu #(
    .DataWidth( 14 ),
    .AddressRange( 90 ),
    .AddressWidth( 7 ))
conv_1_input_0_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_0_2_V_address0),
    .ce0(conv_1_input_0_2_V_ce0),
    .we0(conv_1_input_0_2_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_0_2_V_q0)
);

cnn_conv_1_input_Hfu #(
    .DataWidth( 14 ),
    .AddressRange( 90 ),
    .AddressWidth( 7 ))
conv_1_input_1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_1_0_V_address0),
    .ce0(conv_1_input_1_0_V_ce0),
    .we0(conv_1_input_1_0_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_1_0_V_q0)
);

cnn_conv_1_input_KfY #(
    .DataWidth( 14 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
conv_1_input_1_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_1_1_V_address0),
    .ce0(conv_1_input_1_1_V_ce0),
    .we0(conv_1_input_1_1_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_1_1_V_q0)
);

cnn_conv_1_input_KfY #(
    .DataWidth( 14 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
conv_1_input_1_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_1_2_V_address0),
    .ce0(conv_1_input_1_2_V_ce0),
    .we0(conv_1_input_1_2_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_1_2_V_q0)
);

cnn_conv_1_input_Hfu #(
    .DataWidth( 14 ),
    .AddressRange( 90 ),
    .AddressWidth( 7 ))
conv_1_input_2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_2_0_V_address0),
    .ce0(conv_1_input_2_0_V_ce0),
    .we0(conv_1_input_2_0_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_2_0_V_q0)
);

cnn_conv_1_input_KfY #(
    .DataWidth( 14 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
conv_1_input_2_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_2_1_V_address0),
    .ce0(conv_1_input_2_1_V_ce0),
    .we0(conv_1_input_2_1_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_2_1_V_q0)
);

cnn_conv_1_input_KfY #(
    .DataWidth( 14 ),
    .AddressRange( 81 ),
    .AddressWidth( 7 ))
conv_1_input_2_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_2_2_V_address0),
    .ce0(conv_1_input_2_2_V_ce0),
    .we0(conv_1_input_2_2_V_we0),
    .d0(select_ln603_fu_1085_p3),
    .q0(conv_1_input_2_2_V_q0)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0),
    .address1(grp_conv_1_fu_609_conv_out_V_address1),
    .ce1(conv_1_out_V_ce1),
    .we1(conv_1_out_V_we1),
    .d1(grp_conv_1_fu_609_conv_out_V_d1)
);

cnn_max_pool_1_ouPgM #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0)
);

cnn_conv_2_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_V_address0),
    .ce0(conv_2_out_V_ce0),
    .we0(conv_2_out_V_we0),
    .d0(conv_2_out_V_d0),
    .q0(conv_2_out_V_q0)
);

cnn_max_pool_2_ouQgW #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_V_address0),
    .ce0(max_pool_2_out_V_ce0),
    .we0(max_pool_2_out_V_we0),
    .d0(max_pool_2_out_V_d0),
    .q0(max_pool_2_out_V_q0)
);

cnn_max_pool_2_ouQgW #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

dense_out_dense_aEe0 #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

conv_1 grp_conv_1_fu_609(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_1_fu_609_ap_start),
    .ap_done(grp_conv_1_fu_609_ap_done),
    .ap_idle(grp_conv_1_fu_609_ap_idle),
    .ap_ready(grp_conv_1_fu_609_ap_ready),
    .input_0_0_V_address0(grp_conv_1_fu_609_input_0_0_V_address0),
    .input_0_0_V_ce0(grp_conv_1_fu_609_input_0_0_V_ce0),
    .input_0_0_V_q0(conv_1_input_0_0_V_q0),
    .input_0_1_V_address0(grp_conv_1_fu_609_input_0_1_V_address0),
    .input_0_1_V_ce0(grp_conv_1_fu_609_input_0_1_V_ce0),
    .input_0_1_V_q0(conv_1_input_0_1_V_q0),
    .input_0_2_V_address0(grp_conv_1_fu_609_input_0_2_V_address0),
    .input_0_2_V_ce0(grp_conv_1_fu_609_input_0_2_V_ce0),
    .input_0_2_V_q0(conv_1_input_0_2_V_q0),
    .input_1_0_V_address0(grp_conv_1_fu_609_input_1_0_V_address0),
    .input_1_0_V_ce0(grp_conv_1_fu_609_input_1_0_V_ce0),
    .input_1_0_V_q0(conv_1_input_1_0_V_q0),
    .input_1_1_V_address0(grp_conv_1_fu_609_input_1_1_V_address0),
    .input_1_1_V_ce0(grp_conv_1_fu_609_input_1_1_V_ce0),
    .input_1_1_V_q0(conv_1_input_1_1_V_q0),
    .input_1_2_V_address0(grp_conv_1_fu_609_input_1_2_V_address0),
    .input_1_2_V_ce0(grp_conv_1_fu_609_input_1_2_V_ce0),
    .input_1_2_V_q0(conv_1_input_1_2_V_q0),
    .input_2_0_V_address0(grp_conv_1_fu_609_input_2_0_V_address0),
    .input_2_0_V_ce0(grp_conv_1_fu_609_input_2_0_V_ce0),
    .input_2_0_V_q0(conv_1_input_2_0_V_q0),
    .input_2_1_V_address0(grp_conv_1_fu_609_input_2_1_V_address0),
    .input_2_1_V_ce0(grp_conv_1_fu_609_input_2_1_V_ce0),
    .input_2_1_V_q0(conv_1_input_2_1_V_q0),
    .input_2_2_V_address0(grp_conv_1_fu_609_input_2_2_V_address0),
    .input_2_2_V_ce0(grp_conv_1_fu_609_input_2_2_V_ce0),
    .input_2_2_V_q0(conv_1_input_2_2_V_q0),
    .conv_out_V_address0(grp_conv_1_fu_609_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_609_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_609_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_609_conv_out_V_d0),
    .conv_out_V_address1(grp_conv_1_fu_609_conv_out_V_address1),
    .conv_out_V_ce1(grp_conv_1_fu_609_conv_out_V_ce1),
    .conv_out_V_we1(grp_conv_1_fu_609_conv_out_V_we1),
    .conv_out_V_d1(grp_conv_1_fu_609_conv_out_V_d1)
);

conv_2 grp_conv_2_fu_623(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_2_fu_623_ap_start),
    .ap_done(grp_conv_2_fu_623_ap_done),
    .ap_idle(grp_conv_2_fu_623_ap_idle),
    .ap_ready(grp_conv_2_fu_623_ap_ready),
    .input_V_address0(grp_conv_2_fu_623_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_623_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .conv_out_V_address0(grp_conv_2_fu_623_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_2_fu_623_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_2_fu_623_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_2_fu_623_conv_out_V_d0)
);

dense_out grp_dense_out_fu_633(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_out_fu_633_ap_start),
    .ap_done(grp_dense_out_fu_633_ap_done),
    .ap_idle(grp_dense_out_fu_633_ap_idle),
    .ap_ready(grp_dense_out_fu_633_ap_ready),
    .dense_2_out_V_address0(grp_dense_out_fu_633_dense_2_out_V_address0),
    .dense_2_out_V_ce0(grp_dense_out_fu_633_dense_2_out_V_ce0),
    .dense_2_out_V_q0(dense_2_out_V_q0),
    .prediction_V_address0(grp_dense_out_fu_633_prediction_V_address0),
    .prediction_V_ce0(grp_dense_out_fu_633_prediction_V_ce0),
    .prediction_V_we0(grp_dense_out_fu_633_prediction_V_we0),
    .prediction_V_d0(grp_dense_out_fu_633_prediction_V_d0)
);

max_pool_1 grp_max_pool_1_fu_649(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_1_fu_649_ap_start),
    .ap_done(grp_max_pool_1_fu_649_ap_done),
    .ap_idle(grp_max_pool_1_fu_649_ap_idle),
    .ap_ready(grp_max_pool_1_fu_649_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_649_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_649_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_1_fu_649_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_649_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_649_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_649_max_pool_out_V_d0)
);

max_pool_2 grp_max_pool_2_fu_655(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_2_fu_655_ap_start),
    .ap_done(grp_max_pool_2_fu_655_ap_done),
    .ap_idle(grp_max_pool_2_fu_655_ap_idle),
    .ap_ready(grp_max_pool_2_fu_655_ap_ready),
    .conv_out_V_address0(grp_max_pool_2_fu_655_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_2_fu_655_conv_out_V_ce0),
    .conv_out_V_q0(conv_2_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_2_fu_655_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_2_fu_655_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_2_fu_655_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_2_fu_655_max_pool_out_V_d0)
);

dense_1 grp_dense_1_fu_661(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_1_fu_661_ap_start),
    .ap_done(grp_dense_1_fu_661_ap_done),
    .ap_idle(grp_dense_1_fu_661_ap_idle),
    .ap_ready(grp_dense_1_fu_661_ap_ready),
    .flat_array_V_address0(grp_dense_1_fu_661_flat_array_V_address0),
    .flat_array_V_ce0(grp_dense_1_fu_661_flat_array_V_ce0),
    .flat_array_V_q0(flat_array_V_q0),
    .dense_1_out_V_address0(grp_dense_1_fu_661_dense_1_out_V_address0),
    .dense_1_out_V_ce0(grp_dense_1_fu_661_dense_1_out_V_ce0),
    .dense_1_out_V_we0(grp_dense_1_fu_661_dense_1_out_V_we0),
    .dense_1_out_V_d0(grp_dense_1_fu_661_dense_1_out_V_d0)
);

dense_2 grp_dense_2_fu_671(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_2_fu_671_ap_start),
    .ap_done(grp_dense_2_fu_671_ap_done),
    .ap_idle(grp_dense_2_fu_671_ap_idle),
    .ap_ready(grp_dense_2_fu_671_ap_ready),
    .dense_1_out_V_address0(grp_dense_2_fu_671_dense_1_out_V_address0),
    .dense_1_out_V_ce0(grp_dense_2_fu_671_dense_1_out_V_ce0),
    .dense_1_out_V_q0(dense_1_out_V_q0),
    .dense_2_out_V_address0(grp_dense_2_fu_671_dense_2_out_V_address0),
    .dense_2_out_V_ce0(grp_dense_2_fu_671_dense_2_out_V_ce0),
    .dense_2_out_V_we0(grp_dense_2_fu_671_dense_2_out_V_we0),
    .dense_2_out_V_d0(grp_dense_2_fu_671_dense_2_out_V_d0)
);

flat grp_flat_fu_681(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_flat_fu_681_ap_start),
    .ap_done(grp_flat_fu_681_ap_done),
    .ap_idle(grp_flat_fu_681_ap_idle),
    .ap_ready(grp_flat_fu_681_ap_ready),
    .max_pool_out_V_address0(grp_flat_fu_681_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_flat_fu_681_max_pool_out_V_ce0),
    .max_pool_out_V_q0(max_pool_2_out_V_q0),
    .flat_array_V_address0(grp_flat_fu_681_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_681_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_681_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_681_flat_array_V_d0)
);

cnn_fpext_32ns_64Rg6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64Rg6_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cnn_input_q0),
    .ce(1'b1),
    .dout(grp_fu_687_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_1_fu_609_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_609_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_609_ap_ready == 1'b1)) begin
            grp_conv_1_fu_609_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_2_fu_623_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_623_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_623_ap_ready == 1'b1)) begin
            grp_conv_2_fu_623_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_1_fu_661_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_dense_1_fu_661_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_661_ap_ready == 1'b1)) begin
            grp_dense_1_fu_661_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_2_fu_671_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_dense_2_fu_671_ap_start_reg <= 1'b1;
        end else if ((grp_dense_2_fu_671_ap_ready == 1'b1)) begin
            grp_dense_2_fu_671_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_out_fu_633_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_dense_out_fu_633_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_633_ap_ready == 1'b1)) begin
            grp_dense_out_fu_633_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_flat_fu_681_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_681_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_681_ap_ready == 1'b1)) begin
            grp_flat_fu_681_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_1_fu_649_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_649_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_649_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_649_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_2_fu_655_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_655_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_655_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_655_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i24_0_reg_598 <= i_reg_1586;
    end else if (((grp_dense_out_fu_633_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        i24_0_reg_598 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_519 <= i_1_reg_1483;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_519 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_507 <= ix_in_reg_1488;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_507 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_553 <= add_ln28_fu_1141_p2;
    end else if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_553 <= ix_in_0_reg_507;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_564 <= j_reg_1510;
    end else if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_564 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul5_reg_530 <= add_ln23_reg_1475;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul5_reg_530 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_mul_reg_575 <= add_ln203_14_reg_1520;
    end else if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_575 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_urem7_reg_541 <= select_ln23_fu_828_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_urem7_reg_541 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_urem_reg_586 <= select_ln28_fu_1133_p3;
    end else if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_urem_reg_586 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        F2_reg_1562 <= F2_fu_876_p2;
        icmp_ln571_reg_1556 <= icmp_ln571_fu_870_p2;
        p_Result_31_reg_1546 <= ireg_V_fu_836_p1[32'd63];
        trunc_ln565_reg_1551 <= trunc_ln565_fu_866_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln203_11_reg_1502 <= add_ln203_11_fu_763_p2;
        add_ln203_reg_1497[7 : 1] <= add_ln203_fu_757_p2[7 : 1];
        ix_in_reg_1488 <= ix_in_fu_709_p2;
        trunc_ln203_reg_1493 <= trunc_ln203_fu_715_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_769_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln203_12_reg_1525 <= add_ln203_12_fu_806_p2;
        add_ln203_13_reg_1530 <= add_ln203_13_fu_811_p2;
        add_ln203_14_reg_1520 <= add_ln203_14_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln23_reg_1475 <= add_ln23_fu_691_p2;
        i_1_reg_1483 <= i_1_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_1540 <= cnn_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_reg_1586 <= i_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        icmp_ln935_reg_1601 <= icmp_ln935_fu_1164_p2;
        icmp_ln958_reg_1627 <= icmp_ln958_fu_1336_p2;
        or_ln_reg_1622[0] <= or_ln_fu_1328_p3[0];
        p_Result_33_reg_1606 <= prediction_V_q0[32'd13];
        sub_ln944_reg_1616 <= sub_ln944_fu_1218_p2;
        tmp_V_9_reg_1611 <= tmp_V_9_fu_1184_p3;
        trunc_ln943_reg_1632 <= trunc_ln943_fu_1342_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1510 <= j_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        zext_ln70_reg_1591[3 : 0] <= zext_ln70_fu_1159_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1147_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1147_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_ce0 = 1'b1;
    end else begin
        cnn_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_0_V_address0 = zext_ln203_24_fu_1106_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_0_V_address0 = grp_conv_1_fu_609_input_0_0_V_address0;
    end else begin
        conv_1_input_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_0_V_ce0 = grp_conv_1_fu_609_input_0_0_V_ce0;
    end else begin
        conv_1_input_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_reg_1493 == 3'd0) & (trunc_ln203_1_fu_1102_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_0_0_V_we0 = 1'b1;
    end else begin
        conv_1_input_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_1_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_1_V_address0 = grp_conv_1_fu_609_input_0_1_V_address0;
    end else begin
        conv_1_input_0_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_1_V_ce0 = grp_conv_1_fu_609_input_0_1_V_ce0;
    end else begin
        conv_1_input_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_reg_1493 == 3'd0) & (trunc_ln203_1_fu_1102_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_0_1_V_we0 = 1'b1;
    end else begin
        conv_1_input_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_2_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_2_V_address0 = grp_conv_1_fu_609_input_0_2_V_address0;
    end else begin
        conv_1_input_0_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_0_2_V_ce0 = grp_conv_1_fu_609_input_0_2_V_ce0;
    end else begin
        conv_1_input_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_1_fu_1102_p1 == 3'd0) & ~(trunc_ln203_1_fu_1102_p1 == 3'd1) & (trunc_ln203_reg_1493 == 3'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_0_2_V_we0 = 1'b1;
    end else begin
        conv_1_input_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_0_V_address0 = zext_ln203_24_fu_1106_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_0_V_address0 = grp_conv_1_fu_609_input_1_0_V_address0;
    end else begin
        conv_1_input_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_0_V_ce0 = grp_conv_1_fu_609_input_1_0_V_ce0;
    end else begin
        conv_1_input_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_reg_1493 == 3'd1) & (trunc_ln203_1_fu_1102_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_1_0_V_we0 = 1'b1;
    end else begin
        conv_1_input_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_1_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_1_V_address0 = grp_conv_1_fu_609_input_1_1_V_address0;
    end else begin
        conv_1_input_1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_1_V_ce0 = grp_conv_1_fu_609_input_1_1_V_ce0;
    end else begin
        conv_1_input_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln203_reg_1493 == 3'd1) & (trunc_ln203_1_fu_1102_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_1_1_V_we0 = 1'b1;
    end else begin
        conv_1_input_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_2_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_2_V_address0 = grp_conv_1_fu_609_input_1_2_V_address0;
    end else begin
        conv_1_input_1_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_1_2_V_ce0 = grp_conv_1_fu_609_input_1_2_V_ce0;
    end else begin
        conv_1_input_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_1_fu_1102_p1 == 3'd0) & ~(trunc_ln203_1_fu_1102_p1 == 3'd1) & (trunc_ln203_reg_1493 == 3'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_1_2_V_we0 = 1'b1;
    end else begin
        conv_1_input_1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_0_V_address0 = zext_ln203_24_fu_1106_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_0_V_address0 = grp_conv_1_fu_609_input_2_0_V_address0;
    end else begin
        conv_1_input_2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_0_V_ce0 = grp_conv_1_fu_609_input_2_0_V_ce0;
    end else begin
        conv_1_input_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_reg_1493 == 3'd0) & ~(trunc_ln203_reg_1493 == 3'd1) & (trunc_ln203_1_fu_1102_p1 == 3'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_2_0_V_we0 = 1'b1;
    end else begin
        conv_1_input_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_1_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_1_V_address0 = grp_conv_1_fu_609_input_2_1_V_address0;
    end else begin
        conv_1_input_2_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_1_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_1_V_ce0 = grp_conv_1_fu_609_input_2_1_V_ce0;
    end else begin
        conv_1_input_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_reg_1493 == 3'd0) & ~(trunc_ln203_reg_1493 == 3'd1) & (trunc_ln203_1_fu_1102_p1 == 3'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_2_1_V_we0 = 1'b1;
    end else begin
        conv_1_input_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_2_V_address0 = zext_ln203_25_fu_1112_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_2_V_address0 = grp_conv_1_fu_609_input_2_2_V_address0;
    end else begin
        conv_1_input_2_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_2_2_V_ce0 = grp_conv_1_fu_609_input_2_2_V_ce0;
    end else begin
        conv_1_input_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln203_reg_1493 == 3'd0) & ~(trunc_ln203_1_fu_1102_p1 == 3'd0) & ~(trunc_ln203_1_fu_1102_p1 == 3'd1) & ~(trunc_ln203_reg_1493 == 3'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        conv_1_input_2_2_V_we0 = 1'b1;
    end else begin
        conv_1_input_2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_649_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_609_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_649_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_609_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce1 = grp_conv_1_fu_609_conv_out_V_ce1;
    end else begin
        conv_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_609_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_609_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we1 = grp_conv_1_fu_609_conv_out_V_we1;
    end else begin
        conv_1_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_address0 = grp_max_pool_2_fu_655_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_address0 = grp_conv_2_fu_623_conv_out_V_address0;
    end else begin
        conv_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce0 = grp_max_pool_2_fu_655_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_ce0 = grp_conv_2_fu_623_conv_out_V_ce0;
    end else begin
        conv_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_d0 = grp_conv_2_fu_623_conv_out_V_d0;
    end else begin
        conv_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_we0 = grp_conv_2_fu_623_conv_out_V_we0;
    end else begin
        conv_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_address0 = grp_dense_2_fu_671_dense_1_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_address0 = grp_dense_1_fu_661_dense_1_out_V_address0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_flat_fu_681_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_ce0 = grp_dense_2_fu_671_dense_1_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_ce0 = grp_dense_1_fu_661_dense_1_out_V_ce0;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_d0 = grp_dense_1_fu_661_dense_1_out_V_d0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_flat_fu_681_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dense_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_we0 = grp_dense_1_fu_661_dense_1_out_V_we0;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_address0 = grp_dense_2_fu_671_dense_2_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_address0 = grp_dense_out_fu_633_dense_2_out_V_address0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_1_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_ce0 = grp_dense_2_fu_671_dense_2_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_ce0 = grp_dense_out_fu_633_dense_2_out_V_ce0;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_d0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_d0 = grp_dense_2_fu_671_dense_2_out_V_d0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_1_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        dense_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_we0 = grp_dense_2_fu_671_dense_2_out_V_we0;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_681_flat_array_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_address0 = grp_dense_1_fu_661_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_655_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_681_flat_array_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_ce0 = grp_dense_1_fu_661_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_681_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_655_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_681_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_649_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_623_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_649_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_623_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_649_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_649_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_address0 = grp_flat_fu_681_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_address0 = grp_max_pool_2_fu_655_max_pool_out_V_address0;
    end else begin
        max_pool_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_ce0 = grp_flat_fu_681_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_ce0 = grp_max_pool_2_fu_655_max_pool_out_V_ce0;
    end else begin
        max_pool_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_d0 = grp_max_pool_2_fu_655_max_pool_out_V_d0;
    end else begin
        max_pool_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_697_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        max_pool_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_we0 = grp_max_pool_2_fu_655_max_pool_out_V_we0;
    end else begin
        max_pool_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        prediction_V_address0 = zext_ln70_fu_1159_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_address0 = grp_dense_out_fu_633_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((grp_dense_2_fu_671_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_ce0 = grp_dense_out_fu_633_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_d0 = grp_dense_out_fu_633_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_2_fu_671_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_we0 = grp_dense_out_fu_633_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        prediction_output_ce0 = 1'b1;
    end else begin
        prediction_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        prediction_output_we0 = 1'b1;
    end else begin
        prediction_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_697_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_769_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_609_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_649_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_623_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_655_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_681_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_dense_1_fu_661_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_dense_2_fu_671_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_dense_out_fu_633_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1147_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_876_p2 = (12'd1075 - zext_ln461_fu_862_p1);

assign a_fu_1282_p2 = (icmp_ln947_fu_1244_p2 & icmp_ln947_1_fu_1276_p2);

assign add_ln203_11_fu_763_p2 = (zext_ln203_fu_729_p1 + zext_ln203_21_fu_741_p1);

assign add_ln203_12_fu_806_p2 = (add_ln203_reg_1497 + zext_ln203_23_fu_802_p1);

assign add_ln203_13_fu_811_p2 = (add_ln203_11_reg_1502 + zext_ln203_23_fu_802_p1);

assign add_ln203_14_fu_786_p2 = (11'd43 + phi_mul_reg_575);

assign add_ln203_fu_757_p2 = (zext_ln203_22_fu_753_p1 + zext_ln203_21_fu_741_p1);

assign add_ln23_5_fu_816_p2 = (phi_urem7_reg_541 + 5'd1);

assign add_ln23_fu_691_p2 = (phi_mul5_reg_530 + 11'd43);

assign add_ln28_2_fu_1121_p2 = (phi_urem_reg_586 + 5'd1);

assign add_ln28_fu_1141_p2 = (ix_in_1_reg_553 + 10'd1);

assign add_ln581_fu_911_p2 = ($signed(12'd4088) + $signed(F2_reg_1562));

assign add_ln949_fu_1302_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1224_p1));

assign add_ln958_fu_1349_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1616));

assign add_ln964_fu_1418_p2 = (select_ln964_fu_1405_p3 + sub_ln964_fu_1413_p2);

assign and_ln581_fu_1027_p2 = (xor_ln582_fu_1021_p2 & icmp_ln581_fu_906_p2);

assign and_ln582_fu_1002_p2 = (xor_ln571_fu_997_p2 & icmp_ln582_fu_933_p2);

assign and_ln585_1_fu_1053_p2 = (icmp_ln585_fu_942_p2 & and_ln581_fu_1027_p2);

assign and_ln585_fu_1039_p2 = (xor_ln585_fu_1033_p2 & and_ln581_fu_1027_p2);

assign and_ln603_fu_1079_p2 = (xor_ln581_fu_1073_p2 & icmp_ln603_fu_948_p2);

assign and_ln949_fu_1316_p2 = (xor_ln949_fu_1296_p2 & p_Result_27_fu_1308_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln586_fu_958_p2 = $signed(man_V_2_fu_899_p3) >>> zext_ln586_fu_954_p1;

assign bitcast_ln696_fu_968_p1 = cnn_input_load_reg_1540;

assign bitcast_ln739_fu_1443_p1 = p_Result_35_fu_1431_p5;

assign cnn_input_address0 = zext_ln27_fu_781_p1;

assign exp_tmp_V_fu_852_p4 = {{ireg_V_fu_836_p1[62:52]}};

assign grp_conv_1_fu_609_ap_start = grp_conv_1_fu_609_ap_start_reg;

assign grp_conv_2_fu_623_ap_start = grp_conv_2_fu_623_ap_start_reg;

assign grp_dense_1_fu_661_ap_start = grp_dense_1_fu_661_ap_start_reg;

assign grp_dense_2_fu_671_ap_start = grp_dense_2_fu_671_ap_start_reg;

assign grp_dense_out_fu_633_ap_start = grp_dense_out_fu_633_ap_start_reg;

assign grp_flat_fu_681_ap_start = grp_flat_fu_681_ap_start_reg;

assign grp_max_pool_1_fu_649_ap_start = grp_max_pool_1_fu_649_ap_start_reg;

assign grp_max_pool_2_fu_655_ap_start = grp_max_pool_2_fu_655_ap_start_reg;

assign i_1_fu_703_p2 = (i_0_reg_519 + 5'd1);

assign i_fu_1153_p2 = (i24_0_reg_598 + 4'd1);

assign icmp_ln23_1_fu_822_p2 = ((add_ln23_5_fu_816_p2 < 5'd3) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_697_p2 = ((i_0_reg_519 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_769_p2 = ((j_0_reg_564 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1127_p2 = ((add_ln28_2_fu_1121_p2 < 5'd3) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_870_p2 = ((trunc_ln556_fu_840_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_906_p2 = (($signed(F2_reg_1562) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_933_p2 = ((F2_reg_1562 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_942_p2 = ((sh_amt_fu_921_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_948_p2 = ((sh_amt_fu_921_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1147_p2 = ((i24_0_reg_598 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1164_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1276_p2 = ((p_Result_s_fu_1270_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1244_p2 = (($signed(tmp_99_fu_1234_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1336_p2 = (($signed(lsb_index_fu_1228_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_836_p1 = grp_fu_687_p1;

assign ix_in_fu_709_p2 = (10'd28 + ix_in_0_reg_507);

assign j_fu_775_p2 = (j_0_reg_564 + 5'd1);


always @ (p_Result_34_fu_1202_p3) begin
    if (p_Result_34_fu_1202_p3[0] == 1'b1) begin
        l_fu_1210_p3 = 32'd0;
    end else if (p_Result_34_fu_1202_p3[1] == 1'b1) begin
        l_fu_1210_p3 = 32'd1;
    end else if (p_Result_34_fu_1202_p3[2] == 1'b1) begin
        l_fu_1210_p3 = 32'd2;
    end else if (p_Result_34_fu_1202_p3[3] == 1'b1) begin
        l_fu_1210_p3 = 32'd3;
    end else if (p_Result_34_fu_1202_p3[4] == 1'b1) begin
        l_fu_1210_p3 = 32'd4;
    end else if (p_Result_34_fu_1202_p3[5] == 1'b1) begin
        l_fu_1210_p3 = 32'd5;
    end else if (p_Result_34_fu_1202_p3[6] == 1'b1) begin
        l_fu_1210_p3 = 32'd6;
    end else if (p_Result_34_fu_1202_p3[7] == 1'b1) begin
        l_fu_1210_p3 = 32'd7;
    end else if (p_Result_34_fu_1202_p3[8] == 1'b1) begin
        l_fu_1210_p3 = 32'd8;
    end else if (p_Result_34_fu_1202_p3[9] == 1'b1) begin
        l_fu_1210_p3 = 32'd9;
    end else if (p_Result_34_fu_1202_p3[10] == 1'b1) begin
        l_fu_1210_p3 = 32'd10;
    end else if (p_Result_34_fu_1202_p3[11] == 1'b1) begin
        l_fu_1210_p3 = 32'd11;
    end else if (p_Result_34_fu_1202_p3[12] == 1'b1) begin
        l_fu_1210_p3 = 32'd12;
    end else if (p_Result_34_fu_1202_p3[13] == 1'b1) begin
        l_fu_1210_p3 = 32'd13;
    end else if (p_Result_34_fu_1202_p3[14] == 1'b1) begin
        l_fu_1210_p3 = 32'd14;
    end else if (p_Result_34_fu_1202_p3[15] == 1'b1) begin
        l_fu_1210_p3 = 32'd15;
    end else if (p_Result_34_fu_1202_p3[16] == 1'b1) begin
        l_fu_1210_p3 = 32'd16;
    end else if (p_Result_34_fu_1202_p3[17] == 1'b1) begin
        l_fu_1210_p3 = 32'd17;
    end else if (p_Result_34_fu_1202_p3[18] == 1'b1) begin
        l_fu_1210_p3 = 32'd18;
    end else if (p_Result_34_fu_1202_p3[19] == 1'b1) begin
        l_fu_1210_p3 = 32'd19;
    end else if (p_Result_34_fu_1202_p3[20] == 1'b1) begin
        l_fu_1210_p3 = 32'd20;
    end else if (p_Result_34_fu_1202_p3[21] == 1'b1) begin
        l_fu_1210_p3 = 32'd21;
    end else if (p_Result_34_fu_1202_p3[22] == 1'b1) begin
        l_fu_1210_p3 = 32'd22;
    end else if (p_Result_34_fu_1202_p3[23] == 1'b1) begin
        l_fu_1210_p3 = 32'd23;
    end else if (p_Result_34_fu_1202_p3[24] == 1'b1) begin
        l_fu_1210_p3 = 32'd24;
    end else if (p_Result_34_fu_1202_p3[25] == 1'b1) begin
        l_fu_1210_p3 = 32'd25;
    end else if (p_Result_34_fu_1202_p3[26] == 1'b1) begin
        l_fu_1210_p3 = 32'd26;
    end else if (p_Result_34_fu_1202_p3[27] == 1'b1) begin
        l_fu_1210_p3 = 32'd27;
    end else if (p_Result_34_fu_1202_p3[28] == 1'b1) begin
        l_fu_1210_p3 = 32'd28;
    end else if (p_Result_34_fu_1202_p3[29] == 1'b1) begin
        l_fu_1210_p3 = 32'd29;
    end else if (p_Result_34_fu_1202_p3[30] == 1'b1) begin
        l_fu_1210_p3 = 32'd30;
    end else if (p_Result_34_fu_1202_p3[31] == 1'b1) begin
        l_fu_1210_p3 = 32'd31;
    end else begin
        l_fu_1210_p3 = 32'd32;
    end
end

assign lsb_index_fu_1228_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1218_p2));

assign lshr_ln947_fu_1264_p2 = 14'd16383 >> zext_ln947_fu_1260_p1;

assign lshr_ln958_fu_1354_p2 = m_fu_1346_p1 >> add_ln958_fu_1349_p2;

assign m_11_fu_1393_p1 = m_s_fu_1383_p4;

assign m_7_fu_1371_p3 = ((icmp_ln958_reg_1627[0:0] === 1'b1) ? lshr_ln958_fu_1354_p2 : shl_ln958_fu_1365_p2);

assign m_8_fu_1378_p2 = (m_7_fu_1371_p3 + or_ln_reg_1622);

assign m_fu_1346_p1 = tmp_V_9_reg_1611;

assign m_s_fu_1383_p4 = {{m_8_fu_1378_p2[31:1]}};

assign man_V_1_fu_893_p2 = (54'd0 - p_Result_32_fu_889_p1);

assign man_V_2_fu_899_p3 = ((p_Result_31_reg_1546[0:0] === 1'b1) ? man_V_1_fu_893_p2 : p_Result_32_fu_889_p1);

assign or_ln581_fu_1067_p2 = (or_ln582_fu_1016_p2 | icmp_ln581_fu_906_p2);

assign or_ln582_fu_1016_p2 = (icmp_ln582_fu_933_p2 | icmp_ln571_reg_1556);

assign or_ln949_fu_1322_p2 = (and_ln949_fu_1316_p2 | a_fu_1282_p2);

assign or_ln_fu_1328_p3 = {{31'd0}, {or_ln949_fu_1322_p2}};

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_1184_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_13_fu_1192_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_13_fu_1192_p4[ap_tvar_int_0] = tmp_V_9_fu_1184_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_Result_27_fu_1308_p3 = tmp_V_9_fu_1184_p3[add_ln949_fu_1302_p2];

assign p_Result_32_fu_889_p1 = tmp_fu_882_p3;

assign p_Result_33_fu_1170_p3 = prediction_V_q0[32'd13];

assign p_Result_34_fu_1202_p3 = {{18'd262143}, {p_Result_13_fu_1192_p4}};

assign p_Result_35_fu_1431_p5 = {{tmp_s_fu_1424_p3}, {m_11_fu_1393_p1[22:0]}};

assign p_Result_s_fu_1270_p2 = (tmp_V_9_fu_1184_p3 & lshr_ln947_fu_1264_p2);

assign prediction_output_address0 = zext_ln70_reg_1591;

assign prediction_output_d0 = ((icmp_ln935_reg_1601[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1443_p1);

assign select_ln23_fu_828_p3 = ((icmp_ln23_1_fu_822_p2[0:0] === 1'b1) ? add_ln23_5_fu_816_p2 : 5'd0);

assign select_ln28_fu_1133_p3 = ((icmp_ln28_fu_1127_p2[0:0] === 1'b1) ? add_ln28_2_fu_1121_p2 : 5'd0);

assign select_ln582_fu_1008_p3 = ((and_ln582_fu_1002_p2[0:0] === 1'b1) ? trunc_ln583_fu_938_p1 : 14'd0);

assign select_ln585_1_fu_1059_p3 = ((and_ln585_1_fu_1053_p2[0:0] === 1'b1) ? trunc_ln586_fu_964_p1 : select_ln585_fu_1045_p3);

assign select_ln585_fu_1045_p3 = ((and_ln585_fu_1039_p2[0:0] === 1'b1) ? select_ln588_fu_979_p3 : select_ln582_fu_1008_p3);

assign select_ln588_fu_979_p3 = ((tmp_103_fu_971_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_fu_1085_p3 = ((and_ln603_fu_1079_p2[0:0] === 1'b1) ? shl_ln604_fu_991_p2 : select_ln585_1_fu_1059_p3);

assign select_ln964_fu_1405_p3 = ((tmp_101_fu_1397_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln581_fu_929_p1 = sh_amt_fu_921_p3;

assign sext_ln581cast_fu_987_p1 = sext_ln581_fu_929_p1[13:0];

assign sh_amt_fu_921_p3 = ((icmp_ln581_fu_906_p2[0:0] === 1'b1) ? add_ln581_fu_911_p2 : sub_ln581_fu_916_p2);

assign shl_ln604_fu_991_p2 = trunc_ln583_fu_938_p1 << sext_ln581cast_fu_987_p1;

assign shl_ln958_fu_1365_p2 = m_fu_1346_p1 << sub_ln958_fu_1360_p2;

assign sub_ln581_fu_916_p2 = (12'd8 - F2_reg_1562);

assign sub_ln944_fu_1218_p2 = (32'd14 - l_fu_1210_p3);

assign sub_ln947_fu_1254_p2 = (4'd7 - trunc_ln947_fu_1250_p1);

assign sub_ln958_fu_1360_p2 = (32'd25 - sub_ln944_reg_1616);

assign sub_ln964_fu_1413_p2 = (8'd6 - trunc_ln943_reg_1632);

assign tmp_100_fu_1288_p3 = lsb_index_fu_1228_p2[32'd31];

assign tmp_101_fu_1397_p3 = m_8_fu_1378_p2[32'd25];

assign tmp_103_fu_971_p3 = bitcast_ln696_fu_968_p1[32'd31];

assign tmp_104_fu_792_p4 = {{phi_mul_reg_575[10:7]}};

assign tmp_95_fu_719_p4 = {{phi_mul5_reg_530[10:7]}};

assign tmp_96_fu_733_p3 = {{tmp_95_fu_719_p4}, {3'd0}};

assign tmp_97_fu_745_p3 = {{tmp_95_fu_719_p4}, {1'd0}};

assign tmp_99_fu_1234_p4 = {{lsb_index_fu_1228_p2[31:1]}};

assign tmp_V_9_fu_1184_p3 = ((p_Result_33_fu_1170_p3[0:0] === 1'b1) ? tmp_V_fu_1178_p2 : prediction_V_q0);

assign tmp_V_fu_1178_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_882_p3 = {{1'd1}, {trunc_ln565_reg_1551}};

assign tmp_s_fu_1424_p3 = {{p_Result_33_reg_1606}, {add_ln964_fu_1418_p2}};

assign trunc_ln203_1_fu_1102_p1 = phi_urem_reg_586[2:0];

assign trunc_ln203_fu_715_p1 = phi_urem7_reg_541[2:0];

assign trunc_ln556_fu_840_p1 = ireg_V_fu_836_p1[62:0];

assign trunc_ln565_fu_866_p1 = ireg_V_fu_836_p1[51:0];

assign trunc_ln583_fu_938_p1 = man_V_2_fu_899_p3[13:0];

assign trunc_ln586_fu_964_p1 = ashr_ln586_fu_958_p2[13:0];

assign trunc_ln943_fu_1342_p1 = l_fu_1210_p3[7:0];

assign trunc_ln944_fu_1224_p1 = sub_ln944_fu_1218_p2[13:0];

assign trunc_ln947_fu_1250_p1 = sub_ln944_fu_1218_p2[3:0];

assign xor_ln571_fu_997_p2 = (icmp_ln571_reg_1556 ^ 1'd1);

assign xor_ln581_fu_1073_p2 = (or_ln581_fu_1067_p2 ^ 1'd1);

assign xor_ln582_fu_1021_p2 = (or_ln582_fu_1016_p2 ^ 1'd1);

assign xor_ln585_fu_1033_p2 = (icmp_ln585_fu_942_p2 ^ 1'd1);

assign xor_ln949_fu_1296_p2 = (tmp_100_fu_1288_p3 ^ 1'd1);

assign zext_ln203_21_fu_741_p1 = tmp_96_fu_733_p3;

assign zext_ln203_22_fu_753_p1 = tmp_97_fu_745_p3;

assign zext_ln203_23_fu_802_p1 = tmp_104_fu_792_p4;

assign zext_ln203_24_fu_1106_p1 = add_ln203_12_reg_1525;

assign zext_ln203_25_fu_1112_p1 = add_ln203_13_reg_1530;

assign zext_ln203_fu_729_p1 = tmp_95_fu_719_p4;

assign zext_ln27_fu_781_p1 = ix_in_1_reg_553;

assign zext_ln461_fu_862_p1 = exp_tmp_V_fu_852_p4;

assign zext_ln586_fu_954_p1 = $unsigned(sext_ln581_fu_929_p1);

assign zext_ln70_fu_1159_p1 = i24_0_reg_598;

assign zext_ln947_fu_1260_p1 = sub_ln947_fu_1254_p2;

always @ (posedge ap_clk) begin
    add_ln203_reg_1497[0] <= 1'b0;
    zext_ln70_reg_1591[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_1622[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
