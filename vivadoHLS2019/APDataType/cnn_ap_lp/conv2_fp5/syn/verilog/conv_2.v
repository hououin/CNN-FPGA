// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        input_V_address1,
        input_V_ce1,
        input_V_q1,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_pp0_stage0 = 10'd4;
parameter    ap_ST_fsm_pp0_stage1 = 10'd8;
parameter    ap_ST_fsm_pp0_stage2 = 10'd16;
parameter    ap_ST_fsm_state7 = 10'd32;
parameter    ap_ST_fsm_state8 = 10'd64;
parameter    ap_ST_fsm_state9 = 10'd128;
parameter    ap_ST_fsm_state10 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [9:0] input_V_address1;
output   input_V_ce1;
input  [13:0] input_V_q1;
output  [10:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_V_address0;
reg input_V_ce0;
reg[9:0] input_V_address1;
reg input_V_ce1;
reg conv_out_V_ce0;
reg conv_out_V_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] conv_2_weights_V_0_address0;
reg    conv_2_weights_V_0_ce0;
wire  signed [7:0] conv_2_weights_V_0_q0;
wire   [7:0] conv_2_weights_V_1_address0;
reg    conv_2_weights_V_1_ce0;
wire  signed [8:0] conv_2_weights_V_1_q0;
wire   [7:0] conv_2_weights_V_2_address0;
reg    conv_2_weights_V_2_ce0;
wire   [7:0] conv_2_weights_V_2_q0;
wire   [7:0] conv_2_weights_V_3_address0;
reg    conv_2_weights_V_3_ce0;
wire   [8:0] conv_2_weights_V_3_q0;
wire   [7:0] conv_2_weights_V_4_address0;
reg    conv_2_weights_V_4_ce0;
wire   [9:0] conv_2_weights_V_4_q0;
wire   [7:0] conv_2_weights_V_5_address0;
reg    conv_2_weights_V_5_ce0;
wire   [8:0] conv_2_weights_V_5_q0;
wire   [3:0] conv_2_bias_V_address0;
reg    conv_2_bias_V_ce0;
wire   [7:0] conv_2_bias_V_q0;
reg   [3:0] indvar_flatten_reg_402;
reg   [1:0] wr_0_reg_413;
reg   [13:0] w_sum_1_reg_424;
reg   [1:0] wc_0_reg_436;
wire   [0:0] icmp_ln8_fu_463_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln8_fu_469_p2;
reg   [10:0] add_ln8_reg_1466;
wire   [0:0] icmp_ln11_fu_481_p2;
reg   [0:0] icmp_ln11_reg_1471;
wire   [3:0] select_ln37_1_fu_495_p3;
reg   [3:0] select_ln37_1_reg_1476;
wire   [4:0] select_ln37_2_fu_537_p3;
reg   [4:0] select_ln37_2_reg_1482;
wire   [3:0] select_ln37_3_fu_545_p3;
reg   [3:0] select_ln37_3_reg_1487;
wire   [63:0] zext_ln26_fu_564_p1;
reg   [63:0] zext_ln26_reg_1493;
wire   [8:0] zext_ln203_10_fu_568_p1;
reg   [8:0] zext_ln203_10_reg_1498;
reg   [10:0] conv_out_V_addr_reg_1503;
wire   [0:0] icmp_ln18_fu_587_p2;
reg   [0:0] icmp_ln18_reg_1508;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] add_ln18_1_fu_593_p2;
reg   [3:0] add_ln18_1_reg_1512;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] select_ln18_fu_611_p3;
reg   [1:0] select_ln18_reg_1517;
wire   [1:0] select_ln18_1_fu_619_p3;
reg   [1:0] select_ln18_1_reg_1522;
wire   [10:0] sub_ln1117_fu_726_p2;
reg   [10:0] sub_ln1117_reg_1557;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg  signed [7:0] conv_2_weights_V_2_l_reg_1585;
reg   [13:0] tmp_6_reg_1590;
reg  signed [8:0] conv_2_weights_V_3_l_reg_1595;
reg  signed [9:0] conv_2_weights_V_4_l_reg_1600;
reg  signed [8:0] conv_2_weights_V_5_l_reg_1605;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [13:0] tmp_8_reg_1620;
wire   [1:0] wc_fu_957_p2;
reg   [1:0] wc_reg_1625;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state7;
wire   [13:0] tmp_V_4_fu_1049_p2;
reg   [13:0] tmp_V_4_reg_1640;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln885_fu_1055_p2;
reg   [0:0] icmp_ln885_reg_1648;
wire   [0:0] p_Result_24_fu_1061_p3;
reg   [0:0] p_Result_24_reg_1652;
wire    ap_CS_fsm_state9;
wire   [13:0] tmp_V_5_fu_1073_p3;
reg   [13:0] tmp_V_5_reg_1657;
wire   [31:0] sub_ln894_fu_1106_p2;
reg   [31:0] sub_ln894_reg_1663;
wire   [31:0] or_ln_fu_1216_p3;
reg   [31:0] or_ln_reg_1669;
wire   [0:0] icmp_ln908_fu_1224_p2;
reg   [0:0] icmp_ln908_reg_1674;
wire   [10:0] trunc_ln893_fu_1230_p1;
reg   [10:0] trunc_ln893_reg_1679;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln924_fu_1361_p2;
reg   [0:0] icmp_ln924_reg_1689;
wire   [0:0] icmp_ln924_1_fu_1367_p2;
reg   [0:0] icmp_ln924_1_reg_1694;
wire   [4:0] f_fu_1383_p2;
wire    ap_CS_fsm_state11;
wire   [8:0] select_ln11_fu_1394_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage2_subdone;
reg   [10:0] indvar_flatten21_reg_346;
reg   [3:0] r_0_reg_357;
reg   [8:0] indvar_flatten7_reg_368;
reg   [3:0] c_0_reg_380;
reg   [4:0] f_0_reg_391;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_406_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_417_p4;
reg   [1:0] ap_phi_mux_wc_0_phi_fu_440_p4;
reg   [13:0] ap_phi_mux_storemerge_phi_fu_450_p4;
wire   [0:0] and_ln924_fu_1377_p2;
wire   [63:0] zext_ln203_12_fu_582_p1;
wire   [63:0] zext_ln1116_3_fu_689_p1;
wire   [63:0] zext_ln1117_3_fu_732_p1;
wire   [63:0] zext_ln1117_4_fu_743_p1;
wire   [63:0] zext_ln1117_5_fu_753_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1117_6_fu_763_p1;
wire   [63:0] zext_ln1117_7_fu_859_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1117_8_fu_869_p1;
wire   [63:0] grp_fu_458_p0;
wire   [3:0] r_fu_475_p2;
wire   [0:0] icmp_ln14_fu_513_p2;
wire   [0:0] xor_ln37_fu_507_p2;
wire   [3:0] select_ln37_fu_487_p3;
wire   [0:0] and_ln37_fu_519_p2;
wire   [0:0] or_ln37_fu_531_p2;
wire   [3:0] c_fu_525_p2;
wire   [7:0] grp_fu_1401_p3;
wire   [11:0] zext_ln203_11_fu_572_p1;
wire   [11:0] tmp_17_cast_fu_557_p3;
wire   [11:0] add_ln203_6_fu_576_p2;
wire   [0:0] icmp_ln21_fu_605_p2;
wire   [1:0] wr_fu_599_p2;
wire   [3:0] tmp_1_fu_631_p3;
wire   [4:0] zext_ln1116_1_fu_639_p1;
wire   [4:0] zext_ln1116_fu_627_p1;
wire   [3:0] zext_ln18_fu_649_p1;
wire   [3:0] add_ln18_fu_653_p2;
wire   [4:0] zext_ln1116_2_fu_666_p1;
wire   [4:0] sub_ln1116_fu_643_p2;
wire   [4:0] add_ln1116_fu_670_p2;
wire   [8:0] tmp_20_cast_fu_676_p3;
wire   [8:0] add_ln1116_1_fu_684_p2;
wire   [3:0] zext_ln21_fu_662_p1;
wire   [3:0] add_ln26_fu_699_p2;
wire   [7:0] grp_fu_1410_p3;
wire   [8:0] tmp_fu_715_p3;
wire   [10:0] p_shl_cast_fu_708_p3;
wire   [10:0] zext_ln1117_2_fu_722_p1;
wire   [10:0] or_ln1117_fu_737_p2;
wire   [10:0] add_ln1117_1_fu_748_p2;
wire   [10:0] add_ln1117_2_fu_758_p2;
wire  signed [22:0] mul_ln1118_fu_1420_p2;
wire   [21:0] shl_ln_fu_779_p3;
wire  signed [27:0] sext_ln1118_1_fu_776_p1;
wire   [28:0] zext_ln728_fu_787_p1;
wire   [28:0] zext_ln703_fu_791_p1;
wire  signed [23:0] mul_ln1118_1_fu_1427_p2;
wire   [28:0] add_ln1192_fu_795_p2;
wire   [13:0] tmp_5_fu_812_p4;
wire   [21:0] shl_ln728_1_fu_822_p3;
wire  signed [27:0] sext_ln1118_3_fu_809_p1;
wire   [28:0] zext_ln728_1_fu_830_p1;
wire   [28:0] zext_ln703_2_fu_834_p1;
wire   [28:0] add_ln1192_1_fu_838_p2;
wire   [10:0] add_ln1117_3_fu_854_p2;
wire   [10:0] add_ln1117_4_fu_864_p2;
wire  signed [22:0] mul_ln1118_2_fu_1434_p2;
wire   [21:0] shl_ln728_2_fu_884_p3;
wire  signed [27:0] sext_ln1118_5_fu_881_p1;
wire   [28:0] zext_ln728_2_fu_891_p1;
wire   [28:0] zext_ln703_3_fu_895_p1;
wire  signed [23:0] mul_ln1118_3_fu_1441_p2;
wire   [28:0] add_ln1192_2_fu_899_p2;
wire   [13:0] tmp_7_fu_915_p4;
wire   [21:0] shl_ln728_3_fu_925_p3;
wire  signed [27:0] sext_ln1118_7_fu_912_p1;
wire   [28:0] zext_ln728_3_fu_933_p1;
wire   [28:0] zext_ln703_4_fu_937_p1;
wire   [28:0] add_ln1192_3_fu_941_p2;
wire  signed [24:0] mul_ln1118_4_fu_1448_p2;
wire   [21:0] shl_ln728_4_fu_972_p3;
wire  signed [27:0] sext_ln1118_9_fu_969_p1;
wire   [28:0] zext_ln728_4_fu_979_p1;
wire   [28:0] zext_ln703_5_fu_983_p1;
wire  signed [23:0] mul_ln1118_5_fu_1455_p2;
wire   [28:0] add_ln1192_4_fu_987_p2;
wire   [13:0] tmp_9_fu_1003_p4;
wire   [21:0] shl_ln728_5_fu_1013_p3;
wire  signed [27:0] sext_ln1118_11_fu_1000_p1;
wire   [28:0] zext_ln728_5_fu_1021_p1;
wire   [28:0] zext_ln703_6_fu_1025_p1;
wire   [28:0] add_ln1192_5_fu_1029_p2;
wire  signed [13:0] sext_ln1265_fu_1045_p1;
wire   [13:0] tmp_V_fu_1068_p2;
reg   [13:0] p_Result_s_fu_1080_p4;
wire   [31:0] p_Result_25_fu_1090_p3;
reg   [31:0] l_fu_1098_p3;
wire   [31:0] lsb_index_fu_1116_p2;
wire   [30:0] tmp_11_fu_1122_p4;
wire   [3:0] trunc_ln897_fu_1138_p1;
wire   [3:0] sub_ln897_fu_1142_p2;
wire   [13:0] zext_ln897_fu_1148_p1;
wire   [13:0] lshr_ln897_fu_1152_p2;
wire   [13:0] p_Result_21_fu_1158_p2;
wire   [0:0] icmp_ln897_fu_1132_p2;
wire   [0:0] icmp_ln897_1_fu_1164_p2;
wire   [0:0] tmp_12_fu_1176_p3;
wire   [13:0] trunc_ln894_fu_1112_p1;
wire   [13:0] add_ln899_fu_1190_p2;
wire   [0:0] p_Result_22_fu_1196_p3;
wire   [0:0] xor_ln899_fu_1184_p2;
wire   [0:0] and_ln899_fu_1204_p2;
wire   [0:0] a_fu_1170_p2;
wire   [0:0] or_ln899_fu_1210_p2;
wire   [31:0] zext_ln907_1_fu_1237_p1;
wire   [31:0] add_ln908_fu_1240_p2;
wire   [31:0] lshr_ln908_fu_1245_p2;
wire   [31:0] sub_ln908_fu_1255_p2;
wire   [63:0] m_fu_1234_p1;
wire   [63:0] zext_ln908_1_fu_1260_p1;
wire   [63:0] zext_ln908_fu_1251_p1;
wire   [63:0] shl_ln908_fu_1264_p2;
wire   [63:0] zext_ln911_fu_1277_p1;
wire   [63:0] m_1_fu_1270_p3;
wire   [63:0] m_2_fu_1280_p2;
wire   [62:0] m_5_fu_1286_p4;
wire   [0:0] tmp_13_fu_1300_p3;
wire   [10:0] sub_ln915_fu_1316_p2;
wire   [10:0] select_ln915_fu_1308_p3;
wire   [10:0] add_ln915_fu_1321_p2;
wire   [63:0] m_6_fu_1296_p1;
wire   [11:0] tmp_4_fu_1327_p3;
wire   [63:0] p_Result_26_fu_1334_p5;
wire   [51:0] trunc_ln4_fu_1351_p4;
wire   [0:0] or_ln924_fu_1373_p2;
wire   [0:0] grp_fu_458_p2;
wire   [8:0] add_ln11_1_fu_1388_p2;
wire   [3:0] grp_fu_1401_p0;
wire   [4:0] grp_fu_1401_p1;
wire   [3:0] grp_fu_1401_p2;
wire   [3:0] grp_fu_1410_p0;
wire   [4:0] grp_fu_1410_p1;
wire   [3:0] grp_fu_1410_p2;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_1401_p00;
wire   [7:0] grp_fu_1401_p20;
wire   [7:0] grp_fu_1410_p00;
wire   [7:0] grp_fu_1410_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_2_conv_2_weifYi #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_address0),
    .ce0(conv_2_weights_V_0_ce0),
    .q0(conv_2_weights_V_0_q0)
);

conv_2_conv_2_weig8j #(
    .DataWidth( 9 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_address0),
    .ce0(conv_2_weights_V_1_ce0),
    .q0(conv_2_weights_V_1_q0)
);

conv_2_conv_2_weihbi #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_address0),
    .ce0(conv_2_weights_V_2_ce0),
    .q0(conv_2_weights_V_2_q0)
);

conv_2_conv_2_weiibs #(
    .DataWidth( 9 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_3_address0),
    .ce0(conv_2_weights_V_3_ce0),
    .q0(conv_2_weights_V_3_q0)
);

conv_2_conv_2_weijbC #(
    .DataWidth( 10 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_4_address0),
    .ce0(conv_2_weights_V_4_ce0),
    .q0(conv_2_weights_V_4_q0)
);

conv_2_conv_2_weikbM #(
    .DataWidth( 9 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_2_weights_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_5_address0),
    .ce0(conv_2_weights_V_5_ce0),
    .q0(conv_2_weights_V_5_q0)
);

conv_2_conv_2_bialbW #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_bias_V_address0),
    .ce0(conv_2_bias_V_ce0),
    .q0(conv_2_bias_V_q0)
);

cnn_dcmp_64ns_64ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64ndEe_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_458_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_458_p2)
);

cnn_mac_muladd_4nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
cnn_mac_muladd_4nmb6_U12(
    .din0(grp_fu_1401_p0),
    .din1(grp_fu_1401_p1),
    .din2(grp_fu_1401_p2),
    .dout(grp_fu_1401_p3)
);

cnn_mac_muladd_4nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
cnn_mac_muladd_4nmb6_U13(
    .din0(grp_fu_1410_p0),
    .din1(grp_fu_1410_p1),
    .din2(grp_fu_1410_p2),
    .dout(grp_fu_1410_p3)
);

cnn_mul_mul_8s_14ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_8s_14ncg_U14(
    .din0(conv_2_weights_V_0_q0),
    .din1(input_V_q0),
    .dout(mul_ln1118_fu_1420_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14ocq_U15(
    .din0(conv_2_weights_V_1_q0),
    .din1(input_V_q1),
    .dout(mul_ln1118_1_fu_1427_p2)
);

cnn_mul_mul_8s_14ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_8s_14ncg_U16(
    .din0(conv_2_weights_V_2_l_reg_1585),
    .din1(input_V_q0),
    .dout(mul_ln1118_2_fu_1434_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14ocq_U17(
    .din0(conv_2_weights_V_3_l_reg_1595),
    .din1(input_V_q1),
    .dout(mul_ln1118_3_fu_1441_p2)
);

cnn_mul_mul_10s_1pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 25 ))
cnn_mul_mul_10s_1pcA_U18(
    .din0(conv_2_weights_V_4_l_reg_1600),
    .din1(input_V_q0),
    .dout(mul_ln1118_4_fu_1448_p2)
);

cnn_mul_mul_9s_14ocq #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_9s_14ocq_U19(
    .din0(conv_2_weights_V_5_l_reg_1605),
    .din1(input_V_q1),
    .dout(mul_ln1118_5_fu_1455_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        c_0_reg_380 <= select_ln37_3_reg_1487;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_380 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        f_0_reg_391 <= f_fu_1383_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_391 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten21_reg_346 <= add_ln8_reg_1466;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten21_reg_346 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten7_reg_368 <= select_ln11_fu_1394_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten7_reg_368 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1508 == 1'd0))) begin
        indvar_flatten_reg_402 <= add_ln18_1_reg_1512;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        indvar_flatten_reg_402 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        r_0_reg_357 <= select_ln37_1_reg_1476;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_357 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1508 == 1'd0))) begin
        w_sum_1_reg_424 <= {{add_ln1192_5_fu_1029_p2[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        w_sum_1_reg_424 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1508 == 1'd0))) begin
        wc_0_reg_436 <= wc_reg_1625;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        wc_0_reg_436 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1508 == 1'd0))) begin
        wr_0_reg_413 <= select_ln18_1_reg_1522;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        wr_0_reg_413 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln18_1_reg_1512 <= add_ln18_1_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_1466 <= add_ln8_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln18_reg_1508 == 1'd0))) begin
        conv_2_weights_V_2_l_reg_1585 <= conv_2_weights_V_2_q0;
        conv_2_weights_V_3_l_reg_1595 <= conv_2_weights_V_3_q0;
        conv_2_weights_V_4_l_reg_1600 <= conv_2_weights_V_4_q0;
        conv_2_weights_V_5_l_reg_1605 <= conv_2_weights_V_5_q0;
        tmp_6_reg_1590 <= {{add_ln1192_1_fu_838_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        conv_out_V_addr_reg_1503 <= zext_ln203_12_fu_582_p1;
        icmp_ln11_reg_1471 <= icmp_ln11_fu_481_p2;
        select_ln37_1_reg_1476 <= select_ln37_1_fu_495_p3;
        select_ln37_2_reg_1482 <= select_ln37_2_fu_537_p3;
        select_ln37_3_reg_1487 <= select_ln37_3_fu_545_p3;
        zext_ln203_10_reg_1498[4 : 0] <= zext_ln203_10_fu_568_p1[4 : 0];
        zext_ln26_reg_1493[4 : 0] <= zext_ln26_fu_564_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln18_reg_1508 <= icmp_ln18_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln885_reg_1648 <= icmp_ln885_fu_1055_p2;
        tmp_V_4_reg_1640 <= tmp_V_4_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln908_reg_1674 <= icmp_ln908_fu_1224_p2;
        or_ln_reg_1669[0] <= or_ln_fu_1216_p3[0];
        p_Result_24_reg_1652 <= tmp_V_4_reg_1640[32'd13];
        sub_ln894_reg_1663 <= sub_ln894_fu_1106_p2;
        tmp_V_5_reg_1657 <= tmp_V_5_fu_1073_p3;
        trunc_ln893_reg_1679 <= trunc_ln893_fu_1230_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln924_1_reg_1694 <= icmp_ln924_1_fu_1367_p2;
        icmp_ln924_reg_1689 <= icmp_ln924_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_fu_587_p2 == 1'd0))) begin
        select_ln18_1_reg_1522 <= select_ln18_1_fu_619_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_fu_587_p2 == 1'd0))) begin
        select_ln18_reg_1517 <= select_ln18_fu_611_p3;
        sub_ln1117_reg_1557[10 : 1] <= sub_ln1117_fu_726_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln18_reg_1508 == 1'd0))) begin
        tmp_8_reg_1620 <= {{add_ln1192_3_fu_941_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln18_reg_1508 == 1'd0))) begin
        wc_reg_1625 <= wc_fu_957_p2;
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_587_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_reg_1508 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_406_p4 = add_ln18_1_reg_1512;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_406_p4 = indvar_flatten_reg_402;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if (((1'd1 == and_ln924_fu_1377_p2) & (icmp_ln885_reg_1648 == 1'd0))) begin
            ap_phi_mux_storemerge_phi_fu_450_p4 = tmp_V_4_reg_1640;
        end else if (((icmp_ln885_reg_1648 == 1'd1) | (1'd0 == and_ln924_fu_1377_p2))) begin
            ap_phi_mux_storemerge_phi_fu_450_p4 = 14'd0;
        end else begin
            ap_phi_mux_storemerge_phi_fu_450_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_450_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_reg_1508 == 1'd0))) begin
        ap_phi_mux_wc_0_phi_fu_440_p4 = wc_reg_1625;
    end else begin
        ap_phi_mux_wc_0_phi_fu_440_p4 = wc_0_reg_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_reg_1508 == 1'd0))) begin
        ap_phi_mux_wr_0_phi_fu_417_p4 = select_ln18_1_reg_1522;
    end else begin
        ap_phi_mux_wr_0_phi_fu_417_p4 = wr_0_reg_413;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_2_bias_V_ce0 = 1'b1;
    end else begin
        conv_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_0_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_1_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_2_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_3_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_4_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_weights_V_5_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address0 = zext_ln1117_7_fu_859_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address0 = zext_ln1117_5_fu_753_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address0 = zext_ln1117_3_fu_732_p1;
        end else begin
            input_V_address0 = 'bx;
        end
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address1 = zext_ln1117_8_fu_869_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address1 = zext_ln1117_6_fu_763_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address1 = zext_ln1117_4_fu_743_p1;
        end else begin
            input_V_address1 = 'bx;
        end
    end else begin
        input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        input_V_ce1 = 1'b1;
    end else begin
        input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_463_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln18_fu_587_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln18_fu_587_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln885_fu_1055_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_1170_p2 = (icmp_ln897_fu_1132_p2 & icmp_ln897_1_fu_1164_p2);

assign add_ln1116_1_fu_684_p2 = (zext_ln203_10_reg_1498 + tmp_20_cast_fu_676_p3);

assign add_ln1116_fu_670_p2 = (zext_ln1116_2_fu_666_p1 + sub_ln1116_fu_643_p2);

assign add_ln1117_1_fu_748_p2 = (sub_ln1117_reg_1557 + 11'd2);

assign add_ln1117_2_fu_758_p2 = (sub_ln1117_reg_1557 + 11'd3);

assign add_ln1117_3_fu_854_p2 = (sub_ln1117_reg_1557 + 11'd4);

assign add_ln1117_4_fu_864_p2 = (sub_ln1117_reg_1557 + 11'd5);

assign add_ln1192_1_fu_838_p2 = (zext_ln728_1_fu_830_p1 + zext_ln703_2_fu_834_p1);

assign add_ln1192_2_fu_899_p2 = (zext_ln728_2_fu_891_p1 + zext_ln703_3_fu_895_p1);

assign add_ln1192_3_fu_941_p2 = (zext_ln728_3_fu_933_p1 + zext_ln703_4_fu_937_p1);

assign add_ln1192_4_fu_987_p2 = (zext_ln728_4_fu_979_p1 + zext_ln703_5_fu_983_p1);

assign add_ln1192_5_fu_1029_p2 = (zext_ln728_5_fu_1021_p1 + zext_ln703_6_fu_1025_p1);

assign add_ln1192_fu_795_p2 = (zext_ln728_fu_787_p1 + zext_ln703_fu_791_p1);

assign add_ln11_1_fu_1388_p2 = (indvar_flatten7_reg_368 + 9'd1);

assign add_ln18_1_fu_593_p2 = (ap_phi_mux_indvar_flatten_phi_fu_406_p4 + 4'd1);

assign add_ln18_fu_653_p2 = (select_ln37_1_reg_1476 + zext_ln18_fu_649_p1);

assign add_ln203_6_fu_576_p2 = (zext_ln203_11_fu_572_p1 + tmp_17_cast_fu_557_p3);

assign add_ln26_fu_699_p2 = (select_ln37_3_reg_1487 + zext_ln21_fu_662_p1);

assign add_ln899_fu_1190_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_1112_p1));

assign add_ln8_fu_469_p2 = (indvar_flatten21_reg_346 + 11'd1);

assign add_ln908_fu_1240_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1663));

assign add_ln915_fu_1321_p2 = (sub_ln915_fu_1316_p2 + select_ln915_fu_1308_p3);

assign and_ln37_fu_519_p2 = (xor_ln37_fu_507_p2 & icmp_ln14_fu_513_p2);

assign and_ln899_fu_1204_p2 = (xor_ln899_fu_1184_p2 & p_Result_22_fu_1196_p3);

assign and_ln924_fu_1377_p2 = (or_ln924_fu_1373_p2 & grp_fu_458_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_525_p2 = (select_ln37_fu_487_p3 + 4'd1);

assign conv_2_bias_V_address0 = zext_ln26_reg_1493;

assign conv_2_weights_V_0_address0 = zext_ln1116_3_fu_689_p1;

assign conv_2_weights_V_1_address0 = zext_ln1116_3_fu_689_p1;

assign conv_2_weights_V_2_address0 = zext_ln1116_3_fu_689_p1;

assign conv_2_weights_V_3_address0 = zext_ln1116_3_fu_689_p1;

assign conv_2_weights_V_4_address0 = zext_ln1116_3_fu_689_p1;

assign conv_2_weights_V_5_address0 = zext_ln1116_3_fu_689_p1;

assign conv_out_V_address0 = conv_out_V_addr_reg_1503;

assign conv_out_V_d0 = ap_phi_mux_storemerge_phi_fu_450_p4;

assign f_fu_1383_p2 = (select_ln37_2_reg_1482 + 5'd1);

assign grp_fu_1401_p0 = grp_fu_1401_p00;

assign grp_fu_1401_p00 = select_ln37_1_fu_495_p3;

assign grp_fu_1401_p1 = 8'd11;

assign grp_fu_1401_p2 = grp_fu_1401_p20;

assign grp_fu_1401_p20 = select_ln37_3_fu_545_p3;

assign grp_fu_1410_p0 = grp_fu_1410_p00;

assign grp_fu_1410_p00 = add_ln18_fu_653_p2;

assign grp_fu_1410_p1 = 8'd13;

assign grp_fu_1410_p2 = grp_fu_1410_p20;

assign grp_fu_1410_p20 = add_ln26_fu_699_p2;

assign grp_fu_458_p0 = p_Result_26_fu_1334_p5;

assign icmp_ln11_fu_481_p2 = ((indvar_flatten7_reg_368 == 9'd176) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_513_p2 = ((f_0_reg_391 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_587_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_406_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_605_p2 = ((ap_phi_mux_wc_0_phi_fu_440_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_1055_p2 = ((tmp_V_4_fu_1049_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_1164_p2 = ((p_Result_21_fu_1158_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_1132_p2 = (($signed(tmp_11_fu_1122_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_463_p2 = ((indvar_flatten21_reg_346 == 11'd1936) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_1224_p2 = (($signed(lsb_index_fu_1116_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_1367_p2 = ((trunc_ln4_fu_1351_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_1361_p2 = ((add_ln915_fu_1321_p2 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_25_fu_1090_p3) begin
    if (p_Result_25_fu_1090_p3[0] == 1'b1) begin
        l_fu_1098_p3 = 32'd0;
    end else if (p_Result_25_fu_1090_p3[1] == 1'b1) begin
        l_fu_1098_p3 = 32'd1;
    end else if (p_Result_25_fu_1090_p3[2] == 1'b1) begin
        l_fu_1098_p3 = 32'd2;
    end else if (p_Result_25_fu_1090_p3[3] == 1'b1) begin
        l_fu_1098_p3 = 32'd3;
    end else if (p_Result_25_fu_1090_p3[4] == 1'b1) begin
        l_fu_1098_p3 = 32'd4;
    end else if (p_Result_25_fu_1090_p3[5] == 1'b1) begin
        l_fu_1098_p3 = 32'd5;
    end else if (p_Result_25_fu_1090_p3[6] == 1'b1) begin
        l_fu_1098_p3 = 32'd6;
    end else if (p_Result_25_fu_1090_p3[7] == 1'b1) begin
        l_fu_1098_p3 = 32'd7;
    end else if (p_Result_25_fu_1090_p3[8] == 1'b1) begin
        l_fu_1098_p3 = 32'd8;
    end else if (p_Result_25_fu_1090_p3[9] == 1'b1) begin
        l_fu_1098_p3 = 32'd9;
    end else if (p_Result_25_fu_1090_p3[10] == 1'b1) begin
        l_fu_1098_p3 = 32'd10;
    end else if (p_Result_25_fu_1090_p3[11] == 1'b1) begin
        l_fu_1098_p3 = 32'd11;
    end else if (p_Result_25_fu_1090_p3[12] == 1'b1) begin
        l_fu_1098_p3 = 32'd12;
    end else if (p_Result_25_fu_1090_p3[13] == 1'b1) begin
        l_fu_1098_p3 = 32'd13;
    end else if (p_Result_25_fu_1090_p3[14] == 1'b1) begin
        l_fu_1098_p3 = 32'd14;
    end else if (p_Result_25_fu_1090_p3[15] == 1'b1) begin
        l_fu_1098_p3 = 32'd15;
    end else if (p_Result_25_fu_1090_p3[16] == 1'b1) begin
        l_fu_1098_p3 = 32'd16;
    end else if (p_Result_25_fu_1090_p3[17] == 1'b1) begin
        l_fu_1098_p3 = 32'd17;
    end else if (p_Result_25_fu_1090_p3[18] == 1'b1) begin
        l_fu_1098_p3 = 32'd18;
    end else if (p_Result_25_fu_1090_p3[19] == 1'b1) begin
        l_fu_1098_p3 = 32'd19;
    end else if (p_Result_25_fu_1090_p3[20] == 1'b1) begin
        l_fu_1098_p3 = 32'd20;
    end else if (p_Result_25_fu_1090_p3[21] == 1'b1) begin
        l_fu_1098_p3 = 32'd21;
    end else if (p_Result_25_fu_1090_p3[22] == 1'b1) begin
        l_fu_1098_p3 = 32'd22;
    end else if (p_Result_25_fu_1090_p3[23] == 1'b1) begin
        l_fu_1098_p3 = 32'd23;
    end else if (p_Result_25_fu_1090_p3[24] == 1'b1) begin
        l_fu_1098_p3 = 32'd24;
    end else if (p_Result_25_fu_1090_p3[25] == 1'b1) begin
        l_fu_1098_p3 = 32'd25;
    end else if (p_Result_25_fu_1090_p3[26] == 1'b1) begin
        l_fu_1098_p3 = 32'd26;
    end else if (p_Result_25_fu_1090_p3[27] == 1'b1) begin
        l_fu_1098_p3 = 32'd27;
    end else if (p_Result_25_fu_1090_p3[28] == 1'b1) begin
        l_fu_1098_p3 = 32'd28;
    end else if (p_Result_25_fu_1090_p3[29] == 1'b1) begin
        l_fu_1098_p3 = 32'd29;
    end else if (p_Result_25_fu_1090_p3[30] == 1'b1) begin
        l_fu_1098_p3 = 32'd30;
    end else if (p_Result_25_fu_1090_p3[31] == 1'b1) begin
        l_fu_1098_p3 = 32'd31;
    end else begin
        l_fu_1098_p3 = 32'd32;
    end
end

assign lsb_index_fu_1116_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_1106_p2));

assign lshr_ln897_fu_1152_p2 = 14'd16383 >> zext_ln897_fu_1148_p1;

assign lshr_ln908_fu_1245_p2 = zext_ln907_1_fu_1237_p1 >> add_ln908_fu_1240_p2;

assign m_1_fu_1270_p3 = ((icmp_ln908_reg_1674[0:0] === 1'b1) ? zext_ln908_fu_1251_p1 : shl_ln908_fu_1264_p2);

assign m_2_fu_1280_p2 = (zext_ln911_fu_1277_p1 + m_1_fu_1270_p3);

assign m_5_fu_1286_p4 = {{m_2_fu_1280_p2[63:1]}};

assign m_6_fu_1296_p1 = m_5_fu_1286_p4;

assign m_fu_1234_p1 = tmp_V_5_reg_1657;

assign or_ln1117_fu_737_p2 = (sub_ln1117_fu_726_p2 | 11'd1);

assign or_ln37_fu_531_p2 = (icmp_ln11_fu_481_p2 | and_ln37_fu_519_p2);

assign or_ln899_fu_1210_p2 = (and_ln899_fu_1204_p2 | a_fu_1170_p2);

assign or_ln924_fu_1373_p2 = (icmp_ln924_reg_1689 | icmp_ln924_1_reg_1694);

assign or_ln_fu_1216_p3 = {{31'd0}, {or_ln899_fu_1210_p2}};

assign p_Result_21_fu_1158_p2 = (tmp_V_5_fu_1073_p3 & lshr_ln897_fu_1152_p2);

assign p_Result_22_fu_1196_p3 = tmp_V_5_fu_1073_p3[add_ln899_fu_1190_p2];

assign p_Result_24_fu_1061_p3 = tmp_V_4_reg_1640[32'd13];

assign p_Result_25_fu_1090_p3 = {{18'd262143}, {p_Result_s_fu_1080_p4}};

assign p_Result_26_fu_1334_p5 = {{tmp_4_fu_1327_p3}, {m_6_fu_1296_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_1073_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1080_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1080_p4[ap_tvar_int_0] = tmp_V_5_fu_1073_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl_cast_fu_708_p3 = {{grp_fu_1410_p3}, {3'd0}};

assign r_fu_475_p2 = (r_0_reg_357 + 4'd1);

assign select_ln11_fu_1394_p3 = ((icmp_ln11_reg_1471[0:0] === 1'b1) ? 9'd1 : add_ln11_1_fu_1388_p2);

assign select_ln18_1_fu_619_p3 = ((icmp_ln21_fu_605_p2[0:0] === 1'b1) ? wr_fu_599_p2 : ap_phi_mux_wr_0_phi_fu_417_p4);

assign select_ln18_fu_611_p3 = ((icmp_ln21_fu_605_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wc_0_phi_fu_440_p4);

assign select_ln37_1_fu_495_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? r_fu_475_p2 : r_0_reg_357);

assign select_ln37_2_fu_537_p3 = ((or_ln37_fu_531_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_391);

assign select_ln37_3_fu_545_p3 = ((and_ln37_fu_519_p2[0:0] === 1'b1) ? c_fu_525_p2 : select_ln37_fu_487_p3);

assign select_ln37_fu_487_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_380);

assign select_ln915_fu_1308_p3 = ((tmp_13_fu_1300_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1118_11_fu_1000_p1 = mul_ln1118_5_fu_1455_p2;

assign sext_ln1118_1_fu_776_p1 = mul_ln1118_fu_1420_p2;

assign sext_ln1118_3_fu_809_p1 = mul_ln1118_1_fu_1427_p2;

assign sext_ln1118_5_fu_881_p1 = mul_ln1118_2_fu_1434_p2;

assign sext_ln1118_7_fu_912_p1 = mul_ln1118_3_fu_1441_p2;

assign sext_ln1118_9_fu_969_p1 = mul_ln1118_4_fu_1448_p2;

assign sext_ln1265_fu_1045_p1 = $signed(conv_2_bias_V_q0);

assign shl_ln728_1_fu_822_p3 = {{tmp_5_fu_812_p4}, {8'd0}};

assign shl_ln728_2_fu_884_p3 = {{tmp_6_reg_1590}, {8'd0}};

assign shl_ln728_3_fu_925_p3 = {{tmp_7_fu_915_p4}, {8'd0}};

assign shl_ln728_4_fu_972_p3 = {{tmp_8_reg_1620}, {8'd0}};

assign shl_ln728_5_fu_1013_p3 = {{tmp_9_fu_1003_p4}, {8'd0}};

assign shl_ln908_fu_1264_p2 = m_fu_1234_p1 << zext_ln908_1_fu_1260_p1;

assign shl_ln_fu_779_p3 = {{w_sum_1_reg_424}, {8'd0}};

assign sub_ln1116_fu_643_p2 = (zext_ln1116_1_fu_639_p1 - zext_ln1116_fu_627_p1);

assign sub_ln1117_fu_726_p2 = (p_shl_cast_fu_708_p3 - zext_ln1117_2_fu_722_p1);

assign sub_ln894_fu_1106_p2 = (32'd14 - l_fu_1098_p3);

assign sub_ln897_fu_1142_p2 = (4'd4 - trunc_ln897_fu_1138_p1);

assign sub_ln908_fu_1255_p2 = (32'd54 - sub_ln894_reg_1663);

assign sub_ln915_fu_1316_p2 = (11'd6 - trunc_ln893_reg_1679);

assign tmp_11_fu_1122_p4 = {{lsb_index_fu_1116_p2[31:1]}};

assign tmp_12_fu_1176_p3 = lsb_index_fu_1116_p2[32'd31];

assign tmp_13_fu_1300_p3 = m_2_fu_1280_p2[32'd54];

assign tmp_17_cast_fu_557_p3 = {{grp_fu_1401_p3}, {4'd0}};

assign tmp_1_fu_631_p3 = {{select_ln18_1_fu_619_p3}, {2'd0}};

assign tmp_20_cast_fu_676_p3 = {{add_ln1116_fu_670_p2}, {4'd0}};

assign tmp_4_fu_1327_p3 = {{p_Result_24_reg_1652}, {add_ln915_fu_1321_p2}};

assign tmp_5_fu_812_p4 = {{add_ln1192_fu_795_p2[21:8]}};

assign tmp_7_fu_915_p4 = {{add_ln1192_2_fu_899_p2[21:8]}};

assign tmp_9_fu_1003_p4 = {{add_ln1192_4_fu_987_p2[21:8]}};

assign tmp_V_4_fu_1049_p2 = ($signed(sext_ln1265_fu_1045_p1) + $signed(w_sum_1_reg_424));

assign tmp_V_5_fu_1073_p3 = ((p_Result_24_fu_1061_p3[0:0] === 1'b1) ? tmp_V_fu_1068_p2 : tmp_V_4_reg_1640);

assign tmp_V_fu_1068_p2 = (14'd0 - tmp_V_4_reg_1640);

assign tmp_fu_715_p3 = {{grp_fu_1410_p3}, {1'd0}};

assign trunc_ln4_fu_1351_p4 = {{m_2_fu_1280_p2[52:1]}};

assign trunc_ln893_fu_1230_p1 = l_fu_1098_p3[10:0];

assign trunc_ln894_fu_1112_p1 = sub_ln894_fu_1106_p2[13:0];

assign trunc_ln897_fu_1138_p1 = sub_ln894_fu_1106_p2[3:0];

assign wc_fu_957_p2 = (select_ln18_reg_1517 + 2'd1);

assign wr_fu_599_p2 = (ap_phi_mux_wr_0_phi_fu_417_p4 + 2'd1);

assign xor_ln37_fu_507_p2 = (icmp_ln11_fu_481_p2 ^ 1'd1);

assign xor_ln899_fu_1184_p2 = (tmp_12_fu_1176_p3 ^ 1'd1);

assign zext_ln1116_1_fu_639_p1 = tmp_1_fu_631_p3;

assign zext_ln1116_2_fu_666_p1 = select_ln18_fu_611_p3;

assign zext_ln1116_3_fu_689_p1 = add_ln1116_1_fu_684_p2;

assign zext_ln1116_fu_627_p1 = select_ln18_1_fu_619_p3;

assign zext_ln1117_2_fu_722_p1 = tmp_fu_715_p3;

assign zext_ln1117_3_fu_732_p1 = sub_ln1117_fu_726_p2;

assign zext_ln1117_4_fu_743_p1 = or_ln1117_fu_737_p2;

assign zext_ln1117_5_fu_753_p1 = add_ln1117_1_fu_748_p2;

assign zext_ln1117_6_fu_763_p1 = add_ln1117_2_fu_758_p2;

assign zext_ln1117_7_fu_859_p1 = add_ln1117_3_fu_854_p2;

assign zext_ln1117_8_fu_869_p1 = add_ln1117_4_fu_864_p2;

assign zext_ln18_fu_649_p1 = select_ln18_1_fu_619_p3;

assign zext_ln203_10_fu_568_p1 = select_ln37_2_fu_537_p3;

assign zext_ln203_11_fu_572_p1 = select_ln37_2_fu_537_p3;

assign zext_ln203_12_fu_582_p1 = add_ln203_6_fu_576_p2;

assign zext_ln21_fu_662_p1 = select_ln18_fu_611_p3;

assign zext_ln26_fu_564_p1 = select_ln37_2_fu_537_p3;

assign zext_ln703_2_fu_834_p1 = $unsigned(sext_ln1118_3_fu_809_p1);

assign zext_ln703_3_fu_895_p1 = $unsigned(sext_ln1118_5_fu_881_p1);

assign zext_ln703_4_fu_937_p1 = $unsigned(sext_ln1118_7_fu_912_p1);

assign zext_ln703_5_fu_983_p1 = $unsigned(sext_ln1118_9_fu_969_p1);

assign zext_ln703_6_fu_1025_p1 = $unsigned(sext_ln1118_11_fu_1000_p1);

assign zext_ln703_fu_791_p1 = $unsigned(sext_ln1118_1_fu_776_p1);

assign zext_ln728_1_fu_830_p1 = shl_ln728_1_fu_822_p3;

assign zext_ln728_2_fu_891_p1 = shl_ln728_2_fu_884_p3;

assign zext_ln728_3_fu_933_p1 = shl_ln728_3_fu_925_p3;

assign zext_ln728_4_fu_979_p1 = shl_ln728_4_fu_972_p3;

assign zext_ln728_5_fu_1021_p1 = shl_ln728_5_fu_1013_p3;

assign zext_ln728_fu_787_p1 = shl_ln_fu_779_p3;

assign zext_ln897_fu_1148_p1 = sub_ln897_fu_1142_p2;

assign zext_ln907_1_fu_1237_p1 = tmp_V_5_reg_1657;

assign zext_ln908_1_fu_1260_p1 = sub_ln908_fu_1255_p2;

assign zext_ln908_fu_1251_p1 = lshr_ln908_fu_1245_p2;

assign zext_ln911_fu_1277_p1 = or_ln_reg_1669;

always @ (posedge ap_clk) begin
    zext_ln26_reg_1493[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln203_10_reg_1498[8:5] <= 4'b0000;
    sub_ln1117_reg_1557[0] <= 1'b0;
    or_ln_reg_1669[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_2
