// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_1_out_V_address0,
        dense_1_out_V_ce0,
        dense_1_out_V_q0,
        dense_1_out_V_address1,
        dense_1_out_V_ce1,
        dense_1_out_V_q1,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_we0,
        dense_2_out_V_d0
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_pp0_stage0 = 27'd2;
parameter    ap_ST_fsm_pp0_stage1 = 27'd4;
parameter    ap_ST_fsm_pp0_stage2 = 27'd8;
parameter    ap_ST_fsm_pp0_stage3 = 27'd16;
parameter    ap_ST_fsm_pp0_stage4 = 27'd32;
parameter    ap_ST_fsm_pp0_stage5 = 27'd64;
parameter    ap_ST_fsm_pp0_stage6 = 27'd128;
parameter    ap_ST_fsm_pp0_stage7 = 27'd256;
parameter    ap_ST_fsm_pp0_stage8 = 27'd512;
parameter    ap_ST_fsm_pp0_stage9 = 27'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 27'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 27'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 27'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 27'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 27'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 27'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 27'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 27'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 27'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 27'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 27'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 27'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 27'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 27'd33554432;
parameter    ap_ST_fsm_state28 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] dense_1_out_V_address0;
output   dense_1_out_V_ce0;
input  [12:0] dense_1_out_V_q0;
output  [5:0] dense_1_out_V_address1;
output   dense_1_out_V_ce1;
input  [12:0] dense_1_out_V_q1;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
output   dense_2_out_V_we0;
output  [12:0] dense_2_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] dense_1_out_V_address0;
reg dense_1_out_V_ce0;
reg[5:0] dense_1_out_V_address1;
reg dense_1_out_V_ce1;
reg dense_2_out_V_ce0;
reg dense_2_out_V_we0;

(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] dense_2_weights_V_0_address0;
reg    dense_2_weights_V_0_ce0;
wire  signed [7:0] dense_2_weights_V_0_q0;
wire   [4:0] dense_2_weights_V_1_address0;
reg    dense_2_weights_V_1_ce0;
wire  signed [8:0] dense_2_weights_V_1_q0;
wire   [4:0] dense_2_weights_V_2_address0;
reg    dense_2_weights_V_2_ce0;
wire   [7:0] dense_2_weights_V_2_q0;
wire   [4:0] dense_2_weights_V_3_address0;
reg    dense_2_weights_V_3_ce0;
wire   [7:0] dense_2_weights_V_3_q0;
wire   [4:0] dense_2_weights_V_4_address0;
reg    dense_2_weights_V_4_ce0;
wire   [8:0] dense_2_weights_V_4_q0;
wire   [4:0] dense_2_weights_V_5_address0;
reg    dense_2_weights_V_5_ce0;
wire   [8:0] dense_2_weights_V_5_q0;
wire   [4:0] dense_2_weights_V_6_address0;
reg    dense_2_weights_V_6_ce0;
wire   [8:0] dense_2_weights_V_6_q0;
wire   [4:0] dense_2_weights_V_7_address0;
reg    dense_2_weights_V_7_ce0;
wire   [8:0] dense_2_weights_V_7_q0;
wire   [4:0] dense_2_weights_V_8_address0;
reg    dense_2_weights_V_8_ce0;
wire   [8:0] dense_2_weights_V_8_q0;
wire   [4:0] dense_2_weights_V_9_address0;
reg    dense_2_weights_V_9_ce0;
wire   [8:0] dense_2_weights_V_9_q0;
wire   [4:0] dense_2_weights_V_10_address0;
reg    dense_2_weights_V_10_ce0;
wire   [7:0] dense_2_weights_V_10_q0;
wire   [4:0] dense_2_weights_V_11_address0;
reg    dense_2_weights_V_11_ce0;
wire   [8:0] dense_2_weights_V_11_q0;
wire   [4:0] dense_2_weights_V_12_address0;
reg    dense_2_weights_V_12_ce0;
wire   [7:0] dense_2_weights_V_12_q0;
wire   [4:0] dense_2_weights_V_13_address0;
reg    dense_2_weights_V_13_ce0;
wire   [7:0] dense_2_weights_V_13_q0;
wire   [4:0] dense_2_weights_V_14_address0;
reg    dense_2_weights_V_14_ce0;
wire   [8:0] dense_2_weights_V_14_q0;
wire   [4:0] dense_2_weights_V_15_address0;
reg    dense_2_weights_V_15_ce0;
wire   [7:0] dense_2_weights_V_15_q0;
wire   [4:0] dense_2_weights_V_16_address0;
reg    dense_2_weights_V_16_ce0;
wire   [8:0] dense_2_weights_V_16_q0;
wire   [4:0] dense_2_weights_V_17_address0;
reg    dense_2_weights_V_17_ce0;
wire   [7:0] dense_2_weights_V_17_q0;
wire   [4:0] dense_2_weights_V_18_address0;
reg    dense_2_weights_V_18_ce0;
wire   [8:0] dense_2_weights_V_18_q0;
wire   [4:0] dense_2_weights_V_19_address0;
reg    dense_2_weights_V_19_ce0;
wire   [8:0] dense_2_weights_V_19_q0;
wire   [4:0] dense_2_weights_V_20_address0;
reg    dense_2_weights_V_20_ce0;
wire   [8:0] dense_2_weights_V_20_q0;
wire   [4:0] dense_2_weights_V_21_address0;
reg    dense_2_weights_V_21_ce0;
wire   [8:0] dense_2_weights_V_21_q0;
wire   [4:0] dense_2_weights_V_22_address0;
reg    dense_2_weights_V_22_ce0;
wire   [7:0] dense_2_weights_V_22_q0;
wire   [4:0] dense_2_weights_V_23_address0;
reg    dense_2_weights_V_23_ce0;
wire   [7:0] dense_2_weights_V_23_q0;
wire   [4:0] dense_2_weights_V_24_address0;
reg    dense_2_weights_V_24_ce0;
wire   [8:0] dense_2_weights_V_24_q0;
wire   [4:0] dense_2_weights_V_25_address0;
reg    dense_2_weights_V_25_ce0;
wire   [8:0] dense_2_weights_V_25_q0;
wire   [4:0] dense_2_weights_V_26_address0;
reg    dense_2_weights_V_26_ce0;
wire   [8:0] dense_2_weights_V_26_q0;
wire   [4:0] dense_2_weights_V_27_address0;
reg    dense_2_weights_V_27_ce0;
wire   [8:0] dense_2_weights_V_27_q0;
wire   [4:0] dense_2_weights_V_28_address0;
reg    dense_2_weights_V_28_ce0;
wire   [8:0] dense_2_weights_V_28_q0;
wire   [4:0] dense_2_weights_V_29_address0;
reg    dense_2_weights_V_29_ce0;
wire   [7:0] dense_2_weights_V_29_q0;
wire   [4:0] dense_2_weights_V_30_address0;
reg    dense_2_weights_V_30_ce0;
wire   [7:0] dense_2_weights_V_30_q0;
wire   [4:0] dense_2_weights_V_31_address0;
reg    dense_2_weights_V_31_ce0;
wire   [7:0] dense_2_weights_V_31_q0;
wire   [4:0] dense_2_weights_V_32_address0;
reg    dense_2_weights_V_32_ce0;
wire   [8:0] dense_2_weights_V_32_q0;
wire   [4:0] dense_2_weights_V_33_address0;
reg    dense_2_weights_V_33_ce0;
wire   [8:0] dense_2_weights_V_33_q0;
wire   [4:0] dense_2_weights_V_34_address0;
reg    dense_2_weights_V_34_ce0;
wire   [8:0] dense_2_weights_V_34_q0;
wire   [4:0] dense_2_weights_V_35_address0;
reg    dense_2_weights_V_35_ce0;
wire   [8:0] dense_2_weights_V_35_q0;
wire   [4:0] dense_2_weights_V_36_address0;
reg    dense_2_weights_V_36_ce0;
wire   [8:0] dense_2_weights_V_36_q0;
wire   [4:0] dense_2_weights_V_37_address0;
reg    dense_2_weights_V_37_ce0;
wire   [7:0] dense_2_weights_V_37_q0;
wire   [4:0] dense_2_weights_V_38_address0;
reg    dense_2_weights_V_38_ce0;
wire   [8:0] dense_2_weights_V_38_q0;
wire   [4:0] dense_2_weights_V_39_address0;
reg    dense_2_weights_V_39_ce0;
wire   [7:0] dense_2_weights_V_39_q0;
wire   [4:0] dense_2_weights_V_40_address0;
reg    dense_2_weights_V_40_ce0;
wire   [8:0] dense_2_weights_V_40_q0;
wire   [4:0] dense_2_weights_V_41_address0;
reg    dense_2_weights_V_41_ce0;
wire   [8:0] dense_2_weights_V_41_q0;
wire   [4:0] dense_2_weights_V_42_address0;
reg    dense_2_weights_V_42_ce0;
wire   [8:0] dense_2_weights_V_42_q0;
wire   [4:0] dense_2_weights_V_43_address0;
reg    dense_2_weights_V_43_ce0;
wire   [8:0] dense_2_weights_V_43_q0;
wire   [4:0] dense_2_weights_V_44_address0;
reg    dense_2_weights_V_44_ce0;
wire   [8:0] dense_2_weights_V_44_q0;
wire   [4:0] dense_2_weights_V_45_address0;
reg    dense_2_weights_V_45_ce0;
wire   [8:0] dense_2_weights_V_45_q0;
wire   [4:0] dense_2_weights_V_46_address0;
reg    dense_2_weights_V_46_ce0;
wire   [8:0] dense_2_weights_V_46_q0;
wire   [4:0] dense_2_weights_V_47_address0;
reg    dense_2_weights_V_47_ce0;
wire   [8:0] dense_2_weights_V_47_q0;
wire   [4:0] dense_2_weights_V_48_address0;
reg    dense_2_weights_V_48_ce0;
wire   [8:0] dense_2_weights_V_48_q0;
wire   [4:0] dense_2_weights_V_49_address0;
reg    dense_2_weights_V_49_ce0;
wire   [7:0] dense_2_weights_V_49_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
reg   [4:0] i_0_reg_1341;
wire   [0:0] icmp_ln9_fu_1352_p2;
reg   [0:0] icmp_ln9_reg_3336;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state27_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] i_fu_1358_p2;
reg   [4:0] i_reg_3340;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln14_fu_1364_p1;
reg   [63:0] zext_ln14_reg_3345;
reg  signed [7:0] dense_2_weights_V_2_1_reg_3605;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [13:0] tmp_s_reg_3610;
reg  signed [7:0] dense_2_weights_V_3_1_reg_3615;
reg  signed [8:0] dense_2_weights_V_4_1_reg_3620;
reg  signed [8:0] dense_2_weights_V_5_1_reg_3625;
reg  signed [8:0] dense_2_weights_V_6_1_reg_3630;
reg  signed [8:0] dense_2_weights_V_7_1_reg_3635;
reg  signed [8:0] dense_2_weights_V_8_1_reg_3640;
reg  signed [8:0] dense_2_weights_V_9_1_reg_3645;
reg  signed [7:0] dense_2_weights_V_10_2_reg_3650;
reg  signed [8:0] dense_2_weights_V_11_2_reg_3655;
reg  signed [7:0] dense_2_weights_V_12_2_reg_3660;
reg  signed [7:0] dense_2_weights_V_13_2_reg_3665;
reg  signed [8:0] dense_2_weights_V_14_2_reg_3670;
reg  signed [7:0] dense_2_weights_V_15_2_reg_3675;
reg  signed [8:0] dense_2_weights_V_16_2_reg_3680;
reg  signed [7:0] dense_2_weights_V_17_2_reg_3685;
reg  signed [8:0] dense_2_weights_V_18_2_reg_3690;
reg  signed [8:0] dense_2_weights_V_19_2_reg_3695;
reg  signed [8:0] dense_2_weights_V_20_2_reg_3700;
reg  signed [8:0] dense_2_weights_V_21_2_reg_3705;
reg  signed [7:0] dense_2_weights_V_22_2_reg_3710;
reg  signed [7:0] dense_2_weights_V_23_2_reg_3715;
reg  signed [8:0] dense_2_weights_V_24_2_reg_3720;
reg  signed [8:0] dense_2_weights_V_25_2_reg_3725;
reg  signed [8:0] dense_2_weights_V_26_2_reg_3730;
reg  signed [8:0] dense_2_weights_V_27_2_reg_3735;
reg  signed [8:0] dense_2_weights_V_28_2_reg_3740;
reg  signed [7:0] dense_2_weights_V_29_2_reg_3745;
reg  signed [7:0] dense_2_weights_V_30_2_reg_3750;
reg  signed [7:0] dense_2_weights_V_31_2_reg_3755;
reg  signed [8:0] dense_2_weights_V_32_2_reg_3760;
reg  signed [8:0] dense_2_weights_V_33_2_reg_3765;
reg  signed [8:0] dense_2_weights_V_34_2_reg_3770;
reg  signed [8:0] dense_2_weights_V_35_2_reg_3775;
reg  signed [8:0] dense_2_weights_V_36_2_reg_3780;
reg  signed [7:0] dense_2_weights_V_37_2_reg_3785;
reg  signed [8:0] dense_2_weights_V_38_2_reg_3790;
reg  signed [7:0] dense_2_weights_V_39_2_reg_3795;
reg  signed [8:0] dense_2_weights_V_40_2_reg_3800;
reg  signed [8:0] dense_2_weights_V_41_2_reg_3805;
reg  signed [8:0] dense_2_weights_V_42_2_reg_3810;
reg  signed [8:0] dense_2_weights_V_43_2_reg_3815;
reg  signed [8:0] dense_2_weights_V_44_2_reg_3820;
reg  signed [8:0] dense_2_weights_V_45_2_reg_3825;
reg  signed [8:0] dense_2_weights_V_46_2_reg_3830;
reg  signed [8:0] dense_2_weights_V_47_2_reg_3835;
reg  signed [8:0] dense_2_weights_V_48_2_reg_3840;
reg  signed [7:0] dense_2_weights_V_49_2_reg_3845;
reg  signed [8:0] p_Val2_s_reg_3850;
reg   [13:0] tmp_3_reg_3856;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [13:0] tmp_5_reg_3861;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] tmp_9_reg_3866;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [13:0] tmp_11_reg_3871;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [13:0] tmp_13_reg_3876;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [13:0] tmp_15_reg_3881;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg   [13:0] tmp_17_reg_3886;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [13:0] tmp_19_reg_3891;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [13:0] tmp_21_reg_3896;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [13:0] tmp_23_reg_3901;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
reg   [13:0] tmp_25_reg_3906;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg   [13:0] tmp_27_reg_3911;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
reg   [13:0] tmp_29_reg_3916;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg   [13:0] tmp_31_reg_3921;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg   [13:0] tmp_33_reg_3926;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
reg   [13:0] tmp_35_reg_3931;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg   [13:0] tmp_37_reg_3936;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
reg   [13:0] tmp_39_reg_3941;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
reg   [13:0] tmp_41_reg_3946;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
reg   [13:0] tmp_43_reg_3951;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
reg   [13:0] tmp_45_reg_3956;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
reg   [13:0] tmp_47_reg_3961;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_state25_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
reg   [13:0] tmp_49_reg_3966;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage24_subdone;
reg   [4:0] ap_phi_mux_i_0_phi_fu_1345_p4;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire    ap_block_pp0_stage19;
wire    ap_block_pp0_stage20;
wire    ap_block_pp0_stage21;
wire    ap_block_pp0_stage22;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire  signed [20:0] mul_ln708_fu_2637_p2;
wire   [12:0] tmp_6_fu_1435_p4;
wire  signed [20:0] tmp_7_fu_1444_p3;
wire  signed [21:0] grp_fu_2644_p3;
wire  signed [21:0] grp_fu_2653_p3;
wire   [13:0] tmp_2_fu_1486_p4;
wire  signed [21:0] grp_fu_2662_p3;
wire  signed [21:0] grp_fu_2671_p3;
wire   [13:0] tmp_4_fu_1533_p4;
wire  signed [21:0] grp_fu_2680_p3;
wire  signed [21:0] grp_fu_2689_p3;
wire   [13:0] tmp_8_fu_1580_p4;
wire  signed [21:0] grp_fu_2698_p3;
wire  signed [21:0] grp_fu_2707_p3;
wire   [13:0] tmp_10_fu_1627_p4;
wire  signed [21:0] grp_fu_2716_p3;
wire  signed [21:0] grp_fu_2725_p3;
wire   [13:0] tmp_12_fu_1674_p4;
wire  signed [21:0] grp_fu_2734_p3;
wire  signed [21:0] grp_fu_2743_p3;
wire   [13:0] tmp_14_fu_1721_p4;
wire  signed [21:0] grp_fu_2752_p3;
wire  signed [21:0] grp_fu_2761_p3;
wire   [13:0] tmp_16_fu_1768_p4;
wire  signed [21:0] grp_fu_2770_p3;
wire  signed [21:0] grp_fu_2779_p3;
wire   [13:0] tmp_18_fu_1815_p4;
wire  signed [21:0] grp_fu_2788_p3;
wire  signed [21:0] grp_fu_2797_p3;
wire   [13:0] tmp_20_fu_1862_p4;
wire  signed [21:0] grp_fu_2806_p3;
wire  signed [21:0] grp_fu_2815_p3;
wire   [13:0] tmp_22_fu_1909_p4;
wire  signed [21:0] grp_fu_2824_p3;
wire  signed [21:0] grp_fu_2833_p3;
wire   [13:0] tmp_24_fu_1956_p4;
wire  signed [21:0] grp_fu_2842_p3;
wire  signed [21:0] grp_fu_2851_p3;
wire   [13:0] tmp_26_fu_2003_p4;
wire  signed [21:0] grp_fu_2860_p3;
wire  signed [21:0] grp_fu_2869_p3;
wire   [13:0] tmp_28_fu_2050_p4;
wire  signed [21:0] grp_fu_2878_p3;
wire  signed [21:0] grp_fu_2887_p3;
wire   [13:0] tmp_30_fu_2097_p4;
wire  signed [21:0] grp_fu_2896_p3;
wire  signed [21:0] grp_fu_2905_p3;
wire   [13:0] tmp_32_fu_2144_p4;
wire  signed [21:0] grp_fu_2914_p3;
wire  signed [21:0] grp_fu_2923_p3;
wire   [13:0] tmp_34_fu_2191_p4;
wire  signed [21:0] grp_fu_2932_p3;
wire  signed [21:0] grp_fu_2941_p3;
wire   [13:0] tmp_36_fu_2238_p4;
wire  signed [21:0] grp_fu_2950_p3;
wire  signed [21:0] grp_fu_2959_p3;
wire   [13:0] tmp_38_fu_2285_p4;
wire  signed [21:0] grp_fu_2968_p3;
wire  signed [21:0] grp_fu_2977_p3;
wire   [13:0] tmp_40_fu_2332_p4;
wire  signed [21:0] grp_fu_2986_p3;
wire  signed [21:0] grp_fu_2995_p3;
wire   [13:0] tmp_42_fu_2379_p4;
wire  signed [21:0] grp_fu_3004_p3;
wire  signed [21:0] grp_fu_3013_p3;
wire   [13:0] tmp_44_fu_2426_p4;
wire  signed [21:0] grp_fu_3022_p3;
wire  signed [21:0] grp_fu_3031_p3;
wire   [13:0] tmp_46_fu_2473_p4;
wire  signed [21:0] grp_fu_3040_p3;
wire  signed [21:0] grp_fu_3049_p3;
wire   [13:0] tmp_48_fu_2520_p4;
wire  signed [21:0] grp_fu_3058_p3;
wire  signed [21:0] grp_fu_3067_p3;
wire   [13:0] tmp_50_fu_2567_p4;
wire  signed [21:0] grp_fu_3076_p3;
wire   [13:0] trunc_ln708_s_fu_2584_p4;
wire  signed [13:0] sext_ln1265_fu_2593_p1;
wire  signed [12:0] sext_ln703_fu_2605_p1;
wire   [12:0] trunc_ln_fu_2596_p4;
wire   [13:0] add_ln703_fu_2608_p2;
wire   [0:0] tmp_51_fu_2620_p3;
wire   [12:0] add_ln203_fu_2614_p2;
wire   [12:0] mul_ln708_fu_2637_p1;
wire   [12:0] grp_fu_2644_p1;
wire   [12:0] grp_fu_2653_p1;
wire   [21:0] grp_fu_2653_p2;
wire   [12:0] grp_fu_2662_p1;
wire   [21:0] grp_fu_2662_p2;
wire   [12:0] grp_fu_2671_p1;
wire   [21:0] grp_fu_2671_p2;
wire   [12:0] grp_fu_2680_p1;
wire   [21:0] grp_fu_2680_p2;
wire   [12:0] grp_fu_2689_p1;
wire   [21:0] grp_fu_2689_p2;
wire   [12:0] grp_fu_2698_p1;
wire   [21:0] grp_fu_2698_p2;
wire   [12:0] grp_fu_2707_p1;
wire   [21:0] grp_fu_2707_p2;
wire   [12:0] grp_fu_2716_p1;
wire   [21:0] grp_fu_2716_p2;
wire   [12:0] grp_fu_2725_p1;
wire   [21:0] grp_fu_2725_p2;
wire   [12:0] grp_fu_2734_p1;
wire   [21:0] grp_fu_2734_p2;
wire   [12:0] grp_fu_2743_p1;
wire   [21:0] grp_fu_2743_p2;
wire   [12:0] grp_fu_2752_p1;
wire   [21:0] grp_fu_2752_p2;
wire   [12:0] grp_fu_2761_p1;
wire   [21:0] grp_fu_2761_p2;
wire   [12:0] grp_fu_2770_p1;
wire   [21:0] grp_fu_2770_p2;
wire   [12:0] grp_fu_2779_p1;
wire   [21:0] grp_fu_2779_p2;
wire   [12:0] grp_fu_2788_p1;
wire   [21:0] grp_fu_2788_p2;
wire   [12:0] grp_fu_2797_p1;
wire   [21:0] grp_fu_2797_p2;
wire   [12:0] grp_fu_2806_p1;
wire   [21:0] grp_fu_2806_p2;
wire   [12:0] grp_fu_2815_p1;
wire   [21:0] grp_fu_2815_p2;
wire   [12:0] grp_fu_2824_p1;
wire   [21:0] grp_fu_2824_p2;
wire   [12:0] grp_fu_2833_p1;
wire   [21:0] grp_fu_2833_p2;
wire   [12:0] grp_fu_2842_p1;
wire   [21:0] grp_fu_2842_p2;
wire   [12:0] grp_fu_2851_p1;
wire   [21:0] grp_fu_2851_p2;
wire   [12:0] grp_fu_2860_p1;
wire   [21:0] grp_fu_2860_p2;
wire   [12:0] grp_fu_2869_p1;
wire   [21:0] grp_fu_2869_p2;
wire   [12:0] grp_fu_2878_p1;
wire   [21:0] grp_fu_2878_p2;
wire   [12:0] grp_fu_2887_p1;
wire   [21:0] grp_fu_2887_p2;
wire   [12:0] grp_fu_2896_p1;
wire   [21:0] grp_fu_2896_p2;
wire   [12:0] grp_fu_2905_p1;
wire   [21:0] grp_fu_2905_p2;
wire   [12:0] grp_fu_2914_p1;
wire   [21:0] grp_fu_2914_p2;
wire   [12:0] grp_fu_2923_p1;
wire   [21:0] grp_fu_2923_p2;
wire   [12:0] grp_fu_2932_p1;
wire   [21:0] grp_fu_2932_p2;
wire   [12:0] grp_fu_2941_p1;
wire   [21:0] grp_fu_2941_p2;
wire   [12:0] grp_fu_2950_p1;
wire   [21:0] grp_fu_2950_p2;
wire   [12:0] grp_fu_2959_p1;
wire   [21:0] grp_fu_2959_p2;
wire   [12:0] grp_fu_2968_p1;
wire   [21:0] grp_fu_2968_p2;
wire   [12:0] grp_fu_2977_p1;
wire   [21:0] grp_fu_2977_p2;
wire   [12:0] grp_fu_2986_p1;
wire   [21:0] grp_fu_2986_p2;
wire   [12:0] grp_fu_2995_p1;
wire   [21:0] grp_fu_2995_p2;
wire   [12:0] grp_fu_3004_p1;
wire   [21:0] grp_fu_3004_p2;
wire   [12:0] grp_fu_3013_p1;
wire   [21:0] grp_fu_3013_p2;
wire   [12:0] grp_fu_3022_p1;
wire   [21:0] grp_fu_3022_p2;
wire   [12:0] grp_fu_3031_p1;
wire   [21:0] grp_fu_3031_p2;
wire   [12:0] grp_fu_3040_p1;
wire   [21:0] grp_fu_3040_p2;
wire   [12:0] grp_fu_3049_p1;
wire   [21:0] grp_fu_3049_p2;
wire   [12:0] grp_fu_3058_p1;
wire   [21:0] grp_fu_3058_p2;
wire   [12:0] grp_fu_3067_p1;
wire   [21:0] grp_fu_3067_p2;
wire   [12:0] grp_fu_3076_p1;
wire   [21:0] grp_fu_3076_p2;
wire    ap_CS_fsm_state28;
reg   [26:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [21:0] grp_fu_2644_p10;
wire   [20:0] grp_fu_2653_p10;
wire   [20:0] grp_fu_2662_p10;
wire   [21:0] grp_fu_2671_p10;
wire   [21:0] grp_fu_2680_p10;
wire   [21:0] grp_fu_2689_p10;
wire   [21:0] grp_fu_2698_p10;
wire   [21:0] grp_fu_2707_p10;
wire   [21:0] grp_fu_2716_p10;
wire   [20:0] grp_fu_2725_p10;
wire   [21:0] grp_fu_2734_p10;
wire   [20:0] grp_fu_2743_p10;
wire   [20:0] grp_fu_2752_p10;
wire   [21:0] grp_fu_2761_p10;
wire   [20:0] grp_fu_2770_p10;
wire   [21:0] grp_fu_2779_p10;
wire   [20:0] grp_fu_2788_p10;
wire   [21:0] grp_fu_2797_p10;
wire   [21:0] grp_fu_2806_p10;
wire   [21:0] grp_fu_2815_p10;
wire   [21:0] grp_fu_2824_p10;
wire   [20:0] grp_fu_2833_p10;
wire   [20:0] grp_fu_2842_p10;
wire   [21:0] grp_fu_2851_p10;
wire   [21:0] grp_fu_2860_p10;
wire   [21:0] grp_fu_2869_p10;
wire   [21:0] grp_fu_2878_p10;
wire   [21:0] grp_fu_2887_p10;
wire   [20:0] grp_fu_2896_p10;
wire   [20:0] grp_fu_2905_p10;
wire   [20:0] grp_fu_2914_p10;
wire   [21:0] grp_fu_2923_p10;
wire   [21:0] grp_fu_2932_p10;
wire   [21:0] grp_fu_2941_p10;
wire   [21:0] grp_fu_2950_p10;
wire   [21:0] grp_fu_2959_p10;
wire   [20:0] grp_fu_2968_p10;
wire   [21:0] grp_fu_2977_p10;
wire   [20:0] grp_fu_2986_p10;
wire   [21:0] grp_fu_2995_p10;
wire   [21:0] grp_fu_3004_p10;
wire   [21:0] grp_fu_3013_p10;
wire   [21:0] grp_fu_3022_p10;
wire   [21:0] grp_fu_3031_p10;
wire   [21:0] grp_fu_3040_p10;
wire   [21:0] grp_fu_3049_p10;
wire   [21:0] grp_fu_3058_p10;
wire   [21:0] grp_fu_3067_p10;
wire   [20:0] grp_fu_3076_p10;
wire   [20:0] mul_ln708_fu_2637_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 27'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dense_2_dense_2_wlbW #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_0_address0),
    .ce0(dense_2_weights_V_0_ce0),
    .q0(dense_2_weights_V_0_q0)
);

dense_2_dense_2_wmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_1_address0),
    .ce0(dense_2_weights_V_1_ce0),
    .q0(dense_2_weights_V_1_q0)
);

dense_2_dense_2_wncg #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_2_address0),
    .ce0(dense_2_weights_V_2_ce0),
    .q0(dense_2_weights_V_2_q0)
);

dense_2_dense_2_wocq #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_3_address0),
    .ce0(dense_2_weights_V_3_ce0),
    .q0(dense_2_weights_V_3_q0)
);

dense_2_dense_2_wpcA #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_4_address0),
    .ce0(dense_2_weights_V_4_ce0),
    .q0(dense_2_weights_V_4_q0)
);

dense_2_dense_2_wqcK #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_5_address0),
    .ce0(dense_2_weights_V_5_ce0),
    .q0(dense_2_weights_V_5_q0)
);

dense_2_dense_2_wrcU #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_6_address0),
    .ce0(dense_2_weights_V_6_ce0),
    .q0(dense_2_weights_V_6_q0)
);

dense_2_dense_2_wsc4 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_7_address0),
    .ce0(dense_2_weights_V_7_ce0),
    .q0(dense_2_weights_V_7_q0)
);

dense_2_dense_2_wtde #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_8_address0),
    .ce0(dense_2_weights_V_8_ce0),
    .q0(dense_2_weights_V_8_q0)
);

dense_2_dense_2_wudo #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_9_address0),
    .ce0(dense_2_weights_V_9_ce0),
    .q0(dense_2_weights_V_9_q0)
);

dense_2_dense_2_wvdy #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_10_address0),
    .ce0(dense_2_weights_V_10_ce0),
    .q0(dense_2_weights_V_10_q0)
);

dense_2_dense_2_wwdI #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_11_address0),
    .ce0(dense_2_weights_V_11_ce0),
    .q0(dense_2_weights_V_11_q0)
);

dense_2_dense_2_wxdS #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_12_address0),
    .ce0(dense_2_weights_V_12_ce0),
    .q0(dense_2_weights_V_12_q0)
);

dense_2_dense_2_wyd2 #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_13_address0),
    .ce0(dense_2_weights_V_13_ce0),
    .q0(dense_2_weights_V_13_q0)
);

dense_2_dense_2_wzec #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_14_address0),
    .ce0(dense_2_weights_V_14_ce0),
    .q0(dense_2_weights_V_14_q0)
);

dense_2_dense_2_wAem #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_15_address0),
    .ce0(dense_2_weights_V_15_ce0),
    .q0(dense_2_weights_V_15_q0)
);

dense_2_dense_2_wBew #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_16_address0),
    .ce0(dense_2_weights_V_16_ce0),
    .q0(dense_2_weights_V_16_q0)
);

dense_2_dense_2_wCeG #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_17_address0),
    .ce0(dense_2_weights_V_17_ce0),
    .q0(dense_2_weights_V_17_q0)
);

dense_2_dense_2_wDeQ #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_18_address0),
    .ce0(dense_2_weights_V_18_ce0),
    .q0(dense_2_weights_V_18_q0)
);

dense_2_dense_2_wEe0 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_19_address0),
    .ce0(dense_2_weights_V_19_ce0),
    .q0(dense_2_weights_V_19_q0)
);

dense_2_dense_2_wFfa #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_20_address0),
    .ce0(dense_2_weights_V_20_ce0),
    .q0(dense_2_weights_V_20_q0)
);

dense_2_dense_2_wGfk #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_21_address0),
    .ce0(dense_2_weights_V_21_ce0),
    .q0(dense_2_weights_V_21_q0)
);

dense_2_dense_2_wHfu #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_22_address0),
    .ce0(dense_2_weights_V_22_ce0),
    .q0(dense_2_weights_V_22_q0)
);

dense_2_dense_2_wIfE #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_23_address0),
    .ce0(dense_2_weights_V_23_ce0),
    .q0(dense_2_weights_V_23_q0)
);

dense_2_dense_2_wJfO #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_24_address0),
    .ce0(dense_2_weights_V_24_ce0),
    .q0(dense_2_weights_V_24_q0)
);

dense_2_dense_2_wKfY #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_25_address0),
    .ce0(dense_2_weights_V_25_ce0),
    .q0(dense_2_weights_V_25_q0)
);

dense_2_dense_2_wLf8 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_26_address0),
    .ce0(dense_2_weights_V_26_ce0),
    .q0(dense_2_weights_V_26_q0)
);

dense_2_dense_2_wMgi #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_27_address0),
    .ce0(dense_2_weights_V_27_ce0),
    .q0(dense_2_weights_V_27_q0)
);

dense_2_dense_2_wNgs #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_28_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_28_address0),
    .ce0(dense_2_weights_V_28_ce0),
    .q0(dense_2_weights_V_28_q0)
);

dense_2_dense_2_wOgC #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_29_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_29_address0),
    .ce0(dense_2_weights_V_29_ce0),
    .q0(dense_2_weights_V_29_q0)
);

dense_2_dense_2_wPgM #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_30_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_30_address0),
    .ce0(dense_2_weights_V_30_ce0),
    .q0(dense_2_weights_V_30_q0)
);

dense_2_dense_2_wQgW #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_31_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_31_address0),
    .ce0(dense_2_weights_V_31_ce0),
    .q0(dense_2_weights_V_31_q0)
);

dense_2_dense_2_wRg6 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_32_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_32_address0),
    .ce0(dense_2_weights_V_32_ce0),
    .q0(dense_2_weights_V_32_q0)
);

dense_2_dense_2_wShg #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_33_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_33_address0),
    .ce0(dense_2_weights_V_33_ce0),
    .q0(dense_2_weights_V_33_q0)
);

dense_2_dense_2_wThq #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_34_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_34_address0),
    .ce0(dense_2_weights_V_34_ce0),
    .q0(dense_2_weights_V_34_q0)
);

dense_2_dense_2_wUhA #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_35_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_35_address0),
    .ce0(dense_2_weights_V_35_ce0),
    .q0(dense_2_weights_V_35_q0)
);

dense_2_dense_2_wVhK #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_36_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_36_address0),
    .ce0(dense_2_weights_V_36_ce0),
    .q0(dense_2_weights_V_36_q0)
);

dense_2_dense_2_wWhU #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_37_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_37_address0),
    .ce0(dense_2_weights_V_37_ce0),
    .q0(dense_2_weights_V_37_q0)
);

dense_2_dense_2_wXh4 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_38_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_38_address0),
    .ce0(dense_2_weights_V_38_ce0),
    .q0(dense_2_weights_V_38_q0)
);

dense_2_dense_2_wYie #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_39_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_39_address0),
    .ce0(dense_2_weights_V_39_ce0),
    .q0(dense_2_weights_V_39_q0)
);

dense_2_dense_2_wZio #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_40_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_40_address0),
    .ce0(dense_2_weights_V_40_ce0),
    .q0(dense_2_weights_V_40_q0)
);

dense_2_dense_2_w0iy #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_41_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_41_address0),
    .ce0(dense_2_weights_V_41_ce0),
    .q0(dense_2_weights_V_41_q0)
);

dense_2_dense_2_w1iI #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_42_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_42_address0),
    .ce0(dense_2_weights_V_42_ce0),
    .q0(dense_2_weights_V_42_q0)
);

dense_2_dense_2_w2iS #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_43_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_43_address0),
    .ce0(dense_2_weights_V_43_ce0),
    .q0(dense_2_weights_V_43_q0)
);

dense_2_dense_2_w3i2 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_44_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_44_address0),
    .ce0(dense_2_weights_V_44_ce0),
    .q0(dense_2_weights_V_44_q0)
);

dense_2_dense_2_w4jc #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_45_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_45_address0),
    .ce0(dense_2_weights_V_45_ce0),
    .q0(dense_2_weights_V_45_q0)
);

dense_2_dense_2_w5jm #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_46_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_46_address0),
    .ce0(dense_2_weights_V_46_ce0),
    .q0(dense_2_weights_V_46_q0)
);

dense_2_dense_2_w6jw #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_47_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_47_address0),
    .ce0(dense_2_weights_V_47_ce0),
    .q0(dense_2_weights_V_47_q0)
);

dense_2_dense_2_w7jG #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_48_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_48_address0),
    .ce0(dense_2_weights_V_48_ce0),
    .q0(dense_2_weights_V_48_q0)
);

dense_2_dense_2_w8jQ #(
    .DataWidth( 8 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_weights_V_49_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_49_address0),
    .ce0(dense_2_weights_V_49_ce0),
    .q0(dense_2_weights_V_49_q0)
);

dense_2_dense_2_b9j0 #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_mul_mul_8s_13bak #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 21 ))
cnn_mul_mul_8s_13bak_U28(
    .din0(dense_2_weights_V_0_q0),
    .din1(mul_ln708_fu_2637_p1),
    .dout(mul_ln708_fu_2637_p2)
);

cnn_mac_muladd_9sbbk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbbk_U29(
    .din0(dense_2_weights_V_1_q0),
    .din1(grp_fu_2644_p1),
    .din2(tmp_7_fu_1444_p3),
    .dout(grp_fu_2644_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U30(
    .din0(dense_2_weights_V_2_1_reg_3605),
    .din1(grp_fu_2653_p1),
    .din2(grp_fu_2653_p2),
    .dout(grp_fu_2653_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U31(
    .din0(dense_2_weights_V_3_1_reg_3615),
    .din1(grp_fu_2662_p1),
    .din2(grp_fu_2662_p2),
    .dout(grp_fu_2662_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U32(
    .din0(dense_2_weights_V_4_1_reg_3620),
    .din1(grp_fu_2671_p1),
    .din2(grp_fu_2671_p2),
    .dout(grp_fu_2671_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U33(
    .din0(dense_2_weights_V_5_1_reg_3625),
    .din1(grp_fu_2680_p1),
    .din2(grp_fu_2680_p2),
    .dout(grp_fu_2680_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U34(
    .din0(dense_2_weights_V_6_1_reg_3630),
    .din1(grp_fu_2689_p1),
    .din2(grp_fu_2689_p2),
    .dout(grp_fu_2689_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U35(
    .din0(dense_2_weights_V_7_1_reg_3635),
    .din1(grp_fu_2698_p1),
    .din2(grp_fu_2698_p2),
    .dout(grp_fu_2698_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U36(
    .din0(dense_2_weights_V_8_1_reg_3640),
    .din1(grp_fu_2707_p1),
    .din2(grp_fu_2707_p2),
    .dout(grp_fu_2707_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U37(
    .din0(dense_2_weights_V_9_1_reg_3645),
    .din1(grp_fu_2716_p1),
    .din2(grp_fu_2716_p2),
    .dout(grp_fu_2716_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U38(
    .din0(dense_2_weights_V_10_2_reg_3650),
    .din1(grp_fu_2725_p1),
    .din2(grp_fu_2725_p2),
    .dout(grp_fu_2725_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U39(
    .din0(dense_2_weights_V_11_2_reg_3655),
    .din1(grp_fu_2734_p1),
    .din2(grp_fu_2734_p2),
    .dout(grp_fu_2734_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U40(
    .din0(dense_2_weights_V_12_2_reg_3660),
    .din1(grp_fu_2743_p1),
    .din2(grp_fu_2743_p2),
    .dout(grp_fu_2743_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U41(
    .din0(dense_2_weights_V_13_2_reg_3665),
    .din1(grp_fu_2752_p1),
    .din2(grp_fu_2752_p2),
    .dout(grp_fu_2752_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U42(
    .din0(dense_2_weights_V_14_2_reg_3670),
    .din1(grp_fu_2761_p1),
    .din2(grp_fu_2761_p2),
    .dout(grp_fu_2761_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U43(
    .din0(dense_2_weights_V_15_2_reg_3675),
    .din1(grp_fu_2770_p1),
    .din2(grp_fu_2770_p2),
    .dout(grp_fu_2770_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U44(
    .din0(dense_2_weights_V_16_2_reg_3680),
    .din1(grp_fu_2779_p1),
    .din2(grp_fu_2779_p2),
    .dout(grp_fu_2779_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U45(
    .din0(dense_2_weights_V_17_2_reg_3685),
    .din1(grp_fu_2788_p1),
    .din2(grp_fu_2788_p2),
    .dout(grp_fu_2788_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U46(
    .din0(dense_2_weights_V_18_2_reg_3690),
    .din1(grp_fu_2797_p1),
    .din2(grp_fu_2797_p2),
    .dout(grp_fu_2797_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U47(
    .din0(dense_2_weights_V_19_2_reg_3695),
    .din1(grp_fu_2806_p1),
    .din2(grp_fu_2806_p2),
    .dout(grp_fu_2806_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U48(
    .din0(dense_2_weights_V_20_2_reg_3700),
    .din1(grp_fu_2815_p1),
    .din2(grp_fu_2815_p2),
    .dout(grp_fu_2815_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U49(
    .din0(dense_2_weights_V_21_2_reg_3705),
    .din1(grp_fu_2824_p1),
    .din2(grp_fu_2824_p2),
    .dout(grp_fu_2824_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U50(
    .din0(dense_2_weights_V_22_2_reg_3710),
    .din1(grp_fu_2833_p1),
    .din2(grp_fu_2833_p2),
    .dout(grp_fu_2833_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U51(
    .din0(dense_2_weights_V_23_2_reg_3715),
    .din1(grp_fu_2842_p1),
    .din2(grp_fu_2842_p2),
    .dout(grp_fu_2842_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U52(
    .din0(dense_2_weights_V_24_2_reg_3720),
    .din1(grp_fu_2851_p1),
    .din2(grp_fu_2851_p2),
    .dout(grp_fu_2851_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U53(
    .din0(dense_2_weights_V_25_2_reg_3725),
    .din1(grp_fu_2860_p1),
    .din2(grp_fu_2860_p2),
    .dout(grp_fu_2860_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U54(
    .din0(dense_2_weights_V_26_2_reg_3730),
    .din1(grp_fu_2869_p1),
    .din2(grp_fu_2869_p2),
    .dout(grp_fu_2869_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U55(
    .din0(dense_2_weights_V_27_2_reg_3735),
    .din1(grp_fu_2878_p1),
    .din2(grp_fu_2878_p2),
    .dout(grp_fu_2878_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U56(
    .din0(dense_2_weights_V_28_2_reg_3740),
    .din1(grp_fu_2887_p1),
    .din2(grp_fu_2887_p2),
    .dout(grp_fu_2887_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U57(
    .din0(dense_2_weights_V_29_2_reg_3745),
    .din1(grp_fu_2896_p1),
    .din2(grp_fu_2896_p2),
    .dout(grp_fu_2896_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U58(
    .din0(dense_2_weights_V_30_2_reg_3750),
    .din1(grp_fu_2905_p1),
    .din2(grp_fu_2905_p2),
    .dout(grp_fu_2905_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U59(
    .din0(dense_2_weights_V_31_2_reg_3755),
    .din1(grp_fu_2914_p1),
    .din2(grp_fu_2914_p2),
    .dout(grp_fu_2914_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U60(
    .din0(dense_2_weights_V_32_2_reg_3760),
    .din1(grp_fu_2923_p1),
    .din2(grp_fu_2923_p2),
    .dout(grp_fu_2923_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U61(
    .din0(dense_2_weights_V_33_2_reg_3765),
    .din1(grp_fu_2932_p1),
    .din2(grp_fu_2932_p2),
    .dout(grp_fu_2932_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U62(
    .din0(dense_2_weights_V_34_2_reg_3770),
    .din1(grp_fu_2941_p1),
    .din2(grp_fu_2941_p2),
    .dout(grp_fu_2941_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U63(
    .din0(dense_2_weights_V_35_2_reg_3775),
    .din1(grp_fu_2950_p1),
    .din2(grp_fu_2950_p2),
    .dout(grp_fu_2950_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U64(
    .din0(dense_2_weights_V_36_2_reg_3780),
    .din1(grp_fu_2959_p1),
    .din2(grp_fu_2959_p2),
    .dout(grp_fu_2959_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U65(
    .din0(dense_2_weights_V_37_2_reg_3785),
    .din1(grp_fu_2968_p1),
    .din2(grp_fu_2968_p2),
    .dout(grp_fu_2968_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U66(
    .din0(dense_2_weights_V_38_2_reg_3790),
    .din1(grp_fu_2977_p1),
    .din2(grp_fu_2977_p2),
    .dout(grp_fu_2977_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U67(
    .din0(dense_2_weights_V_39_2_reg_3795),
    .din1(grp_fu_2986_p1),
    .din2(grp_fu_2986_p2),
    .dout(grp_fu_2986_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U68(
    .din0(dense_2_weights_V_40_2_reg_3800),
    .din1(grp_fu_2995_p1),
    .din2(grp_fu_2995_p2),
    .dout(grp_fu_2995_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U69(
    .din0(dense_2_weights_V_41_2_reg_3805),
    .din1(grp_fu_3004_p1),
    .din2(grp_fu_3004_p2),
    .dout(grp_fu_3004_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U70(
    .din0(dense_2_weights_V_42_2_reg_3810),
    .din1(grp_fu_3013_p1),
    .din2(grp_fu_3013_p2),
    .dout(grp_fu_3013_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U71(
    .din0(dense_2_weights_V_43_2_reg_3815),
    .din1(grp_fu_3022_p1),
    .din2(grp_fu_3022_p2),
    .dout(grp_fu_3022_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U72(
    .din0(dense_2_weights_V_44_2_reg_3820),
    .din1(grp_fu_3031_p1),
    .din2(grp_fu_3031_p2),
    .dout(grp_fu_3031_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U73(
    .din0(dense_2_weights_V_45_2_reg_3825),
    .din1(grp_fu_3040_p1),
    .din2(grp_fu_3040_p2),
    .dout(grp_fu_3040_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U74(
    .din0(dense_2_weights_V_46_2_reg_3830),
    .din1(grp_fu_3049_p1),
    .din2(grp_fu_3049_p2),
    .dout(grp_fu_3049_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U75(
    .din0(dense_2_weights_V_47_2_reg_3835),
    .din1(grp_fu_3058_p1),
    .din2(grp_fu_3058_p2),
    .dout(grp_fu_3058_p3)
);

cnn_mac_muladd_9sbdk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sbdk_U76(
    .din0(dense_2_weights_V_48_2_reg_3840),
    .din1(grp_fu_3067_p1),
    .din2(grp_fu_3067_p2),
    .dout(grp_fu_3067_p3)
);

cnn_mac_muladd_8sbck #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_8sbck_U77(
    .din0(dense_2_weights_V_49_2_reg_3845),
    .din1(grp_fu_3076_p1),
    .din2(grp_fu_3076_p2),
    .dout(grp_fu_3076_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_1341 <= i_reg_3340;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_1341 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dense_2_weights_V_10_2_reg_3650 <= dense_2_weights_V_10_q0;
        dense_2_weights_V_11_2_reg_3655 <= dense_2_weights_V_11_q0;
        dense_2_weights_V_12_2_reg_3660 <= dense_2_weights_V_12_q0;
        dense_2_weights_V_13_2_reg_3665 <= dense_2_weights_V_13_q0;
        dense_2_weights_V_14_2_reg_3670 <= dense_2_weights_V_14_q0;
        dense_2_weights_V_15_2_reg_3675 <= dense_2_weights_V_15_q0;
        dense_2_weights_V_16_2_reg_3680 <= dense_2_weights_V_16_q0;
        dense_2_weights_V_17_2_reg_3685 <= dense_2_weights_V_17_q0;
        dense_2_weights_V_18_2_reg_3690 <= dense_2_weights_V_18_q0;
        dense_2_weights_V_19_2_reg_3695 <= dense_2_weights_V_19_q0;
        dense_2_weights_V_20_2_reg_3700 <= dense_2_weights_V_20_q0;
        dense_2_weights_V_21_2_reg_3705 <= dense_2_weights_V_21_q0;
        dense_2_weights_V_22_2_reg_3710 <= dense_2_weights_V_22_q0;
        dense_2_weights_V_23_2_reg_3715 <= dense_2_weights_V_23_q0;
        dense_2_weights_V_24_2_reg_3720 <= dense_2_weights_V_24_q0;
        dense_2_weights_V_25_2_reg_3725 <= dense_2_weights_V_25_q0;
        dense_2_weights_V_26_2_reg_3730 <= dense_2_weights_V_26_q0;
        dense_2_weights_V_27_2_reg_3735 <= dense_2_weights_V_27_q0;
        dense_2_weights_V_28_2_reg_3740 <= dense_2_weights_V_28_q0;
        dense_2_weights_V_29_2_reg_3745 <= dense_2_weights_V_29_q0;
        dense_2_weights_V_2_1_reg_3605 <= dense_2_weights_V_2_q0;
        dense_2_weights_V_30_2_reg_3750 <= dense_2_weights_V_30_q0;
        dense_2_weights_V_31_2_reg_3755 <= dense_2_weights_V_31_q0;
        dense_2_weights_V_32_2_reg_3760 <= dense_2_weights_V_32_q0;
        dense_2_weights_V_33_2_reg_3765 <= dense_2_weights_V_33_q0;
        dense_2_weights_V_34_2_reg_3770 <= dense_2_weights_V_34_q0;
        dense_2_weights_V_35_2_reg_3775 <= dense_2_weights_V_35_q0;
        dense_2_weights_V_36_2_reg_3780 <= dense_2_weights_V_36_q0;
        dense_2_weights_V_37_2_reg_3785 <= dense_2_weights_V_37_q0;
        dense_2_weights_V_38_2_reg_3790 <= dense_2_weights_V_38_q0;
        dense_2_weights_V_39_2_reg_3795 <= dense_2_weights_V_39_q0;
        dense_2_weights_V_3_1_reg_3615 <= dense_2_weights_V_3_q0;
        dense_2_weights_V_40_2_reg_3800 <= dense_2_weights_V_40_q0;
        dense_2_weights_V_41_2_reg_3805 <= dense_2_weights_V_41_q0;
        dense_2_weights_V_42_2_reg_3810 <= dense_2_weights_V_42_q0;
        dense_2_weights_V_43_2_reg_3815 <= dense_2_weights_V_43_q0;
        dense_2_weights_V_44_2_reg_3820 <= dense_2_weights_V_44_q0;
        dense_2_weights_V_45_2_reg_3825 <= dense_2_weights_V_45_q0;
        dense_2_weights_V_46_2_reg_3830 <= dense_2_weights_V_46_q0;
        dense_2_weights_V_47_2_reg_3835 <= dense_2_weights_V_47_q0;
        dense_2_weights_V_48_2_reg_3840 <= dense_2_weights_V_48_q0;
        dense_2_weights_V_49_2_reg_3845 <= dense_2_weights_V_49_q0;
        dense_2_weights_V_4_1_reg_3620 <= dense_2_weights_V_4_q0;
        dense_2_weights_V_5_1_reg_3625 <= dense_2_weights_V_5_q0;
        dense_2_weights_V_6_1_reg_3630 <= dense_2_weights_V_6_q0;
        dense_2_weights_V_7_1_reg_3635 <= dense_2_weights_V_7_q0;
        dense_2_weights_V_8_1_reg_3640 <= dense_2_weights_V_8_q0;
        dense_2_weights_V_9_1_reg_3645 <= dense_2_weights_V_9_q0;
        p_Val2_s_reg_3850 <= dense_2_bias_V_q0;
        tmp_s_reg_3610 <= {{grp_fu_2644_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_3340 <= i_fu_1358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln9_reg_3336 <= icmp_ln9_fu_1352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_11_reg_3871 <= {{grp_fu_2716_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_13_reg_3876 <= {{grp_fu_2734_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_15_reg_3881 <= {{grp_fu_2752_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_17_reg_3886 <= {{grp_fu_2770_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_19_reg_3891 <= {{grp_fu_2788_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_21_reg_3896 <= {{grp_fu_2806_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_23_reg_3901 <= {{grp_fu_2824_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_25_reg_3906 <= {{grp_fu_2842_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_27_reg_3911 <= {{grp_fu_2860_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        tmp_29_reg_3916 <= {{grp_fu_2878_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        tmp_31_reg_3921 <= {{grp_fu_2896_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
        tmp_33_reg_3926 <= {{grp_fu_2914_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17))) begin
        tmp_35_reg_3931 <= {{grp_fu_2932_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18))) begin
        tmp_37_reg_3936 <= {{grp_fu_2950_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19))) begin
        tmp_39_reg_3941 <= {{grp_fu_2968_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_3_reg_3856 <= {{grp_fu_2662_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage20))) begin
        tmp_41_reg_3946 <= {{grp_fu_2986_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage21))) begin
        tmp_43_reg_3951 <= {{grp_fu_3004_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage22))) begin
        tmp_45_reg_3956 <= {{grp_fu_3022_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage23))) begin
        tmp_47_reg_3961 <= {{grp_fu_3040_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        tmp_49_reg_3966 <= {{grp_fu_3058_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_5_reg_3861 <= {{grp_fu_2680_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_9_reg_3866 <= {{grp_fu_2698_p3[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_1352_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln14_reg_3345[4 : 0] <= zext_ln14_fu_1364_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_1352_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_1345_p4 = i_reg_3340;
    end else begin
        ap_phi_mux_i_0_phi_fu_1345_p4 = i_0_reg_1341;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
            dense_1_out_V_address0 = 64'd48;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
            dense_1_out_V_address0 = 64'd46;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
            dense_1_out_V_address0 = 64'd44;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
            dense_1_out_V_address0 = 64'd42;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
            dense_1_out_V_address0 = 64'd40;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
            dense_1_out_V_address0 = 64'd38;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
            dense_1_out_V_address0 = 64'd36;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            dense_1_out_V_address0 = 64'd34;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
            dense_1_out_V_address0 = 64'd32;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            dense_1_out_V_address0 = 64'd30;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
            dense_1_out_V_address0 = 64'd28;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            dense_1_out_V_address0 = 64'd26;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            dense_1_out_V_address0 = 64'd24;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            dense_1_out_V_address0 = 64'd22;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            dense_1_out_V_address0 = 64'd20;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            dense_1_out_V_address0 = 64'd18;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            dense_1_out_V_address0 = 64'd16;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            dense_1_out_V_address0 = 64'd14;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            dense_1_out_V_address0 = 64'd12;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            dense_1_out_V_address0 = 64'd10;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            dense_1_out_V_address0 = 64'd8;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            dense_1_out_V_address0 = 64'd6;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dense_1_out_V_address0 = 64'd4;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dense_1_out_V_address0 = 64'd2;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            dense_1_out_V_address0 = 64'd0;
        end else begin
            dense_1_out_V_address0 = 'bx;
        end
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
            dense_1_out_V_address1 = 64'd49;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
            dense_1_out_V_address1 = 64'd47;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
            dense_1_out_V_address1 = 64'd45;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
            dense_1_out_V_address1 = 64'd43;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
            dense_1_out_V_address1 = 64'd41;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
            dense_1_out_V_address1 = 64'd39;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
            dense_1_out_V_address1 = 64'd37;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
            dense_1_out_V_address1 = 64'd35;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
            dense_1_out_V_address1 = 64'd33;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
            dense_1_out_V_address1 = 64'd31;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
            dense_1_out_V_address1 = 64'd29;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
            dense_1_out_V_address1 = 64'd27;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
            dense_1_out_V_address1 = 64'd25;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
            dense_1_out_V_address1 = 64'd23;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
            dense_1_out_V_address1 = 64'd21;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
            dense_1_out_V_address1 = 64'd19;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
            dense_1_out_V_address1 = 64'd17;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            dense_1_out_V_address1 = 64'd15;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            dense_1_out_V_address1 = 64'd13;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            dense_1_out_V_address1 = 64'd11;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            dense_1_out_V_address1 = 64'd9;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            dense_1_out_V_address1 = 64'd7;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            dense_1_out_V_address1 = 64'd5;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            dense_1_out_V_address1 = 64'd3;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            dense_1_out_V_address1 = 64'd1;
        end else begin
            dense_1_out_V_address1 = 'bx;
        end
    end else begin
        dense_1_out_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage23_11001) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage21_11001) & (1'b1 == ap_CS_fsm_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage20_11001) & (1'b1 == ap_CS_fsm_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19_11001) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_ce1 = 1'b1;
    end else begin
        dense_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_3336 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_0_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_10_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_11_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_12_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_13_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_14_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_15_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_16_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_17_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_18_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_19_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_1_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_20_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_21_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_22_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_23_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_24_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_25_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_26_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_27_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_28_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_29_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_2_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_30_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_31_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_32_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_33_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_34_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_35_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_36_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_37_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_38_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_39_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_3_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_40_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_41_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_42_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_43_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_44_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_45_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_46_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_47_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_48_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_49_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_4_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_5_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_6_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_7_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_8_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_V_9_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln9_fu_1352_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln9_fu_1352_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln203_fu_2614_p2 = ($signed(sext_ln703_fu_2605_p1) + $signed(trunc_ln_fu_2596_p4));

assign add_ln703_fu_2608_p2 = ($signed(trunc_ln708_s_fu_2584_p4) + $signed(sext_ln1265_fu_2593_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dense_2_bias_V_address0 = zext_ln14_fu_1364_p1;

assign dense_2_out_V_address0 = zext_ln14_reg_3345;

assign dense_2_out_V_d0 = ((tmp_51_fu_2620_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_2614_p2);

assign dense_2_weights_V_0_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_10_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_11_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_12_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_13_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_14_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_15_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_16_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_17_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_18_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_19_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_1_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_20_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_21_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_22_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_23_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_24_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_25_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_26_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_27_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_28_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_29_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_2_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_30_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_31_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_32_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_33_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_34_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_35_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_36_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_37_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_38_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_39_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_3_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_40_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_41_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_42_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_43_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_44_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_45_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_46_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_47_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_48_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_49_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_4_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_5_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_6_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_7_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_8_address0 = zext_ln14_fu_1364_p1;

assign dense_2_weights_V_9_address0 = zext_ln14_fu_1364_p1;

assign grp_fu_2644_p1 = grp_fu_2644_p10;

assign grp_fu_2644_p10 = dense_1_out_V_q1;

assign grp_fu_2653_p1 = grp_fu_2653_p10;

assign grp_fu_2653_p10 = dense_1_out_V_q0;

assign grp_fu_2653_p2 = {{tmp_s_reg_3610}, {8'd0}};

assign grp_fu_2662_p1 = grp_fu_2662_p10;

assign grp_fu_2662_p10 = dense_1_out_V_q1;

assign grp_fu_2662_p2 = {{tmp_2_fu_1486_p4}, {8'd0}};

assign grp_fu_2671_p1 = grp_fu_2671_p10;

assign grp_fu_2671_p10 = dense_1_out_V_q0;

assign grp_fu_2671_p2 = {{tmp_3_reg_3856}, {8'd0}};

assign grp_fu_2680_p1 = grp_fu_2680_p10;

assign grp_fu_2680_p10 = dense_1_out_V_q1;

assign grp_fu_2680_p2 = {{tmp_4_fu_1533_p4}, {8'd0}};

assign grp_fu_2689_p1 = grp_fu_2689_p10;

assign grp_fu_2689_p10 = dense_1_out_V_q0;

assign grp_fu_2689_p2 = {{tmp_5_reg_3861}, {8'd0}};

assign grp_fu_2698_p1 = grp_fu_2698_p10;

assign grp_fu_2698_p10 = dense_1_out_V_q1;

assign grp_fu_2698_p2 = {{tmp_8_fu_1580_p4}, {8'd0}};

assign grp_fu_2707_p1 = grp_fu_2707_p10;

assign grp_fu_2707_p10 = dense_1_out_V_q0;

assign grp_fu_2707_p2 = {{tmp_9_reg_3866}, {8'd0}};

assign grp_fu_2716_p1 = grp_fu_2716_p10;

assign grp_fu_2716_p10 = dense_1_out_V_q1;

assign grp_fu_2716_p2 = {{tmp_10_fu_1627_p4}, {8'd0}};

assign grp_fu_2725_p1 = grp_fu_2725_p10;

assign grp_fu_2725_p10 = dense_1_out_V_q0;

assign grp_fu_2725_p2 = {{tmp_11_reg_3871}, {8'd0}};

assign grp_fu_2734_p1 = grp_fu_2734_p10;

assign grp_fu_2734_p10 = dense_1_out_V_q1;

assign grp_fu_2734_p2 = {{tmp_12_fu_1674_p4}, {8'd0}};

assign grp_fu_2743_p1 = grp_fu_2743_p10;

assign grp_fu_2743_p10 = dense_1_out_V_q0;

assign grp_fu_2743_p2 = {{tmp_13_reg_3876}, {8'd0}};

assign grp_fu_2752_p1 = grp_fu_2752_p10;

assign grp_fu_2752_p10 = dense_1_out_V_q1;

assign grp_fu_2752_p2 = {{tmp_14_fu_1721_p4}, {8'd0}};

assign grp_fu_2761_p1 = grp_fu_2761_p10;

assign grp_fu_2761_p10 = dense_1_out_V_q0;

assign grp_fu_2761_p2 = {{tmp_15_reg_3881}, {8'd0}};

assign grp_fu_2770_p1 = grp_fu_2770_p10;

assign grp_fu_2770_p10 = dense_1_out_V_q1;

assign grp_fu_2770_p2 = {{tmp_16_fu_1768_p4}, {8'd0}};

assign grp_fu_2779_p1 = grp_fu_2779_p10;

assign grp_fu_2779_p10 = dense_1_out_V_q0;

assign grp_fu_2779_p2 = {{tmp_17_reg_3886}, {8'd0}};

assign grp_fu_2788_p1 = grp_fu_2788_p10;

assign grp_fu_2788_p10 = dense_1_out_V_q1;

assign grp_fu_2788_p2 = {{tmp_18_fu_1815_p4}, {8'd0}};

assign grp_fu_2797_p1 = grp_fu_2797_p10;

assign grp_fu_2797_p10 = dense_1_out_V_q0;

assign grp_fu_2797_p2 = {{tmp_19_reg_3891}, {8'd0}};

assign grp_fu_2806_p1 = grp_fu_2806_p10;

assign grp_fu_2806_p10 = dense_1_out_V_q1;

assign grp_fu_2806_p2 = {{tmp_20_fu_1862_p4}, {8'd0}};

assign grp_fu_2815_p1 = grp_fu_2815_p10;

assign grp_fu_2815_p10 = dense_1_out_V_q0;

assign grp_fu_2815_p2 = {{tmp_21_reg_3896}, {8'd0}};

assign grp_fu_2824_p1 = grp_fu_2824_p10;

assign grp_fu_2824_p10 = dense_1_out_V_q1;

assign grp_fu_2824_p2 = {{tmp_22_fu_1909_p4}, {8'd0}};

assign grp_fu_2833_p1 = grp_fu_2833_p10;

assign grp_fu_2833_p10 = dense_1_out_V_q0;

assign grp_fu_2833_p2 = {{tmp_23_reg_3901}, {8'd0}};

assign grp_fu_2842_p1 = grp_fu_2842_p10;

assign grp_fu_2842_p10 = dense_1_out_V_q1;

assign grp_fu_2842_p2 = {{tmp_24_fu_1956_p4}, {8'd0}};

assign grp_fu_2851_p1 = grp_fu_2851_p10;

assign grp_fu_2851_p10 = dense_1_out_V_q0;

assign grp_fu_2851_p2 = {{tmp_25_reg_3906}, {8'd0}};

assign grp_fu_2860_p1 = grp_fu_2860_p10;

assign grp_fu_2860_p10 = dense_1_out_V_q1;

assign grp_fu_2860_p2 = {{tmp_26_fu_2003_p4}, {8'd0}};

assign grp_fu_2869_p1 = grp_fu_2869_p10;

assign grp_fu_2869_p10 = dense_1_out_V_q0;

assign grp_fu_2869_p2 = {{tmp_27_reg_3911}, {8'd0}};

assign grp_fu_2878_p1 = grp_fu_2878_p10;

assign grp_fu_2878_p10 = dense_1_out_V_q1;

assign grp_fu_2878_p2 = {{tmp_28_fu_2050_p4}, {8'd0}};

assign grp_fu_2887_p1 = grp_fu_2887_p10;

assign grp_fu_2887_p10 = dense_1_out_V_q0;

assign grp_fu_2887_p2 = {{tmp_29_reg_3916}, {8'd0}};

assign grp_fu_2896_p1 = grp_fu_2896_p10;

assign grp_fu_2896_p10 = dense_1_out_V_q1;

assign grp_fu_2896_p2 = {{tmp_30_fu_2097_p4}, {8'd0}};

assign grp_fu_2905_p1 = grp_fu_2905_p10;

assign grp_fu_2905_p10 = dense_1_out_V_q0;

assign grp_fu_2905_p2 = {{tmp_31_reg_3921}, {8'd0}};

assign grp_fu_2914_p1 = grp_fu_2914_p10;

assign grp_fu_2914_p10 = dense_1_out_V_q1;

assign grp_fu_2914_p2 = {{tmp_32_fu_2144_p4}, {8'd0}};

assign grp_fu_2923_p1 = grp_fu_2923_p10;

assign grp_fu_2923_p10 = dense_1_out_V_q0;

assign grp_fu_2923_p2 = {{tmp_33_reg_3926}, {8'd0}};

assign grp_fu_2932_p1 = grp_fu_2932_p10;

assign grp_fu_2932_p10 = dense_1_out_V_q1;

assign grp_fu_2932_p2 = {{tmp_34_fu_2191_p4}, {8'd0}};

assign grp_fu_2941_p1 = grp_fu_2941_p10;

assign grp_fu_2941_p10 = dense_1_out_V_q0;

assign grp_fu_2941_p2 = {{tmp_35_reg_3931}, {8'd0}};

assign grp_fu_2950_p1 = grp_fu_2950_p10;

assign grp_fu_2950_p10 = dense_1_out_V_q1;

assign grp_fu_2950_p2 = {{tmp_36_fu_2238_p4}, {8'd0}};

assign grp_fu_2959_p1 = grp_fu_2959_p10;

assign grp_fu_2959_p10 = dense_1_out_V_q0;

assign grp_fu_2959_p2 = {{tmp_37_reg_3936}, {8'd0}};

assign grp_fu_2968_p1 = grp_fu_2968_p10;

assign grp_fu_2968_p10 = dense_1_out_V_q1;

assign grp_fu_2968_p2 = {{tmp_38_fu_2285_p4}, {8'd0}};

assign grp_fu_2977_p1 = grp_fu_2977_p10;

assign grp_fu_2977_p10 = dense_1_out_V_q0;

assign grp_fu_2977_p2 = {{tmp_39_reg_3941}, {8'd0}};

assign grp_fu_2986_p1 = grp_fu_2986_p10;

assign grp_fu_2986_p10 = dense_1_out_V_q1;

assign grp_fu_2986_p2 = {{tmp_40_fu_2332_p4}, {8'd0}};

assign grp_fu_2995_p1 = grp_fu_2995_p10;

assign grp_fu_2995_p10 = dense_1_out_V_q0;

assign grp_fu_2995_p2 = {{tmp_41_reg_3946}, {8'd0}};

assign grp_fu_3004_p1 = grp_fu_3004_p10;

assign grp_fu_3004_p10 = dense_1_out_V_q1;

assign grp_fu_3004_p2 = {{tmp_42_fu_2379_p4}, {8'd0}};

assign grp_fu_3013_p1 = grp_fu_3013_p10;

assign grp_fu_3013_p10 = dense_1_out_V_q0;

assign grp_fu_3013_p2 = {{tmp_43_reg_3951}, {8'd0}};

assign grp_fu_3022_p1 = grp_fu_3022_p10;

assign grp_fu_3022_p10 = dense_1_out_V_q1;

assign grp_fu_3022_p2 = {{tmp_44_fu_2426_p4}, {8'd0}};

assign grp_fu_3031_p1 = grp_fu_3031_p10;

assign grp_fu_3031_p10 = dense_1_out_V_q0;

assign grp_fu_3031_p2 = {{tmp_45_reg_3956}, {8'd0}};

assign grp_fu_3040_p1 = grp_fu_3040_p10;

assign grp_fu_3040_p10 = dense_1_out_V_q1;

assign grp_fu_3040_p2 = {{tmp_46_fu_2473_p4}, {8'd0}};

assign grp_fu_3049_p1 = grp_fu_3049_p10;

assign grp_fu_3049_p10 = dense_1_out_V_q0;

assign grp_fu_3049_p2 = {{tmp_47_reg_3961}, {8'd0}};

assign grp_fu_3058_p1 = grp_fu_3058_p10;

assign grp_fu_3058_p10 = dense_1_out_V_q1;

assign grp_fu_3058_p2 = {{tmp_48_fu_2520_p4}, {8'd0}};

assign grp_fu_3067_p1 = grp_fu_3067_p10;

assign grp_fu_3067_p10 = dense_1_out_V_q0;

assign grp_fu_3067_p2 = {{tmp_49_reg_3966}, {8'd0}};

assign grp_fu_3076_p1 = grp_fu_3076_p10;

assign grp_fu_3076_p10 = dense_1_out_V_q1;

assign grp_fu_3076_p2 = {{tmp_50_fu_2567_p4}, {8'd0}};

assign i_fu_1358_p2 = (ap_phi_mux_i_0_phi_fu_1345_p4 + 5'd1);

assign icmp_ln9_fu_1352_p2 = ((ap_phi_mux_i_0_phi_fu_1345_p4 == 5'd30) ? 1'b1 : 1'b0);

assign mul_ln708_fu_2637_p1 = mul_ln708_fu_2637_p10;

assign mul_ln708_fu_2637_p10 = dense_1_out_V_q0;

assign sext_ln1265_fu_2593_p1 = p_Val2_s_reg_3850;

assign sext_ln703_fu_2605_p1 = p_Val2_s_reg_3850;

assign tmp_10_fu_1627_p4 = {{grp_fu_2707_p3[21:8]}};

assign tmp_12_fu_1674_p4 = {{grp_fu_2725_p3[21:8]}};

assign tmp_14_fu_1721_p4 = {{grp_fu_2743_p3[21:8]}};

assign tmp_16_fu_1768_p4 = {{grp_fu_2761_p3[21:8]}};

assign tmp_18_fu_1815_p4 = {{grp_fu_2779_p3[21:8]}};

assign tmp_20_fu_1862_p4 = {{grp_fu_2797_p3[21:8]}};

assign tmp_22_fu_1909_p4 = {{grp_fu_2815_p3[21:8]}};

assign tmp_24_fu_1956_p4 = {{grp_fu_2833_p3[21:8]}};

assign tmp_26_fu_2003_p4 = {{grp_fu_2851_p3[21:8]}};

assign tmp_28_fu_2050_p4 = {{grp_fu_2869_p3[21:8]}};

assign tmp_2_fu_1486_p4 = {{grp_fu_2653_p3[21:8]}};

assign tmp_30_fu_2097_p4 = {{grp_fu_2887_p3[21:8]}};

assign tmp_32_fu_2144_p4 = {{grp_fu_2905_p3[21:8]}};

assign tmp_34_fu_2191_p4 = {{grp_fu_2923_p3[21:8]}};

assign tmp_36_fu_2238_p4 = {{grp_fu_2941_p3[21:8]}};

assign tmp_38_fu_2285_p4 = {{grp_fu_2959_p3[21:8]}};

assign tmp_40_fu_2332_p4 = {{grp_fu_2977_p3[21:8]}};

assign tmp_42_fu_2379_p4 = {{grp_fu_2995_p3[21:8]}};

assign tmp_44_fu_2426_p4 = {{grp_fu_3013_p3[21:8]}};

assign tmp_46_fu_2473_p4 = {{grp_fu_3031_p3[21:8]}};

assign tmp_48_fu_2520_p4 = {{grp_fu_3049_p3[21:8]}};

assign tmp_4_fu_1533_p4 = {{grp_fu_2671_p3[21:8]}};

assign tmp_50_fu_2567_p4 = {{grp_fu_3067_p3[21:8]}};

assign tmp_51_fu_2620_p3 = add_ln703_fu_2608_p2[32'd13];

assign tmp_6_fu_1435_p4 = {{mul_ln708_fu_2637_p2[20:8]}};

assign tmp_7_fu_1444_p3 = {{tmp_6_fu_1435_p4}, {8'd0}};

assign tmp_8_fu_1580_p4 = {{grp_fu_2689_p3[21:8]}};

assign trunc_ln708_s_fu_2584_p4 = {{grp_fu_3076_p3[21:8]}};

assign trunc_ln_fu_2596_p4 = {{grp_fu_3076_p3[20:8]}};

assign zext_ln14_fu_1364_p1 = ap_phi_mux_i_0_phi_fu_1345_p4;

always @ (posedge ap_clk) begin
    zext_ln14_reg_3345[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_2
