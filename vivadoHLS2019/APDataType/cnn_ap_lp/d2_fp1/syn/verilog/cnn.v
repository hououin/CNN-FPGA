// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=16.990188,HLS_SYN_LAT=456655,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=57,HLS_SYN_FF=3519,HLS_SYN_LUT=8938,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cnn_input_address0,
        cnn_input_ce0,
        cnn_input_q0,
        prediction_output_address0,
        prediction_output_ce0,
        prediction_output_we0,
        prediction_output_d0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] cnn_input_address0;
output   cnn_input_ce0;
input  [31:0] cnn_input_q0;
output  [3:0] prediction_output_address0;
output   prediction_output_ce0;
output   prediction_output_we0;
output  [31:0] prediction_output_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cnn_input_ce0;
reg prediction_output_ce0;
reg prediction_output_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_fu_702_p2;
reg   [4:0] i_reg_1394;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_708_p2;
reg   [9:0] ix_in_reg_1399;
wire   [0:0] icmp_ln23_fu_696_p2;
wire   [10:0] sub_ln203_fu_738_p2;
reg   [10:0] sub_ln203_reg_1404;
wire   [4:0] j_fu_750_p2;
reg   [4:0] j_reg_1412;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln203_fu_760_p2;
reg   [10:0] add_ln203_reg_1417;
wire   [0:0] icmp_ln25_fu_744_p2;
wire   [9:0] add_ln28_fu_770_p2;
reg   [9:0] add_ln28_reg_1427;
reg   [31:0] cnn_input_load_reg_1432;
wire    ap_CS_fsm_state4;
wire   [13:0] select_ln603_3_fu_1051_p3;
reg   [13:0] select_ln603_3_reg_1438;
wire    ap_CS_fsm_state5;
wire   [3:0] i_1_fu_1069_p2;
reg   [3:0] i_1_reg_1446;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln70_fu_1075_p1;
reg   [63:0] zext_ln70_reg_1451;
wire   [0:0] icmp_ln69_fu_1063_p2;
wire   [0:0] icmp_ln935_fu_1080_p2;
reg   [0:0] icmp_ln935_reg_1461;
wire    ap_CS_fsm_state24;
wire   [0:0] p_Result_43_fu_1086_p3;
reg   [0:0] p_Result_43_reg_1466;
wire   [13:0] tmp_V_13_fu_1100_p3;
reg   [13:0] tmp_V_13_reg_1471;
wire   [31:0] sub_ln944_fu_1134_p2;
reg   [31:0] sub_ln944_reg_1476;
wire   [31:0] or_ln_fu_1244_p3;
reg   [31:0] or_ln_reg_1482;
wire   [0:0] icmp_ln958_fu_1252_p2;
reg   [0:0] icmp_ln958_reg_1487;
wire   [7:0] trunc_ln943_fu_1258_p1;
reg   [7:0] trunc_ln943_reg_1492;
reg   [9:0] conv_1_input_V_address0;
reg    conv_1_input_V_ce0;
reg    conv_1_input_V_we0;
wire   [13:0] conv_1_input_V_q0;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg   [10:0] conv_2_out_V_address0;
reg    conv_2_out_V_ce0;
reg    conv_2_out_V_we0;
reg   [13:0] conv_2_out_V_d0;
wire   [13:0] conv_2_out_V_q0;
reg   [8:0] max_pool_2_out_V_address0;
reg    max_pool_2_out_V_ce0;
reg    max_pool_2_out_V_we0;
reg   [13:0] max_pool_2_out_V_d0;
wire   [13:0] max_pool_2_out_V_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire   [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg    dense_1_out_V_ce1;
wire   [12:0] dense_1_out_V_q1;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_dense_2_fu_520_ap_start;
wire    grp_dense_2_fu_520_ap_done;
wire    grp_dense_2_fu_520_ap_idle;
wire    grp_dense_2_fu_520_ap_ready;
wire   [5:0] grp_dense_2_fu_520_dense_1_out_V_address0;
wire    grp_dense_2_fu_520_dense_1_out_V_ce0;
wire   [5:0] grp_dense_2_fu_520_dense_1_out_V_address1;
wire    grp_dense_2_fu_520_dense_1_out_V_ce1;
wire   [4:0] grp_dense_2_fu_520_dense_2_out_V_address0;
wire    grp_dense_2_fu_520_dense_2_out_V_ce0;
wire    grp_dense_2_fu_520_dense_2_out_V_we0;
wire   [12:0] grp_dense_2_fu_520_dense_2_out_V_d0;
wire    grp_conv_2_fu_628_ap_start;
wire    grp_conv_2_fu_628_ap_done;
wire    grp_conv_2_fu_628_ap_idle;
wire    grp_conv_2_fu_628_ap_ready;
wire   [9:0] grp_conv_2_fu_628_input_V_address0;
wire    grp_conv_2_fu_628_input_V_ce0;
wire   [10:0] grp_conv_2_fu_628_conv_out_V_address0;
wire    grp_conv_2_fu_628_conv_out_V_ce0;
wire    grp_conv_2_fu_628_conv_out_V_we0;
wire   [13:0] grp_conv_2_fu_628_conv_out_V_d0;
wire    grp_conv_1_fu_638_ap_start;
wire    grp_conv_1_fu_638_ap_done;
wire    grp_conv_1_fu_638_ap_idle;
wire    grp_conv_1_fu_638_ap_ready;
wire   [9:0] grp_conv_1_fu_638_input_V_address0;
wire    grp_conv_1_fu_638_input_V_ce0;
wire   [11:0] grp_conv_1_fu_638_conv_out_V_address0;
wire    grp_conv_1_fu_638_conv_out_V_ce0;
wire    grp_conv_1_fu_638_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_638_conv_out_V_d0;
wire    grp_dense_out_fu_648_ap_start;
wire    grp_dense_out_fu_648_ap_done;
wire    grp_dense_out_fu_648_ap_idle;
wire    grp_dense_out_fu_648_ap_ready;
wire   [4:0] grp_dense_out_fu_648_dense_2_out_V_address0;
wire    grp_dense_out_fu_648_dense_2_out_V_ce0;
wire   [3:0] grp_dense_out_fu_648_prediction_V_address0;
wire    grp_dense_out_fu_648_prediction_V_ce0;
wire    grp_dense_out_fu_648_prediction_V_we0;
wire   [13:0] grp_dense_out_fu_648_prediction_V_d0;
wire    grp_max_pool_1_fu_664_ap_start;
wire    grp_max_pool_1_fu_664_ap_done;
wire    grp_max_pool_1_fu_664_ap_idle;
wire    grp_max_pool_1_fu_664_ap_ready;
wire   [11:0] grp_max_pool_1_fu_664_conv_out_V_address0;
wire    grp_max_pool_1_fu_664_conv_out_V_ce0;
wire   [9:0] grp_max_pool_1_fu_664_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_664_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_664_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_664_max_pool_out_V_d0;
wire    grp_max_pool_2_fu_670_ap_start;
wire    grp_max_pool_2_fu_670_ap_done;
wire    grp_max_pool_2_fu_670_ap_idle;
wire    grp_max_pool_2_fu_670_ap_ready;
wire   [10:0] grp_max_pool_2_fu_670_conv_out_V_address0;
wire    grp_max_pool_2_fu_670_conv_out_V_ce0;
wire   [8:0] grp_max_pool_2_fu_670_max_pool_out_V_address0;
wire    grp_max_pool_2_fu_670_max_pool_out_V_ce0;
wire    grp_max_pool_2_fu_670_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_2_fu_670_max_pool_out_V_d0;
wire    grp_dense_1_fu_676_ap_start;
wire    grp_dense_1_fu_676_ap_done;
wire    grp_dense_1_fu_676_ap_idle;
wire    grp_dense_1_fu_676_ap_ready;
wire   [8:0] grp_dense_1_fu_676_flat_array_V_address0;
wire    grp_dense_1_fu_676_flat_array_V_ce0;
wire   [5:0] grp_dense_1_fu_676_dense_1_out_V_address0;
wire    grp_dense_1_fu_676_dense_1_out_V_ce0;
wire    grp_dense_1_fu_676_dense_1_out_V_we0;
wire   [12:0] grp_dense_1_fu_676_dense_1_out_V_d0;
wire    grp_flat_fu_686_ap_start;
wire    grp_flat_fu_686_ap_done;
wire    grp_flat_fu_686_ap_idle;
wire    grp_flat_fu_686_ap_ready;
wire   [8:0] grp_flat_fu_686_max_pool_out_V_address0;
wire    grp_flat_fu_686_max_pool_out_V_ce0;
wire   [8:0] grp_flat_fu_686_flat_array_V_address0;
wire    grp_flat_fu_686_flat_array_V_ce0;
wire    grp_flat_fu_686_flat_array_V_we0;
wire   [13:0] grp_flat_fu_686_flat_array_V_d0;
reg   [9:0] ix_in_0_reg_465;
reg   [4:0] i_0_reg_477;
reg   [9:0] ix_in_1_reg_488;
wire    ap_CS_fsm_state6;
reg   [4:0] j_0_reg_498;
reg   [3:0] i24_0_reg_509;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state25;
reg    grp_dense_2_fu_520_ap_start_reg;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    grp_conv_2_fu_628_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_conv_1_fu_638_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_dense_out_fu_648_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_max_pool_1_fu_664_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_max_pool_2_fu_670_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_dense_1_fu_676_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_flat_fu_686_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln27_fu_765_p1;
wire  signed [63:0] sext_ln203_fu_1059_p1;
wire   [9:0] tmp_s_fu_714_p3;
wire   [6:0] tmp_55_fu_726_p3;
wire   [10:0] zext_ln203_fu_722_p1;
wire   [10:0] zext_ln203_17_fu_734_p1;
wire   [10:0] zext_ln203_18_fu_756_p1;
wire   [63:0] grp_fu_692_p1;
wire   [63:0] ireg_V_fu_776_p1;
wire   [10:0] exp_tmp_V_fu_792_p4;
wire   [51:0] trunc_ln565_fu_806_p1;
wire   [52:0] tmp_fu_810_p3;
wire   [53:0] p_Result_42_fu_818_p1;
wire   [0:0] p_Result_41_fu_784_p3;
wire   [53:0] man_V_1_fu_822_p2;
wire   [62:0] trunc_ln556_fu_780_p1;
wire   [11:0] zext_ln461_fu_802_p1;
wire   [11:0] F2_fu_842_p2;
wire   [0:0] icmp_ln581_fu_848_p2;
wire   [11:0] add_ln581_fu_854_p2;
wire   [11:0] sub_ln581_fu_860_p2;
wire  signed [11:0] sh_amt_fu_866_p3;
wire   [53:0] man_V_2_fu_828_p3;
wire  signed [31:0] sext_ln581_fu_874_p1;
wire   [53:0] zext_ln586_fu_900_p1;
wire   [53:0] ashr_ln586_fu_904_p2;
wire   [31:0] bitcast_ln696_fu_914_p1;
wire   [0:0] tmp_70_fu_917_p3;
wire   [13:0] trunc_ln583_fu_884_p1;
wire   [13:0] sext_ln581cast_fu_933_p1;
wire   [0:0] icmp_ln571_fu_836_p2;
wire   [0:0] icmp_ln582_fu_878_p2;
wire   [0:0] xor_ln571_fu_943_p2;
wire   [0:0] or_ln582_fu_955_p2;
wire   [0:0] xor_ln582_fu_961_p2;
wire   [0:0] icmp_ln585_fu_888_p2;
wire   [0:0] and_ln581_fu_967_p2;
wire   [0:0] xor_ln585_fu_973_p2;
wire   [0:0] or_ln581_fu_991_p2;
wire   [0:0] icmp_ln603_fu_894_p2;
wire   [0:0] xor_ln581_fu_997_p2;
wire   [0:0] and_ln603_fu_1003_p2;
wire   [13:0] shl_ln604_fu_937_p2;
wire   [13:0] trunc_ln586_fu_910_p1;
wire   [0:0] and_ln585_1_fu_985_p2;
wire   [0:0] and_ln585_fu_979_p2;
wire   [13:0] select_ln588_fu_925_p3;
wire   [0:0] and_ln582_fu_949_p2;
wire   [0:0] or_ln603_fu_1017_p2;
wire   [13:0] select_ln603_fu_1009_p3;
wire   [13:0] select_ln603_1_fu_1023_p3;
wire   [0:0] or_ln603_1_fu_1031_p2;
wire   [0:0] or_ln603_2_fu_1045_p2;
wire   [13:0] select_ln603_2_fu_1037_p3;
wire   [13:0] tmp_V_fu_1094_p2;
reg   [13:0] p_Result_s_fu_1108_p4;
wire   [31:0] p_Result_44_fu_1118_p3;
reg   [31:0] l_fu_1126_p3;
wire   [31:0] lsb_index_fu_1144_p2;
wire   [30:0] tmp_66_fu_1150_p4;
wire   [3:0] trunc_ln947_fu_1166_p1;
wire   [3:0] sub_ln947_fu_1170_p2;
wire   [13:0] zext_ln947_fu_1176_p1;
wire   [13:0] lshr_ln947_fu_1180_p2;
wire   [13:0] p_Result_36_fu_1186_p2;
wire   [0:0] icmp_ln947_fu_1160_p2;
wire   [0:0] icmp_ln947_1_fu_1192_p2;
wire   [0:0] tmp_67_fu_1204_p3;
wire   [13:0] trunc_ln944_fu_1140_p1;
wire   [13:0] add_ln949_fu_1218_p2;
wire   [0:0] p_Result_37_fu_1224_p3;
wire   [0:0] xor_ln949_fu_1212_p2;
wire   [0:0] and_ln949_fu_1232_p2;
wire   [0:0] a_fu_1198_p2;
wire   [0:0] or_ln949_fu_1238_p2;
wire   [31:0] m_fu_1262_p1;
wire   [31:0] add_ln958_fu_1265_p2;
wire   [31:0] sub_ln958_fu_1276_p2;
wire   [31:0] lshr_ln958_fu_1270_p2;
wire   [31:0] shl_ln958_fu_1281_p2;
wire   [31:0] m_12_fu_1287_p3;
wire   [31:0] m_13_fu_1294_p2;
wire   [30:0] m_s_fu_1299_p4;
wire   [0:0] tmp_68_fu_1313_p3;
wire   [7:0] select_ln964_fu_1321_p3;
wire   [7:0] sub_ln964_fu_1329_p2;
wire   [7:0] add_ln964_fu_1334_p2;
wire   [31:0] m_16_fu_1309_p1;
wire   [8:0] tmp_9_fu_1340_p3;
wire   [31:0] p_Result_45_fu_1347_p5;
wire   [31:0] bitcast_ln739_fu_1359_p1;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 grp_dense_2_fu_520_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_628_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_638_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_648_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_664_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_670_ap_start_reg = 1'b0;
#0 grp_dense_1_fu_676_ap_start_reg = 1'b0;
#0 grp_flat_fu_686_ap_start_reg = 1'b0;
end

cnn_conv_1_input_V #(
    .DataWidth( 14 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_input_V_address0),
    .ce0(conv_1_input_V_ce0),
    .we0(conv_1_input_V_we0),
    .d0(select_ln603_3_reg_1438),
    .q0(conv_1_input_V_q0)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0)
);

cnn_max_pool_1_oubml #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0)
);

cnn_conv_2_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_out_V_address0),
    .ce0(conv_2_out_V_ce0),
    .we0(conv_2_out_V_we0),
    .d0(conv_2_out_V_d0),
    .q0(conv_2_out_V_q0)
);

cnn_max_pool_2_oubnm #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_pool_2_out_V_address0),
    .ce0(max_pool_2_out_V_ce0),
    .we0(max_pool_2_out_V_we0),
    .d0(max_pool_2_out_V_d0),
    .q0(max_pool_2_out_V_q0)
);

cnn_max_pool_2_oubnm #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0),
    .address1(grp_dense_2_fu_520_dense_1_out_V_address1),
    .ce1(dense_1_out_V_ce1),
    .q1(dense_1_out_V_q1)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

dense_out_dense_abkl #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

dense_2 grp_dense_2_fu_520(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_2_fu_520_ap_start),
    .ap_done(grp_dense_2_fu_520_ap_done),
    .ap_idle(grp_dense_2_fu_520_ap_idle),
    .ap_ready(grp_dense_2_fu_520_ap_ready),
    .dense_1_out_V_address0(grp_dense_2_fu_520_dense_1_out_V_address0),
    .dense_1_out_V_ce0(grp_dense_2_fu_520_dense_1_out_V_ce0),
    .dense_1_out_V_q0(dense_1_out_V_q0),
    .dense_1_out_V_address1(grp_dense_2_fu_520_dense_1_out_V_address1),
    .dense_1_out_V_ce1(grp_dense_2_fu_520_dense_1_out_V_ce1),
    .dense_1_out_V_q1(dense_1_out_V_q1),
    .dense_2_out_V_address0(grp_dense_2_fu_520_dense_2_out_V_address0),
    .dense_2_out_V_ce0(grp_dense_2_fu_520_dense_2_out_V_ce0),
    .dense_2_out_V_we0(grp_dense_2_fu_520_dense_2_out_V_we0),
    .dense_2_out_V_d0(grp_dense_2_fu_520_dense_2_out_V_d0)
);

conv_2 grp_conv_2_fu_628(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_2_fu_628_ap_start),
    .ap_done(grp_conv_2_fu_628_ap_done),
    .ap_idle(grp_conv_2_fu_628_ap_idle),
    .ap_ready(grp_conv_2_fu_628_ap_ready),
    .input_V_address0(grp_conv_2_fu_628_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_628_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .conv_out_V_address0(grp_conv_2_fu_628_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_2_fu_628_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_2_fu_628_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_2_fu_628_conv_out_V_d0)
);

conv_1 grp_conv_1_fu_638(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_1_fu_638_ap_start),
    .ap_done(grp_conv_1_fu_638_ap_done),
    .ap_idle(grp_conv_1_fu_638_ap_idle),
    .ap_ready(grp_conv_1_fu_638_ap_ready),
    .input_V_address0(grp_conv_1_fu_638_input_V_address0),
    .input_V_ce0(grp_conv_1_fu_638_input_V_ce0),
    .input_V_q0(conv_1_input_V_q0),
    .conv_out_V_address0(grp_conv_1_fu_638_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_638_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_638_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_638_conv_out_V_d0)
);

dense_out grp_dense_out_fu_648(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_out_fu_648_ap_start),
    .ap_done(grp_dense_out_fu_648_ap_done),
    .ap_idle(grp_dense_out_fu_648_ap_idle),
    .ap_ready(grp_dense_out_fu_648_ap_ready),
    .dense_2_out_V_address0(grp_dense_out_fu_648_dense_2_out_V_address0),
    .dense_2_out_V_ce0(grp_dense_out_fu_648_dense_2_out_V_ce0),
    .dense_2_out_V_q0(dense_2_out_V_q0),
    .prediction_V_address0(grp_dense_out_fu_648_prediction_V_address0),
    .prediction_V_ce0(grp_dense_out_fu_648_prediction_V_ce0),
    .prediction_V_we0(grp_dense_out_fu_648_prediction_V_we0),
    .prediction_V_d0(grp_dense_out_fu_648_prediction_V_d0)
);

max_pool_1 grp_max_pool_1_fu_664(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_1_fu_664_ap_start),
    .ap_done(grp_max_pool_1_fu_664_ap_done),
    .ap_idle(grp_max_pool_1_fu_664_ap_idle),
    .ap_ready(grp_max_pool_1_fu_664_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_664_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_664_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_1_fu_664_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_664_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_664_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_664_max_pool_out_V_d0)
);

max_pool_2 grp_max_pool_2_fu_670(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_max_pool_2_fu_670_ap_start),
    .ap_done(grp_max_pool_2_fu_670_ap_done),
    .ap_idle(grp_max_pool_2_fu_670_ap_idle),
    .ap_ready(grp_max_pool_2_fu_670_ap_ready),
    .conv_out_V_address0(grp_max_pool_2_fu_670_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_2_fu_670_conv_out_V_ce0),
    .conv_out_V_q0(conv_2_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_2_fu_670_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_2_fu_670_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_2_fu_670_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_2_fu_670_max_pool_out_V_d0)
);

dense_1 grp_dense_1_fu_676(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_1_fu_676_ap_start),
    .ap_done(grp_dense_1_fu_676_ap_done),
    .ap_idle(grp_dense_1_fu_676_ap_idle),
    .ap_ready(grp_dense_1_fu_676_ap_ready),
    .flat_array_V_address0(grp_dense_1_fu_676_flat_array_V_address0),
    .flat_array_V_ce0(grp_dense_1_fu_676_flat_array_V_ce0),
    .flat_array_V_q0(flat_array_V_q0),
    .dense_1_out_V_address0(grp_dense_1_fu_676_dense_1_out_V_address0),
    .dense_1_out_V_ce0(grp_dense_1_fu_676_dense_1_out_V_ce0),
    .dense_1_out_V_we0(grp_dense_1_fu_676_dense_1_out_V_we0),
    .dense_1_out_V_d0(grp_dense_1_fu_676_dense_1_out_V_d0)
);

flat grp_flat_fu_686(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_flat_fu_686_ap_start),
    .ap_done(grp_flat_fu_686_ap_done),
    .ap_idle(grp_flat_fu_686_ap_idle),
    .ap_ready(grp_flat_fu_686_ap_ready),
    .max_pool_out_V_address0(grp_flat_fu_686_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_flat_fu_686_max_pool_out_V_ce0),
    .max_pool_out_V_q0(max_pool_2_out_V_q0),
    .flat_array_V_address0(grp_flat_fu_686_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_686_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_686_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_686_flat_array_V_d0)
);

cnn_fpext_32ns_64bom #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64bom_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cnn_input_q0),
    .ce(1'b1),
    .dout(grp_fu_692_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_1_fu_638_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_638_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_638_ap_ready == 1'b1)) begin
            grp_conv_1_fu_638_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_2_fu_628_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_628_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_628_ap_ready == 1'b1)) begin
            grp_conv_2_fu_628_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_1_fu_676_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_dense_1_fu_676_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_676_ap_ready == 1'b1)) begin
            grp_dense_1_fu_676_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_2_fu_520_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_dense_2_fu_520_ap_start_reg <= 1'b1;
        end else if ((grp_dense_2_fu_520_ap_ready == 1'b1)) begin
            grp_dense_2_fu_520_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_out_fu_648_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state21)) begin
            grp_dense_out_fu_648_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_648_ap_ready == 1'b1)) begin
            grp_dense_out_fu_648_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_flat_fu_686_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_686_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_686_ap_ready == 1'b1)) begin
            grp_flat_fu_686_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_1_fu_664_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_664_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_664_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_664_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_max_pool_2_fu_670_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_670_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_670_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_670_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i24_0_reg_509 <= i_1_reg_1446;
    end else if (((grp_dense_out_fu_648_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        i24_0_reg_509 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_477 <= i_reg_1394;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_477 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_465 <= ix_in_reg_1399;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_465 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_488 <= add_ln28_reg_1427;
    end else if (((icmp_ln23_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_488 <= ix_in_0_reg_465;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_498 <= j_reg_1412;
    end else if (((icmp_ln23_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_498 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_744_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln203_reg_1417 <= add_ln203_fu_760_p2;
        add_ln28_reg_1427 <= add_ln28_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_1432 <= cnn_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_1_reg_1446 <= i_1_fu_1069_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1394 <= i_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        icmp_ln935_reg_1461 <= icmp_ln935_fu_1080_p2;
        icmp_ln958_reg_1487 <= icmp_ln958_fu_1252_p2;
        or_ln_reg_1482[0] <= or_ln_fu_1244_p3[0];
        p_Result_43_reg_1466 <= prediction_V_q0[32'd13];
        sub_ln944_reg_1476 <= sub_ln944_fu_1134_p2;
        tmp_V_13_reg_1471 <= tmp_V_13_fu_1100_p3;
        trunc_ln943_reg_1492 <= trunc_ln943_fu_1258_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_reg_1399 <= ix_in_fu_708_p2;
        sub_ln203_reg_1404[10 : 2] <= sub_ln203_fu_738_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1412 <= j_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_1438 <= select_ln603_3_fu_1051_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1063_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        zext_ln70_reg_1451[3 : 0] <= zext_ln70_fu_1075_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1063_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1063_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_ce0 = 1'b1;
    end else begin
        cnn_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_address0 = sext_ln203_fu_1059_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_address0 = grp_conv_1_fu_638_input_V_address0;
    end else begin
        conv_1_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce0 = grp_conv_1_fu_638_input_V_ce0;
    end else begin
        conv_1_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_we0 = 1'b1;
    end else begin
        conv_1_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_664_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_638_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_664_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_638_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_638_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_638_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_address0 = grp_max_pool_2_fu_670_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_address0 = grp_conv_2_fu_628_conv_out_V_address0;
    end else begin
        conv_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce0 = grp_max_pool_2_fu_670_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_ce0 = grp_conv_2_fu_628_conv_out_V_ce0;
    end else begin
        conv_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_d0 = grp_conv_2_fu_628_conv_out_V_d0;
    end else begin
        conv_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_we0 = grp_conv_2_fu_628_conv_out_V_we0;
    end else begin
        conv_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_address0 = grp_dense_1_fu_676_dense_1_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_address0 = grp_dense_2_fu_520_dense_1_out_V_address0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_flat_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_ce0 = grp_dense_1_fu_676_dense_1_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_ce0 = grp_dense_2_fu_520_dense_1_out_V_ce0;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_1_out_V_ce1 = grp_dense_2_fu_520_dense_1_out_V_ce1;
    end else begin
        dense_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_d0 = grp_dense_1_fu_676_dense_1_out_V_d0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_flat_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        dense_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_1_out_V_we0 = grp_dense_1_fu_676_dense_1_out_V_we0;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_address0 = grp_dense_out_fu_648_dense_2_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_address0 = grp_dense_2_fu_520_dense_2_out_V_address0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_1_fu_676_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        dense_2_out_V_ce0 = grp_dense_out_fu_648_dense_2_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_ce0 = grp_dense_2_fu_520_dense_2_out_V_ce0;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_V_d0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_d0 = grp_dense_2_fu_520_dense_2_out_V_d0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_1_fu_676_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        dense_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        dense_2_out_V_we0 = grp_dense_2_fu_520_dense_2_out_V_we0;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_686_flat_array_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_address0 = grp_dense_1_fu_676_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_686_flat_array_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        flat_array_V_ce0 = grp_dense_1_fu_676_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_686_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_686_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_664_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_628_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_664_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_628_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_664_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_664_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_address0 = grp_flat_fu_686_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_address0 = grp_max_pool_2_fu_670_max_pool_out_V_address0;
    end else begin
        max_pool_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_ce0 = grp_flat_fu_686_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_ce0 = grp_max_pool_2_fu_670_max_pool_out_V_ce0;
    end else begin
        max_pool_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_d0 = grp_max_pool_2_fu_670_max_pool_out_V_d0;
    end else begin
        max_pool_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_696_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        max_pool_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_we0 = grp_max_pool_2_fu_670_max_pool_out_V_we0;
    end else begin
        max_pool_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        prediction_V_address0 = zext_ln70_fu_1075_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_address0 = grp_dense_out_fu_648_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((grp_dense_2_fu_520_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_ce0 = grp_dense_out_fu_648_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_d0 = grp_dense_out_fu_648_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_dense_2_fu_520_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        prediction_V_we0 = grp_dense_out_fu_648_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        prediction_output_ce0 = 1'b1;
    end else begin
        prediction_output_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        prediction_output_we0 = 1'b1;
    end else begin
        prediction_output_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_696_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_744_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_638_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_664_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_628_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_670_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_dense_1_fu_676_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_dense_2_fu_520_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((grp_dense_out_fu_648_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln69_fu_1063_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_842_p2 = (12'd1075 - zext_ln461_fu_802_p1);

assign a_fu_1198_p2 = (icmp_ln947_fu_1160_p2 & icmp_ln947_1_fu_1192_p2);

assign add_ln203_fu_760_p2 = (sub_ln203_reg_1404 + zext_ln203_18_fu_756_p1);

assign add_ln28_fu_770_p2 = (10'd1 + ix_in_1_reg_488);

assign add_ln581_fu_854_p2 = ($signed(12'd4088) + $signed(F2_fu_842_p2));

assign add_ln949_fu_1218_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1140_p1));

assign add_ln958_fu_1265_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1476));

assign add_ln964_fu_1334_p2 = (select_ln964_fu_1321_p3 + sub_ln964_fu_1329_p2);

assign and_ln581_fu_967_p2 = (xor_ln582_fu_961_p2 & icmp_ln581_fu_848_p2);

assign and_ln582_fu_949_p2 = (xor_ln571_fu_943_p2 & icmp_ln582_fu_878_p2);

assign and_ln585_1_fu_985_p2 = (icmp_ln585_fu_888_p2 & and_ln581_fu_967_p2);

assign and_ln585_fu_979_p2 = (xor_ln585_fu_973_p2 & and_ln581_fu_967_p2);

assign and_ln603_fu_1003_p2 = (xor_ln581_fu_997_p2 & icmp_ln603_fu_894_p2);

assign and_ln949_fu_1232_p2 = (xor_ln949_fu_1212_p2 & p_Result_37_fu_1224_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ashr_ln586_fu_904_p2 = $signed(man_V_2_fu_828_p3) >>> zext_ln586_fu_900_p1;

assign bitcast_ln696_fu_914_p1 = cnn_input_load_reg_1432;

assign bitcast_ln739_fu_1359_p1 = p_Result_45_fu_1347_p5;

assign cnn_input_address0 = zext_ln27_fu_765_p1;

assign exp_tmp_V_fu_792_p4 = {{ireg_V_fu_776_p1[62:52]}};

assign grp_conv_1_fu_638_ap_start = grp_conv_1_fu_638_ap_start_reg;

assign grp_conv_2_fu_628_ap_start = grp_conv_2_fu_628_ap_start_reg;

assign grp_dense_1_fu_676_ap_start = grp_dense_1_fu_676_ap_start_reg;

assign grp_dense_2_fu_520_ap_start = grp_dense_2_fu_520_ap_start_reg;

assign grp_dense_out_fu_648_ap_start = grp_dense_out_fu_648_ap_start_reg;

assign grp_flat_fu_686_ap_start = grp_flat_fu_686_ap_start_reg;

assign grp_max_pool_1_fu_664_ap_start = grp_max_pool_1_fu_664_ap_start_reg;

assign grp_max_pool_2_fu_670_ap_start = grp_max_pool_2_fu_670_ap_start_reg;

assign i_1_fu_1069_p2 = (i24_0_reg_509 + 4'd1);

assign i_fu_702_p2 = (i_0_reg_477 + 5'd1);

assign icmp_ln23_fu_696_p2 = ((i_0_reg_477 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_744_p2 = ((j_0_reg_498 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_836_p2 = ((trunc_ln556_fu_780_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_848_p2 = (($signed(F2_fu_842_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_878_p2 = ((F2_fu_842_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_888_p2 = ((sh_amt_fu_866_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_894_p2 = ((sh_amt_fu_866_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1063_p2 = ((i24_0_reg_509 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1080_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1192_p2 = ((p_Result_36_fu_1186_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1160_p2 = (($signed(tmp_66_fu_1150_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1252_p2 = (($signed(lsb_index_fu_1144_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_776_p1 = grp_fu_692_p1;

assign ix_in_fu_708_p2 = (ix_in_0_reg_465 + 10'd28);

assign j_fu_750_p2 = (j_0_reg_498 + 5'd1);


always @ (p_Result_44_fu_1118_p3) begin
    if (p_Result_44_fu_1118_p3[0] == 1'b1) begin
        l_fu_1126_p3 = 32'd0;
    end else if (p_Result_44_fu_1118_p3[1] == 1'b1) begin
        l_fu_1126_p3 = 32'd1;
    end else if (p_Result_44_fu_1118_p3[2] == 1'b1) begin
        l_fu_1126_p3 = 32'd2;
    end else if (p_Result_44_fu_1118_p3[3] == 1'b1) begin
        l_fu_1126_p3 = 32'd3;
    end else if (p_Result_44_fu_1118_p3[4] == 1'b1) begin
        l_fu_1126_p3 = 32'd4;
    end else if (p_Result_44_fu_1118_p3[5] == 1'b1) begin
        l_fu_1126_p3 = 32'd5;
    end else if (p_Result_44_fu_1118_p3[6] == 1'b1) begin
        l_fu_1126_p3 = 32'd6;
    end else if (p_Result_44_fu_1118_p3[7] == 1'b1) begin
        l_fu_1126_p3 = 32'd7;
    end else if (p_Result_44_fu_1118_p3[8] == 1'b1) begin
        l_fu_1126_p3 = 32'd8;
    end else if (p_Result_44_fu_1118_p3[9] == 1'b1) begin
        l_fu_1126_p3 = 32'd9;
    end else if (p_Result_44_fu_1118_p3[10] == 1'b1) begin
        l_fu_1126_p3 = 32'd10;
    end else if (p_Result_44_fu_1118_p3[11] == 1'b1) begin
        l_fu_1126_p3 = 32'd11;
    end else if (p_Result_44_fu_1118_p3[12] == 1'b1) begin
        l_fu_1126_p3 = 32'd12;
    end else if (p_Result_44_fu_1118_p3[13] == 1'b1) begin
        l_fu_1126_p3 = 32'd13;
    end else if (p_Result_44_fu_1118_p3[14] == 1'b1) begin
        l_fu_1126_p3 = 32'd14;
    end else if (p_Result_44_fu_1118_p3[15] == 1'b1) begin
        l_fu_1126_p3 = 32'd15;
    end else if (p_Result_44_fu_1118_p3[16] == 1'b1) begin
        l_fu_1126_p3 = 32'd16;
    end else if (p_Result_44_fu_1118_p3[17] == 1'b1) begin
        l_fu_1126_p3 = 32'd17;
    end else if (p_Result_44_fu_1118_p3[18] == 1'b1) begin
        l_fu_1126_p3 = 32'd18;
    end else if (p_Result_44_fu_1118_p3[19] == 1'b1) begin
        l_fu_1126_p3 = 32'd19;
    end else if (p_Result_44_fu_1118_p3[20] == 1'b1) begin
        l_fu_1126_p3 = 32'd20;
    end else if (p_Result_44_fu_1118_p3[21] == 1'b1) begin
        l_fu_1126_p3 = 32'd21;
    end else if (p_Result_44_fu_1118_p3[22] == 1'b1) begin
        l_fu_1126_p3 = 32'd22;
    end else if (p_Result_44_fu_1118_p3[23] == 1'b1) begin
        l_fu_1126_p3 = 32'd23;
    end else if (p_Result_44_fu_1118_p3[24] == 1'b1) begin
        l_fu_1126_p3 = 32'd24;
    end else if (p_Result_44_fu_1118_p3[25] == 1'b1) begin
        l_fu_1126_p3 = 32'd25;
    end else if (p_Result_44_fu_1118_p3[26] == 1'b1) begin
        l_fu_1126_p3 = 32'd26;
    end else if (p_Result_44_fu_1118_p3[27] == 1'b1) begin
        l_fu_1126_p3 = 32'd27;
    end else if (p_Result_44_fu_1118_p3[28] == 1'b1) begin
        l_fu_1126_p3 = 32'd28;
    end else if (p_Result_44_fu_1118_p3[29] == 1'b1) begin
        l_fu_1126_p3 = 32'd29;
    end else if (p_Result_44_fu_1118_p3[30] == 1'b1) begin
        l_fu_1126_p3 = 32'd30;
    end else if (p_Result_44_fu_1118_p3[31] == 1'b1) begin
        l_fu_1126_p3 = 32'd31;
    end else begin
        l_fu_1126_p3 = 32'd32;
    end
end

assign lsb_index_fu_1144_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1134_p2));

assign lshr_ln947_fu_1180_p2 = 14'd16383 >> zext_ln947_fu_1176_p1;

assign lshr_ln958_fu_1270_p2 = m_fu_1262_p1 >> add_ln958_fu_1265_p2;

assign m_12_fu_1287_p3 = ((icmp_ln958_reg_1487[0:0] === 1'b1) ? lshr_ln958_fu_1270_p2 : shl_ln958_fu_1281_p2);

assign m_13_fu_1294_p2 = (m_12_fu_1287_p3 + or_ln_reg_1482);

assign m_16_fu_1309_p1 = m_s_fu_1299_p4;

assign m_fu_1262_p1 = tmp_V_13_reg_1471;

assign m_s_fu_1299_p4 = {{m_13_fu_1294_p2[31:1]}};

assign man_V_1_fu_822_p2 = (54'd0 - p_Result_42_fu_818_p1);

assign man_V_2_fu_828_p3 = ((p_Result_41_fu_784_p3[0:0] === 1'b1) ? man_V_1_fu_822_p2 : p_Result_42_fu_818_p1);

assign or_ln581_fu_991_p2 = (or_ln582_fu_955_p2 | icmp_ln581_fu_848_p2);

assign or_ln582_fu_955_p2 = (icmp_ln582_fu_878_p2 | icmp_ln571_fu_836_p2);

assign or_ln603_1_fu_1031_p2 = (and_ln585_fu_979_p2 | and_ln582_fu_949_p2);

assign or_ln603_2_fu_1045_p2 = (or_ln603_fu_1017_p2 | or_ln603_1_fu_1031_p2);

assign or_ln603_fu_1017_p2 = (and_ln603_fu_1003_p2 | and_ln585_1_fu_985_p2);

assign or_ln949_fu_1238_p2 = (and_ln949_fu_1232_p2 | a_fu_1198_p2);

assign or_ln_fu_1244_p3 = {{31'd0}, {or_ln949_fu_1238_p2}};

assign p_Result_36_fu_1186_p2 = (tmp_V_13_fu_1100_p3 & lshr_ln947_fu_1180_p2);

assign p_Result_37_fu_1224_p3 = tmp_V_13_fu_1100_p3[add_ln949_fu_1218_p2];

assign p_Result_41_fu_784_p3 = ireg_V_fu_776_p1[32'd63];

assign p_Result_42_fu_818_p1 = tmp_fu_810_p3;

assign p_Result_43_fu_1086_p3 = prediction_V_q0[32'd13];

assign p_Result_44_fu_1118_p3 = {{18'd262143}, {p_Result_s_fu_1108_p4}};

assign p_Result_45_fu_1347_p5 = {{tmp_9_fu_1340_p3}, {m_16_fu_1309_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_13_fu_1100_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_1108_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_1108_p4[ap_tvar_int_0] = tmp_V_13_fu_1100_p3[13 - ap_tvar_int_0];
        end
    end
end

assign prediction_output_address0 = zext_ln70_reg_1451;

assign prediction_output_d0 = ((icmp_ln935_reg_1461[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1359_p1);

assign select_ln588_fu_925_p3 = ((tmp_70_fu_917_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_1_fu_1023_p3 = ((and_ln585_fu_979_p2[0:0] === 1'b1) ? select_ln588_fu_925_p3 : trunc_ln583_fu_884_p1);

assign select_ln603_2_fu_1037_p3 = ((or_ln603_fu_1017_p2[0:0] === 1'b1) ? select_ln603_fu_1009_p3 : select_ln603_1_fu_1023_p3);

assign select_ln603_3_fu_1051_p3 = ((or_ln603_2_fu_1045_p2[0:0] === 1'b1) ? select_ln603_2_fu_1037_p3 : 14'd0);

assign select_ln603_fu_1009_p3 = ((and_ln603_fu_1003_p2[0:0] === 1'b1) ? shl_ln604_fu_937_p2 : trunc_ln586_fu_910_p1);

assign select_ln964_fu_1321_p3 = ((tmp_68_fu_1313_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln203_fu_1059_p1 = $signed(add_ln203_reg_1417);

assign sext_ln581_fu_874_p1 = sh_amt_fu_866_p3;

assign sext_ln581cast_fu_933_p1 = sext_ln581_fu_874_p1[13:0];

assign sh_amt_fu_866_p3 = ((icmp_ln581_fu_848_p2[0:0] === 1'b1) ? add_ln581_fu_854_p2 : sub_ln581_fu_860_p2);

assign shl_ln604_fu_937_p2 = trunc_ln583_fu_884_p1 << sext_ln581cast_fu_933_p1;

assign shl_ln958_fu_1281_p2 = m_fu_1262_p1 << sub_ln958_fu_1276_p2;

assign sub_ln203_fu_738_p2 = (zext_ln203_fu_722_p1 - zext_ln203_17_fu_734_p1);

assign sub_ln581_fu_860_p2 = (12'd8 - F2_fu_842_p2);

assign sub_ln944_fu_1134_p2 = (32'd14 - l_fu_1126_p3);

assign sub_ln947_fu_1170_p2 = (4'd7 - trunc_ln947_fu_1166_p1);

assign sub_ln958_fu_1276_p2 = (32'd25 - sub_ln944_reg_1476);

assign sub_ln964_fu_1329_p2 = (8'd6 - trunc_ln943_reg_1492);

assign tmp_55_fu_726_p3 = {{i_0_reg_477}, {2'd0}};

assign tmp_66_fu_1150_p4 = {{lsb_index_fu_1144_p2[31:1]}};

assign tmp_67_fu_1204_p3 = lsb_index_fu_1144_p2[32'd31];

assign tmp_68_fu_1313_p3 = m_13_fu_1294_p2[32'd25];

assign tmp_70_fu_917_p3 = bitcast_ln696_fu_914_p1[32'd31];

assign tmp_9_fu_1340_p3 = {{p_Result_43_reg_1466}, {add_ln964_fu_1334_p2}};

assign tmp_V_13_fu_1100_p3 = ((p_Result_43_fu_1086_p3[0:0] === 1'b1) ? tmp_V_fu_1094_p2 : prediction_V_q0);

assign tmp_V_fu_1094_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_810_p3 = {{1'd1}, {trunc_ln565_fu_806_p1}};

assign tmp_s_fu_714_p3 = {{i_0_reg_477}, {5'd0}};

assign trunc_ln556_fu_780_p1 = ireg_V_fu_776_p1[62:0];

assign trunc_ln565_fu_806_p1 = ireg_V_fu_776_p1[51:0];

assign trunc_ln583_fu_884_p1 = man_V_2_fu_828_p3[13:0];

assign trunc_ln586_fu_910_p1 = ashr_ln586_fu_904_p2[13:0];

assign trunc_ln943_fu_1258_p1 = l_fu_1126_p3[7:0];

assign trunc_ln944_fu_1140_p1 = sub_ln944_fu_1134_p2[13:0];

assign trunc_ln947_fu_1166_p1 = sub_ln944_fu_1134_p2[3:0];

assign xor_ln571_fu_943_p2 = (icmp_ln571_fu_836_p2 ^ 1'd1);

assign xor_ln581_fu_997_p2 = (or_ln581_fu_991_p2 ^ 1'd1);

assign xor_ln582_fu_961_p2 = (or_ln582_fu_955_p2 ^ 1'd1);

assign xor_ln585_fu_973_p2 = (icmp_ln585_fu_888_p2 ^ 1'd1);

assign xor_ln949_fu_1212_p2 = (tmp_67_fu_1204_p3 ^ 1'd1);

assign zext_ln203_17_fu_734_p1 = tmp_55_fu_726_p3;

assign zext_ln203_18_fu_756_p1 = j_0_reg_498;

assign zext_ln203_fu_722_p1 = tmp_s_fu_714_p3;

assign zext_ln27_fu_765_p1 = ix_in_1_reg_488;

assign zext_ln461_fu_802_p1 = exp_tmp_V_fu_792_p4;

assign zext_ln586_fu_900_p1 = $unsigned(sext_ln581_fu_874_p1);

assign zext_ln70_fu_1075_p1 = i24_0_reg_509;

assign zext_ln947_fu_1176_p1 = sub_ln947_fu_1170_p2;

always @ (posedge ap_clk) begin
    sub_ln203_reg_1404[1:0] <= 2'b00;
    zext_ln70_reg_1451[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_1482[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
