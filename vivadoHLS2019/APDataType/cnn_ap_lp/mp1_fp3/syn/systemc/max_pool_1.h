// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_5nfYi.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_V_address0;
    sc_out< sc_logic > conv_out_V_ce0;
    sc_in< sc_lv<14> > conv_out_V_q0;
    sc_out< sc_lv<12> > conv_out_V_address1;
    sc_out< sc_logic > conv_out_V_ce1;
    sc_in< sc_lv<14> > conv_out_V_q1;
    sc_out< sc_lv<10> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<14> > max_pool_out_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_mac_muladd_5nfYi<1,1,5,4,4,8>* cnn_mac_muladd_5nfYi_U9;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten23_reg_134;
    sc_signal< sc_lv<3> > f_0_reg_145;
    sc_signal< sc_lv<8> > indvar_flatten_reg_156;
    sc_signal< sc_lv<4> > r_0_reg_167;
    sc_signal< sc_lv<4> > c_0_reg_178;
    sc_signal< sc_lv<1> > icmp_ln10_fu_203_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_677;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_677_pp0_iter1_reg;
    sc_signal< sc_lv<10> > add_ln10_fu_209_p2;
    sc_signal< sc_lv<10> > add_ln10_reg_681;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_221_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_686;
    sc_signal< sc_lv<4> > select_ln29_4_fu_227_p3;
    sc_signal< sc_lv<4> > select_ln29_4_reg_691;
    sc_signal< sc_lv<3> > select_ln29_5_fu_235_p3;
    sc_signal< sc_lv<3> > select_ln29_5_reg_696;
    sc_signal< sc_lv<1> > and_ln29_fu_271_p2;
    sc_signal< sc_lv<1> > and_ln29_reg_703;
    sc_signal< sc_lv<4> > r_fu_277_p2;
    sc_signal< sc_lv<4> > r_reg_708;
    sc_signal< sc_lv<4> > select_ln13_fu_289_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_713;
    sc_signal< sc_lv<10> > mul_ln1494_fu_317_p2;
    sc_signal< sc_lv<10> > mul_ln1494_reg_720;
    sc_signal< sc_lv<5> > select_ln13_3_fu_329_p3;
    sc_signal< sc_lv<5> > select_ln13_3_reg_726;
    sc_signal< sc_lv<8> > add_ln13_fu_337_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_731;
    sc_signal< sc_lv<4> > select_ln13_1_fu_349_p3;
    sc_signal< sc_lv<4> > select_ln13_1_reg_736;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<13> > add_ln1494_4_fu_452_p2;
    sc_signal< sc_lv<13> > add_ln1494_4_reg_746;
    sc_signal< sc_lv<13> > add_ln1494_8_fu_542_p2;
    sc_signal< sc_lv<13> > add_ln1494_8_reg_756;
    sc_signal< sc_lv<11> > add_ln203_3_fu_575_p2;
    sc_signal< sc_lv<11> > add_ln203_3_reg_761;
    sc_signal< sc_lv<4> > c_fu_581_p2;
    sc_signal< sc_lv<4> > c_reg_766;
    sc_signal< sc_lv<8> > select_ln13_4_fu_586_p3;
    sc_signal< sc_lv<8> > select_ln13_4_reg_771;
    sc_signal< sc_lv<14> > select_ln29_1_fu_628_p3;
    sc_signal< sc_lv<14> > select_ln29_1_reg_786;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_flatten23_phi_fu_138_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_f_0_phi_fu_149_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_160_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_171_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_182_p4;
    sc_signal< sc_lv<64> > zext_ln1494_6_fu_415_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln1494_11_fu_505_p1;
    sc_signal< sc_lv<64> > zext_ln1494_8_fu_592_p1;
    sc_signal< sc_lv<64> > zext_ln1494_13_fu_618_p1;
    sc_signal< sc_lv<64> > zext_ln203_6_fu_663_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_189_p3;
    sc_signal< sc_lv<3> > f_fu_215_p2;
    sc_signal< sc_lv<5> > or_ln26_fu_197_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_265_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_259_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_283_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_297_p3;
    sc_signal< sc_lv<5> > select_ln29_6_fu_243_p3;
    sc_signal< sc_lv<5> > select_ln13_2_fu_305_p3;
    sc_signal< sc_lv<5> > mul_ln1494_fu_317_p1;
    sc_signal< sc_lv<5> > or_ln26_1_fu_323_p2;
    sc_signal< sc_lv<5> > select_ln29_7_fu_251_p3;
    sc_signal< sc_lv<5> > mul_ln1494_1_fu_361_p1;
    sc_signal< sc_lv<5> > shl_ln2_fu_367_p3;
    sc_signal< sc_lv<10> > zext_ln1494_4_fu_374_p1;
    sc_signal< sc_lv<10> > add_ln1494_fu_378_p2;
    sc_signal< sc_lv<11> > tmp_fu_391_p3;
    sc_signal< sc_lv<13> > p_shl8_cast_fu_383_p3;
    sc_signal< sc_lv<13> > zext_ln1494_5_fu_399_p1;
    sc_signal< sc_lv<13> > zext_ln29_1_fu_346_p1;
    sc_signal< sc_lv<13> > sub_ln1494_fu_403_p2;
    sc_signal< sc_lv<13> > add_ln1494_2_fu_409_p2;
    sc_signal< sc_lv<10> > mul_ln1494_1_fu_361_p2;
    sc_signal< sc_lv<10> > add_ln1494_3_fu_420_p2;
    sc_signal< sc_lv<11> > tmp_1_fu_434_p3;
    sc_signal< sc_lv<13> > p_shl6_cast_fu_426_p3;
    sc_signal< sc_lv<13> > zext_ln1494_7_fu_442_p1;
    sc_signal< sc_lv<13> > sub_ln1494_1_fu_446_p2;
    sc_signal< sc_lv<5> > or_ln27_fu_458_p2;
    sc_signal< sc_lv<10> > zext_ln1494_9_fu_464_p1;
    sc_signal< sc_lv<10> > add_ln1494_5_fu_468_p2;
    sc_signal< sc_lv<11> > tmp_2_fu_481_p3;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_473_p3;
    sc_signal< sc_lv<13> > zext_ln1494_10_fu_489_p1;
    sc_signal< sc_lv<13> > sub_ln1494_2_fu_493_p2;
    sc_signal< sc_lv<13> > add_ln1494_6_fu_499_p2;
    sc_signal< sc_lv<10> > add_ln1494_7_fu_510_p2;
    sc_signal< sc_lv<11> > tmp_3_fu_524_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_516_p3;
    sc_signal< sc_lv<13> > zext_ln1494_12_fu_532_p1;
    sc_signal< sc_lv<13> > sub_ln1494_3_fu_536_p2;
    sc_signal< sc_lv<8> > grp_fu_667_p3;
    sc_signal< sc_lv<9> > tmp_4_fu_558_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_551_p3;
    sc_signal< sc_lv<11> > zext_ln203_5_fu_565_p1;
    sc_signal< sc_lv<11> > zext_ln29_fu_343_p1;
    sc_signal< sc_lv<11> > sub_ln203_fu_569_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_600_p2;
    sc_signal< sc_lv<13> > trunc_ln1494_fu_596_p1;
    sc_signal< sc_lv<13> > select_ln29_fu_606_p3;
    sc_signal< sc_lv<14> > zext_ln29_2_fu_614_p1;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_622_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_636_p2;
    sc_signal< sc_lv<14> > select_ln29_2_fu_641_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_648_p2;
    sc_signal< sc_lv<5> > grp_fu_667_p0;
    sc_signal< sc_lv<4> > grp_fu_667_p1;
    sc_signal< sc_lv<4> > grp_fu_667_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_667_p10;
    sc_signal< sc_lv<8> > grp_fu_667_p20;
    sc_signal< sc_lv<10> > mul_ln1494_1_fu_361_p10;
    sc_signal< sc_lv<10> > mul_ln1494_fu_317_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<10> ap_const_lv10_3F6;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_209_p2();
    void thread_add_ln13_fu_337_p2();
    void thread_add_ln1494_2_fu_409_p2();
    void thread_add_ln1494_3_fu_420_p2();
    void thread_add_ln1494_4_fu_452_p2();
    void thread_add_ln1494_5_fu_468_p2();
    void thread_add_ln1494_6_fu_499_p2();
    void thread_add_ln1494_7_fu_510_p2();
    void thread_add_ln1494_8_fu_542_p2();
    void thread_add_ln1494_fu_378_p2();
    void thread_add_ln203_3_fu_575_p2();
    void thread_and_ln29_fu_271_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_182_p4();
    void thread_ap_phi_mux_f_0_phi_fu_149_p4();
    void thread_ap_phi_mux_indvar_flatten23_phi_fu_138_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_160_p4();
    void thread_ap_phi_mux_r_0_phi_fu_171_p4();
    void thread_ap_ready();
    void thread_c_fu_581_p2();
    void thread_conv_out_V_address0();
    void thread_conv_out_V_address1();
    void thread_conv_out_V_ce0();
    void thread_conv_out_V_ce1();
    void thread_f_fu_215_p2();
    void thread_grp_fu_667_p0();
    void thread_grp_fu_667_p1();
    void thread_grp_fu_667_p10();
    void thread_grp_fu_667_p2();
    void thread_grp_fu_667_p20();
    void thread_icmp_ln10_fu_203_p2();
    void thread_icmp_ln13_fu_221_p2();
    void thread_icmp_ln1494_1_fu_622_p2();
    void thread_icmp_ln1494_2_fu_636_p2();
    void thread_icmp_ln1494_3_fu_648_p2();
    void thread_icmp_ln1494_fu_600_p2();
    void thread_icmp_ln16_fu_265_p2();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mul_ln1494_1_fu_361_p1();
    void thread_mul_ln1494_1_fu_361_p10();
    void thread_mul_ln1494_1_fu_361_p2();
    void thread_mul_ln1494_fu_317_p1();
    void thread_mul_ln1494_fu_317_p10();
    void thread_mul_ln1494_fu_317_p2();
    void thread_or_ln13_fu_283_p2();
    void thread_or_ln26_1_fu_323_p2();
    void thread_or_ln26_fu_197_p2();
    void thread_or_ln27_fu_458_p2();
    void thread_p_shl2_cast_fu_516_p3();
    void thread_p_shl4_cast_fu_473_p3();
    void thread_p_shl6_cast_fu_426_p3();
    void thread_p_shl8_cast_fu_383_p3();
    void thread_p_shl_cast_fu_551_p3();
    void thread_r_fu_277_p2();
    void thread_select_ln13_1_fu_349_p3();
    void thread_select_ln13_2_fu_305_p3();
    void thread_select_ln13_3_fu_329_p3();
    void thread_select_ln13_4_fu_586_p3();
    void thread_select_ln13_fu_289_p3();
    void thread_select_ln29_1_fu_628_p3();
    void thread_select_ln29_2_fu_641_p3();
    void thread_select_ln29_4_fu_227_p3();
    void thread_select_ln29_5_fu_235_p3();
    void thread_select_ln29_6_fu_243_p3();
    void thread_select_ln29_7_fu_251_p3();
    void thread_select_ln29_fu_606_p3();
    void thread_shl_ln26_mid1_fu_297_p3();
    void thread_shl_ln2_fu_367_p3();
    void thread_shl_ln_fu_189_p3();
    void thread_sub_ln1494_1_fu_446_p2();
    void thread_sub_ln1494_2_fu_493_p2();
    void thread_sub_ln1494_3_fu_536_p2();
    void thread_sub_ln1494_fu_403_p2();
    void thread_sub_ln203_fu_569_p2();
    void thread_tmp_1_fu_434_p3();
    void thread_tmp_2_fu_481_p3();
    void thread_tmp_3_fu_524_p3();
    void thread_tmp_4_fu_558_p3();
    void thread_tmp_fu_391_p3();
    void thread_trunc_ln1494_fu_596_p1();
    void thread_xor_ln29_fu_259_p2();
    void thread_zext_ln1494_10_fu_489_p1();
    void thread_zext_ln1494_11_fu_505_p1();
    void thread_zext_ln1494_12_fu_532_p1();
    void thread_zext_ln1494_13_fu_618_p1();
    void thread_zext_ln1494_4_fu_374_p1();
    void thread_zext_ln1494_5_fu_399_p1();
    void thread_zext_ln1494_6_fu_415_p1();
    void thread_zext_ln1494_7_fu_442_p1();
    void thread_zext_ln1494_8_fu_592_p1();
    void thread_zext_ln1494_9_fu_464_p1();
    void thread_zext_ln203_5_fu_565_p1();
    void thread_zext_ln203_6_fu_663_p1();
    void thread_zext_ln29_1_fu_346_p1();
    void thread_zext_ln29_2_fu_614_p1();
    void thread_zext_ln29_fu_343_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
