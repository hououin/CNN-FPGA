// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "soft_max.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic soft_max::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic soft_max::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<67> soft_max::ap_ST_fsm_state1 = "1";
const sc_lv<67> soft_max::ap_ST_fsm_state2 = "10";
const sc_lv<67> soft_max::ap_ST_fsm_state3 = "100";
const sc_lv<67> soft_max::ap_ST_fsm_state4 = "1000";
const sc_lv<67> soft_max::ap_ST_fsm_state5 = "10000";
const sc_lv<67> soft_max::ap_ST_fsm_state6 = "100000";
const sc_lv<67> soft_max::ap_ST_fsm_state7 = "1000000";
const sc_lv<67> soft_max::ap_ST_fsm_state8 = "10000000";
const sc_lv<67> soft_max::ap_ST_fsm_state9 = "100000000";
const sc_lv<67> soft_max::ap_ST_fsm_state10 = "1000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state11 = "10000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state12 = "100000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<67> soft_max::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> soft_max::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> soft_max::ap_const_lv32_1 = "1";
const sc_lv<1> soft_max::ap_const_lv1_0 = "0";
const sc_lv<1> soft_max::ap_const_lv1_1 = "1";
const sc_lv<32> soft_max::ap_const_lv32_2 = "10";
const sc_lv<32> soft_max::ap_const_lv32_3 = "11";
const sc_lv<32> soft_max::ap_const_lv32_4 = "100";
const sc_lv<32> soft_max::ap_const_lv32_C = "1100";
const sc_lv<32> soft_max::ap_const_lv32_D = "1101";
const sc_lv<32> soft_max::ap_const_lv32_E = "1110";
const sc_lv<32> soft_max::ap_const_lv32_F = "1111";
const sc_lv<4> soft_max::ap_const_lv4_0 = "0000";
const sc_lv<32> soft_max::ap_const_lv32_42 = "1000010";
const sc_lv<32> soft_max::ap_const_lv32_5 = "101";
const sc_lv<4> soft_max::ap_const_lv4_A = "1010";
const sc_lv<4> soft_max::ap_const_lv4_1 = "1";
const sc_lv<16> soft_max::ap_const_lv16_0 = "0000000000000000";
const bool soft_max::ap_const_boolean_1 = true;

soft_max::soft_max(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_exp_33_17_s_fu_135 = new exp_33_17_s("grp_exp_33_17_s_fu_135");
    grp_exp_33_17_s_fu_135->ap_clk(ap_clk);
    grp_exp_33_17_s_fu_135->ap_rst(ap_rst);
    grp_exp_33_17_s_fu_135->ap_start(grp_exp_33_17_s_fu_135_ap_start);
    grp_exp_33_17_s_fu_135->ap_done(grp_exp_33_17_s_fu_135_ap_done);
    grp_exp_33_17_s_fu_135->ap_idle(grp_exp_33_17_s_fu_135_ap_idle);
    grp_exp_33_17_s_fu_135->ap_ready(grp_exp_33_17_s_fu_135_ap_ready);
    grp_exp_33_17_s_fu_135->x_V(ret_V_reg_297);
    grp_exp_33_17_s_fu_135->ap_return(grp_exp_33_17_s_fu_135_ap_return);
    cnn_sdiv_48ns_32slbW_U26 = new cnn_sdiv_48ns_32slbW<1,52,48,32,32>("cnn_sdiv_48ns_32slbW_U26");
    cnn_sdiv_48ns_32slbW_U26->clk(ap_clk);
    cnn_sdiv_48ns_32slbW_U26->reset(ap_rst);
    cnn_sdiv_48ns_32slbW_U26->start(grp_fu_246_ap_start);
    cnn_sdiv_48ns_32slbW_U26->done(grp_fu_246_ap_done);
    cnn_sdiv_48ns_32slbW_U26->din0(grp_fu_246_p0);
    cnn_sdiv_48ns_32slbW_U26->din1(grp_fu_246_p1);
    cnn_sdiv_48ns_32slbW_U26->ce(ap_var_for_const0);
    cnn_sdiv_48ns_32slbW_U26->dout(grp_fu_246_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_NS_fsm_state6);
    sensitive << ( ap_NS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( icmp_ln27_fu_221_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( icmp_ln27_fu_221_p2 );

    SC_METHOD(thread_dense_array_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( dense_array_V_addr_1_reg_287 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln29_fu_233_p1 );
    sensitive << ( zext_ln13_fu_158_p1 );
    sensitive << ( zext_ln22_fu_193_p1 );

    SC_METHOD(thread_dense_array_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_dense_array_V_d0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_exp_33_17_s_fu_135_ap_return );

    SC_METHOD(thread_dense_array_V_we0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_exp_33_17_s_fu_135_ap_start);
    sensitive << ( grp_exp_33_17_s_fu_135_ap_start_reg );

    SC_METHOD(thread_grp_fu_246_ap_start);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_246_p0);
    sensitive << ( dense_array_V_q0 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_grp_fu_246_p1);
    sensitive << ( sext_ln1148_reg_292 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_i_fu_187_p2);
    sensitive << ( i_0_reg_113 );

    SC_METHOD(thread_icmp_ln12_fu_146_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( m_0_reg_90 );

    SC_METHOD(thread_icmp_ln1495_fu_167_p2);
    sensitive << ( dense_array_V_q0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Val2_1_reg_78 );

    SC_METHOD(thread_icmp_ln20_fu_181_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_113 );

    SC_METHOD(thread_icmp_ln27_fu_221_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( j_0_reg_124 );

    SC_METHOD(thread_j_fu_227_p2);
    sensitive << ( j_0_reg_124 );

    SC_METHOD(thread_lhs_V_fu_202_p0);
    sensitive << ( dense_array_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_lhs_V_fu_202_p1);
    sensitive << ( lhs_V_fu_202_p0 );

    SC_METHOD(thread_m_fu_152_p2);
    sensitive << ( m_0_reg_90 );

    SC_METHOD(thread_p_Val2_4_fu_211_p1);
    sensitive << ( grp_exp_33_17_s_fu_135_ap_return );

    SC_METHOD(thread_prediction_V_address0);
    sensitive << ( zext_ln29_reg_320 );
    sensitive << ( ap_CS_fsm_state67 );

    SC_METHOD(thread_prediction_V_ce0);
    sensitive << ( ap_CS_fsm_state67 );

    SC_METHOD(thread_prediction_V_d0);
    sensitive << ( ap_CS_fsm_state67 );
    sensitive << ( grp_fu_246_p2 );

    SC_METHOD(thread_prediction_V_we0);
    sensitive << ( ap_CS_fsm_state67 );

    SC_METHOD(thread_ret_V_fu_206_p2);
    sensitive << ( rhs_V_reg_269 );
    sensitive << ( lhs_V_fu_202_p1 );

    SC_METHOD(thread_rhs_V_fu_163_p1);
    sensitive << ( p_Val2_1_reg_78 );

    SC_METHOD(thread_select_ln13_fu_173_p3);
    sensitive << ( dense_array_V_q0 );
    sensitive << ( p_Val2_1_reg_78 );
    sensitive << ( icmp_ln1495_fu_167_p2 );

    SC_METHOD(thread_sext_ln1148_fu_198_p1);
    sensitive << ( p_Val2_3_reg_101 );

    SC_METHOD(thread_sum_V_fu_216_p2);
    sensitive << ( p_Val2_4_reg_302 );
    sensitive << ( p_Val2_3_reg_101 );

    SC_METHOD(thread_zext_ln13_fu_158_p1);
    sensitive << ( m_0_reg_90 );

    SC_METHOD(thread_zext_ln22_fu_193_p1);
    sensitive << ( i_0_reg_113 );

    SC_METHOD(thread_zext_ln29_fu_233_p1);
    sensitive << ( j_0_reg_124 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln12_fu_146_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln20_fu_181_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( icmp_ln27_fu_221_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000000000000000000001";
    grp_exp_33_17_s_fu_135_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "soft_max_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dense_array_V_address0, "(port)dense_array_V_address0");
    sc_trace(mVcdFile, dense_array_V_ce0, "(port)dense_array_V_ce0");
    sc_trace(mVcdFile, dense_array_V_we0, "(port)dense_array_V_we0");
    sc_trace(mVcdFile, dense_array_V_d0, "(port)dense_array_V_d0");
    sc_trace(mVcdFile, dense_array_V_q0, "(port)dense_array_V_q0");
    sc_trace(mVcdFile, prediction_V_address0, "(port)prediction_V_address0");
    sc_trace(mVcdFile, prediction_V_ce0, "(port)prediction_V_ce0");
    sc_trace(mVcdFile, prediction_V_we0, "(port)prediction_V_we0");
    sc_trace(mVcdFile, prediction_V_d0, "(port)prediction_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, m_fu_152_p2, "m_fu_152_p2");
    sc_trace(mVcdFile, m_reg_259, "m_reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln12_fu_146_p2, "icmp_ln12_fu_146_p2");
    sc_trace(mVcdFile, rhs_V_fu_163_p1, "rhs_V_fu_163_p1");
    sc_trace(mVcdFile, rhs_V_reg_269, "rhs_V_reg_269");
    sc_trace(mVcdFile, select_ln13_fu_173_p3, "select_ln13_fu_173_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_fu_187_p2, "i_fu_187_p2");
    sc_trace(mVcdFile, i_reg_282, "i_reg_282");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, dense_array_V_addr_1_reg_287, "dense_array_V_addr_1_reg_287");
    sc_trace(mVcdFile, icmp_ln20_fu_181_p2, "icmp_ln20_fu_181_p2");
    sc_trace(mVcdFile, sext_ln1148_fu_198_p1, "sext_ln1148_fu_198_p1");
    sc_trace(mVcdFile, sext_ln1148_reg_292, "sext_ln1148_reg_292");
    sc_trace(mVcdFile, ret_V_fu_206_p2, "ret_V_fu_206_p2");
    sc_trace(mVcdFile, ret_V_reg_297, "ret_V_reg_297");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_Val2_4_fu_211_p1, "p_Val2_4_fu_211_p1");
    sc_trace(mVcdFile, p_Val2_4_reg_302, "p_Val2_4_reg_302");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, sum_V_fu_216_p2, "sum_V_fu_216_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, j_fu_227_p2, "j_fu_227_p2");
    sc_trace(mVcdFile, j_reg_315, "j_reg_315");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, zext_ln29_fu_233_p1, "zext_ln29_fu_233_p1");
    sc_trace(mVcdFile, zext_ln29_reg_320, "zext_ln29_reg_320");
    sc_trace(mVcdFile, icmp_ln27_fu_221_p2, "icmp_ln27_fu_221_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_start, "grp_exp_33_17_s_fu_135_ap_start");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_done, "grp_exp_33_17_s_fu_135_ap_done");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_idle, "grp_exp_33_17_s_fu_135_ap_idle");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_ready, "grp_exp_33_17_s_fu_135_ap_ready");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_return, "grp_exp_33_17_s_fu_135_ap_return");
    sc_trace(mVcdFile, p_Val2_1_reg_78, "p_Val2_1_reg_78");
    sc_trace(mVcdFile, m_0_reg_90, "m_0_reg_90");
    sc_trace(mVcdFile, p_Val2_3_reg_101, "p_Val2_3_reg_101");
    sc_trace(mVcdFile, i_0_reg_113, "i_0_reg_113");
    sc_trace(mVcdFile, j_0_reg_124, "j_0_reg_124");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, grp_exp_33_17_s_fu_135_ap_start_reg, "grp_exp_33_17_s_fu_135_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_NS_fsm_state6, "ap_NS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln13_fu_158_p1, "zext_ln13_fu_158_p1");
    sc_trace(mVcdFile, zext_ln22_fu_193_p1, "zext_ln22_fu_193_p1");
    sc_trace(mVcdFile, icmp_ln1495_fu_167_p2, "icmp_ln1495_fu_167_p2");
    sc_trace(mVcdFile, lhs_V_fu_202_p0, "lhs_V_fu_202_p0");
    sc_trace(mVcdFile, lhs_V_fu_202_p1, "lhs_V_fu_202_p1");
    sc_trace(mVcdFile, grp_fu_246_p0, "grp_fu_246_p0");
    sc_trace(mVcdFile, grp_fu_246_p1, "grp_fu_246_p1");
    sc_trace(mVcdFile, grp_fu_246_p2, "grp_fu_246_p2");
    sc_trace(mVcdFile, grp_fu_246_ap_start, "grp_fu_246_ap_start");
    sc_trace(mVcdFile, grp_fu_246_ap_done, "grp_fu_246_ap_done");
#endif

    }
}

soft_max::~soft_max() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_exp_33_17_s_fu_135;
    delete cnn_sdiv_48ns_32slbW_U26;
}

void soft_max::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void soft_max::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_exp_33_17_s_fu_135_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_NS_fsm_state6.read()))) {
            grp_exp_33_17_s_fu_135_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_exp_33_17_s_fu_135_ap_ready.read())) {
            grp_exp_33_17_s_fu_135_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_0_reg_113 = i_reg_282.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_146_p2.read(), ap_const_lv1_1))) {
        i_0_reg_113 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_181_p2.read()))) {
        j_0_reg_124 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        j_0_reg_124 = j_reg_315.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        m_0_reg_90 = m_reg_259.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        m_0_reg_90 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Val2_1_reg_78 = select_ln13_fu_173_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Val2_1_reg_78 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        p_Val2_3_reg_101 = sum_V_fu_216_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_146_p2.read(), ap_const_lv1_1))) {
        p_Val2_3_reg_101 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_181_p2.read()))) {
        dense_array_V_addr_1_reg_287 =  (sc_lv<4>) (zext_ln22_fu_193_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_282 = i_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_reg_315 = j_fu_227_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        m_reg_259 = m_fu_152_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        p_Val2_4_reg_302 = p_Val2_4_fu_211_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ret_V_reg_297 = ret_V_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_146_p2.read(), ap_const_lv1_1))) {
        rhs_V_reg_269 = rhs_V_fu_163_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_181_p2.read()))) {
        sext_ln1148_reg_292 = sext_ln1148_fu_198_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln27_fu_221_p2.read()))) {
        zext_ln29_reg_320 = zext_ln29_fu_233_p1.read();
    }
}

void soft_max::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void soft_max::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void soft_max::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void soft_max::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void soft_max::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void soft_max::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void soft_max::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void soft_max::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void soft_max::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void soft_max::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void soft_max::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[66];
}

void soft_max::thread_ap_NS_fsm_state6() {
    ap_NS_fsm_state6 = ap_NS_fsm.read()[5];
}

void soft_max::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_221_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void soft_max::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void soft_max::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_221_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void soft_max::thread_dense_array_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        dense_array_V_address0 =  (sc_lv<4>) (zext_ln29_fu_233_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        dense_array_V_address0 = dense_array_V_addr_1_reg_287.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        dense_array_V_address0 =  (sc_lv<4>) (zext_ln22_fu_193_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dense_array_V_address0 =  (sc_lv<4>) (zext_ln13_fu_158_p1.read());
    } else {
        dense_array_V_address0 = "XXXX";
    }
}

void soft_max::thread_dense_array_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        dense_array_V_ce0 = ap_const_logic_1;
    } else {
        dense_array_V_ce0 = ap_const_logic_0;
    }
}

void soft_max::thread_dense_array_V_d0() {
    dense_array_V_d0 = grp_exp_33_17_s_fu_135_ap_return.read().range(32-1, 0);
}

void soft_max::thread_dense_array_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        dense_array_V_we0 = ap_const_logic_1;
    } else {
        dense_array_V_we0 = ap_const_logic_0;
    }
}

void soft_max::thread_grp_exp_33_17_s_fu_135_ap_start() {
    grp_exp_33_17_s_fu_135_ap_start = grp_exp_33_17_s_fu_135_ap_start_reg.read();
}

void soft_max::thread_grp_fu_246_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_246_ap_start = ap_const_logic_1;
    } else {
        grp_fu_246_ap_start = ap_const_logic_0;
    }
}

void soft_max::thread_grp_fu_246_p0() {
    grp_fu_246_p0 = esl_concat<32,16>(dense_array_V_q0.read(), ap_const_lv16_0);
}

void soft_max::thread_grp_fu_246_p1() {
    grp_fu_246_p1 =  (sc_lv<32>) (sext_ln1148_reg_292.read());
}

void soft_max::thread_i_fu_187_p2() {
    i_fu_187_p2 = (!i_0_reg_113.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_113.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void soft_max::thread_icmp_ln12_fu_146_p2() {
    icmp_ln12_fu_146_p2 = (!m_0_reg_90.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(m_0_reg_90.read() == ap_const_lv4_A);
}

void soft_max::thread_icmp_ln1495_fu_167_p2() {
    icmp_ln1495_fu_167_p2 = (!p_Val2_1_reg_78.read().is_01() || !dense_array_V_q0.read().is_01())? sc_lv<1>(): (sc_bigint<32>(p_Val2_1_reg_78.read()) < sc_bigint<32>(dense_array_V_q0.read()));
}

void soft_max::thread_icmp_ln20_fu_181_p2() {
    icmp_ln20_fu_181_p2 = (!i_0_reg_113.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_113.read() == ap_const_lv4_A);
}

void soft_max::thread_icmp_ln27_fu_221_p2() {
    icmp_ln27_fu_221_p2 = (!j_0_reg_124.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_124.read() == ap_const_lv4_A);
}

void soft_max::thread_j_fu_227_p2() {
    j_fu_227_p2 = (!j_0_reg_124.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_124.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void soft_max::thread_lhs_V_fu_202_p0() {
    lhs_V_fu_202_p0 = dense_array_V_q0.read();
}

void soft_max::thread_lhs_V_fu_202_p1() {
    lhs_V_fu_202_p1 = esl_sext<33,32>(lhs_V_fu_202_p0.read());
}

void soft_max::thread_m_fu_152_p2() {
    m_fu_152_p2 = (!m_0_reg_90.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(m_0_reg_90.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void soft_max::thread_p_Val2_4_fu_211_p1() {
    p_Val2_4_fu_211_p1 = grp_exp_33_17_s_fu_135_ap_return.read().range(32-1, 0);
}

void soft_max::thread_prediction_V_address0() {
    prediction_V_address0 =  (sc_lv<4>) (zext_ln29_reg_320.read());
}

void soft_max::thread_prediction_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        prediction_V_ce0 = ap_const_logic_1;
    } else {
        prediction_V_ce0 = ap_const_logic_0;
    }
}

void soft_max::thread_prediction_V_d0() {
    prediction_V_d0 = grp_fu_246_p2.read().range(32-1, 0);
}

void soft_max::thread_prediction_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        prediction_V_we0 = ap_const_logic_1;
    } else {
        prediction_V_we0 = ap_const_logic_0;
    }
}

void soft_max::thread_ret_V_fu_206_p2() {
    ret_V_fu_206_p2 = (!lhs_V_fu_202_p1.read().is_01() || !rhs_V_reg_269.read().is_01())? sc_lv<33>(): (sc_bigint<33>(lhs_V_fu_202_p1.read()) - sc_bigint<33>(rhs_V_reg_269.read()));
}

void soft_max::thread_rhs_V_fu_163_p1() {
    rhs_V_fu_163_p1 = esl_sext<33,32>(p_Val2_1_reg_78.read());
}

void soft_max::thread_select_ln13_fu_173_p3() {
    select_ln13_fu_173_p3 = (!icmp_ln1495_fu_167_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln1495_fu_167_p2.read()[0].to_bool())? dense_array_V_q0.read(): p_Val2_1_reg_78.read());
}

void soft_max::thread_sext_ln1148_fu_198_p1() {
    sext_ln1148_fu_198_p1 = esl_sext<48,32>(p_Val2_3_reg_101.read());
}

void soft_max::thread_sum_V_fu_216_p2() {
    sum_V_fu_216_p2 = (!p_Val2_4_reg_302.read().is_01() || !p_Val2_3_reg_101.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_Val2_4_reg_302.read()) + sc_bigint<32>(p_Val2_3_reg_101.read()));
}

void soft_max::thread_zext_ln13_fu_158_p1() {
    zext_ln13_fu_158_p1 = esl_zext<64,4>(m_0_reg_90.read());
}

void soft_max::thread_zext_ln22_fu_193_p1() {
    zext_ln22_fu_193_p1 = esl_zext<64,4>(i_0_reg_113.read());
}

void soft_max::thread_zext_ln29_fu_233_p1() {
    zext_ln29_fu_233_p1 = esl_zext<64,4>(j_0_reg_124.read());
}

void soft_max::thread_ap_NS_fsm() {
    if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_146_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln20_fu_181_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state15;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state4;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_221_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state16;
        }
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,67,67>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<67>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
}

