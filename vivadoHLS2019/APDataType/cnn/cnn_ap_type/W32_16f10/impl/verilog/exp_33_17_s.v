// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_33_17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] x_V;
output  [32:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] f_x_msb_3_table_V_address0;
reg    f_x_msb_3_table_V_ce0;
wire   [31:0] f_x_msb_3_table_V_q0;
wire   [7:0] f_x_msb_2_table_V_address0;
reg    f_x_msb_2_table_V_ce0;
wire   [45:0] f_x_msb_2_table_V_q0;
wire   [7:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [49:0] exp_x_msb_1_table_V_q0;
wire   [0:0] tmp_fu_225_p3;
reg   [0:0] tmp_reg_914;
reg   [0:0] tmp_reg_914_pp0_iter1_reg;
reg   [0:0] tmp_reg_914_pp0_iter2_reg;
reg   [0:0] tmp_reg_914_pp0_iter3_reg;
reg   [0:0] tmp_reg_914_pp0_iter4_reg;
reg   [0:0] tmp_reg_914_pp0_iter5_reg;
reg   [0:0] tmp_reg_914_pp0_iter6_reg;
reg   [6:0] p_Result_18_reg_920;
reg   [6:0] p_Result_18_reg_920_pp0_iter1_reg;
reg   [6:0] p_Result_18_reg_920_pp0_iter2_reg;
wire   [7:0] tmp_V_fu_509_p4;
reg   [7:0] tmp_V_reg_925;
wire   [4:0] tmp_V_1_fu_519_p1;
reg   [4:0] tmp_V_1_reg_930;
reg   [4:0] tmp_V_1_reg_930_pp0_iter1_reg;
wire   [0:0] or_ln281_8_fu_599_p2;
reg   [0:0] or_ln281_8_reg_945;
reg   [0:0] or_ln281_8_reg_945_pp0_iter1_reg;
reg   [0:0] or_ln281_8_reg_945_pp0_iter2_reg;
reg   [0:0] or_ln281_8_reg_945_pp0_iter3_reg;
reg   [0:0] or_ln281_8_reg_945_pp0_iter4_reg;
reg   [0:0] or_ln281_8_reg_945_pp0_iter5_reg;
reg   [0:0] or_ln281_8_reg_945_pp0_iter6_reg;
wire   [0:0] or_ln281_17_fu_653_p2;
reg   [0:0] or_ln281_17_reg_950;
reg   [0:0] or_ln281_17_reg_950_pp0_iter1_reg;
reg   [0:0] or_ln281_17_reg_950_pp0_iter2_reg;
reg   [0:0] or_ln281_17_reg_950_pp0_iter3_reg;
reg   [0:0] or_ln281_17_reg_950_pp0_iter4_reg;
reg   [0:0] or_ln281_17_reg_950_pp0_iter5_reg;
reg   [0:0] or_ln281_17_reg_950_pp0_iter6_reg;
reg   [31:0] f_x_msb_3_V_reg_955;
wire   [8:0] ret_V_fu_676_p2;
reg   [8:0] ret_V_reg_960;
reg   [8:0] ret_V_reg_960_pp0_iter2_reg;
reg   [8:0] ret_V_reg_960_pp0_iter3_reg;
wire   [40:0] trunc_ln612_2_fu_682_p1;
reg   [40:0] trunc_ln612_2_reg_966;
reg   [40:0] trunc_ln612_2_reg_966_pp0_iter2_reg;
reg   [40:0] trunc_ln612_2_reg_966_pp0_iter3_reg;
wire   [46:0] rhs_V_3_fu_686_p5;
reg   [46:0] rhs_V_3_reg_972;
reg   [46:0] rhs_V_3_reg_972_pp0_iter3_reg;
reg   [44:0] tmp_s_reg_987;
reg   [49:0] exp_x_msb_2_3_4_lsb_s_reg_997;
reg   [49:0] exp_x_msb_1_V_reg_1002;
reg   [49:0] exp_x_msb_1_V_reg_1002_pp0_iter5_reg;
reg   [49:0] exp_x_msb_1_V_reg_1002_pp0_iter6_reg;
reg   [47:0] y_lo_s_V_reg_1018;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_523_p1;
wire   [63:0] zext_ln544_1_fu_528_p1;
wire   [63:0] zext_ln544_2_fu_732_p1;
wire  signed [32:0] x_l_V_fu_199_p0;
wire  signed [32:0] p_Result_27_fu_203_p1;
wire  signed [32:0] trunc_ln612_fu_213_p0;
wire   [15:0] trunc_ln612_fu_213_p1;
wire  signed [32:0] tmp_fu_225_p1;
wire  signed [46:0] x_l_V_fu_199_p1;
wire   [0:0] p_Result_s_fu_233_p3;
wire   [0:0] p_Result_1_fu_247_p3;
wire   [0:0] p_Result_2_fu_261_p3;
wire   [0:0] p_Result_3_fu_275_p3;
wire   [0:0] p_Result_4_fu_289_p3;
wire   [0:0] p_Result_5_fu_303_p3;
wire   [0:0] p_Result_6_fu_317_p3;
wire   [0:0] p_Result_7_fu_331_p3;
wire   [0:0] p_Result_8_fu_345_p3;
wire   [0:0] p_Result_9_fu_359_p3;
wire   [0:0] p_Result_s_56_fu_373_p3;
wire   [0:0] p_Result_10_fu_387_p3;
wire   [0:0] p_Result_11_fu_401_p3;
wire   [0:0] p_Result_12_fu_415_p3;
wire   [0:0] p_Result_13_fu_429_p3;
wire   [0:0] p_Result_14_fu_443_p3;
wire   [0:0] p_Result_15_fu_457_p3;
wire   [0:0] p_Result_16_fu_471_p3;
wire   [0:0] p_Result_17_fu_485_p3;
wire  signed [32:0] p_Result_18_fu_499_p1;
wire  signed [32:0] tmp_V_fu_509_p1;
wire  signed [32:0] tmp_V_1_fu_519_p0;
wire   [4:0] p_Result_27_fu_203_p4;
wire   [22:0] p_Result_28_fu_217_p3;
wire   [0:0] icmp_ln281_1_fu_539_p2;
wire   [0:0] icmp_ln281_fu_533_p2;
wire   [0:0] xor_ln278_fu_241_p2;
wire   [0:0] xor_ln278_1_fu_255_p2;
wire   [0:0] xor_ln278_3_fu_283_p2;
wire   [0:0] xor_ln278_4_fu_297_p2;
wire   [0:0] or_ln281_1_fu_557_p2;
wire   [0:0] xor_ln278_2_fu_269_p2;
wire   [0:0] or_ln281_2_fu_563_p2;
wire   [0:0] or_ln281_fu_551_p2;
wire   [0:0] xor_ln278_5_fu_311_p2;
wire   [0:0] xor_ln278_6_fu_325_p2;
wire   [0:0] xor_ln278_8_fu_353_p2;
wire   [0:0] xor_ln278_9_fu_367_p2;
wire   [0:0] or_ln281_5_fu_581_p2;
wire   [0:0] xor_ln278_7_fu_339_p2;
wire   [0:0] or_ln281_6_fu_587_p2;
wire   [0:0] or_ln281_4_fu_575_p2;
wire   [0:0] or_ln281_7_fu_593_p2;
wire   [0:0] or_ln281_3_fu_569_p2;
wire   [0:0] xor_ln278_10_fu_381_p2;
wire   [0:0] xor_ln278_11_fu_395_p2;
wire   [0:0] xor_ln278_13_fu_423_p2;
wire   [0:0] xor_ln278_14_fu_437_p2;
wire   [0:0] or_ln281_10_fu_611_p2;
wire   [0:0] xor_ln278_12_fu_409_p2;
wire   [0:0] or_ln281_11_fu_617_p2;
wire   [0:0] or_ln281_9_fu_605_p2;
wire   [0:0] xor_ln278_15_fu_451_p2;
wire   [0:0] xor_ln278_16_fu_465_p2;
wire   [0:0] xor_ln278_18_fu_493_p2;
wire   [0:0] and_ln281_fu_545_p2;
wire   [0:0] or_ln281_14_fu_635_p2;
wire   [0:0] xor_ln278_17_fu_479_p2;
wire   [0:0] or_ln281_15_fu_641_p2;
wire   [0:0] or_ln281_13_fu_629_p2;
wire   [0:0] or_ln281_16_fu_647_p2;
wire   [0:0] or_ln281_12_fu_623_p2;
wire   [4:0] p_Result_30_fu_659_p4;
wire   [8:0] lhs_V_fu_669_p1;
wire   [8:0] rhs_V_fu_673_p1;
wire   [49:0] p_Result_31_fu_696_p3;
wire   [46:0] grp_fu_710_p0;
wire   [49:0] grp_fu_710_p1;
wire   [96:0] grp_fu_710_p2;
wire   [7:0] p_Result_29_fu_716_p3;
wire   [55:0] rhs_V_1_fu_740_p4;
wire   [56:0] lhs_V_1_fu_737_p1;
wire   [56:0] zext_ln728_fu_748_p1;
wire   [56:0] zext_ln703_4_fu_758_p1;
wire   [56:0] ret_V_4_fu_752_p2;
wire   [56:0] ret_V_5_fu_761_p2;
wire   [49:0] grp_fu_783_p0;
wire   [49:0] grp_fu_783_p1;
wire   [99:0] grp_fu_783_p2;
wire   [49:0] zext_ln703_fu_799_p1;
wire   [49:0] y_l_V_fu_802_p2;
wire   [0:0] xor_ln282_fu_817_p2;
wire   [0:0] or_ln281_18_fu_830_p2;
wire   [45:0] select_ln282_fu_822_p3;
wire   [45:0] y_V_fu_807_p4;
wire   [45:0] p_Val2_18_fu_834_p3;
wire   [1:0] tmp_4_fu_852_p4;
wire   [1:0] tmp_3_fu_842_p4;
wire   [1:0] or_ln456_fu_862_p2;
wire   [2:0] tmp_5_fu_874_p4;
wire   [0:0] icmp_ln456_1_fu_884_p2;
wire   [0:0] icmp_ln456_fu_868_p2;
wire   [0:0] or_ln456_1_fu_890_p2;
wire   [32:0] tmp_1_fu_896_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to6;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [96:0] grp_fu_710_p00;
wire   [96:0] grp_fu_710_p10;
wire   [99:0] grp_fu_783_p00;
wire   [99:0] grp_fu_783_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
end

exp_33_17_s_f_x_mg8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_msb_3_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_3_table_V_address0),
    .ce0(f_x_msb_3_table_V_ce0),
    .q0(f_x_msb_3_table_V_q0)
);

exp_33_17_s_f_x_mhbi #(
    .DataWidth( 46 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
f_x_msb_2_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_msb_2_table_V_address0),
    .ce0(f_x_msb_2_table_V_ce0),
    .q0(f_x_msb_2_table_V_q0)
);

exp_33_17_s_exp_xibs #(
    .DataWidth( 50 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

cnn_mul_47ns_50nsjbC #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 47 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 97 ))
cnn_mul_47ns_50nsjbC_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_710_p0),
    .din1(grp_fu_710_p1),
    .ce(1'b1),
    .dout(grp_fu_710_p2)
);

cnn_mul_50ns_50nskbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 50 ),
    .din1_WIDTH( 50 ),
    .dout_WIDTH( 100 ))
cnn_mul_50ns_50nskbM_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_783_p0),
    .din1(grp_fu_783_p1),
    .ce(1'b1),
    .dout(grp_fu_783_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exp_x_msb_1_V_reg_1002 <= exp_x_msb_1_table_V_q0;
        exp_x_msb_1_V_reg_1002_pp0_iter5_reg <= exp_x_msb_1_V_reg_1002;
        exp_x_msb_1_V_reg_1002_pp0_iter6_reg <= exp_x_msb_1_V_reg_1002_pp0_iter5_reg;
        exp_x_msb_2_3_4_lsb_s_reg_997 <= {{ret_V_5_fu_761_p2[55:6]}};
        or_ln281_17_reg_950_pp0_iter2_reg <= or_ln281_17_reg_950_pp0_iter1_reg;
        or_ln281_17_reg_950_pp0_iter3_reg <= or_ln281_17_reg_950_pp0_iter2_reg;
        or_ln281_17_reg_950_pp0_iter4_reg <= or_ln281_17_reg_950_pp0_iter3_reg;
        or_ln281_17_reg_950_pp0_iter5_reg <= or_ln281_17_reg_950_pp0_iter4_reg;
        or_ln281_17_reg_950_pp0_iter6_reg <= or_ln281_17_reg_950_pp0_iter5_reg;
        or_ln281_8_reg_945_pp0_iter2_reg <= or_ln281_8_reg_945_pp0_iter1_reg;
        or_ln281_8_reg_945_pp0_iter3_reg <= or_ln281_8_reg_945_pp0_iter2_reg;
        or_ln281_8_reg_945_pp0_iter4_reg <= or_ln281_8_reg_945_pp0_iter3_reg;
        or_ln281_8_reg_945_pp0_iter5_reg <= or_ln281_8_reg_945_pp0_iter4_reg;
        or_ln281_8_reg_945_pp0_iter6_reg <= or_ln281_8_reg_945_pp0_iter5_reg;
        p_Result_18_reg_920_pp0_iter2_reg <= p_Result_18_reg_920_pp0_iter1_reg;
        ret_V_reg_960_pp0_iter2_reg <= ret_V_reg_960;
        ret_V_reg_960_pp0_iter3_reg <= ret_V_reg_960_pp0_iter2_reg;
        rhs_V_3_reg_972[34 : 3] <= rhs_V_3_fu_686_p5[34 : 3];
rhs_V_3_reg_972[46 : 42] <= rhs_V_3_fu_686_p5[46 : 42];
        rhs_V_3_reg_972_pp0_iter3_reg[34 : 3] <= rhs_V_3_reg_972[34 : 3];
rhs_V_3_reg_972_pp0_iter3_reg[46 : 42] <= rhs_V_3_reg_972[46 : 42];
        tmp_reg_914_pp0_iter2_reg <= tmp_reg_914_pp0_iter1_reg;
        tmp_reg_914_pp0_iter3_reg <= tmp_reg_914_pp0_iter2_reg;
        tmp_reg_914_pp0_iter4_reg <= tmp_reg_914_pp0_iter3_reg;
        tmp_reg_914_pp0_iter5_reg <= tmp_reg_914_pp0_iter4_reg;
        tmp_reg_914_pp0_iter6_reg <= tmp_reg_914_pp0_iter5_reg;
        tmp_s_reg_987 <= {{grp_fu_710_p2[96:52]}};
        trunc_ln612_2_reg_966_pp0_iter2_reg <= trunc_ln612_2_reg_966;
        trunc_ln612_2_reg_966_pp0_iter3_reg <= trunc_ln612_2_reg_966_pp0_iter2_reg;
        y_lo_s_V_reg_1018 <= {{grp_fu_783_p2[99:52]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_V_reg_955 <= f_x_msb_3_table_V_q0;
        or_ln281_17_reg_950 <= or_ln281_17_fu_653_p2;
        or_ln281_17_reg_950_pp0_iter1_reg <= or_ln281_17_reg_950;
        or_ln281_8_reg_945 <= or_ln281_8_fu_599_p2;
        or_ln281_8_reg_945_pp0_iter1_reg <= or_ln281_8_reg_945;
        p_Result_18_reg_920 <= {{p_Result_18_fu_499_p1[19:13]}};
        p_Result_18_reg_920_pp0_iter1_reg <= p_Result_18_reg_920;
        ret_V_reg_960 <= ret_V_fu_676_p2;
        tmp_V_1_reg_930 <= tmp_V_1_fu_519_p1;
        tmp_V_1_reg_930_pp0_iter1_reg <= tmp_V_1_reg_930;
        tmp_V_reg_925 <= {{tmp_V_fu_509_p1[12:5]}};
        tmp_reg_914 <= tmp_fu_225_p1[32'd32];
        tmp_reg_914_pp0_iter1_reg <= tmp_reg_914;
        trunc_ln612_2_reg_966 <= trunc_ln612_2_fu_682_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_2_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_2_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_msb_3_table_V_ce0 = 1'b1;
    end else begin
        f_x_msb_3_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln281_fu_545_p2 = (icmp_ln281_fu_533_p2 & icmp_ln281_1_fu_539_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln456_1_fu_890_p2[0:0] === 1'b1) ? 33'd4294967295 : tmp_1_fu_896_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln544_2_fu_732_p1;

assign f_x_msb_2_table_V_address0 = zext_ln544_1_fu_528_p1;

assign f_x_msb_3_table_V_address0 = zext_ln544_fu_523_p1;

assign grp_fu_710_p0 = grp_fu_710_p00;

assign grp_fu_710_p00 = rhs_V_3_fu_686_p5;

assign grp_fu_710_p1 = grp_fu_710_p10;

assign grp_fu_710_p10 = p_Result_31_fu_696_p3;

assign grp_fu_783_p0 = grp_fu_783_p00;

assign grp_fu_783_p00 = exp_x_msb_1_V_reg_1002;

assign grp_fu_783_p1 = grp_fu_783_p10;

assign grp_fu_783_p10 = exp_x_msb_2_3_4_lsb_s_reg_997;

assign icmp_ln281_1_fu_539_p2 = ((p_Result_28_fu_217_p3 > 23'd7905299) ? 1'b1 : 1'b0);

assign icmp_ln281_fu_533_p2 = ((p_Result_27_fu_203_p4 == 5'd15) ? 1'b1 : 1'b0);

assign icmp_ln456_1_fu_884_p2 = ((tmp_5_fu_874_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln456_fu_868_p2 = ((or_ln456_fu_862_p2 != 2'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_737_p1 = tmp_s_reg_987;

assign lhs_V_fu_669_p1 = p_Result_30_fu_659_p4;

assign or_ln281_10_fu_611_p2 = (xor_ln278_14_fu_437_p2 | xor_ln278_13_fu_423_p2);

assign or_ln281_11_fu_617_p2 = (xor_ln278_12_fu_409_p2 | or_ln281_10_fu_611_p2);

assign or_ln281_12_fu_623_p2 = (or_ln281_9_fu_605_p2 | or_ln281_11_fu_617_p2);

assign or_ln281_13_fu_629_p2 = (xor_ln278_16_fu_465_p2 | xor_ln278_15_fu_451_p2);

assign or_ln281_14_fu_635_p2 = (xor_ln278_18_fu_493_p2 | and_ln281_fu_545_p2);

assign or_ln281_15_fu_641_p2 = (xor_ln278_17_fu_479_p2 | or_ln281_14_fu_635_p2);

assign or_ln281_16_fu_647_p2 = (or_ln281_15_fu_641_p2 | or_ln281_13_fu_629_p2);

assign or_ln281_17_fu_653_p2 = (or_ln281_16_fu_647_p2 | or_ln281_12_fu_623_p2);

assign or_ln281_18_fu_830_p2 = (or_ln281_8_reg_945_pp0_iter6_reg | or_ln281_17_reg_950_pp0_iter6_reg);

assign or_ln281_1_fu_557_p2 = (xor_ln278_4_fu_297_p2 | xor_ln278_3_fu_283_p2);

assign or_ln281_2_fu_563_p2 = (xor_ln278_2_fu_269_p2 | or_ln281_1_fu_557_p2);

assign or_ln281_3_fu_569_p2 = (or_ln281_fu_551_p2 | or_ln281_2_fu_563_p2);

assign or_ln281_4_fu_575_p2 = (xor_ln278_6_fu_325_p2 | xor_ln278_5_fu_311_p2);

assign or_ln281_5_fu_581_p2 = (xor_ln278_9_fu_367_p2 | xor_ln278_8_fu_353_p2);

assign or_ln281_6_fu_587_p2 = (xor_ln278_7_fu_339_p2 | or_ln281_5_fu_581_p2);

assign or_ln281_7_fu_593_p2 = (or_ln281_6_fu_587_p2 | or_ln281_4_fu_575_p2);

assign or_ln281_8_fu_599_p2 = (or_ln281_7_fu_593_p2 | or_ln281_3_fu_569_p2);

assign or_ln281_9_fu_605_p2 = (xor_ln278_11_fu_395_p2 | xor_ln278_10_fu_381_p2);

assign or_ln281_fu_551_p2 = (xor_ln278_fu_241_p2 | xor_ln278_1_fu_255_p2);

assign or_ln456_1_fu_890_p2 = (icmp_ln456_fu_868_p2 | icmp_ln456_1_fu_884_p2);

assign or_ln456_fu_862_p2 = (tmp_4_fu_852_p4 | tmp_3_fu_842_p4);

assign p_Result_10_fu_387_p3 = x_l_V_fu_199_p1[32'd31];

assign p_Result_11_fu_401_p3 = x_l_V_fu_199_p1[32'd32];

assign p_Result_12_fu_415_p3 = x_l_V_fu_199_p1[32'd33];

assign p_Result_13_fu_429_p3 = x_l_V_fu_199_p1[32'd34];

assign p_Result_14_fu_443_p3 = x_l_V_fu_199_p1[32'd35];

assign p_Result_15_fu_457_p3 = x_l_V_fu_199_p1[32'd36];

assign p_Result_16_fu_471_p3 = x_l_V_fu_199_p1[32'd37];

assign p_Result_17_fu_485_p3 = x_l_V_fu_199_p1[32'd38];

assign p_Result_18_fu_499_p1 = x_V;

assign p_Result_1_fu_247_p3 = x_l_V_fu_199_p1[32'd21];

assign p_Result_27_fu_203_p1 = x_V;

assign p_Result_27_fu_203_p4 = {{p_Result_27_fu_203_p1[20:16]}};

assign p_Result_28_fu_217_p3 = {{trunc_ln612_fu_213_p1}, {7'd0}};

assign p_Result_29_fu_716_p3 = {{tmp_reg_914_pp0_iter2_reg}, {p_Result_18_reg_920_pp0_iter2_reg}};

assign p_Result_2_fu_261_p3 = x_l_V_fu_199_p1[32'd22];

assign p_Result_30_fu_659_p4 = {{f_x_msb_2_table_V_q0[45:41]}};

assign p_Result_31_fu_696_p3 = {{ret_V_reg_960}, {trunc_ln612_2_reg_966}};

assign p_Result_3_fu_275_p3 = x_l_V_fu_199_p1[32'd23];

assign p_Result_4_fu_289_p3 = x_l_V_fu_199_p1[32'd24];

assign p_Result_5_fu_303_p3 = x_l_V_fu_199_p1[32'd25];

assign p_Result_6_fu_317_p3 = x_l_V_fu_199_p1[32'd26];

assign p_Result_7_fu_331_p3 = x_l_V_fu_199_p1[32'd27];

assign p_Result_8_fu_345_p3 = x_l_V_fu_199_p1[32'd28];

assign p_Result_9_fu_359_p3 = x_l_V_fu_199_p1[32'd29];

assign p_Result_s_56_fu_373_p3 = x_l_V_fu_199_p1[32'd30];

assign p_Result_s_fu_233_p3 = x_l_V_fu_199_p1[32'd20];

assign p_Val2_18_fu_834_p3 = ((or_ln281_18_fu_830_p2[0:0] === 1'b1) ? select_ln282_fu_822_p3 : y_V_fu_807_p4);

assign ret_V_4_fu_752_p2 = (lhs_V_1_fu_737_p1 + zext_ln728_fu_748_p1);

assign ret_V_5_fu_761_p2 = (zext_ln703_4_fu_758_p1 + ret_V_4_fu_752_p2);

assign ret_V_fu_676_p2 = (lhs_V_fu_669_p1 + rhs_V_fu_673_p1);

assign rhs_V_1_fu_740_p4 = {{{ret_V_reg_960_pp0_iter3_reg}, {trunc_ln612_2_reg_966_pp0_iter3_reg}}, {6'd0}};

assign rhs_V_3_fu_686_p5 = {{{{tmp_V_1_reg_930_pp0_iter1_reg}, {7'd0}}, {f_x_msb_3_V_reg_955}}, {3'd0}};

assign rhs_V_fu_673_p1 = tmp_V_reg_925;

assign select_ln282_fu_822_p3 = ((xor_ln282_fu_817_p2[0:0] === 1'b1) ? 46'd70368744177663 : 46'd0);

assign tmp_1_fu_896_p4 = {{p_Val2_18_fu_834_p3[39:7]}};

assign tmp_3_fu_842_p4 = {{p_Val2_18_fu_834_p3[45:44]}};

assign tmp_4_fu_852_p4 = {{p_Val2_18_fu_834_p3[43:42]}};

assign tmp_5_fu_874_p4 = {{p_Val2_18_fu_834_p3[41:39]}};

assign tmp_V_1_fu_519_p0 = x_V;

assign tmp_V_1_fu_519_p1 = tmp_V_1_fu_519_p0[4:0];

assign tmp_V_fu_509_p1 = x_V;

assign tmp_V_fu_509_p4 = {{tmp_V_fu_509_p1[12:5]}};

assign tmp_fu_225_p1 = x_V;

assign tmp_fu_225_p3 = tmp_fu_225_p1[32'd32];

assign trunc_ln612_2_fu_682_p1 = f_x_msb_2_table_V_q0[40:0];

assign trunc_ln612_fu_213_p0 = x_V;

assign trunc_ln612_fu_213_p1 = trunc_ln612_fu_213_p0[15:0];

assign x_l_V_fu_199_p0 = x_V;

assign x_l_V_fu_199_p1 = x_l_V_fu_199_p0;

assign xor_ln278_10_fu_381_p2 = (tmp_fu_225_p3 ^ p_Result_s_56_fu_373_p3);

assign xor_ln278_11_fu_395_p2 = (tmp_fu_225_p3 ^ p_Result_10_fu_387_p3);

assign xor_ln278_12_fu_409_p2 = (tmp_fu_225_p3 ^ p_Result_11_fu_401_p3);

assign xor_ln278_13_fu_423_p2 = (tmp_fu_225_p3 ^ p_Result_12_fu_415_p3);

assign xor_ln278_14_fu_437_p2 = (tmp_fu_225_p3 ^ p_Result_13_fu_429_p3);

assign xor_ln278_15_fu_451_p2 = (tmp_fu_225_p3 ^ p_Result_14_fu_443_p3);

assign xor_ln278_16_fu_465_p2 = (tmp_fu_225_p3 ^ p_Result_15_fu_457_p3);

assign xor_ln278_17_fu_479_p2 = (tmp_fu_225_p3 ^ p_Result_16_fu_471_p3);

assign xor_ln278_18_fu_493_p2 = (tmp_fu_225_p3 ^ p_Result_17_fu_485_p3);

assign xor_ln278_1_fu_255_p2 = (tmp_fu_225_p3 ^ p_Result_1_fu_247_p3);

assign xor_ln278_2_fu_269_p2 = (tmp_fu_225_p3 ^ p_Result_2_fu_261_p3);

assign xor_ln278_3_fu_283_p2 = (tmp_fu_225_p3 ^ p_Result_3_fu_275_p3);

assign xor_ln278_4_fu_297_p2 = (tmp_fu_225_p3 ^ p_Result_4_fu_289_p3);

assign xor_ln278_5_fu_311_p2 = (tmp_fu_225_p3 ^ p_Result_5_fu_303_p3);

assign xor_ln278_6_fu_325_p2 = (tmp_fu_225_p3 ^ p_Result_6_fu_317_p3);

assign xor_ln278_7_fu_339_p2 = (tmp_fu_225_p3 ^ p_Result_7_fu_331_p3);

assign xor_ln278_8_fu_353_p2 = (tmp_fu_225_p3 ^ p_Result_8_fu_345_p3);

assign xor_ln278_9_fu_367_p2 = (tmp_fu_225_p3 ^ p_Result_9_fu_359_p3);

assign xor_ln278_fu_241_p2 = (tmp_fu_225_p3 ^ p_Result_s_fu_233_p3);

assign xor_ln282_fu_817_p2 = (tmp_reg_914_pp0_iter6_reg ^ 1'd1);

assign y_V_fu_807_p4 = {{y_l_V_fu_802_p2[49:4]}};

assign y_l_V_fu_802_p2 = (zext_ln703_fu_799_p1 + exp_x_msb_1_V_reg_1002_pp0_iter6_reg);

assign zext_ln544_1_fu_528_p1 = tmp_V_fu_509_p4;

assign zext_ln544_2_fu_732_p1 = p_Result_29_fu_716_p3;

assign zext_ln544_fu_523_p1 = tmp_V_1_fu_519_p1;

assign zext_ln703_4_fu_758_p1 = rhs_V_3_reg_972_pp0_iter3_reg;

assign zext_ln703_fu_799_p1 = y_lo_s_V_reg_1018;

assign zext_ln728_fu_748_p1 = rhs_V_1_fu_740_p4;

always @ (posedge ap_clk) begin
    rhs_V_3_reg_972[2:0] <= 3'b000;
    rhs_V_3_reg_972[41:35] <= 7'b0000000;
    rhs_V_3_reg_972_pp0_iter3_reg[2:0] <= 3'b000;
    rhs_V_3_reg_972_pp0_iter3_reg[41:35] <= 7'b0000000;
end

endmodule //exp_33_17_s
