// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_V_address0;
    sc_out< sc_logic > conv_out_V_ce0;
    sc_in< sc_lv<12> > conv_out_V_q0;
    sc_out< sc_lv<10> > max_pool_out_V_address0;
    sc_out< sc_logic > max_pool_out_V_ce0;
    sc_out< sc_logic > max_pool_out_V_we0;
    sc_out< sc_lv<12> > max_pool_out_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > f_fu_193_p2;
    sc_signal< sc_lv<3> > f_reg_413;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > zext_ln13_fu_199_p1;
    sc_signal< sc_lv<13> > zext_ln13_reg_418;
    sc_signal< sc_lv<1> > icmp_ln10_fu_187_p2;
    sc_signal< sc_lv<11> > zext_ln13_2_fu_203_p1;
    sc_signal< sc_lv<11> > zext_ln13_2_reg_423;
    sc_signal< sc_lv<8> > add_ln13_fu_207_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_219_p2;
    sc_signal< sc_lv<4> > r_reg_436;
    sc_signal< sc_lv<5> > shl_ln_fu_225_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_441;
    sc_signal< sc_lv<1> > icmp_ln13_fu_213_p2;
    sc_signal< sc_lv<4> > c_fu_239_p2;
    sc_signal< sc_lv<4> > c_reg_449;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > shl_ln2_fu_245_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_454;
    sc_signal< sc_lv<1> > icmp_ln16_fu_233_p2;
    sc_signal< sc_lv<2> > mpr_fu_263_p2;
    sc_signal< sc_lv<2> > mpr_reg_462;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > mul_ln1494_fu_278_p2;
    sc_signal< sc_lv<10> > mul_ln1494_reg_467;
    sc_signal< sc_lv<1> > icmp_ln20_fu_257_p2;
    sc_signal< sc_lv<2> > mpc_fu_340_p2;
    sc_signal< sc_lv<2> > mpc_reg_475;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln23_fu_334_p2;
    sc_signal< sc_lv<12> > select_ln29_fu_402_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > f_0_reg_94;
    sc_signal< sc_lv<4> > r_0_reg_105;
    sc_signal< sc_lv<8> > phi_mul_reg_116;
    sc_signal< sc_lv<4> > c_0_reg_128;
    sc_signal< sc_lv<12> > max_0_reg_140;
    sc_signal< sc_lv<2> > mpr_0_reg_153;
    sc_signal< sc_lv<12> > max_1_reg_164;
    sc_signal< sc_lv<2> > mpc_0_reg_176;
    sc_signal< sc_lv<64> > zext_ln203_5_fu_325_p1;
    sc_signal< sc_lv<64> > zext_ln1494_5_fu_391_p1;
    sc_signal< sc_lv<5> > zext_ln20_fu_253_p1;
    sc_signal< sc_lv<5> > i_fu_269_p2;
    sc_signal< sc_lv<5> > mul_ln1494_fu_278_p0;
    sc_signal< sc_lv<8> > zext_ln203_fu_284_p1;
    sc_signal< sc_lv<8> > add_ln203_fu_288_p2;
    sc_signal< sc_lv<9> > tmp_1_fu_302_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_294_p3;
    sc_signal< sc_lv<11> > zext_ln203_4_fu_310_p1;
    sc_signal< sc_lv<11> > sub_ln203_fu_314_p2;
    sc_signal< sc_lv<11> > add_ln203_3_fu_320_p2;
    sc_signal< sc_lv<5> > zext_ln23_fu_330_p1;
    sc_signal< sc_lv<5> > j_fu_346_p2;
    sc_signal< sc_lv<10> > zext_ln1494_3_fu_351_p1;
    sc_signal< sc_lv<10> > add_ln1494_fu_355_p2;
    sc_signal< sc_lv<11> > tmp_2_fu_368_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_360_p3;
    sc_signal< sc_lv<13> > zext_ln1494_4_fu_376_p1;
    sc_signal< sc_lv<13> > sub_ln1494_fu_380_p2;
    sc_signal< sc_lv<13> > add_ln1494_2_fu_386_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_396_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln1494_fu_278_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_207_p2();
    void thread_add_ln1494_2_fu_386_p2();
    void thread_add_ln1494_fu_355_p2();
    void thread_add_ln203_3_fu_320_p2();
    void thread_add_ln203_fu_288_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_fu_239_p2();
    void thread_conv_out_V_address0();
    void thread_conv_out_V_ce0();
    void thread_f_fu_193_p2();
    void thread_i_fu_269_p2();
    void thread_icmp_ln10_fu_187_p2();
    void thread_icmp_ln13_fu_213_p2();
    void thread_icmp_ln1494_fu_396_p2();
    void thread_icmp_ln16_fu_233_p2();
    void thread_icmp_ln20_fu_257_p2();
    void thread_icmp_ln23_fu_334_p2();
    void thread_j_fu_346_p2();
    void thread_max_pool_out_V_address0();
    void thread_max_pool_out_V_ce0();
    void thread_max_pool_out_V_d0();
    void thread_max_pool_out_V_we0();
    void thread_mpc_fu_340_p2();
    void thread_mpr_fu_263_p2();
    void thread_mul_ln1494_fu_278_p0();
    void thread_mul_ln1494_fu_278_p00();
    void thread_mul_ln1494_fu_278_p2();
    void thread_p_shl2_cast_fu_294_p3();
    void thread_p_shl_cast_fu_360_p3();
    void thread_r_fu_219_p2();
    void thread_select_ln29_fu_402_p3();
    void thread_shl_ln2_fu_245_p3();
    void thread_shl_ln_fu_225_p3();
    void thread_sub_ln1494_fu_380_p2();
    void thread_sub_ln203_fu_314_p2();
    void thread_tmp_1_fu_302_p3();
    void thread_tmp_2_fu_368_p3();
    void thread_zext_ln13_2_fu_203_p1();
    void thread_zext_ln13_fu_199_p1();
    void thread_zext_ln1494_3_fu_351_p1();
    void thread_zext_ln1494_4_fu_376_p1();
    void thread_zext_ln1494_5_fu_391_p1();
    void thread_zext_ln203_4_fu_310_p1();
    void thread_zext_ln203_5_fu_325_p1();
    void thread_zext_ln203_fu_284_p1();
    void thread_zext_ln20_fu_253_p1();
    void thread_zext_ln23_fu_330_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
