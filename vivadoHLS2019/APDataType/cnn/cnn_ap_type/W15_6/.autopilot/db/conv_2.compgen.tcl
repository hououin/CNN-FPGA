# This script segment is generated automatically by AutoPilot

set id 12
set name cnn_mul_mul_11s_1hbi
set corename simcore_mul
set op mul
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 11
set in0_signed 1
set in1_width 15
set in1_signed 1
set out_width 27
set exp i0*i1
set arg_lists {i0 {11 1 +} i1 {15 1 +} p {27 1 +} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 14
set hasByteEnable 0
set MemName conv_2_conv_2_weifYi
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 11
set AddrRange 864
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "00000101010" "11111111010" "00010010000" "11101100001" "11111101000" "11101000011" "11101111010" "00001000000" "11111011111" "11111101000" "00001011111" "00010010001" "11111000000" "00000000001" "00001101000" "11101010001" "00000101001" "00000111011" "00001011001" "11001111001" "11111010010" "00001100011" "00000110110" "11101100101" "11101111110" "00001011011" "11110111100" "11110010010" "00000001000" "00000011111" "11110000111" "00001111101" "11111100001" "00000010001" "11111100100" "11101011010" "11111110111" "11111010010" "11110100010" "00000110000" "11111000100" "11111011100" "00010000100" "11111111010" "00000010100" "11111101010" "00000110000" "11110111110" "00000011000" "00000111110" "11111110111" "11100101101" "00000100000" "11101011000" "11110010101" "00001001010" "00001110001" "00000110010" "11111110100" "00000110000" "00010101011" "00000010000" "11111010000" "11100000111" "11110000000" "11111111010" "00000000001" "11101010111" "11110111110" "00001110101" "00100001100" "11011011101" "00001111001" "11011101110" "11110110010" "11110000001" "11101001010" "00001100001" "11000101000" "00001110001" "00001100101" "11111111001" "00001011101" "11111010111" "11111011000" "00010101110" "00000101111" "00000010111" "11110100100" "11111111111" "00000011110" "00000101011" "11111011100" "11111110000" "00001010100" "11111010001" "11111111111" "00000101010" "00001001010" "00010010001" "00001100100" "11110101000" "11111101011" "00000011011" "11101100011" "11110100010" "00000011101" "11110100110" "00001110001" "11101110110" "00000011001" "00000000111" "00001001100" "11111110011" "11110001111" "11000011000" "11110011010" "00001111011" "00000110011" "00000101001" "00000001011" "11111111101" "00010000010" "11111011111" "11111001010" "00000011010" "00010000001" "00010010101" "00000010000" "00000001011" "00001000111" "00000100100" "11110001011" "00001111101" "11110001101" "11111011100" "11110100110" "00000100000" "00001001101" "00000001000" "11111010001" "00000011000" "00010000011" "00000011000" "00000011110" "00001110001" "00001000001" "11110010111" "00001000001" "11101010000" "11111011101" "00000000010" "11111100000" "11110101110" "00001001001" "00001000111" "00001010101" "11101100000" "11110100101" "11110110000" "11110011000" "00010000011" "11101110001" "11100110100" "11110000101" "00000000110" "00000000011" "11110100100" "00000110100" "11100111110" "00001011000" "11110110101" "11111010011" "00001000101" "11010000010" "11111110010" "00000011110" "00000010011" "00001000100" "00000101110" "00000111101" "00000100110" "11100101010" "11101100110" "00001100011" "00000100000" "00000111010" "00000110101" "00001101010" "11110110101" "11110101001" "00000011111" "00000001001" "11111101001" "11111101100" "00010010010" "00001110110" "00001011001" "11110000101" "11111110000" "11101011010" "11110101110" "11101111110" "00001000110" "11111011001" "00000101000" "11111001010" "11111001101" "11111101110" "11101011010" "11110000110" "00001101100" "11110100101" "00001000010" "00000100011" "11110111100" "11110101110" "11111010110" "00001010001" "11101010100" "11111101100" "11101100111" "00100000101" "11111111110" "11111111001" "00001010111" "00010000101" "00001111111" "11110101101" "00010011001" "11101010011" "11110110111" "11110110110" "11110010111" "11110110000" "11111110010" "11101100001" "00001111011" "11111110010" "11111111101" "00001100010" "00000101001" "00010100000" "11111001000" "00001001110" "11110101011" "11110011010" "00001000001" "11110000000" "00001101111" "00000110100" "00000011100" "00000000101" "11101111011" "11111000001" "00000010110" "11110010000" "11101101010" "11011100101" "11010111000" "11111010010" "00000101000" "00001100111" "11010111110" "00000100110" "11100011100" "00000000000" "11110001110" "11110111011" "11111010011" "11101011001" "11111001111" "11111100000" "00010011111" "11110100111" "11111111110" "11101101110" "00000111000" "11110101011" "00000110000" "00001000110" "00000101111" "00000010011" "00000110100" "11111001101" "00010011100" "11011110100" "00000110001" "11111100000" "11110101111" "11110100111" "00000011110" "11111101101" "11101001000" "11111111001" "00001010010" "00010011100" "11111100101" "00001010011" "00000010001" "11111101111" "11101110010" "00000011011" "00001000001" "00001011001" "11111001111" "00000001111" "11001010001" "00010000010" "00000010010" "11101101010" "11111000110" "11110011011" "11111100000" "11101111010" "11101000101" "11110011011" "00001111011" "11111000111" "00001101001" "11110101101" "11110000100" "11111000111" "00000100110" "11111011101" "11101010011" "11110001011" "00000001010" "00010110101" "00000001000" "00001110001" "11111100001" "11111011001" "11101101111" "11111011110" "11111101101" "00001101000" "11110001011" "00000010110" "11011110011" "11111110110" "11110011111" "11101111110" "00000110111" "00011000010" "00010111011" "00000010111" "11111100111" "00000100110" "00001110100" "00000001110" "00010001001" "11100100100" "11111101101" "00000010011" "11110111100" "00000011110" "00010010011" "11110001111" "11110110010" "11101010010" "11101111011" "11100011011" "11101111110" "11111010010" "00010100011" "11100010111" "00000111010" "11110000110" "00001001010" "00000100101" "00100000010" "00000101110" "00000001110" "11110000111" "11110011010" "00000010111" "00000000111" "00001110000" "11111111010" "00001110101" "00000100001" "00000111011" "11101111011" "11111001010" "00000011101" "00001110000" "00000100110" "00000110010" "11101110101" "00000110101" "00001001101" "00000001100" "11110110001" "11111100111" "11110001010" "00001001011" "11110011111" "00000011101" "11110111011" "00010100110" "00000001000" "11101111001" "11110010110" "00011111000" "00001101101" "00010010010" "11111001001" "11111100001" "11111110000" "11111010111" "11001101011" "11110101111" "11111110101" "11100101010" "00000111100" "11110101000" "00000100100" "11111010000" "00000010010" "11111101000" "11100101110" "00000000000" "11111100101" "11110110010" "11110000011" "11111111100" "00000111001" "11111001111" "11111111110" "11111111001" "11101101011" "11101010100" "11101010111" "11110110001" "00000011010" "11110011100" "11110001101" "00000000110" "00000100110" "00000111011" "00000010011" "00010011010" "11110111000" "00010000011" "11100010110" "00001011101" "11111100001" "11110001011" "11101011100" "11111001101" "10110110010" "00010100001" "00010010000" "11111111010" "00000111000" "00000101110" "11110001000" "00000001101" "11110011011" "11111001100" "00000001111" "11010011100" "00001100100" "00010000101" "00000111000" "00001111010" "00000101100" "00001001011" "00001101001" "11110001111" "11110011101" "11101101100" "00010001111" "00000000100" "00010001011" "00010101011" "00000000111" "11101100110" "00000100111" "00000110101" "11111011010" "00000110110" "11110110000" "11111100101" "11100111110" "00010010110" "11111111111" "11101000011" "00001011111" "11101111000" "11111111001" "11111110100" "00010011001" "11110011010" "11111011100" "00000000100" "11110110010" "11100000101" "00001001101" "00010011111" "00011001001" "11100101000" "11101110110" "11111110100" "11101101000" "11111111011" "11011010101" "11110111110" "11101111011" "11111000101" "11110011101" "11111001100" "00000100011" "00000010000" "00000000001" "00000100111" "11101111010" "00001110100" "00001010111" "11101110010" "00001000111" "11110010101" "00001111110" "11111010100" "00010000010" "11111010110" "11101001110" "00001110000" "11110100110" "00010011111" "00001111011" "11101110011" "11010111001" "00001001000" "00000101010" "11111111100" "00000111011" "11101101100" "11110011001" "00001110111" "11110110110" "11111111101" "00001110110" "11110110100" "11100001111" "11101100110" "11111110111" "00100000101" "00010001010" "11111001100" "11110111001" "00000110011" "11101011011" "11111000100" "11101100101" "11110111010" "11011001010" "11101111100" "11110101100" "00001101111" "11111011010" "11111010000" "11100101000" "00001001100" "11111101011" "11100100101" "11111001010" "00011111101" "00001000110" "00010000010" "00000100101" "11110111111" "00010001001" "11110010010" "00000011101" "00001001001" "00000110100" "11100010010" "00000000111" "00000011101" "00000110010" "00000110110" "11111001001" "00001110011" "00001101110" "00000010001" "00000101111" "11110101010" "11101100011" "11110010001" "00001001111" "11110010011" "00010111010" "00000100011" "11010101111" "11110011100" "11111100001" "00000110110" "00000101010" "11110111101" "00000101011" "11111010001" "11110111111" "11110110011" "00001010001" "11111101000" "11101011110" "00000001100" "00010001101" "11100110010" "00000011101" "00000010010" "11111010100" "00001101111" "11111101010" "00001100101" "00000010111" "11111101010" "00000111100" "11101110111" "11111000011" "11111101110" "00010000101" "00000110100" "11111011000" "11011011001" "00000010100" "00000011101" "11111111110" "00000110010" "11110011101" "00010100001" "00010010000" "00000110110" "00001000101" "00001000000" "11111111110" "11101000111" "00001100010" "11111000010" "11110111000" "11110110111" "11011111101" "11111011000" "11111001000" "11110011111" "00010010000" "11110001011" "00010101001" "11110101101" "11101101010" "00000010111" "00000001010" "11111011000" "11111101110" "00000101100" "11110111100" "00000010000" "00010111010" "11110001100" "11110111100" "11110101101" "00001000100" "00010001000" "00001011110" "11111100011" "00000010100" "00001111110" "00001010010" "00001000101" "00001000101" "00000011100" "00001010000" "00000001010" "00000110011" "00000100101" "00010000000" "00000111000" "11111100001" "11101000011" "11111011100" "11101011110" "00010000110" "00000110100" "00001001011" "11111111111" "00001110000" "00000111101" "00001000110" "11111000100" "11101100101" "00000100010" "11100011101" "00000011111" "00000111011" "11110010111" "00001011010" "11111000000" "11100011001" "11110000000" "11111100100" "11111111111" "11011010101" "00000000110" "00001100110" "00000010111" "11111110001" "11110011110" "11111101000" "00000011111" "00000100111" "11111010101" "00000010001" "11110001010" "11111110100" "11111111000" "00001001011" "00000100110" "00000010101" "00001011000" "11110110001" "00000000011" "00001001100" "11111011100" "00001011010" "11111110101" "11110110010" "11110001000" "00001110000" "00000110001" "11111011111" "00000001011" "00000001111" "00000100111" "00010000001" "11101011000" "11101010100" "11110001100" "11010110111" "00001001001" "00000011101" "00010100110" "00001100011" "11101111011" "11110001101" "11110101110" "11111101000" "00000110111" "11110011001" "00000111000" "11101101110" "11101101100" "11100011110" "00001011100" "00010011000" "00001100110" "00001000001" "11111001001" "00001001111" "00001000111" "11101110010" "00000110001" "11110101110" "00010001000" "00000111010" "00010101111" "00000001001" "00000101001" "11111101111" "00010000100" "11111100011" "11110010000" "00001100001" "00001110111" "11110001110" "11101100011" "00000011010" "11110001011" "00000101101" "00001100001" "00001000100" "00001011111" "00001111001" "00010111000" "00010111110" "11100110000" "11101101101" "00001001110" "11100000111" "00001101001" "00011110110" "11101111010" "00000000010" "11101110011" "11101001110" "11110011000" "11110111111" "00001001011" "11111010011" "11111010110" "00000101101" "11111100001" "11110010111" "11110010000" "11110000011" "00010000100" "00000101000" "11110001100" "00000100110" "00000001101" "00001111010" "00000000101" "00000000000" "00001110101" "11110111111" "11111000110" "11110000010" "00000101000" "00000011111" "11110010111" "00001011111" "11111111000" "11101000011" "00000001100" "11111110010" "00000100111" "11111011101" "00000010011" "00000011111" "00011010001" "00001011000" "00000000110" "11110111001" "00001011100" "11110110011" "00010000110" "11110011100" "00000010111" "00000101101" "00000011000" "11111011011" "11101111111" "11101110000" "11110101001" "11010100000" "00011000011" "11111001101" "00010001001" "11100001011" "00010110001" "11110111000" "00000000010" "11101110101" "11111111110" "11111110011" "00010010101" "00000100010" "00011101000" "11100111101" "00001110000" "00000000001" "00001000011" "11111010100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 15
set hasByteEnable 0
set MemName conv_2_conv_2_biag8j
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 9
set AddrRange 16
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "110010001" "110110110" "101111110" "001000011" "110011100" "111001111" "111011001" "110001001" "001011111" "110100100" "111100110" "111101000" "110010111" "000010011" "101100001" "111001110" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 16 \
    name input_V \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename input_V \
    op interface \
    ports { input_V_address0 { O 10 vector } input_V_ce0 { O 1 bit } input_V_q0 { I 15 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'input_V'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 17 \
    name conv_out_V \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename conv_out_V \
    op interface \
    ports { conv_out_V_address0 { O 11 vector } conv_out_V_ce0 { O 1 bit } conv_out_V_we0 { O 1 bit } conv_out_V_d0 { O 15 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'conv_out_V'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


