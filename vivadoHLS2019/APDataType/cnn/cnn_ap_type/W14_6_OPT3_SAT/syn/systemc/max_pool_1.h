// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mac_muladd_5nlbW.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 36
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_V_address0;
    sc_out< sc_logic > conv_out_V_ce0;
    sc_in< sc_lv<14> > conv_out_V_q0;
    sc_out< sc_lv<12> > conv_out_V_address1;
    sc_out< sc_logic > conv_out_V_ce1;
    sc_in< sc_lv<14> > conv_out_V_q1;
    sc_out< sc_lv<8> > max_pool_out_0_V_address0;
    sc_out< sc_logic > max_pool_out_0_V_ce0;
    sc_out< sc_logic > max_pool_out_0_V_we0;
    sc_out< sc_lv<14> > max_pool_out_0_V_d0;
    sc_out< sc_lv<8> > max_pool_out_1_V_address0;
    sc_out< sc_logic > max_pool_out_1_V_ce0;
    sc_out< sc_logic > max_pool_out_1_V_we0;
    sc_out< sc_lv<14> > max_pool_out_1_V_d0;
    sc_out< sc_lv<8> > max_pool_out_2_V_address0;
    sc_out< sc_logic > max_pool_out_2_V_ce0;
    sc_out< sc_logic > max_pool_out_2_V_we0;
    sc_out< sc_lv<14> > max_pool_out_2_V_d0;
    sc_out< sc_lv<8> > max_pool_out_3_V_address0;
    sc_out< sc_logic > max_pool_out_3_V_ce0;
    sc_out< sc_logic > max_pool_out_3_V_we0;
    sc_out< sc_lv<14> > max_pool_out_3_V_d0;
    sc_out< sc_lv<8> > max_pool_out_4_V_address0;
    sc_out< sc_logic > max_pool_out_4_V_ce0;
    sc_out< sc_logic > max_pool_out_4_V_we0;
    sc_out< sc_lv<14> > max_pool_out_4_V_d0;
    sc_out< sc_lv<8> > max_pool_out_5_V_address0;
    sc_out< sc_logic > max_pool_out_5_V_ce0;
    sc_out< sc_logic > max_pool_out_5_V_we0;
    sc_out< sc_lv<14> > max_pool_out_5_V_d0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_mac_muladd_5nlbW<1,1,5,4,4,8>* cnn_mac_muladd_5nlbW_U75;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten23_reg_211;
    sc_signal< sc_lv<3> > f_0_reg_222;
    sc_signal< sc_lv<8> > indvar_flatten_reg_233;
    sc_signal< sc_lv<4> > r_0_reg_244;
    sc_signal< sc_lv<4> > c_0_reg_255;
    sc_signal< sc_lv<1> > icmp_ln10_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_729;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_729_pp0_iter1_reg;
    sc_signal< sc_lv<10> > add_ln10_fu_286_p2;
    sc_signal< sc_lv<10> > add_ln10_reg_733;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_298_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_738;
    sc_signal< sc_lv<4> > select_ln29_4_fu_304_p3;
    sc_signal< sc_lv<4> > select_ln29_4_reg_743;
    sc_signal< sc_lv<3> > select_ln29_5_fu_312_p3;
    sc_signal< sc_lv<3> > select_ln29_5_reg_748;
    sc_signal< sc_lv<3> > select_ln29_5_reg_748_pp0_iter1_reg;
    sc_signal< sc_lv<1> > and_ln29_fu_348_p2;
    sc_signal< sc_lv<1> > and_ln29_reg_754;
    sc_signal< sc_lv<4> > r_fu_354_p2;
    sc_signal< sc_lv<4> > r_reg_759;
    sc_signal< sc_lv<4> > select_ln13_fu_366_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_764;
    sc_signal< sc_lv<4> > select_ln13_reg_764_pp0_iter1_reg;
    sc_signal< sc_lv<10> > mul_ln1494_fu_394_p2;
    sc_signal< sc_lv<10> > mul_ln1494_reg_771;
    sc_signal< sc_lv<5> > select_ln13_3_fu_406_p3;
    sc_signal< sc_lv<5> > select_ln13_3_reg_777;
    sc_signal< sc_lv<8> > add_ln13_fu_414_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_782;
    sc_signal< sc_lv<4> > select_ln13_1_fu_423_p3;
    sc_signal< sc_lv<4> > select_ln13_1_reg_787;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<13> > add_ln1494_4_fu_522_p2;
    sc_signal< sc_lv<13> > add_ln1494_4_reg_798;
    sc_signal< sc_lv<13> > add_ln1494_8_fu_612_p2;
    sc_signal< sc_lv<13> > add_ln1494_8_reg_808;
    sc_signal< sc_lv<4> > c_fu_618_p2;
    sc_signal< sc_lv<4> > c_reg_813;
    sc_signal< sc_lv<8> > select_ln13_4_fu_623_p3;
    sc_signal< sc_lv<8> > select_ln13_4_reg_818;
    sc_signal< sc_lv<14> > select_ln29_1_fu_665_p3;
    sc_signal< sc_lv<14> > select_ln29_1_reg_833;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_flatten23_phi_fu_215_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_f_0_phi_fu_226_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_237_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_248_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_259_p4;
    sc_signal< sc_lv<64> > zext_ln1494_6_fu_485_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln1494_11_fu_575_p1;
    sc_signal< sc_lv<64> > zext_ln1494_8_fu_629_p1;
    sc_signal< sc_lv<64> > zext_ln1494_13_fu_655_p1;
    sc_signal< sc_lv<64> > zext_ln203_5_fu_711_p1;
    sc_signal< sc_lv<14> > select_ln29_3_fu_694_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_266_p3;
    sc_signal< sc_lv<3> > f_fu_292_p2;
    sc_signal< sc_lv<5> > or_ln26_fu_274_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_342_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_336_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_360_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_374_p3;
    sc_signal< sc_lv<5> > select_ln29_6_fu_320_p3;
    sc_signal< sc_lv<5> > select_ln13_2_fu_382_p3;
    sc_signal< sc_lv<5> > mul_ln1494_fu_394_p1;
    sc_signal< sc_lv<5> > or_ln26_1_fu_400_p2;
    sc_signal< sc_lv<5> > select_ln29_7_fu_328_p3;
    sc_signal< sc_lv<5> > mul_ln1494_1_fu_431_p1;
    sc_signal< sc_lv<5> > shl_ln2_fu_437_p3;
    sc_signal< sc_lv<10> > zext_ln1494_4_fu_444_p1;
    sc_signal< sc_lv<10> > add_ln1494_fu_448_p2;
    sc_signal< sc_lv<11> > tmp_fu_461_p3;
    sc_signal< sc_lv<13> > p_shl6_cast_fu_453_p3;
    sc_signal< sc_lv<13> > zext_ln1494_5_fu_469_p1;
    sc_signal< sc_lv<13> > zext_ln29_fu_420_p1;
    sc_signal< sc_lv<13> > sub_ln1494_fu_473_p2;
    sc_signal< sc_lv<13> > add_ln1494_2_fu_479_p2;
    sc_signal< sc_lv<10> > mul_ln1494_1_fu_431_p2;
    sc_signal< sc_lv<10> > add_ln1494_3_fu_490_p2;
    sc_signal< sc_lv<11> > tmp_7_fu_504_p3;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_496_p3;
    sc_signal< sc_lv<13> > zext_ln1494_7_fu_512_p1;
    sc_signal< sc_lv<13> > sub_ln1494_1_fu_516_p2;
    sc_signal< sc_lv<5> > or_ln27_fu_528_p2;
    sc_signal< sc_lv<10> > zext_ln1494_9_fu_534_p1;
    sc_signal< sc_lv<10> > add_ln1494_5_fu_538_p2;
    sc_signal< sc_lv<11> > tmp_8_fu_551_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_543_p3;
    sc_signal< sc_lv<13> > zext_ln1494_10_fu_559_p1;
    sc_signal< sc_lv<13> > sub_ln1494_2_fu_563_p2;
    sc_signal< sc_lv<13> > add_ln1494_6_fu_569_p2;
    sc_signal< sc_lv<10> > add_ln1494_7_fu_580_p2;
    sc_signal< sc_lv<11> > tmp_9_fu_594_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_586_p3;
    sc_signal< sc_lv<13> > zext_ln1494_12_fu_602_p1;
    sc_signal< sc_lv<13> > sub_ln1494_3_fu_606_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_637_p2;
    sc_signal< sc_lv<13> > trunc_ln1494_fu_633_p1;
    sc_signal< sc_lv<13> > select_ln29_fu_643_p3;
    sc_signal< sc_lv<14> > zext_ln29_1_fu_651_p1;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_659_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_676_p2;
    sc_signal< sc_lv<14> > select_ln29_2_fu_681_p3;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_688_p2;
    sc_signal< sc_lv<8> > grp_fu_720_p3;
    sc_signal< sc_lv<5> > grp_fu_720_p0;
    sc_signal< sc_lv<4> > grp_fu_720_p1;
    sc_signal< sc_lv<4> > grp_fu_720_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_720_p10;
    sc_signal< sc_lv<8> > grp_fu_720_p20;
    sc_signal< sc_lv<10> > mul_ln1494_1_fu_431_p10;
    sc_signal< sc_lv<10> > mul_ln1494_fu_394_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<10> ap_const_lv10_3F6;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_286_p2();
    void thread_add_ln13_fu_414_p2();
    void thread_add_ln1494_2_fu_479_p2();
    void thread_add_ln1494_3_fu_490_p2();
    void thread_add_ln1494_4_fu_522_p2();
    void thread_add_ln1494_5_fu_538_p2();
    void thread_add_ln1494_6_fu_569_p2();
    void thread_add_ln1494_7_fu_580_p2();
    void thread_add_ln1494_8_fu_612_p2();
    void thread_add_ln1494_fu_448_p2();
    void thread_and_ln29_fu_348_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_259_p4();
    void thread_ap_phi_mux_f_0_phi_fu_226_p4();
    void thread_ap_phi_mux_indvar_flatten23_phi_fu_215_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_237_p4();
    void thread_ap_phi_mux_r_0_phi_fu_248_p4();
    void thread_ap_ready();
    void thread_c_fu_618_p2();
    void thread_conv_out_V_address0();
    void thread_conv_out_V_address1();
    void thread_conv_out_V_ce0();
    void thread_conv_out_V_ce1();
    void thread_f_fu_292_p2();
    void thread_grp_fu_720_p0();
    void thread_grp_fu_720_p1();
    void thread_grp_fu_720_p10();
    void thread_grp_fu_720_p2();
    void thread_grp_fu_720_p20();
    void thread_icmp_ln10_fu_280_p2();
    void thread_icmp_ln13_fu_298_p2();
    void thread_icmp_ln1494_1_fu_659_p2();
    void thread_icmp_ln1494_2_fu_676_p2();
    void thread_icmp_ln1494_3_fu_688_p2();
    void thread_icmp_ln1494_fu_637_p2();
    void thread_icmp_ln16_fu_342_p2();
    void thread_max_pool_out_0_V_address0();
    void thread_max_pool_out_0_V_ce0();
    void thread_max_pool_out_0_V_d0();
    void thread_max_pool_out_0_V_we0();
    void thread_max_pool_out_1_V_address0();
    void thread_max_pool_out_1_V_ce0();
    void thread_max_pool_out_1_V_d0();
    void thread_max_pool_out_1_V_we0();
    void thread_max_pool_out_2_V_address0();
    void thread_max_pool_out_2_V_ce0();
    void thread_max_pool_out_2_V_d0();
    void thread_max_pool_out_2_V_we0();
    void thread_max_pool_out_3_V_address0();
    void thread_max_pool_out_3_V_ce0();
    void thread_max_pool_out_3_V_d0();
    void thread_max_pool_out_3_V_we0();
    void thread_max_pool_out_4_V_address0();
    void thread_max_pool_out_4_V_ce0();
    void thread_max_pool_out_4_V_d0();
    void thread_max_pool_out_4_V_we0();
    void thread_max_pool_out_5_V_address0();
    void thread_max_pool_out_5_V_ce0();
    void thread_max_pool_out_5_V_d0();
    void thread_max_pool_out_5_V_we0();
    void thread_mul_ln1494_1_fu_431_p1();
    void thread_mul_ln1494_1_fu_431_p10();
    void thread_mul_ln1494_1_fu_431_p2();
    void thread_mul_ln1494_fu_394_p1();
    void thread_mul_ln1494_fu_394_p10();
    void thread_mul_ln1494_fu_394_p2();
    void thread_or_ln13_fu_360_p2();
    void thread_or_ln26_1_fu_400_p2();
    void thread_or_ln26_fu_274_p2();
    void thread_or_ln27_fu_528_p2();
    void thread_p_shl2_cast_fu_543_p3();
    void thread_p_shl4_cast_fu_496_p3();
    void thread_p_shl6_cast_fu_453_p3();
    void thread_p_shl_cast_fu_586_p3();
    void thread_r_fu_354_p2();
    void thread_select_ln13_1_fu_423_p3();
    void thread_select_ln13_2_fu_382_p3();
    void thread_select_ln13_3_fu_406_p3();
    void thread_select_ln13_4_fu_623_p3();
    void thread_select_ln13_fu_366_p3();
    void thread_select_ln29_1_fu_665_p3();
    void thread_select_ln29_2_fu_681_p3();
    void thread_select_ln29_3_fu_694_p3();
    void thread_select_ln29_4_fu_304_p3();
    void thread_select_ln29_5_fu_312_p3();
    void thread_select_ln29_6_fu_320_p3();
    void thread_select_ln29_7_fu_328_p3();
    void thread_select_ln29_fu_643_p3();
    void thread_shl_ln26_mid1_fu_374_p3();
    void thread_shl_ln2_fu_437_p3();
    void thread_shl_ln_fu_266_p3();
    void thread_sub_ln1494_1_fu_516_p2();
    void thread_sub_ln1494_2_fu_563_p2();
    void thread_sub_ln1494_3_fu_606_p2();
    void thread_sub_ln1494_fu_473_p2();
    void thread_tmp_7_fu_504_p3();
    void thread_tmp_8_fu_551_p3();
    void thread_tmp_9_fu_594_p3();
    void thread_tmp_fu_461_p3();
    void thread_trunc_ln1494_fu_633_p1();
    void thread_xor_ln29_fu_336_p2();
    void thread_zext_ln1494_10_fu_559_p1();
    void thread_zext_ln1494_11_fu_575_p1();
    void thread_zext_ln1494_12_fu_602_p1();
    void thread_zext_ln1494_13_fu_655_p1();
    void thread_zext_ln1494_4_fu_444_p1();
    void thread_zext_ln1494_5_fu_469_p1();
    void thread_zext_ln1494_6_fu_485_p1();
    void thread_zext_ln1494_7_fu_512_p1();
    void thread_zext_ln1494_8_fu_629_p1();
    void thread_zext_ln1494_9_fu_534_p1();
    void thread_zext_ln203_5_fu_711_p1();
    void thread_zext_ln29_1_fu_651_p1();
    void thread_zext_ln29_fu_420_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
