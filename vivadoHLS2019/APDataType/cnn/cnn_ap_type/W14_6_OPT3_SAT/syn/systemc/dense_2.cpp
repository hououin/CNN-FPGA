// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dense_2::ap_ST_fsm_state1 = "1";
const sc_lv<5> dense_2::ap_ST_fsm_state2 = "10";
const sc_lv<5> dense_2::ap_ST_fsm_state3 = "100";
const sc_lv<5> dense_2::ap_ST_fsm_state4 = "1000";
const sc_lv<5> dense_2::ap_ST_fsm_state5 = "10000";
const sc_lv<32> dense_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense_2::ap_const_lv32_1 = "1";
const sc_lv<1> dense_2::ap_const_lv1_0 = "0";
const sc_lv<32> dense_2::ap_const_lv32_2 = "10";
const sc_lv<1> dense_2::ap_const_lv1_1 = "1";
const sc_lv<32> dense_2::ap_const_lv32_3 = "11";
const sc_lv<5> dense_2::ap_const_lv5_0 = "00000";
const sc_lv<32> dense_2::ap_const_lv32_4 = "100";
const sc_lv<14> dense_2::ap_const_lv14_0 = "00000000000000";
const sc_lv<6> dense_2::ap_const_lv6_0 = "000000";
const sc_lv<5> dense_2::ap_const_lv5_1E = "11110";
const sc_lv<5> dense_2::ap_const_lv5_1 = "1";
const sc_lv<6> dense_2::ap_const_lv6_32 = "110010";
const sc_lv<6> dense_2::ap_const_lv6_1 = "1";
const sc_lv<8> dense_2::ap_const_lv8_0 = "00000000";
const sc_lv<32> dense_2::ap_const_lv32_16 = "10110";
const sc_lv<32> dense_2::ap_const_lv32_8 = "1000";
const sc_lv<32> dense_2::ap_const_lv32_15 = "10101";
const sc_lv<32> dense_2::ap_const_lv32_7 = "111";
const sc_lv<32> dense_2::ap_const_lv32_D = "1101";
const sc_lv<14> dense_2::ap_const_lv14_1FFF = "1111111111111";
const sc_lv<14> dense_2::ap_const_lv14_2000 = "10000000000000";
const sc_lv<32> dense_2::ap_const_lv32_E = "1110";
const sc_lv<13> dense_2::ap_const_lv13_0 = "0000000000000";
const bool dense_2::ap_const_boolean_1 = true;

dense_2::dense_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_2_weights_V_U = new dense_2_dense_2_wbnm("dense_2_weights_V_U");
    dense_2_weights_V_U->clk(ap_clk);
    dense_2_weights_V_U->reset(ap_rst);
    dense_2_weights_V_U->address0(dense_2_weights_V_address0);
    dense_2_weights_V_U->ce0(dense_2_weights_V_ce0);
    dense_2_weights_V_U->q0(dense_2_weights_V_q0);
    dense_2_bias_V_U = new dense_2_dense_2_bbom("dense_2_bias_V_U");
    dense_2_bias_V_U->clk(ap_clk);
    dense_2_bias_V_U->reset(ap_rst);
    dense_2_bias_V_U->address0(dense_2_bias_V_address0);
    dense_2_bias_V_U->ce0(dense_2_bias_V_ce0);
    dense_2_bias_V_U->q0(dense_2_bias_V_q0);
    cnn_mux_506_14_1_1_U604 = new cnn_mux_506_14_1_1<1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,6,14>("cnn_mux_506_14_1_1_U604");
    cnn_mux_506_14_1_1_U604->din0(dense_1_out_0_V_rea);
    cnn_mux_506_14_1_1_U604->din1(dense_1_out_1_V_rea);
    cnn_mux_506_14_1_1_U604->din2(dense_1_out_2_V_rea);
    cnn_mux_506_14_1_1_U604->din3(dense_1_out_3_V_rea);
    cnn_mux_506_14_1_1_U604->din4(dense_1_out_4_V_rea);
    cnn_mux_506_14_1_1_U604->din5(dense_1_out_5_V_rea);
    cnn_mux_506_14_1_1_U604->din6(dense_1_out_6_V_rea);
    cnn_mux_506_14_1_1_U604->din7(dense_1_out_7_V_rea);
    cnn_mux_506_14_1_1_U604->din8(dense_1_out_8_V_rea);
    cnn_mux_506_14_1_1_U604->din9(dense_1_out_9_V_rea);
    cnn_mux_506_14_1_1_U604->din10(dense_1_out_10_V_re);
    cnn_mux_506_14_1_1_U604->din11(dense_1_out_11_V_re);
    cnn_mux_506_14_1_1_U604->din12(dense_1_out_12_V_re);
    cnn_mux_506_14_1_1_U604->din13(dense_1_out_13_V_re);
    cnn_mux_506_14_1_1_U604->din14(dense_1_out_14_V_re);
    cnn_mux_506_14_1_1_U604->din15(dense_1_out_15_V_re);
    cnn_mux_506_14_1_1_U604->din16(dense_1_out_16_V_re);
    cnn_mux_506_14_1_1_U604->din17(dense_1_out_17_V_re);
    cnn_mux_506_14_1_1_U604->din18(dense_1_out_18_V_re);
    cnn_mux_506_14_1_1_U604->din19(dense_1_out_19_V_re);
    cnn_mux_506_14_1_1_U604->din20(dense_1_out_20_V_re);
    cnn_mux_506_14_1_1_U604->din21(dense_1_out_21_V_re);
    cnn_mux_506_14_1_1_U604->din22(dense_1_out_22_V_re);
    cnn_mux_506_14_1_1_U604->din23(dense_1_out_23_V_re);
    cnn_mux_506_14_1_1_U604->din24(dense_1_out_24_V_re);
    cnn_mux_506_14_1_1_U604->din25(dense_1_out_25_V_re);
    cnn_mux_506_14_1_1_U604->din26(dense_1_out_26_V_re);
    cnn_mux_506_14_1_1_U604->din27(dense_1_out_27_V_re);
    cnn_mux_506_14_1_1_U604->din28(dense_1_out_28_V_re);
    cnn_mux_506_14_1_1_U604->din29(dense_1_out_29_V_re);
    cnn_mux_506_14_1_1_U604->din30(dense_1_out_30_V_re);
    cnn_mux_506_14_1_1_U604->din31(dense_1_out_31_V_re);
    cnn_mux_506_14_1_1_U604->din32(dense_1_out_32_V_re);
    cnn_mux_506_14_1_1_U604->din33(dense_1_out_33_V_re);
    cnn_mux_506_14_1_1_U604->din34(dense_1_out_34_V_re);
    cnn_mux_506_14_1_1_U604->din35(dense_1_out_35_V_re);
    cnn_mux_506_14_1_1_U604->din36(dense_1_out_36_V_re);
    cnn_mux_506_14_1_1_U604->din37(dense_1_out_37_V_re);
    cnn_mux_506_14_1_1_U604->din38(dense_1_out_38_V_re);
    cnn_mux_506_14_1_1_U604->din39(dense_1_out_39_V_re);
    cnn_mux_506_14_1_1_U604->din40(dense_1_out_40_V_re);
    cnn_mux_506_14_1_1_U604->din41(dense_1_out_41_V_re);
    cnn_mux_506_14_1_1_U604->din42(dense_1_out_42_V_re);
    cnn_mux_506_14_1_1_U604->din43(dense_1_out_43_V_re);
    cnn_mux_506_14_1_1_U604->din44(dense_1_out_44_V_re);
    cnn_mux_506_14_1_1_U604->din45(dense_1_out_45_V_re);
    cnn_mux_506_14_1_1_U604->din46(dense_1_out_46_V_re);
    cnn_mux_506_14_1_1_U604->din47(dense_1_out_47_V_re);
    cnn_mux_506_14_1_1_U604->din48(dense_1_out_48_V_re);
    cnn_mux_506_14_1_1_U604->din49(dense_1_out_49_V_re);
    cnn_mux_506_14_1_1_U604->din50(j_0_reg_542);
    cnn_mux_506_14_1_1_U604->dout(tmp_3_fu_625_p52);
    cnn_mac_muladd_14bgk_U605 = new cnn_mac_muladd_14bgk<1,1,14,9,22,23>("cnn_mac_muladd_14bgk_U605");
    cnn_mac_muladd_14bgk_U605->din0(tmp_3_reg_1319);
    cnn_mac_muladd_14bgk_U605->din1(dense_2_weights_V_q0);
    cnn_mac_muladd_14bgk_U605->din2(lhs_V_3_fu_688_p3);
    cnn_mac_muladd_14bgk_U605->dout(grp_fu_1023_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Range2_all_ones_fu_768_p3);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_add_ln1117_fu_615_p2);
    sensitive << ( zext_ln13_reg_1301 );
    sensitive << ( sub_ln1117_fu_609_p2 );

    SC_METHOD(thread_and_ln781_fu_812_p2);
    sensitive << ( Range2_all_ones_fu_768_p3 );
    sensitive << ( carry_2_fu_754_p2 );

    SC_METHOD(thread_and_ln786_fu_842_p2);
    sensitive << ( p_Result_24_fu_760_p3 );
    sensitive << ( deleted_ones_fu_806_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_553_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_553_p2 );

    SC_METHOD(thread_carry_2_fu_754_p2);
    sensitive << ( p_Result_23_fu_716_p3 );
    sensitive << ( xor_ln416_3_fu_748_p2 );

    SC_METHOD(thread_deleted_ones_fu_806_p2);
    sensitive << ( Range2_all_ones_fu_768_p3 );
    sensitive << ( or_ln416_fu_800_p2 );

    SC_METHOD(thread_dense_2_bias_V_address0);
    sensitive << ( zext_ln14_reg_1295 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_2_bias_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_dense_2_out_V_address0);
    sensitive << ( zext_ln14_reg_1295 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_out_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_out_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_26_fu_1006_p3 );
    sensitive << ( trunc_ln203_fu_1002_p1 );

    SC_METHOD(thread_dense_2_out_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_dense_2_weights_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln1117_fu_620_p1 );

    SC_METHOD(thread_dense_2_weights_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_i_fu_559_p2);
    sensitive << ( i_0_reg_519 );

    SC_METHOD(thread_icmp_ln13_fu_573_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_542 );

    SC_METHOD(thread_icmp_ln9_fu_553_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_519 );

    SC_METHOD(thread_j_fu_579_p2);
    sensitive << ( j_0_reg_542 );

    SC_METHOD(thread_lhs_V_3_fu_688_p3);
    sensitive << ( p_Val2_s_reg_530 );

    SC_METHOD(thread_lhs_V_fu_908_p1);
    sensitive << ( p_Val2_s_reg_530 );

    SC_METHOD(thread_or_ln340_7_fu_866_p2);
    sensitive << ( underflow_fu_860_p2 );
    sensitive << ( overflow_fu_836_p2 );

    SC_METHOD(thread_or_ln340_8_fu_872_p2);
    sensitive << ( xor_ln785_2_fu_830_p2 );
    sensitive << ( and_ln786_fu_842_p2 );

    SC_METHOD(thread_or_ln340_9_fu_878_p2);
    sensitive << ( and_ln781_fu_812_p2 );
    sensitive << ( or_ln340_8_fu_872_p2 );

    SC_METHOD(thread_or_ln340_fu_972_p2);
    sensitive << ( p_Result_26_fu_940_p3 );
    sensitive << ( xor_ln340_fu_966_p2 );

    SC_METHOD(thread_or_ln416_2_fu_794_p2);
    sensitive << ( tmp_30_fu_740_p3 );
    sensitive << ( xor_ln416_4_fu_788_p2 );

    SC_METHOD(thread_or_ln416_fu_800_p2);
    sensitive << ( or_ln416_2_fu_794_p2 );
    sensitive << ( xor_ln779_fu_782_p2 );

    SC_METHOD(thread_or_ln785_fu_824_p2);
    sensitive << ( p_Result_24_fu_760_p3 );
    sensitive << ( xor_ln785_fu_818_p2 );

    SC_METHOD(thread_or_ln786_fu_848_p2);
    sensitive << ( and_ln781_fu_812_p2 );
    sensitive << ( and_ln786_fu_842_p2 );

    SC_METHOD(thread_overflow_fu_836_p2);
    sensitive << ( or_ln785_fu_824_p2 );
    sensitive << ( xor_ln785_2_fu_830_p2 );

    SC_METHOD(thread_p_Result_23_fu_716_p3);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_p_Result_24_fu_760_p3);
    sensitive << ( sum_V_fu_734_p2 );

    SC_METHOD(thread_p_Result_25_fu_926_p3);
    sensitive << ( ret_V_8_fu_920_p2 );

    SC_METHOD(thread_p_Result_26_fu_940_p3);
    sensitive << ( p_Val2_28_fu_934_p2 );

    SC_METHOD(thread_p_Result_s_fu_700_p3);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_p_Val2_28_fu_934_p2);
    sensitive << ( p_Val2_s_reg_530 );
    sensitive << ( sext_ln1265_fu_912_p1 );

    SC_METHOD(thread_p_Val2_30_fu_707_p4);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_ret_V_8_fu_920_p2);
    sensitive << ( rhs_V_fu_916_p1 );
    sensitive << ( lhs_V_fu_908_p1 );

    SC_METHOD(thread_rhs_V_fu_916_p0);
    sensitive << ( dense_2_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_rhs_V_fu_916_p1);
    sensitive << ( rhs_V_fu_916_p0 );

    SC_METHOD(thread_select_ln340_4_fu_884_p3);
    sensitive << ( sum_V_fu_734_p2 );
    sensitive << ( or_ln340_7_fu_866_p2 );

    SC_METHOD(thread_select_ln340_8_fu_994_p3);
    sensitive << ( or_ln340_fu_972_p2 );
    sensitive << ( select_ln340_fu_978_p3 );
    sensitive << ( select_ln388_fu_986_p3 );

    SC_METHOD(thread_select_ln340_9_fu_900_p3);
    sensitive << ( or_ln340_9_fu_878_p2 );
    sensitive << ( select_ln340_4_fu_884_p3 );
    sensitive << ( select_ln388_4_fu_892_p3 );

    SC_METHOD(thread_select_ln340_fu_978_p3);
    sensitive << ( p_Val2_28_fu_934_p2 );
    sensitive << ( xor_ln340_6_fu_960_p2 );

    SC_METHOD(thread_select_ln388_4_fu_892_p3);
    sensitive << ( sum_V_fu_734_p2 );
    sensitive << ( underflow_fu_860_p2 );

    SC_METHOD(thread_select_ln388_fu_986_p3);
    sensitive << ( p_Val2_28_fu_934_p2 );
    sensitive << ( underflow_4_fu_954_p2 );

    SC_METHOD(thread_sext_ln1117_fu_620_p1);
    sensitive << ( add_ln1117_fu_615_p2 );

    SC_METHOD(thread_sext_ln1265_fu_912_p0);
    sensitive << ( dense_2_bias_V_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_sext_ln1265_fu_912_p1);
    sensitive << ( sext_ln1265_fu_912_p0 );

    SC_METHOD(thread_sub_ln1117_fu_609_p2);
    sensitive << ( zext_ln1117_fu_593_p1 );
    sensitive << ( zext_ln1117_1_fu_605_p1 );

    SC_METHOD(thread_sum_V_fu_734_p2);
    sensitive << ( p_Val2_30_fu_707_p4 );
    sensitive << ( zext_ln415_fu_730_p1 );

    SC_METHOD(thread_tmp_26_fu_1006_p3);
    sensitive << ( select_ln340_8_fu_994_p3 );

    SC_METHOD(thread_tmp_29_fu_723_p3);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_tmp_30_fu_740_p3);
    sensitive << ( sum_V_fu_734_p2 );

    SC_METHOD(thread_tmp_33_fu_775_p3);
    sensitive << ( grp_fu_1023_p3 );

    SC_METHOD(thread_tmp_4_fu_597_p3);
    sensitive << ( j_0_reg_542 );

    SC_METHOD(thread_tmp_s_fu_585_p3);
    sensitive << ( j_0_reg_542 );

    SC_METHOD(thread_trunc_ln203_fu_1002_p1);
    sensitive << ( select_ln340_8_fu_994_p3 );

    SC_METHOD(thread_underflow_4_fu_954_p2);
    sensitive << ( p_Result_25_fu_926_p3 );
    sensitive << ( xor_ln786_fu_948_p2 );

    SC_METHOD(thread_underflow_fu_860_p2);
    sensitive << ( p_Result_s_fu_700_p3 );
    sensitive << ( xor_ln786_4_fu_854_p2 );

    SC_METHOD(thread_xor_ln340_6_fu_960_p2);
    sensitive << ( p_Result_26_fu_940_p3 );
    sensitive << ( p_Result_25_fu_926_p3 );

    SC_METHOD(thread_xor_ln340_fu_966_p2);
    sensitive << ( p_Result_25_fu_926_p3 );

    SC_METHOD(thread_xor_ln416_3_fu_748_p2);
    sensitive << ( tmp_30_fu_740_p3 );

    SC_METHOD(thread_xor_ln416_4_fu_788_p2);
    sensitive << ( p_Result_23_fu_716_p3 );

    SC_METHOD(thread_xor_ln779_fu_782_p2);
    sensitive << ( tmp_33_fu_775_p3 );

    SC_METHOD(thread_xor_ln785_2_fu_830_p2);
    sensitive << ( p_Result_s_fu_700_p3 );

    SC_METHOD(thread_xor_ln785_fu_818_p2);
    sensitive << ( Range2_all_ones_fu_768_p3 );
    sensitive << ( carry_2_fu_754_p2 );

    SC_METHOD(thread_xor_ln786_4_fu_854_p2);
    sensitive << ( or_ln786_fu_848_p2 );

    SC_METHOD(thread_xor_ln786_fu_948_p2);
    sensitive << ( p_Result_26_fu_940_p3 );

    SC_METHOD(thread_zext_ln1117_1_fu_605_p1);
    sensitive << ( tmp_4_fu_597_p3 );

    SC_METHOD(thread_zext_ln1117_fu_593_p1);
    sensitive << ( tmp_s_fu_585_p3 );

    SC_METHOD(thread_zext_ln13_fu_569_p1);
    sensitive << ( i_0_reg_519 );

    SC_METHOD(thread_zext_ln14_fu_565_p1);
    sensitive << ( i_0_reg_519 );

    SC_METHOD(thread_zext_ln415_fu_730_p1);
    sensitive << ( tmp_29_fu_723_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln9_fu_553_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_573_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dense_1_out_0_V_rea, "(port)dense_1_out_0_V_rea");
    sc_trace(mVcdFile, dense_1_out_1_V_rea, "(port)dense_1_out_1_V_rea");
    sc_trace(mVcdFile, dense_1_out_2_V_rea, "(port)dense_1_out_2_V_rea");
    sc_trace(mVcdFile, dense_1_out_3_V_rea, "(port)dense_1_out_3_V_rea");
    sc_trace(mVcdFile, dense_1_out_4_V_rea, "(port)dense_1_out_4_V_rea");
    sc_trace(mVcdFile, dense_1_out_5_V_rea, "(port)dense_1_out_5_V_rea");
    sc_trace(mVcdFile, dense_1_out_6_V_rea, "(port)dense_1_out_6_V_rea");
    sc_trace(mVcdFile, dense_1_out_7_V_rea, "(port)dense_1_out_7_V_rea");
    sc_trace(mVcdFile, dense_1_out_8_V_rea, "(port)dense_1_out_8_V_rea");
    sc_trace(mVcdFile, dense_1_out_9_V_rea, "(port)dense_1_out_9_V_rea");
    sc_trace(mVcdFile, dense_1_out_10_V_re, "(port)dense_1_out_10_V_re");
    sc_trace(mVcdFile, dense_1_out_11_V_re, "(port)dense_1_out_11_V_re");
    sc_trace(mVcdFile, dense_1_out_12_V_re, "(port)dense_1_out_12_V_re");
    sc_trace(mVcdFile, dense_1_out_13_V_re, "(port)dense_1_out_13_V_re");
    sc_trace(mVcdFile, dense_1_out_14_V_re, "(port)dense_1_out_14_V_re");
    sc_trace(mVcdFile, dense_1_out_15_V_re, "(port)dense_1_out_15_V_re");
    sc_trace(mVcdFile, dense_1_out_16_V_re, "(port)dense_1_out_16_V_re");
    sc_trace(mVcdFile, dense_1_out_17_V_re, "(port)dense_1_out_17_V_re");
    sc_trace(mVcdFile, dense_1_out_18_V_re, "(port)dense_1_out_18_V_re");
    sc_trace(mVcdFile, dense_1_out_19_V_re, "(port)dense_1_out_19_V_re");
    sc_trace(mVcdFile, dense_1_out_20_V_re, "(port)dense_1_out_20_V_re");
    sc_trace(mVcdFile, dense_1_out_21_V_re, "(port)dense_1_out_21_V_re");
    sc_trace(mVcdFile, dense_1_out_22_V_re, "(port)dense_1_out_22_V_re");
    sc_trace(mVcdFile, dense_1_out_23_V_re, "(port)dense_1_out_23_V_re");
    sc_trace(mVcdFile, dense_1_out_24_V_re, "(port)dense_1_out_24_V_re");
    sc_trace(mVcdFile, dense_1_out_25_V_re, "(port)dense_1_out_25_V_re");
    sc_trace(mVcdFile, dense_1_out_26_V_re, "(port)dense_1_out_26_V_re");
    sc_trace(mVcdFile, dense_1_out_27_V_re, "(port)dense_1_out_27_V_re");
    sc_trace(mVcdFile, dense_1_out_28_V_re, "(port)dense_1_out_28_V_re");
    sc_trace(mVcdFile, dense_1_out_29_V_re, "(port)dense_1_out_29_V_re");
    sc_trace(mVcdFile, dense_1_out_30_V_re, "(port)dense_1_out_30_V_re");
    sc_trace(mVcdFile, dense_1_out_31_V_re, "(port)dense_1_out_31_V_re");
    sc_trace(mVcdFile, dense_1_out_32_V_re, "(port)dense_1_out_32_V_re");
    sc_trace(mVcdFile, dense_1_out_33_V_re, "(port)dense_1_out_33_V_re");
    sc_trace(mVcdFile, dense_1_out_34_V_re, "(port)dense_1_out_34_V_re");
    sc_trace(mVcdFile, dense_1_out_35_V_re, "(port)dense_1_out_35_V_re");
    sc_trace(mVcdFile, dense_1_out_36_V_re, "(port)dense_1_out_36_V_re");
    sc_trace(mVcdFile, dense_1_out_37_V_re, "(port)dense_1_out_37_V_re");
    sc_trace(mVcdFile, dense_1_out_38_V_re, "(port)dense_1_out_38_V_re");
    sc_trace(mVcdFile, dense_1_out_39_V_re, "(port)dense_1_out_39_V_re");
    sc_trace(mVcdFile, dense_1_out_40_V_re, "(port)dense_1_out_40_V_re");
    sc_trace(mVcdFile, dense_1_out_41_V_re, "(port)dense_1_out_41_V_re");
    sc_trace(mVcdFile, dense_1_out_42_V_re, "(port)dense_1_out_42_V_re");
    sc_trace(mVcdFile, dense_1_out_43_V_re, "(port)dense_1_out_43_V_re");
    sc_trace(mVcdFile, dense_1_out_44_V_re, "(port)dense_1_out_44_V_re");
    sc_trace(mVcdFile, dense_1_out_45_V_re, "(port)dense_1_out_45_V_re");
    sc_trace(mVcdFile, dense_1_out_46_V_re, "(port)dense_1_out_46_V_re");
    sc_trace(mVcdFile, dense_1_out_47_V_re, "(port)dense_1_out_47_V_re");
    sc_trace(mVcdFile, dense_1_out_48_V_re, "(port)dense_1_out_48_V_re");
    sc_trace(mVcdFile, dense_1_out_49_V_re, "(port)dense_1_out_49_V_re");
    sc_trace(mVcdFile, dense_2_out_V_address0, "(port)dense_2_out_V_address0");
    sc_trace(mVcdFile, dense_2_out_V_ce0, "(port)dense_2_out_V_ce0");
    sc_trace(mVcdFile, dense_2_out_V_we0, "(port)dense_2_out_V_we0");
    sc_trace(mVcdFile, dense_2_out_V_d0, "(port)dense_2_out_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_2_weights_V_address0, "dense_2_weights_V_address0");
    sc_trace(mVcdFile, dense_2_weights_V_ce0, "dense_2_weights_V_ce0");
    sc_trace(mVcdFile, dense_2_weights_V_q0, "dense_2_weights_V_q0");
    sc_trace(mVcdFile, dense_2_bias_V_address0, "dense_2_bias_V_address0");
    sc_trace(mVcdFile, dense_2_bias_V_ce0, "dense_2_bias_V_ce0");
    sc_trace(mVcdFile, dense_2_bias_V_q0, "dense_2_bias_V_q0");
    sc_trace(mVcdFile, i_fu_559_p2, "i_fu_559_p2");
    sc_trace(mVcdFile, i_reg_1290, "i_reg_1290");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln14_fu_565_p1, "zext_ln14_fu_565_p1");
    sc_trace(mVcdFile, zext_ln14_reg_1295, "zext_ln14_reg_1295");
    sc_trace(mVcdFile, icmp_ln9_fu_553_p2, "icmp_ln9_fu_553_p2");
    sc_trace(mVcdFile, zext_ln13_fu_569_p1, "zext_ln13_fu_569_p1");
    sc_trace(mVcdFile, zext_ln13_reg_1301, "zext_ln13_reg_1301");
    sc_trace(mVcdFile, j_fu_579_p2, "j_fu_579_p2");
    sc_trace(mVcdFile, j_reg_1309, "j_reg_1309");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln13_fu_573_p2, "icmp_ln13_fu_573_p2");
    sc_trace(mVcdFile, tmp_3_fu_625_p52, "tmp_3_fu_625_p52");
    sc_trace(mVcdFile, tmp_3_reg_1319, "tmp_3_reg_1319");
    sc_trace(mVcdFile, select_ln340_9_fu_900_p3, "select_ln340_9_fu_900_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_0_reg_519, "i_0_reg_519");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, p_Val2_s_reg_530, "p_Val2_s_reg_530");
    sc_trace(mVcdFile, j_0_reg_542, "j_0_reg_542");
    sc_trace(mVcdFile, sext_ln1117_fu_620_p1, "sext_ln1117_fu_620_p1");
    sc_trace(mVcdFile, tmp_s_fu_585_p3, "tmp_s_fu_585_p3");
    sc_trace(mVcdFile, tmp_4_fu_597_p3, "tmp_4_fu_597_p3");
    sc_trace(mVcdFile, zext_ln1117_fu_593_p1, "zext_ln1117_fu_593_p1");
    sc_trace(mVcdFile, zext_ln1117_1_fu_605_p1, "zext_ln1117_1_fu_605_p1");
    sc_trace(mVcdFile, sub_ln1117_fu_609_p2, "sub_ln1117_fu_609_p2");
    sc_trace(mVcdFile, add_ln1117_fu_615_p2, "add_ln1117_fu_615_p2");
    sc_trace(mVcdFile, lhs_V_3_fu_688_p3, "lhs_V_3_fu_688_p3");
    sc_trace(mVcdFile, grp_fu_1023_p3, "grp_fu_1023_p3");
    sc_trace(mVcdFile, tmp_29_fu_723_p3, "tmp_29_fu_723_p3");
    sc_trace(mVcdFile, p_Val2_30_fu_707_p4, "p_Val2_30_fu_707_p4");
    sc_trace(mVcdFile, zext_ln415_fu_730_p1, "zext_ln415_fu_730_p1");
    sc_trace(mVcdFile, sum_V_fu_734_p2, "sum_V_fu_734_p2");
    sc_trace(mVcdFile, tmp_30_fu_740_p3, "tmp_30_fu_740_p3");
    sc_trace(mVcdFile, p_Result_23_fu_716_p3, "p_Result_23_fu_716_p3");
    sc_trace(mVcdFile, xor_ln416_3_fu_748_p2, "xor_ln416_3_fu_748_p2");
    sc_trace(mVcdFile, tmp_33_fu_775_p3, "tmp_33_fu_775_p3");
    sc_trace(mVcdFile, xor_ln416_4_fu_788_p2, "xor_ln416_4_fu_788_p2");
    sc_trace(mVcdFile, or_ln416_2_fu_794_p2, "or_ln416_2_fu_794_p2");
    sc_trace(mVcdFile, xor_ln779_fu_782_p2, "xor_ln779_fu_782_p2");
    sc_trace(mVcdFile, Range2_all_ones_fu_768_p3, "Range2_all_ones_fu_768_p3");
    sc_trace(mVcdFile, or_ln416_fu_800_p2, "or_ln416_fu_800_p2");
    sc_trace(mVcdFile, carry_2_fu_754_p2, "carry_2_fu_754_p2");
    sc_trace(mVcdFile, p_Result_24_fu_760_p3, "p_Result_24_fu_760_p3");
    sc_trace(mVcdFile, xor_ln785_fu_818_p2, "xor_ln785_fu_818_p2");
    sc_trace(mVcdFile, p_Result_s_fu_700_p3, "p_Result_s_fu_700_p3");
    sc_trace(mVcdFile, or_ln785_fu_824_p2, "or_ln785_fu_824_p2");
    sc_trace(mVcdFile, xor_ln785_2_fu_830_p2, "xor_ln785_2_fu_830_p2");
    sc_trace(mVcdFile, deleted_ones_fu_806_p2, "deleted_ones_fu_806_p2");
    sc_trace(mVcdFile, and_ln781_fu_812_p2, "and_ln781_fu_812_p2");
    sc_trace(mVcdFile, and_ln786_fu_842_p2, "and_ln786_fu_842_p2");
    sc_trace(mVcdFile, or_ln786_fu_848_p2, "or_ln786_fu_848_p2");
    sc_trace(mVcdFile, xor_ln786_4_fu_854_p2, "xor_ln786_4_fu_854_p2");
    sc_trace(mVcdFile, underflow_fu_860_p2, "underflow_fu_860_p2");
    sc_trace(mVcdFile, overflow_fu_836_p2, "overflow_fu_836_p2");
    sc_trace(mVcdFile, or_ln340_8_fu_872_p2, "or_ln340_8_fu_872_p2");
    sc_trace(mVcdFile, or_ln340_7_fu_866_p2, "or_ln340_7_fu_866_p2");
    sc_trace(mVcdFile, or_ln340_9_fu_878_p2, "or_ln340_9_fu_878_p2");
    sc_trace(mVcdFile, select_ln340_4_fu_884_p3, "select_ln340_4_fu_884_p3");
    sc_trace(mVcdFile, select_ln388_4_fu_892_p3, "select_ln388_4_fu_892_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_912_p0, "sext_ln1265_fu_912_p0");
    sc_trace(mVcdFile, rhs_V_fu_916_p0, "rhs_V_fu_916_p0");
    sc_trace(mVcdFile, rhs_V_fu_916_p1, "rhs_V_fu_916_p1");
    sc_trace(mVcdFile, lhs_V_fu_908_p1, "lhs_V_fu_908_p1");
    sc_trace(mVcdFile, ret_V_8_fu_920_p2, "ret_V_8_fu_920_p2");
    sc_trace(mVcdFile, sext_ln1265_fu_912_p1, "sext_ln1265_fu_912_p1");
    sc_trace(mVcdFile, p_Val2_28_fu_934_p2, "p_Val2_28_fu_934_p2");
    sc_trace(mVcdFile, p_Result_26_fu_940_p3, "p_Result_26_fu_940_p3");
    sc_trace(mVcdFile, p_Result_25_fu_926_p3, "p_Result_25_fu_926_p3");
    sc_trace(mVcdFile, xor_ln786_fu_948_p2, "xor_ln786_fu_948_p2");
    sc_trace(mVcdFile, xor_ln340_fu_966_p2, "xor_ln340_fu_966_p2");
    sc_trace(mVcdFile, xor_ln340_6_fu_960_p2, "xor_ln340_6_fu_960_p2");
    sc_trace(mVcdFile, underflow_4_fu_954_p2, "underflow_4_fu_954_p2");
    sc_trace(mVcdFile, or_ln340_fu_972_p2, "or_ln340_fu_972_p2");
    sc_trace(mVcdFile, select_ln340_fu_978_p3, "select_ln340_fu_978_p3");
    sc_trace(mVcdFile, select_ln388_fu_986_p3, "select_ln388_fu_986_p3");
    sc_trace(mVcdFile, select_ln340_8_fu_994_p3, "select_ln340_8_fu_994_p3");
    sc_trace(mVcdFile, tmp_26_fu_1006_p3, "tmp_26_fu_1006_p3");
    sc_trace(mVcdFile, trunc_ln203_fu_1002_p1, "trunc_ln203_fu_1002_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense_2::~dense_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_2_weights_V_U;
    delete dense_2_bias_V_U;
    delete cnn_mux_506_14_1_1_U604;
    delete cnn_mac_muladd_14bgk_U605;
}

void dense_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_reg_519 = i_reg_1290.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_519 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_542 = j_reg_1309.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_0))) {
        j_0_reg_542 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_s_reg_530 = select_ln340_9_fu_900_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_0))) {
        p_Val2_s_reg_530 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_1290 = i_fu_559_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_1309 = j_fu_579_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_573_p2.read()))) {
        tmp_3_reg_1319 = tmp_3_fu_625_p52.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_0))) {
        zext_ln13_reg_1301 = zext_ln13_fu_569_p1.read();
        zext_ln14_reg_1295 = zext_ln14_fu_565_p1.read();
    }
}

void dense_2::thread_Range2_all_ones_fu_768_p3() {
    Range2_all_ones_fu_768_p3 = grp_fu_1023_p3.read().range(22, 22);
}

void dense_2::thread_add_ln1117_fu_615_p2() {
    add_ln1117_fu_615_p2 = (!zext_ln13_reg_1301.read().is_01() || !sub_ln1117_fu_609_p2.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln13_reg_1301.read()) + sc_biguint<12>(sub_ln1117_fu_609_p2.read()));
}

void dense_2::thread_and_ln781_fu_812_p2() {
    and_ln781_fu_812_p2 = (carry_2_fu_754_p2.read() & Range2_all_ones_fu_768_p3.read());
}

void dense_2::thread_and_ln786_fu_842_p2() {
    and_ln786_fu_842_p2 = (p_Result_24_fu_760_p3.read() & deleted_ones_fu_806_p2.read());
}

void dense_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense_2::thread_carry_2_fu_754_p2() {
    carry_2_fu_754_p2 = (p_Result_23_fu_716_p3.read() & xor_ln416_3_fu_748_p2.read());
}

void dense_2::thread_deleted_ones_fu_806_p2() {
    deleted_ones_fu_806_p2 = (Range2_all_ones_fu_768_p3.read() & or_ln416_fu_800_p2.read());
}

void dense_2::thread_dense_2_bias_V_address0() {
    dense_2_bias_V_address0 =  (sc_lv<5>) (zext_ln14_reg_1295.read());
}

void dense_2::thread_dense_2_bias_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_2_bias_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_bias_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_out_V_address0() {
    dense_2_out_V_address0 =  (sc_lv<5>) (zext_ln14_reg_1295.read());
}

void dense_2::thread_dense_2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_2_out_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_out_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_out_V_d0() {
    dense_2_out_V_d0 = (!tmp_26_fu_1006_p3.read()[0].is_01())? sc_lv<13>(): ((tmp_26_fu_1006_p3.read()[0].to_bool())? ap_const_lv13_0: trunc_ln203_fu_1002_p1.read());
}

void dense_2::thread_dense_2_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        dense_2_out_V_we0 = ap_const_logic_1;
    } else {
        dense_2_out_V_we0 = ap_const_logic_0;
    }
}

void dense_2::thread_dense_2_weights_V_address0() {
    dense_2_weights_V_address0 =  (sc_lv<11>) (sext_ln1117_fu_620_p1.read());
}

void dense_2::thread_dense_2_weights_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_2_weights_V_ce0 = ap_const_logic_1;
    } else {
        dense_2_weights_V_ce0 = ap_const_logic_0;
    }
}

void dense_2::thread_i_fu_559_p2() {
    i_fu_559_p2 = (!i_0_reg_519.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_519.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dense_2::thread_icmp_ln13_fu_573_p2() {
    icmp_ln13_fu_573_p2 = (!j_0_reg_542.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_542.read() == ap_const_lv6_32);
}

void dense_2::thread_icmp_ln9_fu_553_p2() {
    icmp_ln9_fu_553_p2 = (!i_0_reg_519.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_519.read() == ap_const_lv5_1E);
}

void dense_2::thread_j_fu_579_p2() {
    j_fu_579_p2 = (!j_0_reg_542.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_reg_542.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void dense_2::thread_lhs_V_3_fu_688_p3() {
    lhs_V_3_fu_688_p3 = esl_concat<14,8>(p_Val2_s_reg_530.read(), ap_const_lv8_0);
}

void dense_2::thread_lhs_V_fu_908_p1() {
    lhs_V_fu_908_p1 = esl_sext<15,14>(p_Val2_s_reg_530.read());
}

void dense_2::thread_or_ln340_7_fu_866_p2() {
    or_ln340_7_fu_866_p2 = (underflow_fu_860_p2.read() | overflow_fu_836_p2.read());
}

void dense_2::thread_or_ln340_8_fu_872_p2() {
    or_ln340_8_fu_872_p2 = (and_ln786_fu_842_p2.read() | xor_ln785_2_fu_830_p2.read());
}

void dense_2::thread_or_ln340_9_fu_878_p2() {
    or_ln340_9_fu_878_p2 = (or_ln340_8_fu_872_p2.read() | and_ln781_fu_812_p2.read());
}

void dense_2::thread_or_ln340_fu_972_p2() {
    or_ln340_fu_972_p2 = (p_Result_26_fu_940_p3.read() | xor_ln340_fu_966_p2.read());
}

void dense_2::thread_or_ln416_2_fu_794_p2() {
    or_ln416_2_fu_794_p2 = (tmp_30_fu_740_p3.read() | xor_ln416_4_fu_788_p2.read());
}

void dense_2::thread_or_ln416_fu_800_p2() {
    or_ln416_fu_800_p2 = (or_ln416_2_fu_794_p2.read() | xor_ln779_fu_782_p2.read());
}

void dense_2::thread_or_ln785_fu_824_p2() {
    or_ln785_fu_824_p2 = (p_Result_24_fu_760_p3.read() | xor_ln785_fu_818_p2.read());
}

void dense_2::thread_or_ln786_fu_848_p2() {
    or_ln786_fu_848_p2 = (and_ln781_fu_812_p2.read() | and_ln786_fu_842_p2.read());
}

void dense_2::thread_overflow_fu_836_p2() {
    overflow_fu_836_p2 = (or_ln785_fu_824_p2.read() & xor_ln785_2_fu_830_p2.read());
}

void dense_2::thread_p_Result_23_fu_716_p3() {
    p_Result_23_fu_716_p3 = grp_fu_1023_p3.read().range(21, 21);
}

void dense_2::thread_p_Result_24_fu_760_p3() {
    p_Result_24_fu_760_p3 = sum_V_fu_734_p2.read().range(13, 13);
}

void dense_2::thread_p_Result_25_fu_926_p3() {
    p_Result_25_fu_926_p3 = ret_V_8_fu_920_p2.read().range(14, 14);
}

void dense_2::thread_p_Result_26_fu_940_p3() {
    p_Result_26_fu_940_p3 = p_Val2_28_fu_934_p2.read().range(13, 13);
}

void dense_2::thread_p_Result_s_fu_700_p3() {
    p_Result_s_fu_700_p3 = grp_fu_1023_p3.read().range(22, 22);
}

void dense_2::thread_p_Val2_28_fu_934_p2() {
    p_Val2_28_fu_934_p2 = (!sext_ln1265_fu_912_p1.read().is_01() || !p_Val2_s_reg_530.read().is_01())? sc_lv<14>(): (sc_bigint<14>(sext_ln1265_fu_912_p1.read()) + sc_bigint<14>(p_Val2_s_reg_530.read()));
}

void dense_2::thread_p_Val2_30_fu_707_p4() {
    p_Val2_30_fu_707_p4 = grp_fu_1023_p3.read().range(21, 8);
}

void dense_2::thread_ret_V_8_fu_920_p2() {
    ret_V_8_fu_920_p2 = (!rhs_V_fu_916_p1.read().is_01() || !lhs_V_fu_908_p1.read().is_01())? sc_lv<15>(): (sc_bigint<15>(rhs_V_fu_916_p1.read()) + sc_bigint<15>(lhs_V_fu_908_p1.read()));
}

void dense_2::thread_rhs_V_fu_916_p0() {
    rhs_V_fu_916_p0 = dense_2_bias_V_q0.read();
}

void dense_2::thread_rhs_V_fu_916_p1() {
    rhs_V_fu_916_p1 = esl_sext<15,9>(rhs_V_fu_916_p0.read());
}

void dense_2::thread_select_ln340_4_fu_884_p3() {
    select_ln340_4_fu_884_p3 = (!or_ln340_7_fu_866_p2.read()[0].is_01())? sc_lv<14>(): ((or_ln340_7_fu_866_p2.read()[0].to_bool())? ap_const_lv14_1FFF: sum_V_fu_734_p2.read());
}

void dense_2::thread_select_ln340_8_fu_994_p3() {
    select_ln340_8_fu_994_p3 = (!or_ln340_fu_972_p2.read()[0].is_01())? sc_lv<14>(): ((or_ln340_fu_972_p2.read()[0].to_bool())? select_ln340_fu_978_p3.read(): select_ln388_fu_986_p3.read());
}

void dense_2::thread_select_ln340_9_fu_900_p3() {
    select_ln340_9_fu_900_p3 = (!or_ln340_9_fu_878_p2.read()[0].is_01())? sc_lv<14>(): ((or_ln340_9_fu_878_p2.read()[0].to_bool())? select_ln340_4_fu_884_p3.read(): select_ln388_4_fu_892_p3.read());
}

void dense_2::thread_select_ln340_fu_978_p3() {
    select_ln340_fu_978_p3 = (!xor_ln340_6_fu_960_p2.read()[0].is_01())? sc_lv<14>(): ((xor_ln340_6_fu_960_p2.read()[0].to_bool())? ap_const_lv14_1FFF: p_Val2_28_fu_934_p2.read());
}

void dense_2::thread_select_ln388_4_fu_892_p3() {
    select_ln388_4_fu_892_p3 = (!underflow_fu_860_p2.read()[0].is_01())? sc_lv<14>(): ((underflow_fu_860_p2.read()[0].to_bool())? ap_const_lv14_2000: sum_V_fu_734_p2.read());
}

void dense_2::thread_select_ln388_fu_986_p3() {
    select_ln388_fu_986_p3 = (!underflow_4_fu_954_p2.read()[0].is_01())? sc_lv<14>(): ((underflow_4_fu_954_p2.read()[0].to_bool())? ap_const_lv14_2000: p_Val2_28_fu_934_p2.read());
}

void dense_2::thread_sext_ln1117_fu_620_p1() {
    sext_ln1117_fu_620_p1 = esl_sext<64,12>(add_ln1117_fu_615_p2.read());
}

void dense_2::thread_sext_ln1265_fu_912_p0() {
    sext_ln1265_fu_912_p0 = dense_2_bias_V_q0.read();
}

void dense_2::thread_sext_ln1265_fu_912_p1() {
    sext_ln1265_fu_912_p1 = esl_sext<14,9>(sext_ln1265_fu_912_p0.read());
}

void dense_2::thread_sub_ln1117_fu_609_p2() {
    sub_ln1117_fu_609_p2 = (!zext_ln1117_fu_593_p1.read().is_01() || !zext_ln1117_1_fu_605_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln1117_fu_593_p1.read()) - sc_biguint<12>(zext_ln1117_1_fu_605_p1.read()));
}

void dense_2::thread_sum_V_fu_734_p2() {
    sum_V_fu_734_p2 = (!p_Val2_30_fu_707_p4.read().is_01() || !zext_ln415_fu_730_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(p_Val2_30_fu_707_p4.read()) + sc_biguint<14>(zext_ln415_fu_730_p1.read()));
}

void dense_2::thread_tmp_26_fu_1006_p3() {
    tmp_26_fu_1006_p3 = select_ln340_8_fu_994_p3.read().range(13, 13);
}

void dense_2::thread_tmp_29_fu_723_p3() {
    tmp_29_fu_723_p3 = grp_fu_1023_p3.read().range(7, 7);
}

void dense_2::thread_tmp_30_fu_740_p3() {
    tmp_30_fu_740_p3 = sum_V_fu_734_p2.read().range(13, 13);
}

void dense_2::thread_tmp_33_fu_775_p3() {
    tmp_33_fu_775_p3 = grp_fu_1023_p3.read().range(22, 22);
}

void dense_2::thread_tmp_4_fu_597_p3() {
    tmp_4_fu_597_p3 = esl_concat<6,1>(j_0_reg_542.read(), ap_const_lv1_0);
}

void dense_2::thread_tmp_s_fu_585_p3() {
    tmp_s_fu_585_p3 = esl_concat<6,5>(j_0_reg_542.read(), ap_const_lv5_0);
}

void dense_2::thread_trunc_ln203_fu_1002_p1() {
    trunc_ln203_fu_1002_p1 = select_ln340_8_fu_994_p3.read().range(13-1, 0);
}

void dense_2::thread_underflow_4_fu_954_p2() {
    underflow_4_fu_954_p2 = (p_Result_25_fu_926_p3.read() & xor_ln786_fu_948_p2.read());
}

void dense_2::thread_underflow_fu_860_p2() {
    underflow_fu_860_p2 = (p_Result_s_fu_700_p3.read() & xor_ln786_4_fu_854_p2.read());
}

void dense_2::thread_xor_ln340_6_fu_960_p2() {
    xor_ln340_6_fu_960_p2 = (p_Result_25_fu_926_p3.read() ^ p_Result_26_fu_940_p3.read());
}

void dense_2::thread_xor_ln340_fu_966_p2() {
    xor_ln340_fu_966_p2 = (p_Result_25_fu_926_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln416_3_fu_748_p2() {
    xor_ln416_3_fu_748_p2 = (tmp_30_fu_740_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln416_4_fu_788_p2() {
    xor_ln416_4_fu_788_p2 = (p_Result_23_fu_716_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln779_fu_782_p2() {
    xor_ln779_fu_782_p2 = (tmp_33_fu_775_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln785_2_fu_830_p2() {
    xor_ln785_2_fu_830_p2 = (p_Result_s_fu_700_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln785_fu_818_p2() {
    xor_ln785_fu_818_p2 = (Range2_all_ones_fu_768_p3.read() ^ carry_2_fu_754_p2.read());
}

void dense_2::thread_xor_ln786_4_fu_854_p2() {
    xor_ln786_4_fu_854_p2 = (or_ln786_fu_848_p2.read() ^ ap_const_lv1_1);
}

void dense_2::thread_xor_ln786_fu_948_p2() {
    xor_ln786_fu_948_p2 = (p_Result_26_fu_940_p3.read() ^ ap_const_lv1_1);
}

void dense_2::thread_zext_ln1117_1_fu_605_p1() {
    zext_ln1117_1_fu_605_p1 = esl_zext<12,7>(tmp_4_fu_597_p3.read());
}

void dense_2::thread_zext_ln1117_fu_593_p1() {
    zext_ln1117_fu_593_p1 = esl_zext<12,11>(tmp_s_fu_585_p3.read());
}

void dense_2::thread_zext_ln13_fu_569_p1() {
    zext_ln13_fu_569_p1 = esl_zext<12,5>(i_0_reg_519.read());
}

void dense_2::thread_zext_ln14_fu_565_p1() {
    zext_ln14_fu_565_p1 = esl_zext<64,5>(i_0_reg_519.read());
}

void dense_2::thread_zext_ln415_fu_730_p1() {
    zext_ln415_fu_730_p1 = esl_zext<14,1>(tmp_29_fu_723_p3.read());
}

void dense_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_553_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_573_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

