// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_1_out_0_V_rea,
        dense_1_out_1_V_rea,
        dense_1_out_2_V_rea,
        dense_1_out_3_V_rea,
        dense_1_out_4_V_rea,
        dense_1_out_5_V_rea,
        dense_1_out_6_V_rea,
        dense_1_out_7_V_rea,
        dense_1_out_8_V_rea,
        dense_1_out_9_V_rea,
        dense_1_out_10_V_re,
        dense_1_out_11_V_re,
        dense_1_out_12_V_re,
        dense_1_out_13_V_re,
        dense_1_out_14_V_re,
        dense_1_out_15_V_re,
        dense_1_out_16_V_re,
        dense_1_out_17_V_re,
        dense_1_out_18_V_re,
        dense_1_out_19_V_re,
        dense_1_out_20_V_re,
        dense_1_out_21_V_re,
        dense_1_out_22_V_re,
        dense_1_out_23_V_re,
        dense_1_out_24_V_re,
        dense_1_out_25_V_re,
        dense_1_out_26_V_re,
        dense_1_out_27_V_re,
        dense_1_out_28_V_re,
        dense_1_out_29_V_re,
        dense_1_out_30_V_re,
        dense_1_out_31_V_re,
        dense_1_out_32_V_re,
        dense_1_out_33_V_re,
        dense_1_out_34_V_re,
        dense_1_out_35_V_re,
        dense_1_out_36_V_re,
        dense_1_out_37_V_re,
        dense_1_out_38_V_re,
        dense_1_out_39_V_re,
        dense_1_out_40_V_re,
        dense_1_out_41_V_re,
        dense_1_out_42_V_re,
        dense_1_out_43_V_re,
        dense_1_out_44_V_re,
        dense_1_out_45_V_re,
        dense_1_out_46_V_re,
        dense_1_out_47_V_re,
        dense_1_out_48_V_re,
        dense_1_out_49_V_re,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_we0,
        dense_2_out_V_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] dense_1_out_0_V_rea;
input  [13:0] dense_1_out_1_V_rea;
input  [13:0] dense_1_out_2_V_rea;
input  [13:0] dense_1_out_3_V_rea;
input  [13:0] dense_1_out_4_V_rea;
input  [13:0] dense_1_out_5_V_rea;
input  [13:0] dense_1_out_6_V_rea;
input  [13:0] dense_1_out_7_V_rea;
input  [13:0] dense_1_out_8_V_rea;
input  [13:0] dense_1_out_9_V_rea;
input  [13:0] dense_1_out_10_V_re;
input  [13:0] dense_1_out_11_V_re;
input  [13:0] dense_1_out_12_V_re;
input  [13:0] dense_1_out_13_V_re;
input  [13:0] dense_1_out_14_V_re;
input  [13:0] dense_1_out_15_V_re;
input  [13:0] dense_1_out_16_V_re;
input  [13:0] dense_1_out_17_V_re;
input  [13:0] dense_1_out_18_V_re;
input  [13:0] dense_1_out_19_V_re;
input  [13:0] dense_1_out_20_V_re;
input  [13:0] dense_1_out_21_V_re;
input  [13:0] dense_1_out_22_V_re;
input  [13:0] dense_1_out_23_V_re;
input  [13:0] dense_1_out_24_V_re;
input  [13:0] dense_1_out_25_V_re;
input  [13:0] dense_1_out_26_V_re;
input  [13:0] dense_1_out_27_V_re;
input  [13:0] dense_1_out_28_V_re;
input  [13:0] dense_1_out_29_V_re;
input  [13:0] dense_1_out_30_V_re;
input  [13:0] dense_1_out_31_V_re;
input  [13:0] dense_1_out_32_V_re;
input  [13:0] dense_1_out_33_V_re;
input  [13:0] dense_1_out_34_V_re;
input  [13:0] dense_1_out_35_V_re;
input  [13:0] dense_1_out_36_V_re;
input  [13:0] dense_1_out_37_V_re;
input  [13:0] dense_1_out_38_V_re;
input  [13:0] dense_1_out_39_V_re;
input  [13:0] dense_1_out_40_V_re;
input  [13:0] dense_1_out_41_V_re;
input  [13:0] dense_1_out_42_V_re;
input  [13:0] dense_1_out_43_V_re;
input  [13:0] dense_1_out_44_V_re;
input  [13:0] dense_1_out_45_V_re;
input  [13:0] dense_1_out_46_V_re;
input  [13:0] dense_1_out_47_V_re;
input  [13:0] dense_1_out_48_V_re;
input  [13:0] dense_1_out_49_V_re;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
output   dense_2_out_V_we0;
output  [12:0] dense_2_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_2_out_V_ce0;
reg dense_2_out_V_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
wire   [4:0] i_fu_559_p2;
reg   [4:0] i_reg_1290;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln14_fu_565_p1;
reg   [63:0] zext_ln14_reg_1295;
wire   [0:0] icmp_ln9_fu_553_p2;
wire   [11:0] zext_ln13_fu_569_p1;
reg   [11:0] zext_ln13_reg_1301;
wire   [5:0] j_fu_579_p2;
reg   [5:0] j_reg_1309;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln13_fu_573_p2;
wire   [13:0] tmp_3_fu_625_p52;
reg  signed [13:0] tmp_3_reg_1319;
wire   [13:0] select_ln340_9_fu_900_p3;
wire    ap_CS_fsm_state4;
reg   [4:0] i_0_reg_519;
wire    ap_CS_fsm_state5;
reg  signed [13:0] p_Val2_s_reg_530;
reg   [5:0] j_0_reg_542;
wire  signed [63:0] sext_ln1117_fu_620_p1;
wire   [10:0] tmp_s_fu_585_p3;
wire   [6:0] tmp_4_fu_597_p3;
wire   [11:0] zext_ln1117_fu_593_p1;
wire   [11:0] zext_ln1117_1_fu_605_p1;
wire   [11:0] sub_ln1117_fu_609_p2;
wire   [11:0] add_ln1117_fu_615_p2;
wire  signed [21:0] lhs_V_3_fu_688_p3;
wire  signed [22:0] grp_fu_1023_p3;
wire   [0:0] tmp_29_fu_723_p3;
wire   [13:0] p_Val2_30_fu_707_p4;
wire   [13:0] zext_ln415_fu_730_p1;
wire   [13:0] sum_V_fu_734_p2;
wire   [0:0] tmp_30_fu_740_p3;
wire   [0:0] p_Result_23_fu_716_p3;
wire   [0:0] xor_ln416_3_fu_748_p2;
wire   [0:0] tmp_33_fu_775_p3;
wire   [0:0] xor_ln416_4_fu_788_p2;
wire   [0:0] or_ln416_2_fu_794_p2;
wire   [0:0] xor_ln779_fu_782_p2;
wire   [0:0] Range2_all_ones_fu_768_p3;
wire   [0:0] or_ln416_fu_800_p2;
wire   [0:0] carry_2_fu_754_p2;
wire   [0:0] p_Result_24_fu_760_p3;
wire   [0:0] xor_ln785_fu_818_p2;
wire   [0:0] p_Result_s_fu_700_p3;
wire   [0:0] or_ln785_fu_824_p2;
wire   [0:0] xor_ln785_2_fu_830_p2;
wire   [0:0] deleted_ones_fu_806_p2;
wire   [0:0] and_ln781_fu_812_p2;
wire   [0:0] and_ln786_fu_842_p2;
wire   [0:0] or_ln786_fu_848_p2;
wire   [0:0] xor_ln786_4_fu_854_p2;
wire   [0:0] underflow_fu_860_p2;
wire   [0:0] overflow_fu_836_p2;
wire   [0:0] or_ln340_8_fu_872_p2;
wire   [0:0] or_ln340_7_fu_866_p2;
wire   [0:0] or_ln340_9_fu_878_p2;
wire   [13:0] select_ln340_4_fu_884_p3;
wire   [13:0] select_ln388_4_fu_892_p3;
wire  signed [8:0] sext_ln1265_fu_912_p0;
wire  signed [8:0] rhs_V_fu_916_p0;
wire  signed [14:0] rhs_V_fu_916_p1;
wire  signed [14:0] lhs_V_fu_908_p1;
wire   [14:0] ret_V_8_fu_920_p2;
wire  signed [13:0] sext_ln1265_fu_912_p1;
wire   [13:0] p_Val2_28_fu_934_p2;
wire   [0:0] p_Result_26_fu_940_p3;
wire   [0:0] p_Result_25_fu_926_p3;
wire   [0:0] xor_ln786_fu_948_p2;
wire   [0:0] xor_ln340_fu_966_p2;
wire   [0:0] xor_ln340_6_fu_960_p2;
wire   [0:0] underflow_4_fu_954_p2;
wire   [0:0] or_ln340_fu_972_p2;
wire   [13:0] select_ln340_fu_978_p3;
wire   [13:0] select_ln388_fu_986_p3;
wire   [13:0] select_ln340_8_fu_994_p3;
wire   [0:0] tmp_26_fu_1006_p3;
wire   [12:0] trunc_ln203_fu_1002_p1;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
end

dense_2_dense_2_wbnm #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0)
);

dense_2_dense_2_bbom #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_mux_506_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 14 ),
    .din4_WIDTH( 14 ),
    .din5_WIDTH( 14 ),
    .din6_WIDTH( 14 ),
    .din7_WIDTH( 14 ),
    .din8_WIDTH( 14 ),
    .din9_WIDTH( 14 ),
    .din10_WIDTH( 14 ),
    .din11_WIDTH( 14 ),
    .din12_WIDTH( 14 ),
    .din13_WIDTH( 14 ),
    .din14_WIDTH( 14 ),
    .din15_WIDTH( 14 ),
    .din16_WIDTH( 14 ),
    .din17_WIDTH( 14 ),
    .din18_WIDTH( 14 ),
    .din19_WIDTH( 14 ),
    .din20_WIDTH( 14 ),
    .din21_WIDTH( 14 ),
    .din22_WIDTH( 14 ),
    .din23_WIDTH( 14 ),
    .din24_WIDTH( 14 ),
    .din25_WIDTH( 14 ),
    .din26_WIDTH( 14 ),
    .din27_WIDTH( 14 ),
    .din28_WIDTH( 14 ),
    .din29_WIDTH( 14 ),
    .din30_WIDTH( 14 ),
    .din31_WIDTH( 14 ),
    .din32_WIDTH( 14 ),
    .din33_WIDTH( 14 ),
    .din34_WIDTH( 14 ),
    .din35_WIDTH( 14 ),
    .din36_WIDTH( 14 ),
    .din37_WIDTH( 14 ),
    .din38_WIDTH( 14 ),
    .din39_WIDTH( 14 ),
    .din40_WIDTH( 14 ),
    .din41_WIDTH( 14 ),
    .din42_WIDTH( 14 ),
    .din43_WIDTH( 14 ),
    .din44_WIDTH( 14 ),
    .din45_WIDTH( 14 ),
    .din46_WIDTH( 14 ),
    .din47_WIDTH( 14 ),
    .din48_WIDTH( 14 ),
    .din49_WIDTH( 14 ),
    .din50_WIDTH( 6 ),
    .dout_WIDTH( 14 ))
cnn_mux_506_14_1_1_U604(
    .din0(dense_1_out_0_V_rea),
    .din1(dense_1_out_1_V_rea),
    .din2(dense_1_out_2_V_rea),
    .din3(dense_1_out_3_V_rea),
    .din4(dense_1_out_4_V_rea),
    .din5(dense_1_out_5_V_rea),
    .din6(dense_1_out_6_V_rea),
    .din7(dense_1_out_7_V_rea),
    .din8(dense_1_out_8_V_rea),
    .din9(dense_1_out_9_V_rea),
    .din10(dense_1_out_10_V_re),
    .din11(dense_1_out_11_V_re),
    .din12(dense_1_out_12_V_re),
    .din13(dense_1_out_13_V_re),
    .din14(dense_1_out_14_V_re),
    .din15(dense_1_out_15_V_re),
    .din16(dense_1_out_16_V_re),
    .din17(dense_1_out_17_V_re),
    .din18(dense_1_out_18_V_re),
    .din19(dense_1_out_19_V_re),
    .din20(dense_1_out_20_V_re),
    .din21(dense_1_out_21_V_re),
    .din22(dense_1_out_22_V_re),
    .din23(dense_1_out_23_V_re),
    .din24(dense_1_out_24_V_re),
    .din25(dense_1_out_25_V_re),
    .din26(dense_1_out_26_V_re),
    .din27(dense_1_out_27_V_re),
    .din28(dense_1_out_28_V_re),
    .din29(dense_1_out_29_V_re),
    .din30(dense_1_out_30_V_re),
    .din31(dense_1_out_31_V_re),
    .din32(dense_1_out_32_V_re),
    .din33(dense_1_out_33_V_re),
    .din34(dense_1_out_34_V_re),
    .din35(dense_1_out_35_V_re),
    .din36(dense_1_out_36_V_re),
    .din37(dense_1_out_37_V_re),
    .din38(dense_1_out_38_V_re),
    .din39(dense_1_out_39_V_re),
    .din40(dense_1_out_40_V_re),
    .din41(dense_1_out_41_V_re),
    .din42(dense_1_out_42_V_re),
    .din43(dense_1_out_43_V_re),
    .din44(dense_1_out_44_V_re),
    .din45(dense_1_out_45_V_re),
    .din46(dense_1_out_46_V_re),
    .din47(dense_1_out_47_V_re),
    .din48(dense_1_out_48_V_re),
    .din49(dense_1_out_49_V_re),
    .din50(j_0_reg_542),
    .dout(tmp_3_fu_625_p52)
);

cnn_mac_muladd_14bgk #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 23 ))
cnn_mac_muladd_14bgk_U605(
    .din0(tmp_3_reg_1319),
    .din1(dense_2_weights_V_q0),
    .din2(lhs_V_3_fu_688_p3),
    .dout(grp_fu_1023_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_reg_519 <= i_reg_1290;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_519 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_542 <= j_reg_1309;
    end else if (((icmp_ln9_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_542 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_s_reg_530 <= select_ln340_9_fu_900_p3;
    end else if (((icmp_ln9_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_reg_530 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1290 <= i_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1309 <= j_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_573_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_3_reg_1319 <= tmp_3_fu_625_p52;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln13_reg_1301[4 : 0] <= zext_ln13_fu_569_p1[4 : 0];
        zext_ln14_reg_1295[4 : 0] <= zext_ln14_fu_565_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln9_fu_553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln13_fu_573_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range2_all_ones_fu_768_p3 = grp_fu_1023_p3[32'd22];

assign add_ln1117_fu_615_p2 = (zext_ln13_reg_1301 + sub_ln1117_fu_609_p2);

assign and_ln781_fu_812_p2 = (carry_2_fu_754_p2 & Range2_all_ones_fu_768_p3);

assign and_ln786_fu_842_p2 = (p_Result_24_fu_760_p3 & deleted_ones_fu_806_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign carry_2_fu_754_p2 = (xor_ln416_3_fu_748_p2 & p_Result_23_fu_716_p3);

assign deleted_ones_fu_806_p2 = (or_ln416_fu_800_p2 & Range2_all_ones_fu_768_p3);

assign dense_2_bias_V_address0 = zext_ln14_reg_1295;

assign dense_2_out_V_address0 = zext_ln14_reg_1295;

assign dense_2_out_V_d0 = ((tmp_26_fu_1006_p3[0:0] === 1'b1) ? 13'd0 : trunc_ln203_fu_1002_p1);

assign dense_2_weights_V_address0 = sext_ln1117_fu_620_p1;

assign i_fu_559_p2 = (i_0_reg_519 + 5'd1);

assign icmp_ln13_fu_573_p2 = ((j_0_reg_542 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_553_p2 = ((i_0_reg_519 == 5'd30) ? 1'b1 : 1'b0);

assign j_fu_579_p2 = (j_0_reg_542 + 6'd1);

assign lhs_V_3_fu_688_p3 = {{p_Val2_s_reg_530}, {8'd0}};

assign lhs_V_fu_908_p1 = p_Val2_s_reg_530;

assign or_ln340_7_fu_866_p2 = (underflow_fu_860_p2 | overflow_fu_836_p2);

assign or_ln340_8_fu_872_p2 = (xor_ln785_2_fu_830_p2 | and_ln786_fu_842_p2);

assign or_ln340_9_fu_878_p2 = (or_ln340_8_fu_872_p2 | and_ln781_fu_812_p2);

assign or_ln340_fu_972_p2 = (xor_ln340_fu_966_p2 | p_Result_26_fu_940_p3);

assign or_ln416_2_fu_794_p2 = (xor_ln416_4_fu_788_p2 | tmp_30_fu_740_p3);

assign or_ln416_fu_800_p2 = (xor_ln779_fu_782_p2 | or_ln416_2_fu_794_p2);

assign or_ln785_fu_824_p2 = (xor_ln785_fu_818_p2 | p_Result_24_fu_760_p3);

assign or_ln786_fu_848_p2 = (and_ln786_fu_842_p2 | and_ln781_fu_812_p2);

assign overflow_fu_836_p2 = (xor_ln785_2_fu_830_p2 & or_ln785_fu_824_p2);

assign p_Result_23_fu_716_p3 = grp_fu_1023_p3[32'd21];

assign p_Result_24_fu_760_p3 = sum_V_fu_734_p2[32'd13];

assign p_Result_25_fu_926_p3 = ret_V_8_fu_920_p2[32'd14];

assign p_Result_26_fu_940_p3 = p_Val2_28_fu_934_p2[32'd13];

assign p_Result_s_fu_700_p3 = grp_fu_1023_p3[32'd22];

assign p_Val2_28_fu_934_p2 = ($signed(sext_ln1265_fu_912_p1) + $signed(p_Val2_s_reg_530));

assign p_Val2_30_fu_707_p4 = {{grp_fu_1023_p3[21:8]}};

assign ret_V_8_fu_920_p2 = ($signed(rhs_V_fu_916_p1) + $signed(lhs_V_fu_908_p1));

assign rhs_V_fu_916_p0 = dense_2_bias_V_q0;

assign rhs_V_fu_916_p1 = rhs_V_fu_916_p0;

assign select_ln340_4_fu_884_p3 = ((or_ln340_7_fu_866_p2[0:0] === 1'b1) ? 14'd8191 : sum_V_fu_734_p2);

assign select_ln340_8_fu_994_p3 = ((or_ln340_fu_972_p2[0:0] === 1'b1) ? select_ln340_fu_978_p3 : select_ln388_fu_986_p3);

assign select_ln340_9_fu_900_p3 = ((or_ln340_9_fu_878_p2[0:0] === 1'b1) ? select_ln340_4_fu_884_p3 : select_ln388_4_fu_892_p3);

assign select_ln340_fu_978_p3 = ((xor_ln340_6_fu_960_p2[0:0] === 1'b1) ? 14'd8191 : p_Val2_28_fu_934_p2);

assign select_ln388_4_fu_892_p3 = ((underflow_fu_860_p2[0:0] === 1'b1) ? 14'd8192 : sum_V_fu_734_p2);

assign select_ln388_fu_986_p3 = ((underflow_4_fu_954_p2[0:0] === 1'b1) ? 14'd8192 : p_Val2_28_fu_934_p2);

assign sext_ln1117_fu_620_p1 = $signed(add_ln1117_fu_615_p2);

assign sext_ln1265_fu_912_p0 = dense_2_bias_V_q0;

assign sext_ln1265_fu_912_p1 = sext_ln1265_fu_912_p0;

assign sub_ln1117_fu_609_p2 = (zext_ln1117_fu_593_p1 - zext_ln1117_1_fu_605_p1);

assign sum_V_fu_734_p2 = (p_Val2_30_fu_707_p4 + zext_ln415_fu_730_p1);

assign tmp_26_fu_1006_p3 = select_ln340_8_fu_994_p3[32'd13];

assign tmp_29_fu_723_p3 = grp_fu_1023_p3[32'd7];

assign tmp_30_fu_740_p3 = sum_V_fu_734_p2[32'd13];

assign tmp_33_fu_775_p3 = grp_fu_1023_p3[32'd22];

assign tmp_4_fu_597_p3 = {{j_0_reg_542}, {1'd0}};

assign tmp_s_fu_585_p3 = {{j_0_reg_542}, {5'd0}};

assign trunc_ln203_fu_1002_p1 = select_ln340_8_fu_994_p3[12:0];

assign underflow_4_fu_954_p2 = (xor_ln786_fu_948_p2 & p_Result_25_fu_926_p3);

assign underflow_fu_860_p2 = (xor_ln786_4_fu_854_p2 & p_Result_s_fu_700_p3);

assign xor_ln340_6_fu_960_p2 = (p_Result_26_fu_940_p3 ^ p_Result_25_fu_926_p3);

assign xor_ln340_fu_966_p2 = (p_Result_25_fu_926_p3 ^ 1'd1);

assign xor_ln416_3_fu_748_p2 = (tmp_30_fu_740_p3 ^ 1'd1);

assign xor_ln416_4_fu_788_p2 = (p_Result_23_fu_716_p3 ^ 1'd1);

assign xor_ln779_fu_782_p2 = (tmp_33_fu_775_p3 ^ 1'd1);

assign xor_ln785_2_fu_830_p2 = (p_Result_s_fu_700_p3 ^ 1'd1);

assign xor_ln785_fu_818_p2 = (carry_2_fu_754_p2 ^ Range2_all_ones_fu_768_p3);

assign xor_ln786_4_fu_854_p2 = (or_ln786_fu_848_p2 ^ 1'd1);

assign xor_ln786_fu_948_p2 = (p_Result_26_fu_940_p3 ^ 1'd1);

assign zext_ln1117_1_fu_605_p1 = tmp_4_fu_597_p3;

assign zext_ln1117_fu_593_p1 = tmp_s_fu_585_p3;

assign zext_ln13_fu_569_p1 = i_0_reg_519;

assign zext_ln14_fu_565_p1 = i_0_reg_519;

assign zext_ln415_fu_730_p1 = tmp_29_fu_723_p3;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1295[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1301[11:5] <= 7'b0000000;
end

endmodule //dense_2
