// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_out (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_2_out_V_address0,
        dense_2_out_V_ce0,
        dense_2_out_V_q0,
        prediction_V_address0,
        prediction_V_ce0,
        prediction_V_we0,
        prediction_V_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] dense_2_out_V_address0;
output   dense_2_out_V_ce0;
input  [12:0] dense_2_out_V_q0;
output  [3:0] prediction_V_address0;
output   prediction_V_ce0;
output   prediction_V_we0;
output  [13:0] prediction_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_2_out_V_ce0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire  signed [8:0] dense_out_weights_V_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
wire   [3:0] d_fu_198_p2;
reg   [3:0] d_reg_612;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln48_fu_204_p1;
reg   [63:0] zext_ln48_reg_617;
wire   [0:0] icmp_ln41_fu_192_p2;
wire   [8:0] zext_ln46_fu_208_p1;
reg   [8:0] zext_ln46_reg_623;
wire   [4:0] f_fu_218_p2;
reg   [4:0] f_reg_631;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln46_fu_212_p2;
reg   [0:0] p_Result_s_reg_651;
wire    ap_CS_fsm_state4;
wire   [13:0] w_sum_V_fu_341_p2;
reg   [13:0] w_sum_V_reg_657;
wire   [0:0] carry_1_fu_361_p2;
reg   [0:0] carry_1_reg_663;
wire   [0:0] p_Result_20_fu_367_p3;
reg   [0:0] p_Result_20_reg_669;
wire   [0:0] Range2_all_ones_fu_375_p3;
reg   [0:0] Range2_all_ones_reg_674;
wire   [0:0] and_ln786_fu_421_p2;
reg   [0:0] and_ln786_reg_680;
wire   [13:0] select_ln340_7_fu_498_p3;
wire    ap_CS_fsm_state5;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
reg   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
wire    grp_soft_max_fu_179_ap_start;
wire    grp_soft_max_fu_179_ap_done;
wire    grp_soft_max_fu_179_ap_idle;
wire    grp_soft_max_fu_179_ap_ready;
wire   [3:0] grp_soft_max_fu_179_dense_array_V_address0;
wire    grp_soft_max_fu_179_dense_array_V_ce0;
wire    grp_soft_max_fu_179_dense_array_V_we0;
wire   [13:0] grp_soft_max_fu_179_dense_array_V_d0;
wire   [3:0] grp_soft_max_fu_179_prediction_V_address0;
wire    grp_soft_max_fu_179_prediction_V_ce0;
wire    grp_soft_max_fu_179_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_179_prediction_V_d0;
reg   [3:0] d_0_reg_145;
wire    ap_CS_fsm_state6;
reg  signed [13:0] p_Val2_s_reg_156;
reg   [4:0] f_0_reg_168;
reg    grp_soft_max_fu_179_ap_start_reg;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln1116_2_fu_264_p1;
wire   [63:0] zext_ln48_1_fu_224_p1;
wire   [13:0] select_ln340_6_fu_592_p3;
wire   [7:0] tmp_s_fu_229_p3;
wire   [5:0] tmp_2_fu_241_p3;
wire   [8:0] zext_ln1116_fu_237_p1;
wire   [8:0] zext_ln1116_1_fu_249_p1;
wire   [8:0] add_ln1116_fu_253_p2;
wire   [8:0] add_ln1116_1_fu_259_p2;
wire  signed [21:0] mul_ln703_fu_601_p2;
wire  signed [21:0] lhs_V_2_fu_280_p3;
wire  signed [22:0] sext_ln728_fu_288_p1;
wire  signed [22:0] sext_ln703_fu_277_p1;
wire   [22:0] ret_V_fu_297_p2;
(* use_dsp48 = "no" *) wire   [21:0] add_ln1192_fu_292_p2;
wire   [0:0] tmp_17_fu_329_p3;
wire   [13:0] p_Val2_24_fu_311_p4;
wire   [13:0] zext_ln415_fu_337_p1;
wire   [0:0] tmp_18_fu_347_p3;
wire   [0:0] p_Result_19_fu_321_p3;
wire   [0:0] xor_ln416_1_fu_355_p2;
wire   [0:0] tmp_21_fu_383_p3;
wire   [0:0] xor_ln416_2_fu_397_p2;
wire   [0:0] or_ln416_1_fu_403_p2;
wire   [0:0] xor_ln779_fu_391_p2;
wire   [0:0] or_ln416_fu_409_p2;
wire   [0:0] deleted_ones_fu_415_p2;
wire   [0:0] xor_ln785_fu_431_p2;
wire   [0:0] or_ln785_fu_435_p2;
wire   [0:0] xor_ln785_1_fu_440_p2;
wire   [0:0] and_ln781_fu_427_p2;
wire   [0:0] or_ln786_fu_451_p2;
wire   [0:0] xor_ln786_3_fu_456_p2;
wire   [0:0] underflow_fu_462_p2;
wire   [0:0] overflow_fu_445_p2;
wire   [0:0] or_ln340_5_fu_473_p2;
wire   [0:0] or_ln340_4_fu_467_p2;
wire   [0:0] or_ln340_6_fu_478_p2;
wire   [13:0] select_ln340_3_fu_484_p3;
wire   [13:0] select_ln388_3_fu_491_p3;
wire  signed [7:0] sext_ln1265_fu_510_p0;
wire  signed [7:0] rhs_V_fu_514_p0;
wire  signed [14:0] rhs_V_fu_514_p1;
wire  signed [14:0] lhs_V_fu_506_p1;
wire   [14:0] ret_V_6_fu_518_p2;
wire  signed [13:0] sext_ln1265_fu_510_p1;
wire   [13:0] p_Val2_22_fu_532_p2;
wire   [0:0] p_Result_22_fu_538_p3;
wire   [0:0] p_Result_21_fu_524_p3;
wire   [0:0] xor_ln786_fu_546_p2;
wire   [0:0] xor_ln340_fu_564_p2;
wire   [0:0] xor_ln340_5_fu_558_p2;
wire   [0:0] underflow_3_fu_552_p2;
wire   [0:0] or_ln340_fu_570_p2;
wire   [13:0] select_ln340_fu_576_p3;
wire   [13:0] select_ln388_fu_584_p3;
wire   [12:0] mul_ln703_fu_601_p1;
reg   [6:0] ap_NS_fsm;
wire   [21:0] mul_ln703_fu_601_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_soft_max_fu_179_ap_start_reg = 1'b0;
end

dense_out_dense_obtn #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0)
);

dense_out_dense_obun #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

dense_out_dense_abvn #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0)
);

soft_max grp_soft_max_fu_179(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_soft_max_fu_179_ap_start),
    .ap_done(grp_soft_max_fu_179_ap_done),
    .ap_idle(grp_soft_max_fu_179_ap_idle),
    .ap_ready(grp_soft_max_fu_179_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_179_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_179_dense_array_V_ce0),
    .dense_array_V_we0(grp_soft_max_fu_179_dense_array_V_we0),
    .dense_array_V_d0(grp_soft_max_fu_179_dense_array_V_d0),
    .dense_array_V_q0(dense_array_V_q0),
    .prediction_V_address0(grp_soft_max_fu_179_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_179_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_179_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_179_prediction_V_d0)
);

cnn_mul_mul_9s_13bwn #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_9s_13bwn_U668(
    .din0(dense_out_weights_V_q0),
    .din1(mul_ln703_fu_601_p1),
    .dout(mul_ln703_fu_601_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_soft_max_fu_179_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln41_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_soft_max_fu_179_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_179_ap_ready == 1'b1)) begin
            grp_soft_max_fu_179_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        d_0_reg_145 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        d_0_reg_145 <= d_reg_612;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f_0_reg_168 <= f_reg_631;
    end else if (((icmp_ln41_fu_192_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        f_0_reg_168 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_s_reg_156 <= select_ln340_7_fu_498_p3;
    end else if (((icmp_ln41_fu_192_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_Val2_s_reg_156 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Range2_all_ones_reg_674 <= ret_V_fu_297_p2[32'd22];
        and_ln786_reg_680 <= and_ln786_fu_421_p2;
        carry_1_reg_663 <= carry_1_fu_361_p2;
        p_Result_20_reg_669 <= w_sum_V_fu_341_p2[32'd13];
        p_Result_s_reg_651 <= ret_V_fu_297_p2[32'd22];
        w_sum_V_reg_657 <= w_sum_V_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        d_reg_612 <= d_fu_198_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        f_reg_631 <= f_fu_218_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_fu_192_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln46_reg_623[3 : 0] <= zext_ln46_fu_208_p1[3 : 0];
        zext_ln48_reg_617[3 : 0] <= zext_ln48_fu_204_p1[3 : 0];
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (grp_soft_max_fu_179_ap_done == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_soft_max_fu_179_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_array_V_address0 = zext_ln48_reg_617;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_V_address0 = grp_soft_max_fu_179_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_V_ce0 = grp_soft_max_fu_179_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_array_V_d0 = select_ln340_6_fu_592_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_V_d0 = grp_soft_max_fu_179_dense_array_V_d0;
    end else begin
        dense_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        dense_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        dense_array_V_we0 = grp_soft_max_fu_179_dense_array_V_we0;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln41_fu_192_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln46_fu_212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_soft_max_fu_179_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range2_all_ones_fu_375_p3 = ret_V_fu_297_p2[32'd22];

assign add_ln1116_1_fu_259_p2 = (zext_ln46_reg_623 + add_ln1116_fu_253_p2);

assign add_ln1116_fu_253_p2 = (zext_ln1116_fu_237_p1 + zext_ln1116_1_fu_249_p1);

assign add_ln1192_fu_292_p2 = ($signed(mul_ln703_fu_601_p2) + $signed(lhs_V_2_fu_280_p3));

assign and_ln781_fu_427_p2 = (carry_1_reg_663 & Range2_all_ones_reg_674);

assign and_ln786_fu_421_p2 = (p_Result_20_fu_367_p3 & deleted_ones_fu_415_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign carry_1_fu_361_p2 = (xor_ln416_1_fu_355_p2 & p_Result_19_fu_321_p3);

assign d_fu_198_p2 = (d_0_reg_145 + 4'd1);

assign deleted_ones_fu_415_p2 = (or_ln416_fu_409_p2 & Range2_all_ones_fu_375_p3);

assign dense_2_out_V_address0 = zext_ln48_1_fu_224_p1;

assign dense_out_bias_V_address0 = zext_ln48_reg_617;

assign dense_out_weights_V_address0 = zext_ln1116_2_fu_264_p1;

assign f_fu_218_p2 = (f_0_reg_168 + 5'd1);

assign grp_soft_max_fu_179_ap_start = grp_soft_max_fu_179_ap_start_reg;

assign icmp_ln41_fu_192_p2 = ((d_0_reg_145 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_212_p2 = ((f_0_reg_168 == 5'd30) ? 1'b1 : 1'b0);

assign lhs_V_2_fu_280_p3 = {{p_Val2_s_reg_156}, {8'd0}};

assign lhs_V_fu_506_p1 = p_Val2_s_reg_156;

assign mul_ln703_fu_601_p1 = mul_ln703_fu_601_p10;

assign mul_ln703_fu_601_p10 = dense_2_out_V_q0;

assign or_ln340_4_fu_467_p2 = (underflow_fu_462_p2 | overflow_fu_445_p2);

assign or_ln340_5_fu_473_p2 = (xor_ln785_1_fu_440_p2 | and_ln786_reg_680);

assign or_ln340_6_fu_478_p2 = (or_ln340_5_fu_473_p2 | and_ln781_fu_427_p2);

assign or_ln340_fu_570_p2 = (xor_ln340_fu_564_p2 | p_Result_22_fu_538_p3);

assign or_ln416_1_fu_403_p2 = (xor_ln416_2_fu_397_p2 | tmp_18_fu_347_p3);

assign or_ln416_fu_409_p2 = (xor_ln779_fu_391_p2 | or_ln416_1_fu_403_p2);

assign or_ln785_fu_435_p2 = (xor_ln785_fu_431_p2 | p_Result_20_reg_669);

assign or_ln786_fu_451_p2 = (and_ln786_reg_680 | and_ln781_fu_427_p2);

assign overflow_fu_445_p2 = (xor_ln785_1_fu_440_p2 & or_ln785_fu_435_p2);

assign p_Result_19_fu_321_p3 = add_ln1192_fu_292_p2[32'd21];

assign p_Result_20_fu_367_p3 = w_sum_V_fu_341_p2[32'd13];

assign p_Result_21_fu_524_p3 = ret_V_6_fu_518_p2[32'd14];

assign p_Result_22_fu_538_p3 = p_Val2_22_fu_532_p2[32'd13];

assign p_Val2_22_fu_532_p2 = ($signed(sext_ln1265_fu_510_p1) + $signed(p_Val2_s_reg_156));

assign p_Val2_24_fu_311_p4 = {{add_ln1192_fu_292_p2[21:8]}};

assign prediction_V_address0 = grp_soft_max_fu_179_prediction_V_address0;

assign prediction_V_ce0 = grp_soft_max_fu_179_prediction_V_ce0;

assign prediction_V_d0 = grp_soft_max_fu_179_prediction_V_d0;

assign prediction_V_we0 = grp_soft_max_fu_179_prediction_V_we0;

assign ret_V_6_fu_518_p2 = ($signed(rhs_V_fu_514_p1) + $signed(lhs_V_fu_506_p1));

assign ret_V_fu_297_p2 = ($signed(sext_ln728_fu_288_p1) + $signed(sext_ln703_fu_277_p1));

assign rhs_V_fu_514_p0 = dense_out_bias_V_q0;

assign rhs_V_fu_514_p1 = rhs_V_fu_514_p0;

assign select_ln340_3_fu_484_p3 = ((or_ln340_4_fu_467_p2[0:0] === 1'b1) ? 14'd8191 : w_sum_V_reg_657);

assign select_ln340_6_fu_592_p3 = ((or_ln340_fu_570_p2[0:0] === 1'b1) ? select_ln340_fu_576_p3 : select_ln388_fu_584_p3);

assign select_ln340_7_fu_498_p3 = ((or_ln340_6_fu_478_p2[0:0] === 1'b1) ? select_ln340_3_fu_484_p3 : select_ln388_3_fu_491_p3);

assign select_ln340_fu_576_p3 = ((xor_ln340_5_fu_558_p2[0:0] === 1'b1) ? 14'd8191 : p_Val2_22_fu_532_p2);

assign select_ln388_3_fu_491_p3 = ((underflow_fu_462_p2[0:0] === 1'b1) ? 14'd8192 : w_sum_V_reg_657);

assign select_ln388_fu_584_p3 = ((underflow_3_fu_552_p2[0:0] === 1'b1) ? 14'd8192 : p_Val2_22_fu_532_p2);

assign sext_ln1265_fu_510_p0 = dense_out_bias_V_q0;

assign sext_ln1265_fu_510_p1 = sext_ln1265_fu_510_p0;

assign sext_ln703_fu_277_p1 = mul_ln703_fu_601_p2;

assign sext_ln728_fu_288_p1 = lhs_V_2_fu_280_p3;

assign tmp_17_fu_329_p3 = add_ln1192_fu_292_p2[32'd7];

assign tmp_18_fu_347_p3 = w_sum_V_fu_341_p2[32'd13];

assign tmp_21_fu_383_p3 = ret_V_fu_297_p2[32'd22];

assign tmp_2_fu_241_p3 = {{f_0_reg_168}, {1'd0}};

assign tmp_s_fu_229_p3 = {{f_0_reg_168}, {3'd0}};

assign underflow_3_fu_552_p2 = (xor_ln786_fu_546_p2 & p_Result_21_fu_524_p3);

assign underflow_fu_462_p2 = (xor_ln786_3_fu_456_p2 & p_Result_s_reg_651);

assign w_sum_V_fu_341_p2 = (p_Val2_24_fu_311_p4 + zext_ln415_fu_337_p1);

assign xor_ln340_5_fu_558_p2 = (p_Result_22_fu_538_p3 ^ p_Result_21_fu_524_p3);

assign xor_ln340_fu_564_p2 = (p_Result_21_fu_524_p3 ^ 1'd1);

assign xor_ln416_1_fu_355_p2 = (tmp_18_fu_347_p3 ^ 1'd1);

assign xor_ln416_2_fu_397_p2 = (p_Result_19_fu_321_p3 ^ 1'd1);

assign xor_ln779_fu_391_p2 = (tmp_21_fu_383_p3 ^ 1'd1);

assign xor_ln785_1_fu_440_p2 = (p_Result_s_reg_651 ^ 1'd1);

assign xor_ln785_fu_431_p2 = (carry_1_reg_663 ^ Range2_all_ones_reg_674);

assign xor_ln786_3_fu_456_p2 = (or_ln786_fu_451_p2 ^ 1'd1);

assign xor_ln786_fu_546_p2 = (p_Result_22_fu_538_p3 ^ 1'd1);

assign zext_ln1116_1_fu_249_p1 = tmp_2_fu_241_p3;

assign zext_ln1116_2_fu_264_p1 = add_ln1116_1_fu_259_p2;

assign zext_ln1116_fu_237_p1 = tmp_s_fu_229_p3;

assign zext_ln415_fu_337_p1 = tmp_17_fu_329_p3;

assign zext_ln46_fu_208_p1 = d_0_reg_145;

assign zext_ln48_1_fu_224_p1 = f_0_reg_168;

assign zext_ln48_fu_204_p1 = d_0_reg_145;

always @ (posedge ap_clk) begin
    zext_ln48_reg_617[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln46_reg_623[8:4] <= 5'b00000;
end

endmodule //dense_out
