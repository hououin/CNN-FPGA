// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module exp_17_7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [16:0] x_V;
output  [16:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] f_x_lsb_table_V_address0;
reg    f_x_lsb_table_V_ce0;
wire   [10:0] f_x_lsb_table_V_q0;
wire   [4:0] exp_x_msb_2_m_1_tabl_address0;
reg    exp_x_msb_2_m_1_tabl_ce0;
wire   [24:0] exp_x_msb_2_m_1_tabl_q0;
wire   [4:0] exp_x_msb_1_table_V_address0;
reg    exp_x_msb_1_table_V_ce0;
wire   [24:0] exp_x_msb_1_table_V_q0;
wire   [0:0] tmp_fu_179_p3;
reg   [0:0] tmp_reg_615;
reg   [0:0] tmp_reg_615_pp0_iter1_reg;
reg   [3:0] p_Result_s_56_reg_621;
wire   [3:0] trunc_ln612_1_fu_337_p1;
reg   [3:0] trunc_ln612_1_reg_626;
wire   [0:0] or_ln194_7_fu_401_p2;
reg   [0:0] or_ln194_7_reg_642;
reg   [0:0] or_ln194_7_reg_642_pp0_iter1_reg;
wire   [24:0] exp_x_msb_2_lsb_m_1_s_fu_475_p2;
reg   [24:0] exp_x_msb_2_lsb_m_1_s_reg_647;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln544_fu_349_p1;
wire   [63:0] zext_ln544_1_fu_354_p1;
wire   [63:0] zext_ln544_2_fu_481_p1;
wire  signed [16:0] x_l_V_fu_153_p0;
wire  signed [16:0] p_Result_15_fu_157_p1;
wire  signed [16:0] trunc_ln612_fu_167_p0;
wire   [9:0] trunc_ln612_fu_167_p1;
wire  signed [16:0] tmp_fu_179_p1;
wire  signed [22:0] x_l_V_fu_153_p1;
wire   [0:0] p_Result_s_fu_187_p3;
wire   [0:0] p_Result_1_fu_201_p3;
wire   [0:0] p_Result_2_fu_215_p3;
wire   [0:0] p_Result_3_fu_229_p3;
wire   [0:0] p_Result_4_fu_243_p3;
wire   [0:0] p_Result_5_fu_257_p3;
wire   [0:0] p_Result_6_fu_271_p3;
wire   [0:0] p_Result_7_fu_285_p3;
wire   [3:0] p_Result_15_fu_157_p4;
wire   [10:0] p_Result_16_fu_171_p3;
wire   [0:0] icmp_ln1498_fu_299_p2;
wire   [0:0] icmp_ln1494_fu_305_p2;
wire  signed [16:0] p_Result_s_56_fu_317_p1;
wire  signed [16:0] tmp_V_fu_327_p1;
wire  signed [16:0] trunc_ln612_1_fu_337_p0;
wire   [4:0] tmp_V_1_fu_341_p3;
wire   [4:0] tmp_V_fu_327_p4;
wire   [0:0] xor_ln191_fu_195_p2;
wire   [0:0] xor_ln191_1_fu_209_p2;
wire   [0:0] xor_ln191_2_fu_223_p2;
wire   [0:0] xor_ln191_3_fu_237_p2;
wire   [0:0] or_ln194_1_fu_365_p2;
wire   [0:0] or_ln194_fu_359_p2;
wire   [0:0] xor_ln191_4_fu_251_p2;
wire   [0:0] xor_ln191_5_fu_265_p2;
wire   [0:0] xor_ln191_7_fu_293_p2;
wire   [0:0] and_ln194_fu_311_p2;
wire   [0:0] or_ln194_4_fu_383_p2;
wire   [0:0] xor_ln191_6_fu_279_p2;
wire   [0:0] or_ln194_5_fu_389_p2;
wire   [0:0] or_ln194_3_fu_377_p2;
wire   [0:0] or_ln194_6_fu_395_p2;
wire   [0:0] or_ln194_2_fu_371_p2;
wire   [17:0] p_Result_18_fu_413_p4;
wire   [17:0] r_V_5_fu_430_p0;
wire   [24:0] r_V_5_fu_430_p1;
wire   [42:0] r_V_5_fu_430_p2;
wire   [18:0] f_x_msb_2_lsb_s_V_fu_436_p4;
wire   [18:0] rhs_V_fu_450_p5;
wire   [19:0] lhs_V_fu_446_p1;
wire   [19:0] zext_ln728_fu_461_p1;
wire   [19:0] ret_V_fu_465_p2;
wire   [24:0] zext_ln703_fu_471_p1;
wire   [4:0] p_Result_17_fu_407_p3;
wire   [0:0] xor_ln195_fu_486_p2;
wire   [24:0] r_V_6_fu_506_p0;
wire   [24:0] r_V_6_fu_506_p1;
wire   [49:0] r_V_6_fu_506_p2;
wire   [24:0] y_lo_s_V_fu_512_p4;
wire   [24:0] y_l_V_fu_522_p2;
wire   [21:0] select_ln195_fu_491_p3;
wire   [21:0] y_V_fu_528_p4;
wire   [21:0] p_Val2_14_fu_538_p3;
wire   [1:0] tmp_3_fu_545_p4;
wire   [0:0] icmp_ln255_fu_555_p2;
wire   [0:0] tmp_4_fu_561_p3;
wire   [1:0] tmp_5_fu_575_p4;
wire   [0:0] icmp_ln255_1_fu_585_p2;
wire   [0:0] or_ln255_fu_569_p2;
wire   [0:0] or_ln255_1_fu_591_p2;
wire   [16:0] tmp_s_fu_597_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [42:0] r_V_5_fu_430_p00;
wire   [42:0] r_V_5_fu_430_p10;
wire   [49:0] r_V_6_fu_506_p00;
wire   [49:0] r_V_6_fu_506_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

exp_17_7_s_f_x_lsibs #(
    .DataWidth( 11 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
f_x_lsb_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(f_x_lsb_table_V_address0),
    .ce0(f_x_lsb_table_V_ce0),
    .q0(f_x_lsb_table_V_q0)
);

exp_17_7_s_exp_x_jbC #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_2_m_1_tabl_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_2_m_1_tabl_address0),
    .ce0(exp_x_msb_2_m_1_tabl_ce0),
    .q0(exp_x_msb_2_m_1_tabl_q0)
);

exp_17_7_s_exp_x_kbM #(
    .DataWidth( 25 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
exp_x_msb_1_table_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_x_msb_1_table_V_address0),
    .ce0(exp_x_msb_1_table_V_ce0),
    .q0(exp_x_msb_1_table_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln194_7_reg_642 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_2_lsb_m_1_s_reg_647 <= exp_x_msb_2_lsb_m_1_s_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln194_7_reg_642 <= or_ln194_7_fu_401_p2;
        or_ln194_7_reg_642_pp0_iter1_reg <= or_ln194_7_reg_642;
        p_Result_s_56_reg_621 <= {{p_Result_s_56_fu_317_p1[12:9]}};
        tmp_reg_615 <= tmp_fu_179_p1[32'd16];
        tmp_reg_615_pp0_iter1_reg <= tmp_reg_615;
        trunc_ln612_1_reg_626 <= trunc_ln612_1_fu_337_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_1_table_V_ce0 = 1'b1;
    end else begin
        exp_x_msb_1_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_x_msb_2_m_1_tabl_ce0 = 1'b1;
    end else begin
        exp_x_msb_2_m_1_tabl_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_x_lsb_table_V_ce0 = 1'b1;
    end else begin
        f_x_lsb_table_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln194_fu_311_p2 = (icmp_ln1498_fu_299_p2 & icmp_ln1494_fu_305_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = ((or_ln255_1_fu_591_p2[0:0] === 1'b1) ? 17'd65535 : tmp_s_fu_597_p4);

assign exp_x_msb_1_table_V_address0 = zext_ln544_2_fu_481_p1;

assign exp_x_msb_2_lsb_m_1_s_fu_475_p2 = (zext_ln703_fu_471_p1 + exp_x_msb_2_m_1_tabl_q0);

assign exp_x_msb_2_m_1_tabl_address0 = zext_ln544_1_fu_354_p1;

assign f_x_lsb_table_V_address0 = zext_ln544_fu_349_p1;

assign f_x_msb_2_lsb_s_V_fu_436_p4 = {{r_V_5_fu_430_p2[42:24]}};

assign icmp_ln1494_fu_305_p2 = ((p_Result_16_fu_171_p3 > 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln1498_fu_299_p2 = ((p_Result_15_fu_157_p4 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln255_1_fu_585_p2 = ((tmp_5_fu_575_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln255_fu_555_p2 = ((tmp_3_fu_545_p4 != 2'd0) ? 1'b1 : 1'b0);

assign lhs_V_fu_446_p1 = f_x_msb_2_lsb_s_V_fu_436_p4;

assign or_ln194_1_fu_365_p2 = (xor_ln191_3_fu_237_p2 | xor_ln191_2_fu_223_p2);

assign or_ln194_2_fu_371_p2 = (or_ln194_fu_359_p2 | or_ln194_1_fu_365_p2);

assign or_ln194_3_fu_377_p2 = (xor_ln191_5_fu_265_p2 | xor_ln191_4_fu_251_p2);

assign or_ln194_4_fu_383_p2 = (xor_ln191_7_fu_293_p2 | and_ln194_fu_311_p2);

assign or_ln194_5_fu_389_p2 = (xor_ln191_6_fu_279_p2 | or_ln194_4_fu_383_p2);

assign or_ln194_6_fu_395_p2 = (or_ln194_5_fu_389_p2 | or_ln194_3_fu_377_p2);

assign or_ln194_7_fu_401_p2 = (or_ln194_6_fu_395_p2 | or_ln194_2_fu_371_p2);

assign or_ln194_fu_359_p2 = (xor_ln191_fu_195_p2 | xor_ln191_1_fu_209_p2);

assign or_ln255_1_fu_591_p2 = (or_ln255_fu_569_p2 | icmp_ln255_1_fu_585_p2);

assign or_ln255_fu_569_p2 = (tmp_4_fu_561_p3 | icmp_ln255_fu_555_p2);

assign p_Result_15_fu_157_p1 = x_V;

assign p_Result_15_fu_157_p4 = {{p_Result_15_fu_157_p1[13:10]}};

assign p_Result_16_fu_171_p3 = {{trunc_ln612_fu_167_p1}, {1'd0}};

assign p_Result_17_fu_407_p3 = {{tmp_reg_615}, {p_Result_s_56_reg_621}};

assign p_Result_18_fu_413_p4 = {{{trunc_ln612_1_reg_626}, {3'd0}}, {f_x_lsb_table_V_q0}};

assign p_Result_1_fu_201_p3 = x_l_V_fu_153_p1[32'd14];

assign p_Result_2_fu_215_p3 = x_l_V_fu_153_p1[32'd15];

assign p_Result_3_fu_229_p3 = x_l_V_fu_153_p1[32'd16];

assign p_Result_4_fu_243_p3 = x_l_V_fu_153_p1[32'd17];

assign p_Result_5_fu_257_p3 = x_l_V_fu_153_p1[32'd18];

assign p_Result_6_fu_271_p3 = x_l_V_fu_153_p1[32'd19];

assign p_Result_7_fu_285_p3 = x_l_V_fu_153_p1[32'd20];

assign p_Result_s_56_fu_317_p1 = x_V;

assign p_Result_s_fu_187_p3 = x_l_V_fu_153_p1[32'd13];

assign p_Val2_14_fu_538_p3 = ((or_ln194_7_reg_642_pp0_iter1_reg[0:0] === 1'b1) ? select_ln195_fu_491_p3 : y_V_fu_528_p4);

assign r_V_5_fu_430_p0 = r_V_5_fu_430_p00;

assign r_V_5_fu_430_p00 = p_Result_18_fu_413_p4;

assign r_V_5_fu_430_p1 = r_V_5_fu_430_p10;

assign r_V_5_fu_430_p10 = exp_x_msb_2_m_1_tabl_q0;

assign r_V_5_fu_430_p2 = (r_V_5_fu_430_p0 * r_V_5_fu_430_p1);

assign r_V_6_fu_506_p0 = r_V_6_fu_506_p00;

assign r_V_6_fu_506_p00 = exp_x_msb_1_table_V_q0;

assign r_V_6_fu_506_p1 = r_V_6_fu_506_p10;

assign r_V_6_fu_506_p10 = exp_x_msb_2_lsb_m_1_s_reg_647;

assign r_V_6_fu_506_p2 = (r_V_6_fu_506_p0 * r_V_6_fu_506_p1);

assign ret_V_fu_465_p2 = (lhs_V_fu_446_p1 + zext_ln728_fu_461_p1);

assign rhs_V_fu_450_p5 = {{{{trunc_ln612_1_reg_626}, {3'd0}}, {f_x_lsb_table_V_q0}}, {1'd0}};

assign select_ln195_fu_491_p3 = ((xor_ln195_fu_486_p2[0:0] === 1'b1) ? 22'd4194303 : 22'd0);

assign tmp_3_fu_545_p4 = {{p_Val2_14_fu_538_p3[21:20]}};

assign tmp_4_fu_561_p3 = p_Val2_14_fu_538_p3[32'd19];

assign tmp_5_fu_575_p4 = {{p_Val2_14_fu_538_p3[18:17]}};

assign tmp_V_1_fu_341_p3 = {{trunc_ln612_1_fu_337_p1}, {1'd0}};

assign tmp_V_fu_327_p1 = x_V;

assign tmp_V_fu_327_p4 = {{tmp_V_fu_327_p1[8:4]}};

assign tmp_fu_179_p1 = x_V;

assign tmp_fu_179_p3 = tmp_fu_179_p1[32'd16];

assign tmp_s_fu_597_p4 = {{p_Val2_14_fu_538_p3[17:1]}};

assign trunc_ln612_1_fu_337_p0 = x_V;

assign trunc_ln612_1_fu_337_p1 = trunc_ln612_1_fu_337_p0[3:0];

assign trunc_ln612_fu_167_p0 = x_V;

assign trunc_ln612_fu_167_p1 = trunc_ln612_fu_167_p0[9:0];

assign x_l_V_fu_153_p0 = x_V;

assign x_l_V_fu_153_p1 = x_l_V_fu_153_p0;

assign xor_ln191_1_fu_209_p2 = (tmp_fu_179_p3 ^ p_Result_1_fu_201_p3);

assign xor_ln191_2_fu_223_p2 = (tmp_fu_179_p3 ^ p_Result_2_fu_215_p3);

assign xor_ln191_3_fu_237_p2 = (tmp_fu_179_p3 ^ p_Result_3_fu_229_p3);

assign xor_ln191_4_fu_251_p2 = (tmp_fu_179_p3 ^ p_Result_4_fu_243_p3);

assign xor_ln191_5_fu_265_p2 = (tmp_fu_179_p3 ^ p_Result_5_fu_257_p3);

assign xor_ln191_6_fu_279_p2 = (tmp_fu_179_p3 ^ p_Result_6_fu_271_p3);

assign xor_ln191_7_fu_293_p2 = (tmp_fu_179_p3 ^ p_Result_7_fu_285_p3);

assign xor_ln191_fu_195_p2 = (tmp_fu_179_p3 ^ p_Result_s_fu_187_p3);

assign xor_ln195_fu_486_p2 = (tmp_reg_615_pp0_iter1_reg ^ 1'd1);

assign y_V_fu_528_p4 = {{y_l_V_fu_522_p2[24:3]}};

assign y_l_V_fu_522_p2 = (y_lo_s_V_fu_512_p4 + exp_x_msb_1_table_V_q0);

assign y_lo_s_V_fu_512_p4 = {{r_V_6_fu_506_p2[49:25]}};

assign zext_ln544_1_fu_354_p1 = tmp_V_fu_327_p4;

assign zext_ln544_2_fu_481_p1 = p_Result_17_fu_407_p3;

assign zext_ln544_fu_349_p1 = tmp_V_1_fu_341_p3;

assign zext_ln703_fu_471_p1 = ret_V_fu_465_p2;

assign zext_ln728_fu_461_p1 = rhs_V_fu_450_p5;

endmodule //exp_17_7_s
