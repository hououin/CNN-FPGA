# This script segment is generated automatically by AutoPilot

set id 12
set name cnn_mul_mul_12s_1hbi
set corename simcore_mul
set op mul
set stage_num 1
set max_latency -1
set registered_input 1
set in0_width 12
set in0_signed 1
set in1_width 16
set in1_signed 1
set out_width 29
set exp i0*i1
set arg_lists {i0 {12 1 +} i1 {16 1 +} p {29 1 +} acc {0} }
set TrueReset 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mul] == "ap_gen_simcore_mul"} {
eval "ap_gen_simcore_mul { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-100\] Cannot find ap_gen_simcore_mul, check your AutoPilot builtin lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
	::AP::rtl_comp_handler ${name}
}


set op mul
set corename DSP48
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_dsp48] == "::AESL_LIB_VIRTEX::xil_gen_dsp48"} {
eval "::AESL_LIB_VIRTEX::xil_gen_dsp48 { \
    id ${id} \
    name ${name} \
    corename ${corename} \
    op ${op} \
    reset_level 1 \
    sync_rst true \
    true_reset ${TrueReset} \
    stage_num ${stage_num} \
    max_latency ${max_latency} \
    registered_input ${registered_input} \
    in0_width ${in0_width} \
    in0_signed ${in0_signed} \
    in1_width ${in1_width} \
    in1_signed ${in1_signed} \
    out_width ${out_width} \
    exp ${exp} \
    arg_lists {${arg_lists}} \
}"
} else {
puts "@W \[IMPL-101\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_dsp48, check your platform lib"
}
}


# Memory (RAM/ROM)  definition:
set ID 14
set hasByteEnable 0
set MemName conv_2_conv_2_weifYi
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 12
set AddrRange 864
set AddrWd 10
set TrueReset 0
set IsROM 1
set ROMData { "000001010100" "111111110101" "000100100000" "111011000010" "111111010001" "111010000111" "111011110101" "000010000000" "111110111111" "111111010001" "000010111111" "000100100011" "111110000001" "000000000011" "000011010000" "111010100010" "000001010010" "000001110111" "000010110010" "110011110010" "111110100100" "000011000110" "000001101100" "111011001011" "111011111100" "000010110111" "111101111000" "111100100100" "000000010001" "000000111110" "111100001110" "000011111010" "111111000011" "000000100010" "111111001000" "111010110100" "111111101111" "111110100101" "111101000101" "000001100001" "111110001001" "111110111001" "000100001000" "111111110101" "000000101001" "111111010100" "000001100001" "111101111100" "000000110001" "000001111100" "111111101111" "111001011011" "000001000000" "111010110000" "111100101010" "000010010100" "000011100011" "000001100100" "111111101001" "000001100001" "000101010111" "000000100000" "111110100001" "111000001111" "111100000000" "111111110101" "000000000011" "111010101111" "111101111100" "000011101011" "001000011001" "110110111011" "000011110010" "110111011100" "111101100100" "111100000011" "111010010100" "000011000011" "110001010000" "000011100010" "000011001011" "111111110011" "000010111011" "111110101111" "111110110000" "000101011101" "000001011110" "000000101111" "111101001001" "111111111110" "000000111101" "000001010110" "111110111000" "111111100000" "000010101000" "111110100011" "111111111110" "000001010101" "000010010100" "000100100011" "000011001000" "111101010001" "111111010110" "000000110111" "111011000110" "111101000101" "000000111011" "111101001100" "000011100010" "111011101101" "000000110011" "000000001110" "000010011001" "111111100111" "111100011110" "110000110000" "111100110100" "000011110110" "000001100110" "000001010010" "000000010111" "111111111010" "000100000100" "111110111110" "111110010100" "000000110101" "000100000010" "000100101010" "000000100001" "000000010110" "000010001110" "000001001000" "111100010110" "000011111010" "111100011011" "111110111000" "111101001100" "000001000000" "000010011011" "000000010000" "111110100010" "000000110001" "000100000110" "000000110001" "000000111101" "000011100011" "000010000010" "111100101110" "000010000011" "111010100001" "111110111011" "000000000100" "111111000001" "111101011101" "000010010010" "000010001110" "000010101010" "111011000001" "111101001010" "111101100001" "111100110001" "000100000110" "111011100011" "111001101001" "111100001011" "000000001100" "000000000111" "111101001000" "000001101001" "111001111101" "000010110000" "111101101011" "111110100110" "000010001011" "110100000101" "111111100101" "000000111100" "000000100111" "000010001001" "000001011101" "000001111010" "000001001100" "111001010101" "111011001100" "000011000110" "000001000000" "000001110100" "000001101011" "000011010100" "111101101010" "111101010010" "000000111111" "000000010011" "111111010011" "111111011001" "000100100101" "000011101100" "000010110010" "111100001011" "111111100001" "111010110101" "111101011101" "111011111101" "000010001100" "111110110011" "000001010001" "111110010100" "111110011011" "111111011100" "111010110101" "111100001101" "000011011001" "111101001011" "000010000101" "000001000111" "111101111001" "111101011100" "111110101101" "000010100011" "111010101001" "111111011001" "111011001110" "001000001011" "111111111100" "111111110010" "000010101111" "000100001011" "000011111110" "111101011011" "000100110011" "111010100111" "111101101111" "111101101100" "111100101110" "111101100001" "111111100100" "111011000010" "000011110111" "111111100101" "111111111010" "000011000100" "000001010011" "000101000000" "111110010000" "000010011101" "111101010110" "111100110100" "000010000011" "111100000000" "000011011111" "000001101001" "000000111001" "000000001011" "111011110111" "111110000010" "000000101101" "111100100001" "111011010101" "110111001010" "110101110000" "111110100100" "000001010001" "000011001111" "110101111100" "000001001100" "111000111000" "000000000001" "111100011100" "111101110111" "111110100111" "111010110011" "111110011110" "111111000000" "000100111110" "111101001111" "111111111101" "111011011100" "000001110001" "111101010110" "000001100000" "000010001101" "000001011111" "000000100110" "000001101001" "111110011010" "000100111000" "110111101000" "000001100011" "111111000001" "111101011110" "111101001110" "000000111100" "111111011011" "111010010001" "111111110011" "000010100100" "000100111001" "111111001011" "000010100111" "000000100010" "111111011110" "111011100100" "000000110110" "000010000011" "000010110011" "111110011110" "000000011110" "110010100011" "000100000100" "000000100100" "111011010100" "111110001101" "111100110111" "111111000000" "111011110100" "111010001011" "111100110110" "000011110111" "111110001111" "000011010010" "111101011011" "111100001000" "111110001111" "000001001100" "111110111011" "111010100111" "111100010110" "000000010100" "000101101010" "000000010000" "000011100011" "111111000011" "111110110011" "111011011111" "111110111101" "111111011011" "000011010001" "111100010110" "000000101100" "110111100110" "111111101101" "111100111110" "111011111100" "000001101110" "000110000100" "000101110110" "000000101110" "111111001111" "000001001101" "000011101000" "000000011100" "000100010011" "111001001000" "111111011010" "000000100110" "111101111000" "000000111100" "000100100110" "111100011111" "111101100101" "111010100101" "111011110111" "111000110110" "111011111100" "111110100100" "000101000110" "111000101110" "000001110101" "111100001100" "000010010101" "000001001011" "001000000101" "000001011100" "000000011100" "111100001110" "111100110101" "000000101110" "000000001110" "000011100001" "111111110100" "000011101010" "000001000010" "000001110110" "111011110111" "111110010100" "000000111010" "000011100000" "000001001100" "000001100101" "111011101011" "000001101010" "000010011011" "000000011000" "111101100011" "111111001111" "111100010100" "000010010110" "111100111110" "000000111011" "111101110111" "000101001100" "000000010001" "111011110011" "111100101100" "000111110000" "000011011010" "000100100100" "111110010011" "111111000010" "111111100000" "111110101110" "110011010110" "111101011111" "111111101011" "111001010101" "000001111000" "111101010001" "000001001000" "111110100000" "000000100101" "111111010001" "111001011101" "000000000000" "111111001010" "111101100101" "111100000110" "111111111001" "000001110011" "111110011110" "111111111101" "111111110010" "111011010110" "111010101001" "111010101111" "111101100011" "000000110100" "111100111000" "111100011010" "000000001101" "000001001101" "000001110110" "000000100110" "000100110100" "111101110000" "000100000111" "111000101101" "000010111010" "111111000011" "111100010110" "111010111001" "111110011011" "101101100100" "000101000010" "000100100001" "111111110101" "000001110001" "000001011100" "111100010001" "000000011010" "111100110110" "111110011001" "000000011111" "110100111000" "000011001000" "000100001011" "000001110000" "000011110101" "000001011001" "000010010110" "000011010011" "111100011111" "111100111011" "111011011001" "000100011110" "000000001000" "000100010110" "000101010111" "000000001111" "111011001100" "000001001111" "000001101010" "111110110101" "000001101101" "111101100000" "111111001010" "111001111101" "000100101100" "111111111110" "111010000110" "000010111111" "111011110000" "111111110011" "111111101000" "000100110010" "111100110100" "111110111000" "000000001001" "111101100101" "111000001011" "000010011010" "000100111111" "000110010011" "111001010001" "111011101101" "111111101000" "111011010000" "111111110110" "110110101010" "111101111101" "111011110111" "111110001010" "111100111010" "111110011000" "000001000110" "000000100001" "000000000011" "000001001111" "111011110100" "000011101001" "000010101111" "111011100101" "000010001111" "111100101011" "000011111101" "111110101001" "000100000100" "111110101100" "111010011100" "000011100001" "111101001100" "000100111110" "000011110110" "111011100110" "110101110011" "000010010000" "000001010101" "111111111001" "000001110110" "111011011000" "111100110011" "000011101110" "111101101100" "111111111010" "000011101101" "111101101000" "111000011110" "111011001100" "111111101110" "001000001011" "000100010100" "111110011000" "111101110011" "000001100110" "111010110110" "111110001001" "111011001011" "111101110101" "110110010100" "111011111000" "111101011000" "000011011110" "111110110101" "111110100001" "111001010000" "000010011000" "111111010111" "111001001010" "111110010100" "000111111011" "000010001100" "000100000101" "000001001010" "111101111111" "000100010010" "111100100100" "000000111011" "000010010011" "000001101000" "111000100100" "000000001111" "000000111010" "000001100101" "000001101100" "111110010010" "000011100111" "000011011100" "000000100011" "000001011110" "111101010100" "111011000111" "111100100011" "000010011110" "111100100110" "000101110100" "000001000111" "110101011110" "111100111000" "111111000011" "000001101101" "000001010100" "111101111011" "000001010111" "111110100010" "111101111111" "111101100111" "000010100011" "111111010001" "111010111101" "000000011000" "000100011011" "111001100101" "000000111010" "000000100100" "111110101001" "000011011110" "111111010101" "000011001010" "000000101110" "111111010100" "000001111000" "111011101110" "111110000111" "111111011100" "000100001011" "000001101000" "111110110000" "110110110010" "000000101000" "000000111011" "111111111100" "000001100101" "111100111010" "000101000011" "000100100000" "000001101100" "000010001011" "000010000001" "111111111100" "111010001111" "000011000101" "111110000101" "111101110000" "111101101111" "110111111010" "111110110001" "111110010001" "111100111110" "000100100001" "111100010110" "000101010010" "111101011011" "111011010101" "000000101111" "000000010101" "111110110001" "111111011101" "000001011001" "111101111000" "000000100000" "000101110100" "111100011000" "111101111001" "111101011010" "000010001000" "000100010001" "000010111101" "111111000111" "000000101001" "000011111101" "000010100100" "000010001010" "000010001011" "000000111000" "000010100001" "000000010101" "000001100111" "000001001011" "000100000000" "000001110000" "111111000011" "111010000111" "111110111001" "111010111100" "000100001100" "000001101000" "000010010111" "111111111110" "000011100001" "000001111011" "000010001100" "111110001001" "111011001010" "000001000100" "111000111010" "000000111111" "000001110110" "111100101111" "000010110101" "111110000000" "111000110010" "111100000001" "111111001000" "111111111110" "110110101010" "000000001100" "000011001101" "000000101110" "111111100011" "111100111101" "111111010001" "000000111111" "000001001110" "111110101011" "000000100011" "111100010100" "111111101000" "111111110001" "000010010110" "000001001101" "000000101011" "000010110000" "111101100010" "000000000111" "000010011000" "111110111001" "000010110101" "111111101011" "111101100101" "111100010000" "000011100001" "000001100010" "111110111110" "000000010111" "000000011110" "000001001110" "000100000011" "111010110000" "111010101000" "111100011001" "110101101111" "000010010011" "000000111011" "000101001100" "000011000111" "111011110111" "111100011010" "111101011101" "111111010001" "000001101111" "111100110010" "000001110000" "111011011100" "111011011000" "111000111101" "000010111001" "000100110000" "000011001100" "000010000011" "111110010010" "000010011110" "000010001110" "111011100100" "000001100010" "111101011101" "000100010001" "000001110101" "000101011111" "000000010011" "000001010010" "111111011111" "000100001001" "111111000110" "111100100001" "000011000010" "000011101111" "111100011100" "111011000110" "000000110100" "111100010110" "000001011010" "000011000010" "000010001000" "000010111110" "000011110011" "000101110001" "000101111101" "111001100000" "111011011010" "000010011101" "111000001111" "000011010010" "000111101101" "111011110101" "000000000100" "111011100111" "111010011100" "111100110000" "111101111110" "000010010110" "111110100110" "111110101100" "000001011010" "111111000011" "111100101110" "111100100000" "111100000111" "000100001001" "000001010000" "111100011000" "000001001101" "000000011010" "000011110101" "000000001011" "000000000001" "000011101010" "111101111111" "111110001100" "111100000101" "000001010001" "000000111111" "111100101111" "000010111110" "111111110001" "111010000110" "000000011000" "111111100101" "000001001110" "111110111011" "000000100111" "000000111111" "000110100010" "000010110000" "000000001101" "111101110011" "000010111001" "111101100110" "000100001100" "111100111000" "000000101111" "000001011011" "000000110001" "111110110110" "111011111110" "111011100001" "111101010011" "110101000000" "000110000110" "111110011011" "000100010011" "111000010110" "000101100011" "111101110001" "000000000100" "111011101011" "111111111100" "111111100111" "000100101011" "000001000101" "000111010001" "111001111010" "000011100001" "000000000010" "000010000111" "111110101001" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 15
set hasByteEnable 0
set MemName conv_2_conv_2_biag8j
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 10
set AddrRange 16
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "1100100010" "1101101100" "1011111101" "0010000111" "1100111001" "1110011110" "1110110010" "1100010011" "0010111110" "1101001000" "1111001100" "1111010000" "1100101110" "0000100110" "1011000010" "1110011100" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 16 \
    name input_V \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename input_V \
    op interface \
    ports { input_V_address0 { O 10 vector } input_V_ce0 { O 1 bit } input_V_q0 { I 16 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'input_V'"
}
}


# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 17 \
    name conv_out_V \
    reset_level 1 \
    sync_rst true \
    dir O \
    corename conv_out_V \
    op interface \
    ports { conv_out_V_address0 { O 11 vector } conv_out_V_ce0 { O 1 bit } conv_out_V_we0 { O 1 bit } conv_out_V_d0 { O 16 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'conv_out_V'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


