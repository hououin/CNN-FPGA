// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.032750,HLS_SYN_LAT=119470,HLS_SYN_TPT=none,HLS_SYN_MEM=30,HLS_SYN_DSP=60,HLS_SYN_FF=4137,HLS_SYN_LUT=16211,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_output_Addr_A,
        prediction_output_EN_A,
        prediction_output_WEN_A,
        prediction_output_Din_A,
        prediction_output_Dout_A,
        prediction_output_Clk_A,
        prediction_output_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_state13 = 30'd4096;
parameter    ap_ST_fsm_state14 = 30'd8192;
parameter    ap_ST_fsm_state15 = 30'd16384;
parameter    ap_ST_fsm_state16 = 30'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 30'd65536;
parameter    ap_ST_fsm_state19 = 30'd131072;
parameter    ap_ST_fsm_state20 = 30'd262144;
parameter    ap_ST_fsm_state21 = 30'd524288;
parameter    ap_ST_fsm_state22 = 30'd1048576;
parameter    ap_ST_fsm_state23 = 30'd2097152;
parameter    ap_ST_fsm_state24 = 30'd4194304;
parameter    ap_ST_fsm_state25 = 30'd8388608;
parameter    ap_ST_fsm_state26 = 30'd16777216;
parameter    ap_ST_fsm_state27 = 30'd33554432;
parameter    ap_ST_fsm_state28 = 30'd67108864;
parameter    ap_ST_fsm_state29 = 30'd134217728;
parameter    ap_ST_fsm_state30 = 30'd268435456;
parameter    ap_ST_fsm_state31 = 30'd536870912;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_output_Addr_A;
output   prediction_output_EN_A;
output  [3:0] prediction_output_WEN_A;
output  [31:0] prediction_output_Din_A;
input  [31:0] prediction_output_Dout_A;
output   prediction_output_Clk_A;
output   prediction_output_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;
reg prediction_output_EN_A;
reg[3:0] prediction_output_WEN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [5:0] dense_1_bias_V_address0;
reg    dense_1_bias_V_ce0;
wire   [5:0] dense_1_bias_V_q0;
wire   [14:0] dense_1_weights_V_address0;
reg    dense_1_weights_V_ce0;
wire  signed [8:0] dense_1_weights_V_q0;
wire   [10:0] dense_2_weights_V_address0;
reg    dense_2_weights_V_ce0;
wire  signed [8:0] dense_2_weights_V_q0;
wire   [4:0] dense_2_bias_V_address0;
reg    dense_2_bias_V_ce0;
wire   [8:0] dense_2_bias_V_q0;
wire   [8:0] dense_out_weights_V_address0;
reg    dense_out_weights_V_ce0;
wire  signed [8:0] dense_out_weights_V_q0;
wire   [3:0] dense_out_bias_V_address0;
reg    dense_out_bias_V_ce0;
wire   [7:0] dense_out_bias_V_q0;
reg   [14:0] indvar_flatten_reg_654;
reg   [5:0] i_0_i_reg_665;
reg   [13:0] p_Val2_s_reg_676;
reg   [8:0] j_0_i_reg_688;
wire   [4:0] i_fu_868_p2;
reg   [4:0] i_reg_2005;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_874_p2;
reg   [9:0] ix_in_reg_2010;
wire   [0:0] icmp_ln23_fu_862_p2;
wire   [10:0] sub_ln203_fu_904_p2;
reg   [10:0] sub_ln203_reg_2015;
wire   [4:0] j_1_fu_916_p2;
reg   [4:0] j_1_reg_2023;
wire    ap_CS_fsm_state3;
wire   [10:0] add_ln203_11_fu_926_p2;
reg   [10:0] add_ln203_11_reg_2028;
wire   [0:0] icmp_ln25_fu_910_p2;
wire   [9:0] add_ln28_fu_936_p2;
reg   [9:0] add_ln28_reg_2038;
reg   [31:0] cnn_input_load_reg_2043;
wire    ap_CS_fsm_state4;
wire   [13:0] select_ln603_3_fu_1217_p3;
reg   [13:0] select_ln603_3_reg_2049;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln9_fu_1229_p2;
reg   [0:0] icmp_ln9_reg_2054;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state17_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [14:0] add_ln9_fu_1235_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln13_fu_1247_p2;
reg   [0:0] icmp_ln13_reg_2063;
wire   [5:0] select_ln14_1_fu_1261_p3;
reg   [5:0] select_ln14_1_reg_2068;
wire   [63:0] zext_ln14_fu_1269_p1;
reg   [63:0] zext_ln14_reg_2073;
wire   [8:0] j_fu_1291_p2;
reg   [8:0] j_reg_2088;
wire   [0:0] icmp_ln13_2_fu_1297_p2;
reg   [0:0] icmp_ln13_2_reg_2093;
wire   [13:0] sum_V_fu_1326_p4;
reg    ap_enable_reg_pp0_iter1;
wire   [4:0] i_2_fu_1387_p2;
reg   [4:0] i_2_reg_2110;
wire    ap_CS_fsm_state20;
wire   [63:0] zext_ln14_2_fu_1393_p1;
reg   [63:0] zext_ln14_2_reg_2115;
wire   [0:0] icmp_ln9_1_fu_1381_p2;
wire   [11:0] zext_ln13_3_fu_1397_p1;
reg   [11:0] zext_ln13_3_reg_2121;
wire   [5:0] j_2_fu_1407_p2;
reg   [5:0] j_2_reg_2129;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln13_1_fu_1401_p2;
wire    ap_CS_fsm_state22;
wire   [3:0] d_fu_1530_p2;
reg   [3:0] d_reg_2157;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln48_fu_1536_p1;
reg   [63:0] zext_ln48_reg_2162;
wire   [0:0] icmp_ln41_fu_1524_p2;
wire   [8:0] zext_ln46_fu_1540_p1;
reg   [8:0] zext_ln46_reg_2168;
wire   [4:0] f_fu_1550_p2;
reg   [4:0] f_reg_2176;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln46_fu_1544_p2;
wire    ap_CS_fsm_state26;
wire   [3:0] i_3_fu_1643_p2;
reg   [3:0] i_3_reg_2204;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln70_fu_1649_p1;
reg   [63:0] zext_ln70_reg_2209;
wire   [0:0] icmp_ln69_fu_1637_p2;
wire   [0:0] icmp_ln935_fu_1654_p2;
reg   [0:0] icmp_ln935_reg_2219;
wire    ap_CS_fsm_state30;
wire   [0:0] p_Result_31_fu_1660_p3;
reg   [0:0] p_Result_31_reg_2224;
wire   [13:0] tmp_V_9_fu_1674_p3;
reg   [13:0] tmp_V_9_reg_2229;
wire   [31:0] sub_ln944_fu_1708_p2;
reg   [31:0] sub_ln944_reg_2234;
wire   [31:0] or_ln_fu_1818_p3;
reg   [31:0] or_ln_reg_2240;
wire   [0:0] icmp_ln958_fu_1826_p2;
reg   [0:0] icmp_ln958_reg_2245;
wire   [7:0] trunc_ln943_fu_1832_p1;
reg   [7:0] trunc_ln943_reg_2250;
wire    ap_CS_fsm_state16;
wire    grp_flat_fu_852_ap_ready;
wire    grp_flat_fu_852_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg   [3:0] dense_array_V_address0;
reg    dense_array_V_ce0;
reg    dense_array_V_we0;
reg   [13:0] dense_array_V_d0;
wire   [13:0] dense_array_V_q0;
reg   [9:0] conv_1_input_V_address0;
reg    conv_1_input_V_ce0;
reg    conv_1_input_V_we0;
wire   [13:0] conv_1_input_V_q0;
reg    conv_1_input_V_ce1;
wire   [13:0] conv_1_input_V_q1;
reg   [11:0] conv_1_out_V_address0;
reg    conv_1_out_V_ce0;
reg    conv_1_out_V_we0;
reg   [13:0] conv_1_out_V_d0;
wire   [13:0] conv_1_out_V_q0;
reg    conv_1_out_V_ce1;
reg    conv_1_out_V_we1;
reg   [9:0] max_pool_1_out_V_address0;
reg    max_pool_1_out_V_ce0;
reg    max_pool_1_out_V_we0;
reg   [13:0] max_pool_1_out_V_d0;
wire   [13:0] max_pool_1_out_V_q0;
reg    max_pool_1_out_V_ce1;
wire   [13:0] max_pool_1_out_V_q1;
reg   [10:0] conv_2_out_V_address0;
reg    conv_2_out_V_ce0;
reg    conv_2_out_V_we0;
reg   [13:0] conv_2_out_V_d0;
wire   [13:0] conv_2_out_V_q0;
reg   [8:0] max_pool_2_out_V_address0;
reg    max_pool_2_out_V_ce0;
reg    max_pool_2_out_V_we0;
reg   [13:0] max_pool_2_out_V_d0;
wire   [13:0] max_pool_2_out_V_q0;
reg   [8:0] flat_array_V_address0;
reg    flat_array_V_ce0;
reg    flat_array_V_we0;
reg   [13:0] flat_array_V_d0;
wire  signed [13:0] flat_array_V_q0;
reg   [5:0] dense_1_out_V_address0;
reg    dense_1_out_V_ce0;
reg    dense_1_out_V_we0;
reg   [12:0] dense_1_out_V_d0;
wire   [12:0] dense_1_out_V_q0;
reg   [4:0] dense_2_out_V_address0;
reg    dense_2_out_V_ce0;
reg    dense_2_out_V_we0;
reg   [12:0] dense_2_out_V_d0;
wire   [12:0] dense_2_out_V_q0;
reg   [3:0] prediction_V_address0;
reg    prediction_V_ce0;
reg    prediction_V_we0;
reg   [13:0] prediction_V_d0;
wire   [13:0] prediction_V_q0;
wire    grp_conv_1_fu_778_ap_start;
wire    grp_conv_1_fu_778_ap_done;
wire    grp_conv_1_fu_778_ap_idle;
wire    grp_conv_1_fu_778_ap_ready;
wire   [9:0] grp_conv_1_fu_778_input_V_address0;
wire    grp_conv_1_fu_778_input_V_ce0;
wire   [9:0] grp_conv_1_fu_778_input_V_address1;
wire    grp_conv_1_fu_778_input_V_ce1;
wire   [11:0] grp_conv_1_fu_778_conv_out_V_address0;
wire    grp_conv_1_fu_778_conv_out_V_ce0;
wire    grp_conv_1_fu_778_conv_out_V_we0;
wire   [13:0] grp_conv_1_fu_778_conv_out_V_d0;
wire   [11:0] grp_conv_1_fu_778_conv_out_V_address1;
wire    grp_conv_1_fu_778_conv_out_V_ce1;
wire    grp_conv_1_fu_778_conv_out_V_we1;
wire   [13:0] grp_conv_1_fu_778_conv_out_V_d1;
wire    grp_conv_2_fu_784_ap_start;
wire    grp_conv_2_fu_784_ap_done;
wire    grp_conv_2_fu_784_ap_idle;
wire    grp_conv_2_fu_784_ap_ready;
wire   [9:0] grp_conv_2_fu_784_input_V_address0;
wire    grp_conv_2_fu_784_input_V_ce0;
wire   [9:0] grp_conv_2_fu_784_input_V_address1;
wire    grp_conv_2_fu_784_input_V_ce1;
wire   [10:0] grp_conv_2_fu_784_conv_out_V_address0;
wire    grp_conv_2_fu_784_conv_out_V_ce0;
wire    grp_conv_2_fu_784_conv_out_V_we0;
wire   [13:0] grp_conv_2_fu_784_conv_out_V_d0;
wire    grp_soft_max_fu_828_ap_start;
wire    grp_soft_max_fu_828_ap_done;
wire    grp_soft_max_fu_828_ap_idle;
wire    grp_soft_max_fu_828_ap_ready;
wire   [3:0] grp_soft_max_fu_828_dense_array_V_address0;
wire    grp_soft_max_fu_828_dense_array_V_ce0;
wire    grp_soft_max_fu_828_dense_array_V_we0;
wire   [13:0] grp_soft_max_fu_828_dense_array_V_d0;
wire   [3:0] grp_soft_max_fu_828_prediction_V_address0;
wire    grp_soft_max_fu_828_prediction_V_ce0;
wire    grp_soft_max_fu_828_prediction_V_we0;
wire   [13:0] grp_soft_max_fu_828_prediction_V_d0;
wire    grp_max_pool_1_fu_840_ap_start;
wire    grp_max_pool_1_fu_840_ap_done;
wire    grp_max_pool_1_fu_840_ap_idle;
wire    grp_max_pool_1_fu_840_ap_ready;
wire   [11:0] grp_max_pool_1_fu_840_conv_out_V_address0;
wire    grp_max_pool_1_fu_840_conv_out_V_ce0;
wire   [9:0] grp_max_pool_1_fu_840_max_pool_out_V_address0;
wire    grp_max_pool_1_fu_840_max_pool_out_V_ce0;
wire    grp_max_pool_1_fu_840_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_1_fu_840_max_pool_out_V_d0;
wire    grp_max_pool_2_fu_846_ap_start;
wire    grp_max_pool_2_fu_846_ap_done;
wire    grp_max_pool_2_fu_846_ap_idle;
wire    grp_max_pool_2_fu_846_ap_ready;
wire   [10:0] grp_max_pool_2_fu_846_conv_out_V_address0;
wire    grp_max_pool_2_fu_846_conv_out_V_ce0;
wire   [8:0] grp_max_pool_2_fu_846_max_pool_out_V_address0;
wire    grp_max_pool_2_fu_846_max_pool_out_V_ce0;
wire    grp_max_pool_2_fu_846_max_pool_out_V_we0;
wire   [13:0] grp_max_pool_2_fu_846_max_pool_out_V_d0;
wire    grp_flat_fu_852_ap_start;
wire    grp_flat_fu_852_ap_idle;
wire   [8:0] grp_flat_fu_852_max_pool_out_V_address0;
wire    grp_flat_fu_852_max_pool_out_V_ce0;
wire   [8:0] grp_flat_fu_852_flat_array_V_address0;
wire    grp_flat_fu_852_flat_array_V_ce0;
wire    grp_flat_fu_852_flat_array_V_we0;
wire   [13:0] grp_flat_fu_852_flat_array_V_d0;
reg   [9:0] ix_in_0_reg_610;
reg   [4:0] i_0_reg_622;
reg   [9:0] ix_in_1_reg_633;
wire    ap_CS_fsm_state6;
reg   [4:0] j_0_reg_643;
reg   [5:0] ap_phi_mux_i_0_i_phi_fu_669_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_j_0_i_phi_fu_692_p4;
reg   [4:0] i_0_i5_reg_699;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state23;
reg   [13:0] p_Val2_22_reg_710;
reg   [5:0] j_0_i10_reg_722;
reg   [3:0] d_0_i_reg_733;
wire    ap_CS_fsm_state27;
reg   [13:0] p_Val2_28_reg_744;
reg   [4:0] f_0_i_reg_756;
reg   [3:0] i24_0_reg_767;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state31;
reg    grp_conv_1_fu_778_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_conv_2_fu_784_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_soft_max_fu_828_ap_start_reg;
reg    grp_max_pool_1_fu_840_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_max_pool_2_fu_846_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_flat_fu_852_ap_start_reg;
wire    ap_CS_fsm_state15;
wire   [63:0] zext_ln27_fu_931_p1;
wire  signed [63:0] sext_ln203_fu_1225_p1;
wire   [63:0] zext_ln1117_37_fu_1287_p1;
wire   [63:0] zext_ln14_1_fu_1278_p1;
wire  signed [63:0] sext_ln1117_fu_1453_p1;
wire   [63:0] zext_ln14_3_fu_1413_p1;
wire   [63:0] zext_ln1116_3_fu_1596_p1;
wire   [63:0] zext_ln48_1_fu_1556_p1;
wire   [31:0] cnn_input_Addr_A_orig;
wire   [12:0] select_ln19_fu_1372_p3;
wire   [12:0] select_ln19_1_fu_1515_p3;
wire   [13:0] add_ln703_7_fu_1630_p2;
wire   [31:0] prediction_output_Addr_A_orig;
wire   [9:0] tmp_97_fu_880_p3;
wire   [6:0] tmp_98_fu_892_p3;
wire   [10:0] zext_ln203_fu_888_p1;
wire   [10:0] zext_ln203_20_fu_900_p1;
wire   [10:0] zext_ln203_21_fu_922_p1;
wire   [63:0] grp_fu_858_p1;
wire   [63:0] ireg_V_fu_942_p1;
wire   [10:0] exp_tmp_V_fu_958_p4;
wire   [51:0] trunc_ln565_fu_972_p1;
wire   [52:0] tmp_fu_976_p3;
wire   [53:0] p_Result_30_fu_984_p1;
wire   [0:0] p_Result_29_fu_950_p3;
wire   [53:0] man_V_1_fu_988_p2;
wire   [62:0] trunc_ln556_fu_946_p1;
wire   [11:0] zext_ln461_fu_968_p1;
wire   [11:0] F2_fu_1008_p2;
wire   [0:0] icmp_ln581_fu_1014_p2;
wire   [11:0] add_ln581_fu_1020_p2;
wire   [11:0] sub_ln581_fu_1026_p2;
wire  signed [11:0] sh_amt_fu_1032_p3;
wire   [53:0] man_V_2_fu_994_p3;
wire  signed [31:0] sext_ln581_fu_1040_p1;
wire   [53:0] zext_ln586_fu_1066_p1;
wire   [53:0] ashr_ln586_fu_1070_p2;
wire   [31:0] bitcast_ln696_fu_1080_p1;
wire   [0:0] tmp_105_fu_1083_p3;
wire   [13:0] trunc_ln583_fu_1050_p1;
wire   [13:0] sext_ln581cast_fu_1099_p1;
wire   [0:0] icmp_ln571_fu_1002_p2;
wire   [0:0] icmp_ln582_fu_1044_p2;
wire   [0:0] xor_ln571_fu_1109_p2;
wire   [0:0] or_ln582_fu_1121_p2;
wire   [0:0] xor_ln582_fu_1127_p2;
wire   [0:0] icmp_ln585_fu_1054_p2;
wire   [0:0] and_ln581_fu_1133_p2;
wire   [0:0] xor_ln585_fu_1139_p2;
wire   [0:0] or_ln581_fu_1157_p2;
wire   [0:0] icmp_ln603_fu_1060_p2;
wire   [0:0] xor_ln581_fu_1163_p2;
wire   [0:0] and_ln603_fu_1169_p2;
wire   [13:0] shl_ln604_fu_1103_p2;
wire   [13:0] trunc_ln586_fu_1076_p1;
wire   [0:0] and_ln585_1_fu_1151_p2;
wire   [0:0] and_ln585_fu_1145_p2;
wire   [13:0] select_ln588_fu_1091_p3;
wire   [0:0] and_ln582_fu_1115_p2;
wire   [0:0] or_ln603_fu_1183_p2;
wire   [13:0] select_ln603_fu_1175_p3;
wire   [13:0] select_ln603_1_fu_1189_p3;
wire   [0:0] or_ln603_1_fu_1197_p2;
wire   [0:0] or_ln603_2_fu_1211_p2;
wire   [13:0] select_ln603_2_fu_1203_p3;
wire   [5:0] i_1_fu_1241_p2;
wire   [8:0] select_ln14_fu_1253_p3;
wire   [14:0] grp_fu_1945_p3;
wire   [13:0] select_ln14_2_fu_1311_p3;
wire  signed [21:0] grp_fu_1954_p3;
wire  signed [5:0] sext_ln1265_fu_1335_p0;
wire  signed [5:0] sext_ln703_fu_1348_p0;
wire  signed [13:0] sext_ln1265_fu_1335_p1;
wire   [12:0] trunc_ln_fu_1339_p4;
wire  signed [12:0] sext_ln703_fu_1348_p1;
wire   [13:0] add_ln703_fu_1352_p2;
wire   [0:0] tmp_106_fu_1364_p3;
wire   [12:0] add_ln203_fu_1358_p2;
wire   [10:0] tmp_99_fu_1418_p3;
wire   [6:0] tmp_100_fu_1430_p3;
wire   [11:0] zext_ln1117_38_fu_1426_p1;
wire   [11:0] zext_ln1117_39_fu_1438_p1;
wire   [11:0] sub_ln1117_fu_1442_p2;
wire   [11:0] add_ln1117_23_fu_1448_p2;
wire  signed [21:0] grp_fu_1964_p3;
wire  signed [8:0] sext_ln1265_1_fu_1483_p0;
wire  signed [8:0] sext_ln703_2_fu_1491_p0;
wire  signed [13:0] sext_ln1265_1_fu_1483_p1;
wire  signed [12:0] sext_ln703_2_fu_1491_p1;
wire   [12:0] trunc_ln703_fu_1487_p1;
wire   [13:0] add_ln703_6_fu_1495_p2;
wire   [0:0] tmp_107_fu_1507_p3;
wire   [12:0] add_ln203_1_fu_1501_p2;
wire   [7:0] tmp_101_fu_1561_p3;
wire   [5:0] tmp_102_fu_1573_p3;
wire   [8:0] zext_ln1116_2_fu_1581_p1;
wire   [8:0] zext_ln1116_fu_1569_p1;
wire   [8:0] add_ln1116_fu_1585_p2;
wire   [8:0] add_ln1116_1_fu_1591_p2;
wire  signed [21:0] grp_fu_1973_p3;
wire  signed [13:0] sext_ln1265_2_fu_1626_p1;
wire   [13:0] tmp_V_fu_1668_p2;
reg   [13:0] p_Result_13_fu_1682_p4;
wire   [31:0] p_Result_32_fu_1692_p3;
reg   [31:0] l_fu_1700_p3;
wire   [31:0] lsb_index_fu_1718_p2;
wire   [30:0] tmp_109_fu_1724_p4;
wire   [3:0] trunc_ln947_fu_1740_p1;
wire   [3:0] sub_ln947_fu_1744_p2;
wire   [13:0] zext_ln947_fu_1750_p1;
wire   [13:0] lshr_ln947_fu_1754_p2;
wire   [13:0] p_Result_s_fu_1760_p2;
wire   [0:0] icmp_ln947_fu_1734_p2;
wire   [0:0] icmp_ln947_1_fu_1766_p2;
wire   [0:0] tmp_110_fu_1778_p3;
wire   [13:0] trunc_ln944_fu_1714_p1;
wire   [13:0] add_ln949_fu_1792_p2;
wire   [0:0] p_Result_27_fu_1798_p3;
wire   [0:0] xor_ln949_fu_1786_p2;
wire   [0:0] and_ln949_fu_1806_p2;
wire   [0:0] a_fu_1772_p2;
wire   [0:0] or_ln949_fu_1812_p2;
wire   [31:0] m_fu_1836_p1;
wire   [31:0] add_ln958_fu_1839_p2;
wire   [31:0] sub_ln958_fu_1850_p2;
wire   [31:0] lshr_ln958_fu_1844_p2;
wire   [31:0] shl_ln958_fu_1855_p2;
wire   [31:0] m_7_fu_1861_p3;
wire   [31:0] m_8_fu_1868_p2;
wire   [30:0] m_s_fu_1873_p4;
wire   [0:0] tmp_111_fu_1887_p3;
wire   [7:0] select_ln964_fu_1895_p3;
wire   [7:0] sub_ln964_fu_1903_p2;
wire   [7:0] add_ln964_fu_1908_p2;
wire   [31:0] m_11_fu_1883_p1;
wire   [8:0] tmp_s_fu_1914_p3;
wire   [31:0] p_Result_33_fu_1921_p5;
wire   [31:0] bitcast_ln739_fu_1933_p1;
wire   [8:0] grp_fu_1945_p0;
wire   [6:0] grp_fu_1945_p1;
wire   [5:0] grp_fu_1945_p2;
wire   [21:0] grp_fu_1954_p2;
wire   [12:0] grp_fu_1964_p1;
wire   [21:0] grp_fu_1964_p2;
wire   [12:0] grp_fu_1973_p0;
wire   [21:0] grp_fu_1973_p2;
reg   [29:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [14:0] grp_fu_1945_p00;
wire   [14:0] grp_fu_1945_p20;
wire   [21:0] grp_fu_1964_p10;
wire   [21:0] grp_fu_1973_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 30'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_conv_1_fu_778_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_784_ap_start_reg = 1'b0;
#0 grp_soft_max_fu_828_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_840_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_846_ap_start_reg = 1'b0;
#0 grp_flat_fu_852_ap_start_reg = 1'b0;
end

cnn_dense_1_bias_V #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_bias_V_address0),
    .ce0(dense_1_bias_V_ce0),
    .q0(dense_1_bias_V_q0)
);

cnn_dense_1_weighPgM #(
    .DataWidth( 9 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_weights_V_address0),
    .ce0(dense_1_weights_V_ce0),
    .q0(dense_1_weights_V_q0)
);

cnn_dense_2_weighQgW #(
    .DataWidth( 9 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_V_address0),
    .ce0(dense_2_weights_V_ce0),
    .q0(dense_2_weights_V_q0)
);

cnn_dense_2_bias_V #(
    .DataWidth( 9 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_V_address0),
    .ce0(dense_2_bias_V_ce0),
    .q0(dense_2_bias_V_q0)
);

cnn_dense_out_weiRg6 #(
    .DataWidth( 9 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_out_weights_V_address0),
    .ce0(dense_out_weights_V_ce0),
    .q0(dense_out_weights_V_q0)
);

cnn_dense_out_biaShg #(
    .DataWidth( 8 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_out_bias_V_address0),
    .ce0(dense_out_bias_V_ce0),
    .q0(dense_out_bias_V_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_array_V_address0),
    .ce0(dense_array_V_ce0),
    .we0(dense_array_V_we0),
    .d0(dense_array_V_d0),
    .q0(dense_array_V_q0)
);

cnn_conv_1_input_V #(
    .DataWidth( 14 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_V_address0),
    .ce0(conv_1_input_V_ce0),
    .we0(conv_1_input_V_we0),
    .d0(select_ln603_3_reg_2049),
    .q0(conv_1_input_V_q0),
    .address1(grp_conv_1_fu_778_input_V_address1),
    .ce1(conv_1_input_V_ce1),
    .q1(conv_1_input_V_q1)
);

cnn_conv_1_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_V_address0),
    .ce0(conv_1_out_V_ce0),
    .we0(conv_1_out_V_we0),
    .d0(conv_1_out_V_d0),
    .q0(conv_1_out_V_q0),
    .address1(grp_conv_1_fu_778_conv_out_V_address1),
    .ce1(conv_1_out_V_ce1),
    .we1(conv_1_out_V_we1),
    .d1(grp_conv_1_fu_778_conv_out_V_d1)
);

cnn_max_pool_1_ouThq #(
    .DataWidth( 14 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_V_address0),
    .ce0(max_pool_1_out_V_ce0),
    .we0(max_pool_1_out_V_we0),
    .d0(max_pool_1_out_V_d0),
    .q0(max_pool_1_out_V_q0),
    .address1(grp_conv_2_fu_784_input_V_address1),
    .ce1(max_pool_1_out_V_ce1),
    .q1(max_pool_1_out_V_q1)
);

cnn_conv_2_out_V #(
    .DataWidth( 14 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_V_address0),
    .ce0(conv_2_out_V_ce0),
    .we0(conv_2_out_V_we0),
    .d0(conv_2_out_V_d0),
    .q0(conv_2_out_V_q0)
);

cnn_max_pool_2_ouUhA #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_V_address0),
    .ce0(max_pool_2_out_V_ce0),
    .we0(max_pool_2_out_V_we0),
    .d0(max_pool_2_out_V_d0),
    .q0(max_pool_2_out_V_q0)
);

cnn_max_pool_2_ouUhA #(
    .DataWidth( 14 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_V_address0),
    .ce0(flat_array_V_ce0),
    .we0(flat_array_V_we0),
    .d0(flat_array_V_d0),
    .q0(flat_array_V_q0)
);

cnn_dense_1_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_V_address0),
    .ce0(dense_1_out_V_ce0),
    .we0(dense_1_out_V_we0),
    .d0(dense_1_out_V_d0),
    .q0(dense_1_out_V_q0)
);

cnn_dense_2_out_V #(
    .DataWidth( 13 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_V_address0),
    .ce0(dense_2_out_V_ce0),
    .we0(dense_2_out_V_we0),
    .d0(dense_2_out_V_d0),
    .q0(dense_2_out_V_q0)
);

cnn_dense_array_V #(
    .DataWidth( 14 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
prediction_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(prediction_V_address0),
    .ce0(prediction_V_ce0),
    .we0(prediction_V_we0),
    .d0(prediction_V_d0),
    .q0(prediction_V_q0)
);

conv_1 grp_conv_1_fu_778(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_778_ap_start),
    .ap_done(grp_conv_1_fu_778_ap_done),
    .ap_idle(grp_conv_1_fu_778_ap_idle),
    .ap_ready(grp_conv_1_fu_778_ap_ready),
    .input_V_address0(grp_conv_1_fu_778_input_V_address0),
    .input_V_ce0(grp_conv_1_fu_778_input_V_ce0),
    .input_V_q0(conv_1_input_V_q0),
    .input_V_address1(grp_conv_1_fu_778_input_V_address1),
    .input_V_ce1(grp_conv_1_fu_778_input_V_ce1),
    .input_V_q1(conv_1_input_V_q1),
    .conv_out_V_address0(grp_conv_1_fu_778_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_1_fu_778_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_1_fu_778_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_1_fu_778_conv_out_V_d0),
    .conv_out_V_address1(grp_conv_1_fu_778_conv_out_V_address1),
    .conv_out_V_ce1(grp_conv_1_fu_778_conv_out_V_ce1),
    .conv_out_V_we1(grp_conv_1_fu_778_conv_out_V_we1),
    .conv_out_V_d1(grp_conv_1_fu_778_conv_out_V_d1)
);

conv_2 grp_conv_2_fu_784(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_784_ap_start),
    .ap_done(grp_conv_2_fu_784_ap_done),
    .ap_idle(grp_conv_2_fu_784_ap_idle),
    .ap_ready(grp_conv_2_fu_784_ap_ready),
    .input_V_address0(grp_conv_2_fu_784_input_V_address0),
    .input_V_ce0(grp_conv_2_fu_784_input_V_ce0),
    .input_V_q0(max_pool_1_out_V_q0),
    .input_V_address1(grp_conv_2_fu_784_input_V_address1),
    .input_V_ce1(grp_conv_2_fu_784_input_V_ce1),
    .input_V_q1(max_pool_1_out_V_q1),
    .conv_out_V_address0(grp_conv_2_fu_784_conv_out_V_address0),
    .conv_out_V_ce0(grp_conv_2_fu_784_conv_out_V_ce0),
    .conv_out_V_we0(grp_conv_2_fu_784_conv_out_V_we0),
    .conv_out_V_d0(grp_conv_2_fu_784_conv_out_V_d0)
);

soft_max grp_soft_max_fu_828(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_soft_max_fu_828_ap_start),
    .ap_done(grp_soft_max_fu_828_ap_done),
    .ap_idle(grp_soft_max_fu_828_ap_idle),
    .ap_ready(grp_soft_max_fu_828_ap_ready),
    .dense_array_V_address0(grp_soft_max_fu_828_dense_array_V_address0),
    .dense_array_V_ce0(grp_soft_max_fu_828_dense_array_V_ce0),
    .dense_array_V_we0(grp_soft_max_fu_828_dense_array_V_we0),
    .dense_array_V_d0(grp_soft_max_fu_828_dense_array_V_d0),
    .dense_array_V_q0(dense_array_V_q0),
    .prediction_V_address0(grp_soft_max_fu_828_prediction_V_address0),
    .prediction_V_ce0(grp_soft_max_fu_828_prediction_V_ce0),
    .prediction_V_we0(grp_soft_max_fu_828_prediction_V_we0),
    .prediction_V_d0(grp_soft_max_fu_828_prediction_V_d0)
);

max_pool_1 grp_max_pool_1_fu_840(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_840_ap_start),
    .ap_done(grp_max_pool_1_fu_840_ap_done),
    .ap_idle(grp_max_pool_1_fu_840_ap_idle),
    .ap_ready(grp_max_pool_1_fu_840_ap_ready),
    .conv_out_V_address0(grp_max_pool_1_fu_840_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_1_fu_840_conv_out_V_ce0),
    .conv_out_V_q0(conv_1_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_1_fu_840_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_1_fu_840_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_1_fu_840_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_1_fu_840_max_pool_out_V_d0)
);

max_pool_2 grp_max_pool_2_fu_846(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_846_ap_start),
    .ap_done(grp_max_pool_2_fu_846_ap_done),
    .ap_idle(grp_max_pool_2_fu_846_ap_idle),
    .ap_ready(grp_max_pool_2_fu_846_ap_ready),
    .conv_out_V_address0(grp_max_pool_2_fu_846_conv_out_V_address0),
    .conv_out_V_ce0(grp_max_pool_2_fu_846_conv_out_V_ce0),
    .conv_out_V_q0(conv_2_out_V_q0),
    .max_pool_out_V_address0(grp_max_pool_2_fu_846_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_max_pool_2_fu_846_max_pool_out_V_ce0),
    .max_pool_out_V_we0(grp_max_pool_2_fu_846_max_pool_out_V_we0),
    .max_pool_out_V_d0(grp_max_pool_2_fu_846_max_pool_out_V_d0)
);

flat grp_flat_fu_852(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_852_ap_start),
    .ap_done(grp_flat_fu_852_ap_done),
    .ap_idle(grp_flat_fu_852_ap_idle),
    .ap_ready(grp_flat_fu_852_ap_ready),
    .max_pool_out_V_address0(grp_flat_fu_852_max_pool_out_V_address0),
    .max_pool_out_V_ce0(grp_flat_fu_852_max_pool_out_V_ce0),
    .max_pool_out_V_q0(max_pool_2_out_V_q0),
    .flat_array_V_address0(grp_flat_fu_852_flat_array_V_address0),
    .flat_array_V_ce0(grp_flat_fu_852_flat_array_V_ce0),
    .flat_array_V_we0(grp_flat_fu_852_flat_array_V_we0),
    .flat_array_V_d0(grp_flat_fu_852_flat_array_V_d0)
);

cnn_fpext_32ns_64VhK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
cnn_fpext_32ns_64VhK_U111(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(cnn_input_Dout_A),
    .ce(1'b1),
    .dout(grp_fu_858_p1)
);

cnn_mac_muladd_9nWhU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
cnn_mac_muladd_9nWhU_U112(
    .din0(grp_fu_1945_p0),
    .din1(grp_fu_1945_p1),
    .din2(grp_fu_1945_p2),
    .dout(grp_fu_1945_p3)
);

cnn_mac_muladd_14Xh4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_14Xh4_U113(
    .din0(flat_array_V_q0),
    .din1(dense_1_weights_V_q0),
    .din2(grp_fu_1954_p2),
    .dout(grp_fu_1954_p3)
);

cnn_mac_muladd_9sYie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 13 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_9sYie_U114(
    .din0(dense_2_weights_V_q0),
    .din1(grp_fu_1964_p1),
    .din2(grp_fu_1964_p2),
    .dout(grp_fu_1964_p3)
);

cnn_mac_muladd_13Zio #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
cnn_mac_muladd_13Zio_U115(
    .din0(grp_fu_1973_p0),
    .din1(dense_out_weights_V_q0),
    .din2(grp_fu_1973_p2),
    .dout(grp_fu_1973_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_778_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_conv_1_fu_778_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_778_ap_ready == 1'b1)) begin
            grp_conv_1_fu_778_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_784_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_conv_2_fu_784_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_784_ap_ready == 1'b1)) begin
            grp_conv_2_fu_784_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_852_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_flat_fu_852_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_852_ap_ready == 1'b1)) begin
            grp_flat_fu_852_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_840_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_max_pool_1_fu_840_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_840_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_840_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_846_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_max_pool_2_fu_846_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_846_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_846_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_soft_max_fu_828_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln41_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
            grp_soft_max_fu_828_ap_start_reg <= 1'b1;
        end else if ((grp_soft_max_fu_828_ap_ready == 1'b1)) begin
            grp_soft_max_fu_828_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        d_0_i_reg_733 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        d_0_i_reg_733 <= d_reg_2157;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        f_0_i_reg_756 <= f_reg_2176;
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln41_fu_1524_p2 == 1'd0))) begin
        f_0_i_reg_756 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i24_0_reg_767 <= i_3_reg_2204;
    end else if (((grp_soft_max_fu_828_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        i24_0_reg_767 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_0_i5_reg_699 <= i_2_reg_2110;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_0_i5_reg_699 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2054 == 1'd0))) begin
        i_0_i_reg_665 <= select_ln14_1_reg_2068;
    end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        i_0_i_reg_665 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_910_p2 == 1'd1))) begin
        i_0_reg_622 <= i_reg_2005;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_622 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1229_p2 == 1'd0))) begin
        indvar_flatten_reg_654 <= add_ln9_fu_1235_p2;
    end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        indvar_flatten_reg_654 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_910_p2 == 1'd1))) begin
        ix_in_0_reg_610 <= ix_in_reg_2010;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_610 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ix_in_1_reg_633 <= add_ln28_reg_2038;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd0))) begin
        ix_in_1_reg_633 <= ix_in_0_reg_610;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        j_0_i10_reg_722 <= j_2_reg_2129;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln9_1_fu_1381_p2 == 1'd0))) begin
        j_0_i10_reg_722 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2054 == 1'd0))) begin
        j_0_i_reg_688 <= j_reg_2088;
    end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        j_0_i_reg_688 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_643 <= j_1_reg_2023;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd0))) begin
        j_0_reg_643 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        p_Val2_22_reg_710 <= {{grp_fu_1964_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln9_1_fu_1381_p2 == 1'd0))) begin
        p_Val2_22_reg_710 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        p_Val2_28_reg_744 <= {{grp_fu_1973_p3[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln41_fu_1524_p2 == 1'd0))) begin
        p_Val2_28_reg_744 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2054 == 1'd0))) begin
        p_Val2_s_reg_676 <= {{grp_fu_1954_p3[21:8]}};
    end else if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        p_Val2_s_reg_676 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_910_p2 == 1'd0))) begin
        add_ln203_11_reg_2028 <= add_ln203_11_fu_926_p2;
        add_ln28_reg_2038 <= add_ln28_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cnn_input_load_reg_2043 <= cnn_input_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        d_reg_2157 <= d_fu_1530_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        f_reg_2176 <= f_fu_1550_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_2_reg_2110 <= i_2_fu_1387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        i_3_reg_2204 <= i_3_fu_1643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2005 <= i_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1229_p2 == 1'd0))) begin
        icmp_ln13_2_reg_2093 <= icmp_ln13_2_fu_1297_p2;
        icmp_ln13_reg_2063 <= icmp_ln13_fu_1247_p2;
        zext_ln14_reg_2073[5 : 0] <= zext_ln14_fu_1269_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        icmp_ln935_reg_2219 <= icmp_ln935_fu_1654_p2;
        icmp_ln958_reg_2245 <= icmp_ln958_fu_1826_p2;
        or_ln_reg_2240[0] <= or_ln_fu_1818_p3[0];
        p_Result_31_reg_2224 <= prediction_V_q0[32'd13];
        sub_ln944_reg_2234 <= sub_ln944_fu_1708_p2;
        tmp_V_9_reg_2229 <= tmp_V_9_fu_1674_p3;
        trunc_ln943_reg_2250 <= trunc_ln943_fu_1832_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln9_reg_2054 <= icmp_ln9_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd0))) begin
        ix_in_reg_2010 <= ix_in_fu_874_p2;
        sub_ln203_reg_2015[10 : 2] <= sub_ln203_fu_904_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_2023 <= j_1_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_2_reg_2129 <= j_2_fu_1407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_1229_p2 == 1'd0))) begin
        j_reg_2088 <= j_fu_1291_p2;
        select_ln14_1_reg_2068 <= select_ln14_1_fu_1261_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_2049 <= select_ln603_3_fu_1217_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln9_1_fu_1381_p2 == 1'd0))) begin
        zext_ln13_3_reg_2121[4 : 0] <= zext_ln13_3_fu_1397_p1[4 : 0];
        zext_ln14_2_reg_2115[4 : 0] <= zext_ln14_2_fu_1393_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln41_fu_1524_p2 == 1'd0))) begin
        zext_ln46_reg_2168[3 : 0] <= zext_ln46_fu_1540_p1[3 : 0];
        zext_ln48_reg_2162[3 : 0] <= zext_ln48_fu_1536_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln69_fu_1637_p2 == 1'd0))) begin
        zext_ln70_reg_2209[3 : 0] <= zext_ln70_fu_1649_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_1229_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_1637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2054 == 1'd0))) begin
        ap_phi_mux_i_0_i_phi_fu_669_p4 = select_ln14_1_reg_2068;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_669_p4 = i_0_i_reg_665;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_reg_2054 == 1'd0))) begin
        ap_phi_mux_j_0_i_phi_fu_692_p4 = j_reg_2088;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_692_p4 = j_0_i_reg_688;
    end
end

always @ (*) begin
    if (((icmp_ln69_fu_1637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_address0 = sext_ln203_fu_1225_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_address0 = grp_conv_1_fu_778_input_V_address0;
    end else begin
        conv_1_input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce0 = grp_conv_1_fu_778_input_V_ce0;
    end else begin
        conv_1_input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_input_V_ce1 = grp_conv_1_fu_778_input_V_ce1;
    end else begin
        conv_1_input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_V_we0 = 1'b1;
    end else begin
        conv_1_input_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_address0 = grp_max_pool_1_fu_840_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_address0 = grp_conv_1_fu_778_conv_out_V_address0;
    end else begin
        conv_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_1_out_V_ce0 = grp_max_pool_1_fu_840_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce0 = grp_conv_1_fu_778_conv_out_V_ce0;
    end else begin
        conv_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_ce1 = grp_conv_1_fu_778_conv_out_V_ce1;
    end else begin
        conv_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_d0 = grp_conv_1_fu_778_conv_out_V_d0;
    end else begin
        conv_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd1))) begin
        conv_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we0 = grp_conv_1_fu_778_conv_out_V_we0;
    end else begin
        conv_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_V_we1 = grp_conv_1_fu_778_conv_out_V_we1;
    end else begin
        conv_1_out_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_address0 = grp_max_pool_2_fu_846_conv_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_address0 = grp_conv_2_fu_784_conv_out_V_address0;
    end else begin
        conv_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_2_out_V_ce0 = grp_max_pool_2_fu_846_conv_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_ce0 = grp_conv_2_fu_784_conv_out_V_ce0;
    end else begin
        conv_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_d0 = grp_conv_2_fu_784_conv_out_V_d0;
    end else begin
        conv_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd1))) begin
        conv_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_V_we0 = grp_conv_2_fu_784_conv_out_V_we0;
    end else begin
        conv_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_bias_V_ce0 = 1'b1;
    end else begin
        dense_1_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dense_1_out_V_address0 = zext_ln14_3_fu_1413_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_V_address0 = zext_ln14_reg_2073;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_address0 = 64'd0;
    end else begin
        dense_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_ce0 = 1'b1;
    end else begin
        dense_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_V_d0 = select_ln19_fu_1372_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_1_out_V_d0 = 13'd0;
    end else begin
        dense_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln13_2_reg_2093 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dense_1_out_V_we0 = 1'b1;
    end else begin
        dense_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_weights_V_ce0 = 1'b1;
    end else begin
        dense_1_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dense_2_bias_V_ce0 = 1'b1;
    end else begin
        dense_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        dense_2_out_V_address0 = zext_ln48_1_fu_1556_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        dense_2_out_V_address0 = zext_ln14_2_reg_2115;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_V_address0 = 64'd0;
    end else begin
        dense_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state25))) begin
        dense_2_out_V_ce0 = 1'b1;
    end else begin
        dense_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dense_2_out_V_d0 = select_ln19_1_fu_1515_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_V_d0 = 13'd0;
    end else begin
        dense_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state19))) begin
        dense_2_out_V_we0 = 1'b1;
    end else begin
        dense_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        dense_2_weights_V_ce0 = 1'b1;
    end else begin
        dense_2_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_address0 = zext_ln48_reg_2162;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_address0 = grp_soft_max_fu_828_dense_array_V_address0;
    end else begin
        dense_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_ce0 = grp_soft_max_fu_828_dense_array_V_ce0;
    end else begin
        dense_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_d0 = add_ln703_7_fu_1630_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_d0 = grp_soft_max_fu_828_dense_array_V_d0;
    end else begin
        dense_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        dense_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_array_V_we0 = grp_soft_max_fu_828_dense_array_V_we0;
    end else begin
        dense_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        dense_out_bias_V_ce0 = 1'b1;
    end else begin
        dense_out_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        dense_out_weights_V_ce0 = 1'b1;
    end else begin
        dense_out_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_V_address0 = zext_ln14_1_fu_1278_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_address0 = grp_flat_fu_852_flat_array_V_address0;
    end else begin
        flat_array_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_max_pool_2_fu_846_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        flat_array_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_ce0 = grp_flat_fu_852_flat_array_V_ce0;
    end else begin
        flat_array_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_d0 = grp_flat_fu_852_flat_array_V_d0;
    end else begin
        flat_array_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_max_pool_2_fu_846_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        flat_array_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        flat_array_V_we0 = grp_flat_fu_852_flat_array_V_we0;
    end else begin
        flat_array_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_address0 = grp_max_pool_1_fu_840_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_address0 = grp_conv_2_fu_784_input_V_address0;
    end else begin
        max_pool_1_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_ce0 = grp_max_pool_1_fu_840_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce0 = grp_conv_2_fu_784_input_V_ce0;
    end else begin
        max_pool_1_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_1_out_V_ce1 = grp_conv_2_fu_784_input_V_ce1;
    end else begin
        max_pool_1_out_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_1_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_d0 = grp_max_pool_1_fu_840_max_pool_out_V_d0;
    end else begin
        max_pool_1_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd1))) begin
        max_pool_1_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_V_we0 = grp_max_pool_1_fu_840_max_pool_out_V_we0;
    end else begin
        max_pool_1_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_address0 = grp_flat_fu_852_max_pool_out_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_address0 = grp_max_pool_2_fu_846_max_pool_out_V_address0;
    end else begin
        max_pool_2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_2_out_V_ce0 = grp_flat_fu_852_max_pool_out_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_ce0 = grp_max_pool_2_fu_846_max_pool_out_V_ce0;
    end else begin
        max_pool_2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        max_pool_2_out_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_d0 = grp_max_pool_2_fu_846_max_pool_out_V_d0;
    end else begin
        max_pool_2_out_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd1))) begin
        max_pool_2_out_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_V_we0 = grp_max_pool_2_fu_846_max_pool_out_V_we0;
    end else begin
        max_pool_2_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        prediction_V_address0 = zext_ln70_fu_1649_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        prediction_V_address0 = grp_soft_max_fu_828_prediction_V_address0;
    end else begin
        prediction_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state20))) begin
        prediction_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        prediction_V_ce0 = grp_soft_max_fu_828_prediction_V_ce0;
    end else begin
        prediction_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        prediction_V_d0 = 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        prediction_V_d0 = grp_soft_max_fu_828_prediction_V_d0;
    end else begin
        prediction_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln9_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        prediction_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        prediction_V_we0 = grp_soft_max_fu_828_prediction_V_we0;
    end else begin
        prediction_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        prediction_output_EN_A = 1'b1;
    end else begin
        prediction_output_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        prediction_output_WEN_A = 4'd15;
    end else begin
        prediction_output_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_862_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_910_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_conv_1_fu_778_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_max_pool_1_fu_840_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_conv_2_fu_784_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_max_pool_2_fu_846_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_flat_fu_852_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1229_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1229_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln9_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln13_1_fu_1401_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln41_fu_1524_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln46_fu_1544_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state28 : begin
            if (((grp_soft_max_fu_828_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln69_fu_1637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1008_p2 = (12'd1075 - zext_ln461_fu_968_p1);

assign a_fu_1772_p2 = (icmp_ln947_fu_1734_p2 & icmp_ln947_1_fu_1766_p2);

assign add_ln1116_1_fu_1591_p2 = (add_ln1116_fu_1585_p2 + zext_ln46_reg_2168);

assign add_ln1116_fu_1585_p2 = (zext_ln1116_2_fu_1581_p1 + zext_ln1116_fu_1569_p1);

assign add_ln1117_23_fu_1448_p2 = (sub_ln1117_fu_1442_p2 + zext_ln13_3_reg_2121);

assign add_ln203_11_fu_926_p2 = (sub_ln203_reg_2015 + zext_ln203_21_fu_922_p1);

assign add_ln203_1_fu_1501_p2 = ($signed(sext_ln703_2_fu_1491_p1) + $signed(trunc_ln703_fu_1487_p1));

assign add_ln203_fu_1358_p2 = ($signed(trunc_ln_fu_1339_p4) + $signed(sext_ln703_fu_1348_p1));

assign add_ln28_fu_936_p2 = (10'd1 + ix_in_1_reg_633);

assign add_ln581_fu_1020_p2 = ($signed(12'd4088) + $signed(F2_fu_1008_p2));

assign add_ln703_6_fu_1495_p2 = ($signed(p_Val2_22_reg_710) + $signed(sext_ln1265_1_fu_1483_p1));

assign add_ln703_7_fu_1630_p2 = ($signed(sext_ln1265_2_fu_1626_p1) + $signed(p_Val2_28_reg_744));

assign add_ln703_fu_1352_p2 = ($signed(sext_ln1265_fu_1335_p1) + $signed(sum_V_fu_1326_p4));

assign add_ln949_fu_1792_p2 = ($signed(14'd16360) + $signed(trunc_ln944_fu_1714_p1));

assign add_ln958_fu_1839_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_2234));

assign add_ln964_fu_1908_p2 = (select_ln964_fu_1895_p3 + sub_ln964_fu_1903_p2);

assign add_ln9_fu_1235_p2 = (indvar_flatten_reg_654 + 15'd1);

assign and_ln581_fu_1133_p2 = (xor_ln582_fu_1127_p2 & icmp_ln581_fu_1014_p2);

assign and_ln582_fu_1115_p2 = (xor_ln571_fu_1109_p2 & icmp_ln582_fu_1044_p2);

assign and_ln585_1_fu_1151_p2 = (icmp_ln585_fu_1054_p2 & and_ln581_fu_1133_p2);

assign and_ln585_fu_1145_p2 = (xor_ln585_fu_1139_p2 & and_ln581_fu_1133_p2);

assign and_ln603_fu_1169_p2 = (xor_ln581_fu_1163_p2 & icmp_ln603_fu_1060_p2);

assign and_ln949_fu_1806_p2 = (xor_ln949_fu_1786_p2 & p_Result_27_fu_1798_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ashr_ln586_fu_1070_p2 = $signed(man_V_2_fu_994_p3) >>> zext_ln586_fu_1066_p1;

assign bitcast_ln696_fu_1080_p1 = cnn_input_load_reg_2043;

assign bitcast_ln739_fu_1933_p1 = p_Result_33_fu_1921_p5;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_fu_931_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign d_fu_1530_p2 = (d_0_i_reg_733 + 4'd1);

assign dense_1_bias_V_address0 = zext_ln14_fu_1269_p1;

assign dense_1_weights_V_address0 = zext_ln1117_37_fu_1287_p1;

assign dense_2_bias_V_address0 = zext_ln14_2_reg_2115;

assign dense_2_weights_V_address0 = sext_ln1117_fu_1453_p1;

assign dense_out_bias_V_address0 = zext_ln48_reg_2162;

assign dense_out_weights_V_address0 = zext_ln1116_3_fu_1596_p1;

assign exp_tmp_V_fu_958_p4 = {{ireg_V_fu_942_p1[62:52]}};

assign f_fu_1550_p2 = (f_0_i_reg_756 + 5'd1);

assign grp_conv_1_fu_778_ap_start = grp_conv_1_fu_778_ap_start_reg;

assign grp_conv_2_fu_784_ap_start = grp_conv_2_fu_784_ap_start_reg;

assign grp_flat_fu_852_ap_start = grp_flat_fu_852_ap_start_reg;

assign grp_fu_1945_p0 = grp_fu_1945_p00;

assign grp_fu_1945_p00 = select_ln14_fu_1253_p3;

assign grp_fu_1945_p1 = 15'd50;

assign grp_fu_1945_p2 = grp_fu_1945_p20;

assign grp_fu_1945_p20 = select_ln14_1_fu_1261_p3;

assign grp_fu_1954_p2 = {{select_ln14_2_fu_1311_p3}, {8'd0}};

assign grp_fu_1964_p1 = grp_fu_1964_p10;

assign grp_fu_1964_p10 = dense_1_out_V_q0;

assign grp_fu_1964_p2 = {{p_Val2_22_reg_710}, {8'd0}};

assign grp_fu_1973_p0 = grp_fu_1973_p00;

assign grp_fu_1973_p00 = dense_2_out_V_q0;

assign grp_fu_1973_p2 = {{p_Val2_28_reg_744}, {8'd0}};

assign grp_max_pool_1_fu_840_ap_start = grp_max_pool_1_fu_840_ap_start_reg;

assign grp_max_pool_2_fu_846_ap_start = grp_max_pool_2_fu_846_ap_start_reg;

assign grp_soft_max_fu_828_ap_start = grp_soft_max_fu_828_ap_start_reg;

assign i_1_fu_1241_p2 = (ap_phi_mux_i_0_i_phi_fu_669_p4 + 6'd1);

assign i_2_fu_1387_p2 = (i_0_i5_reg_699 + 5'd1);

assign i_3_fu_1643_p2 = (i24_0_reg_767 + 4'd1);

assign i_fu_868_p2 = (i_0_reg_622 + 5'd1);

assign icmp_ln13_1_fu_1401_p2 = ((j_0_i10_reg_722 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_1297_p2 = ((j_fu_1291_p2 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1247_p2 = ((ap_phi_mux_j_0_i_phi_fu_692_p4 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_862_p2 = ((i_0_reg_622 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_910_p2 = ((j_0_reg_643 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1524_p2 = ((d_0_i_reg_733 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1544_p2 = ((f_0_i_reg_756 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1002_p2 = ((trunc_ln556_fu_946_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1014_p2 = (($signed(F2_fu_1008_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1044_p2 = ((F2_fu_1008_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1054_p2 = ((sh_amt_fu_1032_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1060_p2 = ((sh_amt_fu_1032_p3 < 12'd14) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1637_p2 = ((i24_0_reg_767 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1654_p2 = ((prediction_V_q0 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1766_p2 = ((p_Result_s_fu_1760_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1734_p2 = (($signed(tmp_109_fu_1724_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1826_p2 = (($signed(lsb_index_fu_1718_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1381_p2 = ((i_0_i5_reg_699 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1229_p2 = ((indvar_flatten_reg_654 == 15'd20000) ? 1'b1 : 1'b0);

assign ireg_V_fu_942_p1 = grp_fu_858_p1;

assign ix_in_fu_874_p2 = (ix_in_0_reg_610 + 10'd28);

assign j_1_fu_916_p2 = (j_0_reg_643 + 5'd1);

assign j_2_fu_1407_p2 = (j_0_i10_reg_722 + 6'd1);

assign j_fu_1291_p2 = (select_ln14_fu_1253_p3 + 9'd1);


always @ (p_Result_32_fu_1692_p3) begin
    if (p_Result_32_fu_1692_p3[0] == 1'b1) begin
        l_fu_1700_p3 = 32'd0;
    end else if (p_Result_32_fu_1692_p3[1] == 1'b1) begin
        l_fu_1700_p3 = 32'd1;
    end else if (p_Result_32_fu_1692_p3[2] == 1'b1) begin
        l_fu_1700_p3 = 32'd2;
    end else if (p_Result_32_fu_1692_p3[3] == 1'b1) begin
        l_fu_1700_p3 = 32'd3;
    end else if (p_Result_32_fu_1692_p3[4] == 1'b1) begin
        l_fu_1700_p3 = 32'd4;
    end else if (p_Result_32_fu_1692_p3[5] == 1'b1) begin
        l_fu_1700_p3 = 32'd5;
    end else if (p_Result_32_fu_1692_p3[6] == 1'b1) begin
        l_fu_1700_p3 = 32'd6;
    end else if (p_Result_32_fu_1692_p3[7] == 1'b1) begin
        l_fu_1700_p3 = 32'd7;
    end else if (p_Result_32_fu_1692_p3[8] == 1'b1) begin
        l_fu_1700_p3 = 32'd8;
    end else if (p_Result_32_fu_1692_p3[9] == 1'b1) begin
        l_fu_1700_p3 = 32'd9;
    end else if (p_Result_32_fu_1692_p3[10] == 1'b1) begin
        l_fu_1700_p3 = 32'd10;
    end else if (p_Result_32_fu_1692_p3[11] == 1'b1) begin
        l_fu_1700_p3 = 32'd11;
    end else if (p_Result_32_fu_1692_p3[12] == 1'b1) begin
        l_fu_1700_p3 = 32'd12;
    end else if (p_Result_32_fu_1692_p3[13] == 1'b1) begin
        l_fu_1700_p3 = 32'd13;
    end else if (p_Result_32_fu_1692_p3[14] == 1'b1) begin
        l_fu_1700_p3 = 32'd14;
    end else if (p_Result_32_fu_1692_p3[15] == 1'b1) begin
        l_fu_1700_p3 = 32'd15;
    end else if (p_Result_32_fu_1692_p3[16] == 1'b1) begin
        l_fu_1700_p3 = 32'd16;
    end else if (p_Result_32_fu_1692_p3[17] == 1'b1) begin
        l_fu_1700_p3 = 32'd17;
    end else if (p_Result_32_fu_1692_p3[18] == 1'b1) begin
        l_fu_1700_p3 = 32'd18;
    end else if (p_Result_32_fu_1692_p3[19] == 1'b1) begin
        l_fu_1700_p3 = 32'd19;
    end else if (p_Result_32_fu_1692_p3[20] == 1'b1) begin
        l_fu_1700_p3 = 32'd20;
    end else if (p_Result_32_fu_1692_p3[21] == 1'b1) begin
        l_fu_1700_p3 = 32'd21;
    end else if (p_Result_32_fu_1692_p3[22] == 1'b1) begin
        l_fu_1700_p3 = 32'd22;
    end else if (p_Result_32_fu_1692_p3[23] == 1'b1) begin
        l_fu_1700_p3 = 32'd23;
    end else if (p_Result_32_fu_1692_p3[24] == 1'b1) begin
        l_fu_1700_p3 = 32'd24;
    end else if (p_Result_32_fu_1692_p3[25] == 1'b1) begin
        l_fu_1700_p3 = 32'd25;
    end else if (p_Result_32_fu_1692_p3[26] == 1'b1) begin
        l_fu_1700_p3 = 32'd26;
    end else if (p_Result_32_fu_1692_p3[27] == 1'b1) begin
        l_fu_1700_p3 = 32'd27;
    end else if (p_Result_32_fu_1692_p3[28] == 1'b1) begin
        l_fu_1700_p3 = 32'd28;
    end else if (p_Result_32_fu_1692_p3[29] == 1'b1) begin
        l_fu_1700_p3 = 32'd29;
    end else if (p_Result_32_fu_1692_p3[30] == 1'b1) begin
        l_fu_1700_p3 = 32'd30;
    end else if (p_Result_32_fu_1692_p3[31] == 1'b1) begin
        l_fu_1700_p3 = 32'd31;
    end else begin
        l_fu_1700_p3 = 32'd32;
    end
end

assign lsb_index_fu_1718_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1708_p2));

assign lshr_ln947_fu_1754_p2 = 14'd16383 >> zext_ln947_fu_1750_p1;

assign lshr_ln958_fu_1844_p2 = m_fu_1836_p1 >> add_ln958_fu_1839_p2;

assign m_11_fu_1883_p1 = m_s_fu_1873_p4;

assign m_7_fu_1861_p3 = ((icmp_ln958_reg_2245[0:0] === 1'b1) ? lshr_ln958_fu_1844_p2 : shl_ln958_fu_1855_p2);

assign m_8_fu_1868_p2 = (m_7_fu_1861_p3 + or_ln_reg_2240);

assign m_fu_1836_p1 = tmp_V_9_reg_2229;

assign m_s_fu_1873_p4 = {{m_8_fu_1868_p2[31:1]}};

assign man_V_1_fu_988_p2 = (54'd0 - p_Result_30_fu_984_p1);

assign man_V_2_fu_994_p3 = ((p_Result_29_fu_950_p3[0:0] === 1'b1) ? man_V_1_fu_988_p2 : p_Result_30_fu_984_p1);

assign or_ln581_fu_1157_p2 = (or_ln582_fu_1121_p2 | icmp_ln581_fu_1014_p2);

assign or_ln582_fu_1121_p2 = (icmp_ln582_fu_1044_p2 | icmp_ln571_fu_1002_p2);

assign or_ln603_1_fu_1197_p2 = (and_ln585_fu_1145_p2 | and_ln582_fu_1115_p2);

assign or_ln603_2_fu_1211_p2 = (or_ln603_fu_1183_p2 | or_ln603_1_fu_1197_p2);

assign or_ln603_fu_1183_p2 = (and_ln603_fu_1169_p2 | and_ln585_1_fu_1151_p2);

assign or_ln949_fu_1812_p2 = (and_ln949_fu_1806_p2 | a_fu_1772_p2);

assign or_ln_fu_1818_p3 = {{31'd0}, {or_ln949_fu_1812_p2}};

integer ap_tvar_int_0;

always @ (tmp_V_9_fu_1674_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_13_fu_1682_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_13_fu_1682_p4[ap_tvar_int_0] = tmp_V_9_fu_1674_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_Result_27_fu_1798_p3 = tmp_V_9_fu_1674_p3[add_ln949_fu_1792_p2];

assign p_Result_29_fu_950_p3 = ireg_V_fu_942_p1[32'd63];

assign p_Result_30_fu_984_p1 = tmp_fu_976_p3;

assign p_Result_31_fu_1660_p3 = prediction_V_q0[32'd13];

assign p_Result_32_fu_1692_p3 = {{18'd262143}, {p_Result_13_fu_1682_p4}};

assign p_Result_33_fu_1921_p5 = {{tmp_s_fu_1914_p3}, {m_11_fu_1883_p1[22:0]}};

assign p_Result_s_fu_1760_p2 = (tmp_V_9_fu_1674_p3 & lshr_ln947_fu_1754_p2);

assign prediction_output_Addr_A = prediction_output_Addr_A_orig << 32'd2;

assign prediction_output_Addr_A_orig = zext_ln70_reg_2209;

assign prediction_output_Clk_A = ap_clk;

assign prediction_output_Din_A = ((icmp_ln935_reg_2219[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1933_p1);

assign prediction_output_Rst_A = ap_rst_n_inv;

assign select_ln14_1_fu_1261_p3 = ((icmp_ln13_fu_1247_p2[0:0] === 1'b1) ? i_1_fu_1241_p2 : ap_phi_mux_i_0_i_phi_fu_669_p4);

assign select_ln14_2_fu_1311_p3 = ((icmp_ln13_reg_2063[0:0] === 1'b1) ? 14'd0 : p_Val2_s_reg_676);

assign select_ln14_fu_1253_p3 = ((icmp_ln13_fu_1247_p2[0:0] === 1'b1) ? 9'd0 : ap_phi_mux_j_0_i_phi_fu_692_p4);

assign select_ln19_1_fu_1515_p3 = ((tmp_107_fu_1507_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_1_fu_1501_p2);

assign select_ln19_fu_1372_p3 = ((tmp_106_fu_1364_p3[0:0] === 1'b1) ? 13'd0 : add_ln203_fu_1358_p2);

assign select_ln588_fu_1091_p3 = ((tmp_105_fu_1083_p3[0:0] === 1'b1) ? 14'd16383 : 14'd0);

assign select_ln603_1_fu_1189_p3 = ((and_ln585_fu_1145_p2[0:0] === 1'b1) ? select_ln588_fu_1091_p3 : trunc_ln583_fu_1050_p1);

assign select_ln603_2_fu_1203_p3 = ((or_ln603_fu_1183_p2[0:0] === 1'b1) ? select_ln603_fu_1175_p3 : select_ln603_1_fu_1189_p3);

assign select_ln603_3_fu_1217_p3 = ((or_ln603_2_fu_1211_p2[0:0] === 1'b1) ? select_ln603_2_fu_1203_p3 : 14'd0);

assign select_ln603_fu_1175_p3 = ((and_ln603_fu_1169_p2[0:0] === 1'b1) ? shl_ln604_fu_1103_p2 : trunc_ln586_fu_1076_p1);

assign select_ln964_fu_1895_p3 = ((tmp_111_fu_1887_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1117_fu_1453_p1 = $signed(add_ln1117_23_fu_1448_p2);

assign sext_ln1265_1_fu_1483_p0 = dense_2_bias_V_q0;

assign sext_ln1265_1_fu_1483_p1 = sext_ln1265_1_fu_1483_p0;

assign sext_ln1265_2_fu_1626_p1 = $signed(dense_out_bias_V_q0);

assign sext_ln1265_fu_1335_p0 = dense_1_bias_V_q0;

assign sext_ln1265_fu_1335_p1 = sext_ln1265_fu_1335_p0;

assign sext_ln203_fu_1225_p1 = $signed(add_ln203_11_reg_2028);

assign sext_ln581_fu_1040_p1 = sh_amt_fu_1032_p3;

assign sext_ln581cast_fu_1099_p1 = sext_ln581_fu_1040_p1[13:0];

assign sext_ln703_2_fu_1491_p0 = dense_2_bias_V_q0;

assign sext_ln703_2_fu_1491_p1 = sext_ln703_2_fu_1491_p0;

assign sext_ln703_fu_1348_p0 = dense_1_bias_V_q0;

assign sext_ln703_fu_1348_p1 = sext_ln703_fu_1348_p0;

assign sh_amt_fu_1032_p3 = ((icmp_ln581_fu_1014_p2[0:0] === 1'b1) ? add_ln581_fu_1020_p2 : sub_ln581_fu_1026_p2);

assign shl_ln604_fu_1103_p2 = trunc_ln583_fu_1050_p1 << sext_ln581cast_fu_1099_p1;

assign shl_ln958_fu_1855_p2 = m_fu_1836_p1 << sub_ln958_fu_1850_p2;

assign sub_ln1117_fu_1442_p2 = (zext_ln1117_38_fu_1426_p1 - zext_ln1117_39_fu_1438_p1);

assign sub_ln203_fu_904_p2 = (zext_ln203_fu_888_p1 - zext_ln203_20_fu_900_p1);

assign sub_ln581_fu_1026_p2 = (12'd8 - F2_fu_1008_p2);

assign sub_ln944_fu_1708_p2 = (32'd14 - l_fu_1700_p3);

assign sub_ln947_fu_1744_p2 = (4'd7 - trunc_ln947_fu_1740_p1);

assign sub_ln958_fu_1850_p2 = (32'd25 - sub_ln944_reg_2234);

assign sub_ln964_fu_1903_p2 = (8'd6 - trunc_ln943_reg_2250);

assign sum_V_fu_1326_p4 = {{grp_fu_1954_p3[21:8]}};

assign tmp_100_fu_1430_p3 = {{j_0_i10_reg_722}, {1'd0}};

assign tmp_101_fu_1561_p3 = {{f_0_i_reg_756}, {3'd0}};

assign tmp_102_fu_1573_p3 = {{f_0_i_reg_756}, {1'd0}};

assign tmp_105_fu_1083_p3 = bitcast_ln696_fu_1080_p1[32'd31];

assign tmp_106_fu_1364_p3 = add_ln703_fu_1352_p2[32'd13];

assign tmp_107_fu_1507_p3 = add_ln703_6_fu_1495_p2[32'd13];

assign tmp_109_fu_1724_p4 = {{lsb_index_fu_1718_p2[31:1]}};

assign tmp_110_fu_1778_p3 = lsb_index_fu_1718_p2[32'd31];

assign tmp_111_fu_1887_p3 = m_8_fu_1868_p2[32'd25];

assign tmp_97_fu_880_p3 = {{i_0_reg_622}, {5'd0}};

assign tmp_98_fu_892_p3 = {{i_0_reg_622}, {2'd0}};

assign tmp_99_fu_1418_p3 = {{j_0_i10_reg_722}, {5'd0}};

assign tmp_V_9_fu_1674_p3 = ((p_Result_31_fu_1660_p3[0:0] === 1'b1) ? tmp_V_fu_1668_p2 : prediction_V_q0);

assign tmp_V_fu_1668_p2 = (14'd0 - prediction_V_q0);

assign tmp_fu_976_p3 = {{1'd1}, {trunc_ln565_fu_972_p1}};

assign tmp_s_fu_1914_p3 = {{p_Result_31_reg_2224}, {add_ln964_fu_1908_p2}};

assign trunc_ln556_fu_946_p1 = ireg_V_fu_942_p1[62:0];

assign trunc_ln565_fu_972_p1 = ireg_V_fu_942_p1[51:0];

assign trunc_ln583_fu_1050_p1 = man_V_2_fu_994_p3[13:0];

assign trunc_ln586_fu_1076_p1 = ashr_ln586_fu_1070_p2[13:0];

assign trunc_ln703_fu_1487_p1 = p_Val2_22_reg_710[12:0];

assign trunc_ln943_fu_1832_p1 = l_fu_1700_p3[7:0];

assign trunc_ln944_fu_1714_p1 = sub_ln944_fu_1708_p2[13:0];

assign trunc_ln947_fu_1740_p1 = sub_ln944_fu_1708_p2[3:0];

assign trunc_ln_fu_1339_p4 = {{grp_fu_1954_p3[20:8]}};

assign xor_ln571_fu_1109_p2 = (icmp_ln571_fu_1002_p2 ^ 1'd1);

assign xor_ln581_fu_1163_p2 = (or_ln581_fu_1157_p2 ^ 1'd1);

assign xor_ln582_fu_1127_p2 = (or_ln582_fu_1121_p2 ^ 1'd1);

assign xor_ln585_fu_1139_p2 = (icmp_ln585_fu_1054_p2 ^ 1'd1);

assign xor_ln949_fu_1786_p2 = (tmp_110_fu_1778_p3 ^ 1'd1);

assign zext_ln1116_2_fu_1581_p1 = tmp_102_fu_1573_p3;

assign zext_ln1116_3_fu_1596_p1 = add_ln1116_1_fu_1591_p2;

assign zext_ln1116_fu_1569_p1 = tmp_101_fu_1561_p3;

assign zext_ln1117_37_fu_1287_p1 = grp_fu_1945_p3;

assign zext_ln1117_38_fu_1426_p1 = tmp_99_fu_1418_p3;

assign zext_ln1117_39_fu_1438_p1 = tmp_100_fu_1430_p3;

assign zext_ln13_3_fu_1397_p1 = i_0_i5_reg_699;

assign zext_ln14_1_fu_1278_p1 = select_ln14_fu_1253_p3;

assign zext_ln14_2_fu_1393_p1 = i_0_i5_reg_699;

assign zext_ln14_3_fu_1413_p1 = j_0_i10_reg_722;

assign zext_ln14_fu_1269_p1 = select_ln14_1_fu_1261_p3;

assign zext_ln203_20_fu_900_p1 = tmp_98_fu_892_p3;

assign zext_ln203_21_fu_922_p1 = j_0_reg_643;

assign zext_ln203_fu_888_p1 = tmp_97_fu_880_p3;

assign zext_ln27_fu_931_p1 = ix_in_1_reg_633;

assign zext_ln461_fu_968_p1 = exp_tmp_V_fu_958_p4;

assign zext_ln46_fu_1540_p1 = d_0_i_reg_733;

assign zext_ln48_1_fu_1556_p1 = f_0_i_reg_756;

assign zext_ln48_fu_1536_p1 = d_0_i_reg_733;

assign zext_ln586_fu_1066_p1 = $unsigned(sext_ln581_fu_1040_p1);

assign zext_ln70_fu_1649_p1 = i24_0_reg_767;

assign zext_ln947_fu_1750_p1 = sub_ln947_fu_1744_p2;

always @ (posedge ap_clk) begin
    sub_ln203_reg_2015[1:0] <= 2'b00;
    zext_ln14_reg_2073[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln14_2_reg_2115[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_3_reg_2121[11:5] <= 7'b0000000;
    zext_ln48_reg_2162[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln46_reg_2168[8:4] <= 5'b00000;
    zext_ln70_reg_2209[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_2240[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //cnn
