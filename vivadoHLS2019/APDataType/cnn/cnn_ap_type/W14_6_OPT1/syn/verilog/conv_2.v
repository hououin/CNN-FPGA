// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_V_address0,
        input_V_ce0,
        input_V_q0,
        input_V_address1,
        input_V_ce1,
        input_V_q1,
        conv_out_V_address0,
        conv_out_V_ce0,
        conv_out_V_we0,
        conv_out_V_d0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_pp0_stage0 = 17'd4;
parameter    ap_ST_fsm_pp0_stage1 = 17'd8;
parameter    ap_ST_fsm_pp0_stage2 = 17'd16;
parameter    ap_ST_fsm_pp0_stage3 = 17'd32;
parameter    ap_ST_fsm_pp0_stage4 = 17'd64;
parameter    ap_ST_fsm_pp0_stage5 = 17'd128;
parameter    ap_ST_fsm_pp0_stage6 = 17'd256;
parameter    ap_ST_fsm_pp0_stage7 = 17'd512;
parameter    ap_ST_fsm_pp0_stage8 = 17'd1024;
parameter    ap_ST_fsm_state13 = 17'd2048;
parameter    ap_ST_fsm_state14 = 17'd4096;
parameter    ap_ST_fsm_state15 = 17'd8192;
parameter    ap_ST_fsm_state16 = 17'd16384;
parameter    ap_ST_fsm_state17 = 17'd32768;
parameter    ap_ST_fsm_state18 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_V_address0;
output   input_V_ce0;
input  [13:0] input_V_q0;
output  [9:0] input_V_address1;
output   input_V_ce1;
input  [13:0] input_V_q1;
output  [10:0] conv_out_V_address0;
output   conv_out_V_ce0;
output   conv_out_V_we0;
output  [13:0] conv_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_V_address0;
reg input_V_ce0;
reg[9:0] input_V_address1;
reg input_V_ce1;
reg conv_out_V_ce0;
reg conv_out_V_we0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] conv_2_weights_V_0_0_address0;
reg    conv_2_weights_V_0_0_ce0;
wire  signed [7:0] conv_2_weights_V_0_0_q0;
wire   [5:0] conv_2_weights_V_0_1_address0;
reg    conv_2_weights_V_0_1_ce0;
wire  signed [8:0] conv_2_weights_V_0_1_q0;
wire   [5:0] conv_2_weights_V_0_2_address0;
reg    conv_2_weights_V_0_2_ce0;
wire   [7:0] conv_2_weights_V_0_2_q0;
wire   [5:0] conv_2_weights_V_0_3_address0;
reg    conv_2_weights_V_0_3_ce0;
wire   [8:0] conv_2_weights_V_0_3_q0;
wire   [5:0] conv_2_weights_V_0_4_address0;
reg    conv_2_weights_V_0_4_ce0;
wire   [8:0] conv_2_weights_V_0_4_q0;
wire   [5:0] conv_2_weights_V_0_5_address0;
reg    conv_2_weights_V_0_5_ce0;
wire   [8:0] conv_2_weights_V_0_5_q0;
wire   [5:0] conv_2_weights_V_1_0_address0;
reg    conv_2_weights_V_1_0_ce0;
wire   [7:0] conv_2_weights_V_1_0_q0;
wire   [5:0] conv_2_weights_V_1_1_address0;
reg    conv_2_weights_V_1_1_ce0;
wire   [8:0] conv_2_weights_V_1_1_q0;
wire   [5:0] conv_2_weights_V_1_2_address0;
reg    conv_2_weights_V_1_2_ce0;
wire   [7:0] conv_2_weights_V_1_2_q0;
wire   [5:0] conv_2_weights_V_1_3_address0;
reg    conv_2_weights_V_1_3_ce0;
wire   [7:0] conv_2_weights_V_1_3_q0;
wire   [5:0] conv_2_weights_V_1_4_address0;
reg    conv_2_weights_V_1_4_ce0;
wire   [9:0] conv_2_weights_V_1_4_q0;
wire   [5:0] conv_2_weights_V_1_5_address0;
reg    conv_2_weights_V_1_5_ce0;
wire   [7:0] conv_2_weights_V_1_5_q0;
wire   [5:0] conv_2_weights_V_2_0_address0;
reg    conv_2_weights_V_2_0_ce0;
wire   [7:0] conv_2_weights_V_2_0_q0;
wire   [5:0] conv_2_weights_V_2_1_address0;
reg    conv_2_weights_V_2_1_ce0;
wire   [8:0] conv_2_weights_V_2_1_q0;
wire   [5:0] conv_2_weights_V_2_2_address0;
reg    conv_2_weights_V_2_2_ce0;
wire   [7:0] conv_2_weights_V_2_2_q0;
wire   [5:0] conv_2_weights_V_2_3_address0;
reg    conv_2_weights_V_2_3_ce0;
wire   [8:0] conv_2_weights_V_2_3_q0;
wire   [5:0] conv_2_weights_V_2_4_address0;
reg    conv_2_weights_V_2_4_ce0;
wire   [8:0] conv_2_weights_V_2_4_q0;
wire   [5:0] conv_2_weights_V_2_5_address0;
reg    conv_2_weights_V_2_5_ce0;
wire   [8:0] conv_2_weights_V_2_5_q0;
wire   [3:0] conv_2_bias_V_address0;
reg    conv_2_bias_V_ce0;
wire   [7:0] conv_2_bias_V_q0;
reg   [13:0] p_Val2_s_reg_676;
reg   [1:0] wr_0_reg_688;
wire   [0:0] icmp_ln8_fu_728_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln8_fu_734_p2;
reg   [10:0] add_ln8_reg_2473;
wire   [0:0] icmp_ln11_fu_746_p2;
reg   [0:0] icmp_ln11_reg_2478;
wire   [3:0] select_ln37_1_fu_760_p3;
reg   [3:0] select_ln37_1_reg_2483;
wire   [4:0] select_ln37_4_fu_818_p3;
reg   [4:0] select_ln37_4_reg_2489;
wire   [3:0] select_ln37_5_fu_826_p3;
reg   [3:0] select_ln37_5_reg_2494;
wire   [7:0] zext_ln37_fu_834_p1;
reg   [7:0] zext_ln37_reg_2499;
wire   [7:0] zext_ln37_1_fu_859_p1;
reg   [7:0] zext_ln37_1_reg_2504;
wire   [7:0] zext_ln37_2_fu_877_p1;
reg   [7:0] zext_ln37_2_reg_2509;
wire   [63:0] zext_ln26_fu_881_p1;
reg   [63:0] zext_ln26_reg_2514;
wire   [6:0] zext_ln203_10_fu_885_p1;
reg   [6:0] zext_ln203_10_reg_2519;
reg   [10:0] conv_out_V_addr_reg_2524;
wire   [0:0] icmp_ln18_fu_904_p2;
reg   [0:0] icmp_ln18_reg_2529;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] wr_fu_910_p2;
reg   [1:0] wr_reg_2533;
reg    ap_enable_reg_pp0_iter0;
wire   [10:0] sub_ln1117_fu_999_p2;
reg   [10:0] sub_ln1117_reg_2628;
wire   [7:0] add_ln1117_5_fu_1021_p2;
reg   [7:0] add_ln1117_5_reg_2646;
wire   [7:0] add_ln1117_10_fu_1026_p2;
reg   [7:0] add_ln1117_10_reg_2652;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg  signed [7:0] conv_2_weights_V_0_2_2_reg_2668;
reg   [13:0] tmp_8_reg_2673;
reg  signed [8:0] conv_2_weights_V_0_3_2_reg_2678;
reg  signed [8:0] conv_2_weights_V_0_4_2_reg_2683;
reg  signed [8:0] conv_2_weights_V_0_5_2_reg_2688;
reg  signed [7:0] conv_2_weights_V_1_0_2_reg_2693;
reg  signed [8:0] conv_2_weights_V_1_1_2_reg_2698;
reg  signed [7:0] conv_2_weights_V_1_2_2_reg_2703;
reg  signed [7:0] conv_2_weights_V_1_3_2_reg_2708;
reg  signed [9:0] conv_2_weights_V_1_4_2_reg_2713;
reg  signed [7:0] conv_2_weights_V_1_5_2_reg_2718;
reg  signed [7:0] conv_2_weights_V_2_0_2_reg_2723;
reg  signed [8:0] conv_2_weights_V_2_1_2_reg_2728;
reg  signed [7:0] conv_2_weights_V_2_2_2_reg_2733;
reg  signed [8:0] conv_2_weights_V_2_3_2_reg_2738;
reg  signed [8:0] conv_2_weights_V_2_4_2_reg_2743;
reg  signed [8:0] conv_2_weights_V_2_5_2_reg_2748;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [13:0] tmp_10_reg_2763;
wire   [10:0] sub_ln1117_1_fu_1258_p2;
reg   [10:0] sub_ln1117_1_reg_2768;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] tmp_12_reg_2786;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [13:0] tmp_14_reg_2801;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [13:0] tmp_16_reg_2816;
wire   [10:0] sub_ln1117_2_fu_1587_p2;
reg   [10:0] sub_ln1117_2_reg_2821;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire  signed [22:0] mul_ln1118_11_fu_2425_p2;
reg  signed [22:0] mul_ln1118_11_reg_2839;
reg   [13:0] tmp_17_reg_2844;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire  signed [22:0] mul_ln1118_12_fu_2431_p2;
reg  signed [22:0] mul_ln1118_12_reg_2859;
wire  signed [23:0] mul_ln1118_13_fu_2437_p2;
reg  signed [23:0] mul_ln1118_13_reg_2864;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire  signed [22:0] mul_ln1118_14_fu_2443_p2;
reg  signed [22:0] mul_ln1118_14_reg_2879;
wire  signed [23:0] mul_ln1118_15_fu_2449_p2;
reg  signed [23:0] mul_ln1118_15_reg_2884;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state13;
wire   [13:0] tmp_V_4_fu_1987_p2;
reg   [13:0] tmp_V_4_reg_2899;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln885_fu_1993_p2;
reg   [0:0] icmp_ln885_reg_2907;
wire   [0:0] p_Result_24_fu_1999_p3;
reg   [0:0] p_Result_24_reg_2911;
wire    ap_CS_fsm_state15;
wire   [13:0] tmp_V_5_fu_2011_p3;
reg   [13:0] tmp_V_5_reg_2916;
wire   [31:0] sub_ln894_fu_2044_p2;
reg   [31:0] sub_ln894_reg_2922;
wire   [31:0] or_ln_fu_2154_p3;
reg   [31:0] or_ln_reg_2928;
wire   [0:0] icmp_ln908_fu_2162_p2;
reg   [0:0] icmp_ln908_reg_2933;
wire   [10:0] trunc_ln893_fu_2168_p1;
reg   [10:0] trunc_ln893_reg_2938;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln924_fu_2299_p2;
reg   [0:0] icmp_ln924_reg_2948;
wire   [0:0] icmp_ln924_1_fu_2305_p2;
reg   [0:0] icmp_ln924_1_reg_2953;
wire   [4:0] f_fu_2321_p2;
reg   [4:0] f_reg_2961;
wire    ap_CS_fsm_state17;
wire   [8:0] select_ln11_fu_2332_p3;
reg   [8:0] select_ln11_reg_2966;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage8_subdone;
reg   [10:0] indvar_flatten21_reg_620;
wire    ap_CS_fsm_state18;
reg   [3:0] r_0_reg_631;
reg   [8:0] indvar_flatten_reg_642;
reg   [3:0] c_0_reg_654;
reg   [4:0] f_0_reg_665;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_692_p4;
reg   [13:0] storemerge_reg_699;
wire   [0:0] and_ln924_fu_2315_p2;
wire   [63:0] zext_ln203_12_fu_899_p1;
wire   [63:0] zext_ln1116_1_fu_937_p1;
wire   [63:0] zext_ln1117_2_fu_1005_p1;
wire   [63:0] zext_ln1117_3_fu_1016_p1;
wire   [63:0] zext_ln1117_4_fu_1036_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln1117_5_fu_1046_p1;
wire   [63:0] zext_ln1117_6_fu_1142_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln1117_7_fu_1152_p1;
wire   [63:0] zext_ln1117_9_fu_1264_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln1117_10_fu_1275_p1;
wire   [63:0] zext_ln1117_11_fu_1368_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln1117_12_fu_1378_p1;
wire   [63:0] zext_ln1117_13_fu_1471_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln1117_14_fu_1481_p1;
wire   [63:0] zext_ln1117_16_fu_1593_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln1117_17_fu_1604_p1;
wire   [63:0] zext_ln1117_18_fu_1662_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln1117_19_fu_1672_p1;
wire   [63:0] zext_ln1117_20_fu_1696_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln1117_21_fu_1706_p1;
wire   [63:0] grp_fu_711_p0;
wire   [3:0] r_fu_740_p2;
wire   [3:0] c_fu_716_p2;
wire   [3:0] add_ln26_2_fu_722_p2;
wire   [0:0] icmp_ln14_fu_794_p2;
wire   [0:0] xor_ln37_fu_788_p2;
wire   [3:0] select_ln37_fu_752_p3;
wire   [0:0] and_ln37_fu_800_p2;
wire   [0:0] or_ln37_fu_812_p2;
wire   [3:0] add_ln26_3_fu_806_p2;
wire   [7:0] grp_fu_2339_p3;
wire   [3:0] add_ln26_4_fu_845_p2;
wire   [3:0] select_ln37_2_fu_772_p3;
wire   [3:0] select_ln37_6_fu_851_p3;
wire   [3:0] add_ln26_5_fu_863_p2;
wire   [3:0] select_ln37_3_fu_780_p3;
wire   [3:0] select_ln37_7_fu_869_p3;
wire   [11:0] zext_ln203_11_fu_889_p1;
wire   [11:0] tmp_17_cast_fu_838_p3;
wire   [11:0] add_ln203_6_fu_893_p2;
wire   [5:0] tmp_s_fu_920_p3;
wire   [6:0] zext_ln1116_fu_928_p1;
wire   [6:0] add_ln1116_fu_932_p2;
wire   [3:0] zext_ln18_fu_916_p1;
wire   [3:0] add_ln26_fu_959_p2;
wire   [3:0] mul_ln1117_fu_968_p0;
wire   [7:0] mul_ln1117_fu_968_p2;
wire   [7:0] add_ln1117_fu_974_p2;
wire   [8:0] tmp_fu_987_p3;
wire   [10:0] p_shl4_cast_fu_979_p3;
wire   [10:0] zext_ln1117_1_fu_995_p1;
wire   [10:0] or_ln1117_fu_1010_p2;
wire   [10:0] add_ln1117_1_fu_1031_p2;
wire   [10:0] add_ln1117_2_fu_1041_p2;
wire  signed [22:0] mul_ln1118_fu_2348_p2;
wire   [21:0] shl_ln_fu_1062_p3;
wire  signed [27:0] sext_ln1118_1_fu_1059_p1;
wire   [28:0] zext_ln703_fu_1074_p1;
wire   [28:0] zext_ln728_fu_1070_p1;
wire  signed [23:0] mul_ln1118_1_fu_2355_p2;
wire   [28:0] add_ln1192_fu_1078_p2;
wire   [13:0] tmp_5_fu_1095_p4;
wire   [21:0] shl_ln728_1_fu_1105_p3;
wire  signed [27:0] sext_ln1118_3_fu_1092_p1;
wire   [28:0] zext_ln703_2_fu_1117_p1;
wire   [28:0] zext_ln728_1_fu_1113_p1;
wire   [28:0] add_ln1192_1_fu_1121_p2;
wire   [10:0] add_ln1117_3_fu_1137_p2;
wire   [10:0] add_ln1117_4_fu_1147_p2;
wire  signed [22:0] mul_ln1118_2_fu_2362_p2;
wire   [21:0] shl_ln728_2_fu_1167_p3;
wire  signed [27:0] sext_ln1118_5_fu_1164_p1;
wire   [28:0] zext_ln703_3_fu_1178_p1;
wire   [28:0] zext_ln728_2_fu_1174_p1;
wire  signed [23:0] mul_ln1118_3_fu_2369_p2;
wire   [28:0] add_ln1192_2_fu_1182_p2;
wire   [13:0] tmp_9_fu_1198_p4;
wire   [21:0] shl_ln728_3_fu_1208_p3;
wire  signed [27:0] sext_ln1118_7_fu_1195_p1;
wire   [28:0] zext_ln703_4_fu_1220_p1;
wire   [28:0] zext_ln728_3_fu_1216_p1;
wire   [28:0] add_ln1192_3_fu_1224_p2;
wire   [8:0] tmp_6_fu_1247_p3;
wire   [10:0] p_shl2_cast_fu_1240_p3;
wire   [10:0] zext_ln1117_8_fu_1254_p1;
wire   [10:0] or_ln1117_1_fu_1269_p2;
wire  signed [23:0] mul_ln1118_4_fu_2376_p2;
wire   [21:0] shl_ln728_4_fu_1290_p3;
wire  signed [27:0] sext_ln1118_9_fu_1287_p1;
wire   [28:0] zext_ln703_5_fu_1301_p1;
wire   [28:0] zext_ln728_4_fu_1297_p1;
wire  signed [23:0] mul_ln1118_5_fu_2383_p2;
wire   [28:0] add_ln1192_4_fu_1305_p2;
wire   [13:0] tmp_11_fu_1321_p4;
wire   [21:0] shl_ln728_5_fu_1331_p3;
wire  signed [27:0] sext_ln1118_11_fu_1318_p1;
wire   [28:0] zext_ln703_6_fu_1343_p1;
wire   [28:0] zext_ln728_5_fu_1339_p1;
wire   [28:0] add_ln1192_5_fu_1347_p2;
wire   [10:0] add_ln1117_6_fu_1363_p2;
wire   [10:0] add_ln1117_7_fu_1373_p2;
wire  signed [22:0] mul_ln1118_6_fu_2390_p2;
wire   [21:0] shl_ln728_6_fu_1393_p3;
wire  signed [27:0] sext_ln1118_13_fu_1390_p1;
wire   [28:0] zext_ln703_7_fu_1404_p1;
wire   [28:0] zext_ln728_6_fu_1400_p1;
wire  signed [23:0] mul_ln1118_7_fu_2397_p2;
wire   [28:0] add_ln1192_6_fu_1408_p2;
wire   [13:0] tmp_13_fu_1424_p4;
wire   [21:0] shl_ln728_7_fu_1434_p3;
wire  signed [27:0] sext_ln1118_15_fu_1421_p1;
wire   [28:0] zext_ln703_8_fu_1446_p1;
wire   [28:0] zext_ln728_7_fu_1442_p1;
wire   [28:0] add_ln1192_7_fu_1450_p2;
wire   [10:0] add_ln1117_8_fu_1466_p2;
wire   [10:0] add_ln1117_9_fu_1476_p2;
wire  signed [22:0] mul_ln1118_8_fu_2404_p2;
wire   [21:0] shl_ln728_8_fu_1496_p3;
wire  signed [27:0] sext_ln1118_17_fu_1493_p1;
wire   [28:0] zext_ln703_9_fu_1507_p1;
wire   [28:0] zext_ln728_8_fu_1503_p1;
wire  signed [22:0] mul_ln1118_9_fu_2411_p2;
wire   [28:0] add_ln1192_8_fu_1511_p2;
wire   [13:0] tmp_15_fu_1527_p4;
wire   [21:0] shl_ln728_9_fu_1537_p3;
wire  signed [27:0] sext_ln1118_19_fu_1524_p1;
wire   [28:0] zext_ln703_10_fu_1549_p1;
wire   [28:0] zext_ln728_9_fu_1545_p1;
wire   [28:0] add_ln1192_9_fu_1553_p2;
wire   [8:0] tmp_7_fu_1576_p3;
wire   [10:0] p_shl_cast_fu_1569_p3;
wire   [10:0] zext_ln1117_15_fu_1583_p1;
wire   [10:0] or_ln1117_2_fu_1598_p2;
wire  signed [24:0] mul_ln1118_10_fu_2418_p2;
wire   [21:0] shl_ln728_s_fu_1619_p3;
wire  signed [27:0] sext_ln1118_21_fu_1616_p1;
wire   [28:0] zext_ln703_11_fu_1630_p1;
wire   [28:0] zext_ln728_10_fu_1626_p1;
wire   [28:0] add_ln1192_10_fu_1634_p2;
wire   [10:0] add_ln1117_11_fu_1657_p2;
wire   [10:0] add_ln1117_12_fu_1667_p2;
wire   [10:0] add_ln1117_13_fu_1691_p2;
wire   [10:0] add_ln1117_14_fu_1701_p2;
wire   [21:0] shl_ln728_10_fu_1728_p3;
wire  signed [27:0] sext_ln1118_23_fu_1725_p1;
wire   [28:0] zext_ln703_12_fu_1739_p1;
wire   [28:0] zext_ln728_11_fu_1735_p1;
wire   [28:0] add_ln1192_11_fu_1743_p2;
wire   [13:0] tmp_18_fu_1752_p4;
wire   [21:0] shl_ln728_11_fu_1762_p3;
wire  signed [27:0] sext_ln1118_25_fu_1749_p1;
wire   [28:0] zext_ln703_13_fu_1774_p1;
wire   [28:0] zext_ln728_12_fu_1770_p1;
wire   [28:0] add_ln1192_12_fu_1778_p2;
wire   [13:0] tmp_19_fu_1787_p4;
wire   [21:0] shl_ln728_12_fu_1797_p3;
wire  signed [27:0] sext_ln1118_27_fu_1784_p1;
wire   [28:0] zext_ln703_14_fu_1809_p1;
wire   [28:0] zext_ln728_13_fu_1805_p1;
wire   [28:0] add_ln1192_13_fu_1813_p2;
wire   [13:0] tmp_20_fu_1822_p4;
wire   [21:0] shl_ln728_13_fu_1832_p3;
wire  signed [27:0] sext_ln1118_29_fu_1819_p1;
wire   [28:0] zext_ln703_15_fu_1844_p1;
wire   [28:0] zext_ln728_14_fu_1840_p1;
wire   [28:0] add_ln1192_14_fu_1848_p2;
wire   [13:0] tmp_21_fu_1857_p4;
wire   [21:0] shl_ln728_14_fu_1867_p3;
wire  signed [27:0] sext_ln1118_31_fu_1854_p1;
wire   [28:0] zext_ln703_16_fu_1879_p1;
wire   [28:0] zext_ln728_15_fu_1875_p1;
wire  signed [23:0] mul_ln1118_16_fu_2455_p2;
wire   [28:0] add_ln1192_15_fu_1883_p2;
wire   [13:0] tmp_22_fu_1899_p4;
wire   [21:0] shl_ln728_15_fu_1909_p3;
wire  signed [27:0] sext_ln1118_33_fu_1896_p1;
wire   [28:0] zext_ln703_17_fu_1921_p1;
wire   [28:0] zext_ln728_16_fu_1917_p1;
wire  signed [23:0] mul_ln1118_17_fu_2462_p2;
wire   [28:0] add_ln1192_16_fu_1925_p2;
wire   [13:0] tmp_23_fu_1941_p4;
wire   [21:0] shl_ln728_16_fu_1951_p3;
wire  signed [27:0] sext_ln1118_35_fu_1938_p1;
wire   [28:0] zext_ln703_18_fu_1963_p1;
wire   [28:0] zext_ln728_17_fu_1959_p1;
wire   [28:0] add_ln1192_17_fu_1967_p2;
wire  signed [13:0] sext_ln1265_fu_1983_p1;
wire   [13:0] tmp_V_fu_2006_p2;
reg   [13:0] p_Result_s_fu_2018_p4;
wire   [31:0] p_Result_25_fu_2028_p3;
reg   [31:0] l_fu_2036_p3;
wire   [31:0] lsb_index_fu_2054_p2;
wire   [30:0] tmp_25_fu_2060_p4;
wire   [3:0] trunc_ln897_fu_2076_p1;
wire   [3:0] sub_ln897_fu_2080_p2;
wire   [13:0] zext_ln897_fu_2086_p1;
wire   [13:0] lshr_ln897_fu_2090_p2;
wire   [13:0] p_Result_21_fu_2096_p2;
wire   [0:0] icmp_ln897_fu_2070_p2;
wire   [0:0] icmp_ln897_1_fu_2102_p2;
wire   [0:0] tmp_26_fu_2114_p3;
wire   [13:0] trunc_ln894_fu_2050_p1;
wire   [13:0] add_ln899_fu_2128_p2;
wire   [0:0] p_Result_22_fu_2134_p3;
wire   [0:0] xor_ln899_fu_2122_p2;
wire   [0:0] and_ln899_fu_2142_p2;
wire   [0:0] a_fu_2108_p2;
wire   [0:0] or_ln899_fu_2148_p2;
wire   [31:0] zext_ln907_1_fu_2175_p1;
wire   [31:0] add_ln908_fu_2178_p2;
wire   [31:0] lshr_ln908_fu_2183_p2;
wire   [31:0] sub_ln908_fu_2193_p2;
wire   [63:0] m_fu_2172_p1;
wire   [63:0] zext_ln908_1_fu_2198_p1;
wire   [63:0] zext_ln908_fu_2189_p1;
wire   [63:0] shl_ln908_fu_2202_p2;
wire   [63:0] zext_ln911_fu_2215_p1;
wire   [63:0] m_1_fu_2208_p3;
wire   [63:0] m_2_fu_2218_p2;
wire   [62:0] m_5_fu_2224_p4;
wire   [0:0] tmp_27_fu_2238_p3;
wire   [10:0] sub_ln915_fu_2254_p2;
wire   [10:0] select_ln915_fu_2246_p3;
wire   [10:0] add_ln915_fu_2259_p2;
wire   [63:0] m_6_fu_2234_p1;
wire   [11:0] tmp_4_fu_2265_p3;
wire   [63:0] p_Result_26_fu_2272_p5;
wire   [51:0] trunc_ln4_fu_2289_p4;
wire   [0:0] or_ln924_fu_2311_p2;
wire   [0:0] grp_fu_711_p2;
wire   [8:0] add_ln11_fu_2326_p2;
wire   [3:0] grp_fu_2339_p0;
wire   [4:0] grp_fu_2339_p1;
wire   [3:0] grp_fu_2339_p2;
reg   [16:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_2339_p00;
wire   [7:0] grp_fu_2339_p20;
wire   [7:0] mul_ln1117_fu_968_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_2_conv_2_weiocq #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_0_address0),
    .ce0(conv_2_weights_V_0_0_ce0),
    .q0(conv_2_weights_V_0_0_q0)
);

conv_2_conv_2_weipcA #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_1_address0),
    .ce0(conv_2_weights_V_0_1_ce0),
    .q0(conv_2_weights_V_0_1_q0)
);

conv_2_conv_2_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_2_address0),
    .ce0(conv_2_weights_V_0_2_ce0),
    .q0(conv_2_weights_V_0_2_q0)
);

conv_2_conv_2_weircU #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_3_address0),
    .ce0(conv_2_weights_V_0_3_ce0),
    .q0(conv_2_weights_V_0_3_q0)
);

conv_2_conv_2_weisc4 #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_4_address0),
    .ce0(conv_2_weights_V_0_4_ce0),
    .q0(conv_2_weights_V_0_4_q0)
);

conv_2_conv_2_weitde #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_0_5_address0),
    .ce0(conv_2_weights_V_0_5_ce0),
    .q0(conv_2_weights_V_0_5_q0)
);

conv_2_conv_2_weiudo #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_0_address0),
    .ce0(conv_2_weights_V_1_0_ce0),
    .q0(conv_2_weights_V_1_0_q0)
);

conv_2_conv_2_weivdy #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_1_address0),
    .ce0(conv_2_weights_V_1_1_ce0),
    .q0(conv_2_weights_V_1_1_q0)
);

conv_2_conv_2_weiwdI #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_2_address0),
    .ce0(conv_2_weights_V_1_2_ce0),
    .q0(conv_2_weights_V_1_2_q0)
);

conv_2_conv_2_weixdS #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_3_address0),
    .ce0(conv_2_weights_V_1_3_ce0),
    .q0(conv_2_weights_V_1_3_q0)
);

conv_2_conv_2_weiyd2 #(
    .DataWidth( 10 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_4_address0),
    .ce0(conv_2_weights_V_1_4_ce0),
    .q0(conv_2_weights_V_1_4_q0)
);

conv_2_conv_2_weizec #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_1_5_address0),
    .ce0(conv_2_weights_V_1_5_ce0),
    .q0(conv_2_weights_V_1_5_q0)
);

conv_2_conv_2_weiAem #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_0_address0),
    .ce0(conv_2_weights_V_2_0_ce0),
    .q0(conv_2_weights_V_2_0_q0)
);

conv_2_conv_2_weiBew #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_1_address0),
    .ce0(conv_2_weights_V_2_1_ce0),
    .q0(conv_2_weights_V_2_1_q0)
);

conv_2_conv_2_weiCeG #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_2_address0),
    .ce0(conv_2_weights_V_2_2_ce0),
    .q0(conv_2_weights_V_2_2_q0)
);

conv_2_conv_2_weiDeQ #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_3_address0),
    .ce0(conv_2_weights_V_2_3_ce0),
    .q0(conv_2_weights_V_2_3_q0)
);

conv_2_conv_2_weiEe0 #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_4_address0),
    .ce0(conv_2_weights_V_2_4_ce0),
    .q0(conv_2_weights_V_2_4_q0)
);

conv_2_conv_2_weiFfa #(
    .DataWidth( 9 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
conv_2_weights_V_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_weights_V_2_5_address0),
    .ce0(conv_2_weights_V_2_5_ce0),
    .q0(conv_2_weights_V_2_5_q0)
);

conv_2_conv_2_biaGfk #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_2_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_2_bias_V_address0),
    .ce0(conv_2_bias_V_ce0),
    .q0(conv_2_bias_V_q0)
);

cnn_dcmp_64ns_64nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
cnn_dcmp_64ns_64nbkb_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_711_p0),
    .din1(64'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_711_p2)
);

cnn_mac_muladd_4nHfu #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
cnn_mac_muladd_4nHfu_U55(
    .din0(grp_fu_2339_p0),
    .din1(grp_fu_2339_p1),
    .din2(grp_fu_2339_p2),
    .dout(grp_fu_2339_p3)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U56(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_0_0_q0),
    .dout(mul_ln1118_fu_2348_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U57(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_0_1_q0),
    .dout(mul_ln1118_1_fu_2355_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U58(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_0_2_2_reg_2668),
    .dout(mul_ln1118_2_fu_2362_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U59(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_0_3_2_reg_2678),
    .dout(mul_ln1118_3_fu_2369_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U60(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_0_4_2_reg_2683),
    .dout(mul_ln1118_4_fu_2376_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U61(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_0_5_2_reg_2688),
    .dout(mul_ln1118_5_fu_2383_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U62(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_1_0_2_reg_2693),
    .dout(mul_ln1118_6_fu_2390_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U63(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_1_1_2_reg_2698),
    .dout(mul_ln1118_7_fu_2397_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U64(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_1_2_2_reg_2703),
    .dout(mul_ln1118_8_fu_2404_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U65(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_1_3_2_reg_2708),
    .dout(mul_ln1118_9_fu_2411_p2)
);

cnn_mul_mul_14s_1KfY #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 25 ))
cnn_mul_mul_14s_1KfY_U66(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_1_4_2_reg_2713),
    .dout(mul_ln1118_10_fu_2418_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U67(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_1_5_2_reg_2718),
    .dout(mul_ln1118_11_fu_2425_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U68(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_2_0_2_reg_2723),
    .dout(mul_ln1118_12_fu_2431_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U69(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_2_1_2_reg_2728),
    .dout(mul_ln1118_13_fu_2437_p2)
);

cnn_mul_mul_14s_8IfE #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 23 ))
cnn_mul_mul_14s_8IfE_U70(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_2_2_2_reg_2733),
    .dout(mul_ln1118_14_fu_2443_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U71(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_2_3_2_reg_2738),
    .dout(mul_ln1118_15_fu_2449_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U72(
    .din0(input_V_q0),
    .din1(conv_2_weights_V_2_4_2_reg_2743),
    .dout(mul_ln1118_16_fu_2455_p2)
);

cnn_mul_mul_14s_9JfO #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_14s_9JfO_U73(
    .din0(input_V_q1),
    .din1(conv_2_weights_V_2_5_2_reg_2748),
    .dout(mul_ln1118_17_fu_2462_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        c_0_reg_654 <= select_ln37_5_reg_2494;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_654 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        f_0_reg_665 <= f_reg_2961;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_665 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten21_reg_620 <= add_ln8_reg_2473;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten21_reg_620 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar_flatten_reg_642 <= select_ln11_reg_2966;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_642 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_2529 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Val2_s_reg_676 <= {{add_ln1192_17_fu_1967_p2[21:8]}};
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd0))) begin
        p_Val2_s_reg_676 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_0_reg_631 <= select_ln37_1_reg_2483;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_631 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        if (((1'd1 == and_ln924_fu_2315_p2) & (icmp_ln885_reg_2907 == 1'd0))) begin
            storemerge_reg_699 <= tmp_V_4_reg_2899;
        end else if (((icmp_ln885_reg_2907 == 1'd1) | (1'd0 == and_ln924_fu_2315_p2))) begin
            storemerge_reg_699 <= 14'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_2529 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_0_reg_688 <= wr_reg_2533;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd0))) begin
        wr_0_reg_688 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_fu_904_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1117_10_reg_2652 <= add_ln1117_10_fu_1026_p2;
        add_ln1117_5_reg_2646 <= add_ln1117_5_fu_1021_p2;
        sub_ln1117_reg_2628[10 : 1] <= sub_ln1117_fu_999_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_2473 <= add_ln8_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_2_weights_V_0_2_2_reg_2668 <= conv_2_weights_V_0_2_q0;
        conv_2_weights_V_0_3_2_reg_2678 <= conv_2_weights_V_0_3_q0;
        conv_2_weights_V_0_4_2_reg_2683 <= conv_2_weights_V_0_4_q0;
        conv_2_weights_V_0_5_2_reg_2688 <= conv_2_weights_V_0_5_q0;
        conv_2_weights_V_1_0_2_reg_2693 <= conv_2_weights_V_1_0_q0;
        conv_2_weights_V_1_1_2_reg_2698 <= conv_2_weights_V_1_1_q0;
        conv_2_weights_V_1_2_2_reg_2703 <= conv_2_weights_V_1_2_q0;
        conv_2_weights_V_1_3_2_reg_2708 <= conv_2_weights_V_1_3_q0;
        conv_2_weights_V_1_4_2_reg_2713 <= conv_2_weights_V_1_4_q0;
        conv_2_weights_V_1_5_2_reg_2718 <= conv_2_weights_V_1_5_q0;
        conv_2_weights_V_2_0_2_reg_2723 <= conv_2_weights_V_2_0_q0;
        conv_2_weights_V_2_1_2_reg_2728 <= conv_2_weights_V_2_1_q0;
        conv_2_weights_V_2_2_2_reg_2733 <= conv_2_weights_V_2_2_q0;
        conv_2_weights_V_2_3_2_reg_2738 <= conv_2_weights_V_2_3_q0;
        conv_2_weights_V_2_4_2_reg_2743 <= conv_2_weights_V_2_4_q0;
        conv_2_weights_V_2_5_2_reg_2748 <= conv_2_weights_V_2_5_q0;
        tmp_8_reg_2673 <= {{add_ln1192_1_fu_1121_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd0))) begin
        conv_out_V_addr_reg_2524 <= zext_ln203_12_fu_899_p1;
        icmp_ln11_reg_2478 <= icmp_ln11_fu_746_p2;
        select_ln37_1_reg_2483 <= select_ln37_1_fu_760_p3;
        select_ln37_4_reg_2489 <= select_ln37_4_fu_818_p3;
        select_ln37_5_reg_2494 <= select_ln37_5_fu_826_p3;
        zext_ln203_10_reg_2519[4 : 0] <= zext_ln203_10_fu_885_p1[4 : 0];
        zext_ln26_reg_2514[4 : 0] <= zext_ln26_fu_881_p1[4 : 0];
        zext_ln37_1_reg_2504[3 : 0] <= zext_ln37_1_fu_859_p1[3 : 0];
        zext_ln37_2_reg_2509[3 : 0] <= zext_ln37_2_fu_877_p1[3 : 0];
        zext_ln37_reg_2499[3 : 0] <= zext_ln37_fu_834_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        f_reg_2961 <= f_fu_2321_p2;
        select_ln11_reg_2966 <= select_ln11_fu_2332_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln18_reg_2529 <= icmp_ln18_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        icmp_ln885_reg_2907 <= icmp_ln885_fu_1993_p2;
        tmp_V_4_reg_2899 <= tmp_V_4_fu_1987_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln908_reg_2933 <= icmp_ln908_fu_2162_p2;
        or_ln_reg_2928[0] <= or_ln_fu_2154_p3[0];
        p_Result_24_reg_2911 <= tmp_V_4_reg_2899[32'd13];
        sub_ln894_reg_2922 <= sub_ln894_fu_2044_p2;
        tmp_V_5_reg_2916 <= tmp_V_5_fu_2011_p3;
        trunc_ln893_reg_2938 <= trunc_ln893_fu_2168_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        icmp_ln924_1_reg_2953 <= icmp_ln924_1_fu_2305_p2;
        icmp_ln924_reg_2948 <= icmp_ln924_fu_2299_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_ln1118_11_reg_2839 <= mul_ln1118_11_fu_2425_p2;
        sub_ln1117_2_reg_2821[10 : 1] <= sub_ln1117_2_fu_1587_p2[10 : 1];
        tmp_17_reg_2844 <= {{add_ln1192_10_fu_1634_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_ln1118_12_reg_2859 <= mul_ln1118_12_fu_2431_p2;
        mul_ln1118_13_reg_2864 <= mul_ln1118_13_fu_2437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul_ln1118_14_reg_2879 <= mul_ln1118_14_fu_2443_p2;
        mul_ln1118_15_reg_2884 <= mul_ln1118_15_fu_2449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sub_ln1117_1_reg_2768[10 : 1] <= sub_ln1117_1_fu_1258_p2[10 : 1];
        tmp_12_reg_2786 <= {{add_ln1192_5_fu_1347_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_10_reg_2763 <= {{add_ln1192_3_fu_1224_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_14_reg_2801 <= {{add_ln1192_7_fu_1450_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln18_reg_2529 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_16_reg_2816 <= {{add_ln1192_9_fu_1553_p2[21:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_reg_2533 <= wr_fu_910_p2;
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_904_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln18_reg_2529 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wr_0_phi_fu_692_p4 = wr_reg_2533;
    end else begin
        ap_phi_mux_wr_0_phi_fu_692_p4 = wr_0_reg_688;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv_2_bias_V_ce0 = 1'b1;
    end else begin
        conv_2_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_0_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_1_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_2_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_3_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_4_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_0_5_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_0_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_1_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_2_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_3_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_4_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_1_5_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_0_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_1_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_2_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_3_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_4_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_2_weights_V_2_5_ce0 = 1'b1;
    end else begin
        conv_2_weights_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_out_V_ce0 = 1'b1;
    end else begin
        conv_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        conv_out_V_we0 = 1'b1;
    end else begin
        conv_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_V_address0 = zext_ln1117_20_fu_1696_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_V_address0 = zext_ln1117_18_fu_1662_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_V_address0 = zext_ln1117_16_fu_1593_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_V_address0 = zext_ln1117_13_fu_1471_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address0 = zext_ln1117_11_fu_1368_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address0 = zext_ln1117_9_fu_1264_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address0 = zext_ln1117_6_fu_1142_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address0 = zext_ln1117_4_fu_1036_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address0 = zext_ln1117_2_fu_1005_p1;
        end else begin
            input_V_address0 = 'bx;
        end
    end else begin
        input_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_V_address1 = zext_ln1117_21_fu_1706_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_V_address1 = zext_ln1117_19_fu_1672_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_V_address1 = zext_ln1117_17_fu_1604_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_V_address1 = zext_ln1117_14_fu_1481_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_V_address1 = zext_ln1117_12_fu_1378_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_V_address1 = zext_ln1117_10_fu_1275_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_V_address1 = zext_ln1117_7_fu_1152_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_V_address1 = zext_ln1117_5_fu_1046_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_V_address1 = zext_ln1117_3_fu_1016_p1;
        end else begin
            input_V_address1 = 'bx;
        end
    end else begin
        input_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_V_ce0 = 1'b1;
    end else begin
        input_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_V_ce1 = 1'b1;
    end else begin
        input_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_728_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln18_fu_904_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln18_fu_904_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln885_fu_1993_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_2108_p2 = (icmp_ln897_fu_2070_p2 & icmp_ln897_1_fu_2102_p2);

assign add_ln1116_fu_932_p2 = (zext_ln1116_fu_928_p1 + zext_ln203_10_reg_2519);

assign add_ln1117_10_fu_1026_p2 = (mul_ln1117_fu_968_p2 + zext_ln37_2_reg_2509);

assign add_ln1117_11_fu_1657_p2 = (sub_ln1117_2_reg_2821 + 11'd2);

assign add_ln1117_12_fu_1667_p2 = (sub_ln1117_2_reg_2821 + 11'd3);

assign add_ln1117_13_fu_1691_p2 = (sub_ln1117_2_reg_2821 + 11'd4);

assign add_ln1117_14_fu_1701_p2 = (sub_ln1117_2_reg_2821 + 11'd5);

assign add_ln1117_1_fu_1031_p2 = (sub_ln1117_reg_2628 + 11'd2);

assign add_ln1117_2_fu_1041_p2 = (sub_ln1117_reg_2628 + 11'd3);

assign add_ln1117_3_fu_1137_p2 = (sub_ln1117_reg_2628 + 11'd4);

assign add_ln1117_4_fu_1147_p2 = (sub_ln1117_reg_2628 + 11'd5);

assign add_ln1117_5_fu_1021_p2 = (mul_ln1117_fu_968_p2 + zext_ln37_1_reg_2504);

assign add_ln1117_6_fu_1363_p2 = (sub_ln1117_1_reg_2768 + 11'd2);

assign add_ln1117_7_fu_1373_p2 = (sub_ln1117_1_reg_2768 + 11'd3);

assign add_ln1117_8_fu_1466_p2 = (sub_ln1117_1_reg_2768 + 11'd4);

assign add_ln1117_9_fu_1476_p2 = (sub_ln1117_1_reg_2768 + 11'd5);

assign add_ln1117_fu_974_p2 = (mul_ln1117_fu_968_p2 + zext_ln37_reg_2499);

assign add_ln1192_10_fu_1634_p2 = (zext_ln703_11_fu_1630_p1 + zext_ln728_10_fu_1626_p1);

assign add_ln1192_11_fu_1743_p2 = (zext_ln703_12_fu_1739_p1 + zext_ln728_11_fu_1735_p1);

assign add_ln1192_12_fu_1778_p2 = (zext_ln703_13_fu_1774_p1 + zext_ln728_12_fu_1770_p1);

assign add_ln1192_13_fu_1813_p2 = (zext_ln703_14_fu_1809_p1 + zext_ln728_13_fu_1805_p1);

assign add_ln1192_14_fu_1848_p2 = (zext_ln703_15_fu_1844_p1 + zext_ln728_14_fu_1840_p1);

assign add_ln1192_15_fu_1883_p2 = (zext_ln703_16_fu_1879_p1 + zext_ln728_15_fu_1875_p1);

assign add_ln1192_16_fu_1925_p2 = (zext_ln703_17_fu_1921_p1 + zext_ln728_16_fu_1917_p1);

assign add_ln1192_17_fu_1967_p2 = (zext_ln703_18_fu_1963_p1 + zext_ln728_17_fu_1959_p1);

assign add_ln1192_1_fu_1121_p2 = (zext_ln703_2_fu_1117_p1 + zext_ln728_1_fu_1113_p1);

assign add_ln1192_2_fu_1182_p2 = (zext_ln703_3_fu_1178_p1 + zext_ln728_2_fu_1174_p1);

assign add_ln1192_3_fu_1224_p2 = (zext_ln703_4_fu_1220_p1 + zext_ln728_3_fu_1216_p1);

assign add_ln1192_4_fu_1305_p2 = (zext_ln703_5_fu_1301_p1 + zext_ln728_4_fu_1297_p1);

assign add_ln1192_5_fu_1347_p2 = (zext_ln703_6_fu_1343_p1 + zext_ln728_5_fu_1339_p1);

assign add_ln1192_6_fu_1408_p2 = (zext_ln703_7_fu_1404_p1 + zext_ln728_6_fu_1400_p1);

assign add_ln1192_7_fu_1450_p2 = (zext_ln703_8_fu_1446_p1 + zext_ln728_7_fu_1442_p1);

assign add_ln1192_8_fu_1511_p2 = (zext_ln703_9_fu_1507_p1 + zext_ln728_8_fu_1503_p1);

assign add_ln1192_9_fu_1553_p2 = (zext_ln703_10_fu_1549_p1 + zext_ln728_9_fu_1545_p1);

assign add_ln1192_fu_1078_p2 = (zext_ln703_fu_1074_p1 + zext_ln728_fu_1070_p1);

assign add_ln11_fu_2326_p2 = (indvar_flatten_reg_642 + 9'd1);

assign add_ln203_6_fu_893_p2 = (zext_ln203_11_fu_889_p1 + tmp_17_cast_fu_838_p3);

assign add_ln26_2_fu_722_p2 = (c_0_reg_654 + 4'd2);

assign add_ln26_3_fu_806_p2 = (select_ln37_fu_752_p3 + 4'd1);

assign add_ln26_4_fu_845_p2 = (select_ln37_fu_752_p3 + 4'd2);

assign add_ln26_5_fu_863_p2 = (select_ln37_fu_752_p3 + 4'd3);

assign add_ln26_fu_959_p2 = (zext_ln18_fu_916_p1 + select_ln37_1_reg_2483);

assign add_ln899_fu_2128_p2 = ($signed(14'd16331) + $signed(trunc_ln894_fu_2050_p1));

assign add_ln8_fu_734_p2 = (indvar_flatten21_reg_620 + 11'd1);

assign add_ln908_fu_2178_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_2922));

assign add_ln915_fu_2259_p2 = (sub_ln915_fu_2254_p2 + select_ln915_fu_2246_p3);

assign and_ln37_fu_800_p2 = (xor_ln37_fu_788_p2 & icmp_ln14_fu_794_p2);

assign and_ln899_fu_2142_p2 = (xor_ln899_fu_2122_p2 & p_Result_22_fu_2134_p3);

assign and_ln924_fu_2315_p2 = (or_ln924_fu_2311_p2 & grp_fu_711_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_716_p2 = (c_0_reg_654 + 4'd1);

assign conv_2_bias_V_address0 = zext_ln26_reg_2514;

assign conv_2_weights_V_0_0_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_0_1_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_0_2_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_0_3_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_0_4_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_0_5_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_0_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_1_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_2_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_3_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_4_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_1_5_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_0_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_1_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_2_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_3_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_4_address0 = zext_ln1116_1_fu_937_p1;

assign conv_2_weights_V_2_5_address0 = zext_ln1116_1_fu_937_p1;

assign conv_out_V_address0 = conv_out_V_addr_reg_2524;

assign conv_out_V_d0 = storemerge_reg_699;

assign f_fu_2321_p2 = (select_ln37_4_reg_2489 + 5'd1);

assign grp_fu_2339_p0 = grp_fu_2339_p00;

assign grp_fu_2339_p00 = select_ln37_1_fu_760_p3;

assign grp_fu_2339_p1 = 8'd11;

assign grp_fu_2339_p2 = grp_fu_2339_p20;

assign grp_fu_2339_p20 = select_ln37_5_fu_826_p3;

assign grp_fu_711_p0 = p_Result_26_fu_2272_p5;

assign icmp_ln11_fu_746_p2 = ((indvar_flatten_reg_642 == 9'd176) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_794_p2 = ((f_0_reg_665 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_904_p2 = ((ap_phi_mux_wr_0_phi_fu_692_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_1993_p2 = ((tmp_V_4_fu_1987_p2 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_1_fu_2102_p2 = ((p_Result_21_fu_2096_p2 != 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_2070_p2 = (($signed(tmp_25_fu_2060_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_728_p2 = ((indvar_flatten21_reg_620 == 11'd1936) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_2162_p2 = (($signed(lsb_index_fu_2054_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln924_1_fu_2305_p2 = ((trunc_ln4_fu_2289_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln924_fu_2299_p2 = ((add_ln915_fu_2259_p2 != 11'd2047) ? 1'b1 : 1'b0);


always @ (p_Result_25_fu_2028_p3) begin
    if (p_Result_25_fu_2028_p3[0] == 1'b1) begin
        l_fu_2036_p3 = 32'd0;
    end else if (p_Result_25_fu_2028_p3[1] == 1'b1) begin
        l_fu_2036_p3 = 32'd1;
    end else if (p_Result_25_fu_2028_p3[2] == 1'b1) begin
        l_fu_2036_p3 = 32'd2;
    end else if (p_Result_25_fu_2028_p3[3] == 1'b1) begin
        l_fu_2036_p3 = 32'd3;
    end else if (p_Result_25_fu_2028_p3[4] == 1'b1) begin
        l_fu_2036_p3 = 32'd4;
    end else if (p_Result_25_fu_2028_p3[5] == 1'b1) begin
        l_fu_2036_p3 = 32'd5;
    end else if (p_Result_25_fu_2028_p3[6] == 1'b1) begin
        l_fu_2036_p3 = 32'd6;
    end else if (p_Result_25_fu_2028_p3[7] == 1'b1) begin
        l_fu_2036_p3 = 32'd7;
    end else if (p_Result_25_fu_2028_p3[8] == 1'b1) begin
        l_fu_2036_p3 = 32'd8;
    end else if (p_Result_25_fu_2028_p3[9] == 1'b1) begin
        l_fu_2036_p3 = 32'd9;
    end else if (p_Result_25_fu_2028_p3[10] == 1'b1) begin
        l_fu_2036_p3 = 32'd10;
    end else if (p_Result_25_fu_2028_p3[11] == 1'b1) begin
        l_fu_2036_p3 = 32'd11;
    end else if (p_Result_25_fu_2028_p3[12] == 1'b1) begin
        l_fu_2036_p3 = 32'd12;
    end else if (p_Result_25_fu_2028_p3[13] == 1'b1) begin
        l_fu_2036_p3 = 32'd13;
    end else if (p_Result_25_fu_2028_p3[14] == 1'b1) begin
        l_fu_2036_p3 = 32'd14;
    end else if (p_Result_25_fu_2028_p3[15] == 1'b1) begin
        l_fu_2036_p3 = 32'd15;
    end else if (p_Result_25_fu_2028_p3[16] == 1'b1) begin
        l_fu_2036_p3 = 32'd16;
    end else if (p_Result_25_fu_2028_p3[17] == 1'b1) begin
        l_fu_2036_p3 = 32'd17;
    end else if (p_Result_25_fu_2028_p3[18] == 1'b1) begin
        l_fu_2036_p3 = 32'd18;
    end else if (p_Result_25_fu_2028_p3[19] == 1'b1) begin
        l_fu_2036_p3 = 32'd19;
    end else if (p_Result_25_fu_2028_p3[20] == 1'b1) begin
        l_fu_2036_p3 = 32'd20;
    end else if (p_Result_25_fu_2028_p3[21] == 1'b1) begin
        l_fu_2036_p3 = 32'd21;
    end else if (p_Result_25_fu_2028_p3[22] == 1'b1) begin
        l_fu_2036_p3 = 32'd22;
    end else if (p_Result_25_fu_2028_p3[23] == 1'b1) begin
        l_fu_2036_p3 = 32'd23;
    end else if (p_Result_25_fu_2028_p3[24] == 1'b1) begin
        l_fu_2036_p3 = 32'd24;
    end else if (p_Result_25_fu_2028_p3[25] == 1'b1) begin
        l_fu_2036_p3 = 32'd25;
    end else if (p_Result_25_fu_2028_p3[26] == 1'b1) begin
        l_fu_2036_p3 = 32'd26;
    end else if (p_Result_25_fu_2028_p3[27] == 1'b1) begin
        l_fu_2036_p3 = 32'd27;
    end else if (p_Result_25_fu_2028_p3[28] == 1'b1) begin
        l_fu_2036_p3 = 32'd28;
    end else if (p_Result_25_fu_2028_p3[29] == 1'b1) begin
        l_fu_2036_p3 = 32'd29;
    end else if (p_Result_25_fu_2028_p3[30] == 1'b1) begin
        l_fu_2036_p3 = 32'd30;
    end else if (p_Result_25_fu_2028_p3[31] == 1'b1) begin
        l_fu_2036_p3 = 32'd31;
    end else begin
        l_fu_2036_p3 = 32'd32;
    end
end

assign lsb_index_fu_2054_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_2044_p2));

assign lshr_ln897_fu_2090_p2 = 14'd16383 >> zext_ln897_fu_2086_p1;

assign lshr_ln908_fu_2183_p2 = zext_ln907_1_fu_2175_p1 >> add_ln908_fu_2178_p2;

assign m_1_fu_2208_p3 = ((icmp_ln908_reg_2933[0:0] === 1'b1) ? zext_ln908_fu_2189_p1 : shl_ln908_fu_2202_p2);

assign m_2_fu_2218_p2 = (zext_ln911_fu_2215_p1 + m_1_fu_2208_p3);

assign m_5_fu_2224_p4 = {{m_2_fu_2218_p2[63:1]}};

assign m_6_fu_2234_p1 = m_5_fu_2224_p4;

assign m_fu_2172_p1 = tmp_V_5_reg_2916;

assign mul_ln1117_fu_968_p0 = mul_ln1117_fu_968_p00;

assign mul_ln1117_fu_968_p00 = add_ln26_fu_959_p2;

assign mul_ln1117_fu_968_p2 = (mul_ln1117_fu_968_p0 * $signed('hD));

assign or_ln1117_1_fu_1269_p2 = (sub_ln1117_1_fu_1258_p2 | 11'd1);

assign or_ln1117_2_fu_1598_p2 = (sub_ln1117_2_fu_1587_p2 | 11'd1);

assign or_ln1117_fu_1010_p2 = (sub_ln1117_fu_999_p2 | 11'd1);

assign or_ln37_fu_812_p2 = (icmp_ln11_fu_746_p2 | and_ln37_fu_800_p2);

assign or_ln899_fu_2148_p2 = (and_ln899_fu_2142_p2 | a_fu_2108_p2);

assign or_ln924_fu_2311_p2 = (icmp_ln924_reg_2948 | icmp_ln924_1_reg_2953);

assign or_ln_fu_2154_p3 = {{31'd0}, {or_ln899_fu_2148_p2}};

assign p_Result_21_fu_2096_p2 = (tmp_V_5_fu_2011_p3 & lshr_ln897_fu_2090_p2);

assign p_Result_22_fu_2134_p3 = tmp_V_5_fu_2011_p3[add_ln899_fu_2128_p2];

assign p_Result_24_fu_1999_p3 = tmp_V_4_reg_2899[32'd13];

assign p_Result_25_fu_2028_p3 = {{18'd262143}, {p_Result_s_fu_2018_p4}};

assign p_Result_26_fu_2272_p5 = {{tmp_4_fu_2265_p3}, {m_6_fu_2234_p1[51:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_5_fu_2011_p3) begin
    for (ap_tvar_int_0 = 14 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 13 - 0) begin
            p_Result_s_fu_2018_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_2018_p4[ap_tvar_int_0] = tmp_V_5_fu_2011_p3[13 - ap_tvar_int_0];
        end
    end
end

assign p_shl2_cast_fu_1240_p3 = {{add_ln1117_5_reg_2646}, {3'd0}};

assign p_shl4_cast_fu_979_p3 = {{add_ln1117_fu_974_p2}, {3'd0}};

assign p_shl_cast_fu_1569_p3 = {{add_ln1117_10_reg_2652}, {3'd0}};

assign r_fu_740_p2 = (r_0_reg_631 + 4'd1);

assign select_ln11_fu_2332_p3 = ((icmp_ln11_reg_2478[0:0] === 1'b1) ? 9'd1 : add_ln11_fu_2326_p2);

assign select_ln37_1_fu_760_p3 = ((icmp_ln11_fu_746_p2[0:0] === 1'b1) ? r_fu_740_p2 : r_0_reg_631);

assign select_ln37_2_fu_772_p3 = ((icmp_ln11_fu_746_p2[0:0] === 1'b1) ? 4'd1 : c_fu_716_p2);

assign select_ln37_3_fu_780_p3 = ((icmp_ln11_fu_746_p2[0:0] === 1'b1) ? 4'd2 : add_ln26_2_fu_722_p2);

assign select_ln37_4_fu_818_p3 = ((or_ln37_fu_812_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_665);

assign select_ln37_5_fu_826_p3 = ((and_ln37_fu_800_p2[0:0] === 1'b1) ? add_ln26_3_fu_806_p2 : select_ln37_fu_752_p3);

assign select_ln37_6_fu_851_p3 = ((and_ln37_fu_800_p2[0:0] === 1'b1) ? add_ln26_4_fu_845_p2 : select_ln37_2_fu_772_p3);

assign select_ln37_7_fu_869_p3 = ((and_ln37_fu_800_p2[0:0] === 1'b1) ? add_ln26_5_fu_863_p2 : select_ln37_3_fu_780_p3);

assign select_ln37_fu_752_p3 = ((icmp_ln11_fu_746_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_654);

assign select_ln915_fu_2246_p3 = ((tmp_27_fu_2238_p3[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1118_11_fu_1318_p1 = mul_ln1118_5_fu_2383_p2;

assign sext_ln1118_13_fu_1390_p1 = mul_ln1118_6_fu_2390_p2;

assign sext_ln1118_15_fu_1421_p1 = mul_ln1118_7_fu_2397_p2;

assign sext_ln1118_17_fu_1493_p1 = mul_ln1118_8_fu_2404_p2;

assign sext_ln1118_19_fu_1524_p1 = mul_ln1118_9_fu_2411_p2;

assign sext_ln1118_1_fu_1059_p1 = mul_ln1118_fu_2348_p2;

assign sext_ln1118_21_fu_1616_p1 = mul_ln1118_10_fu_2418_p2;

assign sext_ln1118_23_fu_1725_p1 = mul_ln1118_11_reg_2839;

assign sext_ln1118_25_fu_1749_p1 = mul_ln1118_12_reg_2859;

assign sext_ln1118_27_fu_1784_p1 = mul_ln1118_13_reg_2864;

assign sext_ln1118_29_fu_1819_p1 = mul_ln1118_14_reg_2879;

assign sext_ln1118_31_fu_1854_p1 = mul_ln1118_15_reg_2884;

assign sext_ln1118_33_fu_1896_p1 = mul_ln1118_16_fu_2455_p2;

assign sext_ln1118_35_fu_1938_p1 = mul_ln1118_17_fu_2462_p2;

assign sext_ln1118_3_fu_1092_p1 = mul_ln1118_1_fu_2355_p2;

assign sext_ln1118_5_fu_1164_p1 = mul_ln1118_2_fu_2362_p2;

assign sext_ln1118_7_fu_1195_p1 = mul_ln1118_3_fu_2369_p2;

assign sext_ln1118_9_fu_1287_p1 = mul_ln1118_4_fu_2376_p2;

assign sext_ln1265_fu_1983_p1 = $signed(conv_2_bias_V_q0);

assign shl_ln728_10_fu_1728_p3 = {{tmp_17_reg_2844}, {8'd0}};

assign shl_ln728_11_fu_1762_p3 = {{tmp_18_fu_1752_p4}, {8'd0}};

assign shl_ln728_12_fu_1797_p3 = {{tmp_19_fu_1787_p4}, {8'd0}};

assign shl_ln728_13_fu_1832_p3 = {{tmp_20_fu_1822_p4}, {8'd0}};

assign shl_ln728_14_fu_1867_p3 = {{tmp_21_fu_1857_p4}, {8'd0}};

assign shl_ln728_15_fu_1909_p3 = {{tmp_22_fu_1899_p4}, {8'd0}};

assign shl_ln728_16_fu_1951_p3 = {{tmp_23_fu_1941_p4}, {8'd0}};

assign shl_ln728_1_fu_1105_p3 = {{tmp_5_fu_1095_p4}, {8'd0}};

assign shl_ln728_2_fu_1167_p3 = {{tmp_8_reg_2673}, {8'd0}};

assign shl_ln728_3_fu_1208_p3 = {{tmp_9_fu_1198_p4}, {8'd0}};

assign shl_ln728_4_fu_1290_p3 = {{tmp_10_reg_2763}, {8'd0}};

assign shl_ln728_5_fu_1331_p3 = {{tmp_11_fu_1321_p4}, {8'd0}};

assign shl_ln728_6_fu_1393_p3 = {{tmp_12_reg_2786}, {8'd0}};

assign shl_ln728_7_fu_1434_p3 = {{tmp_13_fu_1424_p4}, {8'd0}};

assign shl_ln728_8_fu_1496_p3 = {{tmp_14_reg_2801}, {8'd0}};

assign shl_ln728_9_fu_1537_p3 = {{tmp_15_fu_1527_p4}, {8'd0}};

assign shl_ln728_s_fu_1619_p3 = {{tmp_16_reg_2816}, {8'd0}};

assign shl_ln908_fu_2202_p2 = m_fu_2172_p1 << zext_ln908_1_fu_2198_p1;

assign shl_ln_fu_1062_p3 = {{p_Val2_s_reg_676}, {8'd0}};

assign sub_ln1117_1_fu_1258_p2 = (p_shl2_cast_fu_1240_p3 - zext_ln1117_8_fu_1254_p1);

assign sub_ln1117_2_fu_1587_p2 = (p_shl_cast_fu_1569_p3 - zext_ln1117_15_fu_1583_p1);

assign sub_ln1117_fu_999_p2 = (p_shl4_cast_fu_979_p3 - zext_ln1117_1_fu_995_p1);

assign sub_ln894_fu_2044_p2 = (32'd14 - l_fu_2036_p3);

assign sub_ln897_fu_2080_p2 = (4'd4 - trunc_ln897_fu_2076_p1);

assign sub_ln908_fu_2193_p2 = (32'd54 - sub_ln894_reg_2922);

assign sub_ln915_fu_2254_p2 = (11'd6 - trunc_ln893_reg_2938);

assign tmp_11_fu_1321_p4 = {{add_ln1192_4_fu_1305_p2[21:8]}};

assign tmp_13_fu_1424_p4 = {{add_ln1192_6_fu_1408_p2[21:8]}};

assign tmp_15_fu_1527_p4 = {{add_ln1192_8_fu_1511_p2[21:8]}};

assign tmp_17_cast_fu_838_p3 = {{grp_fu_2339_p3}, {4'd0}};

assign tmp_18_fu_1752_p4 = {{add_ln1192_11_fu_1743_p2[21:8]}};

assign tmp_19_fu_1787_p4 = {{add_ln1192_12_fu_1778_p2[21:8]}};

assign tmp_20_fu_1822_p4 = {{add_ln1192_13_fu_1813_p2[21:8]}};

assign tmp_21_fu_1857_p4 = {{add_ln1192_14_fu_1848_p2[21:8]}};

assign tmp_22_fu_1899_p4 = {{add_ln1192_15_fu_1883_p2[21:8]}};

assign tmp_23_fu_1941_p4 = {{add_ln1192_16_fu_1925_p2[21:8]}};

assign tmp_25_fu_2060_p4 = {{lsb_index_fu_2054_p2[31:1]}};

assign tmp_26_fu_2114_p3 = lsb_index_fu_2054_p2[32'd31];

assign tmp_27_fu_2238_p3 = m_2_fu_2218_p2[32'd54];

assign tmp_4_fu_2265_p3 = {{p_Result_24_reg_2911}, {add_ln915_fu_2259_p2}};

assign tmp_5_fu_1095_p4 = {{add_ln1192_fu_1078_p2[21:8]}};

assign tmp_6_fu_1247_p3 = {{add_ln1117_5_reg_2646}, {1'd0}};

assign tmp_7_fu_1576_p3 = {{add_ln1117_10_reg_2652}, {1'd0}};

assign tmp_9_fu_1198_p4 = {{add_ln1192_2_fu_1182_p2[21:8]}};

assign tmp_V_4_fu_1987_p2 = ($signed(sext_ln1265_fu_1983_p1) + $signed(p_Val2_s_reg_676));

assign tmp_V_5_fu_2011_p3 = ((p_Result_24_fu_1999_p3[0:0] === 1'b1) ? tmp_V_fu_2006_p2 : tmp_V_4_reg_2899);

assign tmp_V_fu_2006_p2 = (14'd0 - tmp_V_4_reg_2899);

assign tmp_fu_987_p3 = {{add_ln1117_fu_974_p2}, {1'd0}};

assign tmp_s_fu_920_p3 = {{ap_phi_mux_wr_0_phi_fu_692_p4}, {4'd0}};

assign trunc_ln4_fu_2289_p4 = {{m_2_fu_2218_p2[52:1]}};

assign trunc_ln893_fu_2168_p1 = l_fu_2036_p3[10:0];

assign trunc_ln894_fu_2050_p1 = sub_ln894_fu_2044_p2[13:0];

assign trunc_ln897_fu_2076_p1 = sub_ln894_fu_2044_p2[3:0];

assign wr_fu_910_p2 = (ap_phi_mux_wr_0_phi_fu_692_p4 + 2'd1);

assign xor_ln37_fu_788_p2 = (icmp_ln11_fu_746_p2 ^ 1'd1);

assign xor_ln899_fu_2122_p2 = (tmp_26_fu_2114_p3 ^ 1'd1);

assign zext_ln1116_1_fu_937_p1 = add_ln1116_fu_932_p2;

assign zext_ln1116_fu_928_p1 = tmp_s_fu_920_p3;

assign zext_ln1117_10_fu_1275_p1 = or_ln1117_1_fu_1269_p2;

assign zext_ln1117_11_fu_1368_p1 = add_ln1117_6_fu_1363_p2;

assign zext_ln1117_12_fu_1378_p1 = add_ln1117_7_fu_1373_p2;

assign zext_ln1117_13_fu_1471_p1 = add_ln1117_8_fu_1466_p2;

assign zext_ln1117_14_fu_1481_p1 = add_ln1117_9_fu_1476_p2;

assign zext_ln1117_15_fu_1583_p1 = tmp_7_fu_1576_p3;

assign zext_ln1117_16_fu_1593_p1 = sub_ln1117_2_fu_1587_p2;

assign zext_ln1117_17_fu_1604_p1 = or_ln1117_2_fu_1598_p2;

assign zext_ln1117_18_fu_1662_p1 = add_ln1117_11_fu_1657_p2;

assign zext_ln1117_19_fu_1672_p1 = add_ln1117_12_fu_1667_p2;

assign zext_ln1117_1_fu_995_p1 = tmp_fu_987_p3;

assign zext_ln1117_20_fu_1696_p1 = add_ln1117_13_fu_1691_p2;

assign zext_ln1117_21_fu_1706_p1 = add_ln1117_14_fu_1701_p2;

assign zext_ln1117_2_fu_1005_p1 = sub_ln1117_fu_999_p2;

assign zext_ln1117_3_fu_1016_p1 = or_ln1117_fu_1010_p2;

assign zext_ln1117_4_fu_1036_p1 = add_ln1117_1_fu_1031_p2;

assign zext_ln1117_5_fu_1046_p1 = add_ln1117_2_fu_1041_p2;

assign zext_ln1117_6_fu_1142_p1 = add_ln1117_3_fu_1137_p2;

assign zext_ln1117_7_fu_1152_p1 = add_ln1117_4_fu_1147_p2;

assign zext_ln1117_8_fu_1254_p1 = tmp_6_fu_1247_p3;

assign zext_ln1117_9_fu_1264_p1 = sub_ln1117_1_fu_1258_p2;

assign zext_ln18_fu_916_p1 = ap_phi_mux_wr_0_phi_fu_692_p4;

assign zext_ln203_10_fu_885_p1 = select_ln37_4_fu_818_p3;

assign zext_ln203_11_fu_889_p1 = select_ln37_4_fu_818_p3;

assign zext_ln203_12_fu_899_p1 = add_ln203_6_fu_893_p2;

assign zext_ln26_fu_881_p1 = select_ln37_4_fu_818_p3;

assign zext_ln37_1_fu_859_p1 = select_ln37_6_fu_851_p3;

assign zext_ln37_2_fu_877_p1 = select_ln37_7_fu_869_p3;

assign zext_ln37_fu_834_p1 = select_ln37_5_fu_826_p3;

assign zext_ln703_10_fu_1549_p1 = $unsigned(sext_ln1118_19_fu_1524_p1);

assign zext_ln703_11_fu_1630_p1 = $unsigned(sext_ln1118_21_fu_1616_p1);

assign zext_ln703_12_fu_1739_p1 = $unsigned(sext_ln1118_23_fu_1725_p1);

assign zext_ln703_13_fu_1774_p1 = $unsigned(sext_ln1118_25_fu_1749_p1);

assign zext_ln703_14_fu_1809_p1 = $unsigned(sext_ln1118_27_fu_1784_p1);

assign zext_ln703_15_fu_1844_p1 = $unsigned(sext_ln1118_29_fu_1819_p1);

assign zext_ln703_16_fu_1879_p1 = $unsigned(sext_ln1118_31_fu_1854_p1);

assign zext_ln703_17_fu_1921_p1 = $unsigned(sext_ln1118_33_fu_1896_p1);

assign zext_ln703_18_fu_1963_p1 = $unsigned(sext_ln1118_35_fu_1938_p1);

assign zext_ln703_2_fu_1117_p1 = $unsigned(sext_ln1118_3_fu_1092_p1);

assign zext_ln703_3_fu_1178_p1 = $unsigned(sext_ln1118_5_fu_1164_p1);

assign zext_ln703_4_fu_1220_p1 = $unsigned(sext_ln1118_7_fu_1195_p1);

assign zext_ln703_5_fu_1301_p1 = $unsigned(sext_ln1118_9_fu_1287_p1);

assign zext_ln703_6_fu_1343_p1 = $unsigned(sext_ln1118_11_fu_1318_p1);

assign zext_ln703_7_fu_1404_p1 = $unsigned(sext_ln1118_13_fu_1390_p1);

assign zext_ln703_8_fu_1446_p1 = $unsigned(sext_ln1118_15_fu_1421_p1);

assign zext_ln703_9_fu_1507_p1 = $unsigned(sext_ln1118_17_fu_1493_p1);

assign zext_ln703_fu_1074_p1 = $unsigned(sext_ln1118_1_fu_1059_p1);

assign zext_ln728_10_fu_1626_p1 = shl_ln728_s_fu_1619_p3;

assign zext_ln728_11_fu_1735_p1 = shl_ln728_10_fu_1728_p3;

assign zext_ln728_12_fu_1770_p1 = shl_ln728_11_fu_1762_p3;

assign zext_ln728_13_fu_1805_p1 = shl_ln728_12_fu_1797_p3;

assign zext_ln728_14_fu_1840_p1 = shl_ln728_13_fu_1832_p3;

assign zext_ln728_15_fu_1875_p1 = shl_ln728_14_fu_1867_p3;

assign zext_ln728_16_fu_1917_p1 = shl_ln728_15_fu_1909_p3;

assign zext_ln728_17_fu_1959_p1 = shl_ln728_16_fu_1951_p3;

assign zext_ln728_1_fu_1113_p1 = shl_ln728_1_fu_1105_p3;

assign zext_ln728_2_fu_1174_p1 = shl_ln728_2_fu_1167_p3;

assign zext_ln728_3_fu_1216_p1 = shl_ln728_3_fu_1208_p3;

assign zext_ln728_4_fu_1297_p1 = shl_ln728_4_fu_1290_p3;

assign zext_ln728_5_fu_1339_p1 = shl_ln728_5_fu_1331_p3;

assign zext_ln728_6_fu_1400_p1 = shl_ln728_6_fu_1393_p3;

assign zext_ln728_7_fu_1442_p1 = shl_ln728_7_fu_1434_p3;

assign zext_ln728_8_fu_1503_p1 = shl_ln728_8_fu_1496_p3;

assign zext_ln728_9_fu_1545_p1 = shl_ln728_9_fu_1537_p3;

assign zext_ln728_fu_1070_p1 = shl_ln_fu_1062_p3;

assign zext_ln897_fu_2086_p1 = sub_ln897_fu_2080_p2;

assign zext_ln907_1_fu_2175_p1 = tmp_V_5_reg_2916;

assign zext_ln908_1_fu_2198_p1 = sub_ln908_fu_2193_p2;

assign zext_ln908_fu_2189_p1 = lshr_ln908_fu_2183_p2;

assign zext_ln911_fu_2215_p1 = or_ln_reg_2928;

always @ (posedge ap_clk) begin
    zext_ln37_reg_2499[7:4] <= 4'b0000;
    zext_ln37_1_reg_2504[7:4] <= 4'b0000;
    zext_ln37_2_reg_2509[7:4] <= 4'b0000;
    zext_ln26_reg_2514[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln203_10_reg_2519[6:5] <= 2'b00;
    sub_ln1117_reg_2628[0] <= 1'b0;
    sub_ln1117_1_reg_2768[0] <= 1'b0;
    sub_ln1117_2_reg_2821[0] <= 1'b0;
    or_ln_reg_2928[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //conv_2
