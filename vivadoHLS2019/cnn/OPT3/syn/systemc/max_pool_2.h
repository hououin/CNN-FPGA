// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32ndEe.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_out< sc_lv<11> > conv_2_out_address0;
    sc_out< sc_logic > conv_2_out_ce0;
    sc_in< sc_lv<32> > conv_2_out_q0;
    sc_out< sc_lv<11> > conv_2_out_address1;
    sc_out< sc_logic > conv_2_out_ce1;
    sc_in< sc_lv<32> > conv_2_out_q1;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32ndEe<1,2,32,32,1>* cnn_fcmp_32ns_32ndEe_U128;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > indvar_flatten59_reg_130;
    sc_signal< sc_lv<5> > f_0_reg_141;
    sc_signal< sc_lv<7> > indvar_flatten22_reg_152;
    sc_signal< sc_lv<3> > r_0_reg_164;
    sc_signal< sc_lv<5> > indvar_flatten_reg_175;
    sc_signal< sc_lv<3> > c_0_reg_186;
    sc_signal< sc_lv<32> > max_0_reg_197;
    sc_signal< sc_lv<2> > mpr_0_reg_209;
    sc_signal< sc_lv<1> > icmp_ln10_fu_239_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_820;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_820_pp0_iter1_reg;
    sc_signal< sc_lv<10> > add_ln10_fu_245_p2;
    sc_signal< sc_lv<10> > add_ln10_reg_824;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_257_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_829;
    sc_signal< sc_lv<5> > select_ln29_3_fu_271_p3;
    sc_signal< sc_lv<5> > select_ln29_3_reg_834;
    sc_signal< sc_lv<1> > or_ln13_fu_335_p2;
    sc_signal< sc_lv<1> > or_ln13_reg_840;
    sc_signal< sc_lv<3> > select_ln13_2_fu_365_p3;
    sc_signal< sc_lv<3> > select_ln13_2_reg_845;
    sc_signal< sc_lv<1> > or_ln16_1_fu_419_p2;
    sc_signal< sc_lv<1> > or_ln16_1_reg_852;
    sc_signal< sc_lv<2> > select_ln16_1_fu_425_p3;
    sc_signal< sc_lv<2> > select_ln16_1_reg_857;
    sc_signal< sc_lv<3> > select_ln16_4_fu_471_p3;
    sc_signal< sc_lv<3> > select_ln16_4_reg_862;
    sc_signal< sc_lv<5> > add_ln16_fu_549_p2;
    sc_signal< sc_lv<5> > add_ln16_reg_878;
    sc_signal< sc_lv<32> > select_ln16_fu_555_p3;
    sc_signal< sc_lv<32> > select_ln16_reg_883;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > conv_2_out_load_reg_890;
    sc_signal< sc_lv<32> > conv_2_out_load_1_reg_897;
    sc_signal< sc_lv<2> > mpr_fu_563_p2;
    sc_signal< sc_lv<2> > mpr_reg_904;
    sc_signal< sc_lv<5> > select_ln16_5_fu_568_p3;
    sc_signal< sc_lv<5> > select_ln16_5_reg_910;
    sc_signal< sc_lv<7> > select_ln13_5_fu_580_p3;
    sc_signal< sc_lv<7> > select_ln13_5_reg_915;
    sc_signal< sc_lv<32> > select_ln29_fu_692_p3;
    sc_signal< sc_lv<32> > select_ln29_reg_920;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_699_p2;
    sc_signal< sc_lv<1> > icmp_ln20_1_reg_927;
    sc_signal< sc_lv<10> > add_ln36_2_fu_721_p2;
    sc_signal< sc_lv<10> > add_ln36_2_reg_931;
    sc_signal< sc_lv<32> > select_ln29_1_fu_809_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<10> > ap_phi_mux_indvar_flatten59_phi_fu_134_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > ap_phi_mux_f_0_phi_fu_145_p4;
    sc_signal< sc_lv<7> > ap_phi_mux_indvar_flatten22_phi_fu_156_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_r_0_phi_fu_168_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_indvar_flatten_phi_fu_179_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_190_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_max_0_phi_fu_201_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_213_p4;
    sc_signal< sc_lv<64> > zext_ln29_1_fu_519_p1;
    sc_signal< sc_lv<64> > zext_ln29_2_fu_544_p1;
    sc_signal< sc_lv<64> > zext_ln36_3_fu_816_p1;
    sc_signal< sc_lv<32> > grp_fu_220_p0;
    sc_signal< sc_lv<32> > grp_fu_220_p1;
    sc_signal< sc_lv<4> > shl_ln1_fu_225_p3;
    sc_signal< sc_lv<5> > f_fu_251_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_283_p3;
    sc_signal< sc_lv<1> > icmp_ln20_fu_305_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_299_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_317_p2;
    sc_signal< sc_lv<3> > select_ln29_2_fu_263_p3;
    sc_signal< sc_lv<1> > and_ln29_5_fu_323_p2;
    sc_signal< sc_lv<3> > r_fu_329_p2;
    sc_signal< sc_lv<4> > shl_ln26_mid1_fu_349_p3;
    sc_signal< sc_lv<4> > select_ln29_4_fu_291_p3;
    sc_signal< sc_lv<4> > or_ln27_fu_233_p2;
    sc_signal< sc_lv<1> > xor_ln13_fu_389_p2;
    sc_signal< sc_lv<1> > and_ln29_4_fu_311_p2;
    sc_signal< sc_lv<1> > or_ln13_1_fu_395_p2;
    sc_signal< sc_lv<3> > select_ln13_fu_341_p3;
    sc_signal< sc_lv<1> > and_ln13_fu_401_p2;
    sc_signal< sc_lv<1> > or_ln16_fu_413_p2;
    sc_signal< sc_lv<3> > c_fu_407_p2;
    sc_signal< sc_lv<4> > shl_ln27_mid1_fu_433_p3;
    sc_signal< sc_lv<4> > select_ln13_3_fu_373_p3;
    sc_signal< sc_lv<4> > select_ln16_2_fu_441_p3;
    sc_signal< sc_lv<4> > or_ln27_1_fu_453_p2;
    sc_signal< sc_lv<4> > select_ln13_4_fu_381_p3;
    sc_signal< sc_lv<4> > select_ln16_3_fu_459_p3;
    sc_signal< sc_lv<4> > zext_ln20_fu_479_p1;
    sc_signal< sc_lv<4> > select_ln13_1_fu_357_p3;
    sc_signal< sc_lv<4> > i_fu_483_p2;
    sc_signal< sc_lv<4> > mul_ln29_fu_493_p1;
    sc_signal< sc_lv<8> > mul_ln29_fu_493_p2;
    sc_signal< sc_lv<8> > zext_ln16_fu_449_p1;
    sc_signal< sc_lv<8> > add_ln29_fu_499_p2;
    sc_signal< sc_lv<12> > tmp_3_cast_fu_505_p3;
    sc_signal< sc_lv<12> > zext_ln26_1_fu_279_p1;
    sc_signal< sc_lv<12> > add_ln29_1_fu_513_p2;
    sc_signal< sc_lv<8> > zext_ln16_1_fu_467_p1;
    sc_signal< sc_lv<8> > add_ln29_2_fu_524_p2;
    sc_signal< sc_lv<12> > tmp_11_cast_fu_530_p3;
    sc_signal< sc_lv<12> > add_ln29_3_fu_538_p2;
    sc_signal< sc_lv<7> > add_ln13_1_fu_574_p2;
    sc_signal< sc_lv<5> > tmp_fu_593_p3;
    sc_signal< sc_lv<6> > zext_ln36_fu_590_p1;
    sc_signal< sc_lv<6> > zext_ln36_2_fu_600_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_610_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_1_fu_627_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_613_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_623_p1;
    sc_signal< sc_lv<1> > icmp_ln29_1_fu_650_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_644_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_630_p4;
    sc_signal< sc_lv<23> > trunc_ln29_1_fu_640_p1;
    sc_signal< sc_lv<1> > icmp_ln29_3_fu_668_p2;
    sc_signal< sc_lv<1> > icmp_ln29_2_fu_662_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_656_p2;
    sc_signal< sc_lv<1> > or_ln29_1_fu_674_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_680_p2;
    sc_signal< sc_lv<1> > grp_fu_220_p2;
    sc_signal< sc_lv<1> > and_ln29_1_fu_686_p2;
    sc_signal< sc_lv<6> > add_ln36_fu_604_p2;
    sc_signal< sc_lv<6> > zext_ln36_1_fu_704_p1;
    sc_signal< sc_lv<6> > add_ln36_1_fu_707_p2;
    sc_signal< sc_lv<10> > tmp_13_cast_fu_713_p3;
    sc_signal< sc_lv<10> > zext_ln26_fu_587_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_2_fu_727_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_3_fu_744_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_730_p4;
    sc_signal< sc_lv<23> > trunc_ln29_2_fu_740_p1;
    sc_signal< sc_lv<1> > icmp_ln29_5_fu_767_p2;
    sc_signal< sc_lv<1> > icmp_ln29_4_fu_761_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_747_p4;
    sc_signal< sc_lv<23> > trunc_ln29_3_fu_757_p1;
    sc_signal< sc_lv<1> > icmp_ln29_7_fu_785_p2;
    sc_signal< sc_lv<1> > icmp_ln29_6_fu_779_p2;
    sc_signal< sc_lv<1> > or_ln29_2_fu_773_p2;
    sc_signal< sc_lv<1> > or_ln29_3_fu_791_p2;
    sc_signal< sc_lv<1> > and_ln29_2_fu_797_p2;
    sc_signal< sc_lv<1> > and_ln29_3_fu_803_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > mul_ln29_fu_493_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_320;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_32;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_245_p2();
    void thread_add_ln13_1_fu_574_p2();
    void thread_add_ln16_fu_549_p2();
    void thread_add_ln29_1_fu_513_p2();
    void thread_add_ln29_2_fu_524_p2();
    void thread_add_ln29_3_fu_538_p2();
    void thread_add_ln29_fu_499_p2();
    void thread_add_ln36_1_fu_707_p2();
    void thread_add_ln36_2_fu_721_p2();
    void thread_add_ln36_fu_604_p2();
    void thread_and_ln13_fu_401_p2();
    void thread_and_ln29_1_fu_686_p2();
    void thread_and_ln29_2_fu_797_p2();
    void thread_and_ln29_3_fu_803_p2();
    void thread_and_ln29_4_fu_311_p2();
    void thread_and_ln29_5_fu_323_p2();
    void thread_and_ln29_fu_680_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_190_p4();
    void thread_ap_phi_mux_f_0_phi_fu_145_p4();
    void thread_ap_phi_mux_indvar_flatten22_phi_fu_156_p4();
    void thread_ap_phi_mux_indvar_flatten59_phi_fu_134_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_179_p4();
    void thread_ap_phi_mux_max_0_phi_fu_201_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_213_p4();
    void thread_ap_phi_mux_r_0_phi_fu_168_p4();
    void thread_ap_ready();
    void thread_bitcast_ln29_1_fu_627_p1();
    void thread_bitcast_ln29_2_fu_727_p1();
    void thread_bitcast_ln29_3_fu_744_p1();
    void thread_bitcast_ln29_fu_610_p1();
    void thread_c_fu_407_p2();
    void thread_conv_2_out_address0();
    void thread_conv_2_out_address1();
    void thread_conv_2_out_ce0();
    void thread_conv_2_out_ce1();
    void thread_f_fu_251_p2();
    void thread_grp_fu_220_p0();
    void thread_grp_fu_220_p1();
    void thread_i_fu_483_p2();
    void thread_icmp_ln10_fu_239_p2();
    void thread_icmp_ln13_fu_257_p2();
    void thread_icmp_ln16_fu_317_p2();
    void thread_icmp_ln20_1_fu_699_p2();
    void thread_icmp_ln20_fu_305_p2();
    void thread_icmp_ln29_1_fu_650_p2();
    void thread_icmp_ln29_2_fu_662_p2();
    void thread_icmp_ln29_3_fu_668_p2();
    void thread_icmp_ln29_4_fu_761_p2();
    void thread_icmp_ln29_5_fu_767_p2();
    void thread_icmp_ln29_6_fu_779_p2();
    void thread_icmp_ln29_7_fu_785_p2();
    void thread_icmp_ln29_fu_644_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpr_fu_563_p2();
    void thread_mul_ln29_fu_493_p1();
    void thread_mul_ln29_fu_493_p10();
    void thread_mul_ln29_fu_493_p2();
    void thread_or_ln13_1_fu_395_p2();
    void thread_or_ln13_fu_335_p2();
    void thread_or_ln16_1_fu_419_p2();
    void thread_or_ln16_fu_413_p2();
    void thread_or_ln27_1_fu_453_p2();
    void thread_or_ln27_fu_233_p2();
    void thread_or_ln29_1_fu_674_p2();
    void thread_or_ln29_2_fu_773_p2();
    void thread_or_ln29_3_fu_791_p2();
    void thread_or_ln29_fu_656_p2();
    void thread_r_fu_329_p2();
    void thread_select_ln13_1_fu_357_p3();
    void thread_select_ln13_2_fu_365_p3();
    void thread_select_ln13_3_fu_373_p3();
    void thread_select_ln13_4_fu_381_p3();
    void thread_select_ln13_5_fu_580_p3();
    void thread_select_ln13_fu_341_p3();
    void thread_select_ln16_1_fu_425_p3();
    void thread_select_ln16_2_fu_441_p3();
    void thread_select_ln16_3_fu_459_p3();
    void thread_select_ln16_4_fu_471_p3();
    void thread_select_ln16_5_fu_568_p3();
    void thread_select_ln16_fu_555_p3();
    void thread_select_ln29_1_fu_809_p3();
    void thread_select_ln29_2_fu_263_p3();
    void thread_select_ln29_3_fu_271_p3();
    void thread_select_ln29_4_fu_291_p3();
    void thread_select_ln29_fu_692_p3();
    void thread_shl_ln1_fu_225_p3();
    void thread_shl_ln26_mid1_fu_349_p3();
    void thread_shl_ln27_mid1_fu_433_p3();
    void thread_shl_ln_fu_283_p3();
    void thread_tmp_11_cast_fu_530_p3();
    void thread_tmp_13_cast_fu_713_p3();
    void thread_tmp_1_fu_613_p4();
    void thread_tmp_3_cast_fu_505_p3();
    void thread_tmp_5_fu_630_p4();
    void thread_tmp_7_fu_730_p4();
    void thread_tmp_8_fu_747_p4();
    void thread_tmp_fu_593_p3();
    void thread_trunc_ln29_1_fu_640_p1();
    void thread_trunc_ln29_2_fu_740_p1();
    void thread_trunc_ln29_3_fu_757_p1();
    void thread_trunc_ln29_fu_623_p1();
    void thread_xor_ln13_fu_389_p2();
    void thread_xor_ln29_fu_299_p2();
    void thread_zext_ln16_1_fu_467_p1();
    void thread_zext_ln16_fu_449_p1();
    void thread_zext_ln20_fu_479_p1();
    void thread_zext_ln26_1_fu_279_p1();
    void thread_zext_ln26_fu_587_p1();
    void thread_zext_ln29_1_fu_519_p1();
    void thread_zext_ln29_2_fu_544_p1();
    void thread_zext_ln36_1_fu_704_p1();
    void thread_zext_ln36_2_fu_600_p1();
    void thread_zext_ln36_3_fu_816_p1();
    void thread_zext_ln36_fu_590_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
