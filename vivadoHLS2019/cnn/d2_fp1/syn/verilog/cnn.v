// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.393000,HLS_SYN_LAT=1273764,HLS_SYN_TPT=none,HLS_SYN_MEM=89,HLS_SYN_DSP=41,HLS_SYN_FF=13159,HLS_SYN_LUT=15039,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] conv_1_out_address0;
reg    conv_1_out_ce0;
reg    conv_1_out_we0;
wire   [31:0] conv_1_out_q0;
reg   [9:0] max_pool_1_out_address0;
reg    max_pool_1_out_ce0;
reg    max_pool_1_out_we0;
wire   [31:0] max_pool_1_out_q0;
reg   [10:0] conv_2_out_address0;
reg    conv_2_out_ce0;
reg    conv_2_out_we0;
wire   [31:0] conv_2_out_q0;
reg   [8:0] max_pool_2_out_address0;
reg    max_pool_2_out_ce0;
reg    max_pool_2_out_we0;
wire   [31:0] max_pool_2_out_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
reg   [5:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_q0;
reg    dense_1_out_ce1;
wire   [31:0] dense_1_out_q1;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_q0;
wire   [4:0] i_fu_457_p2;
reg   [4:0] i_reg_538;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_463_p2;
reg   [9:0] ix_in_reg_543;
wire   [0:0] icmp_ln23_fu_451_p2;
wire   [10:0] sub_ln27_fu_493_p2;
reg   [10:0] sub_ln27_reg_548;
wire   [4:0] j_fu_505_p2;
reg   [4:0] j_reg_556;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_499_p2;
wire   [10:0] add_ln27_fu_520_p2;
reg   [10:0] add_ln27_reg_566;
wire   [9:0] add_ln28_fu_525_p2;
reg   [9:0] add_ln28_reg_571;
reg   [9:0] conv_1_input_address0;
reg    conv_1_input_ce0;
reg    conv_1_input_we0;
wire   [31:0] conv_1_input_q0;
wire    grp_dense_2_fu_270_ap_start;
wire    grp_dense_2_fu_270_ap_done;
wire    grp_dense_2_fu_270_ap_idle;
wire    grp_dense_2_fu_270_ap_ready;
wire   [4:0] grp_dense_2_fu_270_dense_2_out_address0;
wire    grp_dense_2_fu_270_dense_2_out_ce0;
wire    grp_dense_2_fu_270_dense_2_out_we0;
wire   [31:0] grp_dense_2_fu_270_dense_2_out_d0;
wire   [5:0] grp_dense_2_fu_270_dense_1_out_address0;
wire    grp_dense_2_fu_270_dense_1_out_ce0;
wire   [5:0] grp_dense_2_fu_270_dense_1_out_address1;
wire    grp_dense_2_fu_270_dense_1_out_ce1;
wire    grp_dense_out_fu_380_ap_start;
wire    grp_dense_out_fu_380_ap_done;
wire    grp_dense_out_fu_380_ap_idle;
wire    grp_dense_out_fu_380_ap_ready;
wire   [31:0] grp_dense_out_fu_380_prediction_Addr_A;
wire    grp_dense_out_fu_380_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_380_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_380_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_380_dense_2_out_address0;
wire    grp_dense_out_fu_380_dense_2_out_ce0;
wire    grp_conv_2_fu_392_ap_start;
wire    grp_conv_2_fu_392_ap_done;
wire    grp_conv_2_fu_392_ap_idle;
wire    grp_conv_2_fu_392_ap_ready;
wire   [10:0] grp_conv_2_fu_392_conv_out_address0;
wire    grp_conv_2_fu_392_conv_out_ce0;
wire    grp_conv_2_fu_392_conv_out_we0;
wire   [31:0] grp_conv_2_fu_392_conv_out_d0;
wire   [9:0] grp_conv_2_fu_392_max_pool_1_out_address0;
wire    grp_conv_2_fu_392_max_pool_1_out_ce0;
wire    grp_conv_1_fu_404_ap_start;
wire    grp_conv_1_fu_404_ap_done;
wire    grp_conv_1_fu_404_ap_idle;
wire    grp_conv_1_fu_404_ap_ready;
wire   [9:0] grp_conv_1_fu_404_input_r_address0;
wire    grp_conv_1_fu_404_input_r_ce0;
wire   [11:0] grp_conv_1_fu_404_conv_out_address0;
wire    grp_conv_1_fu_404_conv_out_ce0;
wire    grp_conv_1_fu_404_conv_out_we0;
wire   [31:0] grp_conv_1_fu_404_conv_out_d0;
wire    grp_dense_1_fu_415_ap_start;
wire    grp_dense_1_fu_415_ap_done;
wire    grp_dense_1_fu_415_ap_idle;
wire    grp_dense_1_fu_415_ap_ready;
wire   [5:0] grp_dense_1_fu_415_dense_1_out_address0;
wire    grp_dense_1_fu_415_dense_1_out_ce0;
wire    grp_dense_1_fu_415_dense_1_out_we0;
wire   [31:0] grp_dense_1_fu_415_dense_1_out_d0;
wire   [8:0] grp_dense_1_fu_415_flat_array_address0;
wire    grp_dense_1_fu_415_flat_array_ce0;
wire    grp_max_pool_1_fu_427_ap_start;
wire    grp_max_pool_1_fu_427_ap_done;
wire    grp_max_pool_1_fu_427_ap_idle;
wire    grp_max_pool_1_fu_427_ap_ready;
wire   [9:0] grp_max_pool_1_fu_427_max_pool_out_address0;
wire    grp_max_pool_1_fu_427_max_pool_out_ce0;
wire    grp_max_pool_1_fu_427_max_pool_out_we0;
wire   [31:0] grp_max_pool_1_fu_427_max_pool_out_d0;
wire   [11:0] grp_max_pool_1_fu_427_conv_1_out_address0;
wire    grp_max_pool_1_fu_427_conv_1_out_ce0;
wire    grp_max_pool_2_fu_435_ap_start;
wire    grp_max_pool_2_fu_435_ap_done;
wire    grp_max_pool_2_fu_435_ap_idle;
wire    grp_max_pool_2_fu_435_ap_ready;
wire   [8:0] grp_max_pool_2_fu_435_max_pool_out_address0;
wire    grp_max_pool_2_fu_435_max_pool_out_ce0;
wire    grp_max_pool_2_fu_435_max_pool_out_we0;
wire   [31:0] grp_max_pool_2_fu_435_max_pool_out_d0;
wire   [10:0] grp_max_pool_2_fu_435_conv_2_out_address0;
wire    grp_max_pool_2_fu_435_conv_2_out_ce0;
wire    grp_flat_fu_443_ap_start;
wire    grp_flat_fu_443_ap_done;
wire    grp_flat_fu_443_ap_idle;
wire    grp_flat_fu_443_ap_ready;
wire   [8:0] grp_flat_fu_443_flat_array_address0;
wire    grp_flat_fu_443_flat_array_ce0;
wire    grp_flat_fu_443_flat_array_we0;
wire   [31:0] grp_flat_fu_443_flat_array_d0;
wire   [8:0] grp_flat_fu_443_max_pool_2_out_address0;
wire    grp_flat_fu_443_max_pool_2_out_ce0;
reg   [9:0] ix_in_0_reg_226;
reg   [4:0] i_0_reg_238;
reg   [9:0] ix_in_1_reg_249;
wire    ap_CS_fsm_state4;
reg   [4:0] j_0_reg_259;
reg    grp_dense_2_fu_270_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg    grp_dense_out_fu_380_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg    grp_conv_2_fu_392_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_conv_1_fu_404_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_dense_1_fu_415_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_max_pool_1_fu_427_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_max_pool_2_fu_435_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_flat_fu_443_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln27_1_fu_511_p1;
wire  signed [63:0] sext_ln27_fu_531_p1;
wire   [31:0] cnn_input_Addr_A_orig;
wire   [9:0] tmp_fu_469_p3;
wire   [6:0] tmp_s_fu_481_p3;
wire   [10:0] zext_ln27_fu_477_p1;
wire   [10:0] zext_ln27_2_fu_489_p1;
wire   [10:0] zext_ln27_3_fu_516_p1;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_dense_2_fu_270_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_380_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_392_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_404_ap_start_reg = 1'b0;
#0 grp_dense_1_fu_415_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_427_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_435_ap_start_reg = 1'b0;
#0 grp_flat_fu_443_ap_start_reg = 1'b0;
end

cnn_conv_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_address0),
    .ce0(conv_1_out_ce0),
    .we0(conv_1_out_we0),
    .d0(grp_conv_1_fu_404_conv_out_d0),
    .q0(conv_1_out_q0)
);

cnn_max_pool_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_address0),
    .ce0(max_pool_1_out_ce0),
    .we0(max_pool_1_out_we0),
    .d0(grp_max_pool_1_fu_427_max_pool_out_d0),
    .q0(max_pool_1_out_q0)
);

cnn_conv_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_address0),
    .ce0(conv_2_out_ce0),
    .we0(conv_2_out_we0),
    .d0(grp_conv_2_fu_392_conv_out_d0),
    .q0(conv_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_address0),
    .ce0(max_pool_2_out_ce0),
    .we0(max_pool_2_out_we0),
    .d0(grp_max_pool_2_fu_435_max_pool_out_d0),
    .q0(max_pool_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_443_flat_array_d0),
    .q0(flat_array_q0)
);

cnn_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_address0),
    .ce0(dense_1_out_ce0),
    .we0(dense_1_out_we0),
    .d0(grp_dense_1_fu_415_dense_1_out_d0),
    .q0(dense_1_out_q0),
    .address1(grp_dense_2_fu_270_dense_1_out_address1),
    .ce1(dense_1_out_ce1),
    .q1(dense_1_out_q1)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(grp_dense_2_fu_270_dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_address0),
    .ce0(conv_1_input_ce0),
    .we0(conv_1_input_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_q0)
);

dense_2 grp_dense_2_fu_270(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_2_fu_270_ap_start),
    .ap_done(grp_dense_2_fu_270_ap_done),
    .ap_idle(grp_dense_2_fu_270_ap_idle),
    .ap_ready(grp_dense_2_fu_270_ap_ready),
    .dense_2_out_address0(grp_dense_2_fu_270_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_2_fu_270_dense_2_out_ce0),
    .dense_2_out_we0(grp_dense_2_fu_270_dense_2_out_we0),
    .dense_2_out_d0(grp_dense_2_fu_270_dense_2_out_d0),
    .dense_1_out_address0(grp_dense_2_fu_270_dense_1_out_address0),
    .dense_1_out_ce0(grp_dense_2_fu_270_dense_1_out_ce0),
    .dense_1_out_q0(dense_1_out_q0),
    .dense_1_out_address1(grp_dense_2_fu_270_dense_1_out_address1),
    .dense_1_out_ce1(grp_dense_2_fu_270_dense_1_out_ce1),
    .dense_1_out_q1(dense_1_out_q1)
);

dense_out grp_dense_out_fu_380(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_380_ap_start),
    .ap_done(grp_dense_out_fu_380_ap_done),
    .ap_idle(grp_dense_out_fu_380_ap_idle),
    .ap_ready(grp_dense_out_fu_380_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_380_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_380_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_380_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_380_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_380_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_380_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

conv_2 grp_conv_2_fu_392(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_392_ap_start),
    .ap_done(grp_conv_2_fu_392_ap_done),
    .ap_idle(grp_conv_2_fu_392_ap_idle),
    .ap_ready(grp_conv_2_fu_392_ap_ready),
    .conv_out_address0(grp_conv_2_fu_392_conv_out_address0),
    .conv_out_ce0(grp_conv_2_fu_392_conv_out_ce0),
    .conv_out_we0(grp_conv_2_fu_392_conv_out_we0),
    .conv_out_d0(grp_conv_2_fu_392_conv_out_d0),
    .max_pool_1_out_address0(grp_conv_2_fu_392_max_pool_1_out_address0),
    .max_pool_1_out_ce0(grp_conv_2_fu_392_max_pool_1_out_ce0),
    .max_pool_1_out_q0(max_pool_1_out_q0)
);

conv_1 grp_conv_1_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_404_ap_start),
    .ap_done(grp_conv_1_fu_404_ap_done),
    .ap_idle(grp_conv_1_fu_404_ap_idle),
    .ap_ready(grp_conv_1_fu_404_ap_ready),
    .input_r_address0(grp_conv_1_fu_404_input_r_address0),
    .input_r_ce0(grp_conv_1_fu_404_input_r_ce0),
    .input_r_q0(conv_1_input_q0),
    .conv_out_address0(grp_conv_1_fu_404_conv_out_address0),
    .conv_out_ce0(grp_conv_1_fu_404_conv_out_ce0),
    .conv_out_we0(grp_conv_1_fu_404_conv_out_we0),
    .conv_out_d0(grp_conv_1_fu_404_conv_out_d0)
);

dense_1 grp_dense_1_fu_415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_1_fu_415_ap_start),
    .ap_done(grp_dense_1_fu_415_ap_done),
    .ap_idle(grp_dense_1_fu_415_ap_idle),
    .ap_ready(grp_dense_1_fu_415_ap_ready),
    .dense_1_out_address0(grp_dense_1_fu_415_dense_1_out_address0),
    .dense_1_out_ce0(grp_dense_1_fu_415_dense_1_out_ce0),
    .dense_1_out_we0(grp_dense_1_fu_415_dense_1_out_we0),
    .dense_1_out_d0(grp_dense_1_fu_415_dense_1_out_d0),
    .flat_array_address0(grp_dense_1_fu_415_flat_array_address0),
    .flat_array_ce0(grp_dense_1_fu_415_flat_array_ce0),
    .flat_array_q0(flat_array_q0)
);

max_pool_1 grp_max_pool_1_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_427_ap_start),
    .ap_done(grp_max_pool_1_fu_427_ap_done),
    .ap_idle(grp_max_pool_1_fu_427_ap_idle),
    .ap_ready(grp_max_pool_1_fu_427_ap_ready),
    .max_pool_out_address0(grp_max_pool_1_fu_427_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_1_fu_427_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_1_fu_427_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_1_fu_427_max_pool_out_d0),
    .conv_1_out_address0(grp_max_pool_1_fu_427_conv_1_out_address0),
    .conv_1_out_ce0(grp_max_pool_1_fu_427_conv_1_out_ce0),
    .conv_1_out_q0(conv_1_out_q0)
);

max_pool_2 grp_max_pool_2_fu_435(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_435_ap_start),
    .ap_done(grp_max_pool_2_fu_435_ap_done),
    .ap_idle(grp_max_pool_2_fu_435_ap_idle),
    .ap_ready(grp_max_pool_2_fu_435_ap_ready),
    .max_pool_out_address0(grp_max_pool_2_fu_435_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_2_fu_435_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_2_fu_435_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_2_fu_435_max_pool_out_d0),
    .conv_2_out_address0(grp_max_pool_2_fu_435_conv_2_out_address0),
    .conv_2_out_ce0(grp_max_pool_2_fu_435_conv_2_out_ce0),
    .conv_2_out_q0(conv_2_out_q0)
);

flat grp_flat_fu_443(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_443_ap_start),
    .ap_done(grp_flat_fu_443_ap_done),
    .ap_idle(grp_flat_fu_443_ap_idle),
    .ap_ready(grp_flat_fu_443_ap_ready),
    .flat_array_address0(grp_flat_fu_443_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_443_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_443_flat_array_we0),
    .flat_array_d0(grp_flat_fu_443_flat_array_d0),
    .max_pool_2_out_address0(grp_flat_fu_443_max_pool_2_out_address0),
    .max_pool_2_out_ce0(grp_flat_fu_443_max_pool_2_out_ce0),
    .max_pool_2_out_q0(max_pool_2_out_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_404_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_451_p2 == 1'd1))) begin
            grp_conv_1_fu_404_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_404_ap_ready == 1'b1)) begin
            grp_conv_1_fu_404_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_392_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_conv_2_fu_392_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_392_ap_ready == 1'b1)) begin
            grp_conv_2_fu_392_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_1_fu_415_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_dense_1_fu_415_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_415_ap_ready == 1'b1)) begin
            grp_dense_1_fu_415_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_2_fu_270_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_dense_2_fu_270_ap_start_reg <= 1'b1;
        end else if ((grp_dense_2_fu_270_ap_ready == 1'b1)) begin
            grp_dense_2_fu_270_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_380_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_dense_out_fu_380_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_380_ap_ready == 1'b1)) begin
            grp_dense_out_fu_380_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_443_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_flat_fu_443_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_443_ap_ready == 1'b1)) begin
            grp_flat_fu_443_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_427_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_max_pool_1_fu_427_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_427_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_427_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_435_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pool_2_fu_435_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_435_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_435_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_499_p2 == 1'd1))) begin
        i_0_reg_238 <= i_reg_538;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_238 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_499_p2 == 1'd1))) begin
        ix_in_0_reg_226 <= ix_in_reg_543;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_226 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ix_in_1_reg_249 <= add_ln28_reg_571;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_451_p2 == 1'd0))) begin
        ix_in_1_reg_249 <= ix_in_0_reg_226;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_259 <= j_reg_556;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_451_p2 == 1'd0))) begin
        j_0_reg_259 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_499_p2 == 1'd0))) begin
        add_ln27_reg_566 <= add_ln27_fu_520_p2;
        add_ln28_reg_571 <= add_ln28_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_538 <= i_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_451_p2 == 1'd0))) begin
        ix_in_reg_543 <= ix_in_fu_463_p2;
        sub_ln27_reg_548[10 : 2] <= sub_ln27_fu_493_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_556 <= j_fu_505_p2;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_address0 = sext_ln27_fu_531_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_address0 = grp_conv_1_fu_404_input_r_address0;
    end else begin
        conv_1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce0 = grp_conv_1_fu_404_input_r_ce0;
    end else begin
        conv_1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_we0 = 1'b1;
    end else begin
        conv_1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_address0 = grp_max_pool_1_fu_427_conv_1_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_address0 = grp_conv_1_fu_404_conv_out_address0;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_ce0 = grp_max_pool_1_fu_427_conv_1_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_ce0 = grp_conv_1_fu_404_conv_out_ce0;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_we0 = grp_conv_1_fu_404_conv_out_we0;
    end else begin
        conv_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_address0 = grp_max_pool_2_fu_435_conv_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_address0 = grp_conv_2_fu_392_conv_out_address0;
    end else begin
        conv_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_ce0 = grp_max_pool_2_fu_435_conv_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_ce0 = grp_conv_2_fu_392_conv_out_ce0;
    end else begin
        conv_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_we0 = grp_conv_2_fu_392_conv_out_we0;
    end else begin
        conv_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_address0 = grp_dense_1_fu_415_dense_1_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_1_out_address0 = grp_dense_2_fu_270_dense_1_out_address0;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_ce0 = grp_dense_1_fu_415_dense_1_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_1_out_ce0 = grp_dense_2_fu_270_dense_1_out_ce0;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_1_out_ce1 = grp_dense_2_fu_270_dense_1_out_ce1;
    end else begin
        dense_1_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_we0 = grp_dense_1_fu_415_dense_1_out_we0;
    end else begin
        dense_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_address0 = grp_dense_out_fu_380_dense_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_2_out_address0 = grp_dense_2_fu_270_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dense_2_out_ce0 = grp_dense_out_fu_380_dense_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_2_out_ce0 = grp_dense_2_fu_270_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        dense_2_out_we0 = grp_dense_2_fu_270_dense_2_out_we0;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_address0 = grp_flat_fu_443_flat_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_address0 = grp_dense_1_fu_415_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_ce0 = grp_flat_fu_443_flat_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce0 = grp_dense_1_fu_415_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_we0 = grp_flat_fu_443_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_address0 = grp_max_pool_1_fu_427_max_pool_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_address0 = grp_conv_2_fu_392_max_pool_1_out_address0;
    end else begin
        max_pool_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_ce0 = grp_max_pool_1_fu_427_max_pool_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_ce0 = grp_conv_2_fu_392_max_pool_1_out_ce0;
    end else begin
        max_pool_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_we0 = grp_max_pool_1_fu_427_max_pool_out_we0;
    end else begin
        max_pool_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_address0 = grp_flat_fu_443_max_pool_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_address0 = grp_max_pool_2_fu_435_max_pool_out_address0;
    end else begin
        max_pool_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_ce0 = grp_flat_fu_443_max_pool_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_ce0 = grp_max_pool_2_fu_435_max_pool_out_ce0;
    end else begin
        max_pool_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_we0 = grp_max_pool_2_fu_435_max_pool_out_we0;
    end else begin
        max_pool_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_fu_451_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_fu_499_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_conv_1_fu_404_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_max_pool_1_fu_427_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_2_fu_392_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_max_pool_2_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_flat_fu_443_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_dense_1_fu_415_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_dense_2_fu_270_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_dense_out_fu_380_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_520_p2 = (sub_ln27_reg_548 + zext_ln27_3_fu_516_p1);

assign add_ln28_fu_525_p2 = (ix_in_1_reg_249 + 10'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_511_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign grp_conv_1_fu_404_ap_start = grp_conv_1_fu_404_ap_start_reg;

assign grp_conv_2_fu_392_ap_start = grp_conv_2_fu_392_ap_start_reg;

assign grp_dense_1_fu_415_ap_start = grp_dense_1_fu_415_ap_start_reg;

assign grp_dense_2_fu_270_ap_start = grp_dense_2_fu_270_ap_start_reg;

assign grp_dense_out_fu_380_ap_start = grp_dense_out_fu_380_ap_start_reg;

assign grp_flat_fu_443_ap_start = grp_flat_fu_443_ap_start_reg;

assign grp_max_pool_1_fu_427_ap_start = grp_max_pool_1_fu_427_ap_start_reg;

assign grp_max_pool_2_fu_435_ap_start = grp_max_pool_2_fu_435_ap_start_reg;

assign i_fu_457_p2 = (i_0_reg_238 + 5'd1);

assign icmp_ln23_fu_451_p2 = ((i_0_reg_238 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_499_p2 = ((j_0_reg_259 == 5'd28) ? 1'b1 : 1'b0);

assign ix_in_fu_463_p2 = (ix_in_0_reg_226 + 10'd28);

assign j_fu_505_p2 = (j_0_reg_259 + 5'd1);

assign prediction_Addr_A = grp_dense_out_fu_380_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_380_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_380_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_380_prediction_WEN_A;

assign sext_ln27_fu_531_p1 = $signed(add_ln27_reg_566);

assign sub_ln27_fu_493_p2 = (zext_ln27_fu_477_p1 - zext_ln27_2_fu_489_p1);

assign tmp_fu_469_p3 = {{i_0_reg_238}, {5'd0}};

assign tmp_s_fu_481_p3 = {{i_0_reg_238}, {2'd0}};

assign zext_ln27_1_fu_511_p1 = ix_in_1_reg_249;

assign zext_ln27_2_fu_489_p1 = tmp_s_fu_481_p3;

assign zext_ln27_3_fu_516_p1 = j_0_reg_259;

assign zext_ln27_fu_477_p1 = tmp_fu_469_p3;

always @ (posedge ap_clk) begin
    sub_ln27_reg_548[1:0] <= 2'b00;
end

endmodule //cnn
