// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "soft_max.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic soft_max::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic soft_max::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> soft_max::ap_ST_fsm_state1 = "1";
const sc_lv<8> soft_max::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<8> soft_max::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<8> soft_max::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<8> soft_max::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<8> soft_max::ap_ST_fsm_state12 = "100000";
const sc_lv<8> soft_max::ap_ST_fsm_pp1_stage0 = "1000000";
const sc_lv<8> soft_max::ap_ST_fsm_state28 = "10000000";
const bool soft_max::ap_const_boolean_1 = true;
const sc_lv<32> soft_max::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> soft_max::ap_const_lv32_2 = "10";
const bool soft_max::ap_const_boolean_0 = false;
const sc_lv<1> soft_max::ap_const_lv1_0 = "0";
const sc_lv<32> soft_max::ap_const_lv32_6 = "110";
const sc_lv<32> soft_max::ap_const_lv32_1 = "1";
const sc_lv<1> soft_max::ap_const_lv1_1 = "1";
const sc_lv<32> soft_max::ap_const_lv32_4 = "100";
const sc_lv<32> soft_max::ap_const_lv32_5 = "101";
const sc_lv<4> soft_max::ap_const_lv4_0 = "0000";
const sc_lv<4> soft_max::ap_const_lv4_F = "1111";
const sc_lv<32> soft_max::ap_const_lv32_3 = "11";
const sc_lv<4> soft_max::ap_const_lv4_A = "1010";
const sc_lv<4> soft_max::ap_const_lv4_1 = "1";
const sc_lv<32> soft_max::ap_const_lv32_7 = "111";

soft_max::soft_max(sc_module_name name) : sc_module(name), mVcdFile(0) {
    cnn_fadd_32ns_32ncud_U31 = new cnn_fadd_32ns_32ncud<1,4,32,32,32>("cnn_fadd_32ns_32ncud_U31");
    cnn_fadd_32ns_32ncud_U31->clk(ap_clk);
    cnn_fadd_32ns_32ncud_U31->reset(ap_rst);
    cnn_fadd_32ns_32ncud_U31->din0(sum_0_reg_80);
    cnn_fadd_32ns_32ncud_U31->din1(reg_135);
    cnn_fadd_32ns_32ncud_U31->ce(ap_var_for_const0);
    cnn_fadd_32ns_32ncud_U31->dout(grp_fu_114_p2);
    cnn_fdiv_32ns_32nibs_U32 = new cnn_fdiv_32ns_32nibs<1,8,32,32,32>("cnn_fdiv_32ns_32nibs_U32");
    cnn_fdiv_32ns_32nibs_U32->clk(ap_clk);
    cnn_fdiv_32ns_32nibs_U32->reset(ap_rst);
    cnn_fdiv_32ns_32nibs_U32->din0(reg_135);
    cnn_fdiv_32ns_32nibs_U32->din1(sum_0_reg_80);
    cnn_fdiv_32ns_32nibs_U32->ce(ap_var_for_const0);
    cnn_fdiv_32ns_32nibs_U32->dout(grp_fu_119_p2);
    cnn_fexp_32ns_32njbC_U33 = new cnn_fexp_32ns_32njbC<1,5,32,32,32>("cnn_fexp_32ns_32njbC_U33");
    cnn_fexp_32ns_32njbC_U33->clk(ap_clk);
    cnn_fexp_32ns_32njbC_U33->reset(ap_rst);
    cnn_fexp_32ns_32njbC_U33->din0(ap_var_for_const1);
    cnn_fexp_32ns_32njbC_U33->din1(dense_array_q0);
    cnn_fexp_32ns_32njbC_U33->ce(ap_var_for_const0);
    cnn_fexp_32ns_32njbC_U33->dout(grp_fu_124_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state13_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state14_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state15_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state19_pp1_stage0_iter6);

    SC_METHOD(thread_ap_block_state20_pp1_stage0_iter7);

    SC_METHOD(thread_ap_block_state21_pp1_stage0_iter8);

    SC_METHOD(thread_ap_block_state22_pp1_stage0_iter9);

    SC_METHOD(thread_ap_block_state23_pp1_stage0_iter10);

    SC_METHOD(thread_ap_block_state24_pp1_stage0_iter11);

    SC_METHOD(thread_ap_block_state25_pp1_stage0_iter12);

    SC_METHOD(thread_ap_block_state26_pp1_stage0_iter13);

    SC_METHOD(thread_ap_block_state27_pp1_stage0_iter14);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage3_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln11_fu_141_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state13);
    sensitive << ( icmp_ln17_fu_158_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter6 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_enable_reg_pp1_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter9 );
    sensitive << ( ap_enable_reg_pp1_iter10 );
    sensitive << ( ap_enable_reg_pp1_iter11 );
    sensitive << ( ap_enable_reg_pp1_iter12 );
    sensitive << ( ap_enable_reg_pp1_iter13 );
    sensitive << ( ap_enable_reg_pp1_iter14 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_96_p4);
    sensitive << ( i_0_reg_92 );
    sensitive << ( icmp_ln11_reg_175 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_179 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( zext_ln19_fu_170_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln13_fu_153_p1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_i_fu_147_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_96_p4 );

    SC_METHOD(thread_icmp_ln11_fu_141_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_96_p4 );

    SC_METHOD(thread_icmp_ln17_fu_158_p2);
    sensitive << ( j_0_reg_103 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_j_fu_164_p2);
    sensitive << ( j_0_reg_103 );

    SC_METHOD(thread_prediction_Addr_A);
    sensitive << ( prediction_Addr_A_orig );

    SC_METHOD(thread_prediction_Addr_A_orig);
    sensitive << ( zext_ln19_reg_203_pp1_iter13_reg );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_prediction_Din_A);
    sensitive << ( tmp_3_reg_213 );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_prediction_EN_A);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter14 );

    SC_METHOD(thread_prediction_WEN_A);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln17_reg_194_pp1_iter13_reg );
    sensitive << ( ap_enable_reg_pp1_iter14 );

    SC_METHOD(thread_zext_ln13_fu_153_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_96_p4 );

    SC_METHOD(thread_zext_ln19_fu_170_p1);
    sensitive << ( j_0_reg_103 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln11_fu_141_p2 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln17_fu_158_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter13 );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter14 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "soft_max_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, dense_array_address0, "(port)dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "(port)dense_array_ce0");
    sc_trace(mVcdFile, dense_array_q0, "(port)dense_array_q0");
    sc_trace(mVcdFile, prediction_Addr_A, "(port)prediction_Addr_A");
    sc_trace(mVcdFile, prediction_EN_A, "(port)prediction_EN_A");
    sc_trace(mVcdFile, prediction_WEN_A, "(port)prediction_WEN_A");
    sc_trace(mVcdFile, prediction_Din_A, "(port)prediction_Din_A");
    sc_trace(mVcdFile, prediction_Dout_A, "(port)prediction_Dout_A");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sum_0_reg_80, "sum_0_reg_80");
    sc_trace(mVcdFile, i_0_reg_92, "i_0_reg_92");
    sc_trace(mVcdFile, j_0_reg_103, "j_0_reg_103");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage1_iter1, "ap_block_state7_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage1_iter2, "ap_block_state11_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, icmp_ln11_reg_175, "icmp_ln11_reg_175");
    sc_trace(mVcdFile, ap_block_state13_pp1_stage0_iter0, "ap_block_state13_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp1_stage0_iter1, "ap_block_state14_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state15_pp1_stage0_iter2, "ap_block_state15_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter3, "ap_block_state16_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter4, "ap_block_state17_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter5, "ap_block_state18_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage0_iter6, "ap_block_state19_pp1_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage0_iter7, "ap_block_state20_pp1_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage0_iter8, "ap_block_state21_pp1_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage0_iter9, "ap_block_state22_pp1_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state23_pp1_stage0_iter10, "ap_block_state23_pp1_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state24_pp1_stage0_iter11, "ap_block_state24_pp1_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state25_pp1_stage0_iter12, "ap_block_state25_pp1_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state26_pp1_stage0_iter13, "ap_block_state26_pp1_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state27_pp1_stage0_iter14, "ap_block_state27_pp1_stage0_iter14");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, icmp_ln17_reg_194, "icmp_ln17_reg_194");
    sc_trace(mVcdFile, grp_fu_124_p2, "grp_fu_124_p2");
    sc_trace(mVcdFile, reg_135, "reg_135");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln11_reg_175_pp0_iter1_reg, "icmp_ln11_reg_175_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter4_reg, "icmp_ln17_reg_194_pp1_iter4_reg");
    sc_trace(mVcdFile, icmp_ln11_fu_141_p2, "icmp_ln11_fu_141_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter2, "ap_block_state10_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln11_reg_175_pp0_iter2_reg, "icmp_ln11_reg_175_pp0_iter2_reg");
    sc_trace(mVcdFile, i_fu_147_p2, "i_fu_147_p2");
    sc_trace(mVcdFile, i_reg_179, "i_reg_179");
    sc_trace(mVcdFile, grp_fu_114_p2, "grp_fu_114_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln17_fu_158_p2, "icmp_ln17_fu_158_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter1_reg, "icmp_ln17_reg_194_pp1_iter1_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter2_reg, "icmp_ln17_reg_194_pp1_iter2_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter3_reg, "icmp_ln17_reg_194_pp1_iter3_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter5_reg, "icmp_ln17_reg_194_pp1_iter5_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter6_reg, "icmp_ln17_reg_194_pp1_iter6_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter7_reg, "icmp_ln17_reg_194_pp1_iter7_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter8_reg, "icmp_ln17_reg_194_pp1_iter8_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter9_reg, "icmp_ln17_reg_194_pp1_iter9_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter10_reg, "icmp_ln17_reg_194_pp1_iter10_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter11_reg, "icmp_ln17_reg_194_pp1_iter11_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter12_reg, "icmp_ln17_reg_194_pp1_iter12_reg");
    sc_trace(mVcdFile, icmp_ln17_reg_194_pp1_iter13_reg, "icmp_ln17_reg_194_pp1_iter13_reg");
    sc_trace(mVcdFile, j_fu_164_p2, "j_fu_164_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, zext_ln19_fu_170_p1, "zext_ln19_fu_170_p1");
    sc_trace(mVcdFile, zext_ln19_reg_203, "zext_ln19_reg_203");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter1_reg, "zext_ln19_reg_203_pp1_iter1_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter2_reg, "zext_ln19_reg_203_pp1_iter2_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter3_reg, "zext_ln19_reg_203_pp1_iter3_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter4_reg, "zext_ln19_reg_203_pp1_iter4_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter5_reg, "zext_ln19_reg_203_pp1_iter5_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter6_reg, "zext_ln19_reg_203_pp1_iter6_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter7_reg, "zext_ln19_reg_203_pp1_iter7_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter8_reg, "zext_ln19_reg_203_pp1_iter8_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter9_reg, "zext_ln19_reg_203_pp1_iter9_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter10_reg, "zext_ln19_reg_203_pp1_iter10_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter11_reg, "zext_ln19_reg_203_pp1_iter11_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter12_reg, "zext_ln19_reg_203_pp1_iter12_reg");
    sc_trace(mVcdFile, zext_ln19_reg_203_pp1_iter13_reg, "zext_ln19_reg_203_pp1_iter13_reg");
    sc_trace(mVcdFile, grp_fu_119_p2, "grp_fu_119_p2");
    sc_trace(mVcdFile, tmp_3_reg_213, "tmp_3_reg_213");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage3_iter1, "ap_block_state9_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state13, "ap_condition_pp1_exit_iter0_state13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter6, "ap_enable_reg_pp1_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter7, "ap_enable_reg_pp1_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter8, "ap_enable_reg_pp1_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter9, "ap_enable_reg_pp1_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter10, "ap_enable_reg_pp1_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter11, "ap_enable_reg_pp1_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter12, "ap_enable_reg_pp1_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter13, "ap_enable_reg_pp1_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter14, "ap_enable_reg_pp1_iter14");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_96_p4, "ap_phi_mux_i_0_phi_fu_96_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln13_fu_153_p1, "zext_ln13_fu_153_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, prediction_Addr_A_orig, "prediction_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage2_iter1, "ap_block_state8_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

soft_max::~soft_max() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete cnn_fadd_32ns_32ncud_U31;
    delete cnn_fdiv_32ns_32nibs_U32;
    delete cnn_fexp_32ns_32njbC_U33;
}

void soft_max::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void soft_max::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void soft_max::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state13.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state13.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter10 = ap_enable_reg_pp1_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter11 = ap_enable_reg_pp1_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter12 = ap_enable_reg_pp1_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter13 = ap_enable_reg_pp1_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter14 = ap_enable_reg_pp1_iter13.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_enable_reg_pp1_iter14 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter6 = ap_enable_reg_pp1_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter7 = ap_enable_reg_pp1_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter8 = ap_enable_reg_pp1_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter9 = ap_enable_reg_pp1_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(icmp_ln11_reg_175.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_92 = i_reg_179.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_92 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_0_reg_103 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_158_p2.read()))) {
        j_0_reg_103 = j_fu_164_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_reg_175_pp0_iter2_reg.read()))) {
        sum_0_reg_80 = grp_fu_114_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sum_0_reg_80 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_179 = i_fu_147_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln11_reg_175 = icmp_ln11_fu_141_p2.read();
        icmp_ln11_reg_175_pp0_iter1_reg = icmp_ln11_reg_175.read();
        icmp_ln11_reg_175_pp0_iter2_reg = icmp_ln11_reg_175_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
        icmp_ln17_reg_194 = icmp_ln17_fu_158_p2.read();
        icmp_ln17_reg_194_pp1_iter1_reg = icmp_ln17_reg_194.read();
        zext_ln19_reg_203_pp1_iter1_reg = zext_ln19_reg_203.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln17_reg_194_pp1_iter10_reg = icmp_ln17_reg_194_pp1_iter9_reg.read();
        icmp_ln17_reg_194_pp1_iter11_reg = icmp_ln17_reg_194_pp1_iter10_reg.read();
        icmp_ln17_reg_194_pp1_iter12_reg = icmp_ln17_reg_194_pp1_iter11_reg.read();
        icmp_ln17_reg_194_pp1_iter13_reg = icmp_ln17_reg_194_pp1_iter12_reg.read();
        icmp_ln17_reg_194_pp1_iter2_reg = icmp_ln17_reg_194_pp1_iter1_reg.read();
        icmp_ln17_reg_194_pp1_iter3_reg = icmp_ln17_reg_194_pp1_iter2_reg.read();
        icmp_ln17_reg_194_pp1_iter4_reg = icmp_ln17_reg_194_pp1_iter3_reg.read();
        icmp_ln17_reg_194_pp1_iter5_reg = icmp_ln17_reg_194_pp1_iter4_reg.read();
        icmp_ln17_reg_194_pp1_iter6_reg = icmp_ln17_reg_194_pp1_iter5_reg.read();
        icmp_ln17_reg_194_pp1_iter7_reg = icmp_ln17_reg_194_pp1_iter6_reg.read();
        icmp_ln17_reg_194_pp1_iter8_reg = icmp_ln17_reg_194_pp1_iter7_reg.read();
        icmp_ln17_reg_194_pp1_iter9_reg = icmp_ln17_reg_194_pp1_iter8_reg.read();
        zext_ln19_reg_203_pp1_iter10_reg = zext_ln19_reg_203_pp1_iter9_reg.read();
        zext_ln19_reg_203_pp1_iter11_reg = zext_ln19_reg_203_pp1_iter10_reg.read();
        zext_ln19_reg_203_pp1_iter12_reg = zext_ln19_reg_203_pp1_iter11_reg.read();
        zext_ln19_reg_203_pp1_iter13_reg = zext_ln19_reg_203_pp1_iter12_reg.read();
        zext_ln19_reg_203_pp1_iter2_reg = zext_ln19_reg_203_pp1_iter1_reg.read();
        zext_ln19_reg_203_pp1_iter3_reg = zext_ln19_reg_203_pp1_iter2_reg.read();
        zext_ln19_reg_203_pp1_iter4_reg = zext_ln19_reg_203_pp1_iter3_reg.read();
        zext_ln19_reg_203_pp1_iter5_reg = zext_ln19_reg_203_pp1_iter4_reg.read();
        zext_ln19_reg_203_pp1_iter6_reg = zext_ln19_reg_203_pp1_iter5_reg.read();
        zext_ln19_reg_203_pp1_iter7_reg = zext_ln19_reg_203_pp1_iter6_reg.read();
        zext_ln19_reg_203_pp1_iter8_reg = zext_ln19_reg_203_pp1_iter7_reg.read();
        zext_ln19_reg_203_pp1_iter9_reg = zext_ln19_reg_203_pp1_iter8_reg.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_reg_175_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_reg_194_pp1_iter4_reg.read())))) {
        reg_135 = grp_fu_124_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_reg_194_pp1_iter12_reg.read()))) {
        tmp_3_reg_213 = grp_fu_119_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_158_p2.read()))) {
        zext_ln19_reg_203 = zext_ln19_fu_170_p1.read();
    }
}

void soft_max::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void soft_max::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void soft_max::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void soft_max::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void soft_max::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[6];
}

void soft_max::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void soft_max::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[5];
}

void soft_max::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[7];
}

void soft_max::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state10_pp0_stage0_iter2() {
    ap_block_state10_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state11_pp0_stage1_iter2() {
    ap_block_state11_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state13_pp1_stage0_iter0() {
    ap_block_state13_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state14_pp1_stage0_iter1() {
    ap_block_state14_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state15_pp1_stage0_iter2() {
    ap_block_state15_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state16_pp1_stage0_iter3() {
    ap_block_state16_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state17_pp1_stage0_iter4() {
    ap_block_state17_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state18_pp1_stage0_iter5() {
    ap_block_state18_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state19_pp1_stage0_iter6() {
    ap_block_state19_pp1_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state20_pp1_stage0_iter7() {
    ap_block_state20_pp1_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state21_pp1_stage0_iter8() {
    ap_block_state21_pp1_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state22_pp1_stage0_iter9() {
    ap_block_state22_pp1_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state23_pp1_stage0_iter10() {
    ap_block_state23_pp1_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state24_pp1_stage0_iter11() {
    ap_block_state24_pp1_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state25_pp1_stage0_iter12() {
    ap_block_state25_pp1_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state26_pp1_stage0_iter13() {
    ap_block_state26_pp1_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state27_pp1_stage0_iter14() {
    ap_block_state27_pp1_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state7_pp0_stage1_iter1() {
    ap_block_state7_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state8_pp0_stage2_iter1() {
    ap_block_state8_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_block_state9_pp0_stage3_iter1() {
    ap_block_state9_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void soft_max::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln11_fu_141_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void soft_max::thread_ap_condition_pp1_exit_iter0_state13() {
    if (esl_seteq<1,1,1>(icmp_ln17_fu_158_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state13 = ap_const_logic_0;
    }
}

void soft_max::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void soft_max::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void soft_max::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void soft_max::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void soft_max::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void soft_max::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter14.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void soft_max::thread_ap_phi_mux_i_0_phi_fu_96_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln11_reg_175.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_96_p4 = i_reg_179.read();
    } else {
        ap_phi_mux_i_0_phi_fu_96_p4 = i_0_reg_92.read();
    }
}

void soft_max::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void soft_max::thread_dense_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln19_fu_170_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln13_fu_153_p1.read());
    } else {
        dense_array_address0 = "XXXX";
    }
}

void soft_max::thread_dense_array_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        dense_array_ce0 = ap_const_logic_1;
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void soft_max::thread_i_fu_147_p2() {
    i_fu_147_p2 = (!ap_phi_mux_i_0_phi_fu_96_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_phi_fu_96_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void soft_max::thread_icmp_ln11_fu_141_p2() {
    icmp_ln11_fu_141_p2 = (!ap_phi_mux_i_0_phi_fu_96_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_96_p4.read() == ap_const_lv4_A);
}

void soft_max::thread_icmp_ln17_fu_158_p2() {
    icmp_ln17_fu_158_p2 = (!j_0_reg_103.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_103.read() == ap_const_lv4_A);
}

void soft_max::thread_j_fu_164_p2() {
    j_fu_164_p2 = (!j_0_reg_103.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_reg_103.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void soft_max::thread_prediction_Addr_A() {
    prediction_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): prediction_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void soft_max::thread_prediction_Addr_A_orig() {
    prediction_Addr_A_orig =  (sc_lv<32>) (zext_ln19_reg_203_pp1_iter13_reg.read());
}

void soft_max::thread_prediction_Din_A() {
    prediction_Din_A = tmp_3_reg_213.read();
}

void soft_max::thread_prediction_EN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter14.read()))) {
        prediction_EN_A = ap_const_logic_1;
    } else {
        prediction_EN_A = ap_const_logic_0;
    }
}

void soft_max::thread_prediction_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_reg_194_pp1_iter13_reg.read()))) {
        prediction_WEN_A = ap_const_lv4_F;
    } else {
        prediction_WEN_A = ap_const_lv4_0;
    }
}

void soft_max::thread_zext_ln13_fu_153_p1() {
    zext_ln13_fu_153_p1 = esl_zext<64,4>(ap_phi_mux_i_0_phi_fu_96_p4.read());
}

void soft_max::thread_zext_ln19_fu_170_p1() {
    zext_ln19_fu_170_p1 = esl_zext<64,4>(j_0_reg_103.read());
}

void soft_max::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_141_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_141_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter14.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter13.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln17_fu_158_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter14.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter13.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln17_fu_158_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

