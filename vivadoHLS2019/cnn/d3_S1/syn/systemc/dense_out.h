// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_out_HH_
#define _dense_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "dense_out_dense_omb6.h"
#include "dense_out_dense_oncg.h"
#include "dense_out_dense_aocq.h"

namespace ap_rtl {

struct dense_out : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > prediction_Addr_A;
    sc_out< sc_logic > prediction_EN_A;
    sc_out< sc_lv<4> > prediction_WEN_A;
    sc_out< sc_lv<32> > prediction_Din_A;
    sc_in< sc_lv<32> > prediction_Dout_A;
    sc_out< sc_lv<5> > dense_2_out_address0;
    sc_out< sc_logic > dense_2_out_ce0;
    sc_in< sc_lv<32> > dense_2_out_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    dense_out(sc_module_name name);
    SC_HAS_PROCESS(dense_out);

    ~dense_out();

    sc_trace_file* mVcdFile;

    dense_out_dense_omb6* dense_out_bias_U;
    dense_out_dense_oncg* dense_out_weights_U;
    dense_out_dense_aocq* dense_array_U;
    soft_max* grp_soft_max_fu_170;
    cnn_fadd_32ns_32ncud<1,4,32,32,32>* cnn_fadd_32ns_32ncud_U46;
    cnn_fmul_32ns_32ndEe<1,2,32,32,32>* cnn_fmul_32ns_32ndEe_U47;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > dense_out_bias_address0;
    sc_signal< sc_logic > dense_out_bias_ce0;
    sc_signal< sc_lv<32> > dense_out_bias_q0;
    sc_signal< sc_lv<9> > dense_out_weights_address0;
    sc_signal< sc_logic > dense_out_weights_ce0;
    sc_signal< sc_lv<32> > dense_out_weights_q0;
    sc_signal< sc_lv<9> > indvar_flatten_reg_125;
    sc_signal< sc_lv<4> > d_0_reg_136;
    sc_signal< sc_lv<32> > w_sum_0_reg_147;
    sc_signal< sc_lv<5> > f_0_reg_159;
    sc_signal< sc_lv<1> > icmp_ln31_fu_189_p2;
    sc_signal< sc_lv<1> > icmp_ln31_reg_301;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln31_reg_301_pp0_iter1_reg;
    sc_signal< sc_lv<9> > add_ln31_fu_195_p2;
    sc_signal< sc_lv<9> > add_ln31_reg_305;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln36_fu_207_p2;
    sc_signal< sc_lv<1> > icmp_ln36_reg_310;
    sc_signal< sc_lv<5> > select_ln38_1_fu_213_p3;
    sc_signal< sc_lv<5> > select_ln38_1_reg_315;
    sc_signal< sc_lv<4> > select_ln38_2_fu_221_p3;
    sc_signal< sc_lv<4> > select_ln38_2_reg_320;
    sc_signal< sc_lv<4> > select_ln38_2_reg_320_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter3;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > grp_fu_183_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_346;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state10_pp0_stage2_iter2;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<5> > f_fu_279_p2;
    sc_signal< sc_lv<5> > f_reg_351;
    sc_signal< sc_lv<32> > select_ln38_fu_284_p3;
    sc_signal< sc_lv<1> > icmp_ln36_1_fu_292_p2;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_362;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_362_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln36_1_reg_362_pp0_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln38_fu_297_p1;
    sc_signal< sc_lv<64> > zext_ln38_reg_366;
    sc_signal< sc_lv<64> > zext_ln38_reg_366_pp0_iter3_reg;
    sc_signal< sc_lv<32> > grp_fu_177_p2;
    sc_signal< sc_lv<32> > w_sum_reg_371;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > grp_soft_max_fu_170_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_170_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_170_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_170_ap_ready;
    sc_signal< sc_lv<4> > grp_soft_max_fu_170_dense_array_address0;
    sc_signal< sc_logic > grp_soft_max_fu_170_dense_array_ce0;
    sc_signal< sc_lv<32> > grp_soft_max_fu_170_prediction_Addr_A;
    sc_signal< sc_logic > grp_soft_max_fu_170_prediction_EN_A;
    sc_signal< sc_lv<4> > grp_soft_max_fu_170_prediction_WEN_A;
    sc_signal< sc_lv<32> > grp_soft_max_fu_170_prediction_Din_A;
    sc_signal< sc_lv<9> > ap_phi_mux_indvar_flatten_phi_fu_129_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_d_0_phi_fu_140_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_0_phi_fu_151_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_f_0_phi_fu_163_p4;
    sc_signal< sc_logic > grp_soft_max_fu_170_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > zext_ln38_4_fu_274_p1;
    sc_signal< sc_lv<64> > zext_ln38_1_fu_233_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > grp_fu_177_p0;
    sc_signal< sc_lv<32> > grp_fu_177_p1;
    sc_signal< sc_lv<4> > d_fu_201_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_238_p3;
    sc_signal< sc_lv<6> > tmp_2_fu_250_p3;
    sc_signal< sc_lv<9> > zext_ln38_3_fu_258_p1;
    sc_signal< sc_lv<9> > zext_ln38_2_fu_246_p1;
    sc_signal< sc_lv<9> > add_ln38_fu_262_p2;
    sc_signal< sc_lv<9> > zext_ln37_fu_229_p1;
    sc_signal< sc_lv<9> > add_ln38_1_fu_268_p2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_state13;
    static const sc_lv<6> ap_ST_fsm_state14;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_12C;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln31_fu_195_p2();
    void thread_add_ln38_1_fu_268_p2();
    void thread_add_ln38_fu_262_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state10_pp0_stage2_iter2();
    void thread_ap_block_state11_pp0_stage0_iter3();
    void thread_ap_block_state12_pp0_stage1_iter3();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_block_state9_pp0_stage1_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_d_0_phi_fu_140_p4();
    void thread_ap_phi_mux_f_0_phi_fu_163_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_129_p4();
    void thread_ap_phi_mux_w_sum_0_phi_fu_151_p4();
    void thread_ap_ready();
    void thread_d_fu_201_p2();
    void thread_dense_2_out_address0();
    void thread_dense_2_out_ce0();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_we0();
    void thread_dense_out_bias_address0();
    void thread_dense_out_bias_ce0();
    void thread_dense_out_weights_address0();
    void thread_dense_out_weights_ce0();
    void thread_f_fu_279_p2();
    void thread_grp_fu_177_p0();
    void thread_grp_fu_177_p1();
    void thread_grp_soft_max_fu_170_ap_start();
    void thread_icmp_ln31_fu_189_p2();
    void thread_icmp_ln36_1_fu_292_p2();
    void thread_icmp_ln36_fu_207_p2();
    void thread_prediction_Addr_A();
    void thread_prediction_Din_A();
    void thread_prediction_EN_A();
    void thread_prediction_WEN_A();
    void thread_select_ln38_1_fu_213_p3();
    void thread_select_ln38_2_fu_221_p3();
    void thread_select_ln38_fu_284_p3();
    void thread_tmp_2_fu_250_p3();
    void thread_tmp_s_fu_238_p3();
    void thread_zext_ln37_fu_229_p1();
    void thread_zext_ln38_1_fu_233_p1();
    void thread_zext_ln38_2_fu_246_p1();
    void thread_zext_ln38_3_fu_258_p1();
    void thread_zext_ln38_4_fu_274_p1();
    void thread_zext_ln38_fu_297_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
