-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    cnn_input_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_EN_A : OUT STD_LOGIC;
    cnn_input_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    cnn_input_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_Clk_A : OUT STD_LOGIC;
    cnn_input_Rst_A : OUT STD_LOGIC;
    prediction_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_EN_A : OUT STD_LOGIC;
    prediction_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    prediction_Clk_A : OUT STD_LOGIC;
    prediction_Rst_A : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.393000,HLS_SYN_LAT=1273117,HLS_SYN_TPT=none,HLS_SYN_MEM=87,HLS_SYN_DSP=281,HLS_SYN_FF=32430,HLS_SYN_LUT=51694,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal conv_1_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_out_ce0 : STD_LOGIC;
    signal conv_1_out_we0 : STD_LOGIC;
    signal conv_1_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal max_pool_1_out_ce0 : STD_LOGIC;
    signal max_pool_1_out_we0 : STD_LOGIC;
    signal max_pool_1_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_2_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_2_out_ce0 : STD_LOGIC;
    signal conv_2_out_we0 : STD_LOGIC;
    signal conv_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_2_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal max_pool_2_out_ce0 : STD_LOGIC;
    signal max_pool_2_out_we0 : STD_LOGIC;
    signal max_pool_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal flat_array_ce0 : STD_LOGIC;
    signal flat_array_we0 : STD_LOGIC;
    signal flat_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_0_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_2_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_2_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_3_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_3_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_4_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_4_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_5_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_5_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_6_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_6_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_7_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_7_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_8_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_8_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_9_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_9_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_10_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_10_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_11_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_11_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_12_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_12_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_13_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_13_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_14_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_14_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_15_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_15_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_16_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_16_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_17_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_17_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_18_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_18_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_19_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_19_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_20_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_20_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_21_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_21_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_22_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_22_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_23_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_23_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_24_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_24_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_2_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_out_ce0 : STD_LOGIC;
    signal dense_2_out_we0 : STD_LOGIC;
    signal dense_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_651_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1532 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ix_in_fu_657_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_in_reg_1537 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln23_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln27_fu_687_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln27_reg_1542 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_fu_699_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_1550 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln25_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_fu_714_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln27_reg_1560 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln28_fu_719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln28_reg_1565 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal dense_1_out_0_0_loc_reg_1820 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_dense_1_fu_526_ap_ready : STD_LOGIC;
    signal grp_dense_1_fu_526_ap_done : STD_LOGIC;
    signal dense_1_out_0_1_loc_reg_1825 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_1_0_loc_reg_1830 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_1_1_loc_reg_1835 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_2_0_loc_reg_1840 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_2_1_loc_reg_1845 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_3_0_loc_reg_1850 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_3_1_loc_reg_1855 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_4_0_loc_reg_1860 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_4_1_loc_reg_1865 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_5_0_loc_reg_1870 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_5_1_loc_reg_1875 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_6_0_loc_reg_1880 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_6_1_loc_reg_1885 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_7_0_loc_reg_1890 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_7_1_loc_reg_1895 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_8_0_loc_reg_1900 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_8_1_loc_reg_1905 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_9_0_loc_reg_1910 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_9_1_loc_reg_1915 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_10_0_loc_reg_1920 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_10_1_loc_reg_1925 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_11_0_loc_reg_1930 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_11_1_loc_reg_1935 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_12_0_loc_reg_1940 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_12_1_loc_reg_1945 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_13_0_loc_reg_1950 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_13_1_loc_reg_1955 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_14_0_loc_reg_1960 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_14_1_loc_reg_1965 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_15_0_loc_reg_1970 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_15_1_loc_reg_1975 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_16_0_loc_reg_1980 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_16_1_loc_reg_1985 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_17_0_loc_reg_1990 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_17_1_loc_reg_1995 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_18_0_loc_reg_2000 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_18_1_loc_reg_2005 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_19_0_loc_reg_2010 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_19_1_loc_reg_2015 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_20_0_loc_reg_2020 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_20_1_loc_reg_2025 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_21_0_loc_reg_2030 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_21_1_loc_reg_2035 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_22_0_loc_reg_2040 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_22_1_loc_reg_2045 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_23_0_loc_reg_2050 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_23_1_loc_reg_2055 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_24_0_loc_reg_2060 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_24_1_loc_reg_2065 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_1_input_ce0 : STD_LOGIC;
    signal conv_1_input_we0 : STD_LOGIC;
    signal conv_1_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_2_fu_368_ap_start : STD_LOGIC;
    signal grp_dense_2_fu_368_ap_done : STD_LOGIC;
    signal grp_dense_2_fu_368_ap_idle : STD_LOGIC;
    signal grp_dense_2_fu_368_ap_ready : STD_LOGIC;
    signal grp_dense_2_fu_368_dense_2_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_2_fu_368_dense_2_out_ce0 : STD_LOGIC;
    signal grp_dense_2_fu_368_dense_2_out_we0 : STD_LOGIC;
    signal grp_dense_2_fu_368_dense_2_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_start : STD_LOGIC;
    signal grp_dense_1_fu_526_ap_idle : STD_LOGIC;
    signal grp_dense_1_fu_526_flat_array_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_dense_1_fu_526_flat_array_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_526_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_33 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_34 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_35 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_36 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_37 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_38 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_39 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_40 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_41 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_42 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_43 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_44 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_45 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_46 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_47 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_526_ap_return_49 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_586_ap_start : STD_LOGIC;
    signal grp_dense_out_fu_586_ap_done : STD_LOGIC;
    signal grp_dense_out_fu_586_ap_idle : STD_LOGIC;
    signal grp_dense_out_fu_586_ap_ready : STD_LOGIC;
    signal grp_dense_out_fu_586_prediction_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_586_prediction_EN_A : STD_LOGIC;
    signal grp_dense_out_fu_586_prediction_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_out_fu_586_prediction_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_586_dense_2_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_out_fu_586_dense_2_out_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_598_ap_start : STD_LOGIC;
    signal grp_conv_2_fu_598_ap_done : STD_LOGIC;
    signal grp_conv_2_fu_598_ap_idle : STD_LOGIC;
    signal grp_conv_2_fu_598_ap_ready : STD_LOGIC;
    signal grp_conv_2_fu_598_conv_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_2_fu_598_conv_out_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_598_conv_out_we0 : STD_LOGIC;
    signal grp_conv_2_fu_598_conv_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_2_fu_598_max_pool_1_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_2_fu_598_max_pool_1_out_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_610_ap_start : STD_LOGIC;
    signal grp_conv_1_fu_610_ap_done : STD_LOGIC;
    signal grp_conv_1_fu_610_ap_idle : STD_LOGIC;
    signal grp_conv_1_fu_610_ap_ready : STD_LOGIC;
    signal grp_conv_1_fu_610_input_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_1_fu_610_input_r_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_610_conv_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_1_fu_610_conv_out_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_610_conv_out_we0 : STD_LOGIC;
    signal grp_conv_1_fu_610_conv_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_621_ap_start : STD_LOGIC;
    signal grp_max_pool_1_fu_621_ap_done : STD_LOGIC;
    signal grp_max_pool_1_fu_621_ap_idle : STD_LOGIC;
    signal grp_max_pool_1_fu_621_ap_ready : STD_LOGIC;
    signal grp_max_pool_1_fu_621_max_pool_out_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_max_pool_1_fu_621_max_pool_out_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_621_max_pool_out_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_621_max_pool_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_621_conv_1_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_max_pool_1_fu_621_conv_1_out_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_629_ap_start : STD_LOGIC;
    signal grp_max_pool_2_fu_629_ap_done : STD_LOGIC;
    signal grp_max_pool_2_fu_629_ap_idle : STD_LOGIC;
    signal grp_max_pool_2_fu_629_ap_ready : STD_LOGIC;
    signal grp_max_pool_2_fu_629_max_pool_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_max_pool_2_fu_629_max_pool_out_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_629_max_pool_out_we0 : STD_LOGIC;
    signal grp_max_pool_2_fu_629_max_pool_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_2_fu_629_conv_2_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_2_fu_629_conv_2_out_ce0 : STD_LOGIC;
    signal grp_flat_fu_637_ap_start : STD_LOGIC;
    signal grp_flat_fu_637_ap_done : STD_LOGIC;
    signal grp_flat_fu_637_ap_idle : STD_LOGIC;
    signal grp_flat_fu_637_ap_ready : STD_LOGIC;
    signal grp_flat_fu_637_max_pool_2_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_637_max_pool_2_out_ce0 : STD_LOGIC;
    signal grp_flat_fu_637_flat_array_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_637_flat_array_ce0 : STD_LOGIC;
    signal grp_flat_fu_637_flat_array_we0 : STD_LOGIC;
    signal grp_flat_fu_637_flat_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ix_in_0_reg_324 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_reg_336 : STD_LOGIC_VECTOR (4 downto 0);
    signal ix_in_1_reg_347 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal j_0_reg_357 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_2_fu_368_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_dense_1_fu_526_ap_start_reg : STD_LOGIC := '0';
    signal grp_dense_out_fu_586_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_conv_2_fu_598_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_conv_1_fu_610_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_max_pool_1_fu_621_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_max_pool_2_fu_629_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_flat_fu_637_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln27_1_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln27_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cnn_input_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_663_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_675_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_fu_671_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln27_2_fu_683_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln27_3_fu_710_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);

    component dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_1_out_0_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_0_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_1_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_1_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_2_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_2_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_3_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_3_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_4_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_4_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_5_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_5_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_6_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_6_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_7_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_7_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_8_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_8_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_9_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_9_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_10_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_10_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_11_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_11_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_12_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_12_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_13_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_13_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_14_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_14_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_15_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_15_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_16_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_16_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_17_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_17_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_18_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_18_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_19_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_19_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_20_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_20_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_21_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_21_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_22_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_22_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_23_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_23_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_24_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_24_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_2_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_ce0 : OUT STD_LOGIC;
        dense_2_out_we0 : OUT STD_LOGIC;
        dense_2_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        flat_array_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_ce0 : OUT STD_LOGIC;
        flat_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_0_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_0_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_1_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_1_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_2_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_2_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_3_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_3_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_4_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_4_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_5_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_5_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_6_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_6_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_7_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_7_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_8_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_8_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_9_0_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_9_1_re : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_10_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_10_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_11_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_11_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_12_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_12_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_13_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_13_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_14_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_14_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_15_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_15_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_16_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_16_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_17_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_17_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_18_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_18_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_19_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_19_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_20_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_20_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_21_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_21_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_22_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_22_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_23_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_23_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_24_0_r : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_24_1_r : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        prediction_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_EN_A : OUT STD_LOGIC;
        prediction_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_2_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_ce0 : OUT STD_LOGIC;
        dense_2_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_ce0 : OUT STD_LOGIC;
        conv_out_we0 : OUT STD_LOGIC;
        conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pool_1_out_ce0 : OUT STD_LOGIC;
        max_pool_1_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_out_ce0 : OUT STD_LOGIC;
        conv_out_we0 : OUT STD_LOGIC;
        conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component max_pool_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        max_pool_out_ce0 : OUT STD_LOGIC;
        max_pool_out_we0 : OUT STD_LOGIC;
        max_pool_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_1_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_1_out_ce0 : OUT STD_LOGIC;
        conv_1_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component max_pool_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_ce0 : OUT STD_LOGIC;
        max_pool_out_we0 : OUT STD_LOGIC;
        max_pool_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_2_out_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_2_out_ce0 : OUT STD_LOGIC;
        conv_2_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component flat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_2_out_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_2_out_ce0 : OUT STD_LOGIC;
        max_pool_2_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        flat_array_ce0 : OUT STD_LOGIC;
        flat_array_we0 : OUT STD_LOGIC;
        flat_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_conv_1_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_max_pool_1_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_conv_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_max_pool_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_conv_1_input IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    conv_1_out_U : component cnn_conv_1_out
    generic map (
        DataWidth => 32,
        AddressRange => 4056,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_1_out_address0,
        ce0 => conv_1_out_ce0,
        we0 => conv_1_out_we0,
        d0 => grp_conv_1_fu_610_conv_out_d0,
        q0 => conv_1_out_q0);

    max_pool_1_out_U : component cnn_max_pool_1_out
    generic map (
        DataWidth => 32,
        AddressRange => 1014,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_address0,
        ce0 => max_pool_1_out_ce0,
        we0 => max_pool_1_out_we0,
        d0 => grp_max_pool_1_fu_621_max_pool_out_d0,
        q0 => max_pool_1_out_q0);

    conv_2_out_U : component cnn_conv_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 1936,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_2_out_address0,
        ce0 => conv_2_out_ce0,
        we0 => conv_2_out_we0,
        d0 => grp_conv_2_fu_598_conv_out_d0,
        q0 => conv_2_out_q0);

    max_pool_2_out_U : component cnn_max_pool_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_2_out_address0,
        ce0 => max_pool_2_out_ce0,
        we0 => max_pool_2_out_we0,
        d0 => grp_max_pool_2_fu_629_max_pool_out_d0,
        q0 => max_pool_2_out_q0);

    flat_array_U : component cnn_max_pool_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_address0,
        ce0 => flat_array_ce0,
        we0 => flat_array_we0,
        d0 => grp_flat_fu_637_flat_array_d0,
        q0 => flat_array_q0);

    dense_2_out_U : component cnn_dense_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_2_out_address0,
        ce0 => dense_2_out_ce0,
        we0 => dense_2_out_we0,
        d0 => grp_dense_2_fu_368_dense_2_out_d0,
        q0 => dense_2_out_q0);

    cnn_CRTL_BUS_s_axi_U : component cnn_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    conv_1_input_U : component cnn_conv_1_input
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_1_input_address0,
        ce0 => conv_1_input_ce0,
        we0 => conv_1_input_we0,
        d0 => cnn_input_Dout_A,
        q0 => conv_1_input_q0);

    grp_dense_2_fu_368 : component dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dense_2_fu_368_ap_start,
        ap_done => grp_dense_2_fu_368_ap_done,
        ap_idle => grp_dense_2_fu_368_ap_idle,
        ap_ready => grp_dense_2_fu_368_ap_ready,
        dense_1_out_0_0_re => dense_1_out_0_0_loc_reg_1820,
        dense_1_out_0_1_re => dense_1_out_0_1_loc_reg_1825,
        dense_1_out_1_0_re => dense_1_out_1_0_loc_reg_1830,
        dense_1_out_1_1_re => dense_1_out_1_1_loc_reg_1835,
        dense_1_out_2_0_re => dense_1_out_2_0_loc_reg_1840,
        dense_1_out_2_1_re => dense_1_out_2_1_loc_reg_1845,
        dense_1_out_3_0_re => dense_1_out_3_0_loc_reg_1850,
        dense_1_out_3_1_re => dense_1_out_3_1_loc_reg_1855,
        dense_1_out_4_0_re => dense_1_out_4_0_loc_reg_1860,
        dense_1_out_4_1_re => dense_1_out_4_1_loc_reg_1865,
        dense_1_out_5_0_re => dense_1_out_5_0_loc_reg_1870,
        dense_1_out_5_1_re => dense_1_out_5_1_loc_reg_1875,
        dense_1_out_6_0_re => dense_1_out_6_0_loc_reg_1880,
        dense_1_out_6_1_re => dense_1_out_6_1_loc_reg_1885,
        dense_1_out_7_0_re => dense_1_out_7_0_loc_reg_1890,
        dense_1_out_7_1_re => dense_1_out_7_1_loc_reg_1895,
        dense_1_out_8_0_re => dense_1_out_8_0_loc_reg_1900,
        dense_1_out_8_1_re => dense_1_out_8_1_loc_reg_1905,
        dense_1_out_9_0_re => dense_1_out_9_0_loc_reg_1910,
        dense_1_out_9_1_re => dense_1_out_9_1_loc_reg_1915,
        dense_1_out_10_0_r => dense_1_out_10_0_loc_reg_1920,
        dense_1_out_10_1_r => dense_1_out_10_1_loc_reg_1925,
        dense_1_out_11_0_r => dense_1_out_11_0_loc_reg_1930,
        dense_1_out_11_1_r => dense_1_out_11_1_loc_reg_1935,
        dense_1_out_12_0_r => dense_1_out_12_0_loc_reg_1940,
        dense_1_out_12_1_r => dense_1_out_12_1_loc_reg_1945,
        dense_1_out_13_0_r => dense_1_out_13_0_loc_reg_1950,
        dense_1_out_13_1_r => dense_1_out_13_1_loc_reg_1955,
        dense_1_out_14_0_r => dense_1_out_14_0_loc_reg_1960,
        dense_1_out_14_1_r => dense_1_out_14_1_loc_reg_1965,
        dense_1_out_15_0_r => dense_1_out_15_0_loc_reg_1970,
        dense_1_out_15_1_r => dense_1_out_15_1_loc_reg_1975,
        dense_1_out_16_0_r => dense_1_out_16_0_loc_reg_1980,
        dense_1_out_16_1_r => dense_1_out_16_1_loc_reg_1985,
        dense_1_out_17_0_r => dense_1_out_17_0_loc_reg_1990,
        dense_1_out_17_1_r => dense_1_out_17_1_loc_reg_1995,
        dense_1_out_18_0_r => dense_1_out_18_0_loc_reg_2000,
        dense_1_out_18_1_r => dense_1_out_18_1_loc_reg_2005,
        dense_1_out_19_0_r => dense_1_out_19_0_loc_reg_2010,
        dense_1_out_19_1_r => dense_1_out_19_1_loc_reg_2015,
        dense_1_out_20_0_r => dense_1_out_20_0_loc_reg_2020,
        dense_1_out_20_1_r => dense_1_out_20_1_loc_reg_2025,
        dense_1_out_21_0_r => dense_1_out_21_0_loc_reg_2030,
        dense_1_out_21_1_r => dense_1_out_21_1_loc_reg_2035,
        dense_1_out_22_0_r => dense_1_out_22_0_loc_reg_2040,
        dense_1_out_22_1_r => dense_1_out_22_1_loc_reg_2045,
        dense_1_out_23_0_r => dense_1_out_23_0_loc_reg_2050,
        dense_1_out_23_1_r => dense_1_out_23_1_loc_reg_2055,
        dense_1_out_24_0_r => dense_1_out_24_0_loc_reg_2060,
        dense_1_out_24_1_r => dense_1_out_24_1_loc_reg_2065,
        dense_2_out_address0 => grp_dense_2_fu_368_dense_2_out_address0,
        dense_2_out_ce0 => grp_dense_2_fu_368_dense_2_out_ce0,
        dense_2_out_we0 => grp_dense_2_fu_368_dense_2_out_we0,
        dense_2_out_d0 => grp_dense_2_fu_368_dense_2_out_d0);

    grp_dense_1_fu_526 : component dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dense_1_fu_526_ap_start,
        ap_done => grp_dense_1_fu_526_ap_done,
        ap_idle => grp_dense_1_fu_526_ap_idle,
        ap_ready => grp_dense_1_fu_526_ap_ready,
        flat_array_address0 => grp_dense_1_fu_526_flat_array_address0,
        flat_array_ce0 => grp_dense_1_fu_526_flat_array_ce0,
        flat_array_q0 => flat_array_q0,
        dense_1_out_0_0_re => dense_1_out_0_0,
        dense_1_out_0_1_re => dense_1_out_0_1,
        dense_1_out_1_0_re => dense_1_out_1_0,
        dense_1_out_1_1_re => dense_1_out_1_1,
        dense_1_out_2_0_re => dense_1_out_2_0,
        dense_1_out_2_1_re => dense_1_out_2_1,
        dense_1_out_3_0_re => dense_1_out_3_0,
        dense_1_out_3_1_re => dense_1_out_3_1,
        dense_1_out_4_0_re => dense_1_out_4_0,
        dense_1_out_4_1_re => dense_1_out_4_1,
        dense_1_out_5_0_re => dense_1_out_5_0,
        dense_1_out_5_1_re => dense_1_out_5_1,
        dense_1_out_6_0_re => dense_1_out_6_0,
        dense_1_out_6_1_re => dense_1_out_6_1,
        dense_1_out_7_0_re => dense_1_out_7_0,
        dense_1_out_7_1_re => dense_1_out_7_1,
        dense_1_out_8_0_re => dense_1_out_8_0,
        dense_1_out_8_1_re => dense_1_out_8_1,
        dense_1_out_9_0_re => dense_1_out_9_0,
        dense_1_out_9_1_re => dense_1_out_9_1,
        dense_1_out_10_0_r => dense_1_out_10_0,
        dense_1_out_10_1_r => dense_1_out_10_1,
        dense_1_out_11_0_r => dense_1_out_11_0,
        dense_1_out_11_1_r => dense_1_out_11_1,
        dense_1_out_12_0_r => dense_1_out_12_0,
        dense_1_out_12_1_r => dense_1_out_12_1,
        dense_1_out_13_0_r => dense_1_out_13_0,
        dense_1_out_13_1_r => dense_1_out_13_1,
        dense_1_out_14_0_r => dense_1_out_14_0,
        dense_1_out_14_1_r => dense_1_out_14_1,
        dense_1_out_15_0_r => dense_1_out_15_0,
        dense_1_out_15_1_r => dense_1_out_15_1,
        dense_1_out_16_0_r => dense_1_out_16_0,
        dense_1_out_16_1_r => dense_1_out_16_1,
        dense_1_out_17_0_r => dense_1_out_17_0,
        dense_1_out_17_1_r => dense_1_out_17_1,
        dense_1_out_18_0_r => dense_1_out_18_0,
        dense_1_out_18_1_r => dense_1_out_18_1,
        dense_1_out_19_0_r => dense_1_out_19_0,
        dense_1_out_19_1_r => dense_1_out_19_1,
        dense_1_out_20_0_r => dense_1_out_20_0,
        dense_1_out_20_1_r => dense_1_out_20_1,
        dense_1_out_21_0_r => dense_1_out_21_0,
        dense_1_out_21_1_r => dense_1_out_21_1,
        dense_1_out_22_0_r => dense_1_out_22_0,
        dense_1_out_22_1_r => dense_1_out_22_1,
        dense_1_out_23_0_r => dense_1_out_23_0,
        dense_1_out_23_1_r => dense_1_out_23_1,
        dense_1_out_24_0_r => dense_1_out_24_0,
        dense_1_out_24_1_r => dense_1_out_24_1,
        ap_return_0 => grp_dense_1_fu_526_ap_return_0,
        ap_return_1 => grp_dense_1_fu_526_ap_return_1,
        ap_return_2 => grp_dense_1_fu_526_ap_return_2,
        ap_return_3 => grp_dense_1_fu_526_ap_return_3,
        ap_return_4 => grp_dense_1_fu_526_ap_return_4,
        ap_return_5 => grp_dense_1_fu_526_ap_return_5,
        ap_return_6 => grp_dense_1_fu_526_ap_return_6,
        ap_return_7 => grp_dense_1_fu_526_ap_return_7,
        ap_return_8 => grp_dense_1_fu_526_ap_return_8,
        ap_return_9 => grp_dense_1_fu_526_ap_return_9,
        ap_return_10 => grp_dense_1_fu_526_ap_return_10,
        ap_return_11 => grp_dense_1_fu_526_ap_return_11,
        ap_return_12 => grp_dense_1_fu_526_ap_return_12,
        ap_return_13 => grp_dense_1_fu_526_ap_return_13,
        ap_return_14 => grp_dense_1_fu_526_ap_return_14,
        ap_return_15 => grp_dense_1_fu_526_ap_return_15,
        ap_return_16 => grp_dense_1_fu_526_ap_return_16,
        ap_return_17 => grp_dense_1_fu_526_ap_return_17,
        ap_return_18 => grp_dense_1_fu_526_ap_return_18,
        ap_return_19 => grp_dense_1_fu_526_ap_return_19,
        ap_return_20 => grp_dense_1_fu_526_ap_return_20,
        ap_return_21 => grp_dense_1_fu_526_ap_return_21,
        ap_return_22 => grp_dense_1_fu_526_ap_return_22,
        ap_return_23 => grp_dense_1_fu_526_ap_return_23,
        ap_return_24 => grp_dense_1_fu_526_ap_return_24,
        ap_return_25 => grp_dense_1_fu_526_ap_return_25,
        ap_return_26 => grp_dense_1_fu_526_ap_return_26,
        ap_return_27 => grp_dense_1_fu_526_ap_return_27,
        ap_return_28 => grp_dense_1_fu_526_ap_return_28,
        ap_return_29 => grp_dense_1_fu_526_ap_return_29,
        ap_return_30 => grp_dense_1_fu_526_ap_return_30,
        ap_return_31 => grp_dense_1_fu_526_ap_return_31,
        ap_return_32 => grp_dense_1_fu_526_ap_return_32,
        ap_return_33 => grp_dense_1_fu_526_ap_return_33,
        ap_return_34 => grp_dense_1_fu_526_ap_return_34,
        ap_return_35 => grp_dense_1_fu_526_ap_return_35,
        ap_return_36 => grp_dense_1_fu_526_ap_return_36,
        ap_return_37 => grp_dense_1_fu_526_ap_return_37,
        ap_return_38 => grp_dense_1_fu_526_ap_return_38,
        ap_return_39 => grp_dense_1_fu_526_ap_return_39,
        ap_return_40 => grp_dense_1_fu_526_ap_return_40,
        ap_return_41 => grp_dense_1_fu_526_ap_return_41,
        ap_return_42 => grp_dense_1_fu_526_ap_return_42,
        ap_return_43 => grp_dense_1_fu_526_ap_return_43,
        ap_return_44 => grp_dense_1_fu_526_ap_return_44,
        ap_return_45 => grp_dense_1_fu_526_ap_return_45,
        ap_return_46 => grp_dense_1_fu_526_ap_return_46,
        ap_return_47 => grp_dense_1_fu_526_ap_return_47,
        ap_return_48 => grp_dense_1_fu_526_ap_return_48,
        ap_return_49 => grp_dense_1_fu_526_ap_return_49);

    grp_dense_out_fu_586 : component dense_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dense_out_fu_586_ap_start,
        ap_done => grp_dense_out_fu_586_ap_done,
        ap_idle => grp_dense_out_fu_586_ap_idle,
        ap_ready => grp_dense_out_fu_586_ap_ready,
        prediction_Addr_A => grp_dense_out_fu_586_prediction_Addr_A,
        prediction_EN_A => grp_dense_out_fu_586_prediction_EN_A,
        prediction_WEN_A => grp_dense_out_fu_586_prediction_WEN_A,
        prediction_Din_A => grp_dense_out_fu_586_prediction_Din_A,
        prediction_Dout_A => ap_const_lv32_0,
        dense_2_out_address0 => grp_dense_out_fu_586_dense_2_out_address0,
        dense_2_out_ce0 => grp_dense_out_fu_586_dense_2_out_ce0,
        dense_2_out_q0 => dense_2_out_q0);

    grp_conv_2_fu_598 : component conv_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_2_fu_598_ap_start,
        ap_done => grp_conv_2_fu_598_ap_done,
        ap_idle => grp_conv_2_fu_598_ap_idle,
        ap_ready => grp_conv_2_fu_598_ap_ready,
        conv_out_address0 => grp_conv_2_fu_598_conv_out_address0,
        conv_out_ce0 => grp_conv_2_fu_598_conv_out_ce0,
        conv_out_we0 => grp_conv_2_fu_598_conv_out_we0,
        conv_out_d0 => grp_conv_2_fu_598_conv_out_d0,
        max_pool_1_out_address0 => grp_conv_2_fu_598_max_pool_1_out_address0,
        max_pool_1_out_ce0 => grp_conv_2_fu_598_max_pool_1_out_ce0,
        max_pool_1_out_q0 => max_pool_1_out_q0);

    grp_conv_1_fu_610 : component conv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_1_fu_610_ap_start,
        ap_done => grp_conv_1_fu_610_ap_done,
        ap_idle => grp_conv_1_fu_610_ap_idle,
        ap_ready => grp_conv_1_fu_610_ap_ready,
        input_r_address0 => grp_conv_1_fu_610_input_r_address0,
        input_r_ce0 => grp_conv_1_fu_610_input_r_ce0,
        input_r_q0 => conv_1_input_q0,
        conv_out_address0 => grp_conv_1_fu_610_conv_out_address0,
        conv_out_ce0 => grp_conv_1_fu_610_conv_out_ce0,
        conv_out_we0 => grp_conv_1_fu_610_conv_out_we0,
        conv_out_d0 => grp_conv_1_fu_610_conv_out_d0);

    grp_max_pool_1_fu_621 : component max_pool_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_max_pool_1_fu_621_ap_start,
        ap_done => grp_max_pool_1_fu_621_ap_done,
        ap_idle => grp_max_pool_1_fu_621_ap_idle,
        ap_ready => grp_max_pool_1_fu_621_ap_ready,
        max_pool_out_address0 => grp_max_pool_1_fu_621_max_pool_out_address0,
        max_pool_out_ce0 => grp_max_pool_1_fu_621_max_pool_out_ce0,
        max_pool_out_we0 => grp_max_pool_1_fu_621_max_pool_out_we0,
        max_pool_out_d0 => grp_max_pool_1_fu_621_max_pool_out_d0,
        conv_1_out_address0 => grp_max_pool_1_fu_621_conv_1_out_address0,
        conv_1_out_ce0 => grp_max_pool_1_fu_621_conv_1_out_ce0,
        conv_1_out_q0 => conv_1_out_q0);

    grp_max_pool_2_fu_629 : component max_pool_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_max_pool_2_fu_629_ap_start,
        ap_done => grp_max_pool_2_fu_629_ap_done,
        ap_idle => grp_max_pool_2_fu_629_ap_idle,
        ap_ready => grp_max_pool_2_fu_629_ap_ready,
        max_pool_out_address0 => grp_max_pool_2_fu_629_max_pool_out_address0,
        max_pool_out_ce0 => grp_max_pool_2_fu_629_max_pool_out_ce0,
        max_pool_out_we0 => grp_max_pool_2_fu_629_max_pool_out_we0,
        max_pool_out_d0 => grp_max_pool_2_fu_629_max_pool_out_d0,
        conv_2_out_address0 => grp_max_pool_2_fu_629_conv_2_out_address0,
        conv_2_out_ce0 => grp_max_pool_2_fu_629_conv_2_out_ce0,
        conv_2_out_q0 => conv_2_out_q0);

    grp_flat_fu_637 : component flat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_flat_fu_637_ap_start,
        ap_done => grp_flat_fu_637_ap_done,
        ap_idle => grp_flat_fu_637_ap_idle,
        ap_ready => grp_flat_fu_637_ap_ready,
        max_pool_2_out_address0 => grp_flat_fu_637_max_pool_2_out_address0,
        max_pool_2_out_ce0 => grp_flat_fu_637_max_pool_2_out_ce0,
        max_pool_2_out_q0 => max_pool_2_out_q0,
        flat_array_address0 => grp_flat_fu_637_flat_array_address0,
        flat_array_ce0 => grp_flat_fu_637_flat_array_ce0,
        flat_array_we0 => grp_flat_fu_637_flat_array_we0,
        flat_array_d0 => grp_flat_fu_637_flat_array_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv_1_fu_610_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_1_fu_610_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln23_fu_645_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_conv_1_fu_610_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_1_fu_610_ap_ready = ap_const_logic_1)) then 
                    grp_conv_1_fu_610_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_2_fu_598_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_2_fu_598_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_conv_2_fu_598_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_2_fu_598_ap_ready = ap_const_logic_1)) then 
                    grp_conv_2_fu_598_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_1_fu_526_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dense_1_fu_526_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_dense_1_fu_526_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_1_fu_526_ap_ready = ap_const_logic_1)) then 
                    grp_dense_1_fu_526_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_2_fu_368_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dense_2_fu_368_ap_start_reg <= ap_const_logic_0;
            else
                if (((grp_dense_1_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    grp_dense_2_fu_368_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_2_fu_368_ap_ready = ap_const_logic_1)) then 
                    grp_dense_2_fu_368_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_out_fu_586_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dense_out_fu_586_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_dense_out_fu_586_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_out_fu_586_ap_ready = ap_const_logic_1)) then 
                    grp_dense_out_fu_586_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_flat_fu_637_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_flat_fu_637_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_flat_fu_637_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_flat_fu_637_ap_ready = ap_const_logic_1)) then 
                    grp_flat_fu_637_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_1_fu_621_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_max_pool_1_fu_621_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_max_pool_1_fu_621_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_1_fu_621_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_1_fu_621_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_2_fu_629_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_max_pool_2_fu_629_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_max_pool_2_fu_629_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_2_fu_629_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_2_fu_629_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_336 <= i_reg_1532;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_336 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    ix_in_0_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix_in_0_reg_324 <= ix_in_reg_1537;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ix_in_0_reg_324 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    ix_in_1_reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                ix_in_1_reg_347 <= add_ln28_reg_1565;
            elsif (((icmp_ln23_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix_in_1_reg_347 <= ix_in_0_reg_324;
            end if; 
        end if;
    end process;

    j_0_reg_357_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_0_reg_357 <= j_reg_1550;
            elsif (((icmp_ln23_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_357 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_693_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln27_reg_1560 <= add_ln27_fu_714_p2;
                add_ln28_reg_1565 <= add_ln28_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_dense_1_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                dense_1_out_0_0 <= grp_dense_1_fu_526_ap_return_0;
                dense_1_out_0_0_loc_reg_1820 <= grp_dense_1_fu_526_ap_return_0;
                dense_1_out_0_1 <= grp_dense_1_fu_526_ap_return_1;
                dense_1_out_0_1_loc_reg_1825 <= grp_dense_1_fu_526_ap_return_1;
                dense_1_out_10_0 <= grp_dense_1_fu_526_ap_return_20;
                dense_1_out_10_0_loc_reg_1920 <= grp_dense_1_fu_526_ap_return_20;
                dense_1_out_10_1 <= grp_dense_1_fu_526_ap_return_21;
                dense_1_out_10_1_loc_reg_1925 <= grp_dense_1_fu_526_ap_return_21;
                dense_1_out_11_0 <= grp_dense_1_fu_526_ap_return_22;
                dense_1_out_11_0_loc_reg_1930 <= grp_dense_1_fu_526_ap_return_22;
                dense_1_out_11_1 <= grp_dense_1_fu_526_ap_return_23;
                dense_1_out_11_1_loc_reg_1935 <= grp_dense_1_fu_526_ap_return_23;
                dense_1_out_12_0 <= grp_dense_1_fu_526_ap_return_24;
                dense_1_out_12_0_loc_reg_1940 <= grp_dense_1_fu_526_ap_return_24;
                dense_1_out_12_1 <= grp_dense_1_fu_526_ap_return_25;
                dense_1_out_12_1_loc_reg_1945 <= grp_dense_1_fu_526_ap_return_25;
                dense_1_out_13_0 <= grp_dense_1_fu_526_ap_return_26;
                dense_1_out_13_0_loc_reg_1950 <= grp_dense_1_fu_526_ap_return_26;
                dense_1_out_13_1 <= grp_dense_1_fu_526_ap_return_27;
                dense_1_out_13_1_loc_reg_1955 <= grp_dense_1_fu_526_ap_return_27;
                dense_1_out_14_0 <= grp_dense_1_fu_526_ap_return_28;
                dense_1_out_14_0_loc_reg_1960 <= grp_dense_1_fu_526_ap_return_28;
                dense_1_out_14_1 <= grp_dense_1_fu_526_ap_return_29;
                dense_1_out_14_1_loc_reg_1965 <= grp_dense_1_fu_526_ap_return_29;
                dense_1_out_15_0 <= grp_dense_1_fu_526_ap_return_30;
                dense_1_out_15_0_loc_reg_1970 <= grp_dense_1_fu_526_ap_return_30;
                dense_1_out_15_1 <= grp_dense_1_fu_526_ap_return_31;
                dense_1_out_15_1_loc_reg_1975 <= grp_dense_1_fu_526_ap_return_31;
                dense_1_out_16_0 <= grp_dense_1_fu_526_ap_return_32;
                dense_1_out_16_0_loc_reg_1980 <= grp_dense_1_fu_526_ap_return_32;
                dense_1_out_16_1 <= grp_dense_1_fu_526_ap_return_33;
                dense_1_out_16_1_loc_reg_1985 <= grp_dense_1_fu_526_ap_return_33;
                dense_1_out_17_0 <= grp_dense_1_fu_526_ap_return_34;
                dense_1_out_17_0_loc_reg_1990 <= grp_dense_1_fu_526_ap_return_34;
                dense_1_out_17_1 <= grp_dense_1_fu_526_ap_return_35;
                dense_1_out_17_1_loc_reg_1995 <= grp_dense_1_fu_526_ap_return_35;
                dense_1_out_18_0 <= grp_dense_1_fu_526_ap_return_36;
                dense_1_out_18_0_loc_reg_2000 <= grp_dense_1_fu_526_ap_return_36;
                dense_1_out_18_1 <= grp_dense_1_fu_526_ap_return_37;
                dense_1_out_18_1_loc_reg_2005 <= grp_dense_1_fu_526_ap_return_37;
                dense_1_out_19_0 <= grp_dense_1_fu_526_ap_return_38;
                dense_1_out_19_0_loc_reg_2010 <= grp_dense_1_fu_526_ap_return_38;
                dense_1_out_19_1 <= grp_dense_1_fu_526_ap_return_39;
                dense_1_out_19_1_loc_reg_2015 <= grp_dense_1_fu_526_ap_return_39;
                dense_1_out_1_0 <= grp_dense_1_fu_526_ap_return_2;
                dense_1_out_1_0_loc_reg_1830 <= grp_dense_1_fu_526_ap_return_2;
                dense_1_out_1_1 <= grp_dense_1_fu_526_ap_return_3;
                dense_1_out_1_1_loc_reg_1835 <= grp_dense_1_fu_526_ap_return_3;
                dense_1_out_20_0 <= grp_dense_1_fu_526_ap_return_40;
                dense_1_out_20_0_loc_reg_2020 <= grp_dense_1_fu_526_ap_return_40;
                dense_1_out_20_1 <= grp_dense_1_fu_526_ap_return_41;
                dense_1_out_20_1_loc_reg_2025 <= grp_dense_1_fu_526_ap_return_41;
                dense_1_out_21_0 <= grp_dense_1_fu_526_ap_return_42;
                dense_1_out_21_0_loc_reg_2030 <= grp_dense_1_fu_526_ap_return_42;
                dense_1_out_21_1 <= grp_dense_1_fu_526_ap_return_43;
                dense_1_out_21_1_loc_reg_2035 <= grp_dense_1_fu_526_ap_return_43;
                dense_1_out_22_0 <= grp_dense_1_fu_526_ap_return_44;
                dense_1_out_22_0_loc_reg_2040 <= grp_dense_1_fu_526_ap_return_44;
                dense_1_out_22_1 <= grp_dense_1_fu_526_ap_return_45;
                dense_1_out_22_1_loc_reg_2045 <= grp_dense_1_fu_526_ap_return_45;
                dense_1_out_23_0 <= grp_dense_1_fu_526_ap_return_46;
                dense_1_out_23_0_loc_reg_2050 <= grp_dense_1_fu_526_ap_return_46;
                dense_1_out_23_1 <= grp_dense_1_fu_526_ap_return_47;
                dense_1_out_23_1_loc_reg_2055 <= grp_dense_1_fu_526_ap_return_47;
                dense_1_out_24_0 <= grp_dense_1_fu_526_ap_return_48;
                dense_1_out_24_0_loc_reg_2060 <= grp_dense_1_fu_526_ap_return_48;
                dense_1_out_24_1 <= grp_dense_1_fu_526_ap_return_49;
                dense_1_out_24_1_loc_reg_2065 <= grp_dense_1_fu_526_ap_return_49;
                dense_1_out_2_0 <= grp_dense_1_fu_526_ap_return_4;
                dense_1_out_2_0_loc_reg_1840 <= grp_dense_1_fu_526_ap_return_4;
                dense_1_out_2_1 <= grp_dense_1_fu_526_ap_return_5;
                dense_1_out_2_1_loc_reg_1845 <= grp_dense_1_fu_526_ap_return_5;
                dense_1_out_3_0 <= grp_dense_1_fu_526_ap_return_6;
                dense_1_out_3_0_loc_reg_1850 <= grp_dense_1_fu_526_ap_return_6;
                dense_1_out_3_1 <= grp_dense_1_fu_526_ap_return_7;
                dense_1_out_3_1_loc_reg_1855 <= grp_dense_1_fu_526_ap_return_7;
                dense_1_out_4_0 <= grp_dense_1_fu_526_ap_return_8;
                dense_1_out_4_0_loc_reg_1860 <= grp_dense_1_fu_526_ap_return_8;
                dense_1_out_4_1 <= grp_dense_1_fu_526_ap_return_9;
                dense_1_out_4_1_loc_reg_1865 <= grp_dense_1_fu_526_ap_return_9;
                dense_1_out_5_0 <= grp_dense_1_fu_526_ap_return_10;
                dense_1_out_5_0_loc_reg_1870 <= grp_dense_1_fu_526_ap_return_10;
                dense_1_out_5_1 <= grp_dense_1_fu_526_ap_return_11;
                dense_1_out_5_1_loc_reg_1875 <= grp_dense_1_fu_526_ap_return_11;
                dense_1_out_6_0 <= grp_dense_1_fu_526_ap_return_12;
                dense_1_out_6_0_loc_reg_1880 <= grp_dense_1_fu_526_ap_return_12;
                dense_1_out_6_1 <= grp_dense_1_fu_526_ap_return_13;
                dense_1_out_6_1_loc_reg_1885 <= grp_dense_1_fu_526_ap_return_13;
                dense_1_out_7_0 <= grp_dense_1_fu_526_ap_return_14;
                dense_1_out_7_0_loc_reg_1890 <= grp_dense_1_fu_526_ap_return_14;
                dense_1_out_7_1 <= grp_dense_1_fu_526_ap_return_15;
                dense_1_out_7_1_loc_reg_1895 <= grp_dense_1_fu_526_ap_return_15;
                dense_1_out_8_0 <= grp_dense_1_fu_526_ap_return_16;
                dense_1_out_8_0_loc_reg_1900 <= grp_dense_1_fu_526_ap_return_16;
                dense_1_out_8_1 <= grp_dense_1_fu_526_ap_return_17;
                dense_1_out_8_1_loc_reg_1905 <= grp_dense_1_fu_526_ap_return_17;
                dense_1_out_9_0 <= grp_dense_1_fu_526_ap_return_18;
                dense_1_out_9_0_loc_reg_1910 <= grp_dense_1_fu_526_ap_return_18;
                dense_1_out_9_1 <= grp_dense_1_fu_526_ap_return_19;
                dense_1_out_9_1_loc_reg_1915 <= grp_dense_1_fu_526_ap_return_19;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1532 <= i_fu_651_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                ix_in_reg_1537 <= ix_in_fu_657_p2;
                    sub_ln27_reg_1542(10 downto 2) <= sub_ln27_fu_687_p2(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_1550 <= j_fu_699_p2;
            end if;
        end if;
    end process;
    sub_ln27_reg_1542(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln23_fu_645_p2, ap_CS_fsm_state3, icmp_ln25_fu_693_p2, ap_CS_fsm_state15, grp_dense_1_fu_526_ap_done, grp_dense_2_fu_368_ap_done, grp_dense_out_fu_586_ap_done, grp_conv_2_fu_598_ap_done, grp_conv_1_fu_610_ap_done, grp_max_pool_1_fu_621_ap_done, grp_max_pool_2_fu_629_ap_done, grp_flat_fu_637_ap_done, ap_CS_fsm_state16, ap_CS_fsm_state18, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state7, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_645_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln25_fu_693_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((grp_conv_1_fu_610_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_max_pool_1_fu_621_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_conv_2_fu_598_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_max_pool_2_fu_629_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_flat_fu_637_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_dense_1_fu_526_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((grp_dense_2_fu_368_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_dense_out_fu_586_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln27_fu_714_p2 <= std_logic_vector(unsigned(sub_ln27_reg_1542) + unsigned(zext_ln27_3_fu_710_p1));
    add_ln28_fu_719_p2 <= std_logic_vector(unsigned(ix_in_1_reg_347) + unsigned(ap_const_lv10_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(grp_dense_out_fu_586_ap_done, ap_CS_fsm_state18)
    begin
        if (((grp_dense_out_fu_586_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dense_out_fu_586_ap_done, ap_CS_fsm_state18)
    begin
        if (((grp_dense_out_fu_586_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cnn_input_Addr_A <= std_logic_vector(shift_left(unsigned(cnn_input_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    cnn_input_Addr_A_orig <= zext_ln27_1_fu_705_p1(32 - 1 downto 0);
    cnn_input_Clk_A <= ap_clk;
    cnn_input_Din_A <= ap_const_lv32_0;

    cnn_input_EN_A_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cnn_input_EN_A <= ap_const_logic_1;
        else 
            cnn_input_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    cnn_input_Rst_A <= ap_rst_n_inv;
    cnn_input_WEN_A <= ap_const_lv4_0;

    conv_1_input_address0_assign_proc : process(grp_conv_1_fu_610_input_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state5, sext_ln27_fu_725_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_address0 <= sext_ln27_fu_725_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_input_address0 <= grp_conv_1_fu_610_input_r_address0;
        else 
            conv_1_input_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_1_input_ce0_assign_proc : process(grp_conv_1_fu_610_input_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_input_ce0 <= grp_conv_1_fu_610_input_r_ce0;
        else 
            conv_1_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_we0 <= ap_const_logic_1;
        else 
            conv_1_input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_address0_assign_proc : process(grp_conv_1_fu_610_conv_out_address0, grp_max_pool_1_fu_621_conv_1_out_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_address0 <= grp_max_pool_1_fu_621_conv_1_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_address0 <= grp_conv_1_fu_610_conv_out_address0;
        else 
            conv_1_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_ce0_assign_proc : process(grp_conv_1_fu_610_conv_out_ce0, grp_max_pool_1_fu_621_conv_1_out_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_ce0 <= grp_max_pool_1_fu_621_conv_1_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_ce0 <= grp_conv_1_fu_610_conv_out_ce0;
        else 
            conv_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_we0_assign_proc : process(grp_conv_1_fu_610_conv_out_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_we0 <= grp_conv_1_fu_610_conv_out_we0;
        else 
            conv_1_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_address0_assign_proc : process(grp_conv_2_fu_598_conv_out_address0, grp_max_pool_2_fu_629_conv_2_out_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_2_out_address0 <= grp_max_pool_2_fu_629_conv_2_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_address0 <= grp_conv_2_fu_598_conv_out_address0;
        else 
            conv_2_out_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_ce0_assign_proc : process(grp_conv_2_fu_598_conv_out_ce0, grp_max_pool_2_fu_629_conv_2_out_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_2_out_ce0 <= grp_max_pool_2_fu_629_conv_2_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_ce0 <= grp_conv_2_fu_598_conv_out_ce0;
        else 
            conv_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_we0_assign_proc : process(grp_conv_2_fu_598_conv_out_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_we0 <= grp_conv_2_fu_598_conv_out_we0;
        else 
            conv_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_address0_assign_proc : process(grp_dense_2_fu_368_dense_2_out_address0, grp_dense_out_fu_586_dense_2_out_address0, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_out_address0 <= grp_dense_out_fu_586_dense_2_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_2_out_address0 <= grp_dense_2_fu_368_dense_2_out_address0;
        else 
            dense_2_out_address0 <= "XXXXX";
        end if; 
    end process;


    dense_2_out_ce0_assign_proc : process(grp_dense_2_fu_368_dense_2_out_ce0, grp_dense_out_fu_586_dense_2_out_ce0, ap_CS_fsm_state16, ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_out_ce0 <= grp_dense_out_fu_586_dense_2_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_2_out_ce0 <= grp_dense_2_fu_368_dense_2_out_ce0;
        else 
            dense_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_we0_assign_proc : process(grp_dense_2_fu_368_dense_2_out_we0, ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_2_out_we0 <= grp_dense_2_fu_368_dense_2_out_we0;
        else 
            dense_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_526_flat_array_address0, grp_flat_fu_637_flat_array_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_address0 <= grp_flat_fu_637_flat_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_address0 <= grp_dense_1_fu_526_flat_array_address0;
        else 
            flat_array_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    flat_array_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_526_flat_array_ce0, grp_flat_fu_637_flat_array_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_ce0 <= grp_flat_fu_637_flat_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_ce0 <= grp_dense_1_fu_526_flat_array_ce0;
        else 
            flat_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_we0_assign_proc : process(grp_flat_fu_637_flat_array_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_we0 <= grp_flat_fu_637_flat_array_we0;
        else 
            flat_array_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv_1_fu_610_ap_start <= grp_conv_1_fu_610_ap_start_reg;
    grp_conv_2_fu_598_ap_start <= grp_conv_2_fu_598_ap_start_reg;
    grp_dense_1_fu_526_ap_start <= grp_dense_1_fu_526_ap_start_reg;
    grp_dense_2_fu_368_ap_start <= grp_dense_2_fu_368_ap_start_reg;
    grp_dense_out_fu_586_ap_start <= grp_dense_out_fu_586_ap_start_reg;
    grp_flat_fu_637_ap_start <= grp_flat_fu_637_ap_start_reg;
    grp_max_pool_1_fu_621_ap_start <= grp_max_pool_1_fu_621_ap_start_reg;
    grp_max_pool_2_fu_629_ap_start <= grp_max_pool_2_fu_629_ap_start_reg;
    i_fu_651_p2 <= std_logic_vector(unsigned(i_0_reg_336) + unsigned(ap_const_lv5_1));
    icmp_ln23_fu_645_p2 <= "1" when (i_0_reg_336 = ap_const_lv5_1C) else "0";
    icmp_ln25_fu_693_p2 <= "1" when (j_0_reg_357 = ap_const_lv5_1C) else "0";
    ix_in_fu_657_p2 <= std_logic_vector(unsigned(ix_in_0_reg_324) + unsigned(ap_const_lv10_1C));
    j_fu_699_p2 <= std_logic_vector(unsigned(j_0_reg_357) + unsigned(ap_const_lv5_1));

    max_pool_1_out_address0_assign_proc : process(grp_conv_2_fu_598_max_pool_1_out_address0, grp_max_pool_1_fu_621_max_pool_out_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_address0 <= grp_max_pool_1_fu_621_max_pool_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_address0 <= grp_conv_2_fu_598_max_pool_1_out_address0;
        else 
            max_pool_1_out_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_ce0_assign_proc : process(grp_conv_2_fu_598_max_pool_1_out_ce0, grp_max_pool_1_fu_621_max_pool_out_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_ce0 <= grp_max_pool_1_fu_621_max_pool_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_ce0 <= grp_conv_2_fu_598_max_pool_1_out_ce0;
        else 
            max_pool_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_we0_assign_proc : process(grp_max_pool_1_fu_621_max_pool_out_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_we0 <= grp_max_pool_1_fu_621_max_pool_out_we0;
        else 
            max_pool_1_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_address0_assign_proc : process(grp_max_pool_2_fu_629_max_pool_out_address0, grp_flat_fu_637_max_pool_2_out_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            max_pool_2_out_address0 <= grp_flat_fu_637_max_pool_2_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_address0 <= grp_max_pool_2_fu_629_max_pool_out_address0;
        else 
            max_pool_2_out_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_ce0_assign_proc : process(grp_max_pool_2_fu_629_max_pool_out_ce0, grp_flat_fu_637_max_pool_2_out_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            max_pool_2_out_ce0 <= grp_flat_fu_637_max_pool_2_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_ce0 <= grp_max_pool_2_fu_629_max_pool_out_ce0;
        else 
            max_pool_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_we0_assign_proc : process(grp_max_pool_2_fu_629_max_pool_out_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_we0 <= grp_max_pool_2_fu_629_max_pool_out_we0;
        else 
            max_pool_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prediction_Addr_A <= grp_dense_out_fu_586_prediction_Addr_A;
    prediction_Clk_A <= ap_clk;
    prediction_Din_A <= grp_dense_out_fu_586_prediction_Din_A;
    prediction_EN_A <= grp_dense_out_fu_586_prediction_EN_A;
    prediction_Rst_A <= ap_rst_n_inv;
    prediction_WEN_A <= grp_dense_out_fu_586_prediction_WEN_A;
        sext_ln27_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_reg_1560),64));

    sub_ln27_fu_687_p2 <= std_logic_vector(unsigned(zext_ln27_fu_671_p1) - unsigned(zext_ln27_2_fu_683_p1));
    tmp_fu_663_p3 <= (i_0_reg_336 & ap_const_lv5_0);
    tmp_s_fu_675_p3 <= (i_0_reg_336 & ap_const_lv2_0);
    zext_ln27_1_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ix_in_1_reg_347),64));
    zext_ln27_2_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_675_p3),11));
    zext_ln27_3_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_357),11));
    zext_ln27_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_663_p3),11));
end behav;
