// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.393000,HLS_SYN_LAT=1273117,HLS_SYN_TPT=none,HLS_SYN_MEM=87,HLS_SYN_DSP=281,HLS_SYN_FF=32430,HLS_SYN_LUT=51694,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] conv_1_out_address0;
reg    conv_1_out_ce0;
reg    conv_1_out_we0;
wire   [31:0] conv_1_out_q0;
reg   [9:0] max_pool_1_out_address0;
reg    max_pool_1_out_ce0;
reg    max_pool_1_out_we0;
wire   [31:0] max_pool_1_out_q0;
reg   [10:0] conv_2_out_address0;
reg    conv_2_out_ce0;
reg    conv_2_out_we0;
wire   [31:0] conv_2_out_q0;
reg   [8:0] max_pool_2_out_address0;
reg    max_pool_2_out_ce0;
reg    max_pool_2_out_we0;
wire   [31:0] max_pool_2_out_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
reg   [31:0] dense_1_out_0_0;
reg   [31:0] dense_1_out_0_1;
reg   [31:0] dense_1_out_1_0;
reg   [31:0] dense_1_out_1_1;
reg   [31:0] dense_1_out_2_0;
reg   [31:0] dense_1_out_2_1;
reg   [31:0] dense_1_out_3_0;
reg   [31:0] dense_1_out_3_1;
reg   [31:0] dense_1_out_4_0;
reg   [31:0] dense_1_out_4_1;
reg   [31:0] dense_1_out_5_0;
reg   [31:0] dense_1_out_5_1;
reg   [31:0] dense_1_out_6_0;
reg   [31:0] dense_1_out_6_1;
reg   [31:0] dense_1_out_7_0;
reg   [31:0] dense_1_out_7_1;
reg   [31:0] dense_1_out_8_0;
reg   [31:0] dense_1_out_8_1;
reg   [31:0] dense_1_out_9_0;
reg   [31:0] dense_1_out_9_1;
reg   [31:0] dense_1_out_10_0;
reg   [31:0] dense_1_out_10_1;
reg   [31:0] dense_1_out_11_0;
reg   [31:0] dense_1_out_11_1;
reg   [31:0] dense_1_out_12_0;
reg   [31:0] dense_1_out_12_1;
reg   [31:0] dense_1_out_13_0;
reg   [31:0] dense_1_out_13_1;
reg   [31:0] dense_1_out_14_0;
reg   [31:0] dense_1_out_14_1;
reg   [31:0] dense_1_out_15_0;
reg   [31:0] dense_1_out_15_1;
reg   [31:0] dense_1_out_16_0;
reg   [31:0] dense_1_out_16_1;
reg   [31:0] dense_1_out_17_0;
reg   [31:0] dense_1_out_17_1;
reg   [31:0] dense_1_out_18_0;
reg   [31:0] dense_1_out_18_1;
reg   [31:0] dense_1_out_19_0;
reg   [31:0] dense_1_out_19_1;
reg   [31:0] dense_1_out_20_0;
reg   [31:0] dense_1_out_20_1;
reg   [31:0] dense_1_out_21_0;
reg   [31:0] dense_1_out_21_1;
reg   [31:0] dense_1_out_22_0;
reg   [31:0] dense_1_out_22_1;
reg   [31:0] dense_1_out_23_0;
reg   [31:0] dense_1_out_23_1;
reg   [31:0] dense_1_out_24_0;
reg   [31:0] dense_1_out_24_1;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_q0;
wire   [4:0] i_fu_651_p2;
reg   [4:0] i_reg_1532;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_657_p2;
reg   [9:0] ix_in_reg_1537;
wire   [0:0] icmp_ln23_fu_645_p2;
wire   [10:0] sub_ln27_fu_687_p2;
reg   [10:0] sub_ln27_reg_1542;
wire   [4:0] j_fu_699_p2;
reg   [4:0] j_reg_1550;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_693_p2;
wire   [10:0] add_ln27_fu_714_p2;
reg   [10:0] add_ln27_reg_1560;
wire   [9:0] add_ln28_fu_719_p2;
reg   [9:0] add_ln28_reg_1565;
wire    ap_CS_fsm_state14;
reg   [31:0] dense_1_out_0_0_loc_reg_1820;
wire    ap_CS_fsm_state15;
wire    grp_dense_1_fu_526_ap_ready;
wire    grp_dense_1_fu_526_ap_done;
reg   [31:0] dense_1_out_0_1_loc_reg_1825;
reg   [31:0] dense_1_out_1_0_loc_reg_1830;
reg   [31:0] dense_1_out_1_1_loc_reg_1835;
reg   [31:0] dense_1_out_2_0_loc_reg_1840;
reg   [31:0] dense_1_out_2_1_loc_reg_1845;
reg   [31:0] dense_1_out_3_0_loc_reg_1850;
reg   [31:0] dense_1_out_3_1_loc_reg_1855;
reg   [31:0] dense_1_out_4_0_loc_reg_1860;
reg   [31:0] dense_1_out_4_1_loc_reg_1865;
reg   [31:0] dense_1_out_5_0_loc_reg_1870;
reg   [31:0] dense_1_out_5_1_loc_reg_1875;
reg   [31:0] dense_1_out_6_0_loc_reg_1880;
reg   [31:0] dense_1_out_6_1_loc_reg_1885;
reg   [31:0] dense_1_out_7_0_loc_reg_1890;
reg   [31:0] dense_1_out_7_1_loc_reg_1895;
reg   [31:0] dense_1_out_8_0_loc_reg_1900;
reg   [31:0] dense_1_out_8_1_loc_reg_1905;
reg   [31:0] dense_1_out_9_0_loc_reg_1910;
reg   [31:0] dense_1_out_9_1_loc_reg_1915;
reg   [31:0] dense_1_out_10_0_loc_reg_1920;
reg   [31:0] dense_1_out_10_1_loc_reg_1925;
reg   [31:0] dense_1_out_11_0_loc_reg_1930;
reg   [31:0] dense_1_out_11_1_loc_reg_1935;
reg   [31:0] dense_1_out_12_0_loc_reg_1940;
reg   [31:0] dense_1_out_12_1_loc_reg_1945;
reg   [31:0] dense_1_out_13_0_loc_reg_1950;
reg   [31:0] dense_1_out_13_1_loc_reg_1955;
reg   [31:0] dense_1_out_14_0_loc_reg_1960;
reg   [31:0] dense_1_out_14_1_loc_reg_1965;
reg   [31:0] dense_1_out_15_0_loc_reg_1970;
reg   [31:0] dense_1_out_15_1_loc_reg_1975;
reg   [31:0] dense_1_out_16_0_loc_reg_1980;
reg   [31:0] dense_1_out_16_1_loc_reg_1985;
reg   [31:0] dense_1_out_17_0_loc_reg_1990;
reg   [31:0] dense_1_out_17_1_loc_reg_1995;
reg   [31:0] dense_1_out_18_0_loc_reg_2000;
reg   [31:0] dense_1_out_18_1_loc_reg_2005;
reg   [31:0] dense_1_out_19_0_loc_reg_2010;
reg   [31:0] dense_1_out_19_1_loc_reg_2015;
reg   [31:0] dense_1_out_20_0_loc_reg_2020;
reg   [31:0] dense_1_out_20_1_loc_reg_2025;
reg   [31:0] dense_1_out_21_0_loc_reg_2030;
reg   [31:0] dense_1_out_21_1_loc_reg_2035;
reg   [31:0] dense_1_out_22_0_loc_reg_2040;
reg   [31:0] dense_1_out_22_1_loc_reg_2045;
reg   [31:0] dense_1_out_23_0_loc_reg_2050;
reg   [31:0] dense_1_out_23_1_loc_reg_2055;
reg   [31:0] dense_1_out_24_0_loc_reg_2060;
reg   [31:0] dense_1_out_24_1_loc_reg_2065;
reg   [9:0] conv_1_input_address0;
reg    conv_1_input_ce0;
reg    conv_1_input_we0;
wire   [31:0] conv_1_input_q0;
wire    grp_dense_2_fu_368_ap_start;
wire    grp_dense_2_fu_368_ap_done;
wire    grp_dense_2_fu_368_ap_idle;
wire    grp_dense_2_fu_368_ap_ready;
wire   [4:0] grp_dense_2_fu_368_dense_2_out_address0;
wire    grp_dense_2_fu_368_dense_2_out_ce0;
wire    grp_dense_2_fu_368_dense_2_out_we0;
wire   [31:0] grp_dense_2_fu_368_dense_2_out_d0;
wire    grp_dense_1_fu_526_ap_start;
wire    grp_dense_1_fu_526_ap_idle;
wire   [8:0] grp_dense_1_fu_526_flat_array_address0;
wire    grp_dense_1_fu_526_flat_array_ce0;
wire   [31:0] grp_dense_1_fu_526_ap_return_0;
wire   [31:0] grp_dense_1_fu_526_ap_return_1;
wire   [31:0] grp_dense_1_fu_526_ap_return_2;
wire   [31:0] grp_dense_1_fu_526_ap_return_3;
wire   [31:0] grp_dense_1_fu_526_ap_return_4;
wire   [31:0] grp_dense_1_fu_526_ap_return_5;
wire   [31:0] grp_dense_1_fu_526_ap_return_6;
wire   [31:0] grp_dense_1_fu_526_ap_return_7;
wire   [31:0] grp_dense_1_fu_526_ap_return_8;
wire   [31:0] grp_dense_1_fu_526_ap_return_9;
wire   [31:0] grp_dense_1_fu_526_ap_return_10;
wire   [31:0] grp_dense_1_fu_526_ap_return_11;
wire   [31:0] grp_dense_1_fu_526_ap_return_12;
wire   [31:0] grp_dense_1_fu_526_ap_return_13;
wire   [31:0] grp_dense_1_fu_526_ap_return_14;
wire   [31:0] grp_dense_1_fu_526_ap_return_15;
wire   [31:0] grp_dense_1_fu_526_ap_return_16;
wire   [31:0] grp_dense_1_fu_526_ap_return_17;
wire   [31:0] grp_dense_1_fu_526_ap_return_18;
wire   [31:0] grp_dense_1_fu_526_ap_return_19;
wire   [31:0] grp_dense_1_fu_526_ap_return_20;
wire   [31:0] grp_dense_1_fu_526_ap_return_21;
wire   [31:0] grp_dense_1_fu_526_ap_return_22;
wire   [31:0] grp_dense_1_fu_526_ap_return_23;
wire   [31:0] grp_dense_1_fu_526_ap_return_24;
wire   [31:0] grp_dense_1_fu_526_ap_return_25;
wire   [31:0] grp_dense_1_fu_526_ap_return_26;
wire   [31:0] grp_dense_1_fu_526_ap_return_27;
wire   [31:0] grp_dense_1_fu_526_ap_return_28;
wire   [31:0] grp_dense_1_fu_526_ap_return_29;
wire   [31:0] grp_dense_1_fu_526_ap_return_30;
wire   [31:0] grp_dense_1_fu_526_ap_return_31;
wire   [31:0] grp_dense_1_fu_526_ap_return_32;
wire   [31:0] grp_dense_1_fu_526_ap_return_33;
wire   [31:0] grp_dense_1_fu_526_ap_return_34;
wire   [31:0] grp_dense_1_fu_526_ap_return_35;
wire   [31:0] grp_dense_1_fu_526_ap_return_36;
wire   [31:0] grp_dense_1_fu_526_ap_return_37;
wire   [31:0] grp_dense_1_fu_526_ap_return_38;
wire   [31:0] grp_dense_1_fu_526_ap_return_39;
wire   [31:0] grp_dense_1_fu_526_ap_return_40;
wire   [31:0] grp_dense_1_fu_526_ap_return_41;
wire   [31:0] grp_dense_1_fu_526_ap_return_42;
wire   [31:0] grp_dense_1_fu_526_ap_return_43;
wire   [31:0] grp_dense_1_fu_526_ap_return_44;
wire   [31:0] grp_dense_1_fu_526_ap_return_45;
wire   [31:0] grp_dense_1_fu_526_ap_return_46;
wire   [31:0] grp_dense_1_fu_526_ap_return_47;
wire   [31:0] grp_dense_1_fu_526_ap_return_48;
wire   [31:0] grp_dense_1_fu_526_ap_return_49;
wire    grp_dense_out_fu_586_ap_start;
wire    grp_dense_out_fu_586_ap_done;
wire    grp_dense_out_fu_586_ap_idle;
wire    grp_dense_out_fu_586_ap_ready;
wire   [31:0] grp_dense_out_fu_586_prediction_Addr_A;
wire    grp_dense_out_fu_586_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_586_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_586_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_586_dense_2_out_address0;
wire    grp_dense_out_fu_586_dense_2_out_ce0;
wire    grp_conv_2_fu_598_ap_start;
wire    grp_conv_2_fu_598_ap_done;
wire    grp_conv_2_fu_598_ap_idle;
wire    grp_conv_2_fu_598_ap_ready;
wire   [10:0] grp_conv_2_fu_598_conv_out_address0;
wire    grp_conv_2_fu_598_conv_out_ce0;
wire    grp_conv_2_fu_598_conv_out_we0;
wire   [31:0] grp_conv_2_fu_598_conv_out_d0;
wire   [9:0] grp_conv_2_fu_598_max_pool_1_out_address0;
wire    grp_conv_2_fu_598_max_pool_1_out_ce0;
wire    grp_conv_1_fu_610_ap_start;
wire    grp_conv_1_fu_610_ap_done;
wire    grp_conv_1_fu_610_ap_idle;
wire    grp_conv_1_fu_610_ap_ready;
wire   [9:0] grp_conv_1_fu_610_input_r_address0;
wire    grp_conv_1_fu_610_input_r_ce0;
wire   [11:0] grp_conv_1_fu_610_conv_out_address0;
wire    grp_conv_1_fu_610_conv_out_ce0;
wire    grp_conv_1_fu_610_conv_out_we0;
wire   [31:0] grp_conv_1_fu_610_conv_out_d0;
wire    grp_max_pool_1_fu_621_ap_start;
wire    grp_max_pool_1_fu_621_ap_done;
wire    grp_max_pool_1_fu_621_ap_idle;
wire    grp_max_pool_1_fu_621_ap_ready;
wire   [9:0] grp_max_pool_1_fu_621_max_pool_out_address0;
wire    grp_max_pool_1_fu_621_max_pool_out_ce0;
wire    grp_max_pool_1_fu_621_max_pool_out_we0;
wire   [31:0] grp_max_pool_1_fu_621_max_pool_out_d0;
wire   [11:0] grp_max_pool_1_fu_621_conv_1_out_address0;
wire    grp_max_pool_1_fu_621_conv_1_out_ce0;
wire    grp_max_pool_2_fu_629_ap_start;
wire    grp_max_pool_2_fu_629_ap_done;
wire    grp_max_pool_2_fu_629_ap_idle;
wire    grp_max_pool_2_fu_629_ap_ready;
wire   [8:0] grp_max_pool_2_fu_629_max_pool_out_address0;
wire    grp_max_pool_2_fu_629_max_pool_out_ce0;
wire    grp_max_pool_2_fu_629_max_pool_out_we0;
wire   [31:0] grp_max_pool_2_fu_629_max_pool_out_d0;
wire   [10:0] grp_max_pool_2_fu_629_conv_2_out_address0;
wire    grp_max_pool_2_fu_629_conv_2_out_ce0;
wire    grp_flat_fu_637_ap_start;
wire    grp_flat_fu_637_ap_done;
wire    grp_flat_fu_637_ap_idle;
wire    grp_flat_fu_637_ap_ready;
wire   [8:0] grp_flat_fu_637_max_pool_2_out_address0;
wire    grp_flat_fu_637_max_pool_2_out_ce0;
wire   [8:0] grp_flat_fu_637_flat_array_address0;
wire    grp_flat_fu_637_flat_array_ce0;
wire    grp_flat_fu_637_flat_array_we0;
wire   [31:0] grp_flat_fu_637_flat_array_d0;
reg   [9:0] ix_in_0_reg_324;
reg   [4:0] i_0_reg_336;
reg   [9:0] ix_in_1_reg_347;
wire    ap_CS_fsm_state4;
reg   [4:0] j_0_reg_357;
reg    grp_dense_2_fu_368_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    grp_dense_1_fu_526_ap_start_reg;
reg    grp_dense_out_fu_586_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_conv_2_fu_598_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_conv_1_fu_610_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_max_pool_1_fu_621_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_max_pool_2_fu_629_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_flat_fu_637_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln27_1_fu_705_p1;
wire  signed [63:0] sext_ln27_fu_725_p1;
wire   [31:0] cnn_input_Addr_A_orig;
wire   [9:0] tmp_fu_663_p3;
wire   [6:0] tmp_s_fu_675_p3;
wire   [10:0] zext_ln27_fu_671_p1;
wire   [10:0] zext_ln27_2_fu_683_p1;
wire   [10:0] zext_ln27_3_fu_710_p1;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 dense_1_out_0_0 = 32'd0;
#0 dense_1_out_0_1 = 32'd0;
#0 dense_1_out_1_0 = 32'd0;
#0 dense_1_out_1_1 = 32'd0;
#0 dense_1_out_2_0 = 32'd0;
#0 dense_1_out_2_1 = 32'd0;
#0 dense_1_out_3_0 = 32'd0;
#0 dense_1_out_3_1 = 32'd0;
#0 dense_1_out_4_0 = 32'd0;
#0 dense_1_out_4_1 = 32'd0;
#0 dense_1_out_5_0 = 32'd0;
#0 dense_1_out_5_1 = 32'd0;
#0 dense_1_out_6_0 = 32'd0;
#0 dense_1_out_6_1 = 32'd0;
#0 dense_1_out_7_0 = 32'd0;
#0 dense_1_out_7_1 = 32'd0;
#0 dense_1_out_8_0 = 32'd0;
#0 dense_1_out_8_1 = 32'd0;
#0 dense_1_out_9_0 = 32'd0;
#0 dense_1_out_9_1 = 32'd0;
#0 dense_1_out_10_0 = 32'd0;
#0 dense_1_out_10_1 = 32'd0;
#0 dense_1_out_11_0 = 32'd0;
#0 dense_1_out_11_1 = 32'd0;
#0 dense_1_out_12_0 = 32'd0;
#0 dense_1_out_12_1 = 32'd0;
#0 dense_1_out_13_0 = 32'd0;
#0 dense_1_out_13_1 = 32'd0;
#0 dense_1_out_14_0 = 32'd0;
#0 dense_1_out_14_1 = 32'd0;
#0 dense_1_out_15_0 = 32'd0;
#0 dense_1_out_15_1 = 32'd0;
#0 dense_1_out_16_0 = 32'd0;
#0 dense_1_out_16_1 = 32'd0;
#0 dense_1_out_17_0 = 32'd0;
#0 dense_1_out_17_1 = 32'd0;
#0 dense_1_out_18_0 = 32'd0;
#0 dense_1_out_18_1 = 32'd0;
#0 dense_1_out_19_0 = 32'd0;
#0 dense_1_out_19_1 = 32'd0;
#0 dense_1_out_20_0 = 32'd0;
#0 dense_1_out_20_1 = 32'd0;
#0 dense_1_out_21_0 = 32'd0;
#0 dense_1_out_21_1 = 32'd0;
#0 dense_1_out_22_0 = 32'd0;
#0 dense_1_out_22_1 = 32'd0;
#0 dense_1_out_23_0 = 32'd0;
#0 dense_1_out_23_1 = 32'd0;
#0 dense_1_out_24_0 = 32'd0;
#0 dense_1_out_24_1 = 32'd0;
#0 grp_dense_2_fu_368_ap_start_reg = 1'b0;
#0 grp_dense_1_fu_526_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_586_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_598_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_610_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_621_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_629_ap_start_reg = 1'b0;
#0 grp_flat_fu_637_ap_start_reg = 1'b0;
end

cnn_conv_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_address0),
    .ce0(conv_1_out_ce0),
    .we0(conv_1_out_we0),
    .d0(grp_conv_1_fu_610_conv_out_d0),
    .q0(conv_1_out_q0)
);

cnn_max_pool_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_address0),
    .ce0(max_pool_1_out_ce0),
    .we0(max_pool_1_out_we0),
    .d0(grp_max_pool_1_fu_621_max_pool_out_d0),
    .q0(max_pool_1_out_q0)
);

cnn_conv_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_address0),
    .ce0(conv_2_out_ce0),
    .we0(conv_2_out_we0),
    .d0(grp_conv_2_fu_598_conv_out_d0),
    .q0(conv_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_address0),
    .ce0(max_pool_2_out_ce0),
    .we0(max_pool_2_out_we0),
    .d0(grp_max_pool_2_fu_629_max_pool_out_d0),
    .q0(max_pool_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_637_flat_array_d0),
    .q0(flat_array_q0)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(grp_dense_2_fu_368_dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_address0),
    .ce0(conv_1_input_ce0),
    .we0(conv_1_input_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_q0)
);

dense_2 grp_dense_2_fu_368(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_2_fu_368_ap_start),
    .ap_done(grp_dense_2_fu_368_ap_done),
    .ap_idle(grp_dense_2_fu_368_ap_idle),
    .ap_ready(grp_dense_2_fu_368_ap_ready),
    .dense_1_out_0_0_re(dense_1_out_0_0_loc_reg_1820),
    .dense_1_out_0_1_re(dense_1_out_0_1_loc_reg_1825),
    .dense_1_out_1_0_re(dense_1_out_1_0_loc_reg_1830),
    .dense_1_out_1_1_re(dense_1_out_1_1_loc_reg_1835),
    .dense_1_out_2_0_re(dense_1_out_2_0_loc_reg_1840),
    .dense_1_out_2_1_re(dense_1_out_2_1_loc_reg_1845),
    .dense_1_out_3_0_re(dense_1_out_3_0_loc_reg_1850),
    .dense_1_out_3_1_re(dense_1_out_3_1_loc_reg_1855),
    .dense_1_out_4_0_re(dense_1_out_4_0_loc_reg_1860),
    .dense_1_out_4_1_re(dense_1_out_4_1_loc_reg_1865),
    .dense_1_out_5_0_re(dense_1_out_5_0_loc_reg_1870),
    .dense_1_out_5_1_re(dense_1_out_5_1_loc_reg_1875),
    .dense_1_out_6_0_re(dense_1_out_6_0_loc_reg_1880),
    .dense_1_out_6_1_re(dense_1_out_6_1_loc_reg_1885),
    .dense_1_out_7_0_re(dense_1_out_7_0_loc_reg_1890),
    .dense_1_out_7_1_re(dense_1_out_7_1_loc_reg_1895),
    .dense_1_out_8_0_re(dense_1_out_8_0_loc_reg_1900),
    .dense_1_out_8_1_re(dense_1_out_8_1_loc_reg_1905),
    .dense_1_out_9_0_re(dense_1_out_9_0_loc_reg_1910),
    .dense_1_out_9_1_re(dense_1_out_9_1_loc_reg_1915),
    .dense_1_out_10_0_r(dense_1_out_10_0_loc_reg_1920),
    .dense_1_out_10_1_r(dense_1_out_10_1_loc_reg_1925),
    .dense_1_out_11_0_r(dense_1_out_11_0_loc_reg_1930),
    .dense_1_out_11_1_r(dense_1_out_11_1_loc_reg_1935),
    .dense_1_out_12_0_r(dense_1_out_12_0_loc_reg_1940),
    .dense_1_out_12_1_r(dense_1_out_12_1_loc_reg_1945),
    .dense_1_out_13_0_r(dense_1_out_13_0_loc_reg_1950),
    .dense_1_out_13_1_r(dense_1_out_13_1_loc_reg_1955),
    .dense_1_out_14_0_r(dense_1_out_14_0_loc_reg_1960),
    .dense_1_out_14_1_r(dense_1_out_14_1_loc_reg_1965),
    .dense_1_out_15_0_r(dense_1_out_15_0_loc_reg_1970),
    .dense_1_out_15_1_r(dense_1_out_15_1_loc_reg_1975),
    .dense_1_out_16_0_r(dense_1_out_16_0_loc_reg_1980),
    .dense_1_out_16_1_r(dense_1_out_16_1_loc_reg_1985),
    .dense_1_out_17_0_r(dense_1_out_17_0_loc_reg_1990),
    .dense_1_out_17_1_r(dense_1_out_17_1_loc_reg_1995),
    .dense_1_out_18_0_r(dense_1_out_18_0_loc_reg_2000),
    .dense_1_out_18_1_r(dense_1_out_18_1_loc_reg_2005),
    .dense_1_out_19_0_r(dense_1_out_19_0_loc_reg_2010),
    .dense_1_out_19_1_r(dense_1_out_19_1_loc_reg_2015),
    .dense_1_out_20_0_r(dense_1_out_20_0_loc_reg_2020),
    .dense_1_out_20_1_r(dense_1_out_20_1_loc_reg_2025),
    .dense_1_out_21_0_r(dense_1_out_21_0_loc_reg_2030),
    .dense_1_out_21_1_r(dense_1_out_21_1_loc_reg_2035),
    .dense_1_out_22_0_r(dense_1_out_22_0_loc_reg_2040),
    .dense_1_out_22_1_r(dense_1_out_22_1_loc_reg_2045),
    .dense_1_out_23_0_r(dense_1_out_23_0_loc_reg_2050),
    .dense_1_out_23_1_r(dense_1_out_23_1_loc_reg_2055),
    .dense_1_out_24_0_r(dense_1_out_24_0_loc_reg_2060),
    .dense_1_out_24_1_r(dense_1_out_24_1_loc_reg_2065),
    .dense_2_out_address0(grp_dense_2_fu_368_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_2_fu_368_dense_2_out_ce0),
    .dense_2_out_we0(grp_dense_2_fu_368_dense_2_out_we0),
    .dense_2_out_d0(grp_dense_2_fu_368_dense_2_out_d0)
);

dense_1 grp_dense_1_fu_526(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_1_fu_526_ap_start),
    .ap_done(grp_dense_1_fu_526_ap_done),
    .ap_idle(grp_dense_1_fu_526_ap_idle),
    .ap_ready(grp_dense_1_fu_526_ap_ready),
    .flat_array_address0(grp_dense_1_fu_526_flat_array_address0),
    .flat_array_ce0(grp_dense_1_fu_526_flat_array_ce0),
    .flat_array_q0(flat_array_q0),
    .dense_1_out_0_0_re(dense_1_out_0_0),
    .dense_1_out_0_1_re(dense_1_out_0_1),
    .dense_1_out_1_0_re(dense_1_out_1_0),
    .dense_1_out_1_1_re(dense_1_out_1_1),
    .dense_1_out_2_0_re(dense_1_out_2_0),
    .dense_1_out_2_1_re(dense_1_out_2_1),
    .dense_1_out_3_0_re(dense_1_out_3_0),
    .dense_1_out_3_1_re(dense_1_out_3_1),
    .dense_1_out_4_0_re(dense_1_out_4_0),
    .dense_1_out_4_1_re(dense_1_out_4_1),
    .dense_1_out_5_0_re(dense_1_out_5_0),
    .dense_1_out_5_1_re(dense_1_out_5_1),
    .dense_1_out_6_0_re(dense_1_out_6_0),
    .dense_1_out_6_1_re(dense_1_out_6_1),
    .dense_1_out_7_0_re(dense_1_out_7_0),
    .dense_1_out_7_1_re(dense_1_out_7_1),
    .dense_1_out_8_0_re(dense_1_out_8_0),
    .dense_1_out_8_1_re(dense_1_out_8_1),
    .dense_1_out_9_0_re(dense_1_out_9_0),
    .dense_1_out_9_1_re(dense_1_out_9_1),
    .dense_1_out_10_0_r(dense_1_out_10_0),
    .dense_1_out_10_1_r(dense_1_out_10_1),
    .dense_1_out_11_0_r(dense_1_out_11_0),
    .dense_1_out_11_1_r(dense_1_out_11_1),
    .dense_1_out_12_0_r(dense_1_out_12_0),
    .dense_1_out_12_1_r(dense_1_out_12_1),
    .dense_1_out_13_0_r(dense_1_out_13_0),
    .dense_1_out_13_1_r(dense_1_out_13_1),
    .dense_1_out_14_0_r(dense_1_out_14_0),
    .dense_1_out_14_1_r(dense_1_out_14_1),
    .dense_1_out_15_0_r(dense_1_out_15_0),
    .dense_1_out_15_1_r(dense_1_out_15_1),
    .dense_1_out_16_0_r(dense_1_out_16_0),
    .dense_1_out_16_1_r(dense_1_out_16_1),
    .dense_1_out_17_0_r(dense_1_out_17_0),
    .dense_1_out_17_1_r(dense_1_out_17_1),
    .dense_1_out_18_0_r(dense_1_out_18_0),
    .dense_1_out_18_1_r(dense_1_out_18_1),
    .dense_1_out_19_0_r(dense_1_out_19_0),
    .dense_1_out_19_1_r(dense_1_out_19_1),
    .dense_1_out_20_0_r(dense_1_out_20_0),
    .dense_1_out_20_1_r(dense_1_out_20_1),
    .dense_1_out_21_0_r(dense_1_out_21_0),
    .dense_1_out_21_1_r(dense_1_out_21_1),
    .dense_1_out_22_0_r(dense_1_out_22_0),
    .dense_1_out_22_1_r(dense_1_out_22_1),
    .dense_1_out_23_0_r(dense_1_out_23_0),
    .dense_1_out_23_1_r(dense_1_out_23_1),
    .dense_1_out_24_0_r(dense_1_out_24_0),
    .dense_1_out_24_1_r(dense_1_out_24_1),
    .ap_return_0(grp_dense_1_fu_526_ap_return_0),
    .ap_return_1(grp_dense_1_fu_526_ap_return_1),
    .ap_return_2(grp_dense_1_fu_526_ap_return_2),
    .ap_return_3(grp_dense_1_fu_526_ap_return_3),
    .ap_return_4(grp_dense_1_fu_526_ap_return_4),
    .ap_return_5(grp_dense_1_fu_526_ap_return_5),
    .ap_return_6(grp_dense_1_fu_526_ap_return_6),
    .ap_return_7(grp_dense_1_fu_526_ap_return_7),
    .ap_return_8(grp_dense_1_fu_526_ap_return_8),
    .ap_return_9(grp_dense_1_fu_526_ap_return_9),
    .ap_return_10(grp_dense_1_fu_526_ap_return_10),
    .ap_return_11(grp_dense_1_fu_526_ap_return_11),
    .ap_return_12(grp_dense_1_fu_526_ap_return_12),
    .ap_return_13(grp_dense_1_fu_526_ap_return_13),
    .ap_return_14(grp_dense_1_fu_526_ap_return_14),
    .ap_return_15(grp_dense_1_fu_526_ap_return_15),
    .ap_return_16(grp_dense_1_fu_526_ap_return_16),
    .ap_return_17(grp_dense_1_fu_526_ap_return_17),
    .ap_return_18(grp_dense_1_fu_526_ap_return_18),
    .ap_return_19(grp_dense_1_fu_526_ap_return_19),
    .ap_return_20(grp_dense_1_fu_526_ap_return_20),
    .ap_return_21(grp_dense_1_fu_526_ap_return_21),
    .ap_return_22(grp_dense_1_fu_526_ap_return_22),
    .ap_return_23(grp_dense_1_fu_526_ap_return_23),
    .ap_return_24(grp_dense_1_fu_526_ap_return_24),
    .ap_return_25(grp_dense_1_fu_526_ap_return_25),
    .ap_return_26(grp_dense_1_fu_526_ap_return_26),
    .ap_return_27(grp_dense_1_fu_526_ap_return_27),
    .ap_return_28(grp_dense_1_fu_526_ap_return_28),
    .ap_return_29(grp_dense_1_fu_526_ap_return_29),
    .ap_return_30(grp_dense_1_fu_526_ap_return_30),
    .ap_return_31(grp_dense_1_fu_526_ap_return_31),
    .ap_return_32(grp_dense_1_fu_526_ap_return_32),
    .ap_return_33(grp_dense_1_fu_526_ap_return_33),
    .ap_return_34(grp_dense_1_fu_526_ap_return_34),
    .ap_return_35(grp_dense_1_fu_526_ap_return_35),
    .ap_return_36(grp_dense_1_fu_526_ap_return_36),
    .ap_return_37(grp_dense_1_fu_526_ap_return_37),
    .ap_return_38(grp_dense_1_fu_526_ap_return_38),
    .ap_return_39(grp_dense_1_fu_526_ap_return_39),
    .ap_return_40(grp_dense_1_fu_526_ap_return_40),
    .ap_return_41(grp_dense_1_fu_526_ap_return_41),
    .ap_return_42(grp_dense_1_fu_526_ap_return_42),
    .ap_return_43(grp_dense_1_fu_526_ap_return_43),
    .ap_return_44(grp_dense_1_fu_526_ap_return_44),
    .ap_return_45(grp_dense_1_fu_526_ap_return_45),
    .ap_return_46(grp_dense_1_fu_526_ap_return_46),
    .ap_return_47(grp_dense_1_fu_526_ap_return_47),
    .ap_return_48(grp_dense_1_fu_526_ap_return_48),
    .ap_return_49(grp_dense_1_fu_526_ap_return_49)
);

dense_out grp_dense_out_fu_586(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_586_ap_start),
    .ap_done(grp_dense_out_fu_586_ap_done),
    .ap_idle(grp_dense_out_fu_586_ap_idle),
    .ap_ready(grp_dense_out_fu_586_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_586_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_586_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_586_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_586_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_586_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_586_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

conv_2 grp_conv_2_fu_598(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_598_ap_start),
    .ap_done(grp_conv_2_fu_598_ap_done),
    .ap_idle(grp_conv_2_fu_598_ap_idle),
    .ap_ready(grp_conv_2_fu_598_ap_ready),
    .conv_out_address0(grp_conv_2_fu_598_conv_out_address0),
    .conv_out_ce0(grp_conv_2_fu_598_conv_out_ce0),
    .conv_out_we0(grp_conv_2_fu_598_conv_out_we0),
    .conv_out_d0(grp_conv_2_fu_598_conv_out_d0),
    .max_pool_1_out_address0(grp_conv_2_fu_598_max_pool_1_out_address0),
    .max_pool_1_out_ce0(grp_conv_2_fu_598_max_pool_1_out_ce0),
    .max_pool_1_out_q0(max_pool_1_out_q0)
);

conv_1 grp_conv_1_fu_610(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_610_ap_start),
    .ap_done(grp_conv_1_fu_610_ap_done),
    .ap_idle(grp_conv_1_fu_610_ap_idle),
    .ap_ready(grp_conv_1_fu_610_ap_ready),
    .input_r_address0(grp_conv_1_fu_610_input_r_address0),
    .input_r_ce0(grp_conv_1_fu_610_input_r_ce0),
    .input_r_q0(conv_1_input_q0),
    .conv_out_address0(grp_conv_1_fu_610_conv_out_address0),
    .conv_out_ce0(grp_conv_1_fu_610_conv_out_ce0),
    .conv_out_we0(grp_conv_1_fu_610_conv_out_we0),
    .conv_out_d0(grp_conv_1_fu_610_conv_out_d0)
);

max_pool_1 grp_max_pool_1_fu_621(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_621_ap_start),
    .ap_done(grp_max_pool_1_fu_621_ap_done),
    .ap_idle(grp_max_pool_1_fu_621_ap_idle),
    .ap_ready(grp_max_pool_1_fu_621_ap_ready),
    .max_pool_out_address0(grp_max_pool_1_fu_621_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_1_fu_621_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_1_fu_621_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_1_fu_621_max_pool_out_d0),
    .conv_1_out_address0(grp_max_pool_1_fu_621_conv_1_out_address0),
    .conv_1_out_ce0(grp_max_pool_1_fu_621_conv_1_out_ce0),
    .conv_1_out_q0(conv_1_out_q0)
);

max_pool_2 grp_max_pool_2_fu_629(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_629_ap_start),
    .ap_done(grp_max_pool_2_fu_629_ap_done),
    .ap_idle(grp_max_pool_2_fu_629_ap_idle),
    .ap_ready(grp_max_pool_2_fu_629_ap_ready),
    .max_pool_out_address0(grp_max_pool_2_fu_629_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_2_fu_629_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_2_fu_629_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_2_fu_629_max_pool_out_d0),
    .conv_2_out_address0(grp_max_pool_2_fu_629_conv_2_out_address0),
    .conv_2_out_ce0(grp_max_pool_2_fu_629_conv_2_out_ce0),
    .conv_2_out_q0(conv_2_out_q0)
);

flat grp_flat_fu_637(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_637_ap_start),
    .ap_done(grp_flat_fu_637_ap_done),
    .ap_idle(grp_flat_fu_637_ap_idle),
    .ap_ready(grp_flat_fu_637_ap_ready),
    .max_pool_2_out_address0(grp_flat_fu_637_max_pool_2_out_address0),
    .max_pool_2_out_ce0(grp_flat_fu_637_max_pool_2_out_ce0),
    .max_pool_2_out_q0(max_pool_2_out_q0),
    .flat_array_address0(grp_flat_fu_637_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_637_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_637_flat_array_we0),
    .flat_array_d0(grp_flat_fu_637_flat_array_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_610_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_645_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_1_fu_610_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_610_ap_ready == 1'b1)) begin
            grp_conv_1_fu_610_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_598_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_conv_2_fu_598_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_598_ap_ready == 1'b1)) begin
            grp_conv_2_fu_598_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_1_fu_526_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_dense_1_fu_526_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_526_ap_ready == 1'b1)) begin
            grp_dense_1_fu_526_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_2_fu_368_ap_start_reg <= 1'b0;
    end else begin
        if (((grp_dense_1_fu_526_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
            grp_dense_2_fu_368_ap_start_reg <= 1'b1;
        end else if ((grp_dense_2_fu_368_ap_ready == 1'b1)) begin
            grp_dense_2_fu_368_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_586_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_dense_out_fu_586_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_586_ap_ready == 1'b1)) begin
            grp_dense_out_fu_586_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_637_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_flat_fu_637_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_637_ap_ready == 1'b1)) begin
            grp_flat_fu_637_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_621_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_max_pool_1_fu_621_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_621_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_621_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_629_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pool_2_fu_629_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_629_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_629_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_336 <= i_reg_1532;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_336 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_324 <= ix_in_reg_1537;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_324 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ix_in_1_reg_347 <= add_ln28_reg_1565;
    end else if (((icmp_ln23_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_347 <= ix_in_0_reg_324;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_357 <= j_reg_1550;
    end else if (((icmp_ln23_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_357 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_693_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln27_reg_1560 <= add_ln27_fu_714_p2;
        add_ln28_reg_1565 <= add_ln28_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_dense_1_fu_526_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        dense_1_out_0_0 <= grp_dense_1_fu_526_ap_return_0;
        dense_1_out_0_0_loc_reg_1820 <= grp_dense_1_fu_526_ap_return_0;
        dense_1_out_0_1 <= grp_dense_1_fu_526_ap_return_1;
        dense_1_out_0_1_loc_reg_1825 <= grp_dense_1_fu_526_ap_return_1;
        dense_1_out_10_0 <= grp_dense_1_fu_526_ap_return_20;
        dense_1_out_10_0_loc_reg_1920 <= grp_dense_1_fu_526_ap_return_20;
        dense_1_out_10_1 <= grp_dense_1_fu_526_ap_return_21;
        dense_1_out_10_1_loc_reg_1925 <= grp_dense_1_fu_526_ap_return_21;
        dense_1_out_11_0 <= grp_dense_1_fu_526_ap_return_22;
        dense_1_out_11_0_loc_reg_1930 <= grp_dense_1_fu_526_ap_return_22;
        dense_1_out_11_1 <= grp_dense_1_fu_526_ap_return_23;
        dense_1_out_11_1_loc_reg_1935 <= grp_dense_1_fu_526_ap_return_23;
        dense_1_out_12_0 <= grp_dense_1_fu_526_ap_return_24;
        dense_1_out_12_0_loc_reg_1940 <= grp_dense_1_fu_526_ap_return_24;
        dense_1_out_12_1 <= grp_dense_1_fu_526_ap_return_25;
        dense_1_out_12_1_loc_reg_1945 <= grp_dense_1_fu_526_ap_return_25;
        dense_1_out_13_0 <= grp_dense_1_fu_526_ap_return_26;
        dense_1_out_13_0_loc_reg_1950 <= grp_dense_1_fu_526_ap_return_26;
        dense_1_out_13_1 <= grp_dense_1_fu_526_ap_return_27;
        dense_1_out_13_1_loc_reg_1955 <= grp_dense_1_fu_526_ap_return_27;
        dense_1_out_14_0 <= grp_dense_1_fu_526_ap_return_28;
        dense_1_out_14_0_loc_reg_1960 <= grp_dense_1_fu_526_ap_return_28;
        dense_1_out_14_1 <= grp_dense_1_fu_526_ap_return_29;
        dense_1_out_14_1_loc_reg_1965 <= grp_dense_1_fu_526_ap_return_29;
        dense_1_out_15_0 <= grp_dense_1_fu_526_ap_return_30;
        dense_1_out_15_0_loc_reg_1970 <= grp_dense_1_fu_526_ap_return_30;
        dense_1_out_15_1 <= grp_dense_1_fu_526_ap_return_31;
        dense_1_out_15_1_loc_reg_1975 <= grp_dense_1_fu_526_ap_return_31;
        dense_1_out_16_0 <= grp_dense_1_fu_526_ap_return_32;
        dense_1_out_16_0_loc_reg_1980 <= grp_dense_1_fu_526_ap_return_32;
        dense_1_out_16_1 <= grp_dense_1_fu_526_ap_return_33;
        dense_1_out_16_1_loc_reg_1985 <= grp_dense_1_fu_526_ap_return_33;
        dense_1_out_17_0 <= grp_dense_1_fu_526_ap_return_34;
        dense_1_out_17_0_loc_reg_1990 <= grp_dense_1_fu_526_ap_return_34;
        dense_1_out_17_1 <= grp_dense_1_fu_526_ap_return_35;
        dense_1_out_17_1_loc_reg_1995 <= grp_dense_1_fu_526_ap_return_35;
        dense_1_out_18_0 <= grp_dense_1_fu_526_ap_return_36;
        dense_1_out_18_0_loc_reg_2000 <= grp_dense_1_fu_526_ap_return_36;
        dense_1_out_18_1 <= grp_dense_1_fu_526_ap_return_37;
        dense_1_out_18_1_loc_reg_2005 <= grp_dense_1_fu_526_ap_return_37;
        dense_1_out_19_0 <= grp_dense_1_fu_526_ap_return_38;
        dense_1_out_19_0_loc_reg_2010 <= grp_dense_1_fu_526_ap_return_38;
        dense_1_out_19_1 <= grp_dense_1_fu_526_ap_return_39;
        dense_1_out_19_1_loc_reg_2015 <= grp_dense_1_fu_526_ap_return_39;
        dense_1_out_1_0 <= grp_dense_1_fu_526_ap_return_2;
        dense_1_out_1_0_loc_reg_1830 <= grp_dense_1_fu_526_ap_return_2;
        dense_1_out_1_1 <= grp_dense_1_fu_526_ap_return_3;
        dense_1_out_1_1_loc_reg_1835 <= grp_dense_1_fu_526_ap_return_3;
        dense_1_out_20_0 <= grp_dense_1_fu_526_ap_return_40;
        dense_1_out_20_0_loc_reg_2020 <= grp_dense_1_fu_526_ap_return_40;
        dense_1_out_20_1 <= grp_dense_1_fu_526_ap_return_41;
        dense_1_out_20_1_loc_reg_2025 <= grp_dense_1_fu_526_ap_return_41;
        dense_1_out_21_0 <= grp_dense_1_fu_526_ap_return_42;
        dense_1_out_21_0_loc_reg_2030 <= grp_dense_1_fu_526_ap_return_42;
        dense_1_out_21_1 <= grp_dense_1_fu_526_ap_return_43;
        dense_1_out_21_1_loc_reg_2035 <= grp_dense_1_fu_526_ap_return_43;
        dense_1_out_22_0 <= grp_dense_1_fu_526_ap_return_44;
        dense_1_out_22_0_loc_reg_2040 <= grp_dense_1_fu_526_ap_return_44;
        dense_1_out_22_1 <= grp_dense_1_fu_526_ap_return_45;
        dense_1_out_22_1_loc_reg_2045 <= grp_dense_1_fu_526_ap_return_45;
        dense_1_out_23_0 <= grp_dense_1_fu_526_ap_return_46;
        dense_1_out_23_0_loc_reg_2050 <= grp_dense_1_fu_526_ap_return_46;
        dense_1_out_23_1 <= grp_dense_1_fu_526_ap_return_47;
        dense_1_out_23_1_loc_reg_2055 <= grp_dense_1_fu_526_ap_return_47;
        dense_1_out_24_0 <= grp_dense_1_fu_526_ap_return_48;
        dense_1_out_24_0_loc_reg_2060 <= grp_dense_1_fu_526_ap_return_48;
        dense_1_out_24_1 <= grp_dense_1_fu_526_ap_return_49;
        dense_1_out_24_1_loc_reg_2065 <= grp_dense_1_fu_526_ap_return_49;
        dense_1_out_2_0 <= grp_dense_1_fu_526_ap_return_4;
        dense_1_out_2_0_loc_reg_1840 <= grp_dense_1_fu_526_ap_return_4;
        dense_1_out_2_1 <= grp_dense_1_fu_526_ap_return_5;
        dense_1_out_2_1_loc_reg_1845 <= grp_dense_1_fu_526_ap_return_5;
        dense_1_out_3_0 <= grp_dense_1_fu_526_ap_return_6;
        dense_1_out_3_0_loc_reg_1850 <= grp_dense_1_fu_526_ap_return_6;
        dense_1_out_3_1 <= grp_dense_1_fu_526_ap_return_7;
        dense_1_out_3_1_loc_reg_1855 <= grp_dense_1_fu_526_ap_return_7;
        dense_1_out_4_0 <= grp_dense_1_fu_526_ap_return_8;
        dense_1_out_4_0_loc_reg_1860 <= grp_dense_1_fu_526_ap_return_8;
        dense_1_out_4_1 <= grp_dense_1_fu_526_ap_return_9;
        dense_1_out_4_1_loc_reg_1865 <= grp_dense_1_fu_526_ap_return_9;
        dense_1_out_5_0 <= grp_dense_1_fu_526_ap_return_10;
        dense_1_out_5_0_loc_reg_1870 <= grp_dense_1_fu_526_ap_return_10;
        dense_1_out_5_1 <= grp_dense_1_fu_526_ap_return_11;
        dense_1_out_5_1_loc_reg_1875 <= grp_dense_1_fu_526_ap_return_11;
        dense_1_out_6_0 <= grp_dense_1_fu_526_ap_return_12;
        dense_1_out_6_0_loc_reg_1880 <= grp_dense_1_fu_526_ap_return_12;
        dense_1_out_6_1 <= grp_dense_1_fu_526_ap_return_13;
        dense_1_out_6_1_loc_reg_1885 <= grp_dense_1_fu_526_ap_return_13;
        dense_1_out_7_0 <= grp_dense_1_fu_526_ap_return_14;
        dense_1_out_7_0_loc_reg_1890 <= grp_dense_1_fu_526_ap_return_14;
        dense_1_out_7_1 <= grp_dense_1_fu_526_ap_return_15;
        dense_1_out_7_1_loc_reg_1895 <= grp_dense_1_fu_526_ap_return_15;
        dense_1_out_8_0 <= grp_dense_1_fu_526_ap_return_16;
        dense_1_out_8_0_loc_reg_1900 <= grp_dense_1_fu_526_ap_return_16;
        dense_1_out_8_1 <= grp_dense_1_fu_526_ap_return_17;
        dense_1_out_8_1_loc_reg_1905 <= grp_dense_1_fu_526_ap_return_17;
        dense_1_out_9_0 <= grp_dense_1_fu_526_ap_return_18;
        dense_1_out_9_0_loc_reg_1910 <= grp_dense_1_fu_526_ap_return_18;
        dense_1_out_9_1 <= grp_dense_1_fu_526_ap_return_19;
        dense_1_out_9_1_loc_reg_1915 <= grp_dense_1_fu_526_ap_return_19;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1532 <= i_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_reg_1537 <= ix_in_fu_657_p2;
        sub_ln27_reg_1542[10 : 2] <= sub_ln27_fu_687_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1550 <= j_fu_699_p2;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_586_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_586_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_address0 = sext_ln27_fu_725_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_address0 = grp_conv_1_fu_610_input_r_address0;
    end else begin
        conv_1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce0 = grp_conv_1_fu_610_input_r_ce0;
    end else begin
        conv_1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_we0 = 1'b1;
    end else begin
        conv_1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_address0 = grp_max_pool_1_fu_621_conv_1_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_address0 = grp_conv_1_fu_610_conv_out_address0;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_ce0 = grp_max_pool_1_fu_621_conv_1_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_ce0 = grp_conv_1_fu_610_conv_out_ce0;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_we0 = grp_conv_1_fu_610_conv_out_we0;
    end else begin
        conv_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_address0 = grp_max_pool_2_fu_629_conv_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_address0 = grp_conv_2_fu_598_conv_out_address0;
    end else begin
        conv_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_ce0 = grp_max_pool_2_fu_629_conv_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_ce0 = grp_conv_2_fu_598_conv_out_ce0;
    end else begin
        conv_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_we0 = grp_conv_2_fu_598_conv_out_we0;
    end else begin
        conv_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_address0 = grp_dense_out_fu_586_dense_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_2_out_address0 = grp_dense_2_fu_368_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dense_2_out_ce0 = grp_dense_out_fu_586_dense_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_2_out_ce0 = grp_dense_2_fu_368_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dense_2_out_we0 = grp_dense_2_fu_368_dense_2_out_we0;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_address0 = grp_flat_fu_637_flat_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_address0 = grp_dense_1_fu_526_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_ce0 = grp_flat_fu_637_flat_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce0 = grp_dense_1_fu_526_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_we0 = grp_flat_fu_637_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_address0 = grp_max_pool_1_fu_621_max_pool_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_address0 = grp_conv_2_fu_598_max_pool_1_out_address0;
    end else begin
        max_pool_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_ce0 = grp_max_pool_1_fu_621_max_pool_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_ce0 = grp_conv_2_fu_598_max_pool_1_out_ce0;
    end else begin
        max_pool_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_we0 = grp_max_pool_1_fu_621_max_pool_out_we0;
    end else begin
        max_pool_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_address0 = grp_flat_fu_637_max_pool_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_address0 = grp_max_pool_2_fu_629_max_pool_out_address0;
    end else begin
        max_pool_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_ce0 = grp_flat_fu_637_max_pool_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_ce0 = grp_max_pool_2_fu_629_max_pool_out_ce0;
    end else begin
        max_pool_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_we0 = grp_max_pool_2_fu_629_max_pool_out_we0;
    end else begin
        max_pool_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_645_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_conv_1_fu_610_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_max_pool_1_fu_621_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_2_fu_598_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_max_pool_2_fu_629_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_flat_fu_637_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_dense_1_fu_526_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((grp_dense_2_fu_368_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_dense_out_fu_586_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln27_fu_714_p2 = (sub_ln27_reg_1542 + zext_ln27_3_fu_710_p1);

assign add_ln28_fu_719_p2 = (ix_in_1_reg_347 + 10'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_705_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign grp_conv_1_fu_610_ap_start = grp_conv_1_fu_610_ap_start_reg;

assign grp_conv_2_fu_598_ap_start = grp_conv_2_fu_598_ap_start_reg;

assign grp_dense_1_fu_526_ap_start = grp_dense_1_fu_526_ap_start_reg;

assign grp_dense_2_fu_368_ap_start = grp_dense_2_fu_368_ap_start_reg;

assign grp_dense_out_fu_586_ap_start = grp_dense_out_fu_586_ap_start_reg;

assign grp_flat_fu_637_ap_start = grp_flat_fu_637_ap_start_reg;

assign grp_max_pool_1_fu_621_ap_start = grp_max_pool_1_fu_621_ap_start_reg;

assign grp_max_pool_2_fu_629_ap_start = grp_max_pool_2_fu_629_ap_start_reg;

assign i_fu_651_p2 = (i_0_reg_336 + 5'd1);

assign icmp_ln23_fu_645_p2 = ((i_0_reg_336 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_693_p2 = ((j_0_reg_357 == 5'd28) ? 1'b1 : 1'b0);

assign ix_in_fu_657_p2 = (ix_in_0_reg_324 + 10'd28);

assign j_fu_699_p2 = (j_0_reg_357 + 5'd1);

assign prediction_Addr_A = grp_dense_out_fu_586_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_586_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_586_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_586_prediction_WEN_A;

assign sext_ln27_fu_725_p1 = $signed(add_ln27_reg_1560);

assign sub_ln27_fu_687_p2 = (zext_ln27_fu_671_p1 - zext_ln27_2_fu_683_p1);

assign tmp_fu_663_p3 = {{i_0_reg_336}, {5'd0}};

assign tmp_s_fu_675_p3 = {{i_0_reg_336}, {2'd0}};

assign zext_ln27_1_fu_705_p1 = ix_in_1_reg_347;

assign zext_ln27_2_fu_683_p1 = tmp_s_fu_675_p3;

assign zext_ln27_3_fu_710_p1 = j_0_reg_357;

assign zext_ln27_fu_671_p1 = tmp_fu_663_p3;

always @ (posedge ap_clk) begin
    sub_ln27_reg_1542[1:0] <= 2'b00;
end

endmodule //cnn
