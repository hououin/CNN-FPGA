

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Tue Aug  6 22:20:16 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       OPT_LP
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    16.426|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1021|  1021|  1021|  1021|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop_Col_Loop  |  1019|  1019|         7|          1|          1|  1014|    yes   |
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 9 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 10 [1/1] (1.76ns)   --->   "br label %1" [cnn/max_pool_1.cpp:10]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.16>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten13 = phi i10 [ 0, %0 ], [ %add_ln10, %Col_Loop_end ]" [cnn/max_pool_1.cpp:10]   --->   Operation 11 'phi' 'indvar_flatten13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%f_0 = phi i3 [ 0, %0 ], [ %select_ln29_9, %Col_Loop_end ]" [cnn/max_pool_1.cpp:29]   --->   Operation 12 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %0 ], [ %select_ln13, %Col_Loop_end ]" [cnn/max_pool_1.cpp:13]   --->   Operation 13 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %0 ], [ %select_ln36_1, %Col_Loop_end ]" [cnn/max_pool_1.cpp:36]   --->   Operation 14 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ 0, %0 ], [ %c, %Col_Loop_end ]"   --->   Operation 15 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.77ns)   --->   "%icmp_ln10 = icmp eq i10 %indvar_flatten13, -10" [cnn/max_pool_1.cpp:10]   --->   Operation 16 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (1.73ns)   --->   "%add_ln10 = add i10 %indvar_flatten13, 1" [cnn/max_pool_1.cpp:10]   --->   Operation 17 'add' 'add_ln10' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Col_Loop_begin" [cnn/max_pool_1.cpp:10]   --->   Operation 18 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (1.65ns)   --->   "%f = add i3 1, %f_0" [cnn/max_pool_1.cpp:10]   --->   Operation 19 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp eq i8 %indvar_flatten, -87" [cnn/max_pool_1.cpp:13]   --->   Operation 20 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.98ns)   --->   "%select_ln29_9 = select i1 %icmp_ln13, i3 %f, i3 %f_0" [cnn/max_pool_1.cpp:29]   --->   Operation 21 'select' 'select_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.91ns)   --->   "%add_ln13 = add i8 %indvar_flatten, 1" [cnn/max_pool_1.cpp:13]   --->   Operation 22 'add' 'add_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.24ns)   --->   "%select_ln13 = select i1 %icmp_ln13, i8 1, i8 %add_ln13" [cnn/max_pool_1.cpp:13]   --->   Operation 23 'select' 'select_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 16.4>
ST_3 : Operation 24 [1/1] (1.02ns)   --->   "%select_ln29_8 = select i1 %icmp_ln13, i4 0, i4 %r_0" [cnn/max_pool_1.cpp:29]   --->   Operation 24 'select' 'select_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i3 %select_ln29_9 to i12" [cnn/max_pool_1.cpp:36]   --->   Operation 25 'zext' 'zext_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_13)   --->   "%xor_ln29 = xor i1 %icmp_ln13, true" [cnn/max_pool_1.cpp:29]   --->   Operation 26 'xor' 'xor_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %c_0, -3" [cnn/max_pool_1.cpp:16]   --->   Operation 27 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_13 = and i1 %icmp_ln16, %xor_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 28 'and' 'and_ln29_13' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (1.73ns)   --->   "%r = add i4 1, %select_ln29_8" [cnn/max_pool_1.cpp:13]   --->   Operation 29 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node select_ln36)   --->   "%or_ln36 = or i1 %and_ln29_13, %icmp_ln13" [cnn/max_pool_1.cpp:36]   --->   Operation 30 'or' 'or_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln36 = select i1 %or_ln36, i4 0, i4 %c_0" [cnn/max_pool_1.cpp:36]   --->   Operation 31 'select' 'select_ln36' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (1.02ns)   --->   "%select_ln36_1 = select i1 %and_ln29_13, i4 %r, i4 %select_ln29_8" [cnn/max_pool_1.cpp:36]   --->   Operation 32 'select' 'select_ln36_1' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i4 %select_ln36_1 to i9" [cnn/max_pool_1.cpp:29]   --->   Operation 33 'zext' 'zext_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (3.78ns)   --->   "%mul_ln29 = mul i9 26, %zext_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 34 'mul' 'mul_ln29' <Predicate = (!icmp_ln10)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %select_ln36, i1 false)" [cnn/max_pool_1.cpp:27]   --->   Operation 35 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln29_10 = zext i5 %shl_ln to i9" [cnn/max_pool_1.cpp:29]   --->   Operation 36 'zext' 'zext_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.82ns)   --->   "%add_ln29 = add i9 %zext_ln29_10, %mul_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 37 'add' 'add_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%p_shl2_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln29, i3 0)" [cnn/max_pool_1.cpp:29]   --->   Operation 38 'bitconcatenate' 'p_shl2_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln29, i1 false)" [cnn/max_pool_1.cpp:29]   --->   Operation 39 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln29_11 = zext i10 %tmp to i12" [cnn/max_pool_1.cpp:29]   --->   Operation 40 'zext' 'zext_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln29 = sub i12 %p_shl2_cast, %zext_ln29_11" [cnn/max_pool_1.cpp:29]   --->   Operation 41 'sub' 'sub_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 42 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln29_8 = add i12 %zext_ln36, %sub_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 42 'add' 'add_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln29_12 = zext i12 %add_ln29_8 to i64" [cnn/max_pool_1.cpp:29]   --->   Operation 43 'zext' 'zext_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr = getelementptr [2028 x float]* @conv_1_out_0, i64 0, i64 %zext_ln29_12" [cnn/max_pool_1.cpp:29]   --->   Operation 44 'getelementptr' 'conv_1_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (3.25ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 45 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_3 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_9)   --->   "%or_ln27 = or i5 %shl_ln, 1" [cnn/max_pool_1.cpp:27]   --->   Operation 46 'or' 'or_ln27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_9)   --->   "%zext_ln29_13 = zext i5 %or_ln27 to i9" [cnn/max_pool_1.cpp:29]   --->   Operation 47 'zext' 'zext_ln29_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (1.82ns) (out node of the LUT)   --->   "%add_ln29_9 = add i9 %zext_ln29_13, %mul_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 48 'add' 'add_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%p_shl_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %add_ln29_9, i3 0)" [cnn/max_pool_1.cpp:29]   --->   Operation 49 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_1 = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %add_ln29_9, i1 false)" [cnn/max_pool_1.cpp:29]   --->   Operation 50 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln29_14 = zext i10 %tmp_1 to i12" [cnn/max_pool_1.cpp:29]   --->   Operation 51 'zext' 'zext_ln29_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln29_1 = sub i12 %p_shl_cast, %zext_ln29_14" [cnn/max_pool_1.cpp:29]   --->   Operation 52 'sub' 'sub_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 53 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln29_10 = add i12 %zext_ln36, %sub_ln29_1" [cnn/max_pool_1.cpp:29]   --->   Operation 53 'add' 'add_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.89> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 54 [1/1] (1.30ns)   --->   "switch i3 %select_ln29_9, label %branch5 [
    i3 0, label %branch0
    i3 1, label %branch1
    i3 2, label %branch2
    i3 3, label %branch3
    i3 -4, label %branch4
  ]" [cnn/max_pool_1.cpp:36]   --->   Operation 54 'switch' <Predicate = (!icmp_ln10)> <Delay = 1.30>
ST_3 : Operation 55 [1/1] (1.73ns)   --->   "%c = add i4 %select_ln36, 1" [cnn/max_pool_1.cpp:16]   --->   Operation 55 'add' 'c' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 8.68>
ST_4 : Operation 56 [1/2] (3.25ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 56 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_4 : Operation 57 [2/2] (5.43ns)   --->   "%tmp_12 = fcmp ogt float %conv_1_out_0_load, 0x3810000000000000" [cnn/max_pool_1.cpp:29]   --->   Operation 57 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln29_15 = zext i12 %add_ln29_10 to i64" [cnn/max_pool_1.cpp:29]   --->   Operation 58 'zext' 'zext_ln29_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_1 = getelementptr [2028 x float]* @conv_1_out_0, i64 0, i64 %zext_ln29_15" [cnn/max_pool_1.cpp:29]   --->   Operation 59 'getelementptr' 'conv_1_out_0_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (3.25ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 60 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>

State 5 <SV = 4> <Delay = 11.8>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr = getelementptr [2028 x float]* @conv_1_out_1, i64 0, i64 %zext_ln29_12" [cnn/max_pool_1.cpp:29]   --->   Operation 61 'getelementptr' 'conv_1_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%bitcast_ln29 = bitcast float %conv_1_out_0_load to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 62 'bitcast' 'bitcast_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 63 'partselect' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i32 %bitcast_ln29 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 64 'trunc' 'trunc_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (1.55ns)   --->   "%icmp_ln29 = icmp ne i8 %tmp_s, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 65 'icmp' 'icmp_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 66 [1/1] (2.44ns)   --->   "%icmp_ln29_14 = icmp eq i23 %trunc_ln29, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 66 'icmp' 'icmp_ln29_14' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%or_ln29 = or i1 %icmp_ln29_14, %icmp_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 67 'or' 'or_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/2] (5.43ns)   --->   "%tmp_12 = fcmp ogt float %conv_1_out_0_load, 0x3810000000000000" [cnn/max_pool_1.cpp:29]   --->   Operation 68 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%and_ln29 = and i1 %or_ln29, %tmp_12" [cnn/max_pool_1.cpp:29]   --->   Operation 69 'and' 'and_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln29 = select i1 %and_ln29, float %conv_1_out_0_load, float 0x3810000000000000" [cnn/max_pool_1.cpp:29]   --->   Operation 70 'select' 'select_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 71 [1/2] (3.25ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 71 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_5 : Operation 72 [2/2] (5.43ns)   --->   "%tmp_15 = fcmp ogt float %conv_1_out_0_load_1, %select_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 72 'fcmp' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 73 [2/2] (3.25ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 73 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>

State 6 <SV = 5> <Delay = 12.5>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_1 = getelementptr [2028 x float]* @conv_1_out_1, i64 0, i64 %zext_ln29_15" [cnn/max_pool_1.cpp:29]   --->   Operation 74 'getelementptr' 'conv_1_out_1_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%bitcast_ln29_7 = bitcast float %conv_1_out_0_load_1 to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 75 'bitcast' 'bitcast_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_7, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 76 'partselect' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln29_7 = trunc i32 %bitcast_ln29_7 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 77 'trunc' 'trunc_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln29_8 = bitcast float %select_ln29 to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 78 'bitcast' 'bitcast_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_8, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 79 'partselect' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln29_8 = trunc i32 %bitcast_ln29_8 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 80 'trunc' 'trunc_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (1.55ns)   --->   "%icmp_ln29_15 = icmp ne i8 %tmp_13, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 81 'icmp' 'icmp_ln29_15' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (2.44ns)   --->   "%icmp_ln29_16 = icmp eq i23 %trunc_ln29_7, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 82 'icmp' 'icmp_ln29_16' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_8)   --->   "%or_ln29_7 = or i1 %icmp_ln29_16, %icmp_ln29_15" [cnn/max_pool_1.cpp:29]   --->   Operation 83 'or' 'or_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (1.55ns)   --->   "%icmp_ln29_17 = icmp ne i8 %tmp_14, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 84 'icmp' 'icmp_ln29_17' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (2.44ns)   --->   "%icmp_ln29_18 = icmp eq i23 %trunc_ln29_8, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 85 'icmp' 'icmp_ln29_18' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_8)   --->   "%or_ln29_8 = or i1 %icmp_ln29_18, %icmp_ln29_17" [cnn/max_pool_1.cpp:29]   --->   Operation 86 'or' 'or_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_8)   --->   "%and_ln29_7 = and i1 %or_ln29_7, %or_ln29_8" [cnn/max_pool_1.cpp:29]   --->   Operation 87 'and' 'and_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 88 [1/2] (5.43ns)   --->   "%tmp_15 = fcmp ogt float %conv_1_out_0_load_1, %select_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 88 'fcmp' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_8 = and i1 %and_ln29_7, %tmp_15" [cnn/max_pool_1.cpp:29]   --->   Operation 89 'and' 'and_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_4 = select i1 %and_ln29_8, float %conv_1_out_0_load_1, float %select_ln29" [cnn/max_pool_1.cpp:29]   --->   Operation 90 'select' 'select_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 91 [1/2] (3.25ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 91 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_6 : Operation 92 [2/2] (5.43ns)   --->   "%tmp_18 = fcmp ogt float %conv_1_out_1_load, %select_ln29_4" [cnn/max_pool_1.cpp:29]   --->   Operation 92 'fcmp' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 93 [2/2] (3.25ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 93 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>

State 7 <SV = 6> <Delay = 12.5>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%bitcast_ln29_9 = bitcast float %conv_1_out_1_load to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 94 'bitcast' 'bitcast_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_9, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 95 'partselect' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln29_9 = trunc i32 %bitcast_ln29_9 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 96 'trunc' 'trunc_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%bitcast_ln29_10 = bitcast float %select_ln29_4 to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 97 'bitcast' 'bitcast_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_10, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 98 'partselect' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln29_10 = trunc i32 %bitcast_ln29_10 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 99 'trunc' 'trunc_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (1.55ns)   --->   "%icmp_ln29_19 = icmp ne i8 %tmp_16, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 100 'icmp' 'icmp_ln29_19' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (2.44ns)   --->   "%icmp_ln29_20 = icmp eq i23 %trunc_ln29_9, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 101 'icmp' 'icmp_ln29_20' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_10)   --->   "%or_ln29_9 = or i1 %icmp_ln29_20, %icmp_ln29_19" [cnn/max_pool_1.cpp:29]   --->   Operation 102 'or' 'or_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (1.55ns)   --->   "%icmp_ln29_21 = icmp ne i8 %tmp_17, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 103 'icmp' 'icmp_ln29_21' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (2.44ns)   --->   "%icmp_ln29_22 = icmp eq i23 %trunc_ln29_10, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 104 'icmp' 'icmp_ln29_22' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_10)   --->   "%or_ln29_10 = or i1 %icmp_ln29_22, %icmp_ln29_21" [cnn/max_pool_1.cpp:29]   --->   Operation 105 'or' 'or_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_10)   --->   "%and_ln29_9 = and i1 %or_ln29_9, %or_ln29_10" [cnn/max_pool_1.cpp:29]   --->   Operation 106 'and' 'and_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 107 [1/2] (5.43ns)   --->   "%tmp_18 = fcmp ogt float %conv_1_out_1_load, %select_ln29_4" [cnn/max_pool_1.cpp:29]   --->   Operation 107 'fcmp' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 108 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_10 = and i1 %and_ln29_9, %tmp_18" [cnn/max_pool_1.cpp:29]   --->   Operation 108 'and' 'and_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 109 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_5 = select i1 %and_ln29_10, float %conv_1_out_1_load, float %select_ln29_4" [cnn/max_pool_1.cpp:29]   --->   Operation 109 'select' 'select_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 110 [1/2] (3.25ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [cnn/max_pool_1.cpp:29]   --->   Operation 110 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_7 : Operation 111 [2/2] (5.43ns)   --->   "%tmp_21 = fcmp ogt float %conv_1_out_1_load_1, %select_ln29_5" [cnn/max_pool_1.cpp:29]   --->   Operation 111 'fcmp' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 10.3>
ST_8 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 112 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 113 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1014, i64 1014, i64 1014)"   --->   Operation 113 'speclooptripcount' 'empty_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Row_Loop_Col_Loop_st)"   --->   Operation 114 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln36_4 = zext i4 %select_ln36_1 to i8" [cnn/max_pool_1.cpp:36]   --->   Operation 115 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 116 [1/1] (3.36ns) (grouped into DSP with root node add_ln36)   --->   "%mul_ln36 = mul i8 13, %zext_ln36_4" [cnn/max_pool_1.cpp:36]   --->   Operation 116 'mul' 'mul_ln36' <Predicate = (!icmp_ln10)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str28) nounwind" [cnn/max_pool_1.cpp:17]   --->   Operation 117 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str28)" [cnn/max_pool_1.cpp:17]   --->   Operation 118 'specregionbegin' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str39) nounwind" [cnn/max_pool_1.cpp:18]   --->   Operation 119 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%bitcast_ln29_11 = bitcast float %conv_1_out_1_load_1 to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 120 'bitcast' 'bitcast_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_19 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_11, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 121 'partselect' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (0.00ns)   --->   "%trunc_ln29_11 = trunc i32 %bitcast_ln29_11 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 122 'trunc' 'trunc_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%bitcast_ln29_12 = bitcast float %select_ln29_5 to i32" [cnn/max_pool_1.cpp:29]   --->   Operation 123 'bitcast' 'bitcast_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_12, i32 23, i32 30)" [cnn/max_pool_1.cpp:29]   --->   Operation 124 'partselect' 'tmp_20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln29_12 = trunc i32 %bitcast_ln29_12 to i23" [cnn/max_pool_1.cpp:29]   --->   Operation 125 'trunc' 'trunc_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 126 [1/1] (1.55ns)   --->   "%icmp_ln29_23 = icmp ne i8 %tmp_19, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 126 'icmp' 'icmp_ln29_23' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 127 [1/1] (2.44ns)   --->   "%icmp_ln29_24 = icmp eq i23 %trunc_ln29_11, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 127 'icmp' 'icmp_ln29_24' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_12)   --->   "%or_ln29_11 = or i1 %icmp_ln29_24, %icmp_ln29_23" [cnn/max_pool_1.cpp:29]   --->   Operation 128 'or' 'or_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 129 [1/1] (1.55ns)   --->   "%icmp_ln29_25 = icmp ne i8 %tmp_20, -1" [cnn/max_pool_1.cpp:29]   --->   Operation 129 'icmp' 'icmp_ln29_25' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 130 [1/1] (2.44ns)   --->   "%icmp_ln29_26 = icmp eq i23 %trunc_ln29_12, 0" [cnn/max_pool_1.cpp:29]   --->   Operation 130 'icmp' 'icmp_ln29_26' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_12)   --->   "%or_ln29_12 = or i1 %icmp_ln29_26, %icmp_ln29_25" [cnn/max_pool_1.cpp:29]   --->   Operation 131 'or' 'or_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_12)   --->   "%and_ln29_11 = and i1 %or_ln29_11, %or_ln29_12" [cnn/max_pool_1.cpp:29]   --->   Operation 132 'and' 'and_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 133 [1/2] (5.43ns)   --->   "%tmp_21 = fcmp ogt float %conv_1_out_1_load_1, %select_ln29_5" [cnn/max_pool_1.cpp:29]   --->   Operation 133 'fcmp' 'tmp_21' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 134 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_12 = and i1 %and_ln29_11, %tmp_21" [cnn/max_pool_1.cpp:29]   --->   Operation 134 'and' 'and_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 135 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_6 = select i1 %and_ln29_12, float %conv_1_out_1_load_1, float %select_ln29_5" [cnn/max_pool_1.cpp:29]   --->   Operation 135 'select' 'select_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i4 %select_ln36 to i8" [cnn/max_pool_1.cpp:36]   --->   Operation 136 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 137 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln36 = add i8 %zext_ln36_5, %mul_ln36" [cnn/max_pool_1.cpp:36]   --->   Operation 137 'add' 'add_ln36' <Predicate = (!icmp_ln10)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln36_6 = zext i8 %add_ln36 to i64" [cnn/max_pool_1.cpp:36]   --->   Operation 138 'zext' 'zext_ln36_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%max_pool_out_0_addr = getelementptr [169 x float]* %max_pool_out_0, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 139 'getelementptr' 'max_pool_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (0.00ns)   --->   "%max_pool_out_1_addr = getelementptr [169 x float]* %max_pool_out_1, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 140 'getelementptr' 'max_pool_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "%max_pool_out_2_addr = getelementptr [169 x float]* %max_pool_out_2, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 141 'getelementptr' 'max_pool_out_2_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%max_pool_out_3_addr = getelementptr [169 x float]* %max_pool_out_3, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 142 'getelementptr' 'max_pool_out_3_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "%max_pool_out_4_addr = getelementptr [169 x float]* %max_pool_out_4, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 143 'getelementptr' 'max_pool_out_4_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 144 [1/1] (0.00ns)   --->   "%max_pool_out_5_addr = getelementptr [169 x float]* %max_pool_out_5, i64 0, i64 %zext_ln36_6" [cnn/max_pool_1.cpp:36]   --->   Operation 144 'getelementptr' 'max_pool_out_5_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 145 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_4_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 145 'store' <Predicate = (select_ln29_9 == 4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 146 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 146 'br' <Predicate = (select_ln29_9 == 4)> <Delay = 0.00>
ST_8 : Operation 147 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_3_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 147 'store' <Predicate = (select_ln29_9 == 3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 148 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 148 'br' <Predicate = (select_ln29_9 == 3)> <Delay = 0.00>
ST_8 : Operation 149 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_2_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 149 'store' <Predicate = (select_ln29_9 == 2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 150 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 150 'br' <Predicate = (select_ln29_9 == 2)> <Delay = 0.00>
ST_8 : Operation 151 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_1_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 151 'store' <Predicate = (select_ln29_9 == 1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 152 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 152 'br' <Predicate = (select_ln29_9 == 1)> <Delay = 0.00>
ST_8 : Operation 153 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_0_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 153 'store' <Predicate = (select_ln29_9 == 0)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 154 'br' <Predicate = (select_ln29_9 == 0)> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (3.25ns)   --->   "store float %select_ln29_6, float* %max_pool_out_5_addr, align 4" [cnn/max_pool_1.cpp:36]   --->   Operation 155 'store' <Predicate = (select_ln29_9 == 7) | (select_ln29_9 == 6) | (select_ln29_9 == 5)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 169> <RAM>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "br label %Col_Loop_end" [cnn/max_pool_1.cpp:36]   --->   Operation 156 'br' <Predicate = (select_ln29_9 == 7) | (select_ln29_9 == 6) | (select_ln29_9 == 5)> <Delay = 0.00>
ST_8 : Operation 157 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str28, i32 %tmp_8)" [cnn/max_pool_1.cpp:37]   --->   Operation 157 'specregionend' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_8 : Operation 158 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 158 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 9 <SV = 2> <Delay = 0.00>
ST_9 : Operation 159 [1/1] (0.00ns)   --->   "ret void" [cnn/max_pool_1.cpp:40]   --->   Operation 159 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten13', cnn/max_pool_1.cpp:10) with incoming values : ('add_ln10', cnn/max_pool_1.cpp:10) [11]  (1.77 ns)

 <State 2>: 3.16ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', cnn/max_pool_1.cpp:13) with incoming values : ('select_ln13', cnn/max_pool_1.cpp:13) [13]  (0 ns)
	'add' operation ('add_ln13', cnn/max_pool_1.cpp:13) [156]  (1.92 ns)
	'select' operation ('select_ln13', cnn/max_pool_1.cpp:13) [157]  (1.25 ns)

 <State 3>: 16.4ns
The critical path consists of the following:
	'select' operation ('select_ln29_8', cnn/max_pool_1.cpp:29) [24]  (1.02 ns)
	'add' operation ('r', cnn/max_pool_1.cpp:13) [30]  (1.74 ns)
	'select' operation ('select_ln36_1', cnn/max_pool_1.cpp:36) [34]  (1.02 ns)
	'mul' operation ('mul_ln29', cnn/max_pool_1.cpp:29) [37]  (3.78 ns)
	'add' operation ('add_ln29', cnn/max_pool_1.cpp:29) [44]  (1.82 ns)
	'sub' operation ('sub_ln29', cnn/max_pool_1.cpp:29) [48]  (0 ns)
	'add' operation ('add_ln29_8', cnn/max_pool_1.cpp:29) [49]  (3.79 ns)
	'getelementptr' operation ('conv_1_out_0_addr', cnn/max_pool_1.cpp:29) [51]  (0 ns)
	'load' operation ('conv_1_out_0_load', cnn/max_pool_1.cpp:29) on array 'conv_1_out_0' [53]  (3.25 ns)

 <State 4>: 8.69ns
The critical path consists of the following:
	'load' operation ('conv_1_out_0_load', cnn/max_pool_1.cpp:29) on array 'conv_1_out_0' [53]  (3.25 ns)
	'fcmp' operation ('tmp_12', cnn/max_pool_1.cpp:29) [60]  (5.43 ns)

 <State 5>: 11.8ns
The critical path consists of the following:
	'fcmp' operation ('tmp_12', cnn/max_pool_1.cpp:29) [60]  (5.43 ns)
	'and' operation ('and_ln29', cnn/max_pool_1.cpp:29) [61]  (0 ns)
	'select' operation ('select_ln29', cnn/max_pool_1.cpp:29) [62]  (0.978 ns)
	'fcmp' operation ('tmp_15', cnn/max_pool_1.cpp:29) [88]  (5.43 ns)

 <State 6>: 12.5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_15', cnn/max_pool_1.cpp:29) [88]  (5.43 ns)
	'and' operation ('and_ln29_8', cnn/max_pool_1.cpp:29) [89]  (0.978 ns)
	'select' operation ('select_ln29_4', cnn/max_pool_1.cpp:29) [90]  (0.698 ns)
	'fcmp' operation ('tmp_18', cnn/max_pool_1.cpp:29) [105]  (5.43 ns)

 <State 7>: 12.5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_18', cnn/max_pool_1.cpp:29) [105]  (5.43 ns)
	'and' operation ('and_ln29_10', cnn/max_pool_1.cpp:29) [106]  (0.978 ns)
	'select' operation ('select_ln29_5', cnn/max_pool_1.cpp:29) [107]  (0.698 ns)
	'fcmp' operation ('tmp_21', cnn/max_pool_1.cpp:29) [122]  (5.43 ns)

 <State 8>: 10.4ns
The critical path consists of the following:
	'fcmp' operation ('tmp_21', cnn/max_pool_1.cpp:29) [122]  (5.43 ns)
	'and' operation ('and_ln29_12', cnn/max_pool_1.cpp:29) [123]  (0.978 ns)
	'select' operation ('select_ln29_6', cnn/max_pool_1.cpp:29) [124]  (0.698 ns)
	'store' operation ('store_ln36', cnn/max_pool_1.cpp:36) of variable 'select_ln29_6', cnn/max_pool_1.cpp:29 on array 'max_pool_out_0' [148]  (3.25 ns)

 <State 9>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
