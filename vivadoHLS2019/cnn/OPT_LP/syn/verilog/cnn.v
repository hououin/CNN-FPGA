// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=21.764000,HLS_SYN_LAT=37470,HLS_SYN_TPT=none,HLS_SYN_MEM=106,HLS_SYN_DSP=119,HLS_SYN_FF=59702,HLS_SYN_LUT=54362,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage0 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage1 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage2 = 20'd131072;
parameter    ap_ST_fsm_state28 = 20'd262144;
parameter    ap_ST_fsm_state29 = 20'd524288;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [10:0] conv_1_out_0_address0;
reg    conv_1_out_0_ce0;
reg    conv_1_out_0_we0;
wire   [31:0] conv_1_out_0_q0;
reg    conv_1_out_0_ce1;
wire   [31:0] conv_1_out_0_q1;
reg   [10:0] conv_1_out_1_address0;
reg    conv_1_out_1_ce0;
reg    conv_1_out_1_we0;
wire   [31:0] conv_1_out_1_q0;
reg    conv_1_out_1_ce1;
wire   [31:0] conv_1_out_1_q1;
reg   [7:0] max_pool_1_out_0_address0;
reg    max_pool_1_out_0_ce0;
reg    max_pool_1_out_0_we0;
wire   [31:0] max_pool_1_out_0_q0;
reg    max_pool_1_out_0_ce1;
wire   [31:0] max_pool_1_out_0_q1;
reg   [7:0] max_pool_1_out_1_address0;
reg    max_pool_1_out_1_ce0;
reg    max_pool_1_out_1_we0;
wire   [31:0] max_pool_1_out_1_q0;
reg    max_pool_1_out_1_ce1;
wire   [31:0] max_pool_1_out_1_q1;
reg   [7:0] max_pool_1_out_2_address0;
reg    max_pool_1_out_2_ce0;
reg    max_pool_1_out_2_we0;
wire   [31:0] max_pool_1_out_2_q0;
reg    max_pool_1_out_2_ce1;
wire   [31:0] max_pool_1_out_2_q1;
reg   [7:0] max_pool_1_out_3_address0;
reg    max_pool_1_out_3_ce0;
reg    max_pool_1_out_3_we0;
wire   [31:0] max_pool_1_out_3_q0;
reg    max_pool_1_out_3_ce1;
wire   [31:0] max_pool_1_out_3_q1;
reg   [7:0] max_pool_1_out_4_address0;
reg    max_pool_1_out_4_ce0;
reg    max_pool_1_out_4_we0;
wire   [31:0] max_pool_1_out_4_q0;
reg    max_pool_1_out_4_ce1;
wire   [31:0] max_pool_1_out_4_q1;
reg   [7:0] max_pool_1_out_5_address0;
reg    max_pool_1_out_5_ce0;
reg    max_pool_1_out_5_we0;
wire   [31:0] max_pool_1_out_5_q0;
reg    max_pool_1_out_5_ce1;
wire   [31:0] max_pool_1_out_5_q1;
reg   [10:0] conv_2_out_address0;
reg    conv_2_out_ce0;
reg    conv_2_out_we0;
wire   [31:0] conv_2_out_q0;
reg    conv_2_out_ce1;
wire   [31:0] conv_2_out_q1;
reg   [8:0] max_pool_2_out_address0;
reg    max_pool_2_out_ce0;
reg    max_pool_2_out_we0;
wire   [31:0] max_pool_2_out_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
reg    flat_array_ce1;
wire   [31:0] flat_array_q1;
reg   [5:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_q0;
wire   [4:0] dense_2_bias_address0;
reg    dense_2_bias_ce0;
wire   [31:0] dense_2_bias_q0;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_d0;
wire   [31:0] dense_2_out_q0;
wire   [10:0] dense_2_weights_address0;
reg    dense_2_weights_ce0;
wire   [31:0] dense_2_weights_q0;
reg   [10:0] indvar_flatten_reg_390;
reg   [4:0] i_0_i_reg_401;
reg   [31:0] sum_0_i_reg_412;
reg   [5:0] j_0_i_reg_424;
wire   [4:0] i_fu_659_p2;
reg   [4:0] i_reg_901;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_665_p2;
reg   [9:0] ix_in_reg_906;
wire   [0:0] icmp_ln23_fu_653_p2;
wire   [10:0] sub_ln27_fu_695_p2;
reg   [10:0] sub_ln27_reg_911;
wire   [4:0] j_1_fu_707_p2;
reg   [4:0] j_1_reg_919;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_701_p2;
wire   [10:0] add_ln27_fu_722_p2;
reg   [10:0] add_ln27_reg_929;
wire   [9:0] add_ln28_fu_727_p2;
reg   [9:0] add_ln28_reg_934;
wire   [0:0] icmp_ln9_fu_737_p2;
reg   [0:0] icmp_ln9_reg_939;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state16_pp0_stage0_iter0;
wire    ap_block_state19_pp0_stage0_iter1;
wire    ap_block_state22_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln9_reg_939_pp0_iter1_reg;
wire   [10:0] add_ln9_fu_743_p2;
reg   [10:0] add_ln9_reg_943;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln13_fu_755_p2;
reg   [0:0] icmp_ln13_reg_948;
wire   [5:0] select_ln14_1_fu_761_p3;
reg   [5:0] select_ln14_1_reg_953;
wire   [4:0] select_ln14_2_fu_769_p3;
reg   [4:0] select_ln14_2_reg_958;
reg   [4:0] select_ln14_2_reg_958_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state17_pp0_stage1_iter0;
wire    ap_block_state20_pp0_stage1_iter1;
wire    ap_block_state23_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_641_p2;
reg   [31:0] tmp_7_i_reg_984;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state18_pp0_stage2_iter0;
wire    ap_block_state21_pp0_stage2_iter1;
wire    ap_block_state24_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire   [5:0] j_fu_827_p2;
reg   [5:0] j_reg_989;
wire   [31:0] select_ln14_fu_832_p3;
wire   [0:0] icmp_ln13_1_fu_840_p2;
reg   [0:0] icmp_ln13_1_reg_1000;
reg   [0:0] icmp_ln13_1_reg_1000_pp0_iter2_reg;
reg   [0:0] icmp_ln13_1_reg_1000_pp0_iter3_reg;
wire   [63:0] zext_ln14_fu_845_p1;
reg   [63:0] zext_ln14_reg_1004;
reg   [63:0] zext_ln14_reg_1004_pp0_iter3_reg;
wire   [31:0] grp_fu_636_p2;
reg   [31:0] sum_reg_1009;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] tmp_i_reg_1025;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state15;
wire    grp_dense_1_fu_435_ap_ready;
wire    grp_dense_1_fu_435_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state16;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [9:0] conv_1_input_address0;
reg    conv_1_input_ce0;
reg    conv_1_input_we0;
wire   [31:0] conv_1_input_q0;
reg    conv_1_input_ce1;
wire   [31:0] conv_1_input_q1;
wire    grp_dense_1_fu_435_ap_start;
wire    grp_dense_1_fu_435_ap_idle;
wire   [5:0] grp_dense_1_fu_435_dense_1_out_address0;
wire    grp_dense_1_fu_435_dense_1_out_ce0;
wire    grp_dense_1_fu_435_dense_1_out_we0;
wire   [31:0] grp_dense_1_fu_435_dense_1_out_d0;
wire   [8:0] grp_dense_1_fu_435_flat_array_address0;
wire    grp_dense_1_fu_435_flat_array_ce0;
wire   [8:0] grp_dense_1_fu_435_flat_array_address1;
wire    grp_dense_1_fu_435_flat_array_ce1;
wire    grp_conv_2_fu_447_ap_start;
wire    grp_conv_2_fu_447_ap_done;
wire    grp_conv_2_fu_447_ap_idle;
wire    grp_conv_2_fu_447_ap_ready;
wire   [10:0] grp_conv_2_fu_447_conv_out_address0;
wire    grp_conv_2_fu_447_conv_out_ce0;
wire    grp_conv_2_fu_447_conv_out_we0;
wire   [31:0] grp_conv_2_fu_447_conv_out_d0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_0_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_0_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_0_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_0_ce1;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_1_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_1_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_1_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_1_ce1;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_2_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_2_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_2_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_2_ce1;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_3_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_3_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_3_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_3_ce1;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_4_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_4_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_4_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_4_ce1;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_5_address0;
wire    grp_conv_2_fu_447_max_pool_1_out_5_ce0;
wire   [7:0] grp_conv_2_fu_447_max_pool_1_out_5_address1;
wire    grp_conv_2_fu_447_max_pool_1_out_5_ce1;
wire    grp_conv_1_fu_575_ap_start;
wire    grp_conv_1_fu_575_ap_done;
wire    grp_conv_1_fu_575_ap_idle;
wire    grp_conv_1_fu_575_ap_ready;
wire   [9:0] grp_conv_1_fu_575_input_r_address0;
wire    grp_conv_1_fu_575_input_r_ce0;
wire   [9:0] grp_conv_1_fu_575_input_r_address1;
wire    grp_conv_1_fu_575_input_r_ce1;
wire   [10:0] grp_conv_1_fu_575_conv_out_0_address0;
wire    grp_conv_1_fu_575_conv_out_0_ce0;
wire    grp_conv_1_fu_575_conv_out_0_we0;
wire   [31:0] grp_conv_1_fu_575_conv_out_0_d0;
wire   [10:0] grp_conv_1_fu_575_conv_out_1_address0;
wire    grp_conv_1_fu_575_conv_out_1_ce0;
wire    grp_conv_1_fu_575_conv_out_1_we0;
wire   [31:0] grp_conv_1_fu_575_conv_out_1_d0;
wire    grp_dense_out_fu_588_ap_start;
wire    grp_dense_out_fu_588_ap_done;
wire    grp_dense_out_fu_588_ap_idle;
wire    grp_dense_out_fu_588_ap_ready;
wire   [31:0] grp_dense_out_fu_588_prediction_Addr_A;
wire    grp_dense_out_fu_588_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_588_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_588_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_588_dense_2_out_address0;
wire    grp_dense_out_fu_588_dense_2_out_ce0;
wire    grp_max_pool_1_fu_600_ap_start;
wire    grp_max_pool_1_fu_600_ap_done;
wire    grp_max_pool_1_fu_600_ap_idle;
wire    grp_max_pool_1_fu_600_ap_ready;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_0_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_0_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_0_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_0_d0;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_1_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_1_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_1_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_1_d0;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_2_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_2_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_2_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_2_d0;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_3_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_3_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_3_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_3_d0;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_4_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_4_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_4_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_4_d0;
wire   [7:0] grp_max_pool_1_fu_600_max_pool_out_5_address0;
wire    grp_max_pool_1_fu_600_max_pool_out_5_ce0;
wire    grp_max_pool_1_fu_600_max_pool_out_5_we0;
wire   [31:0] grp_max_pool_1_fu_600_max_pool_out_5_d0;
wire   [10:0] grp_max_pool_1_fu_600_conv_1_out_0_address0;
wire    grp_max_pool_1_fu_600_conv_1_out_0_ce0;
wire   [10:0] grp_max_pool_1_fu_600_conv_1_out_0_address1;
wire    grp_max_pool_1_fu_600_conv_1_out_0_ce1;
wire   [10:0] grp_max_pool_1_fu_600_conv_1_out_1_address0;
wire    grp_max_pool_1_fu_600_conv_1_out_1_ce0;
wire   [10:0] grp_max_pool_1_fu_600_conv_1_out_1_address1;
wire    grp_max_pool_1_fu_600_conv_1_out_1_ce1;
wire    grp_max_pool_2_fu_620_ap_start;
wire    grp_max_pool_2_fu_620_ap_done;
wire    grp_max_pool_2_fu_620_ap_idle;
wire    grp_max_pool_2_fu_620_ap_ready;
wire   [8:0] grp_max_pool_2_fu_620_max_pool_out_address0;
wire    grp_max_pool_2_fu_620_max_pool_out_ce0;
wire    grp_max_pool_2_fu_620_max_pool_out_we0;
wire   [31:0] grp_max_pool_2_fu_620_max_pool_out_d0;
wire   [10:0] grp_max_pool_2_fu_620_conv_2_out_address0;
wire    grp_max_pool_2_fu_620_conv_2_out_ce0;
wire   [10:0] grp_max_pool_2_fu_620_conv_2_out_address1;
wire    grp_max_pool_2_fu_620_conv_2_out_ce1;
wire    grp_flat_fu_628_ap_start;
wire    grp_flat_fu_628_ap_done;
wire    grp_flat_fu_628_ap_idle;
wire    grp_flat_fu_628_ap_ready;
wire   [8:0] grp_flat_fu_628_flat_array_address0;
wire    grp_flat_fu_628_flat_array_ce0;
wire    grp_flat_fu_628_flat_array_we0;
wire   [31:0] grp_flat_fu_628_flat_array_d0;
wire   [8:0] grp_flat_fu_628_max_pool_2_out_address0;
wire    grp_flat_fu_628_max_pool_2_out_ce0;
reg   [9:0] ix_in_0_reg_346;
reg   [4:0] i_0_reg_358;
reg   [9:0] ix_in_1_reg_369;
wire    ap_CS_fsm_state4;
reg   [4:0] j_0_reg_379;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_394_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_i_0_i_phi_fu_405_p4;
reg   [31:0] ap_phi_mux_sum_0_i_phi_fu_416_p4;
reg   [5:0] ap_phi_mux_j_0_i_phi_fu_428_p4;
reg    grp_dense_1_fu_435_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_conv_2_fu_447_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_conv_1_fu_575_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_dense_out_fu_588_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
reg    grp_max_pool_1_fu_600_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_max_pool_2_fu_620_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_flat_fu_628_ap_start_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln27_1_fu_713_p1;
wire  signed [63:0] sext_ln27_fu_733_p1;
wire  signed [63:0] sext_ln14_fu_822_p1;
wire   [63:0] zext_ln14_4_fu_781_p1;
wire    ap_block_pp0_stage2;
wire   [31:0] cnn_input_Addr_A_orig;
reg   [31:0] grp_fu_636_p0;
reg   [31:0] grp_fu_636_p1;
wire    ap_block_pp0_stage1;
wire   [9:0] tmp_45_fu_671_p3;
wire   [6:0] tmp_46_fu_683_p3;
wire   [10:0] zext_ln27_fu_679_p1;
wire   [10:0] zext_ln27_2_fu_691_p1;
wire   [10:0] zext_ln27_3_fu_718_p1;
wire   [4:0] i_1_fu_749_p2;
wire   [10:0] tmp_47_fu_786_p3;
wire   [6:0] tmp_48_fu_798_p3;
wire   [11:0] zext_ln14_401_fu_794_p1;
wire   [11:0] zext_ln14_402_fu_806_p1;
wire   [11:0] sub_ln14_fu_810_p2;
wire   [11:0] zext_ln13_fu_777_p1;
wire   [11:0] add_ln14_fu_816_p2;
wire   [31:0] bitcast_ln19_fu_849_p1;
wire   [7:0] tmp_fu_852_p4;
wire   [22:0] trunc_ln19_fu_862_p1;
wire   [0:0] icmp_ln19_2_fu_872_p2;
wire   [0:0] icmp_ln19_fu_866_p2;
wire   [0:0] or_ln19_fu_878_p2;
wire   [0:0] grp_fu_647_p2;
wire   [0:0] and_ln19_fu_884_p2;
wire    ap_block_pp0_stage1_00001;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_dense_1_fu_435_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_447_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_575_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_588_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_600_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_620_ap_start_reg = 1'b0;
#0 grp_flat_fu_628_ap_start_reg = 1'b0;
end

cnn_conv_1_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2028 ),
    .AddressWidth( 11 ))
conv_1_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_0_address0),
    .ce0(conv_1_out_0_ce0),
    .we0(conv_1_out_0_we0),
    .d0(grp_conv_1_fu_575_conv_out_0_d0),
    .q0(conv_1_out_0_q0),
    .address1(grp_max_pool_1_fu_600_conv_1_out_0_address1),
    .ce1(conv_1_out_0_ce1),
    .q1(conv_1_out_0_q1)
);

cnn_conv_1_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2028 ),
    .AddressWidth( 11 ))
conv_1_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_1_address0),
    .ce0(conv_1_out_1_ce0),
    .we0(conv_1_out_1_we0),
    .d0(grp_conv_1_fu_575_conv_out_1_d0),
    .q0(conv_1_out_1_q0),
    .address1(grp_max_pool_1_fu_600_conv_1_out_1_address1),
    .ce1(conv_1_out_1_ce1),
    .q1(conv_1_out_1_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_0_address0),
    .ce0(max_pool_1_out_0_ce0),
    .we0(max_pool_1_out_0_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_0_d0),
    .q0(max_pool_1_out_0_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_0_address1),
    .ce1(max_pool_1_out_0_ce1),
    .q1(max_pool_1_out_0_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_1_address0),
    .ce0(max_pool_1_out_1_ce0),
    .we0(max_pool_1_out_1_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_1_d0),
    .q0(max_pool_1_out_1_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_1_address1),
    .ce1(max_pool_1_out_1_ce1),
    .q1(max_pool_1_out_1_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_2_address0),
    .ce0(max_pool_1_out_2_ce0),
    .we0(max_pool_1_out_2_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_2_d0),
    .q0(max_pool_1_out_2_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_2_address1),
    .ce1(max_pool_1_out_2_ce1),
    .q1(max_pool_1_out_2_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_3_address0),
    .ce0(max_pool_1_out_3_ce0),
    .we0(max_pool_1_out_3_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_3_d0),
    .q0(max_pool_1_out_3_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_3_address1),
    .ce1(max_pool_1_out_3_ce1),
    .q1(max_pool_1_out_3_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_4_address0),
    .ce0(max_pool_1_out_4_ce0),
    .we0(max_pool_1_out_4_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_4_d0),
    .q0(max_pool_1_out_4_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_4_address1),
    .ce1(max_pool_1_out_4_ce1),
    .q1(max_pool_1_out_4_q1)
);

cnn_max_pool_1_oubgk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_5_address0),
    .ce0(max_pool_1_out_5_ce0),
    .we0(max_pool_1_out_5_we0),
    .d0(grp_max_pool_1_fu_600_max_pool_out_5_d0),
    .q0(max_pool_1_out_5_q0),
    .address1(grp_conv_2_fu_447_max_pool_1_out_5_address1),
    .ce1(max_pool_1_out_5_ce1),
    .q1(max_pool_1_out_5_q1)
);

cnn_conv_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_address0),
    .ce0(conv_2_out_ce0),
    .we0(conv_2_out_we0),
    .d0(grp_conv_2_fu_447_conv_out_d0),
    .q0(conv_2_out_q0),
    .address1(grp_max_pool_2_fu_620_conv_2_out_address1),
    .ce1(conv_2_out_ce1),
    .q1(conv_2_out_q1)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_address0),
    .ce0(max_pool_2_out_ce0),
    .we0(max_pool_2_out_we0),
    .d0(grp_max_pool_2_fu_620_max_pool_out_d0),
    .q0(max_pool_2_out_q0)
);

cnn_flat_array #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_628_flat_array_d0),
    .q0(flat_array_q0),
    .address1(grp_dense_1_fu_435_flat_array_address1),
    .ce1(flat_array_ce1),
    .q1(flat_array_q1)
);

cnn_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_address0),
    .ce0(dense_1_out_ce0),
    .we0(dense_1_out_we0),
    .d0(grp_dense_1_fu_435_dense_1_out_d0),
    .q0(dense_1_out_q0)
);

cnn_dense_2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_address0),
    .ce0(dense_2_bias_ce0),
    .q0(dense_2_bias_q0)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_dense_2_weights #(
    .DataWidth( 32 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_address0),
    .ce0(dense_2_weights_ce0),
    .q0(dense_2_weights_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_address0),
    .ce0(conv_1_input_ce0),
    .we0(conv_1_input_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_q0),
    .address1(grp_conv_1_fu_575_input_r_address1),
    .ce1(conv_1_input_ce1),
    .q1(conv_1_input_q1)
);

dense_1 grp_dense_1_fu_435(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_1_fu_435_ap_start),
    .ap_done(grp_dense_1_fu_435_ap_done),
    .ap_idle(grp_dense_1_fu_435_ap_idle),
    .ap_ready(grp_dense_1_fu_435_ap_ready),
    .dense_1_out_address0(grp_dense_1_fu_435_dense_1_out_address0),
    .dense_1_out_ce0(grp_dense_1_fu_435_dense_1_out_ce0),
    .dense_1_out_we0(grp_dense_1_fu_435_dense_1_out_we0),
    .dense_1_out_d0(grp_dense_1_fu_435_dense_1_out_d0),
    .flat_array_address0(grp_dense_1_fu_435_flat_array_address0),
    .flat_array_ce0(grp_dense_1_fu_435_flat_array_ce0),
    .flat_array_q0(flat_array_q0),
    .flat_array_address1(grp_dense_1_fu_435_flat_array_address1),
    .flat_array_ce1(grp_dense_1_fu_435_flat_array_ce1),
    .flat_array_q1(flat_array_q1)
);

conv_2 grp_conv_2_fu_447(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_447_ap_start),
    .ap_done(grp_conv_2_fu_447_ap_done),
    .ap_idle(grp_conv_2_fu_447_ap_idle),
    .ap_ready(grp_conv_2_fu_447_ap_ready),
    .conv_out_address0(grp_conv_2_fu_447_conv_out_address0),
    .conv_out_ce0(grp_conv_2_fu_447_conv_out_ce0),
    .conv_out_we0(grp_conv_2_fu_447_conv_out_we0),
    .conv_out_d0(grp_conv_2_fu_447_conv_out_d0),
    .max_pool_1_out_0_address0(grp_conv_2_fu_447_max_pool_1_out_0_address0),
    .max_pool_1_out_0_ce0(grp_conv_2_fu_447_max_pool_1_out_0_ce0),
    .max_pool_1_out_0_q0(max_pool_1_out_0_q0),
    .max_pool_1_out_0_address1(grp_conv_2_fu_447_max_pool_1_out_0_address1),
    .max_pool_1_out_0_ce1(grp_conv_2_fu_447_max_pool_1_out_0_ce1),
    .max_pool_1_out_0_q1(max_pool_1_out_0_q1),
    .max_pool_1_out_1_address0(grp_conv_2_fu_447_max_pool_1_out_1_address0),
    .max_pool_1_out_1_ce0(grp_conv_2_fu_447_max_pool_1_out_1_ce0),
    .max_pool_1_out_1_q0(max_pool_1_out_1_q0),
    .max_pool_1_out_1_address1(grp_conv_2_fu_447_max_pool_1_out_1_address1),
    .max_pool_1_out_1_ce1(grp_conv_2_fu_447_max_pool_1_out_1_ce1),
    .max_pool_1_out_1_q1(max_pool_1_out_1_q1),
    .max_pool_1_out_2_address0(grp_conv_2_fu_447_max_pool_1_out_2_address0),
    .max_pool_1_out_2_ce0(grp_conv_2_fu_447_max_pool_1_out_2_ce0),
    .max_pool_1_out_2_q0(max_pool_1_out_2_q0),
    .max_pool_1_out_2_address1(grp_conv_2_fu_447_max_pool_1_out_2_address1),
    .max_pool_1_out_2_ce1(grp_conv_2_fu_447_max_pool_1_out_2_ce1),
    .max_pool_1_out_2_q1(max_pool_1_out_2_q1),
    .max_pool_1_out_3_address0(grp_conv_2_fu_447_max_pool_1_out_3_address0),
    .max_pool_1_out_3_ce0(grp_conv_2_fu_447_max_pool_1_out_3_ce0),
    .max_pool_1_out_3_q0(max_pool_1_out_3_q0),
    .max_pool_1_out_3_address1(grp_conv_2_fu_447_max_pool_1_out_3_address1),
    .max_pool_1_out_3_ce1(grp_conv_2_fu_447_max_pool_1_out_3_ce1),
    .max_pool_1_out_3_q1(max_pool_1_out_3_q1),
    .max_pool_1_out_4_address0(grp_conv_2_fu_447_max_pool_1_out_4_address0),
    .max_pool_1_out_4_ce0(grp_conv_2_fu_447_max_pool_1_out_4_ce0),
    .max_pool_1_out_4_q0(max_pool_1_out_4_q0),
    .max_pool_1_out_4_address1(grp_conv_2_fu_447_max_pool_1_out_4_address1),
    .max_pool_1_out_4_ce1(grp_conv_2_fu_447_max_pool_1_out_4_ce1),
    .max_pool_1_out_4_q1(max_pool_1_out_4_q1),
    .max_pool_1_out_5_address0(grp_conv_2_fu_447_max_pool_1_out_5_address0),
    .max_pool_1_out_5_ce0(grp_conv_2_fu_447_max_pool_1_out_5_ce0),
    .max_pool_1_out_5_q0(max_pool_1_out_5_q0),
    .max_pool_1_out_5_address1(grp_conv_2_fu_447_max_pool_1_out_5_address1),
    .max_pool_1_out_5_ce1(grp_conv_2_fu_447_max_pool_1_out_5_ce1),
    .max_pool_1_out_5_q1(max_pool_1_out_5_q1)
);

conv_1 grp_conv_1_fu_575(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_575_ap_start),
    .ap_done(grp_conv_1_fu_575_ap_done),
    .ap_idle(grp_conv_1_fu_575_ap_idle),
    .ap_ready(grp_conv_1_fu_575_ap_ready),
    .input_r_address0(grp_conv_1_fu_575_input_r_address0),
    .input_r_ce0(grp_conv_1_fu_575_input_r_ce0),
    .input_r_q0(conv_1_input_q0),
    .input_r_address1(grp_conv_1_fu_575_input_r_address1),
    .input_r_ce1(grp_conv_1_fu_575_input_r_ce1),
    .input_r_q1(conv_1_input_q1),
    .conv_out_0_address0(grp_conv_1_fu_575_conv_out_0_address0),
    .conv_out_0_ce0(grp_conv_1_fu_575_conv_out_0_ce0),
    .conv_out_0_we0(grp_conv_1_fu_575_conv_out_0_we0),
    .conv_out_0_d0(grp_conv_1_fu_575_conv_out_0_d0),
    .conv_out_1_address0(grp_conv_1_fu_575_conv_out_1_address0),
    .conv_out_1_ce0(grp_conv_1_fu_575_conv_out_1_ce0),
    .conv_out_1_we0(grp_conv_1_fu_575_conv_out_1_we0),
    .conv_out_1_d0(grp_conv_1_fu_575_conv_out_1_d0)
);

dense_out grp_dense_out_fu_588(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_588_ap_start),
    .ap_done(grp_dense_out_fu_588_ap_done),
    .ap_idle(grp_dense_out_fu_588_ap_idle),
    .ap_ready(grp_dense_out_fu_588_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_588_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_588_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_588_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_588_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_588_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_588_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

max_pool_1 grp_max_pool_1_fu_600(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_600_ap_start),
    .ap_done(grp_max_pool_1_fu_600_ap_done),
    .ap_idle(grp_max_pool_1_fu_600_ap_idle),
    .ap_ready(grp_max_pool_1_fu_600_ap_ready),
    .max_pool_out_0_address0(grp_max_pool_1_fu_600_max_pool_out_0_address0),
    .max_pool_out_0_ce0(grp_max_pool_1_fu_600_max_pool_out_0_ce0),
    .max_pool_out_0_we0(grp_max_pool_1_fu_600_max_pool_out_0_we0),
    .max_pool_out_0_d0(grp_max_pool_1_fu_600_max_pool_out_0_d0),
    .max_pool_out_1_address0(grp_max_pool_1_fu_600_max_pool_out_1_address0),
    .max_pool_out_1_ce0(grp_max_pool_1_fu_600_max_pool_out_1_ce0),
    .max_pool_out_1_we0(grp_max_pool_1_fu_600_max_pool_out_1_we0),
    .max_pool_out_1_d0(grp_max_pool_1_fu_600_max_pool_out_1_d0),
    .max_pool_out_2_address0(grp_max_pool_1_fu_600_max_pool_out_2_address0),
    .max_pool_out_2_ce0(grp_max_pool_1_fu_600_max_pool_out_2_ce0),
    .max_pool_out_2_we0(grp_max_pool_1_fu_600_max_pool_out_2_we0),
    .max_pool_out_2_d0(grp_max_pool_1_fu_600_max_pool_out_2_d0),
    .max_pool_out_3_address0(grp_max_pool_1_fu_600_max_pool_out_3_address0),
    .max_pool_out_3_ce0(grp_max_pool_1_fu_600_max_pool_out_3_ce0),
    .max_pool_out_3_we0(grp_max_pool_1_fu_600_max_pool_out_3_we0),
    .max_pool_out_3_d0(grp_max_pool_1_fu_600_max_pool_out_3_d0),
    .max_pool_out_4_address0(grp_max_pool_1_fu_600_max_pool_out_4_address0),
    .max_pool_out_4_ce0(grp_max_pool_1_fu_600_max_pool_out_4_ce0),
    .max_pool_out_4_we0(grp_max_pool_1_fu_600_max_pool_out_4_we0),
    .max_pool_out_4_d0(grp_max_pool_1_fu_600_max_pool_out_4_d0),
    .max_pool_out_5_address0(grp_max_pool_1_fu_600_max_pool_out_5_address0),
    .max_pool_out_5_ce0(grp_max_pool_1_fu_600_max_pool_out_5_ce0),
    .max_pool_out_5_we0(grp_max_pool_1_fu_600_max_pool_out_5_we0),
    .max_pool_out_5_d0(grp_max_pool_1_fu_600_max_pool_out_5_d0),
    .conv_1_out_0_address0(grp_max_pool_1_fu_600_conv_1_out_0_address0),
    .conv_1_out_0_ce0(grp_max_pool_1_fu_600_conv_1_out_0_ce0),
    .conv_1_out_0_q0(conv_1_out_0_q0),
    .conv_1_out_0_address1(grp_max_pool_1_fu_600_conv_1_out_0_address1),
    .conv_1_out_0_ce1(grp_max_pool_1_fu_600_conv_1_out_0_ce1),
    .conv_1_out_0_q1(conv_1_out_0_q1),
    .conv_1_out_1_address0(grp_max_pool_1_fu_600_conv_1_out_1_address0),
    .conv_1_out_1_ce0(grp_max_pool_1_fu_600_conv_1_out_1_ce0),
    .conv_1_out_1_q0(conv_1_out_1_q0),
    .conv_1_out_1_address1(grp_max_pool_1_fu_600_conv_1_out_1_address1),
    .conv_1_out_1_ce1(grp_max_pool_1_fu_600_conv_1_out_1_ce1),
    .conv_1_out_1_q1(conv_1_out_1_q1)
);

max_pool_2 grp_max_pool_2_fu_620(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_620_ap_start),
    .ap_done(grp_max_pool_2_fu_620_ap_done),
    .ap_idle(grp_max_pool_2_fu_620_ap_idle),
    .ap_ready(grp_max_pool_2_fu_620_ap_ready),
    .max_pool_out_address0(grp_max_pool_2_fu_620_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_2_fu_620_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_2_fu_620_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_2_fu_620_max_pool_out_d0),
    .conv_2_out_address0(grp_max_pool_2_fu_620_conv_2_out_address0),
    .conv_2_out_ce0(grp_max_pool_2_fu_620_conv_2_out_ce0),
    .conv_2_out_q0(conv_2_out_q0),
    .conv_2_out_address1(grp_max_pool_2_fu_620_conv_2_out_address1),
    .conv_2_out_ce1(grp_max_pool_2_fu_620_conv_2_out_ce1),
    .conv_2_out_q1(conv_2_out_q1)
);

flat grp_flat_fu_628(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_628_ap_start),
    .ap_done(grp_flat_fu_628_ap_done),
    .ap_idle(grp_flat_fu_628_ap_idle),
    .ap_ready(grp_flat_fu_628_ap_ready),
    .flat_array_address0(grp_flat_fu_628_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_628_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_628_flat_array_we0),
    .flat_array_d0(grp_flat_fu_628_flat_array_d0),
    .max_pool_2_out_address0(grp_flat_fu_628_max_pool_2_out_address0),
    .max_pool_2_out_ce0(grp_flat_fu_628_max_pool_2_out_ce0),
    .max_pool_2_out_q0(max_pool_2_out_q0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U152(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_636_p0),
    .din1(grp_fu_636_p1),
    .ce(1'b1),
    .dout(grp_fu_636_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U153(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(dense_1_out_q0),
    .din1(dense_2_weights_q0),
    .ce(1'b1),
    .dout(grp_fu_641_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U154(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_636_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_647_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_575_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_653_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_1_fu_575_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_575_ap_ready == 1'b1)) begin
            grp_conv_1_fu_575_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_447_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_conv_2_fu_447_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_447_ap_ready == 1'b1)) begin
            grp_conv_2_fu_447_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_1_fu_435_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_dense_1_fu_435_ap_start_reg <= 1'b1;
        end else if ((grp_dense_1_fu_435_ap_ready == 1'b1)) begin
            grp_dense_1_fu_435_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_588_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_dense_out_fu_588_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_588_ap_ready == 1'b1)) begin
            grp_dense_out_fu_588_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_628_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_flat_fu_628_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_628_ap_ready == 1'b1)) begin
            grp_flat_fu_628_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_600_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_max_pool_1_fu_600_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_600_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_600_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_620_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pool_2_fu_620_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_620_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_620_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_401 <= select_ln14_2_reg_958;
    end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        i_0_i_reg_401 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_358 <= i_reg_901;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_358 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_390 <= add_ln9_reg_943;
    end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        indvar_flatten_reg_390 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_346 <= ix_in_reg_906;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_346 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ix_in_1_reg_369 <= add_ln28_reg_934;
    end else if (((icmp_ln23_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_369 <= ix_in_0_reg_346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_i_reg_424 <= j_reg_989;
    end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        j_0_i_reg_424 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_379 <= j_1_reg_919;
    end else if (((icmp_ln23_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_379 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_0_i_reg_412 <= grp_fu_636_p2;
    end else if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        sum_0_i_reg_412 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_701_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln27_reg_929 <= add_ln27_fu_722_p2;
        add_ln28_reg_934 <= add_ln28_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln9_reg_943 <= add_ln9_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_901 <= i_fu_659_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_1_reg_1000 <= icmp_ln13_1_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_1_reg_1000_pp0_iter2_reg <= icmp_ln13_1_reg_1000;
        icmp_ln13_1_reg_1000_pp0_iter3_reg <= icmp_ln13_1_reg_1000_pp0_iter2_reg;
        icmp_ln9_reg_939 <= icmp_ln9_fu_737_p2;
        icmp_ln9_reg_939_pp0_iter1_reg <= icmp_ln9_reg_939;
        select_ln14_2_reg_958_pp0_iter1_reg <= select_ln14_2_reg_958;
        zext_ln14_reg_1004_pp0_iter3_reg[4 : 0] <= zext_ln14_reg_1004[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_737_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_948 <= icmp_ln13_fu_755_p2;
        select_ln14_1_reg_953 <= select_ln14_1_fu_761_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_reg_906 <= ix_in_fu_665_p2;
        sub_ln27_reg_911[10 : 2] <= sub_ln27_fu_695_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_1_reg_919 <= j_1_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln9_reg_939 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        j_reg_989 <= j_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_737_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln14_2_reg_958 <= select_ln14_2_fu_769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_reg_1009 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln9_reg_939 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_7_i_reg_984 <= grp_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_1_reg_1000_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_i_reg_1025 <= grp_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_939_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln14_reg_1004[4 : 0] <= zext_ln14_fu_845_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_737_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_i_phi_fu_405_p4 = select_ln14_2_reg_958;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_405_p4 = i_0_i_reg_401;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_394_p4 = add_ln9_reg_943;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_394_p4 = indvar_flatten_reg_390;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_939 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_0_i_phi_fu_428_p4 = j_reg_989;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_428_p4 = j_0_i_reg_424;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln9_reg_939_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_sum_0_i_phi_fu_416_p4 = grp_fu_636_p2;
    end else begin
        ap_phi_mux_sum_0_i_phi_fu_416_p4 = sum_0_i_reg_412;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_address0 = sext_ln27_fu_733_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_address0 = grp_conv_1_fu_575_input_r_address0;
    end else begin
        conv_1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce0 = grp_conv_1_fu_575_input_r_ce0;
    end else begin
        conv_1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce1 = grp_conv_1_fu_575_input_r_ce1;
    end else begin
        conv_1_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_we0 = 1'b1;
    end else begin
        conv_1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_0_address0 = grp_max_pool_1_fu_600_conv_1_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_0_address0 = grp_conv_1_fu_575_conv_out_0_address0;
    end else begin
        conv_1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_0_ce0 = grp_max_pool_1_fu_600_conv_1_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_0_ce0 = grp_conv_1_fu_575_conv_out_0_ce0;
    end else begin
        conv_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_0_ce1 = grp_max_pool_1_fu_600_conv_1_out_0_ce1;
    end else begin
        conv_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_0_we0 = grp_conv_1_fu_575_conv_out_0_we0;
    end else begin
        conv_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_1_address0 = grp_max_pool_1_fu_600_conv_1_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_1_address0 = grp_conv_1_fu_575_conv_out_1_address0;
    end else begin
        conv_1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_1_ce0 = grp_max_pool_1_fu_600_conv_1_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_1_ce0 = grp_conv_1_fu_575_conv_out_1_ce0;
    end else begin
        conv_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_1_ce1 = grp_max_pool_1_fu_600_conv_1_out_1_ce1;
    end else begin
        conv_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_1_we0 = grp_conv_1_fu_575_conv_out_1_we0;
    end else begin
        conv_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_address0 = grp_max_pool_2_fu_620_conv_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_address0 = grp_conv_2_fu_447_conv_out_address0;
    end else begin
        conv_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_ce0 = grp_max_pool_2_fu_620_conv_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_ce0 = grp_conv_2_fu_447_conv_out_ce0;
    end else begin
        conv_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_ce1 = grp_max_pool_2_fu_620_conv_2_out_ce1;
    end else begin
        conv_2_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_we0 = grp_conv_2_fu_447_conv_out_we0;
    end else begin
        conv_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_address0 = zext_ln14_4_fu_781_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_address0 = grp_dense_1_fu_435_dense_1_out_address0;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_ce0 = grp_dense_1_fu_435_dense_1_out_ce0;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_out_we0 = grp_dense_1_fu_435_dense_1_out_we0;
    end else begin
        dense_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_bias_ce0 = 1'b1;
    end else begin
        dense_2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        dense_2_out_address0 = zext_ln14_reg_1004_pp0_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_2_out_address0 = grp_dense_out_fu_588_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dense_2_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        dense_2_out_ce0 = grp_dense_out_fu_588_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_1_reg_1000_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dense_2_out_we0 = 1'b1;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_2_weights_ce0 = 1'b1;
    end else begin
        dense_2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_address0 = grp_flat_fu_628_flat_array_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_address0 = grp_dense_1_fu_435_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_ce0 = grp_flat_fu_628_flat_array_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce0 = grp_dense_1_fu_435_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce1 = grp_dense_1_fu_435_flat_array_ce1;
    end else begin
        flat_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_we0 = grp_flat_fu_628_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_636_p0 = sum_reg_1009;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_636_p0 = select_ln14_fu_832_p3;
    end else begin
        grp_fu_636_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_636_p1 = dense_2_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_636_p1 = tmp_7_i_reg_984;
    end else begin
        grp_fu_636_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_address0 = grp_max_pool_1_fu_600_max_pool_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_address0 = grp_conv_2_fu_447_max_pool_1_out_0_address0;
    end else begin
        max_pool_1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_ce0 = grp_max_pool_1_fu_600_max_pool_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_ce0 = grp_conv_2_fu_447_max_pool_1_out_0_ce0;
    end else begin
        max_pool_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_ce1 = grp_conv_2_fu_447_max_pool_1_out_0_ce1;
    end else begin
        max_pool_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_we0 = grp_max_pool_1_fu_600_max_pool_out_0_we0;
    end else begin
        max_pool_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_address0 = grp_max_pool_1_fu_600_max_pool_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_address0 = grp_conv_2_fu_447_max_pool_1_out_1_address0;
    end else begin
        max_pool_1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_ce0 = grp_max_pool_1_fu_600_max_pool_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_ce0 = grp_conv_2_fu_447_max_pool_1_out_1_ce0;
    end else begin
        max_pool_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_ce1 = grp_conv_2_fu_447_max_pool_1_out_1_ce1;
    end else begin
        max_pool_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_we0 = grp_max_pool_1_fu_600_max_pool_out_1_we0;
    end else begin
        max_pool_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_address0 = grp_max_pool_1_fu_600_max_pool_out_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_address0 = grp_conv_2_fu_447_max_pool_1_out_2_address0;
    end else begin
        max_pool_1_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_ce0 = grp_max_pool_1_fu_600_max_pool_out_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_ce0 = grp_conv_2_fu_447_max_pool_1_out_2_ce0;
    end else begin
        max_pool_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_ce1 = grp_conv_2_fu_447_max_pool_1_out_2_ce1;
    end else begin
        max_pool_1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_we0 = grp_max_pool_1_fu_600_max_pool_out_2_we0;
    end else begin
        max_pool_1_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_address0 = grp_max_pool_1_fu_600_max_pool_out_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_address0 = grp_conv_2_fu_447_max_pool_1_out_3_address0;
    end else begin
        max_pool_1_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_ce0 = grp_max_pool_1_fu_600_max_pool_out_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_ce0 = grp_conv_2_fu_447_max_pool_1_out_3_ce0;
    end else begin
        max_pool_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_ce1 = grp_conv_2_fu_447_max_pool_1_out_3_ce1;
    end else begin
        max_pool_1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_we0 = grp_max_pool_1_fu_600_max_pool_out_3_we0;
    end else begin
        max_pool_1_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_address0 = grp_max_pool_1_fu_600_max_pool_out_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_address0 = grp_conv_2_fu_447_max_pool_1_out_4_address0;
    end else begin
        max_pool_1_out_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_ce0 = grp_max_pool_1_fu_600_max_pool_out_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_ce0 = grp_conv_2_fu_447_max_pool_1_out_4_ce0;
    end else begin
        max_pool_1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_ce1 = grp_conv_2_fu_447_max_pool_1_out_4_ce1;
    end else begin
        max_pool_1_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_we0 = grp_max_pool_1_fu_600_max_pool_out_4_we0;
    end else begin
        max_pool_1_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_address0 = grp_max_pool_1_fu_600_max_pool_out_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_address0 = grp_conv_2_fu_447_max_pool_1_out_5_address0;
    end else begin
        max_pool_1_out_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_ce0 = grp_max_pool_1_fu_600_max_pool_out_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_ce0 = grp_conv_2_fu_447_max_pool_1_out_5_ce0;
    end else begin
        max_pool_1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_ce1 = grp_conv_2_fu_447_max_pool_1_out_5_ce1;
    end else begin
        max_pool_1_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_we0 = grp_max_pool_1_fu_600_max_pool_out_5_we0;
    end else begin
        max_pool_1_out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_address0 = grp_flat_fu_628_max_pool_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_address0 = grp_max_pool_2_fu_620_max_pool_out_address0;
    end else begin
        max_pool_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_ce0 = grp_flat_fu_628_max_pool_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_ce0 = grp_max_pool_2_fu_620_max_pool_out_ce0;
    end else begin
        max_pool_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_we0 = grp_max_pool_2_fu_620_max_pool_out_we0;
    end else begin
        max_pool_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_653_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_conv_1_fu_575_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_max_pool_1_fu_600_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_2_fu_447_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_max_pool_2_fu_620_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_flat_fu_628_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_dense_1_fu_435_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_737_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_737_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_dense_out_fu_588_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_fu_816_p2 = (sub_ln14_fu_810_p2 + zext_ln13_fu_777_p1);

assign add_ln27_fu_722_p2 = (sub_ln27_reg_911 + zext_ln27_3_fu_718_p1);

assign add_ln28_fu_727_p2 = (ix_in_1_reg_369 + 10'd1);

assign add_ln9_fu_743_p2 = (ap_phi_mux_indvar_flatten_phi_fu_394_p4 + 11'd1);

assign and_ln19_fu_884_p2 = (or_ln19_fu_878_p2 & grp_fu_647_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln19_fu_849_p1 = tmp_i_reg_1025;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_713_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign dense_2_bias_address0 = zext_ln14_fu_845_p1;

assign dense_2_out_d0 = ((and_ln19_fu_884_p2[0:0] === 1'b1) ? 32'd0 : tmp_i_reg_1025);

assign dense_2_weights_address0 = sext_ln14_fu_822_p1;

assign grp_conv_1_fu_575_ap_start = grp_conv_1_fu_575_ap_start_reg;

assign grp_conv_2_fu_447_ap_start = grp_conv_2_fu_447_ap_start_reg;

assign grp_dense_1_fu_435_ap_start = grp_dense_1_fu_435_ap_start_reg;

assign grp_dense_out_fu_588_ap_start = grp_dense_out_fu_588_ap_start_reg;

assign grp_flat_fu_628_ap_start = grp_flat_fu_628_ap_start_reg;

assign grp_max_pool_1_fu_600_ap_start = grp_max_pool_1_fu_600_ap_start_reg;

assign grp_max_pool_2_fu_620_ap_start = grp_max_pool_2_fu_620_ap_start_reg;

assign i_1_fu_749_p2 = (ap_phi_mux_i_0_i_phi_fu_405_p4 + 5'd1);

assign i_fu_659_p2 = (i_0_reg_358 + 5'd1);

assign icmp_ln13_1_fu_840_p2 = ((j_reg_989 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_755_p2 = ((ap_phi_mux_j_0_i_phi_fu_428_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_872_p2 = ((trunc_ln19_fu_862_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_866_p2 = ((tmp_fu_852_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_653_p2 = ((i_0_reg_358 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_701_p2 = ((j_0_reg_379 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_737_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_394_p4 == 11'd1500) ? 1'b1 : 1'b0);

assign ix_in_fu_665_p2 = (ix_in_0_reg_346 + 10'd28);

assign j_1_fu_707_p2 = (j_0_reg_379 + 5'd1);

assign j_fu_827_p2 = (select_ln14_1_reg_953 + 6'd1);

assign or_ln19_fu_878_p2 = (icmp_ln19_fu_866_p2 | icmp_ln19_2_fu_872_p2);

assign prediction_Addr_A = grp_dense_out_fu_588_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_588_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_588_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_588_prediction_WEN_A;

assign select_ln14_1_fu_761_p3 = ((icmp_ln13_fu_755_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_j_0_i_phi_fu_428_p4);

assign select_ln14_2_fu_769_p3 = ((icmp_ln13_fu_755_p2[0:0] === 1'b1) ? i_1_fu_749_p2 : ap_phi_mux_i_0_i_phi_fu_405_p4);

assign select_ln14_fu_832_p3 = ((icmp_ln13_reg_948[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_sum_0_i_phi_fu_416_p4);

assign sext_ln14_fu_822_p1 = $signed(add_ln14_fu_816_p2);

assign sext_ln27_fu_733_p1 = $signed(add_ln27_reg_929);

assign sub_ln14_fu_810_p2 = (zext_ln14_401_fu_794_p1 - zext_ln14_402_fu_806_p1);

assign sub_ln27_fu_695_p2 = (zext_ln27_fu_679_p1 - zext_ln27_2_fu_691_p1);

assign tmp_45_fu_671_p3 = {{i_0_reg_358}, {5'd0}};

assign tmp_46_fu_683_p3 = {{i_0_reg_358}, {2'd0}};

assign tmp_47_fu_786_p3 = {{select_ln14_1_fu_761_p3}, {5'd0}};

assign tmp_48_fu_798_p3 = {{select_ln14_1_fu_761_p3}, {1'd0}};

assign tmp_fu_852_p4 = {{bitcast_ln19_fu_849_p1[30:23]}};

assign trunc_ln19_fu_862_p1 = bitcast_ln19_fu_849_p1[22:0];

assign zext_ln13_fu_777_p1 = select_ln14_2_fu_769_p3;

assign zext_ln14_401_fu_794_p1 = tmp_47_fu_786_p3;

assign zext_ln14_402_fu_806_p1 = tmp_48_fu_798_p3;

assign zext_ln14_4_fu_781_p1 = select_ln14_1_fu_761_p3;

assign zext_ln14_fu_845_p1 = select_ln14_2_reg_958_pp0_iter1_reg;

assign zext_ln27_1_fu_713_p1 = ix_in_1_reg_369;

assign zext_ln27_2_fu_691_p1 = tmp_46_fu_683_p3;

assign zext_ln27_3_fu_718_p1 = j_0_reg_379;

assign zext_ln27_fu_679_p1 = tmp_45_fu_671_p3;

always @ (posedge ap_clk) begin
    sub_ln27_reg_911[1:0] <= 2'b00;
    zext_ln14_reg_1004[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln14_reg_1004_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //cnn
