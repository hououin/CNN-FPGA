// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state46 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [9:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_r_address0;
reg input_r_ce0;
reg[9:0] input_r_address1;
reg input_r_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] conv_1_weights_0_0_address0;
reg    conv_1_weights_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_q0;
wire   [2:0] conv_1_weights_0_1_address0;
reg    conv_1_weights_0_1_ce0;
wire   [31:0] conv_1_weights_0_1_q0;
wire   [2:0] conv_1_weights_0_2_address0;
reg    conv_1_weights_0_2_ce0;
wire   [31:0] conv_1_weights_0_2_q0;
wire   [2:0] conv_1_weights_1_0_address0;
reg    conv_1_weights_1_0_ce0;
wire   [31:0] conv_1_weights_1_0_q0;
wire   [2:0] conv_1_weights_1_1_address0;
reg    conv_1_weights_1_1_ce0;
wire   [31:0] conv_1_weights_1_1_q0;
wire   [2:0] conv_1_weights_1_2_address0;
reg    conv_1_weights_1_2_ce0;
wire   [31:0] conv_1_weights_1_2_q0;
wire   [2:0] conv_1_weights_2_0_address0;
reg    conv_1_weights_2_0_ce0;
wire   [31:0] conv_1_weights_2_0_q0;
wire   [2:0] conv_1_weights_2_1_address0;
reg    conv_1_weights_2_1_ce0;
wire   [31:0] conv_1_weights_2_1_q0;
wire   [2:0] conv_1_weights_2_2_address0;
reg    conv_1_weights_2_2_ce0;
wire   [31:0] conv_1_weights_2_2_q0;
wire   [2:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [11:0] indvar_flatten30_reg_330;
reg   [4:0] r_0_reg_341;
reg   [7:0] indvar_flatten_reg_353;
reg   [4:0] c_0_reg_365;
reg   [2:0] f_0_reg_376;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_state28_pp0_stage1_iter5;
wire    ap_block_state33_pp0_stage1_iter6;
wire    ap_block_state38_pp0_stage1_iter7;
wire    ap_block_state43_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_923;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_state24_pp0_stage2_iter4;
wire    ap_block_state29_pp0_stage2_iter5;
wire    ap_block_state34_pp0_stage2_iter6;
wire    ap_block_state39_pp0_stage2_iter7;
wire    ap_block_state44_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_state25_pp0_stage3_iter4;
wire    ap_block_state30_pp0_stage3_iter5;
wire    ap_block_state35_pp0_stage3_iter6;
wire    ap_block_state40_pp0_stage3_iter7;
wire    ap_block_state45_pp0_stage3_iter8;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_state26_pp0_stage4_iter4;
wire    ap_block_state31_pp0_stage4_iter5;
wire    ap_block_state36_pp0_stage4_iter6;
wire    ap_block_state41_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_state27_pp0_stage0_iter5;
wire    ap_block_state32_pp0_stage0_iter6;
wire    ap_block_state37_pp0_stage0_iter7;
wire    ap_block_state42_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_392_p2;
reg   [31:0] reg_424;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln8_reg_923_pp0_iter7_reg;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln8_reg_923_pp0_iter8_reg;
wire   [4:0] r_fu_430_p2;
reg   [4:0] r_reg_918;
wire   [0:0] icmp_ln8_fu_448_p2;
reg   [0:0] icmp_ln8_reg_923_pp0_iter1_reg;
reg   [0:0] icmp_ln8_reg_923_pp0_iter2_reg;
reg   [0:0] icmp_ln8_reg_923_pp0_iter3_reg;
reg   [0:0] icmp_ln8_reg_923_pp0_iter4_reg;
reg   [0:0] icmp_ln8_reg_923_pp0_iter5_reg;
reg   [0:0] icmp_ln8_reg_923_pp0_iter6_reg;
wire   [11:0] add_ln8_fu_454_p2;
reg   [11:0] add_ln8_reg_927;
wire   [0:0] icmp_ln11_fu_460_p2;
reg   [0:0] icmp_ln11_reg_932;
wire   [4:0] select_ln30_1_fu_474_p3;
reg   [4:0] select_ln30_1_reg_939;
reg   [4:0] select_ln30_1_reg_939_pp0_iter1_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter2_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter3_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter4_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter5_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter6_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter7_reg;
reg   [4:0] select_ln30_1_reg_939_pp0_iter8_reg;
wire   [10:0] sub_ln23_fu_506_p2;
reg   [10:0] sub_ln23_reg_945;
wire   [2:0] select_ln30_6_fu_558_p3;
reg   [2:0] select_ln30_6_reg_950;
reg   [2:0] select_ln30_6_reg_950_pp0_iter1_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter2_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter3_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter4_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter5_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter6_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter7_reg;
reg   [2:0] select_ln30_6_reg_950_pp0_iter8_reg;
wire   [4:0] select_ln30_7_fu_566_p3;
reg   [4:0] select_ln30_7_reg_956;
reg   [4:0] select_ln30_7_reg_956_pp0_iter1_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter2_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter3_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter4_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter5_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter6_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter7_reg;
reg   [4:0] select_ln30_7_reg_956_pp0_iter8_reg;
wire   [10:0] zext_ln30_2_fu_574_p1;
reg   [10:0] zext_ln30_2_reg_962;
wire   [10:0] zext_ln30_4_fu_603_p1;
reg   [10:0] zext_ln30_4_reg_973;
wire   [4:0] select_ln30_9_fu_624_p3;
reg   [4:0] select_ln30_9_reg_984;
wire   [63:0] zext_ln23_fu_632_p1;
reg   [63:0] zext_ln23_reg_989;
reg   [63:0] zext_ln23_reg_989_pp0_iter1_reg;
reg   [63:0] zext_ln23_reg_989_pp0_iter2_reg;
reg   [63:0] zext_ln23_reg_989_pp0_iter3_reg;
reg   [63:0] zext_ln23_reg_989_pp0_iter4_reg;
reg   [63:0] zext_ln23_reg_989_pp0_iter5_reg;
reg   [63:0] zext_ln23_reg_989_pp0_iter6_reg;
wire   [10:0] sub_ln23_1_fu_681_p2;
reg   [10:0] sub_ln23_1_reg_1039;
wire   [4:0] add_ln30_fu_694_p2;
reg   [4:0] add_ln30_reg_1045;
wire   [10:0] zext_ln30_5_fu_710_p1;
reg   [10:0] zext_ln30_5_reg_1056;
reg   [31:0] conv_1_weights_0_2_l_reg_1077;
reg   [31:0] conv_1_weights_1_0_l_reg_1082;
reg   [31:0] conv_1_weights_1_1_l_reg_1087;
reg   [31:0] conv_1_weights_1_2_l_reg_1092;
reg   [31:0] conv_1_weights_2_0_l_reg_1097;
reg   [31:0] conv_1_weights_2_1_l_reg_1102;
reg   [31:0] conv_1_weights_2_2_l_reg_1107;
wire   [7:0] add_ln11_fu_723_p2;
reg   [7:0] add_ln11_reg_1112;
wire   [10:0] add_ln23_6_fu_757_p2;
reg   [10:0] add_ln23_6_reg_1117;
wire   [10:0] add_ln23_10_fu_771_p2;
reg   [10:0] add_ln23_10_reg_1127;
wire   [10:0] add_ln23_14_fu_785_p2;
reg   [10:0] add_ln23_14_reg_1137;
wire   [31:0] grp_fu_396_p2;
reg   [31:0] tmp_8_reg_1142;
wire   [31:0] grp_fu_402_p2;
reg   [31:0] tmp_0_1_reg_1147;
reg   [31:0] tmp_0_2_reg_1162;
reg   [31:0] tmp_0_2_reg_1162_pp0_iter1_reg;
reg   [31:0] tmp_1_reg_1167;
reg   [31:0] tmp_1_reg_1167_pp0_iter1_reg;
reg   [31:0] tmp_1_reg_1167_pp0_iter2_reg;
reg   [31:0] tmp_1_1_reg_1177;
reg   [31:0] tmp_1_1_reg_1177_pp0_iter1_reg;
reg   [31:0] tmp_1_1_reg_1177_pp0_iter2_reg;
reg   [31:0] tmp_1_2_reg_1182;
reg   [31:0] tmp_1_2_reg_1182_pp0_iter1_reg;
reg   [31:0] tmp_1_2_reg_1182_pp0_iter2_reg;
reg   [31:0] tmp_1_2_reg_1182_pp0_iter3_reg;
wire   [2:0] f_fu_802_p2;
reg   [2:0] f_reg_1187;
wire   [7:0] select_ln11_fu_807_p3;
reg   [7:0] select_ln11_reg_1192;
reg   [31:0] tmp_2_reg_1197;
reg   [31:0] tmp_2_reg_1197_pp0_iter2_reg;
reg   [31:0] tmp_2_reg_1197_pp0_iter3_reg;
reg   [31:0] tmp_2_reg_1197_pp0_iter4_reg;
reg   [31:0] tmp_2_reg_1197_pp0_iter5_reg;
reg   [31:0] tmp_2_1_reg_1202;
reg   [31:0] tmp_2_1_reg_1202_pp0_iter2_reg;
reg   [31:0] tmp_2_1_reg_1202_pp0_iter3_reg;
reg   [31:0] tmp_2_1_reg_1202_pp0_iter4_reg;
reg   [31:0] tmp_2_1_reg_1202_pp0_iter5_reg;
reg   [31:0] tmp_2_1_reg_1202_pp0_iter6_reg;
wire   [31:0] grp_fu_387_p2;
reg   [31:0] w_sum_4_reg_1207;
reg   [31:0] tmp_2_2_reg_1212;
reg   [31:0] tmp_2_2_reg_1212_pp0_iter2_reg;
reg   [31:0] tmp_2_2_reg_1212_pp0_iter3_reg;
reg   [31:0] tmp_2_2_reg_1212_pp0_iter4_reg;
reg   [31:0] tmp_2_2_reg_1212_pp0_iter5_reg;
reg   [31:0] tmp_2_2_reg_1212_pp0_iter6_reg;
reg   [31:0] w_sum_4_0_1_reg_1217;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] w_sum_4_0_2_reg_1222;
reg   [31:0] w_sum_4_1_reg_1227;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] w_sum_4_1_1_reg_1232;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] w_sum_4_1_2_reg_1237;
reg    ap_enable_reg_pp0_iter5;
reg   [31:0] w_sum_4_2_reg_1242;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] w_sum_4_2_1_reg_1247;
reg   [31:0] conv_1_bias_load_reg_1257;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage3_subdone;
reg   [11:0] ap_phi_mux_indvar_flatten30_phi_fu_334_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_345_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_357_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_369_p4;
reg   [2:0] ap_phi_mux_f_0_phi_fu_380_p4;
wire   [63:0] zext_ln23_7_fu_584_p1;
wire   [63:0] zext_ln23_9_fu_613_p1;
wire   [63:0] zext_ln23_8_fu_705_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln23_11_fu_718_p1;
wire   [63:0] zext_ln23_10_fu_766_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln23_12_fu_780_p1;
wire  signed [63:0] sext_ln23_fu_790_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln23_1_fu_794_p1;
wire   [63:0] zext_ln23_13_fu_798_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln30_7_fu_852_p1;
reg   [31:0] grp_fu_387_p0;
reg   [31:0] grp_fu_387_p1;
reg   [31:0] grp_fu_392_p0;
reg   [31:0] grp_fu_392_p1;
reg   [31:0] grp_fu_396_p0;
reg   [31:0] grp_fu_402_p0;
wire   [9:0] tmp_11_fu_482_p3;
wire   [6:0] tmp_12_fu_494_p3;
wire   [10:0] zext_ln23_1_fu_490_p1;
wire   [10:0] zext_ln23_2_fu_502_p1;
wire   [4:0] c_fu_436_p2;
wire   [4:0] add_ln23_1_fu_442_p2;
wire   [0:0] icmp_ln14_fu_534_p2;
wire   [0:0] xor_ln30_fu_528_p2;
wire   [4:0] select_ln30_fu_466_p3;
wire   [0:0] and_ln30_fu_540_p2;
wire   [0:0] or_ln30_fu_552_p2;
wire   [4:0] add_ln23_3_fu_546_p2;
wire   [10:0] add_ln23_4_fu_578_p2;
wire   [4:0] add_ln23_7_fu_589_p2;
wire   [4:0] select_ln30_4_fu_512_p3;
wire   [4:0] select_ln30_8_fu_595_p3;
wire   [10:0] add_ln23_8_fu_607_p2;
wire   [4:0] add_ln23_11_fu_618_p2;
wire   [4:0] select_ln30_5_fu_520_p3;
wire   [4:0] add_ln23_fu_645_p2;
wire   [4:0] select_ln30_2_fu_651_p3;
wire   [9:0] tmp_13_fu_657_p3;
wire   [6:0] tmp_14_fu_669_p3;
wire   [10:0] zext_ln23_3_fu_665_p1;
wire   [10:0] zext_ln23_4_fu_677_p1;
wire   [4:0] select_ln30_3_fu_687_p3;
wire   [10:0] add_ln23_5_fu_700_p2;
wire   [10:0] add_ln23_12_fu_713_p2;
wire   [9:0] tmp_9_fu_729_p3;
wire   [6:0] tmp_10_fu_740_p3;
wire   [10:0] zext_ln23_5_fu_736_p1;
wire   [10:0] zext_ln23_6_fu_747_p1;
wire   [10:0] sub_ln23_2_fu_751_p2;
wire   [10:0] add_ln23_9_fu_762_p2;
wire   [10:0] add_ln23_13_fu_776_p2;
wire   [9:0] grp_fu_908_p3;
wire   [10:0] tmp_15_fu_826_p3;
wire   [12:0] p_shl_cast_fu_819_p3;
wire   [12:0] zext_ln30_3_fu_833_p1;
wire   [12:0] sub_ln30_fu_837_p2;
wire   [12:0] zext_ln30_6_fu_843_p1;
wire   [12:0] add_ln30_2_fu_846_p2;
wire   [31:0] bitcast_ln29_fu_857_p1;
wire   [7:0] tmp_fu_861_p4;
wire   [22:0] trunc_ln29_fu_871_p1;
wire   [0:0] icmp_ln29_7_fu_881_p2;
wire   [0:0] icmp_ln29_fu_875_p2;
wire   [0:0] or_ln29_fu_887_p2;
wire   [0:0] grp_fu_408_p2;
wire   [0:0] and_ln29_fu_893_p2;
wire   [5:0] grp_fu_908_p0;
wire   [4:0] grp_fu_908_p1;
wire   [4:0] grp_fu_908_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_CS_fsm_state46;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_908_p10;
wire   [9:0] grp_fu_908_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_address0),
    .ce0(conv_1_weights_0_0_ce0),
    .q0(conv_1_weights_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_address0),
    .ce0(conv_1_weights_0_1_ce0),
    .q0(conv_1_weights_0_1_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_address0),
    .ce0(conv_1_weights_0_2_ce0),
    .q0(conv_1_weights_0_2_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_address0),
    .ce0(conv_1_weights_1_0_ce0),
    .q0(conv_1_weights_1_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_address0),
    .ce0(conv_1_weights_1_1_ce0),
    .q0(conv_1_weights_1_1_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_address0),
    .ce0(conv_1_weights_1_2_ce0),
    .q0(conv_1_weights_1_2_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_address0),
    .ce0(conv_1_weights_2_0_ce0),
    .q0(conv_1_weights_2_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_address0),
    .ce0(conv_1_weights_2_1_ce0),
    .q0(conv_1_weights_2_1_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_address0),
    .ce0(conv_1_weights_2_2_ce0),
    .q0(conv_1_weights_2_2_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_387_p0),
    .din1(grp_fu_387_p1),
    .ce(1'b1),
    .dout(grp_fu_387_p2)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_392_p0),
    .din1(grp_fu_392_p1),
    .ce(1'b1),
    .dout(grp_fu_392_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_396_p0),
    .din1(input_r_q0),
    .ce(1'b1),
    .dout(grp_fu_396_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p0),
    .din1(input_r_q1),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

cnn_fcmp_32ns_32nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32nmb6_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_392_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_408_p2)
);

cnn_mac_muladd_6nncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_6nncg_U6(
    .din0(grp_fu_908_p0),
    .din1(grp_fu_908_p1),
    .din2(grp_fu_908_p2),
    .dout(grp_fu_908_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        c_0_reg_365 <= select_ln30_7_reg_956;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_365 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        f_0_reg_376 <= f_reg_1187;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_376 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        indvar_flatten30_reg_330 <= add_ln8_reg_927;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_330 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        indvar_flatten_reg_353 <= select_ln11_reg_1192;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_353 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        r_0_reg_341 <= select_ln30_1_reg_939;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_341 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln11_reg_932 == 1'd0) & (icmp_ln8_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln11_reg_1112 <= add_ln11_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_923 == 1'd0))) begin
        add_ln23_10_reg_1127 <= add_ln23_10_fu_771_p2;
        add_ln23_14_reg_1137 <= add_ln23_14_fu_785_p2;
        add_ln23_6_reg_1117 <= add_ln23_6_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_923 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln30_reg_1045 <= add_ln30_fu_694_p2;
        conv_1_weights_0_2_l_reg_1077 <= conv_1_weights_0_2_q0;
        conv_1_weights_1_0_l_reg_1082 <= conv_1_weights_1_0_q0;
        conv_1_weights_1_1_l_reg_1087 <= conv_1_weights_1_1_q0;
        conv_1_weights_1_2_l_reg_1092 <= conv_1_weights_1_2_q0;
        conv_1_weights_2_0_l_reg_1097 <= conv_1_weights_2_0_q0;
        conv_1_weights_2_1_l_reg_1102 <= conv_1_weights_2_1_q0;
        conv_1_weights_2_2_l_reg_1107 <= conv_1_weights_2_2_q0;
        sub_ln23_1_reg_1039[10 : 2] <= sub_ln23_1_fu_681_p2[10 : 2];
        zext_ln30_5_reg_1056[4 : 0] <= zext_ln30_5_fu_710_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_927 <= add_ln8_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_923_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_bias_load_reg_1257 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_923 == 1'd0))) begin
        f_reg_1187 <= f_fu_802_p2;
        select_ln11_reg_1192 <= select_ln11_fu_807_p3;
        tmp_1_1_reg_1177 <= grp_fu_396_p2;
        tmp_1_2_reg_1182 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_448_p2 == 1'd0))) begin
        icmp_ln11_reg_932 <= icmp_ln11_fu_460_p2;
        select_ln30_6_reg_950 <= select_ln30_6_fu_558_p3;
        select_ln30_9_reg_984 <= select_ln30_9_fu_624_p3;
        sub_ln23_reg_945[10 : 2] <= sub_ln23_fu_506_p2[10 : 2];
        zext_ln23_reg_989[2 : 0] <= zext_ln23_fu_632_p1[2 : 0];
        zext_ln30_2_reg_962[4 : 0] <= zext_ln30_2_fu_574_p1[4 : 0];
        zext_ln30_4_reg_973[4 : 0] <= zext_ln30_4_fu_603_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_923 <= icmp_ln8_fu_448_p2;
        icmp_ln8_reg_923_pp0_iter1_reg <= icmp_ln8_reg_923;
        icmp_ln8_reg_923_pp0_iter2_reg <= icmp_ln8_reg_923_pp0_iter1_reg;
        icmp_ln8_reg_923_pp0_iter3_reg <= icmp_ln8_reg_923_pp0_iter2_reg;
        icmp_ln8_reg_923_pp0_iter4_reg <= icmp_ln8_reg_923_pp0_iter3_reg;
        icmp_ln8_reg_923_pp0_iter5_reg <= icmp_ln8_reg_923_pp0_iter4_reg;
        icmp_ln8_reg_923_pp0_iter6_reg <= icmp_ln8_reg_923_pp0_iter5_reg;
        icmp_ln8_reg_923_pp0_iter7_reg <= icmp_ln8_reg_923_pp0_iter6_reg;
        icmp_ln8_reg_923_pp0_iter8_reg <= icmp_ln8_reg_923_pp0_iter7_reg;
        r_reg_918 <= r_fu_430_p2;
        select_ln30_1_reg_939_pp0_iter1_reg <= select_ln30_1_reg_939;
        select_ln30_1_reg_939_pp0_iter2_reg <= select_ln30_1_reg_939_pp0_iter1_reg;
        select_ln30_1_reg_939_pp0_iter3_reg <= select_ln30_1_reg_939_pp0_iter2_reg;
        select_ln30_1_reg_939_pp0_iter4_reg <= select_ln30_1_reg_939_pp0_iter3_reg;
        select_ln30_1_reg_939_pp0_iter5_reg <= select_ln30_1_reg_939_pp0_iter4_reg;
        select_ln30_1_reg_939_pp0_iter6_reg <= select_ln30_1_reg_939_pp0_iter5_reg;
        select_ln30_1_reg_939_pp0_iter7_reg <= select_ln30_1_reg_939_pp0_iter6_reg;
        select_ln30_1_reg_939_pp0_iter8_reg <= select_ln30_1_reg_939_pp0_iter7_reg;
        select_ln30_6_reg_950_pp0_iter1_reg <= select_ln30_6_reg_950;
        select_ln30_6_reg_950_pp0_iter2_reg <= select_ln30_6_reg_950_pp0_iter1_reg;
        select_ln30_6_reg_950_pp0_iter3_reg <= select_ln30_6_reg_950_pp0_iter2_reg;
        select_ln30_6_reg_950_pp0_iter4_reg <= select_ln30_6_reg_950_pp0_iter3_reg;
        select_ln30_6_reg_950_pp0_iter5_reg <= select_ln30_6_reg_950_pp0_iter4_reg;
        select_ln30_6_reg_950_pp0_iter6_reg <= select_ln30_6_reg_950_pp0_iter5_reg;
        select_ln30_6_reg_950_pp0_iter7_reg <= select_ln30_6_reg_950_pp0_iter6_reg;
        select_ln30_6_reg_950_pp0_iter8_reg <= select_ln30_6_reg_950_pp0_iter7_reg;
        select_ln30_7_reg_956_pp0_iter1_reg <= select_ln30_7_reg_956;
        select_ln30_7_reg_956_pp0_iter2_reg <= select_ln30_7_reg_956_pp0_iter1_reg;
        select_ln30_7_reg_956_pp0_iter3_reg <= select_ln30_7_reg_956_pp0_iter2_reg;
        select_ln30_7_reg_956_pp0_iter4_reg <= select_ln30_7_reg_956_pp0_iter3_reg;
        select_ln30_7_reg_956_pp0_iter5_reg <= select_ln30_7_reg_956_pp0_iter4_reg;
        select_ln30_7_reg_956_pp0_iter6_reg <= select_ln30_7_reg_956_pp0_iter5_reg;
        select_ln30_7_reg_956_pp0_iter7_reg <= select_ln30_7_reg_956_pp0_iter6_reg;
        select_ln30_7_reg_956_pp0_iter8_reg <= select_ln30_7_reg_956_pp0_iter7_reg;
        tmp_2_1_reg_1202_pp0_iter2_reg <= tmp_2_1_reg_1202;
        tmp_2_1_reg_1202_pp0_iter3_reg <= tmp_2_1_reg_1202_pp0_iter2_reg;
        tmp_2_1_reg_1202_pp0_iter4_reg <= tmp_2_1_reg_1202_pp0_iter3_reg;
        tmp_2_1_reg_1202_pp0_iter5_reg <= tmp_2_1_reg_1202_pp0_iter4_reg;
        tmp_2_1_reg_1202_pp0_iter6_reg <= tmp_2_1_reg_1202_pp0_iter5_reg;
        tmp_2_reg_1197_pp0_iter2_reg <= tmp_2_reg_1197;
        tmp_2_reg_1197_pp0_iter3_reg <= tmp_2_reg_1197_pp0_iter2_reg;
        tmp_2_reg_1197_pp0_iter4_reg <= tmp_2_reg_1197_pp0_iter3_reg;
        tmp_2_reg_1197_pp0_iter5_reg <= tmp_2_reg_1197_pp0_iter4_reg;
        zext_ln23_reg_989_pp0_iter1_reg[2 : 0] <= zext_ln23_reg_989[2 : 0];
        zext_ln23_reg_989_pp0_iter2_reg[2 : 0] <= zext_ln23_reg_989_pp0_iter1_reg[2 : 0];
        zext_ln23_reg_989_pp0_iter3_reg[2 : 0] <= zext_ln23_reg_989_pp0_iter2_reg[2 : 0];
        zext_ln23_reg_989_pp0_iter4_reg[2 : 0] <= zext_ln23_reg_989_pp0_iter3_reg[2 : 0];
        zext_ln23_reg_989_pp0_iter5_reg[2 : 0] <= zext_ln23_reg_989_pp0_iter4_reg[2 : 0];
        zext_ln23_reg_989_pp0_iter6_reg[2 : 0] <= zext_ln23_reg_989_pp0_iter5_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_923_pp0_iter7_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_923_pp0_iter8_reg == 1'd0)))) begin
        reg_424 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_448_p2 == 1'd0))) begin
        select_ln30_1_reg_939 <= select_ln30_1_fu_474_p3;
        select_ln30_7_reg_956 <= select_ln30_7_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_923 == 1'd0))) begin
        tmp_0_1_reg_1147 <= grp_fu_402_p2;
        tmp_8_reg_1142 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_923 == 1'd0))) begin
        tmp_0_2_reg_1162 <= grp_fu_396_p2;
        tmp_1_reg_1167 <= grp_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_0_2_reg_1162_pp0_iter1_reg <= tmp_0_2_reg_1162;
        tmp_1_reg_1167_pp0_iter1_reg <= tmp_1_reg_1167;
        tmp_1_reg_1167_pp0_iter2_reg <= tmp_1_reg_1167_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_1_1_reg_1177_pp0_iter1_reg <= tmp_1_1_reg_1177;
        tmp_1_1_reg_1177_pp0_iter2_reg <= tmp_1_1_reg_1177_pp0_iter1_reg;
        tmp_1_2_reg_1182_pp0_iter1_reg <= tmp_1_2_reg_1182;
        tmp_1_2_reg_1182_pp0_iter2_reg <= tmp_1_2_reg_1182_pp0_iter1_reg;
        tmp_1_2_reg_1182_pp0_iter3_reg <= tmp_1_2_reg_1182_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        tmp_2_1_reg_1202 <= grp_fu_402_p2;
        tmp_2_reg_1197 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_923_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_2_2_reg_1212 <= grp_fu_396_p2;
        w_sum_4_reg_1207 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_2_2_reg_1212_pp0_iter2_reg <= tmp_2_2_reg_1212;
        tmp_2_2_reg_1212_pp0_iter3_reg <= tmp_2_2_reg_1212_pp0_iter2_reg;
        tmp_2_2_reg_1212_pp0_iter4_reg <= tmp_2_2_reg_1212_pp0_iter3_reg;
        tmp_2_2_reg_1212_pp0_iter5_reg <= tmp_2_2_reg_1212_pp0_iter4_reg;
        tmp_2_2_reg_1212_pp0_iter6_reg <= tmp_2_2_reg_1212_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923_pp0_iter1_reg == 1'd0))) begin
        w_sum_4_0_1_reg_1217 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_923_pp0_iter2_reg == 1'd0))) begin
        w_sum_4_0_2_reg_1222 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_923_pp0_iter4_reg == 1'd0))) begin
        w_sum_4_1_1_reg_1232 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_923_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_4_1_2_reg_1237 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_923_pp0_iter3_reg == 1'd0))) begin
        w_sum_4_1_reg_1227 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_923_pp0_iter6_reg == 1'd0))) begin
        w_sum_4_2_1_reg_1247 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923_pp0_iter5_reg == 1'd0))) begin
        w_sum_4_2_reg_1242 <= grp_fu_392_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_369_p4 = select_ln30_7_reg_956;
    end else begin
        ap_phi_mux_c_0_phi_fu_369_p4 = c_0_reg_365;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_380_p4 = f_reg_1187;
    end else begin
        ap_phi_mux_f_0_phi_fu_380_p4 = f_0_reg_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_334_p4 = add_ln8_reg_927;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_334_p4 = indvar_flatten30_reg_330;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_357_p4 = select_ln11_reg_1192;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_357_p4 = indvar_flatten_reg_353;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_923 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_345_p4 = select_ln30_1_reg_939;
    end else begin
        ap_phi_mux_r_0_phi_fu_345_p4 = r_0_reg_341;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_923_pp0_iter8_reg == 1'd0))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_387_p0 = w_sum_4_1_reg_1227;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_387_p0 = w_sum_4_0_2_reg_1222;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_387_p0 = w_sum_4_0_1_reg_1217;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_387_p0 = w_sum_4_reg_1207;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_387_p0 = tmp_8_reg_1142;
    end else begin
        grp_fu_387_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_387_p1 = tmp_1_1_reg_1177_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_387_p1 = tmp_1_reg_1167_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_387_p1 = tmp_0_2_reg_1162_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_387_p1 = tmp_0_1_reg_1147;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_387_p1 = 32'd0;
    end else begin
        grp_fu_387_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_392_p0 = reg_424;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_392_p0 = w_sum_4_2_1_reg_1247;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_392_p0 = w_sum_4_2_reg_1242;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_392_p0 = w_sum_4_1_2_reg_1237;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_392_p0 = w_sum_4_1_1_reg_1232;
    end else begin
        grp_fu_392_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_392_p1 = conv_1_bias_load_reg_1257;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_392_p1 = tmp_2_2_reg_1212_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_392_p1 = tmp_2_1_reg_1202_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_392_p1 = tmp_2_reg_1197_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_392_p1 = tmp_1_2_reg_1182_pp0_iter3_reg;
    end else begin
        grp_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_396_p0 = conv_1_weights_2_2_l_reg_1107;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_2_0_l_reg_1097;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_1_1_l_reg_1087;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_0_2_l_reg_1077;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_396_p0 = conv_1_weights_0_0_q0;
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_402_p0 = conv_1_weights_2_1_l_reg_1102;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_402_p0 = conv_1_weights_1_2_l_reg_1092;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_402_p0 = conv_1_weights_1_0_l_reg_1082;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_402_p0 = conv_1_weights_0_1_q0;
        end else begin
            grp_fu_402_p0 = 'bx;
        end
    end else begin
        grp_fu_402_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = zext_ln23_13_fu_798_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = sext_ln23_fu_790_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = zext_ln23_10_fu_766_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln23_11_fu_718_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln23_7_fu_584_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = sext_ln23_1_fu_794_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln23_12_fu_780_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln23_8_fu_705_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address1 = zext_ln23_9_fu_613_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_723_p2 = (8'd1 + indvar_flatten_reg_353);

assign add_ln23_10_fu_771_p2 = (sub_ln23_2_fu_751_p2 + zext_ln30_4_reg_973);

assign add_ln23_11_fu_618_p2 = (5'd3 + select_ln30_fu_466_p3);

assign add_ln23_12_fu_713_p2 = (sub_ln23_reg_945 + zext_ln30_5_fu_710_p1);

assign add_ln23_13_fu_776_p2 = (sub_ln23_1_reg_1039 + zext_ln30_5_reg_1056);

assign add_ln23_14_fu_785_p2 = (sub_ln23_2_fu_751_p2 + zext_ln30_5_reg_1056);

assign add_ln23_1_fu_442_p2 = (ap_phi_mux_c_0_phi_fu_369_p4 + 5'd2);

assign add_ln23_3_fu_546_p2 = (5'd1 + select_ln30_fu_466_p3);

assign add_ln23_4_fu_578_p2 = (sub_ln23_fu_506_p2 + zext_ln30_2_fu_574_p1);

assign add_ln23_5_fu_700_p2 = (sub_ln23_1_fu_681_p2 + zext_ln30_2_reg_962);

assign add_ln23_6_fu_757_p2 = (sub_ln23_2_fu_751_p2 + zext_ln30_2_reg_962);

assign add_ln23_7_fu_589_p2 = (5'd2 + select_ln30_fu_466_p3);

assign add_ln23_8_fu_607_p2 = (sub_ln23_fu_506_p2 + zext_ln30_4_fu_603_p1);

assign add_ln23_9_fu_762_p2 = (sub_ln23_1_reg_1039 + zext_ln30_4_reg_973);

assign add_ln23_fu_645_p2 = (5'd2 + r_0_reg_341);

assign add_ln30_2_fu_846_p2 = (sub_ln30_fu_837_p2 + zext_ln30_6_fu_843_p1);

assign add_ln30_fu_694_p2 = (r_0_reg_341 + select_ln30_3_fu_687_p3);

assign add_ln8_fu_454_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_334_p4 + 12'd1);

assign and_ln29_fu_893_p2 = (or_ln29_fu_887_p2 & grp_fu_408_p2);

assign and_ln30_fu_540_p2 = (xor_ln30_fu_528_p2 & icmp_ln14_fu_534_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln29_fu_857_p1 = reg_424;

assign c_fu_436_p2 = (ap_phi_mux_c_0_phi_fu_369_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln23_reg_989_pp0_iter6_reg;

assign conv_1_weights_0_0_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_0_1_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_0_2_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_1_0_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_1_1_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_1_2_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_2_0_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_2_1_address0 = zext_ln23_fu_632_p1;

assign conv_1_weights_2_2_address0 = zext_ln23_fu_632_p1;

assign conv_out_address0 = zext_ln30_7_fu_852_p1;

assign conv_out_d0 = ((and_ln29_fu_893_p2[0:0] === 1'b1) ? reg_424 : 32'd0);

assign f_fu_802_p2 = (3'd1 + select_ln30_6_reg_950);

assign grp_fu_908_p0 = 10'd26;

assign grp_fu_908_p1 = grp_fu_908_p10;

assign grp_fu_908_p10 = select_ln30_1_reg_939_pp0_iter8_reg;

assign grp_fu_908_p2 = grp_fu_908_p20;

assign grp_fu_908_p20 = select_ln30_7_reg_956_pp0_iter8_reg;

assign icmp_ln11_fu_460_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_357_p4 == 8'd156) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_534_p2 = ((ap_phi_mux_f_0_phi_fu_380_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_881_p2 = ((trunc_ln29_fu_871_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_875_p2 = ((tmp_fu_861_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_448_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_334_p4 == 12'd4056) ? 1'b1 : 1'b0);

assign or_ln29_fu_887_p2 = (icmp_ln29_fu_875_p2 | icmp_ln29_7_fu_881_p2);

assign or_ln30_fu_552_p2 = (icmp_ln11_fu_460_p2 | and_ln30_fu_540_p2);

assign p_shl_cast_fu_819_p3 = {{grp_fu_908_p3}, {3'd0}};

assign r_fu_430_p2 = (ap_phi_mux_r_0_phi_fu_345_p4 + 5'd1);

assign select_ln11_fu_807_p3 = ((icmp_ln11_reg_932[0:0] === 1'b1) ? 8'd1 : add_ln11_reg_1112);

assign select_ln30_1_fu_474_p3 = ((icmp_ln11_fu_460_p2[0:0] === 1'b1) ? r_fu_430_p2 : ap_phi_mux_r_0_phi_fu_345_p4);

assign select_ln30_2_fu_651_p3 = ((icmp_ln11_reg_932[0:0] === 1'b1) ? add_ln23_fu_645_p2 : r_reg_918);

assign select_ln30_3_fu_687_p3 = ((icmp_ln11_reg_932[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln30_4_fu_512_p3 = ((icmp_ln11_fu_460_p2[0:0] === 1'b1) ? 5'd1 : c_fu_436_p2);

assign select_ln30_5_fu_520_p3 = ((icmp_ln11_fu_460_p2[0:0] === 1'b1) ? 5'd2 : add_ln23_1_fu_442_p2);

assign select_ln30_6_fu_558_p3 = ((or_ln30_fu_552_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_f_0_phi_fu_380_p4);

assign select_ln30_7_fu_566_p3 = ((and_ln30_fu_540_p2[0:0] === 1'b1) ? add_ln23_3_fu_546_p2 : select_ln30_fu_466_p3);

assign select_ln30_8_fu_595_p3 = ((and_ln30_fu_540_p2[0:0] === 1'b1) ? add_ln23_7_fu_589_p2 : select_ln30_4_fu_512_p3);

assign select_ln30_9_fu_624_p3 = ((and_ln30_fu_540_p2[0:0] === 1'b1) ? add_ln23_11_fu_618_p2 : select_ln30_5_fu_520_p3);

assign select_ln30_fu_466_p3 = ((icmp_ln11_fu_460_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_369_p4);

assign sext_ln23_1_fu_794_p1 = $signed(add_ln23_10_reg_1127);

assign sext_ln23_fu_790_p1 = $signed(add_ln23_6_reg_1117);

assign sub_ln23_1_fu_681_p2 = (zext_ln23_3_fu_665_p1 - zext_ln23_4_fu_677_p1);

assign sub_ln23_2_fu_751_p2 = (zext_ln23_5_fu_736_p1 - zext_ln23_6_fu_747_p1);

assign sub_ln23_fu_506_p2 = (zext_ln23_1_fu_490_p1 - zext_ln23_2_fu_502_p1);

assign sub_ln30_fu_837_p2 = (p_shl_cast_fu_819_p3 - zext_ln30_3_fu_833_p1);

assign tmp_10_fu_740_p3 = {{add_ln30_reg_1045}, {2'd0}};

assign tmp_11_fu_482_p3 = {{select_ln30_1_fu_474_p3}, {5'd0}};

assign tmp_12_fu_494_p3 = {{select_ln30_1_fu_474_p3}, {2'd0}};

assign tmp_13_fu_657_p3 = {{select_ln30_2_fu_651_p3}, {5'd0}};

assign tmp_14_fu_669_p3 = {{select_ln30_2_fu_651_p3}, {2'd0}};

assign tmp_15_fu_826_p3 = {{grp_fu_908_p3}, {1'd0}};

assign tmp_9_fu_729_p3 = {{add_ln30_reg_1045}, {5'd0}};

assign tmp_fu_861_p4 = {{bitcast_ln29_fu_857_p1[30:23]}};

assign trunc_ln29_fu_871_p1 = bitcast_ln29_fu_857_p1[22:0];

assign xor_ln30_fu_528_p2 = (icmp_ln11_fu_460_p2 ^ 1'd1);

assign zext_ln23_10_fu_766_p1 = add_ln23_9_fu_762_p2;

assign zext_ln23_11_fu_718_p1 = add_ln23_12_fu_713_p2;

assign zext_ln23_12_fu_780_p1 = add_ln23_13_fu_776_p2;

assign zext_ln23_13_fu_798_p1 = add_ln23_14_reg_1137;

assign zext_ln23_1_fu_490_p1 = tmp_11_fu_482_p3;

assign zext_ln23_2_fu_502_p1 = tmp_12_fu_494_p3;

assign zext_ln23_3_fu_665_p1 = tmp_13_fu_657_p3;

assign zext_ln23_4_fu_677_p1 = tmp_14_fu_669_p3;

assign zext_ln23_5_fu_736_p1 = tmp_9_fu_729_p3;

assign zext_ln23_6_fu_747_p1 = tmp_10_fu_740_p3;

assign zext_ln23_7_fu_584_p1 = add_ln23_4_fu_578_p2;

assign zext_ln23_8_fu_705_p1 = add_ln23_5_fu_700_p2;

assign zext_ln23_9_fu_613_p1 = add_ln23_8_fu_607_p2;

assign zext_ln23_fu_632_p1 = select_ln30_6_fu_558_p3;

assign zext_ln30_2_fu_574_p1 = select_ln30_7_fu_566_p3;

assign zext_ln30_3_fu_833_p1 = tmp_15_fu_826_p3;

assign zext_ln30_4_fu_603_p1 = select_ln30_8_fu_595_p3;

assign zext_ln30_5_fu_710_p1 = select_ln30_9_reg_984;

assign zext_ln30_6_fu_843_p1 = select_ln30_6_reg_950_pp0_iter8_reg;

assign zext_ln30_7_fu_852_p1 = add_ln30_2_fu_846_p2;

always @ (posedge ap_clk) begin
    sub_ln23_reg_945[1:0] <= 2'b00;
    zext_ln30_2_reg_962[10:5] <= 6'b000000;
    zext_ln30_4_reg_973[10:5] <= 6'b000000;
    zext_ln23_reg_989[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_989_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sub_ln23_1_reg_1039[1:0] <= 2'b00;
    zext_ln30_5_reg_1056[10:5] <= 6'b000000;
end

endmodule //conv_1
