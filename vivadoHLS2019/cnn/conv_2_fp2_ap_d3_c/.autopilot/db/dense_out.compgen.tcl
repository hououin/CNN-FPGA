# This script segment is generated automatically by AutoPilot

# Memory (RAM/ROM)  definition:
set ID 237
set hasByteEnable 0
set MemName dense_out_dense_oibs
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 300
set AddrWd 9
set TrueReset 0
set IsROM 1
set ROMData { "10111100010000000010111100110000" "00111110101100100011100000110010" "10111101010000101011111110011000" "00111110001000001111000001100011" "10111110100000100100110011101000" "10111111000010101000011100001001" "10111110011110101110010110111101" "00111101101011011111100110111110" "00111110011011110110010110011001" "10111110101110100011100001110110" "10111111001001011110110011010101" "00111110101110010010011011101001" "10111110111000001000101001001000" "10111110110110100001010000100111" "00111110101101110000001110001110" "10111110101110101010001100100111" "10111110100110100000100101000110" "00111110100100001100000011110000" "10111110110000111111000010011001" "10111110110110010011101110011111" "10111110101000110100100000101100" "10111101110110001101110001010101" "10111110011011111011011111101001" "10111110111100110011111110000101" "00111110010010100110000011010100" "10111110001010010110000001110100" "00111110110011101110111000001111" "00111110010011000010010101001010" "00111110110100100011000001110111" "00111110110011010110000001100011" "10111110111111111001010011001000" "00111110110010100100100101011110" "00111101110111111001010110010010" "00111110010111001001110011010100" "10111110101011110110111011100111" "10111101101011100001000001001001" "10111110000001101010001010110001" "00111101001101101110110001011011" "10111110111001011101010101001110" "10111110110101001101111111110000" "00111110000010010101110101001111" "10111110011010100111111010110111" "10111011011110000101000011011111" "10111101101011001011101110000000" "10111111000011011001111001010010" "10111110101100001111111001001000" "10111101100110010011010101110110" "00111110101111111000110100101110" "10111110011110001100111101111101" "10111110111011101100111111101010" "00111110000111100110000011000100" "10111111000001000010011000100100" "00111011000100111101100101100110" "10111110100000010001001000110100" "00111111001000001000010011000111" "10111110110111010101010100111111" "00111101111011000110010110000100" "10111110100011110100011001000101" "10111101011011011101011010011101" "10111101111001011111001000000010" "10111110110110000011111000100001" "10111110100001010000111101100010" "10111110000110111111001000101100" "10111110011100000110110010000111" "00111110110111101101111011111100" "10111111000000111101001000110001" "10111110111010010101011011100010" "10111101100110110101011010111000" "00111110101110001100101000111110" "00111101000011000001101010001011" "00111110011110100000010101010111" "10111110101110110101100010001110" "00111110111110101110001110100100" "10111101110010011101010010010101" "00111101111101101101011011011100" "10111110110011001100000011011111" "00111101001100101111011101101110" "00111100111010100111001001100101" "10111110100110010010101011011000" "10111101000110100001000000010111" "00111101101110010011111011100110" "10111110010110111001011011110010" "10111101010101000110100000000001" "00111110101001011111001011101101" "00111110000100001000010000011111" "10111110011001101101111110000011" "10111110010101101011111001111011" "10111110010111101001011100000111" "00111101100100111110001001010000" "10111110101010110000110110110111" "00111111000000010100101101101010" "10111110100000000010100111010000" "00111110100010010111010010000010" "00111110000010000011011110110101" "00111101000110000001100111010010" "00111100101011001000001111101101" "00111110100001101100001000100111" "00111110100111000111011001101100" "10111110010101111010000011111001" "10111100011101100000000101111001" "00111111001000101101100010100001" "00111110011101001111111010111101" "10111110100100011100011101011000" "10111111000011011001100010011110" "10111110100011111001011101101000" "00111110000100011011101100000110" "00111110001111001101100001010110" "00111101010110101111010010101110" "10111101100011100010110000010011" "10111110100101001001000000111111" "10111011011100001111100111010011" "10111100100011001000101010111101" "00111110100111111001001100110110" "00111110100111110000011001110000" "10111100110111001100011000111111" "00111110101101110000101100000111" "10111110111110000110100010111010" "00111110111011001111011101000100" "00111110100010011011110111000111" "10111110000101011111100100010110" "10111110010001101001010000000011" "00111111000111100110110000001001" "10111110010101011010101101111110" "10111100110100111111000110000100" "00111110010001110001011100010110" "00111101100110001010001110110101" "10111110011001110001100011101100" "10111110101000000100011010000100" "00111101100110110101010100100110" "00111110101000110100110100000101" "10111110101010011011100110010101" "00111110011010110100101111111001" "00111101111110100001011011101000" "10111110001100000101010100110010" "10111101111001011011010100110001" "00111101101010011010111001001111" "00111110100010001111011011110001" "00111110110011111001010010000101" "10111110101000100001011101001100" "00111110101001110100011001000101" "00111111000100001111111101010100" "10111110101110111011001101100011" "10111110100010000101010110010111" "00111101000110010001000000111101" "10111110100111101110001100001101" "10111101001011100001101011000101" "10111110000110010001101111000101" "10111111000110100001001100011011" "00111110001100011110101011111111" "10111110101111111100011100111111" "10111110000101101011010010000101" "00111110100101010101101110101011" "00111110110001000110001010000000" "00111110001100111010000001000000" "10111110110010110011100011010110" "10111110110011000011011000010001" "00111101111110000000101100100100" "00111101000111100001100011110000" "00111110101111101110100001001011" "10111110100110000110111100000101" "10111110001001000011000010110001" "10111110001001001111100111000010" "10111110110010110011110100101001" "00111110010111001000110100011001" "10111111001101000000101001111100" "00111110010011100011101111001101" "10111111000100011010000100010010" "10111110100001001110101001001011" "10111110010011010000001000000100" "00111110111111111000010001100110" "10111110000011010000001101010011" "10111111000101010111010000011101" "00111011010011011101100100111100" "00111111000001100110010111001111" "00111110011111000100110010011101" "10111101110100101100110001110001" "10111101110001101110101100001011" "10111101100111000001101001001000" "10111110100000001001110100000110" "00111110110100110010011100100100" "00111101101001000010000101111101" "00111111000011101000100010101101" "00111101000101101011111010111110" "10111110111000110011110100001000" "00111110100010011000010110101101" "10111110010101101100011101100101" "00111101011110111101001001110100" "10111110100101111101101000011111" "10111110101011000011010100100110" "10111101110010010110001101010110" "10111110111010101100111001101000" "10111110110101001100010101110110" "10111110000100000101100111101010" "00111110010010110000110000000010" "10111111000110010110011100000010" "10111110101111000011010000111011" "10111111010001001100110001101000" "00111110111000111010001100000001" "00111101110000010100010000000011" "10111101100110001011101011000111" "10111101110011001110011001111101" "10111110100111001001110101011010" "00111001111001100010100110010101" "10111110001010010111111110100110" "00111110000100011111100110101101" "00111110101010111100011000100010" "10111110001111000011100110111101" "10111101010000111010110110011111" "00111110100110000011001000010010" "00111111000011011011101010000000" "10111110101011000100010001111100" "00111110001111101000001000001110" "00111111000001100111001011011010" "10111110011111111111100101110010" "00111110000001101101010110001101" "10111110001110110100101010101001" "00111110111000110111001100001000" "00111101111000001011011011111010" "10111100100101101000110101110110" "10111110001100011011101000111101" "00111110100000011000101101010000" "00111100001001110000010010111100" "10111101100000000100001010010110" "10111110101000110001010101110010" "00111101100110110111001010000010" "00111110100010010101000000110011" "00111110011000001000100011010111" "10111110101001000110101111110000" "00111110010100100001101101111110" "10111110100010110001011010100000" "00111110101100111111110000100010" "10111110101110010110110000011110" "10111110001101000001111111101011" "10111110000111010010111000001110" "10111110010011101010110110010010" "10111110010010010100000110000101" "10111101011010100101111110000101" "10111111000101011010001000001110" "00111110100100101001101000011100" "00111110111010101001101001011111" "10111110101101000011000011010011" "10111110101100000000111001001001" "10111110011111111010110100101010" "10111110100000101110111110110011" "10111110001111101000000000111001" "00111110110101111010010011101000" "00111110110101011000011110010100" "10111111000110110110011000001110" "00111101010101010110010010110110" "10111110111000100111101110110011" "00111110101101110111001110011111" "10111111000111001101001101111100" "10111110111101001000110001010000" "10111110000000110110110101100101" "10111111000000100110110110011100" "00111111000001000111011001101100" "00111110101101000100000000000111" "00111101100010011001011111000100" "10111110100100010011110011101111" "10111110000011110110110000100111" "10111110010011011100001101111010" "00111110110001110010001001111101" "10111110100010011101010010010101" "00111110111100011101101001111011" "00111110101100111111000110100110" "00111110101101001101010010001001" "00111110101010000011110101111001" "00111101111000110100011001010110" "10111110100000000101110110110111" "10111101100100100101010101101101" "10111110111100001100011111000001" "10111110101101100001001001100010" "00111110100110111001001111001101" "00111110101010000100100100000010" "10111110001110011100010100011110" "00111110111010000001111011001101" "10111110110011001010100001111110" "10111110001110011000110111001110" "00111110100111001001110010110010" "10111110001000010010000100100101" "00111110110000101010100010101000" "10111110101000011000100100110111" "10111100111111101100000100111100" "10111110110000100101100111100010" "00111101100000110001110111110111" "10111101100000001011110010111110" "10111110101000001011101111110101" "00111110111010110010110100001010" "10111100011101000010011110000101" "00111110101100000011100101101001" "00111110101000100010000000110110" "10111110101010111010100110001111" "00111110111011100101110101111101" "10111101100110111100110010101111" "00111101001101011111001111011000" "00111100110001110101101000110010" "10111110001011000011000101011001" "10111110001011111110111001110000" "10111110110110001111110100111011" "10111110100110100001000010111111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 238
set hasByteEnable 0
set MemName dense_out_dense_ojbC
set CoreName ap_simcore_mem
set PortList { 1 }
set DataWd 32
set AddrRange 10
set AddrWd 4
set TrueReset 0
set IsROM 1
set ROMData { "00111101111011100001010100000001" "00111110100110101010110011111011" "10111110100000000000010110000001" "10111101001001010100011100010111" "10111100100111000100011101011110" "00111011100001011100101010110000" "10111101111101110011100111110011" "10111110010110001010111110000001" "00111101101001101100101010001010" "00111110000010010001000111001111" }
set HasInitializer 1
set Initializer $ROMData
set NumOfStage 2
set MaxLatency -1
set DelayBudget 3.254
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName ROM_nP
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_ROM] == "::AESL_LIB_VIRTEX::xil_gen_ROM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_ROM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 1 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_ROM, check your platform lib"
  }
}


# Memory (RAM/ROM)  definition:
set ID 239
set hasByteEnable 0
set MemName dense_out_dense_akbM
set CoreName ap_simcore_mem
set PortList { 2 3 }
set DataWd 32
set AddrRange 10
set AddrWd 4
set impl_style block
set TrueReset 0
set HasInitializer 0
set IsROM 0
set ROMData {}
set NumOfStage 2
set MaxLatency -1
set DelayBudget 2.322
set ClkPeriod 20
set RegisteredInput 0
if {${::AESL::PGuard_simmodel_gen}} {
if {[info proc ap_gen_simcore_mem] == "ap_gen_simcore_mem"} {
    eval "ap_gen_simcore_mem { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
} else {
    puts "@W \[IMPL-102\] Cannot find ap_gen_simcore_mem, check your platform lib"
}
}


if {${::AESL::PGuard_rtl_comp_handler}} {
  ::AP::rtl_comp_handler $MemName
}


set CoreName RAM
if {${::AESL::PGuard_autocg_gen} && ${::AESL::PGuard_autocg_ipmgen}} {
if {[info proc ::AESL_LIB_VIRTEX::xil_gen_RAM] == "::AESL_LIB_VIRTEX::xil_gen_RAM"} {
    eval "::AESL_LIB_VIRTEX::xil_gen_RAM { \
    id ${ID} \
    name ${MemName} \
    corename ${CoreName}  \
    op mem \
    hasByteEnable ${hasByteEnable} \
    reset_level 1 \
    sync_rst true \
    stage_num ${NumOfStage}  \
    registered_input ${RegisteredInput} \
    port_num 2 \
    port_list \{${PortList}\} \
    data_wd ${DataWd} \
    addr_wd ${AddrWd} \
    addr_range ${AddrRange} \
    style ${impl_style} \
    true_reset ${TrueReset} \
    delay_budget ${DelayBudget} \
    clk_period ${ClkPeriod} \
    HasInitializer ${HasInitializer} \
    rom_data \{${ROMData}\} \
 } "
  } else {
    puts "@W \[IMPL-104\] Cannot find ::AESL_LIB_VIRTEX::xil_gen_RAM, check your platform lib"
  }
}


# clear list
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_begin
    cg_default_interface_gen_bundle_begin
    AESL_LIB_XILADAPTER::native_axis_begin
}

# XIL_BRAM:
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc ::AESL_LIB_XILADAPTER::xil_bram_gen] == "::AESL_LIB_XILADAPTER::xil_bram_gen"} {
eval "::AESL_LIB_XILADAPTER::xil_bram_gen { \
    id 240 \
    name dense_2_out \
    reset_level 1 \
    sync_rst true \
    dir I \
    corename dense_2_out \
    op interface \
    ports { dense_2_out_address0 { O 5 vector } dense_2_out_ce0 { O 1 bit } dense_2_out_q0 { I 32 vector } } \
} "
} else {
puts "@W \[IMPL-110\] Cannot find bus interface model in the library. Ignored generation of bus interface for 'dense_2_out'"
}
}


# Direct connection:
if {${::AESL::PGuard_autoexp_gen}} {
eval "cg_default_interface_gen_dc { \
    id -1 \
    name ap_ctrl \
    type ap_ctrl \
    reset_level 1 \
    sync_rst true \
    corename ap_ctrl \
    op interface \
    ports { ap_start { I 1 bit } ap_ready { O 1 bit } ap_done { O 1 bit } ap_idle { O 1 bit } } \
} "
}


# Adapter definition:
set PortName ap_clk
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_clock] == "cg_default_interface_gen_clock"} {
eval "cg_default_interface_gen_clock { \
    id -2 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_clk \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-113\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}


# Adapter definition:
set PortName ap_rst
set DataWd 1 
if {${::AESL::PGuard_autoexp_gen}} {
if {[info proc cg_default_interface_gen_reset] == "cg_default_interface_gen_reset"} {
eval "cg_default_interface_gen_reset { \
    id -3 \
    name ${PortName} \
    reset_level 1 \
    sync_rst true \
    corename apif_ap_rst \
    data_wd ${DataWd} \
    op interface \
}"
} else {
puts "@W \[IMPL-114\] Cannot find bus interface model in the library. Ignored generation of bus interface for '${PortName}'"
}
}



# merge
if {${::AESL::PGuard_autoexp_gen}} {
    cg_default_interface_gen_dc_end
    cg_default_interface_gen_bundle_end
    AESL_LIB_XILADAPTER::native_axis_end
}


