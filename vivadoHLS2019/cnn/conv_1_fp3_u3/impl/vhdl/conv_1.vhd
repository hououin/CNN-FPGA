-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv_out_ce0 : OUT STD_LOGIC;
    conv_out_we0 : OUT STD_LOGIC;
    conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv11_548 : STD_LOGIC_VECTOR (10 downto 0) := "10101001000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv61_3 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv61_6 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_1_weights_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce0 : STD_LOGIC;
    signal conv_1_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce1 : STD_LOGIC;
    signal conv_1_weights_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce2 : STD_LOGIC;
    signal conv_1_weights_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce3 : STD_LOGIC;
    signal conv_1_weights_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address4 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce4 : STD_LOGIC;
    signal conv_1_weights_q4 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address5 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce5 : STD_LOGIC;
    signal conv_1_weights_q5 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_ce0 : STD_LOGIC;
    signal conv_1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten30_reg_492 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_0_reg_503 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_515 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_0_reg_527 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_0_0_reg_538 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln8_reg_1570 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state41_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_664 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal icmp_ln8_reg_1570_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal icmp_ln8_reg_1570_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_670_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_reg_1565 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln8_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1570_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln8_fu_694_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln8_reg_1574 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln11_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_1_fu_714_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1586_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln23_fu_746_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_reg_1592 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_6_fu_798_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1597_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_7_fu_806_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1607_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_2_fu_814_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_2_reg_1613 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_4_fu_843_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_4_reg_1624 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_9_fu_864_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_9_reg_1635 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1640_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_fu_892_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1655_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln23_5_fu_898_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1664_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln14_1_fu_918_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_1_reg_1679_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln23_6_fu_924_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_6_reg_1688_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln23_1_fu_980_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_1_reg_1703 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln30_fu_993_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln30_reg_1709 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_5_fu_1009_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_5_reg_1720 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln11_fu_1097_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln11_reg_1761 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_6_fu_1131_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_6_reg_1766 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_10_fu_1145_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_10_reg_1776 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_14_fu_1159_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_14_reg_1786 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_17_fu_1164_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln23_17_reg_1791 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_576_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1807 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_1_reg_1812 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln23_27_fu_1186_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln23_27_reg_1817 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_39_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln23_37_fu_1208_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln23_37_reg_1843 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1859 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_1_reg_1864 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_2_reg_1889 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_2_reg_1889_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1894 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1894_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1894_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_reg_1909 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_reg_1909_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1914 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1914_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1914_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_1929 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_0_2_reg_1929_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1934_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_reg_1934_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1949 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1949_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1949_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1954_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1954_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1954_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1964 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1964_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1964_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1969_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1969_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1969_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_1979_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_1_reg_1979_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_1984_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_1984_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_2_reg_1984_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_2_fu_1326_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_2_reg_1989 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln11_fu_1331_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln11_reg_1994 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_0_2_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1999_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1999_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1999_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1999_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_2004_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_2009_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_2009_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_2009_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_2009_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_2014_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_2019_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_2019_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_2019_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_reg_2019_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_1_reg_2024_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_549_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_reg_2029 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_2034_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_reg_2039 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_2044_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_559_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_2_reg_2054_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_0_1_reg_2059 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal w_sum_4_1_0_1_reg_2064 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_0_1_reg_2069 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_0_2_reg_2074 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_0_2_reg_2079 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_0_2_reg_2084 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_reg_2089 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal w_sum_4_1_1_reg_2094 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_1_reg_2099 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_1_reg_2104 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal w_sum_4_1_1_1_reg_2109 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_1_1_reg_2114 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_2_reg_2119 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal grp_fu_568_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_1_2_reg_2124 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_1_2_reg_2129 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_2_reg_2134 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal w_sum_4_1_2_reg_2139 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_2_reg_2144 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_2_1_reg_2149 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_2_1_reg_2154 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_2_1_reg_2159 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_load_reg_2169 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_load_1_reg_2179 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_2_2_reg_2189 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_2_2_2_reg_2194 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_load_2_reg_2199 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_1_reg_2204 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_2_reg_2211 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln30_fu_1361_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln30_reg_2218 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_4_fu_1497_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_4_reg_2224 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten30_phi_fu_496_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_r_0_phi_fu_507_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_519_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_c_0_phi_fu_531_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_f_0_0_phi_fu_542_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln23_9_fu_824_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_11_fu_853_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_20_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_30_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_40_fu_939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_10_fu_1004_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln23_13_fu_1017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_21_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_22_fu_1042_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_31_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_32_fu_1067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_41_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_42_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_12_fu_1140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln23_14_fu_1154_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1167_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_23_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1189_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_33_fu_1203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1211_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_43_fu_1225_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln23_fu_1230_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal sext_ln23_1_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_24_fu_1243_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_25_fu_1253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_34_fu_1263_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_35_fu_1273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_44_fu_1283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_45_fu_1293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_15_fu_1298_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_19_fu_1302_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1310_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_1318_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_6_fu_1376_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_7_fu_1440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_8_fu_1502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln29_fu_1423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_1_fu_1486_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_2_fu_1547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_549_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_549_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_554_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_559_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_564_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_568_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_568_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_572_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_613_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_722_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_fu_734_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_1_fu_730_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_2_fu_742_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_fu_676_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_1_fu_682_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln14_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_fu_706_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln30_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln23_3_fu_786_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_4_fu_818_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_7_fu_829_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_4_fu_752_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_8_fu_835_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_8_fu_847_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_11_fu_858_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_5_fu_760_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_19_fu_877_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_15_fu_881_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln23_29_fu_903_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_21_fu_907_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln23_39_fu_929_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_27_fu_933_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_fu_944_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_2_fu_950_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_13_fu_956_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_968_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_3_fu_964_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_4_fu_976_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_3_fu_986_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_5_fu_999_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_12_fu_1012_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_18_fu_1022_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_16_fu_1025_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_17_fu_1036_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_28_fu_1047_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_22_fu_1050_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_23_fu_1061_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_38_fu_1072_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_28_fu_1075_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_29_fu_1086_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_15_fu_1103_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_1114_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_7_fu_1110_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_8_fu_1121_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_2_fu_1125_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_9_fu_1136_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_13_fu_1150_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_18_fu_1175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_24_fu_1197_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_30_fu_1219_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_19_fu_1238_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_20_fu_1248_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_25_fu_1258_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_26_fu_1268_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_31_fu_1278_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_32_fu_1288_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1555_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_17_fu_1350_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_1343_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_3_fu_1357_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln23_16_fu_1367_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_2_fu_1370_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_fu_1381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1385_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_fu_1395_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_7_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_fu_1417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln23_26_fu_1432_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_3_fu_1435_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_3_fu_1445_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1448_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_3_fu_1458_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_9_fu_1468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_8_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_3_fu_1474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_3_fu_1480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln23_36_fu_1494_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_4_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1509_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_4_fu_1519_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_11_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_10_fu_1523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_4_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_4_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1555_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1555_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1555_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1555_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1555_p20 : STD_LOGIC_VECTOR (9 downto 0);

    component cnn_fadd_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fmul_32ns_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fcmp_32ns_32neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_mac_muladd_6nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component conv_1_conv_1_weibkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address4 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address5 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_conv_1_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv_1_weights_U : component conv_1_conv_1_weibkb
    generic map (
        DataWidth => 32,
        AddressRange => 54,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_address0,
        ce0 => conv_1_weights_ce0,
        q0 => conv_1_weights_q0,
        address1 => conv_1_weights_address1,
        ce1 => conv_1_weights_ce1,
        q1 => conv_1_weights_q1,
        address2 => conv_1_weights_address2,
        ce2 => conv_1_weights_ce2,
        q2 => conv_1_weights_q2,
        address3 => conv_1_weights_address3,
        ce3 => conv_1_weights_ce3,
        q3 => conv_1_weights_q3,
        address4 => conv_1_weights_address4,
        ce4 => conv_1_weights_ce4,
        q4 => conv_1_weights_q4,
        address5 => conv_1_weights_address5,
        ce5 => conv_1_weights_ce5,
        q5 => conv_1_weights_q5);

    conv_1_bias_U : component conv_1_conv_1_bias
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_address0,
        ce0 => conv_1_bias_ce0,
        q0 => conv_1_bias_q0);

    cnn_fadd_32ns_32ncud_U1 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_549_p0,
        din1 => grp_fu_549_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_549_p2);

    cnn_fadd_32ns_32ncud_U2 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_554_p0,
        din1 => grp_fu_554_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_554_p2);

    cnn_fadd_32ns_32ncud_U3 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_559_p0,
        din1 => grp_fu_559_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_559_p2);

    cnn_fadd_32ns_32ncud_U4 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_564_p0,
        din1 => grp_fu_564_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_564_p2);

    cnn_fadd_32ns_32ncud_U5 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_568_p0,
        din1 => grp_fu_568_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_568_p2);

    cnn_fadd_32ns_32ncud_U6 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_572_p0,
        din1 => grp_fu_572_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_572_p2);

    cnn_fmul_32ns_32ndEe_U7 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q0,
        din1 => input_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_576_p2);

    cnn_fmul_32ns_32ndEe_U8 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q1,
        din1 => grp_fu_582_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_582_p2);

    cnn_fmul_32ns_32ndEe_U9 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q2,
        din1 => input_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_588_p2);

    cnn_fmul_32ns_32ndEe_U10 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q3,
        din1 => input_r_q1,
        ce => ap_const_logic_1,
        dout => grp_fu_594_p2);

    cnn_fmul_32ns_32ndEe_U11 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q4,
        din1 => input_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_600_p2);

    cnn_fmul_32ns_32ndEe_U12 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q5,
        din1 => input_r_q1,
        ce => ap_const_logic_1,
        dout => grp_fu_606_p2);

    cnn_fcmp_32ns_32neOg_U13 : component cnn_fcmp_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_613_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_613_p2);

    cnn_mac_muladd_6nfYi_U14 : component cnn_mac_muladd_6nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1555_p0,
        din1 => grp_fu_1555_p1,
        din2 => grp_fu_1555_p2,
        dout => grp_fu_1555_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_0_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
                c_0_reg_527 <= select_ln30_7_reg_1607;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_0_reg_527 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    f_0_0_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
                f_0_0_reg_538 <= add_ln14_2_reg_1989;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_0_reg_538 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten30_reg_492_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
                indvar_flatten30_reg_492 <= add_ln8_reg_1574;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten30_reg_492 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
                indvar_flatten_reg_515 <= select_ln11_reg_1994;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_515 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
                r_0_reg_503 <= select_ln30_1_reg_1586;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_503 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln11_reg_1579 = ap_const_lv1_0) and (icmp_ln8_reg_1570 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln11_reg_1761 <= add_ln11_fu_1097_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_688_p2 = ap_const_lv1_0))) then
                add_ln14_1_reg_1679 <= add_ln14_1_fu_918_p2;
                add_ln14_reg_1655 <= add_ln14_fu_892_p2;
                icmp_ln11_reg_1579 <= icmp_ln11_fu_700_p2;
                select_ln30_6_reg_1597 <= select_ln30_6_fu_798_p3;
                select_ln30_9_reg_1635 <= select_ln30_9_fu_864_p3;
                    sub_ln23_reg_1592(10 downto 2) <= sub_ln23_fu_746_p2(10 downto 2);
                    zext_ln23_5_reg_1664(2 downto 0) <= zext_ln23_5_fu_898_p1(2 downto 0);
                    zext_ln23_6_reg_1688(2 downto 0) <= zext_ln23_6_fu_924_p1(2 downto 0);
                    zext_ln23_reg_1640(2 downto 0) <= zext_ln23_fu_872_p1(2 downto 0);
                    zext_ln30_2_reg_1613(4 downto 0) <= zext_ln30_2_fu_814_p1(4 downto 0);
                    zext_ln30_4_reg_1624(4 downto 0) <= zext_ln30_4_fu_843_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln14_1_reg_1679_pp0_iter1_reg <= add_ln14_1_reg_1679;
                add_ln14_1_reg_1679_pp0_iter2_reg <= add_ln14_1_reg_1679_pp0_iter1_reg;
                add_ln14_1_reg_1679_pp0_iter3_reg <= add_ln14_1_reg_1679_pp0_iter2_reg;
                add_ln14_1_reg_1679_pp0_iter4_reg <= add_ln14_1_reg_1679_pp0_iter3_reg;
                add_ln14_1_reg_1679_pp0_iter5_reg <= add_ln14_1_reg_1679_pp0_iter4_reg;
                add_ln14_1_reg_1679_pp0_iter6_reg <= add_ln14_1_reg_1679_pp0_iter5_reg;
                add_ln14_1_reg_1679_pp0_iter7_reg <= add_ln14_1_reg_1679_pp0_iter6_reg;
                add_ln14_1_reg_1679_pp0_iter8_reg <= add_ln14_1_reg_1679_pp0_iter7_reg;
                add_ln14_reg_1655_pp0_iter1_reg <= add_ln14_reg_1655;
                add_ln14_reg_1655_pp0_iter2_reg <= add_ln14_reg_1655_pp0_iter1_reg;
                add_ln14_reg_1655_pp0_iter3_reg <= add_ln14_reg_1655_pp0_iter2_reg;
                add_ln14_reg_1655_pp0_iter4_reg <= add_ln14_reg_1655_pp0_iter3_reg;
                add_ln14_reg_1655_pp0_iter5_reg <= add_ln14_reg_1655_pp0_iter4_reg;
                add_ln14_reg_1655_pp0_iter6_reg <= add_ln14_reg_1655_pp0_iter5_reg;
                add_ln14_reg_1655_pp0_iter7_reg <= add_ln14_reg_1655_pp0_iter6_reg;
                add_ln14_reg_1655_pp0_iter8_reg <= add_ln14_reg_1655_pp0_iter7_reg;
                icmp_ln8_reg_1570 <= icmp_ln8_fu_688_p2;
                icmp_ln8_reg_1570_pp0_iter1_reg <= icmp_ln8_reg_1570;
                icmp_ln8_reg_1570_pp0_iter2_reg <= icmp_ln8_reg_1570_pp0_iter1_reg;
                icmp_ln8_reg_1570_pp0_iter3_reg <= icmp_ln8_reg_1570_pp0_iter2_reg;
                icmp_ln8_reg_1570_pp0_iter4_reg <= icmp_ln8_reg_1570_pp0_iter3_reg;
                icmp_ln8_reg_1570_pp0_iter5_reg <= icmp_ln8_reg_1570_pp0_iter4_reg;
                icmp_ln8_reg_1570_pp0_iter6_reg <= icmp_ln8_reg_1570_pp0_iter5_reg;
                icmp_ln8_reg_1570_pp0_iter7_reg <= icmp_ln8_reg_1570_pp0_iter6_reg;
                icmp_ln8_reg_1570_pp0_iter8_reg <= icmp_ln8_reg_1570_pp0_iter7_reg;
                r_reg_1565 <= r_fu_670_p2;
                select_ln30_1_reg_1586_pp0_iter1_reg <= select_ln30_1_reg_1586;
                select_ln30_1_reg_1586_pp0_iter2_reg <= select_ln30_1_reg_1586_pp0_iter1_reg;
                select_ln30_1_reg_1586_pp0_iter3_reg <= select_ln30_1_reg_1586_pp0_iter2_reg;
                select_ln30_1_reg_1586_pp0_iter4_reg <= select_ln30_1_reg_1586_pp0_iter3_reg;
                select_ln30_1_reg_1586_pp0_iter5_reg <= select_ln30_1_reg_1586_pp0_iter4_reg;
                select_ln30_1_reg_1586_pp0_iter6_reg <= select_ln30_1_reg_1586_pp0_iter5_reg;
                select_ln30_1_reg_1586_pp0_iter7_reg <= select_ln30_1_reg_1586_pp0_iter6_reg;
                select_ln30_1_reg_1586_pp0_iter8_reg <= select_ln30_1_reg_1586_pp0_iter7_reg;
                select_ln30_6_reg_1597_pp0_iter1_reg <= select_ln30_6_reg_1597;
                select_ln30_6_reg_1597_pp0_iter2_reg <= select_ln30_6_reg_1597_pp0_iter1_reg;
                select_ln30_6_reg_1597_pp0_iter3_reg <= select_ln30_6_reg_1597_pp0_iter2_reg;
                select_ln30_6_reg_1597_pp0_iter4_reg <= select_ln30_6_reg_1597_pp0_iter3_reg;
                select_ln30_6_reg_1597_pp0_iter5_reg <= select_ln30_6_reg_1597_pp0_iter4_reg;
                select_ln30_6_reg_1597_pp0_iter6_reg <= select_ln30_6_reg_1597_pp0_iter5_reg;
                select_ln30_6_reg_1597_pp0_iter7_reg <= select_ln30_6_reg_1597_pp0_iter6_reg;
                select_ln30_6_reg_1597_pp0_iter8_reg <= select_ln30_6_reg_1597_pp0_iter7_reg;
                select_ln30_7_reg_1607_pp0_iter1_reg <= select_ln30_7_reg_1607;
                select_ln30_7_reg_1607_pp0_iter2_reg <= select_ln30_7_reg_1607_pp0_iter1_reg;
                select_ln30_7_reg_1607_pp0_iter3_reg <= select_ln30_7_reg_1607_pp0_iter2_reg;
                select_ln30_7_reg_1607_pp0_iter4_reg <= select_ln30_7_reg_1607_pp0_iter3_reg;
                select_ln30_7_reg_1607_pp0_iter5_reg <= select_ln30_7_reg_1607_pp0_iter4_reg;
                select_ln30_7_reg_1607_pp0_iter6_reg <= select_ln30_7_reg_1607_pp0_iter5_reg;
                select_ln30_7_reg_1607_pp0_iter7_reg <= select_ln30_7_reg_1607_pp0_iter6_reg;
                select_ln30_7_reg_1607_pp0_iter8_reg <= select_ln30_7_reg_1607_pp0_iter7_reg;
                tmp_0_2_1_reg_2004_pp0_iter2_reg <= tmp_0_2_1_reg_2004;
                tmp_0_2_1_reg_2004_pp0_iter3_reg <= tmp_0_2_1_reg_2004_pp0_iter2_reg;
                tmp_0_2_1_reg_2004_pp0_iter4_reg <= tmp_0_2_1_reg_2004_pp0_iter3_reg;
                tmp_0_2_1_reg_2004_pp0_iter5_reg <= tmp_0_2_1_reg_2004_pp0_iter4_reg;
                tmp_0_2_1_reg_2004_pp0_iter6_reg <= tmp_0_2_1_reg_2004_pp0_iter5_reg;
                tmp_0_2_reg_1999_pp0_iter2_reg <= tmp_0_2_reg_1999;
                tmp_0_2_reg_1999_pp0_iter3_reg <= tmp_0_2_reg_1999_pp0_iter2_reg;
                tmp_0_2_reg_1999_pp0_iter4_reg <= tmp_0_2_reg_1999_pp0_iter3_reg;
                tmp_0_2_reg_1999_pp0_iter5_reg <= tmp_0_2_reg_1999_pp0_iter4_reg;
                tmp_1_2_1_reg_2014_pp0_iter2_reg <= tmp_1_2_1_reg_2014;
                tmp_1_2_1_reg_2014_pp0_iter3_reg <= tmp_1_2_1_reg_2014_pp0_iter2_reg;
                tmp_1_2_1_reg_2014_pp0_iter4_reg <= tmp_1_2_1_reg_2014_pp0_iter3_reg;
                tmp_1_2_1_reg_2014_pp0_iter5_reg <= tmp_1_2_1_reg_2014_pp0_iter4_reg;
                tmp_1_2_1_reg_2014_pp0_iter6_reg <= tmp_1_2_1_reg_2014_pp0_iter5_reg;
                tmp_1_2_reg_2009_pp0_iter2_reg <= tmp_1_2_reg_2009;
                tmp_1_2_reg_2009_pp0_iter3_reg <= tmp_1_2_reg_2009_pp0_iter2_reg;
                tmp_1_2_reg_2009_pp0_iter4_reg <= tmp_1_2_reg_2009_pp0_iter3_reg;
                tmp_1_2_reg_2009_pp0_iter5_reg <= tmp_1_2_reg_2009_pp0_iter4_reg;
                tmp_2_2_1_reg_2024_pp0_iter2_reg <= tmp_2_2_1_reg_2024;
                tmp_2_2_1_reg_2024_pp0_iter3_reg <= tmp_2_2_1_reg_2024_pp0_iter2_reg;
                tmp_2_2_1_reg_2024_pp0_iter4_reg <= tmp_2_2_1_reg_2024_pp0_iter3_reg;
                tmp_2_2_1_reg_2024_pp0_iter5_reg <= tmp_2_2_1_reg_2024_pp0_iter4_reg;
                tmp_2_2_1_reg_2024_pp0_iter6_reg <= tmp_2_2_1_reg_2024_pp0_iter5_reg;
                tmp_2_2_reg_2019_pp0_iter2_reg <= tmp_2_2_reg_2019;
                tmp_2_2_reg_2019_pp0_iter3_reg <= tmp_2_2_reg_2019_pp0_iter2_reg;
                tmp_2_2_reg_2019_pp0_iter4_reg <= tmp_2_2_reg_2019_pp0_iter3_reg;
                tmp_2_2_reg_2019_pp0_iter5_reg <= tmp_2_2_reg_2019_pp0_iter4_reg;
                    zext_ln23_5_reg_1664_pp0_iter1_reg(2 downto 0) <= zext_ln23_5_reg_1664(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter2_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter1_reg(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter3_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter2_reg(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter4_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter3_reg(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter5_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter4_reg(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter6_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter5_reg(2 downto 0);
                    zext_ln23_5_reg_1664_pp0_iter7_reg(2 downto 0) <= zext_ln23_5_reg_1664_pp0_iter6_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter1_reg(2 downto 0) <= zext_ln23_6_reg_1688(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter2_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter1_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter3_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter2_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter4_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter3_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter5_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter4_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter6_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter5_reg(2 downto 0);
                    zext_ln23_6_reg_1688_pp0_iter7_reg(2 downto 0) <= zext_ln23_6_reg_1688_pp0_iter6_reg(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter1_reg(2 downto 0) <= zext_ln23_reg_1640(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter2_reg(2 downto 0) <= zext_ln23_reg_1640_pp0_iter1_reg(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter3_reg(2 downto 0) <= zext_ln23_reg_1640_pp0_iter2_reg(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter4_reg(2 downto 0) <= zext_ln23_reg_1640_pp0_iter3_reg(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter5_reg(2 downto 0) <= zext_ln23_reg_1640_pp0_iter4_reg(2 downto 0);
                    zext_ln23_reg_1640_pp0_iter6_reg(2 downto 0) <= zext_ln23_reg_1640_pp0_iter5_reg(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then
                add_ln14_2_reg_1989 <= add_ln14_2_fu_1326_p2;
                select_ln11_reg_1994 <= select_ln11_fu_1331_p3;
                tmp_0_1_1_reg_1949 <= grp_fu_576_p2;
                tmp_0_1_2_reg_1954 <= grp_fu_582_p2;
                tmp_1_1_1_reg_1964 <= grp_fu_588_p2;
                tmp_1_1_2_reg_1969 <= grp_fu_594_p2;
                tmp_2_1_1_reg_1979 <= grp_fu_600_p2;
                tmp_2_1_2_reg_1984 <= grp_fu_606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then
                add_ln23_10_reg_1776 <= add_ln23_10_fu_1145_p2;
                add_ln23_14_reg_1786 <= add_ln23_14_fu_1159_p2;
                add_ln23_6_reg_1766 <= add_ln23_6_fu_1131_p2;
                    zext_ln23_17_reg_1791(2 downto 0) <= zext_ln23_17_fu_1164_p1(2 downto 0);
                    zext_ln23_27_reg_1817(2 downto 0) <= zext_ln23_27_fu_1186_p1(2 downto 0);
                    zext_ln23_37_reg_1843(2 downto 0) <= zext_ln23_37_fu_1208_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0))) then
                add_ln30_4_reg_2224 <= add_ln30_4_fu_1497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln8_reg_1570 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln30_reg_1709 <= add_ln30_fu_993_p2;
                    sub_ln23_1_reg_1703(10 downto 2) <= sub_ln23_1_fu_980_p2(10 downto 2);
                    zext_ln30_5_reg_1720(4 downto 0) <= zext_ln30_5_fu_1009_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln8_reg_1574 <= add_ln8_fu_694_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570_pp0_iter7_reg = ap_const_lv1_0))) then
                conv_1_bias_load_1_reg_2179 <= conv_1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570_pp0_iter7_reg = ap_const_lv1_0))) then
                conv_1_bias_load_2_reg_2199 <= conv_1_bias_q0;
                w_sum_4_1_2_2_reg_2189 <= grp_fu_568_p2;
                w_sum_4_2_2_2_reg_2194 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln8_reg_1570_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                conv_1_bias_load_reg_2169 <= conv_1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0)))) then
                reg_664 <= grp_fu_564_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_688_p2 = ap_const_lv1_0))) then
                select_ln30_1_reg_1586 <= select_ln30_1_fu_714_p3;
                select_ln30_7_reg_1607 <= select_ln30_7_fu_806_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0))) then
                    sub_ln30_reg_2218(12 downto 1) <= sub_ln30_fu_1361_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then
                tmp_0_0_1_reg_1812 <= grp_fu_582_p2;
                tmp_1_0_1_reg_1838 <= grp_fu_594_p2;
                tmp_1_39_reg_1833 <= grp_fu_588_p2;
                tmp_1_reg_1807 <= grp_fu_576_p2;
                tmp_2_0_1_reg_1864 <= grp_fu_606_p2;
                tmp_2_reg_1859 <= grp_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then
                tmp_0_0_2_reg_1889 <= grp_fu_576_p2;
                tmp_0_1_reg_1894 <= grp_fu_582_p2;
                tmp_1_0_2_reg_1909 <= grp_fu_588_p2;
                tmp_1_1_reg_1914 <= grp_fu_594_p2;
                tmp_2_0_2_reg_1929 <= grp_fu_600_p2;
                tmp_2_1_reg_1934 <= grp_fu_606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_0_0_2_reg_1889_pp0_iter1_reg <= tmp_0_0_2_reg_1889;
                tmp_0_1_reg_1894_pp0_iter1_reg <= tmp_0_1_reg_1894;
                tmp_0_1_reg_1894_pp0_iter2_reg <= tmp_0_1_reg_1894_pp0_iter1_reg;
                tmp_1_0_2_reg_1909_pp0_iter1_reg <= tmp_1_0_2_reg_1909;
                tmp_1_1_reg_1914_pp0_iter1_reg <= tmp_1_1_reg_1914;
                tmp_1_1_reg_1914_pp0_iter2_reg <= tmp_1_1_reg_1914_pp0_iter1_reg;
                tmp_2_0_2_reg_1929_pp0_iter1_reg <= tmp_2_0_2_reg_1929;
                tmp_2_1_reg_1934_pp0_iter1_reg <= tmp_2_1_reg_1934;
                tmp_2_1_reg_1934_pp0_iter2_reg <= tmp_2_1_reg_1934_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_0_1_1_reg_1949_pp0_iter1_reg <= tmp_0_1_1_reg_1949;
                tmp_0_1_1_reg_1949_pp0_iter2_reg <= tmp_0_1_1_reg_1949_pp0_iter1_reg;
                tmp_0_1_2_reg_1954_pp0_iter1_reg <= tmp_0_1_2_reg_1954;
                tmp_0_1_2_reg_1954_pp0_iter2_reg <= tmp_0_1_2_reg_1954_pp0_iter1_reg;
                tmp_0_1_2_reg_1954_pp0_iter3_reg <= tmp_0_1_2_reg_1954_pp0_iter2_reg;
                tmp_1_1_1_reg_1964_pp0_iter1_reg <= tmp_1_1_1_reg_1964;
                tmp_1_1_1_reg_1964_pp0_iter2_reg <= tmp_1_1_1_reg_1964_pp0_iter1_reg;
                tmp_1_1_2_reg_1969_pp0_iter1_reg <= tmp_1_1_2_reg_1969;
                tmp_1_1_2_reg_1969_pp0_iter2_reg <= tmp_1_1_2_reg_1969_pp0_iter1_reg;
                tmp_1_1_2_reg_1969_pp0_iter3_reg <= tmp_1_1_2_reg_1969_pp0_iter2_reg;
                tmp_2_1_1_reg_1979_pp0_iter1_reg <= tmp_2_1_1_reg_1979;
                tmp_2_1_1_reg_1979_pp0_iter2_reg <= tmp_2_1_1_reg_1979_pp0_iter1_reg;
                tmp_2_1_2_reg_1984_pp0_iter1_reg <= tmp_2_1_2_reg_1984;
                tmp_2_1_2_reg_1984_pp0_iter2_reg <= tmp_2_1_2_reg_1984_pp0_iter1_reg;
                tmp_2_1_2_reg_1984_pp0_iter3_reg <= tmp_2_1_2_reg_1984_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then
                tmp_0_2_1_reg_2004 <= grp_fu_582_p2;
                tmp_0_2_reg_1999 <= grp_fu_576_p2;
                tmp_1_2_1_reg_2014 <= grp_fu_594_p2;
                tmp_1_2_reg_2009 <= grp_fu_588_p2;
                tmp_2_2_1_reg_2024 <= grp_fu_606_p2;
                tmp_2_2_reg_2019 <= grp_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln8_reg_1570_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_0_2_2_reg_2034 <= grp_fu_576_p2;
                tmp_1_2_2_reg_2044 <= grp_fu_582_p2;
                tmp_2_2_2_reg_2054 <= grp_fu_588_p2;
                w_sum_4_1_reg_2039 <= grp_fu_554_p2;
                w_sum_4_2_reg_2049 <= grp_fu_559_p2;
                w_sum_4_reg_2029 <= grp_fu_549_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_0_2_2_reg_2034_pp0_iter2_reg <= tmp_0_2_2_reg_2034;
                tmp_0_2_2_reg_2034_pp0_iter3_reg <= tmp_0_2_2_reg_2034_pp0_iter2_reg;
                tmp_0_2_2_reg_2034_pp0_iter4_reg <= tmp_0_2_2_reg_2034_pp0_iter3_reg;
                tmp_0_2_2_reg_2034_pp0_iter5_reg <= tmp_0_2_2_reg_2034_pp0_iter4_reg;
                tmp_0_2_2_reg_2034_pp0_iter6_reg <= tmp_0_2_2_reg_2034_pp0_iter5_reg;
                tmp_1_2_2_reg_2044_pp0_iter2_reg <= tmp_1_2_2_reg_2044;
                tmp_1_2_2_reg_2044_pp0_iter3_reg <= tmp_1_2_2_reg_2044_pp0_iter2_reg;
                tmp_1_2_2_reg_2044_pp0_iter4_reg <= tmp_1_2_2_reg_2044_pp0_iter3_reg;
                tmp_1_2_2_reg_2044_pp0_iter5_reg <= tmp_1_2_2_reg_2044_pp0_iter4_reg;
                tmp_1_2_2_reg_2044_pp0_iter6_reg <= tmp_1_2_2_reg_2044_pp0_iter5_reg;
                tmp_2_2_2_reg_2054_pp0_iter2_reg <= tmp_2_2_2_reg_2054;
                tmp_2_2_2_reg_2054_pp0_iter3_reg <= tmp_2_2_2_reg_2054_pp0_iter2_reg;
                tmp_2_2_2_reg_2054_pp0_iter4_reg <= tmp_2_2_2_reg_2054_pp0_iter3_reg;
                tmp_2_2_2_reg_2054_pp0_iter5_reg <= tmp_2_2_2_reg_2054_pp0_iter4_reg;
                tmp_2_2_2_reg_2054_pp0_iter6_reg <= tmp_2_2_2_reg_2054_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0))) then
                w_sum_1_reg_2204 <= grp_fu_568_p2;
                w_sum_2_reg_2211 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570_pp0_iter1_reg = ap_const_lv1_0))) then
                w_sum_4_0_0_1_reg_2059 <= grp_fu_549_p2;
                w_sum_4_1_0_1_reg_2064 <= grp_fu_554_p2;
                w_sum_4_2_0_1_reg_2069 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1570_pp0_iter2_reg = ap_const_lv1_0))) then
                w_sum_4_0_0_2_reg_2074 <= grp_fu_549_p2;
                w_sum_4_1_0_2_reg_2079 <= grp_fu_554_p2;
                w_sum_4_2_0_2_reg_2084 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1570_pp0_iter4_reg = ap_const_lv1_0))) then
                w_sum_4_0_1_1_reg_2104 <= grp_fu_549_p2;
                w_sum_4_1_1_1_reg_2109 <= grp_fu_554_p2;
                w_sum_4_2_1_1_reg_2114 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln8_reg_1570_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                w_sum_4_0_1_2_reg_2119 <= grp_fu_564_p2;
                w_sum_4_1_1_2_reg_2124 <= grp_fu_568_p2;
                w_sum_4_2_1_2_reg_2129 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570_pp0_iter3_reg = ap_const_lv1_0))) then
                w_sum_4_0_1_reg_2089 <= grp_fu_549_p2;
                w_sum_4_1_1_reg_2094 <= grp_fu_554_p2;
                w_sum_4_2_1_reg_2099 <= grp_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1570_pp0_iter6_reg = ap_const_lv1_0))) then
                w_sum_4_0_2_1_reg_2149 <= grp_fu_564_p2;
                w_sum_4_1_2_1_reg_2154 <= grp_fu_568_p2;
                w_sum_4_2_2_1_reg_2159 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570_pp0_iter5_reg = ap_const_lv1_0))) then
                w_sum_4_0_2_reg_2134 <= grp_fu_564_p2;
                w_sum_4_1_2_reg_2139 <= grp_fu_568_p2;
                w_sum_4_2_2_reg_2144 <= grp_fu_572_p2;
            end if;
        end if;
    end process;
    sub_ln23_reg_1592(1 downto 0) <= "00";
    zext_ln30_2_reg_1613(10 downto 5) <= "000000";
    zext_ln30_4_reg_1624(10 downto 5) <= "000000";
    zext_ln23_reg_1640(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter2_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter3_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter4_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter5_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1640_pp0_iter6_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter2_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter3_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter4_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter5_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter6_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1664_pp0_iter7_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter2_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter3_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter4_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter5_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter6_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_6_reg_1688_pp0_iter7_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    sub_ln23_1_reg_1703(1 downto 0) <= "00";
    zext_ln30_5_reg_1720(10 downto 5) <= "000000";
    zext_ln23_17_reg_1791(5 downto 3) <= "000";
    zext_ln23_27_reg_1817(5 downto 3) <= "000";
    zext_ln23_37_reg_1843(5 downto 3) <= "000";
    sub_ln30_reg_2218(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter8, icmp_ln8_fu_688_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_enable_reg_pp0_iter9, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln8_fu_688_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln8_fu_688_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln11_fu_1097_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(indvar_flatten_reg_515));
    add_ln14_1_fu_918_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(select_ln30_6_fu_798_p3));
    add_ln14_2_fu_1326_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) + unsigned(select_ln30_6_reg_1597));
    add_ln14_fu_892_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(select_ln30_6_fu_798_p3));
    add_ln23_10_fu_1145_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_1125_p2) + unsigned(zext_ln30_4_reg_1624));
    add_ln23_11_fu_858_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(select_ln30_fu_706_p3));
    add_ln23_12_fu_1012_p2 <= std_logic_vector(unsigned(sub_ln23_reg_1592) + unsigned(zext_ln30_5_fu_1009_p1));
    add_ln23_13_fu_1150_p2 <= std_logic_vector(unsigned(sub_ln23_1_reg_1703) + unsigned(zext_ln30_5_reg_1720));
    add_ln23_14_fu_1159_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_1125_p2) + unsigned(zext_ln30_5_reg_1720));
    add_ln23_15_fu_881_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln23_19_fu_877_p1));
    add_ln23_16_fu_1025_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(zext_ln23_18_fu_1022_p1));
    add_ln23_17_fu_1036_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln23_18_fu_1022_p1));
    add_ln23_18_fu_1175_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(zext_ln23_17_fu_1164_p1));
    add_ln23_19_fu_1238_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(zext_ln23_17_reg_1791));
    add_ln23_1_fu_682_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_0_phi_fu_531_p4) + unsigned(ap_const_lv5_2));
    add_ln23_20_fu_1248_p2 <= std_logic_vector(signed(ap_const_lv6_2A) + signed(zext_ln23_17_reg_1791));
    add_ln23_21_fu_907_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln23_29_fu_903_p1));
    add_ln23_22_fu_1050_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(zext_ln23_28_fu_1047_p1));
    add_ln23_23_fu_1061_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln23_28_fu_1047_p1));
    add_ln23_24_fu_1197_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(zext_ln23_27_fu_1186_p1));
    add_ln23_25_fu_1258_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(zext_ln23_27_reg_1817));
    add_ln23_26_fu_1268_p2 <= std_logic_vector(signed(ap_const_lv6_2A) + signed(zext_ln23_27_reg_1817));
    add_ln23_27_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln23_39_fu_929_p1));
    add_ln23_28_fu_1075_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(zext_ln23_38_fu_1072_p1));
    add_ln23_29_fu_1086_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln23_38_fu_1072_p1));
    add_ln23_30_fu_1219_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(zext_ln23_37_fu_1208_p1));
    add_ln23_31_fu_1278_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(zext_ln23_37_reg_1843));
    add_ln23_32_fu_1288_p2 <= std_logic_vector(signed(ap_const_lv6_2A) + signed(zext_ln23_37_reg_1843));
    add_ln23_3_fu_786_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln30_fu_706_p3));
    add_ln23_4_fu_818_p2 <= std_logic_vector(unsigned(sub_ln23_fu_746_p2) + unsigned(zext_ln30_2_fu_814_p1));
    add_ln23_5_fu_999_p2 <= std_logic_vector(unsigned(sub_ln23_1_fu_980_p2) + unsigned(zext_ln30_2_reg_1613));
    add_ln23_6_fu_1131_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_1125_p2) + unsigned(zext_ln30_2_reg_1613));
    add_ln23_7_fu_829_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(select_ln30_fu_706_p3));
    add_ln23_8_fu_847_p2 <= std_logic_vector(unsigned(sub_ln23_fu_746_p2) + unsigned(zext_ln30_4_fu_843_p1));
    add_ln23_9_fu_1136_p2 <= std_logic_vector(unsigned(sub_ln23_1_reg_1703) + unsigned(zext_ln30_4_reg_1624));
    add_ln23_fu_944_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(r_0_reg_503));
    add_ln30_2_fu_1370_p2 <= std_logic_vector(unsigned(sub_ln30_fu_1361_p2) + unsigned(zext_ln23_16_fu_1367_p1));
    add_ln30_3_fu_1435_p2 <= std_logic_vector(unsigned(sub_ln30_reg_2218) + unsigned(zext_ln23_26_fu_1432_p1));
    add_ln30_4_fu_1497_p2 <= std_logic_vector(unsigned(sub_ln30_reg_2218) + unsigned(zext_ln23_36_fu_1494_p1));
    add_ln30_fu_993_p2 <= std_logic_vector(unsigned(r_0_reg_503) + unsigned(select_ln30_3_fu_986_p3));
    add_ln8_fu_694_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten30_phi_fu_496_p4) + unsigned(ap_const_lv11_1));
    and_ln29_3_fu_1480_p2 <= (or_ln29_3_fu_1474_p2 and grp_fu_613_p2);
    and_ln29_4_fu_1541_p2 <= (or_ln29_4_fu_1535_p2 and grp_fu_613_p2);
    and_ln29_fu_1417_p2 <= (or_ln29_fu_1411_p2 and grp_fu_613_p2);
    and_ln30_fu_780_p2 <= (xor_ln30_fu_768_p2 and icmp_ln14_fu_774_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state48 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln8_fu_688_p2)
    begin
        if ((icmp_ln8_fu_688_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state48) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_531_p4_assign_proc : process(c_0_reg_527, icmp_ln8_reg_1570, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln30_7_reg_1607, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
            ap_phi_mux_c_0_phi_fu_531_p4 <= select_ln30_7_reg_1607;
        else 
            ap_phi_mux_c_0_phi_fu_531_p4 <= c_0_reg_527;
        end if; 
    end process;


    ap_phi_mux_f_0_0_phi_fu_542_p4_assign_proc : process(f_0_0_reg_538, icmp_ln8_reg_1570, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln14_2_reg_1989, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
            ap_phi_mux_f_0_0_phi_fu_542_p4 <= add_ln14_2_reg_1989;
        else 
            ap_phi_mux_f_0_0_phi_fu_542_p4 <= f_0_0_reg_538;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten30_phi_fu_496_p4_assign_proc : process(indvar_flatten30_reg_492, icmp_ln8_reg_1570, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln8_reg_1574, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten30_phi_fu_496_p4 <= add_ln8_reg_1574;
        else 
            ap_phi_mux_indvar_flatten30_phi_fu_496_p4 <= indvar_flatten30_reg_492;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_519_p4_assign_proc : process(indvar_flatten_reg_515, icmp_ln8_reg_1570, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln11_reg_1994, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_519_p4 <= select_ln11_reg_1994;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_519_p4 <= indvar_flatten_reg_515;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_507_p4_assign_proc : process(r_0_reg_503, icmp_ln8_reg_1570, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln30_1_reg_1586, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1570 = ap_const_lv1_0))) then 
            ap_phi_mux_r_0_phi_fu_507_p4 <= select_ln30_1_reg_1586;
        else 
            ap_phi_mux_r_0_phi_fu_507_p4 <= r_0_reg_503;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln29_3_fu_1445_p1 <= w_sum_1_reg_2204;
    bitcast_ln29_4_fu_1506_p1 <= w_sum_2_reg_2211;
    bitcast_ln29_fu_1381_p1 <= reg_664;
    c_fu_676_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_0_phi_fu_531_p4) + unsigned(ap_const_lv5_1));

    conv_1_bias_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, zext_ln23_reg_1640_pp0_iter6_reg, zext_ln23_5_reg_1664_pp0_iter7_reg, zext_ln23_6_reg_1688_pp0_iter7_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_bias_address0 <= zext_ln23_6_reg_1688_pp0_iter7_reg(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_bias_address0 <= zext_ln23_5_reg_1664_pp0_iter7_reg(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_bias_address0 <= zext_ln23_reg_1640_pp0_iter6_reg(3 - 1 downto 0);
            else 
                conv_1_bias_address0 <= "XXX";
            end if;
        else 
            conv_1_bias_address0 <= "XXX";
        end if; 
    end process;


    conv_1_bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            conv_1_bias_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln23_fu_872_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_21_fu_1031_p1, ap_block_pp0_stage2, tmp_18_fu_1167_p3, ap_block_pp0_stage3, zext_ln23_24_fu_1243_p1, ap_block_pp0_stage4, tmp_19_fu_1302_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_weights_address0 <= tmp_19_fu_1302_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address0 <= zext_ln23_24_fu_1243_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address0 <= tmp_18_fu_1167_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address0 <= zext_ln23_21_fu_1031_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address0 <= zext_ln23_fu_872_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address0 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address0 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_20_fu_887_p1, ap_block_pp0_stage1, zext_ln23_22_fu_1042_p1, ap_block_pp0_stage2, zext_ln23_23_fu_1181_p1, ap_block_pp0_stage3, zext_ln23_25_fu_1253_p1, ap_block_pp0_stage4, tmp_21_fu_1310_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_weights_address1 <= tmp_21_fu_1310_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address1 <= zext_ln23_25_fu_1253_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address1 <= zext_ln23_23_fu_1181_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address1 <= zext_ln23_22_fu_1042_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address1 <= zext_ln23_20_fu_887_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address1 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address1 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln23_5_fu_898_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_31_fu_1056_p1, ap_block_pp0_stage2, tmp_20_fu_1189_p3, ap_block_pp0_stage3, zext_ln23_34_fu_1263_p1, ap_block_pp0_stage4, tmp_23_fu_1318_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_weights_address2 <= tmp_23_fu_1318_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address2 <= zext_ln23_34_fu_1263_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address2 <= tmp_20_fu_1189_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address2 <= zext_ln23_31_fu_1056_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address2 <= zext_ln23_5_fu_898_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address2 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address2 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_30_fu_913_p1, ap_block_pp0_stage1, zext_ln23_32_fu_1067_p1, ap_block_pp0_stage2, zext_ln23_33_fu_1203_p1, ap_block_pp0_stage3, zext_ln23_35_fu_1273_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address3 <= zext_ln23_35_fu_1273_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address3 <= zext_ln23_33_fu_1203_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address3 <= zext_ln23_32_fu_1067_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address3 <= zext_ln23_30_fu_913_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address3 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address3 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, zext_ln23_6_fu_924_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_41_fu_1081_p1, ap_block_pp0_stage2, tmp_22_fu_1211_p3, ap_block_pp0_stage3, zext_ln23_44_fu_1283_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address4 <= zext_ln23_44_fu_1283_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address4 <= tmp_22_fu_1211_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address4 <= zext_ln23_41_fu_1081_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address4 <= zext_ln23_6_fu_924_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address4 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address4 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address5_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_40_fu_939_p1, ap_block_pp0_stage1, zext_ln23_42_fu_1092_p1, ap_block_pp0_stage2, zext_ln23_43_fu_1225_p1, ap_block_pp0_stage3, zext_ln23_45_fu_1293_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address5 <= zext_ln23_45_fu_1293_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address5 <= zext_ln23_43_fu_1225_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address5 <= zext_ln23_42_fu_1092_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address5 <= zext_ln23_40_fu_939_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address5 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address5 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce1 <= ap_const_logic_1;
        else 
            conv_1_weights_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce2 <= ap_const_logic_1;
        else 
            conv_1_weights_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce3 <= ap_const_logic_1;
        else 
            conv_1_weights_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce4 <= ap_const_logic_1;
        else 
            conv_1_weights_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce5_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            conv_1_weights_ce5 <= ap_const_logic_1;
        else 
            conv_1_weights_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln30_6_fu_1376_p1, zext_ln30_7_fu_1440_p1, zext_ln30_8_fu_1502_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_out_address0 <= zext_ln30_8_fu_1502_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            conv_out_address0 <= zext_ln30_7_fu_1440_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            conv_out_address0 <= zext_ln30_6_fu_1376_p1(12 - 1 downto 0);
        else 
            conv_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            conv_out_ce0 <= ap_const_logic_1;
        else 
            conv_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_d0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, select_ln29_fu_1423_p3, select_ln29_1_fu_1486_p3, select_ln29_2_fu_1547_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_out_d0 <= select_ln29_2_fu_1547_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            conv_out_d0 <= select_ln29_1_fu_1486_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            conv_out_d0 <= select_ln29_fu_1423_p3;
        else 
            conv_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter8, icmp_ln8_reg_1570_pp0_iter8_reg, ap_enable_reg_pp0_iter9)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1570_pp0_iter8_reg = ap_const_lv1_0)))) then 
            conv_out_we0 <= ap_const_logic_1;
        else 
            conv_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1555_p0 <= ap_const_lv10_1A(6 - 1 downto 0);
    grp_fu_1555_p1 <= grp_fu_1555_p10(5 - 1 downto 0);
    grp_fu_1555_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_1_reg_1586_pp0_iter8_reg),10));
    grp_fu_1555_p2 <= grp_fu_1555_p20(5 - 1 downto 0);
    grp_fu_1555_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_7_reg_1607_pp0_iter8_reg),10));

    grp_fu_549_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1807, w_sum_4_reg_2029, w_sum_4_0_0_1_reg_2059, ap_enable_reg_pp0_iter2, w_sum_4_0_0_2_reg_2074, w_sum_4_0_1_reg_2089, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_549_p0 <= w_sum_4_0_1_reg_2089;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_549_p0 <= w_sum_4_0_0_2_reg_2074;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_549_p0 <= w_sum_4_0_0_1_reg_2059;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_549_p0 <= w_sum_4_reg_2029;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_549_p0 <= tmp_1_reg_1807;
        else 
            grp_fu_549_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_549_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_0_0_1_reg_1812, tmp_0_0_2_reg_1889_pp0_iter1_reg, tmp_0_1_reg_1894_pp0_iter2_reg, tmp_0_1_1_reg_1949_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_549_p1 <= tmp_0_1_1_reg_1949_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_549_p1 <= tmp_0_1_reg_1894_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_549_p1 <= tmp_0_0_2_reg_1889_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_549_p1 <= tmp_0_0_1_reg_1812;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_549_p1 <= ap_const_lv32_0;
        else 
            grp_fu_549_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_554_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_39_reg_1833, w_sum_4_1_reg_2039, ap_enable_reg_pp0_iter2, w_sum_4_1_0_1_reg_2064, w_sum_4_1_0_2_reg_2079, ap_enable_reg_pp0_iter3, w_sum_4_1_1_reg_2094, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_554_p0 <= w_sum_4_1_1_reg_2094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_554_p0 <= w_sum_4_1_0_2_reg_2079;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_554_p0 <= w_sum_4_1_0_1_reg_2064;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_554_p0 <= w_sum_4_1_reg_2039;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_554_p0 <= tmp_1_39_reg_1833;
        else 
            grp_fu_554_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_554_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_0_1_reg_1838, tmp_1_0_2_reg_1909_pp0_iter1_reg, tmp_1_1_reg_1914_pp0_iter2_reg, tmp_1_1_1_reg_1964_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_554_p1 <= tmp_1_1_1_reg_1964_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_554_p1 <= tmp_1_1_reg_1914_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_554_p1 <= tmp_1_0_2_reg_1909_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_554_p1 <= tmp_1_0_1_reg_1838;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_554_p1 <= ap_const_lv32_0;
        else 
            grp_fu_554_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_559_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_reg_1859, w_sum_4_2_reg_2049, ap_enable_reg_pp0_iter2, w_sum_4_2_0_1_reg_2069, w_sum_4_2_0_2_reg_2084, ap_enable_reg_pp0_iter3, w_sum_4_2_1_reg_2099, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_559_p0 <= w_sum_4_2_1_reg_2099;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_559_p0 <= w_sum_4_2_0_2_reg_2084;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_559_p0 <= w_sum_4_2_0_1_reg_2069;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_559_p0 <= w_sum_4_2_reg_2049;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_559_p0 <= tmp_2_reg_1859;
        else 
            grp_fu_559_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_559_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_2_0_1_reg_1864, tmp_2_0_2_reg_1929_pp0_iter1_reg, tmp_2_1_reg_1934_pp0_iter2_reg, tmp_2_1_1_reg_1979_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_559_p1 <= tmp_2_1_1_reg_1979_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_559_p1 <= tmp_2_1_reg_1934_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_559_p1 <= tmp_2_0_2_reg_1929_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_559_p1 <= tmp_2_0_1_reg_1864;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_559_p1 <= ap_const_lv32_0;
        else 
            grp_fu_559_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_564_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, reg_664, ap_enable_reg_pp0_iter7, w_sum_4_0_1_1_reg_2104, ap_enable_reg_pp0_iter4, w_sum_4_0_1_2_reg_2119, ap_enable_reg_pp0_iter5, w_sum_4_0_2_reg_2134, ap_enable_reg_pp0_iter6, w_sum_4_0_2_1_reg_2149, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_564_p0 <= reg_664;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_564_p0 <= w_sum_4_0_2_1_reg_2149;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_564_p0 <= w_sum_4_0_2_reg_2134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_564_p0 <= w_sum_4_0_1_2_reg_2119;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_564_p0 <= w_sum_4_0_1_1_reg_2104;
        else 
            grp_fu_564_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_564_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, tmp_0_1_2_reg_1954_pp0_iter3_reg, tmp_0_2_reg_1999_pp0_iter5_reg, tmp_0_2_1_reg_2004_pp0_iter6_reg, tmp_0_2_2_reg_2034_pp0_iter6_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, conv_1_bias_load_reg_2169, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_564_p1 <= conv_1_bias_load_reg_2169;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_564_p1 <= tmp_0_2_2_reg_2034_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_564_p1 <= tmp_0_2_1_reg_2004_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_564_p1 <= tmp_0_2_reg_1999_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_564_p1 <= tmp_0_1_2_reg_1954_pp0_iter3_reg;
        else 
            grp_fu_564_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_568_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter4, w_sum_4_1_1_1_reg_2109, ap_enable_reg_pp0_iter5, w_sum_4_1_1_2_reg_2124, ap_enable_reg_pp0_iter6, w_sum_4_1_2_reg_2139, w_sum_4_1_2_1_reg_2154, w_sum_4_1_2_2_reg_2189, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_568_p0 <= w_sum_4_1_2_2_reg_2189;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_568_p0 <= w_sum_4_1_2_1_reg_2154;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_568_p0 <= w_sum_4_1_2_reg_2139;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_568_p0 <= w_sum_4_1_1_2_reg_2124;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_568_p0 <= w_sum_4_1_1_1_reg_2109;
        else 
            grp_fu_568_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_568_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, tmp_1_1_2_reg_1969_pp0_iter3_reg, tmp_1_2_reg_2009_pp0_iter5_reg, tmp_1_2_1_reg_2014_pp0_iter6_reg, tmp_1_2_2_reg_2044_pp0_iter6_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, conv_1_bias_load_1_reg_2179, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_568_p1 <= conv_1_bias_load_1_reg_2179;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_568_p1 <= tmp_1_2_2_reg_2044_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_568_p1 <= tmp_1_2_1_reg_2014_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_568_p1 <= tmp_1_2_reg_2009_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_568_p1 <= tmp_1_1_2_reg_1969_pp0_iter3_reg;
        else 
            grp_fu_568_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_572_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter4, w_sum_4_2_1_1_reg_2114, ap_enable_reg_pp0_iter5, w_sum_4_2_1_2_reg_2129, ap_enable_reg_pp0_iter6, w_sum_4_2_2_reg_2144, w_sum_4_2_2_1_reg_2159, w_sum_4_2_2_2_reg_2194, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_572_p0 <= w_sum_4_2_2_2_reg_2194;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_572_p0 <= w_sum_4_2_2_1_reg_2159;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_572_p0 <= w_sum_4_2_2_reg_2144;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_572_p0 <= w_sum_4_2_1_2_reg_2129;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_572_p0 <= w_sum_4_2_1_1_reg_2114;
        else 
            grp_fu_572_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_572_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, tmp_2_1_2_reg_1984_pp0_iter3_reg, tmp_2_2_reg_2019_pp0_iter5_reg, tmp_2_2_1_reg_2024_pp0_iter6_reg, tmp_2_2_2_reg_2054_pp0_iter6_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, conv_1_bias_load_2_reg_2199, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_572_p1 <= conv_1_bias_load_2_reg_2199;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_572_p1 <= tmp_2_2_2_reg_2054_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_572_p1 <= tmp_2_2_1_reg_2024_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_572_p1 <= tmp_2_2_reg_2019_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_572_p1 <= tmp_2_1_2_reg_1984_pp0_iter3_reg;
        else 
            grp_fu_572_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_582_p1_assign_proc : process(input_r_q0, input_r_q1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_582_p1 <= input_r_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_582_p1 <= input_r_q1;
        else 
            grp_fu_582_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_613_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, grp_fu_564_p2, ap_enable_reg_pp0_iter8, w_sum_1_reg_2204, w_sum_2_reg_2211, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_613_p0 <= w_sum_2_reg_2211;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_613_p0 <= w_sum_1_reg_2204;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_613_p0 <= grp_fu_564_p2;
            else 
                grp_fu_613_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_613_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln11_fu_700_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_519_p4 = ap_const_lv7_34) else "0";
    icmp_ln14_fu_774_p2 <= "1" when (ap_phi_mux_f_0_0_phi_fu_542_p4 = ap_const_lv3_6) else "0";
    icmp_ln29_10_fu_1523_p2 <= "0" when (tmp_10_fu_1509_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_11_fu_1529_p2 <= "1" when (trunc_ln29_4_fu_1519_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_7_fu_1405_p2 <= "1" when (trunc_ln29_fu_1395_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_8_fu_1462_p2 <= "0" when (tmp_8_fu_1448_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_9_fu_1468_p2 <= "1" when (trunc_ln29_3_fu_1458_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_fu_1399_p2 <= "0" when (tmp_s_fu_1385_p4 = ap_const_lv8_FF) else "1";
    icmp_ln8_fu_688_p2 <= "1" when (ap_phi_mux_indvar_flatten30_phi_fu_496_p4 = ap_const_lv11_548) else "0";

    input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_9_fu_824_p1, ap_block_pp0_stage1, zext_ln23_13_fu_1017_p1, zext_ln23_12_fu_1140_p1, ap_block_pp0_stage2, sext_ln23_fu_1230_p1, ap_block_pp0_stage3, zext_ln23_15_fu_1298_p1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address0 <= zext_ln23_15_fu_1298_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address0 <= sext_ln23_fu_1230_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address0 <= zext_ln23_12_fu_1140_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address0 <= zext_ln23_13_fu_1017_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address0 <= zext_ln23_9_fu_824_p1(10 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_11_fu_853_p1, zext_ln23_10_fu_1004_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln23_14_fu_1154_p1, ap_block_pp0_stage3, sext_ln23_1_fu_1234_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address1 <= sext_ln23_1_fu_1234_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address1 <= zext_ln23_14_fu_1154_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address1 <= zext_ln23_10_fu_1004_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address1 <= zext_ln23_11_fu_853_p1(10 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln29_3_fu_1474_p2 <= (icmp_ln29_9_fu_1468_p2 or icmp_ln29_8_fu_1462_p2);
    or_ln29_4_fu_1535_p2 <= (icmp_ln29_11_fu_1529_p2 or icmp_ln29_10_fu_1523_p2);
    or_ln29_fu_1411_p2 <= (icmp_ln29_fu_1399_p2 or icmp_ln29_7_fu_1405_p2);
    or_ln30_fu_792_p2 <= (icmp_ln11_fu_700_p2 or and_ln30_fu_780_p2);
    p_shl_cast_fu_1343_p3 <= (grp_fu_1555_p3 & ap_const_lv3_0);
    r_fu_670_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_0_phi_fu_507_p4) + unsigned(ap_const_lv5_1));
    select_ln11_fu_1331_p3 <= 
        ap_const_lv7_1 when (icmp_ln11_reg_1579(0) = '1') else 
        add_ln11_reg_1761;
    select_ln29_1_fu_1486_p3 <= 
        w_sum_1_reg_2204 when (and_ln29_3_fu_1480_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln29_2_fu_1547_p3 <= 
        w_sum_2_reg_2211 when (and_ln29_4_fu_1541_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln29_fu_1423_p3 <= 
        reg_664 when (and_ln29_fu_1417_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln30_1_fu_714_p3 <= 
        r_fu_670_p2 when (icmp_ln11_fu_700_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_507_p4;
    select_ln30_2_fu_950_p3 <= 
        add_ln23_fu_944_p2 when (icmp_ln11_reg_1579(0) = '1') else 
        r_reg_1565;
    select_ln30_3_fu_986_p3 <= 
        ap_const_lv5_3 when (icmp_ln11_reg_1579(0) = '1') else 
        ap_const_lv5_2;
    select_ln30_4_fu_752_p3 <= 
        ap_const_lv5_1 when (icmp_ln11_fu_700_p2(0) = '1') else 
        c_fu_676_p2;
    select_ln30_5_fu_760_p3 <= 
        ap_const_lv5_2 when (icmp_ln11_fu_700_p2(0) = '1') else 
        add_ln23_1_fu_682_p2;
    select_ln30_6_fu_798_p3 <= 
        ap_const_lv3_0 when (or_ln30_fu_792_p2(0) = '1') else 
        ap_phi_mux_f_0_0_phi_fu_542_p4;
    select_ln30_7_fu_806_p3 <= 
        add_ln23_3_fu_786_p2 when (and_ln30_fu_780_p2(0) = '1') else 
        select_ln30_fu_706_p3;
    select_ln30_8_fu_835_p3 <= 
        add_ln23_7_fu_829_p2 when (and_ln30_fu_780_p2(0) = '1') else 
        select_ln30_4_fu_752_p3;
    select_ln30_9_fu_864_p3 <= 
        add_ln23_11_fu_858_p2 when (and_ln30_fu_780_p2(0) = '1') else 
        select_ln30_5_fu_760_p3;
    select_ln30_fu_706_p3 <= 
        ap_const_lv5_0 when (icmp_ln11_fu_700_p2(0) = '1') else 
        ap_phi_mux_c_0_phi_fu_531_p4;
        sext_ln23_1_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_10_reg_1776),64));

        sext_ln23_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_6_reg_1766),64));

    sub_ln23_1_fu_980_p2 <= std_logic_vector(unsigned(zext_ln23_3_fu_964_p1) - unsigned(zext_ln23_4_fu_976_p1));
    sub_ln23_2_fu_1125_p2 <= std_logic_vector(unsigned(zext_ln23_7_fu_1110_p1) - unsigned(zext_ln23_8_fu_1121_p1));
    sub_ln23_fu_746_p2 <= std_logic_vector(unsigned(zext_ln23_1_fu_730_p1) - unsigned(zext_ln23_2_fu_742_p1));
    sub_ln30_fu_1361_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1343_p3) - unsigned(zext_ln30_3_fu_1357_p1));
    tmp_10_fu_1509_p4 <= bitcast_ln29_4_fu_1506_p1(30 downto 23);
    tmp_12_fu_734_p3 <= (select_ln30_1_fu_714_p3 & ap_const_lv2_0);
    tmp_13_fu_956_p3 <= (select_ln30_2_fu_950_p3 & ap_const_lv5_0);
    tmp_14_fu_968_p3 <= (select_ln30_2_fu_950_p3 & ap_const_lv2_0);
    tmp_15_fu_1103_p3 <= (add_ln30_reg_1709 & ap_const_lv5_0);
    tmp_16_fu_1114_p3 <= (add_ln30_reg_1709 & ap_const_lv2_0);
    tmp_17_fu_1350_p3 <= (grp_fu_1555_p3 & ap_const_lv1_0);
    tmp_18_fu_1167_p3 <= (ap_const_lv61_3 & select_ln30_6_reg_1597);
    tmp_19_fu_1302_p3 <= (ap_const_lv61_6 & select_ln30_6_reg_1597);
    tmp_20_fu_1189_p3 <= (ap_const_lv61_3 & add_ln14_reg_1655);
    tmp_21_fu_1310_p3 <= (ap_const_lv61_6 & add_ln14_reg_1655);
    tmp_22_fu_1211_p3 <= (ap_const_lv61_3 & add_ln14_1_reg_1679);
    tmp_23_fu_1318_p3 <= (ap_const_lv61_6 & add_ln14_1_reg_1679);
    tmp_8_fu_1448_p4 <= bitcast_ln29_3_fu_1445_p1(30 downto 23);
    tmp_fu_722_p3 <= (select_ln30_1_fu_714_p3 & ap_const_lv5_0);
    tmp_s_fu_1385_p4 <= bitcast_ln29_fu_1381_p1(30 downto 23);
    trunc_ln29_3_fu_1458_p1 <= bitcast_ln29_3_fu_1445_p1(23 - 1 downto 0);
    trunc_ln29_4_fu_1519_p1 <= bitcast_ln29_4_fu_1506_p1(23 - 1 downto 0);
    trunc_ln29_fu_1395_p1 <= bitcast_ln29_fu_1381_p1(23 - 1 downto 0);
    xor_ln30_fu_768_p2 <= (icmp_ln11_fu_700_p2 xor ap_const_lv1_1);
    zext_ln23_10_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_5_fu_999_p2),64));
    zext_ln23_11_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_8_fu_847_p2),64));
    zext_ln23_12_fu_1140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_9_fu_1136_p2),64));
    zext_ln23_13_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_12_fu_1012_p2),64));
    zext_ln23_14_fu_1154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_13_fu_1150_p2),64));
    zext_ln23_15_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_14_reg_1786),64));
    zext_ln23_16_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1597_pp0_iter8_reg),13));
    zext_ln23_17_fu_1164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1597),6));
    zext_ln23_18_fu_1022_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1597),5));
    zext_ln23_19_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_fu_798_p3),4));
    zext_ln23_1_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_722_p3),11));
    zext_ln23_20_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_15_fu_881_p2),64));
    zext_ln23_21_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_16_fu_1025_p2),64));
    zext_ln23_22_fu_1042_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_17_fu_1036_p2),64));
    zext_ln23_23_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_18_fu_1175_p2),64));
    zext_ln23_24_fu_1243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_19_fu_1238_p2),64));
    zext_ln23_25_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_20_fu_1248_p2),64));
    zext_ln23_26_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_reg_1655_pp0_iter8_reg),13));
    zext_ln23_27_fu_1186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_reg_1655),6));
    zext_ln23_28_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_reg_1655),5));
    zext_ln23_29_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_fu_892_p2),4));
    zext_ln23_2_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_734_p3),11));
    zext_ln23_30_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_21_fu_907_p2),64));
    zext_ln23_31_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_22_fu_1050_p2),64));
    zext_ln23_32_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_23_fu_1061_p2),64));
    zext_ln23_33_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_24_fu_1197_p2),64));
    zext_ln23_34_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_25_fu_1258_p2),64));
    zext_ln23_35_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_26_fu_1268_p2),64));
    zext_ln23_36_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_reg_1679_pp0_iter8_reg),13));
    zext_ln23_37_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_reg_1679),6));
    zext_ln23_38_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_reg_1679),5));
    zext_ln23_39_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_fu_918_p2),4));
    zext_ln23_3_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_956_p3),11));
    zext_ln23_40_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_27_fu_933_p2),64));
    zext_ln23_41_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_28_fu_1075_p2),64));
    zext_ln23_42_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_29_fu_1086_p2),64));
    zext_ln23_43_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_30_fu_1219_p2),64));
    zext_ln23_44_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_31_fu_1278_p2),64));
    zext_ln23_45_fu_1293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_32_fu_1288_p2),64));
    zext_ln23_4_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_968_p3),11));
    zext_ln23_5_fu_898_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_fu_892_p2),64));
    zext_ln23_6_fu_924_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln14_1_fu_918_p2),64));
    zext_ln23_7_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1103_p3),11));
    zext_ln23_8_fu_1121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_1114_p3),11));
    zext_ln23_9_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_4_fu_818_p2),64));
    zext_ln23_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_fu_798_p3),64));
    zext_ln30_2_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_7_fu_806_p3),11));
    zext_ln30_3_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1350_p3),13));
    zext_ln30_4_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_8_fu_835_p3),11));
    zext_ln30_5_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_9_reg_1635),11));
    zext_ln30_6_fu_1376_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_2_fu_1370_p2),64));
    zext_ln30_7_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_3_fu_1435_p2),64));
    zext_ln30_8_fu_1502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_4_reg_2224),64));
end behav;
