// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.924300,HLS_SYN_LAT=497954,HLS_SYN_TPT=none,HLS_SYN_MEM=90,HLS_SYN_DSP=110,HLS_SYN_FF=69206,HLS_SYN_LUT=44221,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] conv_1_out_address0;
reg    conv_1_out_ce0;
reg    conv_1_out_we0;
wire   [31:0] conv_1_out_q0;
reg   [9:0] max_pool_1_out_address0;
reg    max_pool_1_out_ce0;
reg    max_pool_1_out_we0;
wire   [31:0] max_pool_1_out_q0;
reg    max_pool_1_out_ce1;
wire   [31:0] max_pool_1_out_q1;
reg   [10:0] conv_2_out_address0;
reg    conv_2_out_ce0;
reg    conv_2_out_we0;
wire   [31:0] conv_2_out_q0;
reg   [8:0] max_pool_2_out_address0;
reg    max_pool_2_out_ce0;
reg    max_pool_2_out_we0;
wire   [31:0] max_pool_2_out_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
wire   [14:0] dense_1_weights_address0;
reg    dense_1_weights_ce0;
wire   [31:0] dense_1_weights_q0;
wire   [5:0] dense_1_bias_address0;
reg    dense_1_bias_ce0;
wire   [31:0] dense_1_bias_q0;
reg   [5:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_d0;
wire   [31:0] dense_1_out_q0;
wire   [10:0] dense_2_weights_address0;
reg    dense_2_weights_ce0;
wire   [31:0] dense_2_weights_q0;
wire   [4:0] dense_2_bias_address0;
reg    dense_2_bias_ce0;
wire   [31:0] dense_2_bias_q0;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_d0;
wire   [31:0] dense_2_out_q0;
wire   [31:0] grp_fu_461_p2;
reg   [31:0] reg_475;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state30;
wire   [31:0] grp_fu_453_p2;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state34;
reg   [31:0] reg_486;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state38;
wire   [4:0] i_fu_497_p2;
reg   [4:0] i_reg_810;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_503_p2;
reg   [9:0] ix_in_reg_815;
wire   [0:0] icmp_ln23_fu_491_p2;
wire   [10:0] sub_ln27_fu_533_p2;
reg   [10:0] sub_ln27_reg_820;
wire   [4:0] j_fu_545_p2;
reg   [4:0] j_reg_828;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_539_p2;
wire   [10:0] add_ln27_fu_560_p2;
reg   [10:0] add_ln27_reg_838;
wire   [9:0] add_ln28_fu_565_p2;
reg   [9:0] add_ln28_reg_843;
wire   [5:0] i_1_fu_581_p2;
reg   [5:0] i_1_reg_851;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln14_fu_587_p1;
reg   [63:0] zext_ln14_reg_856;
wire   [0:0] icmp_ln9_fu_575_p2;
wire   [14:0] zext_ln13_fu_591_p1;
reg   [14:0] zext_ln13_reg_862;
wire   [8:0] j_1_fu_601_p2;
reg   [8:0] j_1_reg_870;
wire    ap_CS_fsm_state15;
wire   [14:0] add_ln14_4_fu_612_p2;
reg   [14:0] add_ln14_4_reg_875;
wire   [0:0] icmp_ln13_fu_595_p2;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state22;
wire   [4:0] i_2_fu_685_p2;
reg   [4:0] i_2_reg_913;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln14_4_fu_691_p1;
reg   [63:0] zext_ln14_4_reg_918;
wire   [0:0] icmp_ln9_1_fu_679_p2;
wire   [11:0] zext_ln13_3_fu_695_p1;
reg   [11:0] zext_ln13_3_reg_924;
wire   [5:0] j_2_fu_705_p2;
reg   [5:0] j_2_reg_932;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln13_1_fu_699_p2;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state35;
reg   [9:0] conv_1_input_address0;
reg    conv_1_input_ce0;
reg    conv_1_input_we0;
wire   [31:0] conv_1_input_q0;
wire    grp_conv_2_fu_398_ap_start;
wire    grp_conv_2_fu_398_ap_done;
wire    grp_conv_2_fu_398_ap_idle;
wire    grp_conv_2_fu_398_ap_ready;
wire   [10:0] grp_conv_2_fu_398_conv_out_address0;
wire    grp_conv_2_fu_398_conv_out_ce0;
wire    grp_conv_2_fu_398_conv_out_we0;
wire   [31:0] grp_conv_2_fu_398_conv_out_d0;
wire   [9:0] grp_conv_2_fu_398_max_pool_1_out_address0;
wire    grp_conv_2_fu_398_max_pool_1_out_ce0;
wire   [9:0] grp_conv_2_fu_398_max_pool_1_out_address1;
wire    grp_conv_2_fu_398_max_pool_1_out_ce1;
wire    grp_dense_out_fu_406_ap_start;
wire    grp_dense_out_fu_406_ap_done;
wire    grp_dense_out_fu_406_ap_idle;
wire    grp_dense_out_fu_406_ap_ready;
wire   [31:0] grp_dense_out_fu_406_prediction_Addr_A;
wire    grp_dense_out_fu_406_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_406_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_406_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_406_dense_2_out_address0;
wire    grp_dense_out_fu_406_dense_2_out_ce0;
wire    grp_conv_1_fu_418_ap_start;
wire    grp_conv_1_fu_418_ap_done;
wire    grp_conv_1_fu_418_ap_idle;
wire    grp_conv_1_fu_418_ap_ready;
wire   [9:0] grp_conv_1_fu_418_input_r_address0;
wire    grp_conv_1_fu_418_input_r_ce0;
wire   [11:0] grp_conv_1_fu_418_conv_out_address0;
wire    grp_conv_1_fu_418_conv_out_ce0;
wire    grp_conv_1_fu_418_conv_out_we0;
wire   [31:0] grp_conv_1_fu_418_conv_out_d0;
wire    grp_max_pool_1_fu_429_ap_start;
wire    grp_max_pool_1_fu_429_ap_done;
wire    grp_max_pool_1_fu_429_ap_idle;
wire    grp_max_pool_1_fu_429_ap_ready;
wire   [9:0] grp_max_pool_1_fu_429_max_pool_out_address0;
wire    grp_max_pool_1_fu_429_max_pool_out_ce0;
wire    grp_max_pool_1_fu_429_max_pool_out_we0;
wire   [31:0] grp_max_pool_1_fu_429_max_pool_out_d0;
wire   [11:0] grp_max_pool_1_fu_429_conv_1_out_address0;
wire    grp_max_pool_1_fu_429_conv_1_out_ce0;
wire    grp_max_pool_2_fu_437_ap_start;
wire    grp_max_pool_2_fu_437_ap_done;
wire    grp_max_pool_2_fu_437_ap_idle;
wire    grp_max_pool_2_fu_437_ap_ready;
wire   [8:0] grp_max_pool_2_fu_437_max_pool_out_address0;
wire    grp_max_pool_2_fu_437_max_pool_out_ce0;
wire    grp_max_pool_2_fu_437_max_pool_out_we0;
wire   [31:0] grp_max_pool_2_fu_437_max_pool_out_d0;
wire   [10:0] grp_max_pool_2_fu_437_conv_2_out_address0;
wire    grp_max_pool_2_fu_437_conv_2_out_ce0;
wire    grp_flat_fu_445_ap_start;
wire    grp_flat_fu_445_ap_done;
wire    grp_flat_fu_445_ap_idle;
wire    grp_flat_fu_445_ap_ready;
wire   [8:0] grp_flat_fu_445_flat_array_address0;
wire    grp_flat_fu_445_flat_array_ce0;
wire    grp_flat_fu_445_flat_array_we0;
wire   [31:0] grp_flat_fu_445_flat_array_d0;
wire   [8:0] grp_flat_fu_445_max_pool_2_out_address0;
wire    grp_flat_fu_445_max_pool_2_out_ce0;
reg   [9:0] ix_in_0_reg_275;
reg   [4:0] i_0_reg_287;
reg   [9:0] ix_in_1_reg_298;
wire    ap_CS_fsm_state4;
reg   [4:0] j_0_reg_308;
reg   [5:0] i_0_i_reg_319;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state26;
reg   [31:0] sum_0_i_reg_330;
reg   [8:0] j_0_i_reg_342;
reg   [14:0] phi_mul_reg_353;
reg   [4:0] i_0_i3_reg_364;
wire    ap_CS_fsm_state39;
reg   [31:0] sum_0_i6_reg_375;
reg   [5:0] j_0_i7_reg_387;
reg    grp_conv_2_fu_398_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_dense_out_fu_406_ap_start_reg;
wire    ap_CS_fsm_state40;
reg    grp_conv_1_fu_418_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_max_pool_1_fu_429_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_max_pool_2_fu_437_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_flat_fu_445_ap_start_reg;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln27_1_fu_551_p1;
wire  signed [63:0] sext_ln27_fu_571_p1;
wire   [63:0] zext_ln14_7_fu_623_p1;
wire   [63:0] zext_ln14_5_fu_607_p1;
wire  signed [63:0] sext_ln14_fu_751_p1;
wire   [63:0] zext_ln14_6_fu_711_p1;
wire   [31:0] cnn_input_Addr_A_orig;
reg   [31:0] grp_fu_453_p0;
reg   [31:0] grp_fu_453_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state31;
reg   [31:0] grp_fu_461_p0;
reg   [31:0] grp_fu_461_p1;
wire   [9:0] tmp_38_fu_509_p3;
wire   [6:0] tmp_39_fu_521_p3;
wire   [10:0] zext_ln27_fu_517_p1;
wire   [10:0] zext_ln27_2_fu_529_p1;
wire   [10:0] zext_ln27_3_fu_556_p1;
wire   [14:0] add_ln14_fu_618_p2;
wire   [31:0] bitcast_ln19_fu_628_p1;
wire   [7:0] tmp_fu_632_p4;
wire   [22:0] trunc_ln19_fu_642_p1;
wire   [0:0] icmp_ln19_1_fu_652_p2;
wire   [0:0] icmp_ln19_fu_646_p2;
wire   [0:0] or_ln19_fu_658_p2;
wire   [0:0] grp_fu_469_p2;
wire   [0:0] and_ln19_fu_664_p2;
wire   [10:0] tmp_40_fu_716_p3;
wire   [6:0] tmp_41_fu_728_p3;
wire   [11:0] zext_ln14_8_fu_724_p1;
wire   [11:0] zext_ln14_9_fu_736_p1;
wire   [11:0] sub_ln14_fu_740_p2;
wire   [11:0] add_ln14_3_fu_746_p2;
wire   [31:0] bitcast_ln19_1_fu_756_p1;
wire   [7:0] tmp_35_fu_760_p4;
wire   [22:0] trunc_ln19_1_fu_770_p1;
wire   [0:0] icmp_ln19_3_fu_780_p2;
wire   [0:0] icmp_ln19_2_fu_774_p2;
wire   [0:0] or_ln19_1_fu_786_p2;
wire   [0:0] and_ln19_1_fu_792_p2;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_conv_2_fu_398_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_406_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_418_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_429_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_437_ap_start_reg = 1'b0;
#0 grp_flat_fu_445_ap_start_reg = 1'b0;
end

cnn_conv_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_address0),
    .ce0(conv_1_out_ce0),
    .we0(conv_1_out_we0),
    .d0(grp_conv_1_fu_418_conv_out_d0),
    .q0(conv_1_out_q0)
);

cnn_max_pool_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 1014 ),
    .AddressWidth( 10 ))
max_pool_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_address0),
    .ce0(max_pool_1_out_ce0),
    .we0(max_pool_1_out_we0),
    .d0(grp_max_pool_1_fu_429_max_pool_out_d0),
    .q0(max_pool_1_out_q0),
    .address1(grp_conv_2_fu_398_max_pool_1_out_address1),
    .ce1(max_pool_1_out_ce1),
    .q1(max_pool_1_out_q1)
);

cnn_conv_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_address0),
    .ce0(conv_2_out_ce0),
    .we0(conv_2_out_we0),
    .d0(grp_conv_2_fu_398_conv_out_d0),
    .q0(conv_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_address0),
    .ce0(max_pool_2_out_ce0),
    .we0(max_pool_2_out_we0),
    .d0(grp_max_pool_2_fu_437_max_pool_out_d0),
    .q0(max_pool_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_445_flat_array_d0),
    .q0(flat_array_q0)
);

cnn_dense_1_weights #(
    .DataWidth( 32 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_weights_address0),
    .ce0(dense_1_weights_ce0),
    .q0(dense_1_weights_q0)
);

cnn_dense_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_bias_address0),
    .ce0(dense_1_bias_ce0),
    .q0(dense_1_bias_q0)
);

cnn_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_address0),
    .ce0(dense_1_out_ce0),
    .we0(dense_1_out_we0),
    .d0(dense_1_out_d0),
    .q0(dense_1_out_q0)
);

cnn_dense_2_weights #(
    .DataWidth( 32 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_address0),
    .ce0(dense_2_weights_ce0),
    .q0(dense_2_weights_q0)
);

cnn_dense_2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_address0),
    .ce0(dense_2_bias_ce0),
    .q0(dense_2_bias_q0)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_address0),
    .ce0(conv_1_input_ce0),
    .we0(conv_1_input_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_q0)
);

conv_2 grp_conv_2_fu_398(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_398_ap_start),
    .ap_done(grp_conv_2_fu_398_ap_done),
    .ap_idle(grp_conv_2_fu_398_ap_idle),
    .ap_ready(grp_conv_2_fu_398_ap_ready),
    .conv_out_address0(grp_conv_2_fu_398_conv_out_address0),
    .conv_out_ce0(grp_conv_2_fu_398_conv_out_ce0),
    .conv_out_we0(grp_conv_2_fu_398_conv_out_we0),
    .conv_out_d0(grp_conv_2_fu_398_conv_out_d0),
    .max_pool_1_out_address0(grp_conv_2_fu_398_max_pool_1_out_address0),
    .max_pool_1_out_ce0(grp_conv_2_fu_398_max_pool_1_out_ce0),
    .max_pool_1_out_q0(max_pool_1_out_q0),
    .max_pool_1_out_address1(grp_conv_2_fu_398_max_pool_1_out_address1),
    .max_pool_1_out_ce1(grp_conv_2_fu_398_max_pool_1_out_ce1),
    .max_pool_1_out_q1(max_pool_1_out_q1)
);

dense_out grp_dense_out_fu_406(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_406_ap_start),
    .ap_done(grp_dense_out_fu_406_ap_done),
    .ap_idle(grp_dense_out_fu_406_ap_idle),
    .ap_ready(grp_dense_out_fu_406_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_406_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_406_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_406_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_406_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_406_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_406_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

conv_1 grp_conv_1_fu_418(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_418_ap_start),
    .ap_done(grp_conv_1_fu_418_ap_done),
    .ap_idle(grp_conv_1_fu_418_ap_idle),
    .ap_ready(grp_conv_1_fu_418_ap_ready),
    .input_r_address0(grp_conv_1_fu_418_input_r_address0),
    .input_r_ce0(grp_conv_1_fu_418_input_r_ce0),
    .input_r_q0(conv_1_input_q0),
    .conv_out_address0(grp_conv_1_fu_418_conv_out_address0),
    .conv_out_ce0(grp_conv_1_fu_418_conv_out_ce0),
    .conv_out_we0(grp_conv_1_fu_418_conv_out_we0),
    .conv_out_d0(grp_conv_1_fu_418_conv_out_d0)
);

max_pool_1 grp_max_pool_1_fu_429(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_429_ap_start),
    .ap_done(grp_max_pool_1_fu_429_ap_done),
    .ap_idle(grp_max_pool_1_fu_429_ap_idle),
    .ap_ready(grp_max_pool_1_fu_429_ap_ready),
    .max_pool_out_address0(grp_max_pool_1_fu_429_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_1_fu_429_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_1_fu_429_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_1_fu_429_max_pool_out_d0),
    .conv_1_out_address0(grp_max_pool_1_fu_429_conv_1_out_address0),
    .conv_1_out_ce0(grp_max_pool_1_fu_429_conv_1_out_ce0),
    .conv_1_out_q0(conv_1_out_q0)
);

max_pool_2 grp_max_pool_2_fu_437(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_437_ap_start),
    .ap_done(grp_max_pool_2_fu_437_ap_done),
    .ap_idle(grp_max_pool_2_fu_437_ap_idle),
    .ap_ready(grp_max_pool_2_fu_437_ap_ready),
    .max_pool_out_address0(grp_max_pool_2_fu_437_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_2_fu_437_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_2_fu_437_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_2_fu_437_max_pool_out_d0),
    .conv_2_out_address0(grp_max_pool_2_fu_437_conv_2_out_address0),
    .conv_2_out_ce0(grp_max_pool_2_fu_437_conv_2_out_ce0),
    .conv_2_out_q0(conv_2_out_q0)
);

flat grp_flat_fu_445(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_445_ap_start),
    .ap_done(grp_flat_fu_445_ap_done),
    .ap_idle(grp_flat_fu_445_ap_idle),
    .ap_ready(grp_flat_fu_445_ap_ready),
    .flat_array_address0(grp_flat_fu_445_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_445_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_445_flat_array_we0),
    .flat_array_d0(grp_flat_fu_445_flat_array_d0),
    .max_pool_2_out_address0(grp_flat_fu_445_max_pool_2_out_address0),
    .max_pool_2_out_ce0(grp_flat_fu_445_max_pool_2_out_ce0),
    .max_pool_2_out_q0(max_pool_2_out_q0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U70(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_453_p0),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U71(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_461_p0),
    .din1(grp_fu_461_p1),
    .ce(1'b1),
    .dout(grp_fu_461_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U72(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_453_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_469_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_418_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_1_fu_418_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_418_ap_ready == 1'b1)) begin
            grp_conv_1_fu_418_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_398_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_conv_2_fu_398_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_398_ap_ready == 1'b1)) begin
            grp_conv_2_fu_398_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_406_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln9_1_fu_679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
            grp_dense_out_fu_406_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_406_ap_ready == 1'b1)) begin
            grp_dense_out_fu_406_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_445_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_flat_fu_445_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_445_ap_ready == 1'b1)) begin
            grp_flat_fu_445_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_429_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_max_pool_1_fu_429_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_429_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_429_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_437_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pool_2_fu_437_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_437_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_437_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_0_i3_reg_364 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_0_i3_reg_364 <= i_2_reg_913;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_0_i_reg_319 <= i_1_reg_851;
    end else if (((grp_flat_fu_445_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_i_reg_319 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_539_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_287 <= i_reg_810;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_287 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_539_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_275 <= ix_in_reg_815;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_275 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ix_in_1_reg_298 <= add_ln28_reg_843;
    end else if (((icmp_ln23_fu_491_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_298 <= ix_in_0_reg_275;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_0_i7_reg_387 <= j_2_reg_932;
    end else if (((icmp_ln9_1_fu_679_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        j_0_i7_reg_387 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_0_i_reg_342 <= j_1_reg_870;
    end else if (((icmp_ln9_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j_0_i_reg_342 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_308 <= j_reg_828;
    end else if (((icmp_ln23_fu_491_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_308 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        phi_mul_reg_353 <= add_ln14_4_reg_875;
    end else if (((icmp_ln9_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_mul_reg_353 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        sum_0_i6_reg_375 <= grp_fu_453_p2;
    end else if (((icmp_ln9_1_fu_679_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        sum_0_i6_reg_375 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sum_0_i_reg_330 <= grp_fu_453_p2;
    end else if (((icmp_ln9_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        sum_0_i_reg_330 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln14_4_reg_875 <= add_ln14_4_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln27_reg_838 <= add_ln27_fu_560_p2;
        add_ln28_reg_843 <= add_ln28_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_1_reg_851 <= i_1_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_2_reg_913 <= i_2_fu_685_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_810 <= i_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_491_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_reg_815 <= ix_in_fu_503_p2;
        sub_ln27_reg_820[10 : 2] <= sub_ln27_fu_533_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_1_reg_870 <= j_1_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j_2_reg_932 <= j_2_fu_705_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_828 <= j_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_475 <= grp_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_486 <= grp_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_1_fu_679_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        zext_ln13_3_reg_924[4 : 0] <= zext_ln13_3_fu_695_p1[4 : 0];
        zext_ln14_4_reg_918[4 : 0] <= zext_ln14_4_fu_691_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        zext_ln13_reg_862[5 : 0] <= zext_ln13_fu_591_p1[5 : 0];
        zext_ln14_reg_856[5 : 0] <= zext_ln14_fu_587_p1[5 : 0];
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_406_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_406_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_address0 = sext_ln27_fu_571_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_address0 = grp_conv_1_fu_418_input_r_address0;
    end else begin
        conv_1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce0 = grp_conv_1_fu_418_input_r_ce0;
    end else begin
        conv_1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_we0 = 1'b1;
    end else begin
        conv_1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_address0 = grp_max_pool_1_fu_429_conv_1_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_address0 = grp_conv_1_fu_418_conv_out_address0;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_ce0 = grp_max_pool_1_fu_429_conv_1_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_ce0 = grp_conv_1_fu_418_conv_out_ce0;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_we0 = grp_conv_1_fu_418_conv_out_we0;
    end else begin
        conv_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_address0 = grp_max_pool_2_fu_437_conv_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_address0 = grp_conv_2_fu_398_conv_out_address0;
    end else begin
        conv_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_ce0 = grp_max_pool_2_fu_437_conv_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_ce0 = grp_conv_2_fu_398_conv_out_ce0;
    end else begin
        conv_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_we0 = grp_conv_2_fu_398_conv_out_we0;
    end else begin
        conv_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_bias_ce0 = 1'b1;
    end else begin
        dense_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_1_out_address0 = zext_ln14_6_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_1_out_address0 = zext_ln14_reg_856;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28))) begin
        dense_1_out_ce0 = 1'b1;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_1_out_we0 = 1'b1;
    end else begin
        dense_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_weights_ce0 = 1'b1;
    end else begin
        dense_1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_2_bias_ce0 = 1'b1;
    end else begin
        dense_2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_address0 = zext_ln14_4_reg_918;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dense_2_out_address0 = grp_dense_out_fu_406_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dense_2_out_ce0 = grp_dense_out_fu_406_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_we0 = 1'b1;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_2_weights_ce0 = 1'b1;
    end else begin
        dense_2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_address0 = zext_ln14_5_fu_607_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_address0 = grp_flat_fu_445_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_ce0 = grp_flat_fu_445_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_we0 = grp_flat_fu_445_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state35))) begin
        grp_fu_453_p0 = sum_0_i6_reg_375;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state22))) begin
        grp_fu_453_p0 = sum_0_i_reg_330;
    end else begin
        grp_fu_453_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_453_p1 = dense_2_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_453_p1 = dense_1_bias_q0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_453_p1 = reg_475;
    end else begin
        grp_fu_453_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_461_p0 = dense_1_out_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_461_p0 = flat_array_q0;
    end else begin
        grp_fu_461_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_461_p1 = dense_2_weights_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_461_p1 = dense_1_weights_q0;
    end else begin
        grp_fu_461_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_address0 = grp_max_pool_1_fu_429_max_pool_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_address0 = grp_conv_2_fu_398_max_pool_1_out_address0;
    end else begin
        max_pool_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_ce0 = grp_max_pool_1_fu_429_max_pool_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_ce0 = grp_conv_2_fu_398_max_pool_1_out_ce0;
    end else begin
        max_pool_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_ce1 = grp_conv_2_fu_398_max_pool_1_out_ce1;
    end else begin
        max_pool_1_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_we0 = grp_max_pool_1_fu_429_max_pool_out_we0;
    end else begin
        max_pool_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_address0 = grp_flat_fu_445_max_pool_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_address0 = grp_max_pool_2_fu_437_max_pool_out_address0;
    end else begin
        max_pool_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_ce0 = grp_flat_fu_445_max_pool_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_ce0 = grp_max_pool_2_fu_437_max_pool_out_ce0;
    end else begin
        max_pool_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_we0 = grp_max_pool_2_fu_437_max_pool_out_we0;
    end else begin
        max_pool_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_491_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_539_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_conv_1_fu_418_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_max_pool_1_fu_429_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_2_fu_398_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_max_pool_2_fu_437_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_flat_fu_445_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln9_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln13_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln9_1_fu_679_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln13_1_fu_699_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_dense_out_fu_406_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_3_fu_746_p2 = (sub_ln14_fu_740_p2 + zext_ln13_3_reg_924);

assign add_ln14_4_fu_612_p2 = (phi_mul_reg_353 + 15'd50);

assign add_ln14_fu_618_p2 = (zext_ln13_reg_862 + phi_mul_reg_353);

assign add_ln27_fu_560_p2 = (sub_ln27_reg_820 + zext_ln27_3_fu_556_p1);

assign add_ln28_fu_565_p2 = (ix_in_1_reg_298 + 10'd1);

assign and_ln19_1_fu_792_p2 = (or_ln19_1_fu_786_p2 & grp_fu_469_p2);

assign and_ln19_fu_664_p2 = (or_ln19_fu_658_p2 & grp_fu_469_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln19_1_fu_756_p1 = reg_486;

assign bitcast_ln19_fu_628_p1 = reg_486;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_551_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign dense_1_bias_address0 = zext_ln14_reg_856;

assign dense_1_out_d0 = ((and_ln19_fu_664_p2[0:0] === 1'b1) ? 32'd0 : reg_486);

assign dense_1_weights_address0 = zext_ln14_7_fu_623_p1;

assign dense_2_bias_address0 = zext_ln14_4_reg_918;

assign dense_2_out_d0 = ((and_ln19_1_fu_792_p2[0:0] === 1'b1) ? 32'd0 : reg_486);

assign dense_2_weights_address0 = sext_ln14_fu_751_p1;

assign grp_conv_1_fu_418_ap_start = grp_conv_1_fu_418_ap_start_reg;

assign grp_conv_2_fu_398_ap_start = grp_conv_2_fu_398_ap_start_reg;

assign grp_dense_out_fu_406_ap_start = grp_dense_out_fu_406_ap_start_reg;

assign grp_flat_fu_445_ap_start = grp_flat_fu_445_ap_start_reg;

assign grp_max_pool_1_fu_429_ap_start = grp_max_pool_1_fu_429_ap_start_reg;

assign grp_max_pool_2_fu_437_ap_start = grp_max_pool_2_fu_437_ap_start_reg;

assign i_1_fu_581_p2 = (i_0_i_reg_319 + 6'd1);

assign i_2_fu_685_p2 = (i_0_i3_reg_364 + 5'd1);

assign i_fu_497_p2 = (i_0_reg_287 + 5'd1);

assign icmp_ln13_1_fu_699_p2 = ((j_0_i7_reg_387 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_595_p2 = ((j_0_i_reg_342 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_652_p2 = ((trunc_ln19_fu_642_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_774_p2 = ((tmp_35_fu_760_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_780_p2 = ((trunc_ln19_1_fu_770_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_646_p2 = ((tmp_fu_632_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_491_p2 = ((i_0_reg_287 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_539_p2 = ((j_0_reg_308 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_679_p2 = ((i_0_i3_reg_364 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_575_p2 = ((i_0_i_reg_319 == 6'd50) ? 1'b1 : 1'b0);

assign ix_in_fu_503_p2 = (ix_in_0_reg_275 + 10'd28);

assign j_1_fu_601_p2 = (j_0_i_reg_342 + 9'd1);

assign j_2_fu_705_p2 = (j_0_i7_reg_387 + 6'd1);

assign j_fu_545_p2 = (j_0_reg_308 + 5'd1);

assign or_ln19_1_fu_786_p2 = (icmp_ln19_3_fu_780_p2 | icmp_ln19_2_fu_774_p2);

assign or_ln19_fu_658_p2 = (icmp_ln19_fu_646_p2 | icmp_ln19_1_fu_652_p2);

assign prediction_Addr_A = grp_dense_out_fu_406_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_406_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_406_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_406_prediction_WEN_A;

assign sext_ln14_fu_751_p1 = $signed(add_ln14_3_fu_746_p2);

assign sext_ln27_fu_571_p1 = $signed(add_ln27_reg_838);

assign sub_ln14_fu_740_p2 = (zext_ln14_8_fu_724_p1 - zext_ln14_9_fu_736_p1);

assign sub_ln27_fu_533_p2 = (zext_ln27_fu_517_p1 - zext_ln27_2_fu_529_p1);

assign tmp_35_fu_760_p4 = {{bitcast_ln19_1_fu_756_p1[30:23]}};

assign tmp_38_fu_509_p3 = {{i_0_reg_287}, {5'd0}};

assign tmp_39_fu_521_p3 = {{i_0_reg_287}, {2'd0}};

assign tmp_40_fu_716_p3 = {{j_0_i7_reg_387}, {5'd0}};

assign tmp_41_fu_728_p3 = {{j_0_i7_reg_387}, {1'd0}};

assign tmp_fu_632_p4 = {{bitcast_ln19_fu_628_p1[30:23]}};

assign trunc_ln19_1_fu_770_p1 = bitcast_ln19_1_fu_756_p1[22:0];

assign trunc_ln19_fu_642_p1 = bitcast_ln19_fu_628_p1[22:0];

assign zext_ln13_3_fu_695_p1 = i_0_i3_reg_364;

assign zext_ln13_fu_591_p1 = i_0_i_reg_319;

assign zext_ln14_4_fu_691_p1 = i_0_i3_reg_364;

assign zext_ln14_5_fu_607_p1 = j_0_i_reg_342;

assign zext_ln14_6_fu_711_p1 = j_0_i7_reg_387;

assign zext_ln14_7_fu_623_p1 = add_ln14_fu_618_p2;

assign zext_ln14_8_fu_724_p1 = tmp_40_fu_716_p3;

assign zext_ln14_9_fu_736_p1 = tmp_41_fu_728_p3;

assign zext_ln14_fu_587_p1 = i_0_i_reg_319;

assign zext_ln27_1_fu_551_p1 = ix_in_1_reg_298;

assign zext_ln27_2_fu_529_p1 = tmp_39_fu_521_p3;

assign zext_ln27_3_fu_556_p1 = j_0_reg_308;

assign zext_ln27_fu_517_p1 = tmp_38_fu_509_p3;

always @ (posedge ap_clk) begin
    sub_ln27_reg_820[1:0] <= 2'b00;
    zext_ln14_reg_856[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_862[14:6] <= 9'b000000000;
    zext_ln14_4_reg_918[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_3_reg_924[11:5] <= 7'b0000000;
end

endmodule //cnn
