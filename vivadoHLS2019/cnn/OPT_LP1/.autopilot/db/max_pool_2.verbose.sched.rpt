

================================================================
== Vivado HLS Report for 'max_pool_2'
================================================================
* Date:           Tue Aug  6 22:46:08 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       OPT_LP1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    15.289|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  406|  406|  406|  406|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                                 |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop_Col_Loop  |  404|  404|         6|          1|          1|   400|    yes   |
        +---------------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 8 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %1" [cnn/max_pool_2.cpp:10]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 15.2>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten13 = phi i9 [ 0, %0 ], [ %add_ln10, %Col_Loop ]" [cnn/max_pool_2.cpp:10]   --->   Operation 10 'phi' 'indvar_flatten13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%f_0 = phi i5 [ 0, %0 ], [ %select_ln29_5, %Col_Loop ]" [cnn/max_pool_2.cpp:29]   --->   Operation 11 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 [ 0, %0 ], [ %select_ln13, %Col_Loop ]" [cnn/max_pool_2.cpp:13]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %select_ln36_1, %Col_Loop ]" [cnn/max_pool_2.cpp:36]   --->   Operation 13 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %c, %Col_Loop ]"   --->   Operation 14 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.66ns)   --->   "%icmp_ln10 = icmp eq i9 %indvar_flatten13, -112" [cnn/max_pool_2.cpp:10]   --->   Operation 15 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (1.82ns)   --->   "%add_ln10 = add i9 %indvar_flatten13, 1" [cnn/max_pool_2.cpp:10]   --->   Operation 16 'add' 'add_ln10' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Col_Loop" [cnn/max_pool_2.cpp:10]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.78ns)   --->   "%f = add i5 1, %f_0" [cnn/max_pool_2.cpp:10]   --->   Operation 18 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.42ns)   --->   "%icmp_ln13 = icmp eq i6 %indvar_flatten, 25" [cnn/max_pool_2.cpp:13]   --->   Operation 19 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.98ns)   --->   "%select_ln29_4 = select i1 %icmp_ln13, i3 0, i3 %r_0" [cnn/max_pool_2.cpp:29]   --->   Operation 20 'select' 'select_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.21ns)   --->   "%select_ln29_5 = select i1 %icmp_ln13, i5 %f, i5 %f_0" [cnn/max_pool_2.cpp:29]   --->   Operation 21 'select' 'select_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln36_2 = zext i5 %select_ln29_5 to i12" [cnn/max_pool_2.cpp:36]   --->   Operation 22 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_7)   --->   "%xor_ln29 = xor i1 %icmp_ln13, true" [cnn/max_pool_2.cpp:29]   --->   Operation 23 'xor' 'xor_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.13ns)   --->   "%icmp_ln16 = icmp eq i3 %c_0, -3" [cnn/max_pool_2.cpp:16]   --->   Operation 24 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_7 = and i1 %icmp_ln16, %xor_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 25 'and' 'and_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.65ns)   --->   "%r = add i3 1, %select_ln29_4" [cnn/max_pool_2.cpp:13]   --->   Operation 26 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln36)   --->   "%or_ln36 = or i1 %and_ln29_7, %icmp_ln13" [cnn/max_pool_2.cpp:36]   --->   Operation 27 'or' 'or_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln36 = select i1 %or_ln36, i3 0, i3 %c_0" [cnn/max_pool_2.cpp:36]   --->   Operation 28 'select' 'select_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.98ns)   --->   "%select_ln36_1 = select i1 %and_ln29_7, i3 %r, i3 %select_ln29_4" [cnn/max_pool_2.cpp:36]   --->   Operation 29 'select' 'select_ln36_1' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i3 %select_ln36_1 to i7" [cnn/max_pool_2.cpp:29]   --->   Operation 30 'zext' 'zext_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (3.49ns)   --->   "%mul_ln29 = mul i7 11, %zext_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 31 'mul' 'mul_ln29' <Predicate = (!icmp_ln10)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %select_ln36, i1 false)" [cnn/max_pool_2.cpp:27]   --->   Operation 32 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln29_1 = zext i4 %shl_ln to i7" [cnn/max_pool_2.cpp:29]   --->   Operation 33 'zext' 'zext_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.87ns)   --->   "%add_ln29 = add i7 %zext_ln29_1, %mul_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 34 'add' 'add_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_5 = call i11 @_ssdm_op_BitConcatenate.i11.i7.i4(i7 %add_ln29, i4 0)" [cnn/max_pool_2.cpp:29]   --->   Operation 35 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln29_2 = zext i11 %tmp_5 to i12" [cnn/max_pool_2.cpp:29]   --->   Operation 36 'zext' 'zext_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.63ns)   --->   "%add_ln29_1 = add i12 %zext_ln36_2, %zext_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 37 'add' 'add_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln29_3 = zext i12 %add_ln29_1 to i64" [cnn/max_pool_2.cpp:29]   --->   Operation 38 'zext' 'zext_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%conv_2_out_0_addr = getelementptr [1056 x float]* @conv_2_out_0, i64 0, i64 %zext_ln29_3" [cnn/max_pool_2.cpp:29]   --->   Operation 39 'getelementptr' 'conv_2_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (3.25ns)   --->   "%conv_2_out_0_load = load float* %conv_2_out_0_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 40 'load' 'conv_2_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%or_ln27 = or i4 %shl_ln, 1" [cnn/max_pool_2.cpp:27]   --->   Operation 41 'or' 'or_ln27' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%zext_ln29_4 = zext i4 %or_ln27 to i7" [cnn/max_pool_2.cpp:29]   --->   Operation 42 'zext' 'zext_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.87ns) (out node of the LUT)   --->   "%add_ln29_2 = add i7 %zext_ln29_4, %mul_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 43 'add' 'add_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_13 = call i11 @_ssdm_op_BitConcatenate.i11.i7.i4(i7 %add_ln29_2, i4 0)" [cnn/max_pool_2.cpp:29]   --->   Operation 44 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln29_5 = zext i11 %tmp_13 to i12" [cnn/max_pool_2.cpp:29]   --->   Operation 45 'zext' 'zext_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.63ns)   --->   "%add_ln29_3 = add i12 %zext_ln36_2, %zext_ln29_5" [cnn/max_pool_2.cpp:29]   --->   Operation 46 'add' 'add_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (1.65ns)   --->   "%c = add i3 1, %select_ln36" [cnn/max_pool_2.cpp:16]   --->   Operation 47 'add' 'c' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.82ns)   --->   "%add_ln13 = add i6 1, %indvar_flatten" [cnn/max_pool_2.cpp:13]   --->   Operation 48 'add' 'add_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.18ns)   --->   "%select_ln13 = select i1 %icmp_ln13, i6 1, i6 %add_ln13" [cnn/max_pool_2.cpp:13]   --->   Operation 49 'select' 'select_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.68>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i5 %select_ln29_5 to i10" [cnn/max_pool_2.cpp:36]   --->   Operation 50 'zext' 'zext_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i3 %select_ln36_1 to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 51 'zext' 'zext_ln36_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln36_1, i2 0)" [cnn/max_pool_2.cpp:36]   --->   Operation 52 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln36_4 = zext i5 %tmp to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 53 'zext' 'zext_ln36_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln36 = add i6 %zext_ln36_4, %zext_ln36_3" [cnn/max_pool_2.cpp:36]   --->   Operation 54 'add' 'add_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 55 [1/2] (3.25ns)   --->   "%conv_2_out_0_load = load float* %conv_2_out_0_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 55 'load' 'conv_2_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 56 [2/2] (5.43ns)   --->   "%tmp_2 = fcmp ogt float %conv_2_out_0_load, 0x3810000000000000" [cnn/max_pool_2.cpp:29]   --->   Operation 56 'fcmp' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln29_6 = zext i12 %add_ln29_3 to i64" [cnn/max_pool_2.cpp:29]   --->   Operation 57 'zext' 'zext_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%conv_2_out_0_addr_1 = getelementptr [1056 x float]* @conv_2_out_0, i64 0, i64 %zext_ln29_6" [cnn/max_pool_2.cpp:29]   --->   Operation 58 'getelementptr' 'conv_2_out_0_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 59 [2/2] (3.25ns)   --->   "%conv_2_out_0_load_1 = load float* %conv_2_out_0_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 59 'load' 'conv_2_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i3 %select_ln36 to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 60 'zext' 'zext_ln36_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%add_ln36_1 = add i6 %zext_ln36_1, %add_ln36" [cnn/max_pool_2.cpp:36]   --->   Operation 61 'add' 'add_ln36_1' <Predicate = (!icmp_ln10)> <Delay = 3.49> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_18_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %add_ln36_1, i4 0)" [cnn/max_pool_2.cpp:36]   --->   Operation 62 'bitconcatenate' 'tmp_18_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.73ns)   --->   "%add_ln36_2 = add i10 %zext_ln36, %tmp_18_cast" [cnn/max_pool_2.cpp:36]   --->   Operation 63 'add' 'add_ln36_2' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 11.8>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%conv_2_out_1_addr = getelementptr [880 x float]* @conv_2_out_1, i64 0, i64 %zext_ln29_3" [cnn/max_pool_2.cpp:29]   --->   Operation 64 'getelementptr' 'conv_2_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%bitcast_ln29 = bitcast float %conv_2_out_0_load to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 65 'bitcast' 'bitcast_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 66 'partselect' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i32 %bitcast_ln29 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 67 'trunc' 'trunc_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (1.55ns)   --->   "%icmp_ln29 = icmp ne i8 %tmp_1, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 68 'icmp' 'icmp_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (2.44ns)   --->   "%icmp_ln29_1 = icmp eq i23 %trunc_ln29, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 69 'icmp' 'icmp_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%or_ln29 = or i1 %icmp_ln29_1, %icmp_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 70 'or' 'or_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/2] (5.43ns)   --->   "%tmp_2 = fcmp ogt float %conv_2_out_0_load, 0x3810000000000000" [cnn/max_pool_2.cpp:29]   --->   Operation 71 'fcmp' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln29)   --->   "%and_ln29 = and i1 %or_ln29, %tmp_2" [cnn/max_pool_2.cpp:29]   --->   Operation 72 'and' 'and_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln29 = select i1 %and_ln29, float %conv_2_out_0_load, float 0x3810000000000000" [cnn/max_pool_2.cpp:29]   --->   Operation 73 'select' 'select_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 74 [1/2] (3.25ns)   --->   "%conv_2_out_0_load_1 = load float* %conv_2_out_0_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 74 'load' 'conv_2_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_4 : Operation 75 [2/2] (5.43ns)   --->   "%tmp_7 = fcmp ogt float %conv_2_out_0_load_1, %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 75 'fcmp' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [2/2] (3.25ns)   --->   "%conv_2_out_1_load = load float* %conv_2_out_1_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 76 'load' 'conv_2_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>

State 5 <SV = 4> <Delay = 12.5>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%conv_2_out_1_addr_1 = getelementptr [880 x float]* @conv_2_out_1, i64 0, i64 %zext_ln29_6" [cnn/max_pool_2.cpp:29]   --->   Operation 77 'getelementptr' 'conv_2_out_1_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln29_1 = bitcast float %conv_2_out_0_load_1 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 78 'bitcast' 'bitcast_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_1, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 79 'partselect' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = trunc i32 %bitcast_ln29_1 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 80 'trunc' 'trunc_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%bitcast_ln29_2 = bitcast float %select_ln29 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 81 'bitcast' 'bitcast_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_2, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 82 'partselect' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln29_2 = trunc i32 %bitcast_ln29_2 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 83 'trunc' 'trunc_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 84 [1/1] (1.55ns)   --->   "%icmp_ln29_2 = icmp ne i8 %tmp_3, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 84 'icmp' 'icmp_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (2.44ns)   --->   "%icmp_ln29_3 = icmp eq i23 %trunc_ln29_1, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 85 'icmp' 'icmp_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_2)   --->   "%or_ln29_1 = or i1 %icmp_ln29_3, %icmp_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 86 'or' 'or_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (1.55ns)   --->   "%icmp_ln29_4 = icmp ne i8 %tmp_4, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 87 'icmp' 'icmp_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (2.44ns)   --->   "%icmp_ln29_5 = icmp eq i23 %trunc_ln29_2, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 88 'icmp' 'icmp_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_2)   --->   "%or_ln29_2 = or i1 %icmp_ln29_5, %icmp_ln29_4" [cnn/max_pool_2.cpp:29]   --->   Operation 89 'or' 'or_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_2)   --->   "%and_ln29_1 = and i1 %or_ln29_1, %or_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 90 'and' 'and_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/2] (5.43ns)   --->   "%tmp_7 = fcmp ogt float %conv_2_out_0_load_1, %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 91 'fcmp' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_2 = and i1 %and_ln29_1, %tmp_7" [cnn/max_pool_2.cpp:29]   --->   Operation 92 'and' 'and_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_1 = select i1 %and_ln29_2, float %conv_2_out_0_load_1, float %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 93 'select' 'select_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 94 [1/2] (3.25ns)   --->   "%conv_2_out_1_load = load float* %conv_2_out_1_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 94 'load' 'conv_2_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_5 : Operation 95 [2/2] (5.43ns)   --->   "%tmp_s = fcmp ogt float %conv_2_out_1_load, %select_ln29_1" [cnn/max_pool_2.cpp:29]   --->   Operation 95 'fcmp' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [2/2] (3.25ns)   --->   "%conv_2_out_1_load_1 = load float* %conv_2_out_1_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 96 'load' 'conv_2_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>

State 6 <SV = 5> <Delay = 12.5>
ST_6 : Operation 97 [1/1] (0.00ns)   --->   "%bitcast_ln29_3 = bitcast float %conv_2_out_1_load to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 97 'bitcast' 'bitcast_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_3, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 98 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln29_3 = trunc i32 %bitcast_ln29_3 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 99 'trunc' 'trunc_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 100 [1/1] (0.00ns)   --->   "%bitcast_ln29_4 = bitcast float %select_ln29_1 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 100 'bitcast' 'bitcast_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_4, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 101 'partselect' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln29_4 = trunc i32 %bitcast_ln29_4 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 102 'trunc' 'trunc_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_6 : Operation 103 [1/1] (1.55ns)   --->   "%icmp_ln29_6 = icmp ne i8 %tmp_8, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 103 'icmp' 'icmp_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 104 [1/1] (2.44ns)   --->   "%icmp_ln29_7 = icmp eq i23 %trunc_ln29_3, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 104 'icmp' 'icmp_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_4)   --->   "%or_ln29_3 = or i1 %icmp_ln29_7, %icmp_ln29_6" [cnn/max_pool_2.cpp:29]   --->   Operation 105 'or' 'or_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 106 [1/1] (1.55ns)   --->   "%icmp_ln29_8 = icmp ne i8 %tmp_9, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 106 'icmp' 'icmp_ln29_8' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 107 [1/1] (2.44ns)   --->   "%icmp_ln29_9 = icmp eq i23 %trunc_ln29_4, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 107 'icmp' 'icmp_ln29_9' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_4)   --->   "%or_ln29_4 = or i1 %icmp_ln29_9, %icmp_ln29_8" [cnn/max_pool_2.cpp:29]   --->   Operation 108 'or' 'or_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_4)   --->   "%and_ln29_3 = and i1 %or_ln29_3, %or_ln29_4" [cnn/max_pool_2.cpp:29]   --->   Operation 109 'and' 'and_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 110 [1/2] (5.43ns)   --->   "%tmp_s = fcmp ogt float %conv_2_out_1_load, %select_ln29_1" [cnn/max_pool_2.cpp:29]   --->   Operation 110 'fcmp' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 111 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_4 = and i1 %and_ln29_3, %tmp_s" [cnn/max_pool_2.cpp:29]   --->   Operation 111 'and' 'and_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 112 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_2 = select i1 %and_ln29_4, float %conv_2_out_1_load, float %select_ln29_1" [cnn/max_pool_2.cpp:29]   --->   Operation 112 'select' 'select_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 113 [1/2] (3.25ns)   --->   "%conv_2_out_1_load_1 = load float* %conv_2_out_1_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 113 'load' 'conv_2_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_6 : Operation 114 [2/2] (5.43ns)   --->   "%tmp_12 = fcmp ogt float %conv_2_out_1_load_1, %select_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 114 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 10.3>
ST_7 : Operation 115 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 115 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 116 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 400, i64 400, i64 400)"   --->   Operation 116 'speclooptripcount' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Row_Loop_Col_Loop_st)"   --->   Operation 117 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str2) nounwind" [cnn/max_pool_2.cpp:17]   --->   Operation 118 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2)" [cnn/max_pool_2.cpp:17]   --->   Operation 119 'specregionbegin' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind" [cnn/max_pool_2.cpp:18]   --->   Operation 120 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%bitcast_ln29_5 = bitcast float %conv_2_out_1_load_1 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 121 'bitcast' 'bitcast_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_5, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 122 'partselect' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%trunc_ln29_5 = trunc i32 %bitcast_ln29_5 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 123 'trunc' 'trunc_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%bitcast_ln29_6 = bitcast float %select_ln29_2 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 124 'bitcast' 'bitcast_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_6, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 125 'partselect' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 126 [1/1] (0.00ns)   --->   "%trunc_ln29_6 = trunc i32 %bitcast_ln29_6 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 126 'trunc' 'trunc_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 127 [1/1] (1.55ns)   --->   "%icmp_ln29_10 = icmp ne i8 %tmp_10, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 127 'icmp' 'icmp_ln29_10' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 128 [1/1] (2.44ns)   --->   "%icmp_ln29_11 = icmp eq i23 %trunc_ln29_5, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 128 'icmp' 'icmp_ln29_11' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_6)   --->   "%or_ln29_5 = or i1 %icmp_ln29_11, %icmp_ln29_10" [cnn/max_pool_2.cpp:29]   --->   Operation 129 'or' 'or_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 130 [1/1] (1.55ns)   --->   "%icmp_ln29_12 = icmp ne i8 %tmp_11, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 130 'icmp' 'icmp_ln29_12' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 131 [1/1] (2.44ns)   --->   "%icmp_ln29_13 = icmp eq i23 %trunc_ln29_6, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 131 'icmp' 'icmp_ln29_13' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_6)   --->   "%or_ln29_6 = or i1 %icmp_ln29_13, %icmp_ln29_12" [cnn/max_pool_2.cpp:29]   --->   Operation 132 'or' 'or_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_6)   --->   "%and_ln29_5 = and i1 %or_ln29_5, %or_ln29_6" [cnn/max_pool_2.cpp:29]   --->   Operation 133 'and' 'and_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 134 [1/2] (5.43ns)   --->   "%tmp_12 = fcmp ogt float %conv_2_out_1_load_1, %select_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 134 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 135 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_6 = and i1 %and_ln29_5, %tmp_12" [cnn/max_pool_2.cpp:29]   --->   Operation 135 'and' 'and_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 136 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_3 = select i1 %and_ln29_6, float %conv_2_out_1_load_1, float %select_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 136 'select' 'select_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln36_5 = zext i10 %add_ln36_2 to i64" [cnn/max_pool_2.cpp:36]   --->   Operation 137 'zext' 'zext_ln36_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 138 [1/1] (0.00ns)   --->   "%max_pool_out_addr = getelementptr [400 x float]* %max_pool_out, i64 0, i64 %zext_ln36_5" [cnn/max_pool_2.cpp:36]   --->   Operation 138 'getelementptr' 'max_pool_out_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 139 [1/1] (3.25ns)   --->   "store float %select_ln29_3, float* %max_pool_out_addr, align 4" [cnn/max_pool_2.cpp:36]   --->   Operation 139 'store' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_7 : Operation 140 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_6)" [cnn/max_pool_2.cpp:37]   --->   Operation 140 'specregionend' 'empty_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 141 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 8 <SV = 2> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "ret void" [cnn/max_pool_2.cpp:40]   --->   Operation 142 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten13', cnn/max_pool_2.cpp:10) with incoming values : ('add_ln10', cnn/max_pool_2.cpp:10) [6]  (1.77 ns)

 <State 2>: 15.3ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', cnn/max_pool_2.cpp:13) with incoming values : ('select_ln13', cnn/max_pool_2.cpp:13) [8]  (0 ns)
	'icmp' operation ('icmp_ln13', cnn/max_pool_2.cpp:13) [18]  (1.43 ns)
	'select' operation ('select_ln29_4', cnn/max_pool_2.cpp:29) [19]  (0.98 ns)
	'add' operation ('r', cnn/max_pool_2.cpp:13) [26]  (1.65 ns)
	'select' operation ('select_ln36_1', cnn/max_pool_2.cpp:36) [30]  (0.98 ns)
	'mul' operation ('mul_ln29', cnn/max_pool_2.cpp:29) [33]  (3.49 ns)
	'add' operation ('add_ln29', cnn/max_pool_2.cpp:29) [42]  (1.87 ns)
	'add' operation ('add_ln29_1', cnn/max_pool_2.cpp:29) [45]  (1.64 ns)
	'getelementptr' operation ('conv_2_out_0_addr', cnn/max_pool_2.cpp:29) [47]  (0 ns)
	'load' operation ('conv_2_out_0_load', cnn/max_pool_2.cpp:29) on array 'conv_2_out_0' [49]  (3.25 ns)

 <State 3>: 8.69ns
The critical path consists of the following:
	'load' operation ('conv_2_out_0_load', cnn/max_pool_2.cpp:29) on array 'conv_2_out_0' [49]  (3.25 ns)
	'fcmp' operation ('tmp_2', cnn/max_pool_2.cpp:29) [56]  (5.43 ns)

 <State 4>: 11.8ns
The critical path consists of the following:
	'fcmp' operation ('tmp_2', cnn/max_pool_2.cpp:29) [56]  (5.43 ns)
	'and' operation ('and_ln29', cnn/max_pool_2.cpp:29) [57]  (0 ns)
	'select' operation ('select_ln29', cnn/max_pool_2.cpp:29) [58]  (0.978 ns)
	'fcmp' operation ('tmp_7', cnn/max_pool_2.cpp:29) [82]  (5.43 ns)

 <State 5>: 12.5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_7', cnn/max_pool_2.cpp:29) [82]  (5.43 ns)
	'and' operation ('and_ln29_2', cnn/max_pool_2.cpp:29) [83]  (0.978 ns)
	'select' operation ('select_ln29_1', cnn/max_pool_2.cpp:29) [84]  (0.698 ns)
	'fcmp' operation ('tmp_s', cnn/max_pool_2.cpp:29) [99]  (5.43 ns)

 <State 6>: 12.5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', cnn/max_pool_2.cpp:29) [99]  (5.43 ns)
	'and' operation ('and_ln29_4', cnn/max_pool_2.cpp:29) [100]  (0.978 ns)
	'select' operation ('select_ln29_2', cnn/max_pool_2.cpp:29) [101]  (0.698 ns)
	'fcmp' operation ('tmp_12', cnn/max_pool_2.cpp:29) [116]  (5.43 ns)

 <State 7>: 10.4ns
The critical path consists of the following:
	'fcmp' operation ('tmp_12', cnn/max_pool_2.cpp:29) [116]  (5.43 ns)
	'and' operation ('and_ln29_6', cnn/max_pool_2.cpp:29) [117]  (0.978 ns)
	'select' operation ('select_ln29_3', cnn/max_pool_2.cpp:29) [118]  (0.698 ns)
	'store' operation ('store_ln36', cnn/max_pool_2.cpp:36) of variable 'select_ln29_3', cnn/max_pool_2.cpp:29 on array 'max_pool_out' [125]  (3.25 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
