// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state47 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [9:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_r_address0;
reg input_r_ce0;
reg[9:0] input_r_address1;
reg input_r_ce1;
reg[11:0] conv_out_address0;
reg conv_out_ce0;
reg conv_out_we0;
reg[31:0] conv_out_d0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] conv_1_weights_address0;
reg    conv_1_weights_ce0;
wire   [31:0] conv_1_weights_q0;
reg   [5:0] conv_1_weights_address1;
reg    conv_1_weights_ce1;
wire   [31:0] conv_1_weights_q1;
reg   [5:0] conv_1_weights_address2;
reg    conv_1_weights_ce2;
wire   [31:0] conv_1_weights_q2;
reg   [5:0] conv_1_weights_address3;
reg    conv_1_weights_ce3;
wire   [31:0] conv_1_weights_q3;
reg   [2:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [10:0] indvar_flatten30_reg_394;
reg   [4:0] r_0_reg_405;
reg   [6:0] indvar_flatten_reg_417;
reg   [4:0] c_0_reg_429;
reg   [2:0] f_0_0_reg_440;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_state28_pp0_stage1_iter5;
wire    ap_block_state33_pp0_stage1_iter6;
wire    ap_block_state38_pp0_stage1_iter7;
wire    ap_block_state43_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1277;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_state24_pp0_stage2_iter4;
wire    ap_block_state29_pp0_stage2_iter5;
wire    ap_block_state34_pp0_stage2_iter6;
wire    ap_block_state39_pp0_stage2_iter7;
wire    ap_block_state44_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_state25_pp0_stage3_iter4;
wire    ap_block_state30_pp0_stage3_iter5;
wire    ap_block_state35_pp0_stage3_iter6;
wire    ap_block_state40_pp0_stage3_iter7;
wire    ap_block_state45_pp0_stage3_iter8;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_state26_pp0_stage4_iter4;
wire    ap_block_state31_pp0_stage4_iter5;
wire    ap_block_state36_pp0_stage4_iter6;
wire    ap_block_state41_pp0_stage4_iter7;
wire    ap_block_state46_pp0_stage4_iter8;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_state27_pp0_stage0_iter5;
wire    ap_block_state32_pp0_stage0_iter6;
wire    ap_block_state37_pp0_stage0_iter7;
wire    ap_block_state42_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_461_p2;
reg   [31:0] reg_533;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter7_reg;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter8_reg;
wire   [4:0] r_fu_539_p2;
reg   [4:0] r_reg_1272;
wire   [0:0] icmp_ln8_fu_557_p2;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter1_reg;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter2_reg;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter3_reg;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter4_reg;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter5_reg;
reg   [0:0] icmp_ln8_reg_1277_pp0_iter6_reg;
wire   [10:0] add_ln8_fu_563_p2;
reg   [10:0] add_ln8_reg_1281;
wire   [0:0] icmp_ln11_fu_569_p2;
reg   [0:0] icmp_ln11_reg_1286;
wire   [4:0] select_ln30_1_fu_583_p3;
reg   [4:0] select_ln30_1_reg_1293;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter1_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter2_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter3_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter4_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter5_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter6_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter7_reg;
reg   [4:0] select_ln30_1_reg_1293_pp0_iter8_reg;
wire   [10:0] sub_ln23_fu_615_p2;
reg   [10:0] sub_ln23_reg_1299;
wire   [2:0] select_ln30_6_fu_667_p3;
reg   [2:0] select_ln30_6_reg_1304;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter1_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter2_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter3_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter4_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter5_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter6_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter7_reg;
reg   [2:0] select_ln30_6_reg_1304_pp0_iter8_reg;
wire   [4:0] select_ln30_7_fu_675_p3;
reg   [4:0] select_ln30_7_reg_1314;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter1_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter2_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter3_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter4_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter5_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter6_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter7_reg;
reg   [4:0] select_ln30_7_reg_1314_pp0_iter8_reg;
wire   [10:0] zext_ln30_2_fu_683_p1;
reg   [10:0] zext_ln30_2_reg_1320;
wire   [10:0] zext_ln30_4_fu_712_p1;
reg   [10:0] zext_ln30_4_reg_1331;
wire   [4:0] select_ln30_9_fu_733_p3;
reg   [4:0] select_ln30_9_reg_1342;
wire   [63:0] zext_ln23_fu_741_p1;
reg   [63:0] zext_ln23_reg_1347;
reg   [63:0] zext_ln23_reg_1347_pp0_iter1_reg;
reg   [63:0] zext_ln23_reg_1347_pp0_iter2_reg;
reg   [63:0] zext_ln23_reg_1347_pp0_iter3_reg;
reg   [63:0] zext_ln23_reg_1347_pp0_iter4_reg;
reg   [63:0] zext_ln23_reg_1347_pp0_iter5_reg;
reg   [63:0] zext_ln23_reg_1347_pp0_iter6_reg;
wire   [2:0] or_ln14_fu_761_p2;
reg   [2:0] or_ln14_reg_1362;
reg   [2:0] or_ln14_reg_1362_pp0_iter1_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter2_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter3_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter4_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter5_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter6_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter7_reg;
reg   [2:0] or_ln14_reg_1362_pp0_iter8_reg;
wire   [63:0] zext_ln23_5_fu_767_p1;
reg   [63:0] zext_ln23_5_reg_1371;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter1_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter2_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter3_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter4_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter5_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter6_reg;
reg   [63:0] zext_ln23_5_reg_1371_pp0_iter7_reg;
wire   [10:0] sub_ln23_1_fu_823_p2;
reg   [10:0] sub_ln23_1_reg_1386;
wire   [4:0] add_ln30_fu_836_p2;
reg   [4:0] add_ln30_reg_1392;
wire   [10:0] zext_ln30_5_fu_852_p1;
reg   [10:0] zext_ln30_5_reg_1403;
wire   [6:0] add_ln11_fu_915_p2;
reg   [6:0] add_ln11_reg_1434;
wire   [10:0] add_ln23_6_fu_949_p2;
reg   [10:0] add_ln23_6_reg_1439;
wire   [10:0] add_ln23_10_fu_963_p2;
reg   [10:0] add_ln23_10_reg_1449;
wire   [10:0] add_ln23_14_fu_977_p2;
reg   [10:0] add_ln23_14_reg_1459;
wire   [5:0] zext_ln23_16_fu_982_p1;
reg   [5:0] zext_ln23_16_reg_1464;
wire   [31:0] grp_fu_469_p2;
reg   [31:0] tmp_1_reg_1480;
wire   [31:0] grp_fu_475_p2;
reg   [31:0] tmp_0_0_1_reg_1485;
wire   [5:0] zext_ln23_26_fu_1004_p1;
reg   [5:0] zext_ln23_26_reg_1490;
wire   [31:0] grp_fu_481_p2;
reg   [31:0] tmp_1_39_reg_1506;
wire   [31:0] grp_fu_487_p2;
reg   [31:0] tmp_1_0_1_reg_1511;
reg   [31:0] tmp_0_0_2_reg_1536;
reg   [31:0] tmp_0_0_2_reg_1536_pp0_iter1_reg;
reg   [31:0] tmp_0_1_reg_1541;
reg   [31:0] tmp_0_1_reg_1541_pp0_iter1_reg;
reg   [31:0] tmp_0_1_reg_1541_pp0_iter2_reg;
reg   [31:0] tmp_1_0_2_reg_1556;
reg   [31:0] tmp_1_0_2_reg_1556_pp0_iter1_reg;
reg   [31:0] tmp_1_1_reg_1561;
reg   [31:0] tmp_1_1_reg_1561_pp0_iter1_reg;
reg   [31:0] tmp_1_1_reg_1561_pp0_iter2_reg;
reg   [31:0] tmp_0_1_1_reg_1576;
reg   [31:0] tmp_0_1_1_reg_1576_pp0_iter1_reg;
reg   [31:0] tmp_0_1_1_reg_1576_pp0_iter2_reg;
reg   [31:0] tmp_0_1_2_reg_1581;
reg   [31:0] tmp_0_1_2_reg_1581_pp0_iter1_reg;
reg   [31:0] tmp_0_1_2_reg_1581_pp0_iter2_reg;
reg   [31:0] tmp_0_1_2_reg_1581_pp0_iter3_reg;
reg   [31:0] tmp_1_1_1_reg_1591;
reg   [31:0] tmp_1_1_1_reg_1591_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_reg_1591_pp0_iter2_reg;
reg   [31:0] tmp_1_1_2_reg_1596;
reg   [31:0] tmp_1_1_2_reg_1596_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_reg_1596_pp0_iter2_reg;
reg   [31:0] tmp_1_1_2_reg_1596_pp0_iter3_reg;
wire   [2:0] add_ln14_fu_1094_p2;
reg   [2:0] add_ln14_reg_1601;
wire   [6:0] select_ln11_fu_1099_p3;
reg   [6:0] select_ln11_reg_1606;
reg   [31:0] tmp_0_2_reg_1611;
reg   [31:0] tmp_0_2_reg_1611_pp0_iter2_reg;
reg   [31:0] tmp_0_2_reg_1611_pp0_iter3_reg;
reg   [31:0] tmp_0_2_reg_1611_pp0_iter4_reg;
reg   [31:0] tmp_0_2_reg_1611_pp0_iter5_reg;
reg   [31:0] tmp_0_2_1_reg_1616;
reg   [31:0] tmp_0_2_1_reg_1616_pp0_iter2_reg;
reg   [31:0] tmp_0_2_1_reg_1616_pp0_iter3_reg;
reg   [31:0] tmp_0_2_1_reg_1616_pp0_iter4_reg;
reg   [31:0] tmp_0_2_1_reg_1616_pp0_iter5_reg;
reg   [31:0] tmp_0_2_1_reg_1616_pp0_iter6_reg;
reg   [31:0] tmp_1_2_reg_1621;
reg   [31:0] tmp_1_2_reg_1621_pp0_iter2_reg;
reg   [31:0] tmp_1_2_reg_1621_pp0_iter3_reg;
reg   [31:0] tmp_1_2_reg_1621_pp0_iter4_reg;
reg   [31:0] tmp_1_2_reg_1621_pp0_iter5_reg;
reg   [31:0] tmp_1_2_1_reg_1626;
reg   [31:0] tmp_1_2_1_reg_1626_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1626_pp0_iter3_reg;
reg   [31:0] tmp_1_2_1_reg_1626_pp0_iter4_reg;
reg   [31:0] tmp_1_2_1_reg_1626_pp0_iter5_reg;
reg   [31:0] tmp_1_2_1_reg_1626_pp0_iter6_reg;
wire   [31:0] grp_fu_451_p2;
reg   [31:0] w_sum_4_reg_1631;
reg   [31:0] tmp_0_2_2_reg_1636;
reg   [31:0] tmp_0_2_2_reg_1636_pp0_iter2_reg;
reg   [31:0] tmp_0_2_2_reg_1636_pp0_iter3_reg;
reg   [31:0] tmp_0_2_2_reg_1636_pp0_iter4_reg;
reg   [31:0] tmp_0_2_2_reg_1636_pp0_iter5_reg;
reg   [31:0] tmp_0_2_2_reg_1636_pp0_iter6_reg;
wire   [31:0] grp_fu_456_p2;
reg   [31:0] w_sum_4_1_reg_1641;
reg   [31:0] tmp_1_2_2_reg_1646;
reg   [31:0] tmp_1_2_2_reg_1646_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1646_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_reg_1646_pp0_iter4_reg;
reg   [31:0] tmp_1_2_2_reg_1646_pp0_iter5_reg;
reg   [31:0] tmp_1_2_2_reg_1646_pp0_iter6_reg;
reg   [31:0] w_sum_4_0_0_1_reg_1651;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] w_sum_4_1_0_1_reg_1656;
reg   [31:0] w_sum_4_0_0_2_reg_1661;
reg   [31:0] w_sum_4_1_0_2_reg_1666;
reg   [31:0] w_sum_4_0_1_reg_1671;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] w_sum_4_1_1_reg_1676;
reg   [31:0] w_sum_4_0_1_1_reg_1681;
reg    ap_enable_reg_pp0_iter4;
reg   [31:0] w_sum_4_1_1_1_reg_1686;
reg   [31:0] w_sum_4_0_1_2_reg_1691;
reg    ap_enable_reg_pp0_iter5;
wire   [31:0] grp_fu_465_p2;
reg   [31:0] w_sum_4_1_1_2_reg_1696;
reg   [31:0] w_sum_4_0_2_reg_1701;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] w_sum_4_1_2_reg_1706;
reg   [31:0] w_sum_4_0_2_1_reg_1711;
reg   [31:0] w_sum_4_1_2_1_reg_1716;
reg   [31:0] conv_1_bias_load_reg_1726;
reg   [31:0] conv_1_bias_load_1_reg_1736;
reg   [31:0] w_sum_4_1_2_2_reg_1741;
reg   [31:0] w_sum_1_reg_1746;
wire   [12:0] add_ln30_3_fu_1203_p2;
reg   [12:0] add_ln30_3_reg_1753;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
reg   [10:0] ap_phi_mux_indvar_flatten30_phi_fu_398_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_409_p4;
reg   [6:0] ap_phi_mux_indvar_flatten_phi_fu_421_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_433_p4;
reg   [2:0] ap_phi_mux_f_0_0_phi_fu_444_p4;
wire   [63:0] zext_ln23_8_fu_693_p1;
wire   [63:0] zext_ln23_10_fu_722_p1;
wire   [63:0] zext_ln23_19_fu_756_p1;
wire   [63:0] zext_ln23_29_fu_782_p1;
wire   [63:0] zext_ln23_9_fu_847_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln23_12_fu_860_p1;
wire   [63:0] zext_ln23_20_fu_874_p1;
wire   [63:0] zext_ln23_21_fu_885_p1;
wire   [63:0] zext_ln23_30_fu_899_p1;
wire   [63:0] zext_ln23_31_fu_910_p1;
wire   [63:0] zext_ln23_11_fu_958_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln23_13_fu_972_p1;
wire   [63:0] tmp_16_fu_985_p3;
wire   [63:0] zext_ln23_22_fu_999_p1;
wire   [63:0] tmp_18_fu_1007_p3;
wire   [63:0] zext_ln23_32_fu_1021_p1;
wire  signed [63:0] sext_ln23_fu_1026_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln23_1_fu_1030_p1;
wire   [63:0] zext_ln23_23_fu_1039_p1;
wire   [63:0] zext_ln23_24_fu_1049_p1;
wire   [63:0] zext_ln23_33_fu_1059_p1;
wire   [63:0] zext_ln23_34_fu_1069_p1;
wire   [63:0] zext_ln23_14_fu_1074_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] tmp_17_fu_1078_p3;
wire   [63:0] tmp_19_fu_1086_p3;
wire   [63:0] zext_ln30_6_fu_1144_p1;
wire   [63:0] zext_ln30_7_fu_1209_p1;
wire   [31:0] select_ln29_fu_1191_p3;
wire   [31:0] select_ln29_1_fu_1254_p3;
reg   [31:0] grp_fu_451_p0;
reg   [31:0] grp_fu_451_p1;
reg   [31:0] grp_fu_456_p0;
reg   [31:0] grp_fu_456_p1;
reg   [31:0] grp_fu_461_p0;
reg   [31:0] grp_fu_461_p1;
reg   [31:0] grp_fu_465_p0;
reg   [31:0] grp_fu_465_p1;
reg   [31:0] grp_fu_475_p1;
reg   [31:0] grp_fu_494_p0;
wire   [9:0] tmp_fu_591_p3;
wire   [6:0] tmp_11_fu_603_p3;
wire   [10:0] zext_ln23_1_fu_599_p1;
wire   [10:0] zext_ln23_2_fu_611_p1;
wire   [4:0] c_fu_545_p2;
wire   [4:0] add_ln23_1_fu_551_p2;
wire   [0:0] icmp_ln14_fu_643_p2;
wire   [0:0] xor_ln30_fu_637_p2;
wire   [4:0] select_ln30_fu_575_p3;
wire   [0:0] and_ln30_fu_649_p2;
wire   [0:0] or_ln30_fu_661_p2;
wire   [4:0] add_ln23_3_fu_655_p2;
wire   [10:0] add_ln23_4_fu_687_p2;
wire   [4:0] add_ln23_7_fu_698_p2;
wire   [4:0] select_ln30_4_fu_621_p3;
wire   [4:0] select_ln30_8_fu_704_p3;
wire   [10:0] add_ln23_8_fu_716_p2;
wire   [4:0] add_ln23_11_fu_727_p2;
wire   [4:0] select_ln30_5_fu_629_p3;
wire   [3:0] zext_ln23_18_fu_746_p1;
wire   [3:0] add_ln23_15_fu_750_p2;
wire   [3:0] zext_ln23_28_fu_772_p1;
wire   [3:0] add_ln23_21_fu_776_p2;
wire   [4:0] add_ln23_fu_787_p2;
wire   [4:0] select_ln30_2_fu_793_p3;
wire   [9:0] tmp_12_fu_799_p3;
wire   [6:0] tmp_13_fu_811_p3;
wire   [10:0] zext_ln23_3_fu_807_p1;
wire   [10:0] zext_ln23_4_fu_819_p1;
wire   [4:0] select_ln30_3_fu_829_p3;
wire   [10:0] add_ln23_5_fu_842_p2;
wire   [10:0] add_ln23_12_fu_855_p2;
wire   [4:0] zext_ln23_17_fu_865_p1;
wire   [4:0] add_ln23_16_fu_868_p2;
wire   [4:0] add_ln23_17_fu_879_p2;
wire   [4:0] zext_ln23_27_fu_890_p1;
wire   [4:0] add_ln23_22_fu_893_p2;
wire   [4:0] add_ln23_23_fu_904_p2;
wire   [9:0] tmp_10_fu_921_p3;
wire   [6:0] tmp_14_fu_932_p3;
wire   [10:0] zext_ln23_6_fu_928_p1;
wire   [10:0] zext_ln23_7_fu_939_p1;
wire   [10:0] sub_ln23_2_fu_943_p2;
wire   [10:0] add_ln23_9_fu_954_p2;
wire   [10:0] add_ln23_13_fu_968_p2;
wire   [5:0] add_ln23_18_fu_993_p2;
wire   [5:0] add_ln23_24_fu_1015_p2;
wire   [5:0] add_ln23_19_fu_1034_p2;
wire   [5:0] add_ln23_20_fu_1044_p2;
wire   [5:0] add_ln23_25_fu_1054_p2;
wire   [5:0] add_ln23_26_fu_1064_p2;
wire   [9:0] grp_fu_1262_p3;
wire   [10:0] tmp_15_fu_1118_p3;
wire   [12:0] p_shl_cast_fu_1111_p3;
wire   [12:0] zext_ln30_3_fu_1125_p1;
wire   [12:0] sub_ln30_fu_1129_p2;
wire   [12:0] zext_ln23_15_fu_1135_p1;
wire   [12:0] add_ln30_2_fu_1138_p2;
wire   [31:0] bitcast_ln29_fu_1149_p1;
wire   [7:0] tmp_s_fu_1153_p4;
wire   [22:0] trunc_ln29_fu_1163_p1;
wire   [0:0] icmp_ln29_7_fu_1173_p2;
wire   [0:0] icmp_ln29_fu_1167_p2;
wire   [0:0] or_ln29_fu_1179_p2;
wire   [0:0] grp_fu_494_p2;
wire   [0:0] and_ln29_fu_1185_p2;
wire   [12:0] zext_ln23_25_fu_1200_p1;
wire   [31:0] bitcast_ln29_3_fu_1213_p1;
wire   [7:0] tmp_8_fu_1216_p4;
wire   [22:0] trunc_ln29_3_fu_1226_p1;
wire   [0:0] icmp_ln29_9_fu_1236_p2;
wire   [0:0] icmp_ln29_8_fu_1230_p2;
wire   [0:0] or_ln29_3_fu_1242_p2;
wire   [0:0] and_ln29_3_fu_1248_p2;
wire   [5:0] grp_fu_1262_p0;
wire   [4:0] grp_fu_1262_p1;
wire   [4:0] grp_fu_1262_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_CS_fsm_state47;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1262_p10;
wire   [9:0] grp_fu_1262_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 54 ),
    .AddressWidth( 6 ))
conv_1_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_address0),
    .ce0(conv_1_weights_ce0),
    .q0(conv_1_weights_q0),
    .address1(conv_1_weights_address1),
    .ce1(conv_1_weights_ce1),
    .q1(conv_1_weights_q1),
    .address2(conv_1_weights_address2),
    .ce2(conv_1_weights_ce2),
    .q2(conv_1_weights_q2),
    .address3(conv_1_weights_address3),
    .ce3(conv_1_weights_ce3),
    .q3(conv_1_weights_q3)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_451_p0),
    .din1(grp_fu_451_p1),
    .ce(1'b1),
    .dout(grp_fu_451_p2)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_456_p0),
    .din1(grp_fu_456_p1),
    .ce(1'b1),
    .dout(grp_fu_456_p2)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_461_p0),
    .din1(grp_fu_461_p1),
    .ce(1'b1),
    .dout(grp_fu_461_p2)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_465_p0),
    .din1(grp_fu_465_p1),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_1_weights_q0),
    .din1(input_r_q0),
    .ce(1'b1),
    .dout(grp_fu_469_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_1_weights_q1),
    .din1(grp_fu_475_p1),
    .ce(1'b1),
    .dout(grp_fu_475_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_1_weights_q2),
    .din1(input_r_q0),
    .ce(1'b1),
    .dout(grp_fu_481_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_1_weights_q3),
    .din1(input_r_q1),
    .ce(1'b1),
    .dout(grp_fu_487_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_494_p0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_494_p2)
);

cnn_mac_muladd_6nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_6nfYi_U10(
    .din0(grp_fu_1262_p0),
    .din1(grp_fu_1262_p1),
    .din2(grp_fu_1262_p2),
    .dout(grp_fu_1262_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        c_0_reg_429 <= select_ln30_7_reg_1314;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_429 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        f_0_0_reg_440 <= add_ln14_reg_1601;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_0_reg_440 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        indvar_flatten30_reg_394 <= add_ln8_reg_1281;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_394 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        indvar_flatten_reg_417 <= select_ln11_reg_1606;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_417 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        r_0_reg_405 <= select_ln30_1_reg_1293;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_405 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln11_reg_1286 == 1'd0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        add_ln11_reg_1434 <= add_ln11_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        add_ln14_reg_1601 <= add_ln14_fu_1094_p2;
        select_ln11_reg_1606 <= select_ln11_fu_1099_p3;
        tmp_0_1_1_reg_1576 <= grp_fu_469_p2;
        tmp_0_1_2_reg_1581 <= grp_fu_475_p2;
        tmp_1_1_1_reg_1591 <= grp_fu_481_p2;
        tmp_1_1_2_reg_1596 <= grp_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        add_ln23_10_reg_1449 <= add_ln23_10_fu_963_p2;
        add_ln23_14_reg_1459 <= add_ln23_14_fu_977_p2;
        add_ln23_6_reg_1439 <= add_ln23_6_fu_949_p2;
        zext_ln23_16_reg_1464[2 : 0] <= zext_ln23_16_fu_982_p1[2 : 0];
        zext_ln23_26_reg_1490[2 : 1] <= zext_ln23_26_fu_1004_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277_pp0_iter8_reg == 1'd0))) begin
        add_ln30_3_reg_1753[12 : 1] <= add_ln30_3_fu_1203_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1277 == 1'd0))) begin
        add_ln30_reg_1392 <= add_ln30_fu_836_p2;
        sub_ln23_1_reg_1386[10 : 2] <= sub_ln23_1_fu_823_p2[10 : 2];
        zext_ln30_5_reg_1403[4 : 0] <= zext_ln30_5_fu_852_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_1281 <= add_ln8_fu_563_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277_pp0_iter7_reg == 1'd0))) begin
        conv_1_bias_load_1_reg_1736 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln8_reg_1277_pp0_iter7_reg == 1'd0))) begin
        conv_1_bias_load_reg_1726 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_557_p2 == 1'd0))) begin
        icmp_ln11_reg_1286 <= icmp_ln11_fu_569_p2;
        or_ln14_reg_1362[2 : 1] <= or_ln14_fu_761_p2[2 : 1];
        select_ln30_6_reg_1304 <= select_ln30_6_fu_667_p3;
        select_ln30_9_reg_1342 <= select_ln30_9_fu_733_p3;
        sub_ln23_reg_1299[10 : 2] <= sub_ln23_fu_615_p2[10 : 2];
        zext_ln23_5_reg_1371[2 : 1] <= zext_ln23_5_fu_767_p1[2 : 1];
        zext_ln23_reg_1347[2 : 0] <= zext_ln23_fu_741_p1[2 : 0];
        zext_ln30_2_reg_1320[4 : 0] <= zext_ln30_2_fu_683_p1[4 : 0];
        zext_ln30_4_reg_1331[4 : 0] <= zext_ln30_4_fu_712_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln8_reg_1277 <= icmp_ln8_fu_557_p2;
        icmp_ln8_reg_1277_pp0_iter1_reg <= icmp_ln8_reg_1277;
        icmp_ln8_reg_1277_pp0_iter2_reg <= icmp_ln8_reg_1277_pp0_iter1_reg;
        icmp_ln8_reg_1277_pp0_iter3_reg <= icmp_ln8_reg_1277_pp0_iter2_reg;
        icmp_ln8_reg_1277_pp0_iter4_reg <= icmp_ln8_reg_1277_pp0_iter3_reg;
        icmp_ln8_reg_1277_pp0_iter5_reg <= icmp_ln8_reg_1277_pp0_iter4_reg;
        icmp_ln8_reg_1277_pp0_iter6_reg <= icmp_ln8_reg_1277_pp0_iter5_reg;
        icmp_ln8_reg_1277_pp0_iter7_reg <= icmp_ln8_reg_1277_pp0_iter6_reg;
        icmp_ln8_reg_1277_pp0_iter8_reg <= icmp_ln8_reg_1277_pp0_iter7_reg;
        or_ln14_reg_1362_pp0_iter1_reg[2 : 1] <= or_ln14_reg_1362[2 : 1];
        or_ln14_reg_1362_pp0_iter2_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter1_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter3_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter2_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter4_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter3_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter5_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter4_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter6_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter5_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter7_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter6_reg[2 : 1];
        or_ln14_reg_1362_pp0_iter8_reg[2 : 1] <= or_ln14_reg_1362_pp0_iter7_reg[2 : 1];
        r_reg_1272 <= r_fu_539_p2;
        select_ln30_1_reg_1293_pp0_iter1_reg <= select_ln30_1_reg_1293;
        select_ln30_1_reg_1293_pp0_iter2_reg <= select_ln30_1_reg_1293_pp0_iter1_reg;
        select_ln30_1_reg_1293_pp0_iter3_reg <= select_ln30_1_reg_1293_pp0_iter2_reg;
        select_ln30_1_reg_1293_pp0_iter4_reg <= select_ln30_1_reg_1293_pp0_iter3_reg;
        select_ln30_1_reg_1293_pp0_iter5_reg <= select_ln30_1_reg_1293_pp0_iter4_reg;
        select_ln30_1_reg_1293_pp0_iter6_reg <= select_ln30_1_reg_1293_pp0_iter5_reg;
        select_ln30_1_reg_1293_pp0_iter7_reg <= select_ln30_1_reg_1293_pp0_iter6_reg;
        select_ln30_1_reg_1293_pp0_iter8_reg <= select_ln30_1_reg_1293_pp0_iter7_reg;
        select_ln30_6_reg_1304_pp0_iter1_reg <= select_ln30_6_reg_1304;
        select_ln30_6_reg_1304_pp0_iter2_reg <= select_ln30_6_reg_1304_pp0_iter1_reg;
        select_ln30_6_reg_1304_pp0_iter3_reg <= select_ln30_6_reg_1304_pp0_iter2_reg;
        select_ln30_6_reg_1304_pp0_iter4_reg <= select_ln30_6_reg_1304_pp0_iter3_reg;
        select_ln30_6_reg_1304_pp0_iter5_reg <= select_ln30_6_reg_1304_pp0_iter4_reg;
        select_ln30_6_reg_1304_pp0_iter6_reg <= select_ln30_6_reg_1304_pp0_iter5_reg;
        select_ln30_6_reg_1304_pp0_iter7_reg <= select_ln30_6_reg_1304_pp0_iter6_reg;
        select_ln30_6_reg_1304_pp0_iter8_reg <= select_ln30_6_reg_1304_pp0_iter7_reg;
        select_ln30_7_reg_1314_pp0_iter1_reg <= select_ln30_7_reg_1314;
        select_ln30_7_reg_1314_pp0_iter2_reg <= select_ln30_7_reg_1314_pp0_iter1_reg;
        select_ln30_7_reg_1314_pp0_iter3_reg <= select_ln30_7_reg_1314_pp0_iter2_reg;
        select_ln30_7_reg_1314_pp0_iter4_reg <= select_ln30_7_reg_1314_pp0_iter3_reg;
        select_ln30_7_reg_1314_pp0_iter5_reg <= select_ln30_7_reg_1314_pp0_iter4_reg;
        select_ln30_7_reg_1314_pp0_iter6_reg <= select_ln30_7_reg_1314_pp0_iter5_reg;
        select_ln30_7_reg_1314_pp0_iter7_reg <= select_ln30_7_reg_1314_pp0_iter6_reg;
        select_ln30_7_reg_1314_pp0_iter8_reg <= select_ln30_7_reg_1314_pp0_iter7_reg;
        tmp_0_2_1_reg_1616_pp0_iter2_reg <= tmp_0_2_1_reg_1616;
        tmp_0_2_1_reg_1616_pp0_iter3_reg <= tmp_0_2_1_reg_1616_pp0_iter2_reg;
        tmp_0_2_1_reg_1616_pp0_iter4_reg <= tmp_0_2_1_reg_1616_pp0_iter3_reg;
        tmp_0_2_1_reg_1616_pp0_iter5_reg <= tmp_0_2_1_reg_1616_pp0_iter4_reg;
        tmp_0_2_1_reg_1616_pp0_iter6_reg <= tmp_0_2_1_reg_1616_pp0_iter5_reg;
        tmp_0_2_reg_1611_pp0_iter2_reg <= tmp_0_2_reg_1611;
        tmp_0_2_reg_1611_pp0_iter3_reg <= tmp_0_2_reg_1611_pp0_iter2_reg;
        tmp_0_2_reg_1611_pp0_iter4_reg <= tmp_0_2_reg_1611_pp0_iter3_reg;
        tmp_0_2_reg_1611_pp0_iter5_reg <= tmp_0_2_reg_1611_pp0_iter4_reg;
        tmp_1_2_1_reg_1626_pp0_iter2_reg <= tmp_1_2_1_reg_1626;
        tmp_1_2_1_reg_1626_pp0_iter3_reg <= tmp_1_2_1_reg_1626_pp0_iter2_reg;
        tmp_1_2_1_reg_1626_pp0_iter4_reg <= tmp_1_2_1_reg_1626_pp0_iter3_reg;
        tmp_1_2_1_reg_1626_pp0_iter5_reg <= tmp_1_2_1_reg_1626_pp0_iter4_reg;
        tmp_1_2_1_reg_1626_pp0_iter6_reg <= tmp_1_2_1_reg_1626_pp0_iter5_reg;
        tmp_1_2_reg_1621_pp0_iter2_reg <= tmp_1_2_reg_1621;
        tmp_1_2_reg_1621_pp0_iter3_reg <= tmp_1_2_reg_1621_pp0_iter2_reg;
        tmp_1_2_reg_1621_pp0_iter4_reg <= tmp_1_2_reg_1621_pp0_iter3_reg;
        tmp_1_2_reg_1621_pp0_iter5_reg <= tmp_1_2_reg_1621_pp0_iter4_reg;
        zext_ln23_5_reg_1371_pp0_iter1_reg[2 : 1] <= zext_ln23_5_reg_1371[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter2_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter1_reg[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter3_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter2_reg[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter4_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter3_reg[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter5_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter4_reg[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter6_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter5_reg[2 : 1];
        zext_ln23_5_reg_1371_pp0_iter7_reg[2 : 1] <= zext_ln23_5_reg_1371_pp0_iter6_reg[2 : 1];
        zext_ln23_reg_1347_pp0_iter1_reg[2 : 0] <= zext_ln23_reg_1347[2 : 0];
        zext_ln23_reg_1347_pp0_iter2_reg[2 : 0] <= zext_ln23_reg_1347_pp0_iter1_reg[2 : 0];
        zext_ln23_reg_1347_pp0_iter3_reg[2 : 0] <= zext_ln23_reg_1347_pp0_iter2_reg[2 : 0];
        zext_ln23_reg_1347_pp0_iter4_reg[2 : 0] <= zext_ln23_reg_1347_pp0_iter3_reg[2 : 0];
        zext_ln23_reg_1347_pp0_iter5_reg[2 : 0] <= zext_ln23_reg_1347_pp0_iter4_reg[2 : 0];
        zext_ln23_reg_1347_pp0_iter6_reg[2 : 0] <= zext_ln23_reg_1347_pp0_iter5_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277_pp0_iter7_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277_pp0_iter8_reg == 1'd0)))) begin
        reg_533 <= grp_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_557_p2 == 1'd0))) begin
        select_ln30_1_reg_1293 <= select_ln30_1_fu_583_p3;
        select_ln30_7_reg_1314 <= select_ln30_7_fu_675_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        tmp_0_0_1_reg_1485 <= grp_fu_475_p2;
        tmp_1_0_1_reg_1511 <= grp_fu_487_p2;
        tmp_1_39_reg_1506 <= grp_fu_481_p2;
        tmp_1_reg_1480 <= grp_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        tmp_0_0_2_reg_1536 <= grp_fu_469_p2;
        tmp_0_1_reg_1541 <= grp_fu_475_p2;
        tmp_1_0_2_reg_1556 <= grp_fu_481_p2;
        tmp_1_1_reg_1561 <= grp_fu_487_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_0_0_2_reg_1536_pp0_iter1_reg <= tmp_0_0_2_reg_1536;
        tmp_0_1_reg_1541_pp0_iter1_reg <= tmp_0_1_reg_1541;
        tmp_0_1_reg_1541_pp0_iter2_reg <= tmp_0_1_reg_1541_pp0_iter1_reg;
        tmp_1_0_2_reg_1556_pp0_iter1_reg <= tmp_1_0_2_reg_1556;
        tmp_1_1_reg_1561_pp0_iter1_reg <= tmp_1_1_reg_1561;
        tmp_1_1_reg_1561_pp0_iter2_reg <= tmp_1_1_reg_1561_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_0_1_1_reg_1576_pp0_iter1_reg <= tmp_0_1_1_reg_1576;
        tmp_0_1_1_reg_1576_pp0_iter2_reg <= tmp_0_1_1_reg_1576_pp0_iter1_reg;
        tmp_0_1_2_reg_1581_pp0_iter1_reg <= tmp_0_1_2_reg_1581;
        tmp_0_1_2_reg_1581_pp0_iter2_reg <= tmp_0_1_2_reg_1581_pp0_iter1_reg;
        tmp_0_1_2_reg_1581_pp0_iter3_reg <= tmp_0_1_2_reg_1581_pp0_iter2_reg;
        tmp_1_1_1_reg_1591_pp0_iter1_reg <= tmp_1_1_1_reg_1591;
        tmp_1_1_1_reg_1591_pp0_iter2_reg <= tmp_1_1_1_reg_1591_pp0_iter1_reg;
        tmp_1_1_2_reg_1596_pp0_iter1_reg <= tmp_1_1_2_reg_1596;
        tmp_1_1_2_reg_1596_pp0_iter2_reg <= tmp_1_1_2_reg_1596_pp0_iter1_reg;
        tmp_1_1_2_reg_1596_pp0_iter3_reg <= tmp_1_1_2_reg_1596_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277 == 1'd0))) begin
        tmp_0_2_1_reg_1616 <= grp_fu_475_p2;
        tmp_0_2_reg_1611 <= grp_fu_469_p2;
        tmp_1_2_1_reg_1626 <= grp_fu_487_p2;
        tmp_1_2_reg_1621 <= grp_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln8_reg_1277_pp0_iter1_reg == 1'd0))) begin
        tmp_0_2_2_reg_1636 <= grp_fu_469_p2;
        tmp_1_2_2_reg_1646 <= grp_fu_475_p2;
        w_sum_4_1_reg_1641 <= grp_fu_456_p2;
        w_sum_4_reg_1631 <= grp_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_0_2_2_reg_1636_pp0_iter2_reg <= tmp_0_2_2_reg_1636;
        tmp_0_2_2_reg_1636_pp0_iter3_reg <= tmp_0_2_2_reg_1636_pp0_iter2_reg;
        tmp_0_2_2_reg_1636_pp0_iter4_reg <= tmp_0_2_2_reg_1636_pp0_iter3_reg;
        tmp_0_2_2_reg_1636_pp0_iter5_reg <= tmp_0_2_2_reg_1636_pp0_iter4_reg;
        tmp_0_2_2_reg_1636_pp0_iter6_reg <= tmp_0_2_2_reg_1636_pp0_iter5_reg;
        tmp_1_2_2_reg_1646_pp0_iter2_reg <= tmp_1_2_2_reg_1646;
        tmp_1_2_2_reg_1646_pp0_iter3_reg <= tmp_1_2_2_reg_1646_pp0_iter2_reg;
        tmp_1_2_2_reg_1646_pp0_iter4_reg <= tmp_1_2_2_reg_1646_pp0_iter3_reg;
        tmp_1_2_2_reg_1646_pp0_iter5_reg <= tmp_1_2_2_reg_1646_pp0_iter4_reg;
        tmp_1_2_2_reg_1646_pp0_iter6_reg <= tmp_1_2_2_reg_1646_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277_pp0_iter8_reg == 1'd0))) begin
        w_sum_1_reg_1746 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277_pp0_iter1_reg == 1'd0))) begin
        w_sum_4_0_0_1_reg_1651 <= grp_fu_451_p2;
        w_sum_4_1_0_1_reg_1656 <= grp_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1277_pp0_iter2_reg == 1'd0))) begin
        w_sum_4_0_0_2_reg_1661 <= grp_fu_451_p2;
        w_sum_4_1_0_2_reg_1666 <= grp_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1277_pp0_iter4_reg == 1'd0))) begin
        w_sum_4_0_1_1_reg_1681 <= grp_fu_451_p2;
        w_sum_4_1_1_1_reg_1686 <= grp_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln8_reg_1277_pp0_iter5_reg == 1'd0))) begin
        w_sum_4_0_1_2_reg_1691 <= grp_fu_461_p2;
        w_sum_4_1_1_2_reg_1696 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277_pp0_iter3_reg == 1'd0))) begin
        w_sum_4_0_1_reg_1671 <= grp_fu_451_p2;
        w_sum_4_1_1_reg_1676 <= grp_fu_456_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1277_pp0_iter6_reg == 1'd0))) begin
        w_sum_4_0_2_1_reg_1711 <= grp_fu_461_p2;
        w_sum_4_1_2_1_reg_1716 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1277_pp0_iter5_reg == 1'd0))) begin
        w_sum_4_0_2_reg_1701 <= grp_fu_461_p2;
        w_sum_4_1_2_reg_1706 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277_pp0_iter7_reg == 1'd0))) begin
        w_sum_4_1_2_2_reg_1741 <= grp_fu_465_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_557_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_433_p4 = select_ln30_7_reg_1314;
    end else begin
        ap_phi_mux_c_0_phi_fu_433_p4 = c_0_reg_429;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        ap_phi_mux_f_0_0_phi_fu_444_p4 = add_ln14_reg_1601;
    end else begin
        ap_phi_mux_f_0_0_phi_fu_444_p4 = f_0_0_reg_440;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_398_p4 = add_ln8_reg_1281;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_398_p4 = indvar_flatten30_reg_394;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = select_ln11_reg_1606;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_421_p4 = indvar_flatten_reg_417;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1277 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_409_p4 = select_ln30_1_reg_1293;
    end else begin
        ap_phi_mux_r_0_phi_fu_409_p4 = r_0_reg_405;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_bias_address0 = zext_ln23_5_reg_1371_pp0_iter7_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_bias_address0 = zext_ln23_reg_1347_pp0_iter6_reg;
        end else begin
            conv_1_bias_address0 = 'bx;
        end
    end else begin
        conv_1_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_1_weights_address0 = tmp_17_fu_1078_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_address0 = zext_ln23_23_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_address0 = tmp_16_fu_985_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_address0 = zext_ln23_20_fu_874_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_address0 = zext_ln23_fu_741_p1;
        end else begin
            conv_1_weights_address0 = 'bx;
        end
    end else begin
        conv_1_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_1_weights_address1 = tmp_19_fu_1086_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_address1 = zext_ln23_24_fu_1049_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_address1 = zext_ln23_22_fu_999_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_address1 = zext_ln23_21_fu_885_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_address1 = zext_ln23_19_fu_756_p1;
        end else begin
            conv_1_weights_address1 = 'bx;
        end
    end else begin
        conv_1_weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_address2 = zext_ln23_33_fu_1059_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_address2 = tmp_18_fu_1007_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_address2 = zext_ln23_30_fu_899_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_address2 = zext_ln23_5_fu_767_p1;
        end else begin
            conv_1_weights_address2 = 'bx;
        end
    end else begin
        conv_1_weights_address2 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_1_weights_address3 = zext_ln23_34_fu_1069_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_1_weights_address3 = zext_ln23_32_fu_1021_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_1_weights_address3 = zext_ln23_31_fu_910_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_1_weights_address3 = zext_ln23_29_fu_782_p1;
        end else begin
            conv_1_weights_address3 = 'bx;
        end
    end else begin
        conv_1_weights_address3 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_ce0 = 1'b1;
    end else begin
        conv_1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_ce1 = 1'b1;
    end else begin
        conv_1_weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_ce2 = 1'b1;
    end else begin
        conv_1_weights_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_1_weights_ce3 = 1'b1;
    end else begin
        conv_1_weights_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_address0 = zext_ln30_7_fu_1209_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_address0 = zext_ln30_6_fu_1144_p1;
        end else begin
            conv_out_address0 = 'bx;
        end
    end else begin
        conv_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_out_d0 = select_ln29_1_fu_1254_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_d0 = select_ln29_fu_1191_p3;
        end else begin
            conv_out_d0 = 'bx;
        end
    end else begin
        conv_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1277_pp0_iter8_reg == 1'd0)) | ((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1277_pp0_iter8_reg == 1'd0)))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_451_p0 = w_sum_4_0_1_reg_1671;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_451_p0 = w_sum_4_0_0_2_reg_1661;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_451_p0 = w_sum_4_0_0_1_reg_1651;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_451_p0 = w_sum_4_reg_1631;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_451_p0 = tmp_1_reg_1480;
    end else begin
        grp_fu_451_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_451_p1 = tmp_0_1_1_reg_1576_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_451_p1 = tmp_0_1_reg_1541_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_451_p1 = tmp_0_0_2_reg_1536_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_451_p1 = tmp_0_0_1_reg_1485;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_451_p1 = 32'd0;
    end else begin
        grp_fu_451_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_456_p0 = w_sum_4_1_1_reg_1676;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_456_p0 = w_sum_4_1_0_2_reg_1666;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_456_p0 = w_sum_4_1_0_1_reg_1656;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_456_p0 = w_sum_4_1_reg_1641;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_456_p0 = tmp_1_39_reg_1506;
    end else begin
        grp_fu_456_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_456_p1 = tmp_1_1_1_reg_1591_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_456_p1 = tmp_1_1_reg_1561_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_456_p1 = tmp_1_0_2_reg_1556_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_456_p1 = tmp_1_0_1_reg_1511;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_456_p1 = 32'd0;
    end else begin
        grp_fu_456_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_461_p0 = reg_533;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_461_p0 = w_sum_4_0_2_1_reg_1711;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_461_p0 = w_sum_4_0_2_reg_1701;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_461_p0 = w_sum_4_0_1_2_reg_1691;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_461_p0 = w_sum_4_0_1_1_reg_1681;
    end else begin
        grp_fu_461_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_461_p1 = conv_1_bias_load_reg_1726;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_461_p1 = tmp_0_2_2_reg_1636_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_461_p1 = tmp_0_2_1_reg_1616_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_461_p1 = tmp_0_2_reg_1611_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_461_p1 = tmp_0_1_2_reg_1581_pp0_iter3_reg;
    end else begin
        grp_fu_461_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_465_p0 = w_sum_4_1_2_2_reg_1741;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_465_p0 = w_sum_4_1_2_1_reg_1716;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_465_p0 = w_sum_4_1_2_reg_1706;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_465_p0 = w_sum_4_1_1_2_reg_1696;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_465_p0 = w_sum_4_1_1_1_reg_1686;
    end else begin
        grp_fu_465_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_465_p1 = conv_1_bias_load_1_reg_1736;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_465_p1 = tmp_1_2_2_reg_1646_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        grp_fu_465_p1 = tmp_1_2_1_reg_1626_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_465_p1 = tmp_1_2_reg_1621_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_465_p1 = tmp_1_1_2_reg_1596_pp0_iter3_reg;
    end else begin
        grp_fu_465_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_475_p1 = input_r_q0;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_475_p1 = input_r_q1;
    end else begin
        grp_fu_475_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_494_p0 = w_sum_1_reg_1746;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_494_p0 = grp_fu_461_p2;
        end else begin
            grp_fu_494_p0 = 'bx;
        end
    end else begin
        grp_fu_494_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = zext_ln23_14_fu_1074_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = sext_ln23_fu_1026_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = zext_ln23_11_fu_958_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln23_12_fu_860_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln23_8_fu_693_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = sext_ln23_1_fu_1030_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln23_13_fu_972_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln23_9_fu_847_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address1 = zext_ln23_10_fu_722_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_557_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_557_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b0)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_915_p2 = (7'd1 + indvar_flatten_reg_417);

assign add_ln14_fu_1094_p2 = (3'd2 + select_ln30_6_reg_1304);

assign add_ln23_10_fu_963_p2 = (sub_ln23_2_fu_943_p2 + zext_ln30_4_reg_1331);

assign add_ln23_11_fu_727_p2 = (5'd3 + select_ln30_fu_575_p3);

assign add_ln23_12_fu_855_p2 = (sub_ln23_reg_1299 + zext_ln30_5_fu_852_p1);

assign add_ln23_13_fu_968_p2 = (sub_ln23_1_reg_1386 + zext_ln30_5_reg_1403);

assign add_ln23_14_fu_977_p2 = (sub_ln23_2_fu_943_p2 + zext_ln30_5_reg_1403);

assign add_ln23_15_fu_750_p2 = (4'd6 + zext_ln23_18_fu_746_p1);

assign add_ln23_16_fu_868_p2 = (5'd12 + zext_ln23_17_fu_865_p1);

assign add_ln23_17_fu_879_p2 = ($signed(5'd18) + $signed(zext_ln23_17_fu_865_p1));

assign add_ln23_18_fu_993_p2 = (6'd30 + zext_ln23_16_fu_982_p1);

assign add_ln23_19_fu_1034_p2 = ($signed(6'd36) + $signed(zext_ln23_16_reg_1464));

assign add_ln23_1_fu_551_p2 = (ap_phi_mux_c_0_phi_fu_433_p4 + 5'd2);

assign add_ln23_20_fu_1044_p2 = ($signed(6'd42) + $signed(zext_ln23_16_reg_1464));

assign add_ln23_21_fu_776_p2 = (4'd6 + zext_ln23_28_fu_772_p1);

assign add_ln23_22_fu_893_p2 = (5'd12 + zext_ln23_27_fu_890_p1);

assign add_ln23_23_fu_904_p2 = ($signed(5'd18) + $signed(zext_ln23_27_fu_890_p1));

assign add_ln23_24_fu_1015_p2 = (6'd30 + zext_ln23_26_fu_1004_p1);

assign add_ln23_25_fu_1054_p2 = ($signed(6'd36) + $signed(zext_ln23_26_reg_1490));

assign add_ln23_26_fu_1064_p2 = ($signed(6'd42) + $signed(zext_ln23_26_reg_1490));

assign add_ln23_3_fu_655_p2 = (5'd1 + select_ln30_fu_575_p3);

assign add_ln23_4_fu_687_p2 = (sub_ln23_fu_615_p2 + zext_ln30_2_fu_683_p1);

assign add_ln23_5_fu_842_p2 = (sub_ln23_1_fu_823_p2 + zext_ln30_2_reg_1320);

assign add_ln23_6_fu_949_p2 = (sub_ln23_2_fu_943_p2 + zext_ln30_2_reg_1320);

assign add_ln23_7_fu_698_p2 = (5'd2 + select_ln30_fu_575_p3);

assign add_ln23_8_fu_716_p2 = (sub_ln23_fu_615_p2 + zext_ln30_4_fu_712_p1);

assign add_ln23_9_fu_954_p2 = (sub_ln23_1_reg_1386 + zext_ln30_4_reg_1331);

assign add_ln23_fu_787_p2 = (5'd2 + r_0_reg_405);

assign add_ln30_2_fu_1138_p2 = (sub_ln30_fu_1129_p2 + zext_ln23_15_fu_1135_p1);

assign add_ln30_3_fu_1203_p2 = (sub_ln30_fu_1129_p2 + zext_ln23_25_fu_1200_p1);

assign add_ln30_fu_836_p2 = (r_0_reg_405 + select_ln30_3_fu_829_p3);

assign add_ln8_fu_563_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_398_p4 + 11'd1);

assign and_ln29_3_fu_1248_p2 = (or_ln29_3_fu_1242_p2 & grp_fu_494_p2);

assign and_ln29_fu_1185_p2 = (or_ln29_fu_1179_p2 & grp_fu_494_p2);

assign and_ln30_fu_649_p2 = (xor_ln30_fu_637_p2 & icmp_ln14_fu_643_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln29_3_fu_1213_p1 = w_sum_1_reg_1746;

assign bitcast_ln29_fu_1149_p1 = reg_533;

assign c_fu_545_p2 = (ap_phi_mux_c_0_phi_fu_433_p4 + 5'd1);

assign grp_fu_1262_p0 = 10'd26;

assign grp_fu_1262_p1 = grp_fu_1262_p10;

assign grp_fu_1262_p10 = select_ln30_1_reg_1293_pp0_iter8_reg;

assign grp_fu_1262_p2 = grp_fu_1262_p20;

assign grp_fu_1262_p20 = select_ln30_7_reg_1314_pp0_iter8_reg;

assign icmp_ln11_fu_569_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_421_p4 == 7'd78) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_643_p2 = ((ap_phi_mux_f_0_0_phi_fu_444_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1173_p2 = ((trunc_ln29_fu_1163_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_1230_p2 = ((tmp_8_fu_1216_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_1236_p2 = ((trunc_ln29_3_fu_1226_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_1167_p2 = ((tmp_s_fu_1153_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_557_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_398_p4 == 11'd2028) ? 1'b1 : 1'b0);

assign or_ln14_fu_761_p2 = (select_ln30_6_fu_667_p3 | 3'd1);

assign or_ln29_3_fu_1242_p2 = (icmp_ln29_9_fu_1236_p2 | icmp_ln29_8_fu_1230_p2);

assign or_ln29_fu_1179_p2 = (icmp_ln29_fu_1167_p2 | icmp_ln29_7_fu_1173_p2);

assign or_ln30_fu_661_p2 = (icmp_ln11_fu_569_p2 | and_ln30_fu_649_p2);

assign p_shl_cast_fu_1111_p3 = {{grp_fu_1262_p3}, {3'd0}};

assign r_fu_539_p2 = (ap_phi_mux_r_0_phi_fu_409_p4 + 5'd1);

assign select_ln11_fu_1099_p3 = ((icmp_ln11_reg_1286[0:0] === 1'b1) ? 7'd1 : add_ln11_reg_1434);

assign select_ln29_1_fu_1254_p3 = ((and_ln29_3_fu_1248_p2[0:0] === 1'b1) ? w_sum_1_reg_1746 : 32'd0);

assign select_ln29_fu_1191_p3 = ((and_ln29_fu_1185_p2[0:0] === 1'b1) ? reg_533 : 32'd0);

assign select_ln30_1_fu_583_p3 = ((icmp_ln11_fu_569_p2[0:0] === 1'b1) ? r_fu_539_p2 : ap_phi_mux_r_0_phi_fu_409_p4);

assign select_ln30_2_fu_793_p3 = ((icmp_ln11_reg_1286[0:0] === 1'b1) ? add_ln23_fu_787_p2 : r_reg_1272);

assign select_ln30_3_fu_829_p3 = ((icmp_ln11_reg_1286[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln30_4_fu_621_p3 = ((icmp_ln11_fu_569_p2[0:0] === 1'b1) ? 5'd1 : c_fu_545_p2);

assign select_ln30_5_fu_629_p3 = ((icmp_ln11_fu_569_p2[0:0] === 1'b1) ? 5'd2 : add_ln23_1_fu_551_p2);

assign select_ln30_6_fu_667_p3 = ((or_ln30_fu_661_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_f_0_0_phi_fu_444_p4);

assign select_ln30_7_fu_675_p3 = ((and_ln30_fu_649_p2[0:0] === 1'b1) ? add_ln23_3_fu_655_p2 : select_ln30_fu_575_p3);

assign select_ln30_8_fu_704_p3 = ((and_ln30_fu_649_p2[0:0] === 1'b1) ? add_ln23_7_fu_698_p2 : select_ln30_4_fu_621_p3);

assign select_ln30_9_fu_733_p3 = ((and_ln30_fu_649_p2[0:0] === 1'b1) ? add_ln23_11_fu_727_p2 : select_ln30_5_fu_629_p3);

assign select_ln30_fu_575_p3 = ((icmp_ln11_fu_569_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_433_p4);

assign sext_ln23_1_fu_1030_p1 = $signed(add_ln23_10_reg_1449);

assign sext_ln23_fu_1026_p1 = $signed(add_ln23_6_reg_1439);

assign sub_ln23_1_fu_823_p2 = (zext_ln23_3_fu_807_p1 - zext_ln23_4_fu_819_p1);

assign sub_ln23_2_fu_943_p2 = (zext_ln23_6_fu_928_p1 - zext_ln23_7_fu_939_p1);

assign sub_ln23_fu_615_p2 = (zext_ln23_1_fu_599_p1 - zext_ln23_2_fu_611_p1);

assign sub_ln30_fu_1129_p2 = (p_shl_cast_fu_1111_p3 - zext_ln30_3_fu_1125_p1);

assign tmp_10_fu_921_p3 = {{add_ln30_reg_1392}, {5'd0}};

assign tmp_11_fu_603_p3 = {{select_ln30_1_fu_583_p3}, {2'd0}};

assign tmp_12_fu_799_p3 = {{select_ln30_2_fu_793_p3}, {5'd0}};

assign tmp_13_fu_811_p3 = {{select_ln30_2_fu_793_p3}, {2'd0}};

assign tmp_14_fu_932_p3 = {{add_ln30_reg_1392}, {2'd0}};

assign tmp_15_fu_1118_p3 = {{grp_fu_1262_p3}, {1'd0}};

assign tmp_16_fu_985_p3 = {{61'd3}, {select_ln30_6_reg_1304}};

assign tmp_17_fu_1078_p3 = {{61'd6}, {select_ln30_6_reg_1304}};

assign tmp_18_fu_1007_p3 = {{61'd3}, {or_ln14_reg_1362}};

assign tmp_19_fu_1086_p3 = {{61'd6}, {or_ln14_reg_1362}};

assign tmp_8_fu_1216_p4 = {{bitcast_ln29_3_fu_1213_p1[30:23]}};

assign tmp_fu_591_p3 = {{select_ln30_1_fu_583_p3}, {5'd0}};

assign tmp_s_fu_1153_p4 = {{bitcast_ln29_fu_1149_p1[30:23]}};

assign trunc_ln29_3_fu_1226_p1 = bitcast_ln29_3_fu_1213_p1[22:0];

assign trunc_ln29_fu_1163_p1 = bitcast_ln29_fu_1149_p1[22:0];

assign xor_ln30_fu_637_p2 = (icmp_ln11_fu_569_p2 ^ 1'd1);

assign zext_ln23_10_fu_722_p1 = add_ln23_8_fu_716_p2;

assign zext_ln23_11_fu_958_p1 = add_ln23_9_fu_954_p2;

assign zext_ln23_12_fu_860_p1 = add_ln23_12_fu_855_p2;

assign zext_ln23_13_fu_972_p1 = add_ln23_13_fu_968_p2;

assign zext_ln23_14_fu_1074_p1 = add_ln23_14_reg_1459;

assign zext_ln23_15_fu_1135_p1 = select_ln30_6_reg_1304_pp0_iter8_reg;

assign zext_ln23_16_fu_982_p1 = select_ln30_6_reg_1304;

assign zext_ln23_17_fu_865_p1 = select_ln30_6_reg_1304;

assign zext_ln23_18_fu_746_p1 = select_ln30_6_fu_667_p3;

assign zext_ln23_19_fu_756_p1 = add_ln23_15_fu_750_p2;

assign zext_ln23_1_fu_599_p1 = tmp_fu_591_p3;

assign zext_ln23_20_fu_874_p1 = add_ln23_16_fu_868_p2;

assign zext_ln23_21_fu_885_p1 = add_ln23_17_fu_879_p2;

assign zext_ln23_22_fu_999_p1 = add_ln23_18_fu_993_p2;

assign zext_ln23_23_fu_1039_p1 = add_ln23_19_fu_1034_p2;

assign zext_ln23_24_fu_1049_p1 = add_ln23_20_fu_1044_p2;

assign zext_ln23_25_fu_1200_p1 = or_ln14_reg_1362_pp0_iter8_reg;

assign zext_ln23_26_fu_1004_p1 = or_ln14_reg_1362;

assign zext_ln23_27_fu_890_p1 = or_ln14_reg_1362;

assign zext_ln23_28_fu_772_p1 = or_ln14_fu_761_p2;

assign zext_ln23_29_fu_782_p1 = add_ln23_21_fu_776_p2;

assign zext_ln23_2_fu_611_p1 = tmp_11_fu_603_p3;

assign zext_ln23_30_fu_899_p1 = add_ln23_22_fu_893_p2;

assign zext_ln23_31_fu_910_p1 = add_ln23_23_fu_904_p2;

assign zext_ln23_32_fu_1021_p1 = add_ln23_24_fu_1015_p2;

assign zext_ln23_33_fu_1059_p1 = add_ln23_25_fu_1054_p2;

assign zext_ln23_34_fu_1069_p1 = add_ln23_26_fu_1064_p2;

assign zext_ln23_3_fu_807_p1 = tmp_12_fu_799_p3;

assign zext_ln23_4_fu_819_p1 = tmp_13_fu_811_p3;

assign zext_ln23_5_fu_767_p1 = or_ln14_fu_761_p2;

assign zext_ln23_6_fu_928_p1 = tmp_10_fu_921_p3;

assign zext_ln23_7_fu_939_p1 = tmp_14_fu_932_p3;

assign zext_ln23_8_fu_693_p1 = add_ln23_4_fu_687_p2;

assign zext_ln23_9_fu_847_p1 = add_ln23_5_fu_842_p2;

assign zext_ln23_fu_741_p1 = select_ln30_6_fu_667_p3;

assign zext_ln30_2_fu_683_p1 = select_ln30_7_fu_675_p3;

assign zext_ln30_3_fu_1125_p1 = tmp_15_fu_1118_p3;

assign zext_ln30_4_fu_712_p1 = select_ln30_8_fu_704_p3;

assign zext_ln30_5_fu_852_p1 = select_ln30_9_reg_1342;

assign zext_ln30_6_fu_1144_p1 = add_ln30_2_fu_1138_p2;

assign zext_ln30_7_fu_1209_p1 = add_ln30_3_reg_1753;

always @ (posedge ap_clk) begin
    sub_ln23_reg_1299[1:0] <= 2'b00;
    zext_ln30_2_reg_1320[10:5] <= 6'b000000;
    zext_ln30_4_reg_1331[10:5] <= 6'b000000;
    zext_ln23_reg_1347[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1347_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    or_ln14_reg_1362[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter1_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter2_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter3_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter4_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter5_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter6_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter7_reg[0] <= 1'b1;
    or_ln14_reg_1362_pp0_iter8_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371[0] <= 1'b1;
    zext_ln23_5_reg_1371[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter1_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter2_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter3_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter4_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter5_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter6_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_5_reg_1371_pp0_iter7_reg[0] <= 1'b1;
    zext_ln23_5_reg_1371_pp0_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sub_ln23_1_reg_1386[1:0] <= 2'b00;
    zext_ln30_5_reg_1403[10:5] <= 6'b000000;
    zext_ln23_16_reg_1464[5:3] <= 3'b000;
    zext_ln23_26_reg_1490[0] <= 1'b1;
    zext_ln23_26_reg_1490[5:3] <= 3'b000;
    add_ln30_3_reg_1753[0] <= 1'b1;
end

endmodule //conv_1
