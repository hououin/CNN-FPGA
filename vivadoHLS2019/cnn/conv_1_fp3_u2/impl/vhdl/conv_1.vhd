-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv_out_ce0 : OUT STD_LOGIC;
    conv_out_we0 : OUT STD_LOGIC;
    conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv11_7EC : STD_LOGIC_VECTOR (10 downto 0) := "11111101100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv61_3 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv61_6 : STD_LOGIC_VECTOR (60 downto 0) := "0000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_1_weights_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce0 : STD_LOGIC;
    signal conv_1_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce1 : STD_LOGIC;
    signal conv_1_weights_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address2 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce2 : STD_LOGIC;
    signal conv_1_weights_q2 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_address3 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_1_weights_ce3 : STD_LOGIC;
    signal conv_1_weights_q3 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal conv_1_bias_ce0 : STD_LOGIC;
    signal conv_1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten30_reg_394 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_0_reg_405 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_417 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_0_reg_429 : STD_LOGIC_VECTOR (4 downto 0);
    signal f_0_0_reg_440 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln8_reg_1277 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state41_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_fu_461_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_533 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal icmp_ln8_reg_1277_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal icmp_ln8_reg_1277_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_539_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_reg_1272 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln8_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln8_reg_1277_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln8_fu_563_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln8_reg_1281 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln11_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln11_reg_1286 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_1_fu_583_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_1_reg_1293_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln23_fu_615_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_reg_1299 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_6_fu_667_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_6_reg_1304_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln30_7_fu_675_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_7_reg_1314_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_2_fu_683_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_2_reg_1320 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_4_fu_712_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_4_reg_1331 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_9_fu_733_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_9_reg_1342 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_reg_1347_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln14_fu_761_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln14_reg_1362_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln23_5_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_5_reg_1371_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln23_1_fu_823_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_1_reg_1386 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln30_fu_836_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln30_reg_1392 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln30_5_fu_852_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln30_5_reg_1403 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln11_fu_915_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln11_reg_1434 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln23_6_fu_949_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_6_reg_1439 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_10_fu_963_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_10_reg_1449 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_14_fu_977_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_14_reg_1459 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_16_fu_982_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln23_16_reg_1464 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_469_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1480 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_1_reg_1485 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln23_26_fu_1004_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln23_26_reg_1490 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_39_reg_1506 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_1_reg_1511 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_2_reg_1536 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_0_2_reg_1536_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1541_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_reg_1541_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_reg_1556 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_0_2_reg_1556_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1561 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1561_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_1561_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1576 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1576_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_1_reg_1576_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1581 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1581_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1581_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_1_2_reg_1581_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1591 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1591_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_1_reg_1591_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1596 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1596_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1596_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_2_reg_1596_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_fu_1094_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln14_reg_1601 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln11_fu_1099_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln11_reg_1606 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_0_2_reg_1611 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1611_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1611_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1611_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_reg_1611_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_1_reg_1616_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1621 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1621_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1621_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1621_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1621_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_1_reg_1626_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_reg_1631 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_0_2_2_reg_1636_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_456_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_reg_1641 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_2_reg_1646_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_0_1_reg_1651 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal w_sum_4_1_0_1_reg_1656 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_0_2_reg_1661 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_0_2_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_reg_1671 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal w_sum_4_1_1_reg_1676 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_1_reg_1681 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal w_sum_4_1_1_1_reg_1686 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_1_2_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal grp_fu_465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_1_2_reg_1696 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_2_reg_1701 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal w_sum_4_1_2_reg_1706 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_0_2_1_reg_1711 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_2_1_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_load_reg_1726 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_load_1_reg_1736 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_4_1_2_2_reg_1741 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_sum_1_reg_1746 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln30_3_fu_1203_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_3_reg_1753 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten30_phi_fu_398_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_r_0_phi_fu_409_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_421_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_c_0_phi_fu_433_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_f_0_0_phi_fu_444_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln23_8_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_10_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_19_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_29_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_9_fu_847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln23_12_fu_860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_20_fu_874_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_21_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_30_fu_899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_31_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_11_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln23_13_fu_972_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_985_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_22_fu_999_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1007_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_32_fu_1021_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln23_fu_1026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal sext_ln23_1_fu_1030_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_23_fu_1039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_24_fu_1049_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_33_fu_1059_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_34_fu_1069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln23_14_fu_1074_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_17_fu_1078_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1086_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_6_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln30_7_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln29_fu_1191_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_1_fu_1254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_451_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_451_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_456_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_456_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_461_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_494_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_591_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_fu_603_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_1_fu_599_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_2_fu_611_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_fu_545_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_1_fu_551_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln14_fu_643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln30_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln30_fu_575_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln30_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln30_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln23_3_fu_655_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_4_fu_687_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_7_fu_698_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_4_fu_621_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_8_fu_704_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_8_fu_716_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_11_fu_727_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_5_fu_629_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_18_fu_746_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_15_fu_750_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln23_28_fu_772_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_21_fu_776_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln23_fu_787_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln30_2_fu_793_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_12_fu_799_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_13_fu_811_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_3_fu_807_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_4_fu_819_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln30_3_fu_829_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_5_fu_842_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_12_fu_855_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_17_fu_865_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_16_fu_868_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_17_fu_879_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln23_27_fu_890_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_22_fu_893_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln23_23_fu_904_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_10_fu_921_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_14_fu_932_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln23_6_fu_928_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln23_7_fu_939_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln23_2_fu_943_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_9_fu_954_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_13_fu_968_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln23_18_fu_993_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_24_fu_1015_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_19_fu_1034_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_20_fu_1044_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_25_fu_1054_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln23_26_fu_1064_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1262_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_1118_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl_cast_fu_1111_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln30_3_fu_1125_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln30_fu_1129_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln23_15_fu_1135_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln30_2_fu_1138_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_fu_1149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1153_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_fu_1163_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_7_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln23_25_fu_1200_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_3_fu_1213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1216_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_3_fu_1226_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_9_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_8_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_3_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_3_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1262_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1262_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1262_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1262_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1262_p20 : STD_LOGIC_VECTOR (9 downto 0);

    component cnn_fadd_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fmul_32ns_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fcmp_32ns_32neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_mac_muladd_6nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component conv_1_conv_1_weibkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address3 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_conv_1_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv_1_weights_U : component conv_1_conv_1_weibkb
    generic map (
        DataWidth => 32,
        AddressRange => 54,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_address0,
        ce0 => conv_1_weights_ce0,
        q0 => conv_1_weights_q0,
        address1 => conv_1_weights_address1,
        ce1 => conv_1_weights_ce1,
        q1 => conv_1_weights_q1,
        address2 => conv_1_weights_address2,
        ce2 => conv_1_weights_ce2,
        q2 => conv_1_weights_q2,
        address3 => conv_1_weights_address3,
        ce3 => conv_1_weights_ce3,
        q3 => conv_1_weights_q3);

    conv_1_bias_U : component conv_1_conv_1_bias
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_address0,
        ce0 => conv_1_bias_ce0,
        q0 => conv_1_bias_q0);

    cnn_fadd_32ns_32ncud_U1 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_451_p0,
        din1 => grp_fu_451_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_451_p2);

    cnn_fadd_32ns_32ncud_U2 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_456_p0,
        din1 => grp_fu_456_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_456_p2);

    cnn_fadd_32ns_32ncud_U3 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_461_p0,
        din1 => grp_fu_461_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_461_p2);

    cnn_fadd_32ns_32ncud_U4 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_465_p0,
        din1 => grp_fu_465_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_465_p2);

    cnn_fmul_32ns_32ndEe_U5 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q0,
        din1 => input_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_469_p2);

    cnn_fmul_32ns_32ndEe_U6 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q1,
        din1 => grp_fu_475_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_475_p2);

    cnn_fmul_32ns_32ndEe_U7 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q2,
        din1 => input_r_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_481_p2);

    cnn_fmul_32ns_32ndEe_U8 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_1_weights_q3,
        din1 => input_r_q1,
        ce => ap_const_logic_1,
        dout => grp_fu_487_p2);

    cnn_fcmp_32ns_32neOg_U9 : component cnn_fcmp_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_494_p0,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_494_p2);

    cnn_mac_muladd_6nfYi_U10 : component cnn_mac_muladd_6nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 5,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1262_p0,
        din1 => grp_fu_1262_p1,
        din2 => grp_fu_1262_p2,
        dout => grp_fu_1262_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_0_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
                c_0_reg_429 <= select_ln30_7_reg_1314;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_0_reg_429 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    f_0_0_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
                f_0_0_reg_440 <= add_ln14_reg_1601;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_0_reg_440 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten30_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
                indvar_flatten30_reg_394 <= add_ln8_reg_1281;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten30_reg_394 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
                indvar_flatten_reg_417 <= select_ln11_reg_1606;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_417 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
                r_0_reg_405 <= select_ln30_1_reg_1293;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_405 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln11_reg_1286 = ap_const_lv1_0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                add_ln11_reg_1434 <= add_ln11_fu_915_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                add_ln14_reg_1601 <= add_ln14_fu_1094_p2;
                select_ln11_reg_1606 <= select_ln11_fu_1099_p3;
                tmp_0_1_1_reg_1576 <= grp_fu_469_p2;
                tmp_0_1_2_reg_1581 <= grp_fu_475_p2;
                tmp_1_1_1_reg_1591 <= grp_fu_481_p2;
                tmp_1_1_2_reg_1596 <= grp_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                add_ln23_10_reg_1449 <= add_ln23_10_fu_963_p2;
                add_ln23_14_reg_1459 <= add_ln23_14_fu_977_p2;
                add_ln23_6_reg_1439 <= add_ln23_6_fu_949_p2;
                    zext_ln23_16_reg_1464(2 downto 0) <= zext_ln23_16_fu_982_p1(2 downto 0);
                    zext_ln23_26_reg_1490(2 downto 1) <= zext_ln23_26_fu_1004_p1(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277_pp0_iter8_reg = ap_const_lv1_0))) then
                    add_ln30_3_reg_1753(12 downto 1) <= add_ln30_3_fu_1203_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                add_ln30_reg_1392 <= add_ln30_fu_836_p2;
                    sub_ln23_1_reg_1386(10 downto 2) <= sub_ln23_1_fu_823_p2(10 downto 2);
                    zext_ln30_5_reg_1403(4 downto 0) <= zext_ln30_5_fu_852_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln8_reg_1281 <= add_ln8_fu_563_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277_pp0_iter7_reg = ap_const_lv1_0))) then
                conv_1_bias_load_1_reg_1736 <= conv_1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln8_reg_1277_pp0_iter7_reg = ap_const_lv1_0))) then
                conv_1_bias_load_reg_1726 <= conv_1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_557_p2 = ap_const_lv1_0))) then
                icmp_ln11_reg_1286 <= icmp_ln11_fu_569_p2;
                    or_ln14_reg_1362(2 downto 1) <= or_ln14_fu_761_p2(2 downto 1);
                select_ln30_6_reg_1304 <= select_ln30_6_fu_667_p3;
                select_ln30_9_reg_1342 <= select_ln30_9_fu_733_p3;
                    sub_ln23_reg_1299(10 downto 2) <= sub_ln23_fu_615_p2(10 downto 2);
                    zext_ln23_5_reg_1371(2 downto 1) <= zext_ln23_5_fu_767_p1(2 downto 1);
                    zext_ln23_reg_1347(2 downto 0) <= zext_ln23_fu_741_p1(2 downto 0);
                    zext_ln30_2_reg_1320(4 downto 0) <= zext_ln30_2_fu_683_p1(4 downto 0);
                    zext_ln30_4_reg_1331(4 downto 0) <= zext_ln30_4_fu_712_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln8_reg_1277 <= icmp_ln8_fu_557_p2;
                icmp_ln8_reg_1277_pp0_iter1_reg <= icmp_ln8_reg_1277;
                icmp_ln8_reg_1277_pp0_iter2_reg <= icmp_ln8_reg_1277_pp0_iter1_reg;
                icmp_ln8_reg_1277_pp0_iter3_reg <= icmp_ln8_reg_1277_pp0_iter2_reg;
                icmp_ln8_reg_1277_pp0_iter4_reg <= icmp_ln8_reg_1277_pp0_iter3_reg;
                icmp_ln8_reg_1277_pp0_iter5_reg <= icmp_ln8_reg_1277_pp0_iter4_reg;
                icmp_ln8_reg_1277_pp0_iter6_reg <= icmp_ln8_reg_1277_pp0_iter5_reg;
                icmp_ln8_reg_1277_pp0_iter7_reg <= icmp_ln8_reg_1277_pp0_iter6_reg;
                icmp_ln8_reg_1277_pp0_iter8_reg <= icmp_ln8_reg_1277_pp0_iter7_reg;
                    or_ln14_reg_1362_pp0_iter1_reg(2 downto 1) <= or_ln14_reg_1362(2 downto 1);
                    or_ln14_reg_1362_pp0_iter2_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter1_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter3_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter2_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter4_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter3_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter5_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter4_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter6_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter5_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter7_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter6_reg(2 downto 1);
                    or_ln14_reg_1362_pp0_iter8_reg(2 downto 1) <= or_ln14_reg_1362_pp0_iter7_reg(2 downto 1);
                r_reg_1272 <= r_fu_539_p2;
                select_ln30_1_reg_1293_pp0_iter1_reg <= select_ln30_1_reg_1293;
                select_ln30_1_reg_1293_pp0_iter2_reg <= select_ln30_1_reg_1293_pp0_iter1_reg;
                select_ln30_1_reg_1293_pp0_iter3_reg <= select_ln30_1_reg_1293_pp0_iter2_reg;
                select_ln30_1_reg_1293_pp0_iter4_reg <= select_ln30_1_reg_1293_pp0_iter3_reg;
                select_ln30_1_reg_1293_pp0_iter5_reg <= select_ln30_1_reg_1293_pp0_iter4_reg;
                select_ln30_1_reg_1293_pp0_iter6_reg <= select_ln30_1_reg_1293_pp0_iter5_reg;
                select_ln30_1_reg_1293_pp0_iter7_reg <= select_ln30_1_reg_1293_pp0_iter6_reg;
                select_ln30_1_reg_1293_pp0_iter8_reg <= select_ln30_1_reg_1293_pp0_iter7_reg;
                select_ln30_6_reg_1304_pp0_iter1_reg <= select_ln30_6_reg_1304;
                select_ln30_6_reg_1304_pp0_iter2_reg <= select_ln30_6_reg_1304_pp0_iter1_reg;
                select_ln30_6_reg_1304_pp0_iter3_reg <= select_ln30_6_reg_1304_pp0_iter2_reg;
                select_ln30_6_reg_1304_pp0_iter4_reg <= select_ln30_6_reg_1304_pp0_iter3_reg;
                select_ln30_6_reg_1304_pp0_iter5_reg <= select_ln30_6_reg_1304_pp0_iter4_reg;
                select_ln30_6_reg_1304_pp0_iter6_reg <= select_ln30_6_reg_1304_pp0_iter5_reg;
                select_ln30_6_reg_1304_pp0_iter7_reg <= select_ln30_6_reg_1304_pp0_iter6_reg;
                select_ln30_6_reg_1304_pp0_iter8_reg <= select_ln30_6_reg_1304_pp0_iter7_reg;
                select_ln30_7_reg_1314_pp0_iter1_reg <= select_ln30_7_reg_1314;
                select_ln30_7_reg_1314_pp0_iter2_reg <= select_ln30_7_reg_1314_pp0_iter1_reg;
                select_ln30_7_reg_1314_pp0_iter3_reg <= select_ln30_7_reg_1314_pp0_iter2_reg;
                select_ln30_7_reg_1314_pp0_iter4_reg <= select_ln30_7_reg_1314_pp0_iter3_reg;
                select_ln30_7_reg_1314_pp0_iter5_reg <= select_ln30_7_reg_1314_pp0_iter4_reg;
                select_ln30_7_reg_1314_pp0_iter6_reg <= select_ln30_7_reg_1314_pp0_iter5_reg;
                select_ln30_7_reg_1314_pp0_iter7_reg <= select_ln30_7_reg_1314_pp0_iter6_reg;
                select_ln30_7_reg_1314_pp0_iter8_reg <= select_ln30_7_reg_1314_pp0_iter7_reg;
                tmp_0_2_1_reg_1616_pp0_iter2_reg <= tmp_0_2_1_reg_1616;
                tmp_0_2_1_reg_1616_pp0_iter3_reg <= tmp_0_2_1_reg_1616_pp0_iter2_reg;
                tmp_0_2_1_reg_1616_pp0_iter4_reg <= tmp_0_2_1_reg_1616_pp0_iter3_reg;
                tmp_0_2_1_reg_1616_pp0_iter5_reg <= tmp_0_2_1_reg_1616_pp0_iter4_reg;
                tmp_0_2_1_reg_1616_pp0_iter6_reg <= tmp_0_2_1_reg_1616_pp0_iter5_reg;
                tmp_0_2_reg_1611_pp0_iter2_reg <= tmp_0_2_reg_1611;
                tmp_0_2_reg_1611_pp0_iter3_reg <= tmp_0_2_reg_1611_pp0_iter2_reg;
                tmp_0_2_reg_1611_pp0_iter4_reg <= tmp_0_2_reg_1611_pp0_iter3_reg;
                tmp_0_2_reg_1611_pp0_iter5_reg <= tmp_0_2_reg_1611_pp0_iter4_reg;
                tmp_1_2_1_reg_1626_pp0_iter2_reg <= tmp_1_2_1_reg_1626;
                tmp_1_2_1_reg_1626_pp0_iter3_reg <= tmp_1_2_1_reg_1626_pp0_iter2_reg;
                tmp_1_2_1_reg_1626_pp0_iter4_reg <= tmp_1_2_1_reg_1626_pp0_iter3_reg;
                tmp_1_2_1_reg_1626_pp0_iter5_reg <= tmp_1_2_1_reg_1626_pp0_iter4_reg;
                tmp_1_2_1_reg_1626_pp0_iter6_reg <= tmp_1_2_1_reg_1626_pp0_iter5_reg;
                tmp_1_2_reg_1621_pp0_iter2_reg <= tmp_1_2_reg_1621;
                tmp_1_2_reg_1621_pp0_iter3_reg <= tmp_1_2_reg_1621_pp0_iter2_reg;
                tmp_1_2_reg_1621_pp0_iter4_reg <= tmp_1_2_reg_1621_pp0_iter3_reg;
                tmp_1_2_reg_1621_pp0_iter5_reg <= tmp_1_2_reg_1621_pp0_iter4_reg;
                    zext_ln23_5_reg_1371_pp0_iter1_reg(2 downto 1) <= zext_ln23_5_reg_1371(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter2_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter1_reg(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter3_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter2_reg(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter4_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter3_reg(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter5_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter4_reg(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter6_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter5_reg(2 downto 1);
                    zext_ln23_5_reg_1371_pp0_iter7_reg(2 downto 1) <= zext_ln23_5_reg_1371_pp0_iter6_reg(2 downto 1);
                    zext_ln23_reg_1347_pp0_iter1_reg(2 downto 0) <= zext_ln23_reg_1347(2 downto 0);
                    zext_ln23_reg_1347_pp0_iter2_reg(2 downto 0) <= zext_ln23_reg_1347_pp0_iter1_reg(2 downto 0);
                    zext_ln23_reg_1347_pp0_iter3_reg(2 downto 0) <= zext_ln23_reg_1347_pp0_iter2_reg(2 downto 0);
                    zext_ln23_reg_1347_pp0_iter4_reg(2 downto 0) <= zext_ln23_reg_1347_pp0_iter3_reg(2 downto 0);
                    zext_ln23_reg_1347_pp0_iter5_reg(2 downto 0) <= zext_ln23_reg_1347_pp0_iter4_reg(2 downto 0);
                    zext_ln23_reg_1347_pp0_iter6_reg(2 downto 0) <= zext_ln23_reg_1347_pp0_iter5_reg(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277_pp0_iter8_reg = ap_const_lv1_0)))) then
                reg_533 <= grp_fu_461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_557_p2 = ap_const_lv1_0))) then
                select_ln30_1_reg_1293 <= select_ln30_1_fu_583_p3;
                select_ln30_7_reg_1314 <= select_ln30_7_fu_675_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                tmp_0_0_1_reg_1485 <= grp_fu_475_p2;
                tmp_1_0_1_reg_1511 <= grp_fu_487_p2;
                tmp_1_39_reg_1506 <= grp_fu_481_p2;
                tmp_1_reg_1480 <= grp_fu_469_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                tmp_0_0_2_reg_1536 <= grp_fu_469_p2;
                tmp_0_1_reg_1541 <= grp_fu_475_p2;
                tmp_1_0_2_reg_1556 <= grp_fu_481_p2;
                tmp_1_1_reg_1561 <= grp_fu_487_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                tmp_0_0_2_reg_1536_pp0_iter1_reg <= tmp_0_0_2_reg_1536;
                tmp_0_1_reg_1541_pp0_iter1_reg <= tmp_0_1_reg_1541;
                tmp_0_1_reg_1541_pp0_iter2_reg <= tmp_0_1_reg_1541_pp0_iter1_reg;
                tmp_1_0_2_reg_1556_pp0_iter1_reg <= tmp_1_0_2_reg_1556;
                tmp_1_1_reg_1561_pp0_iter1_reg <= tmp_1_1_reg_1561;
                tmp_1_1_reg_1561_pp0_iter2_reg <= tmp_1_1_reg_1561_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                tmp_0_1_1_reg_1576_pp0_iter1_reg <= tmp_0_1_1_reg_1576;
                tmp_0_1_1_reg_1576_pp0_iter2_reg <= tmp_0_1_1_reg_1576_pp0_iter1_reg;
                tmp_0_1_2_reg_1581_pp0_iter1_reg <= tmp_0_1_2_reg_1581;
                tmp_0_1_2_reg_1581_pp0_iter2_reg <= tmp_0_1_2_reg_1581_pp0_iter1_reg;
                tmp_0_1_2_reg_1581_pp0_iter3_reg <= tmp_0_1_2_reg_1581_pp0_iter2_reg;
                tmp_1_1_1_reg_1591_pp0_iter1_reg <= tmp_1_1_1_reg_1591;
                tmp_1_1_1_reg_1591_pp0_iter2_reg <= tmp_1_1_1_reg_1591_pp0_iter1_reg;
                tmp_1_1_2_reg_1596_pp0_iter1_reg <= tmp_1_1_2_reg_1596;
                tmp_1_1_2_reg_1596_pp0_iter2_reg <= tmp_1_1_2_reg_1596_pp0_iter1_reg;
                tmp_1_1_2_reg_1596_pp0_iter3_reg <= tmp_1_1_2_reg_1596_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then
                tmp_0_2_1_reg_1616 <= grp_fu_475_p2;
                tmp_0_2_reg_1611 <= grp_fu_469_p2;
                tmp_1_2_1_reg_1626 <= grp_fu_487_p2;
                tmp_1_2_reg_1621 <= grp_fu_481_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln8_reg_1277_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_0_2_2_reg_1636 <= grp_fu_469_p2;
                tmp_1_2_2_reg_1646 <= grp_fu_475_p2;
                w_sum_4_1_reg_1641 <= grp_fu_456_p2;
                w_sum_4_reg_1631 <= grp_fu_451_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_0_2_2_reg_1636_pp0_iter2_reg <= tmp_0_2_2_reg_1636;
                tmp_0_2_2_reg_1636_pp0_iter3_reg <= tmp_0_2_2_reg_1636_pp0_iter2_reg;
                tmp_0_2_2_reg_1636_pp0_iter4_reg <= tmp_0_2_2_reg_1636_pp0_iter3_reg;
                tmp_0_2_2_reg_1636_pp0_iter5_reg <= tmp_0_2_2_reg_1636_pp0_iter4_reg;
                tmp_0_2_2_reg_1636_pp0_iter6_reg <= tmp_0_2_2_reg_1636_pp0_iter5_reg;
                tmp_1_2_2_reg_1646_pp0_iter2_reg <= tmp_1_2_2_reg_1646;
                tmp_1_2_2_reg_1646_pp0_iter3_reg <= tmp_1_2_2_reg_1646_pp0_iter2_reg;
                tmp_1_2_2_reg_1646_pp0_iter4_reg <= tmp_1_2_2_reg_1646_pp0_iter3_reg;
                tmp_1_2_2_reg_1646_pp0_iter5_reg <= tmp_1_2_2_reg_1646_pp0_iter4_reg;
                tmp_1_2_2_reg_1646_pp0_iter6_reg <= tmp_1_2_2_reg_1646_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277_pp0_iter8_reg = ap_const_lv1_0))) then
                w_sum_1_reg_1746 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277_pp0_iter1_reg = ap_const_lv1_0))) then
                w_sum_4_0_0_1_reg_1651 <= grp_fu_451_p2;
                w_sum_4_1_0_1_reg_1656 <= grp_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1277_pp0_iter2_reg = ap_const_lv1_0))) then
                w_sum_4_0_0_2_reg_1661 <= grp_fu_451_p2;
                w_sum_4_1_0_2_reg_1666 <= grp_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1277_pp0_iter4_reg = ap_const_lv1_0))) then
                w_sum_4_0_1_1_reg_1681 <= grp_fu_451_p2;
                w_sum_4_1_1_1_reg_1686 <= grp_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (icmp_ln8_reg_1277_pp0_iter5_reg = ap_const_lv1_0))) then
                w_sum_4_0_1_2_reg_1691 <= grp_fu_461_p2;
                w_sum_4_1_1_2_reg_1696 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277_pp0_iter3_reg = ap_const_lv1_0))) then
                w_sum_4_0_1_reg_1671 <= grp_fu_451_p2;
                w_sum_4_1_1_reg_1676 <= grp_fu_456_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1277_pp0_iter6_reg = ap_const_lv1_0))) then
                w_sum_4_0_2_1_reg_1711 <= grp_fu_461_p2;
                w_sum_4_1_2_1_reg_1716 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1277_pp0_iter5_reg = ap_const_lv1_0))) then
                w_sum_4_0_2_reg_1701 <= grp_fu_461_p2;
                w_sum_4_1_2_reg_1706 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277_pp0_iter7_reg = ap_const_lv1_0))) then
                w_sum_4_1_2_2_reg_1741 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    sub_ln23_reg_1299(1 downto 0) <= "00";
    zext_ln30_2_reg_1320(10 downto 5) <= "000000";
    zext_ln30_4_reg_1331(10 downto 5) <= "000000";
    zext_ln23_reg_1347(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter2_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter3_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter4_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter5_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_reg_1347_pp0_iter6_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    or_ln14_reg_1362(0) <= '1';
    or_ln14_reg_1362_pp0_iter1_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter2_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter3_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter4_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter5_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter6_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter7_reg(0) <= '1';
    or_ln14_reg_1362_pp0_iter8_reg(0) <= '1';
    zext_ln23_5_reg_1371(0) <= '1';
    zext_ln23_5_reg_1371(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter1_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter1_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter2_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter2_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter3_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter3_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter4_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter4_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter5_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter5_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter6_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter6_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    zext_ln23_5_reg_1371_pp0_iter7_reg(0) <= '1';
    zext_ln23_5_reg_1371_pp0_iter7_reg(63 downto 3) <= "0000000000000000000000000000000000000000000000000000000000000";
    sub_ln23_1_reg_1386(1 downto 0) <= "00";
    zext_ln30_5_reg_1403(10 downto 5) <= "000000";
    zext_ln23_16_reg_1464(5 downto 3) <= "000";
    zext_ln23_26_reg_1490(0) <= '1';
    zext_ln23_26_reg_1490(5 downto 3) <= "000";
    add_ln30_3_reg_1753(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, icmp_ln8_fu_557_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln8_fu_557_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln8_fu_557_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln11_fu_915_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(indvar_flatten_reg_417));
    add_ln14_fu_1094_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) + unsigned(select_ln30_6_reg_1304));
    add_ln23_10_fu_963_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_943_p2) + unsigned(zext_ln30_4_reg_1331));
    add_ln23_11_fu_727_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(select_ln30_fu_575_p3));
    add_ln23_12_fu_855_p2 <= std_logic_vector(unsigned(sub_ln23_reg_1299) + unsigned(zext_ln30_5_fu_852_p1));
    add_ln23_13_fu_968_p2 <= std_logic_vector(unsigned(sub_ln23_1_reg_1386) + unsigned(zext_ln30_5_reg_1403));
    add_ln23_14_fu_977_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_943_p2) + unsigned(zext_ln30_5_reg_1403));
    add_ln23_15_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln23_18_fu_746_p1));
    add_ln23_16_fu_868_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(zext_ln23_17_fu_865_p1));
    add_ln23_17_fu_879_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln23_17_fu_865_p1));
    add_ln23_18_fu_993_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(zext_ln23_16_fu_982_p1));
    add_ln23_19_fu_1034_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(zext_ln23_16_reg_1464));
    add_ln23_1_fu_551_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_0_phi_fu_433_p4) + unsigned(ap_const_lv5_2));
    add_ln23_20_fu_1044_p2 <= std_logic_vector(signed(ap_const_lv6_2A) + signed(zext_ln23_16_reg_1464));
    add_ln23_21_fu_776_p2 <= std_logic_vector(unsigned(ap_const_lv4_6) + unsigned(zext_ln23_28_fu_772_p1));
    add_ln23_22_fu_893_p2 <= std_logic_vector(unsigned(ap_const_lv5_C) + unsigned(zext_ln23_27_fu_890_p1));
    add_ln23_23_fu_904_p2 <= std_logic_vector(signed(ap_const_lv5_12) + signed(zext_ln23_27_fu_890_p1));
    add_ln23_24_fu_1015_p2 <= std_logic_vector(unsigned(ap_const_lv6_1E) + unsigned(zext_ln23_26_fu_1004_p1));
    add_ln23_25_fu_1054_p2 <= std_logic_vector(signed(ap_const_lv6_24) + signed(zext_ln23_26_reg_1490));
    add_ln23_26_fu_1064_p2 <= std_logic_vector(signed(ap_const_lv6_2A) + signed(zext_ln23_26_reg_1490));
    add_ln23_3_fu_655_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln30_fu_575_p3));
    add_ln23_4_fu_687_p2 <= std_logic_vector(unsigned(sub_ln23_fu_615_p2) + unsigned(zext_ln30_2_fu_683_p1));
    add_ln23_5_fu_842_p2 <= std_logic_vector(unsigned(sub_ln23_1_fu_823_p2) + unsigned(zext_ln30_2_reg_1320));
    add_ln23_6_fu_949_p2 <= std_logic_vector(unsigned(sub_ln23_2_fu_943_p2) + unsigned(zext_ln30_2_reg_1320));
    add_ln23_7_fu_698_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(select_ln30_fu_575_p3));
    add_ln23_8_fu_716_p2 <= std_logic_vector(unsigned(sub_ln23_fu_615_p2) + unsigned(zext_ln30_4_fu_712_p1));
    add_ln23_9_fu_954_p2 <= std_logic_vector(unsigned(sub_ln23_1_reg_1386) + unsigned(zext_ln30_4_reg_1331));
    add_ln23_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv5_2) + unsigned(r_0_reg_405));
    add_ln30_2_fu_1138_p2 <= std_logic_vector(unsigned(sub_ln30_fu_1129_p2) + unsigned(zext_ln23_15_fu_1135_p1));
    add_ln30_3_fu_1203_p2 <= std_logic_vector(unsigned(sub_ln30_fu_1129_p2) + unsigned(zext_ln23_25_fu_1200_p1));
    add_ln30_fu_836_p2 <= std_logic_vector(unsigned(r_0_reg_405) + unsigned(select_ln30_3_fu_829_p3));
    add_ln8_fu_563_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten30_phi_fu_398_p4) + unsigned(ap_const_lv11_1));
    and_ln29_3_fu_1248_p2 <= (or_ln29_3_fu_1242_p2 and grp_fu_494_p2);
    and_ln29_fu_1185_p2 <= (or_ln29_fu_1179_p2 and grp_fu_494_p2);
    and_ln30_fu_649_p2 <= (xor_ln30_fu_637_p2 and icmp_ln14_fu_643_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state47 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln8_fu_557_p2)
    begin
        if ((icmp_ln8_fu_557_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_433_p4_assign_proc : process(c_0_reg_429, icmp_ln8_reg_1277, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln30_7_reg_1314, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
            ap_phi_mux_c_0_phi_fu_433_p4 <= select_ln30_7_reg_1314;
        else 
            ap_phi_mux_c_0_phi_fu_433_p4 <= c_0_reg_429;
        end if; 
    end process;


    ap_phi_mux_f_0_0_phi_fu_444_p4_assign_proc : process(f_0_0_reg_440, icmp_ln8_reg_1277, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln14_reg_1601, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
            ap_phi_mux_f_0_0_phi_fu_444_p4 <= add_ln14_reg_1601;
        else 
            ap_phi_mux_f_0_0_phi_fu_444_p4 <= f_0_0_reg_440;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten30_phi_fu_398_p4_assign_proc : process(indvar_flatten30_reg_394, icmp_ln8_reg_1277, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, add_ln8_reg_1281, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten30_phi_fu_398_p4 <= add_ln8_reg_1281;
        else 
            ap_phi_mux_indvar_flatten30_phi_fu_398_p4 <= indvar_flatten30_reg_394;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_421_p4_assign_proc : process(indvar_flatten_reg_417, icmp_ln8_reg_1277, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln11_reg_1606, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_421_p4 <= select_ln11_reg_1606;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_421_p4 <= indvar_flatten_reg_417;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_409_p4_assign_proc : process(r_0_reg_405, icmp_ln8_reg_1277, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln30_1_reg_1293, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln8_reg_1277 = ap_const_lv1_0))) then 
            ap_phi_mux_r_0_phi_fu_409_p4 <= select_ln30_1_reg_1293;
        else 
            ap_phi_mux_r_0_phi_fu_409_p4 <= r_0_reg_405;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln29_3_fu_1213_p1 <= w_sum_1_reg_1746;
    bitcast_ln29_fu_1149_p1 <= reg_533;
    c_fu_545_p2 <= std_logic_vector(unsigned(ap_phi_mux_c_0_phi_fu_433_p4) + unsigned(ap_const_lv5_1));

    conv_1_bias_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, zext_ln23_reg_1347_pp0_iter6_reg, zext_ln23_5_reg_1371_pp0_iter7_reg, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter7 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_bias_address0 <= zext_ln23_5_reg_1371_pp0_iter7_reg(3 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_bias_address0 <= zext_ln23_reg_1347_pp0_iter6_reg(3 - 1 downto 0);
            else 
                conv_1_bias_address0 <= "XXX";
            end if;
        else 
            conv_1_bias_address0 <= "XXX";
        end if; 
    end process;


    conv_1_bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            conv_1_bias_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, zext_ln23_fu_741_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_20_fu_874_p1, ap_block_pp0_stage2, tmp_16_fu_985_p3, ap_block_pp0_stage3, zext_ln23_23_fu_1039_p1, ap_block_pp0_stage4, tmp_17_fu_1078_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_weights_address0 <= tmp_17_fu_1078_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address0 <= zext_ln23_23_fu_1039_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address0 <= tmp_16_fu_985_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address0 <= zext_ln23_20_fu_874_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address0 <= zext_ln23_fu_741_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address0 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address0 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_19_fu_756_p1, ap_block_pp0_stage1, zext_ln23_21_fu_885_p1, ap_block_pp0_stage2, zext_ln23_22_fu_999_p1, ap_block_pp0_stage3, zext_ln23_24_fu_1049_p1, ap_block_pp0_stage4, tmp_19_fu_1086_p3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_1_weights_address1 <= tmp_19_fu_1086_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address1 <= zext_ln23_24_fu_1049_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address1 <= zext_ln23_22_fu_999_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address1 <= zext_ln23_21_fu_885_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address1 <= zext_ln23_19_fu_756_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address1 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address1 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, zext_ln23_5_fu_767_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln23_30_fu_899_p1, ap_block_pp0_stage2, tmp_18_fu_1007_p3, ap_block_pp0_stage3, zext_ln23_33_fu_1059_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address2 <= zext_ln23_33_fu_1059_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address2 <= tmp_18_fu_1007_p3(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address2 <= zext_ln23_30_fu_899_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address2 <= zext_ln23_5_fu_767_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address2 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address2 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_address3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_29_fu_782_p1, ap_block_pp0_stage1, zext_ln23_31_fu_910_p1, ap_block_pp0_stage2, zext_ln23_32_fu_1021_p1, ap_block_pp0_stage3, zext_ln23_34_fu_1069_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_1_weights_address3 <= zext_ln23_34_fu_1069_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_1_weights_address3 <= zext_ln23_32_fu_1021_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_1_weights_address3 <= zext_ln23_31_fu_910_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_1_weights_address3 <= zext_ln23_29_fu_782_p1(6 - 1 downto 0);
            else 
                conv_1_weights_address3 <= "XXXXXX";
            end if;
        else 
            conv_1_weights_address3 <= "XXXXXX";
        end if; 
    end process;


    conv_1_weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_weights_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_weights_ce1 <= ap_const_logic_1;
        else 
            conv_1_weights_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce2_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_weights_ce2 <= ap_const_logic_1;
        else 
            conv_1_weights_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_weights_ce3_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_1_weights_ce3 <= ap_const_logic_1;
        else 
            conv_1_weights_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter8, ap_block_pp0_stage3, ap_block_pp0_stage4, zext_ln30_6_fu_1144_p1, zext_ln30_7_fu_1209_p1)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_out_address0 <= zext_ln30_7_fu_1209_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_address0 <= zext_ln30_6_fu_1144_p1(12 - 1 downto 0);
            else 
                conv_out_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            conv_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter8)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)))) then 
            conv_out_ce0 <= ap_const_logic_1;
        else 
            conv_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_d0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter8, ap_block_pp0_stage3, ap_block_pp0_stage4, select_ln29_fu_1191_p3, select_ln29_1_fu_1254_p3)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                conv_out_d0 <= select_ln29_1_fu_1254_p3;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_d0 <= select_ln29_fu_1191_p3;
            else 
                conv_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            conv_out_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter8, icmp_ln8_reg_1277_pp0_iter8_reg)
    begin
        if ((((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1277_pp0_iter8_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1277_pp0_iter8_reg = ap_const_lv1_0)))) then 
            conv_out_we0 <= ap_const_logic_1;
        else 
            conv_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1262_p0 <= ap_const_lv10_1A(6 - 1 downto 0);
    grp_fu_1262_p1 <= grp_fu_1262_p10(5 - 1 downto 0);
    grp_fu_1262_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_1_reg_1293_pp0_iter8_reg),10));
    grp_fu_1262_p2 <= grp_fu_1262_p20(5 - 1 downto 0);
    grp_fu_1262_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_7_reg_1314_pp0_iter8_reg),10));

    grp_fu_451_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_reg_1480, w_sum_4_reg_1631, w_sum_4_0_0_1_reg_1651, ap_enable_reg_pp0_iter2, w_sum_4_0_0_2_reg_1661, w_sum_4_0_1_reg_1671, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_451_p0 <= w_sum_4_0_1_reg_1671;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_451_p0 <= w_sum_4_0_0_2_reg_1661;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_451_p0 <= w_sum_4_0_0_1_reg_1651;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_451_p0 <= w_sum_4_reg_1631;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_451_p0 <= tmp_1_reg_1480;
        else 
            grp_fu_451_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_451_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_0_0_1_reg_1485, tmp_0_0_2_reg_1536_pp0_iter1_reg, tmp_0_1_reg_1541_pp0_iter2_reg, tmp_0_1_1_reg_1576_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_451_p1 <= tmp_0_1_1_reg_1576_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_451_p1 <= tmp_0_1_reg_1541_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_451_p1 <= tmp_0_0_2_reg_1536_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_451_p1 <= tmp_0_0_1_reg_1485;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_451_p1 <= ap_const_lv32_0;
        else 
            grp_fu_451_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_456_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_39_reg_1506, w_sum_4_1_reg_1641, ap_enable_reg_pp0_iter2, w_sum_4_1_0_1_reg_1656, w_sum_4_1_0_2_reg_1666, ap_enable_reg_pp0_iter3, w_sum_4_1_1_reg_1676, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_456_p0 <= w_sum_4_1_1_reg_1676;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_456_p0 <= w_sum_4_1_0_2_reg_1666;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_456_p0 <= w_sum_4_1_0_1_reg_1656;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_456_p0 <= w_sum_4_1_reg_1641;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_456_p0 <= tmp_1_39_reg_1506;
        else 
            grp_fu_456_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_456_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_1_0_1_reg_1511, tmp_1_0_2_reg_1556_pp0_iter1_reg, tmp_1_1_reg_1561_pp0_iter2_reg, tmp_1_1_1_reg_1591_pp0_iter2_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_456_p1 <= tmp_1_1_1_reg_1591_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_456_p1 <= tmp_1_1_reg_1561_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            grp_fu_456_p1 <= tmp_1_0_2_reg_1556_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_456_p1 <= tmp_1_0_1_reg_1511;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_456_p1 <= ap_const_lv32_0;
        else 
            grp_fu_456_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_461_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, reg_533, ap_enable_reg_pp0_iter7, w_sum_4_0_1_1_reg_1681, ap_enable_reg_pp0_iter4, w_sum_4_0_1_2_reg_1691, ap_enable_reg_pp0_iter5, w_sum_4_0_2_reg_1701, ap_enable_reg_pp0_iter6, w_sum_4_0_2_1_reg_1711, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_461_p0 <= reg_533;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_461_p0 <= w_sum_4_0_2_1_reg_1711;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_461_p0 <= w_sum_4_0_2_reg_1701;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_461_p0 <= w_sum_4_0_1_2_reg_1691;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_461_p0 <= w_sum_4_0_1_1_reg_1681;
        else 
            grp_fu_461_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_461_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, tmp_0_1_2_reg_1581_pp0_iter3_reg, tmp_0_2_reg_1611_pp0_iter5_reg, tmp_0_2_1_reg_1616_pp0_iter6_reg, tmp_0_2_2_reg_1636_pp0_iter6_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, conv_1_bias_load_reg_1726, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_461_p1 <= conv_1_bias_load_reg_1726;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_461_p1 <= tmp_0_2_2_reg_1636_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_461_p1 <= tmp_0_2_1_reg_1616_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_461_p1 <= tmp_0_2_reg_1611_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_461_p1 <= tmp_0_1_2_reg_1581_pp0_iter3_reg;
        else 
            grp_fu_461_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_465_p0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter4, w_sum_4_1_1_1_reg_1686, ap_enable_reg_pp0_iter5, w_sum_4_1_1_2_reg_1696, ap_enable_reg_pp0_iter6, w_sum_4_1_2_reg_1706, w_sum_4_1_2_1_reg_1716, w_sum_4_1_2_2_reg_1741, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_465_p0 <= w_sum_4_1_2_2_reg_1741;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_465_p0 <= w_sum_4_1_2_1_reg_1716;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_465_p0 <= w_sum_4_1_2_reg_1706;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_465_p0 <= w_sum_4_1_1_2_reg_1696;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_465_p0 <= w_sum_4_1_1_1_reg_1686;
        else 
            grp_fu_465_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_465_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, tmp_1_1_2_reg_1596_pp0_iter3_reg, tmp_1_2_reg_1621_pp0_iter5_reg, tmp_1_2_1_reg_1626_pp0_iter6_reg, tmp_1_2_2_reg_1646_pp0_iter6_reg, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, conv_1_bias_load_1_reg_1736, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_465_p1 <= conv_1_bias_load_1_reg_1736;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_465_p1 <= tmp_1_2_2_reg_1646_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            grp_fu_465_p1 <= tmp_1_2_1_reg_1626_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_465_p1 <= tmp_1_2_reg_1621_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_465_p1 <= tmp_1_1_2_reg_1596_pp0_iter3_reg;
        else 
            grp_fu_465_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_475_p1_assign_proc : process(input_r_q0, input_r_q1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_475_p1 <= input_r_q0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_475_p1 <= input_r_q1;
        else 
            grp_fu_475_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_494_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, grp_fu_461_p2, ap_enable_reg_pp0_iter8, w_sum_1_reg_1746, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter8 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_494_p0 <= w_sum_1_reg_1746;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_494_p0 <= grp_fu_461_p2;
            else 
                grp_fu_494_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_494_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln11_fu_569_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_421_p4 = ap_const_lv7_4E) else "0";
    icmp_ln14_fu_643_p2 <= "1" when (ap_phi_mux_f_0_0_phi_fu_444_p4 = ap_const_lv3_6) else "0";
    icmp_ln29_7_fu_1173_p2 <= "1" when (trunc_ln29_fu_1163_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_8_fu_1230_p2 <= "0" when (tmp_8_fu_1216_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_9_fu_1236_p2 <= "1" when (trunc_ln29_3_fu_1226_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_fu_1167_p2 <= "0" when (tmp_s_fu_1153_p4 = ap_const_lv8_FF) else "1";
    icmp_ln8_fu_557_p2 <= "1" when (ap_phi_mux_indvar_flatten30_phi_fu_398_p4 = ap_const_lv11_7EC) else "0";

    input_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_8_fu_693_p1, ap_block_pp0_stage1, zext_ln23_12_fu_860_p1, zext_ln23_11_fu_958_p1, ap_block_pp0_stage2, sext_ln23_fu_1026_p1, ap_block_pp0_stage3, zext_ln23_14_fu_1074_p1, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                input_r_address0 <= zext_ln23_14_fu_1074_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address0 <= sext_ln23_fu_1026_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address0 <= zext_ln23_11_fu_958_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address0 <= zext_ln23_12_fu_860_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address0 <= zext_ln23_8_fu_693_p1(10 - 1 downto 0);
            else 
                input_r_address0 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln23_10_fu_722_p1, zext_ln23_9_fu_847_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln23_13_fu_972_p1, ap_block_pp0_stage3, sext_ln23_1_fu_1030_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                input_r_address1 <= sext_ln23_1_fu_1030_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                input_r_address1 <= zext_ln23_13_fu_972_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                input_r_address1 <= zext_ln23_9_fu_847_p1(10 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                input_r_address1 <= zext_ln23_10_fu_722_p1(10 - 1 downto 0);
            else 
                input_r_address1 <= "XXXXXXXXXX";
            end if;
        else 
            input_r_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln14_fu_761_p2 <= (select_ln30_6_fu_667_p3 or ap_const_lv3_1);
    or_ln29_3_fu_1242_p2 <= (icmp_ln29_9_fu_1236_p2 or icmp_ln29_8_fu_1230_p2);
    or_ln29_fu_1179_p2 <= (icmp_ln29_fu_1167_p2 or icmp_ln29_7_fu_1173_p2);
    or_ln30_fu_661_p2 <= (icmp_ln11_fu_569_p2 or and_ln30_fu_649_p2);
    p_shl_cast_fu_1111_p3 <= (grp_fu_1262_p3 & ap_const_lv3_0);
    r_fu_539_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_0_phi_fu_409_p4) + unsigned(ap_const_lv5_1));
    select_ln11_fu_1099_p3 <= 
        ap_const_lv7_1 when (icmp_ln11_reg_1286(0) = '1') else 
        add_ln11_reg_1434;
    select_ln29_1_fu_1254_p3 <= 
        w_sum_1_reg_1746 when (and_ln29_3_fu_1248_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln29_fu_1191_p3 <= 
        reg_533 when (and_ln29_fu_1185_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln30_1_fu_583_p3 <= 
        r_fu_539_p2 when (icmp_ln11_fu_569_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_409_p4;
    select_ln30_2_fu_793_p3 <= 
        add_ln23_fu_787_p2 when (icmp_ln11_reg_1286(0) = '1') else 
        r_reg_1272;
    select_ln30_3_fu_829_p3 <= 
        ap_const_lv5_3 when (icmp_ln11_reg_1286(0) = '1') else 
        ap_const_lv5_2;
    select_ln30_4_fu_621_p3 <= 
        ap_const_lv5_1 when (icmp_ln11_fu_569_p2(0) = '1') else 
        c_fu_545_p2;
    select_ln30_5_fu_629_p3 <= 
        ap_const_lv5_2 when (icmp_ln11_fu_569_p2(0) = '1') else 
        add_ln23_1_fu_551_p2;
    select_ln30_6_fu_667_p3 <= 
        ap_const_lv3_0 when (or_ln30_fu_661_p2(0) = '1') else 
        ap_phi_mux_f_0_0_phi_fu_444_p4;
    select_ln30_7_fu_675_p3 <= 
        add_ln23_3_fu_655_p2 when (and_ln30_fu_649_p2(0) = '1') else 
        select_ln30_fu_575_p3;
    select_ln30_8_fu_704_p3 <= 
        add_ln23_7_fu_698_p2 when (and_ln30_fu_649_p2(0) = '1') else 
        select_ln30_4_fu_621_p3;
    select_ln30_9_fu_733_p3 <= 
        add_ln23_11_fu_727_p2 when (and_ln30_fu_649_p2(0) = '1') else 
        select_ln30_5_fu_629_p3;
    select_ln30_fu_575_p3 <= 
        ap_const_lv5_0 when (icmp_ln11_fu_569_p2(0) = '1') else 
        ap_phi_mux_c_0_phi_fu_433_p4;
        sext_ln23_1_fu_1030_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_10_reg_1449),64));

        sext_ln23_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln23_6_reg_1439),64));

    sub_ln23_1_fu_823_p2 <= std_logic_vector(unsigned(zext_ln23_3_fu_807_p1) - unsigned(zext_ln23_4_fu_819_p1));
    sub_ln23_2_fu_943_p2 <= std_logic_vector(unsigned(zext_ln23_6_fu_928_p1) - unsigned(zext_ln23_7_fu_939_p1));
    sub_ln23_fu_615_p2 <= std_logic_vector(unsigned(zext_ln23_1_fu_599_p1) - unsigned(zext_ln23_2_fu_611_p1));
    sub_ln30_fu_1129_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1111_p3) - unsigned(zext_ln30_3_fu_1125_p1));
    tmp_10_fu_921_p3 <= (add_ln30_reg_1392 & ap_const_lv5_0);
    tmp_11_fu_603_p3 <= (select_ln30_1_fu_583_p3 & ap_const_lv2_0);
    tmp_12_fu_799_p3 <= (select_ln30_2_fu_793_p3 & ap_const_lv5_0);
    tmp_13_fu_811_p3 <= (select_ln30_2_fu_793_p3 & ap_const_lv2_0);
    tmp_14_fu_932_p3 <= (add_ln30_reg_1392 & ap_const_lv2_0);
    tmp_15_fu_1118_p3 <= (grp_fu_1262_p3 & ap_const_lv1_0);
    tmp_16_fu_985_p3 <= (ap_const_lv61_3 & select_ln30_6_reg_1304);
    tmp_17_fu_1078_p3 <= (ap_const_lv61_6 & select_ln30_6_reg_1304);
    tmp_18_fu_1007_p3 <= (ap_const_lv61_3 & or_ln14_reg_1362);
    tmp_19_fu_1086_p3 <= (ap_const_lv61_6 & or_ln14_reg_1362);
    tmp_8_fu_1216_p4 <= bitcast_ln29_3_fu_1213_p1(30 downto 23);
    tmp_fu_591_p3 <= (select_ln30_1_fu_583_p3 & ap_const_lv5_0);
    tmp_s_fu_1153_p4 <= bitcast_ln29_fu_1149_p1(30 downto 23);
    trunc_ln29_3_fu_1226_p1 <= bitcast_ln29_3_fu_1213_p1(23 - 1 downto 0);
    trunc_ln29_fu_1163_p1 <= bitcast_ln29_fu_1149_p1(23 - 1 downto 0);
    xor_ln30_fu_637_p2 <= (icmp_ln11_fu_569_p2 xor ap_const_lv1_1);
    zext_ln23_10_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_8_fu_716_p2),64));
    zext_ln23_11_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_9_fu_954_p2),64));
    zext_ln23_12_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_12_fu_855_p2),64));
    zext_ln23_13_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_13_fu_968_p2),64));
    zext_ln23_14_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_14_reg_1459),64));
    zext_ln23_15_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1304_pp0_iter8_reg),13));
    zext_ln23_16_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1304),6));
    zext_ln23_17_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_reg_1304),5));
    zext_ln23_18_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_fu_667_p3),4));
    zext_ln23_19_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_15_fu_750_p2),64));
    zext_ln23_1_fu_599_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_591_p3),11));
    zext_ln23_20_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_16_fu_868_p2),64));
    zext_ln23_21_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_17_fu_879_p2),64));
    zext_ln23_22_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_18_fu_993_p2),64));
    zext_ln23_23_fu_1039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_19_fu_1034_p2),64));
    zext_ln23_24_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_20_fu_1044_p2),64));
    zext_ln23_25_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_reg_1362_pp0_iter8_reg),13));
    zext_ln23_26_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_reg_1362),6));
    zext_ln23_27_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_reg_1362),5));
    zext_ln23_28_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_fu_761_p2),4));
    zext_ln23_29_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_21_fu_776_p2),64));
    zext_ln23_2_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_603_p3),11));
    zext_ln23_30_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_22_fu_893_p2),64));
    zext_ln23_31_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_23_fu_904_p2),64));
    zext_ln23_32_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_24_fu_1015_p2),64));
    zext_ln23_33_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_25_fu_1054_p2),64));
    zext_ln23_34_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_26_fu_1064_p2),64));
    zext_ln23_3_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_799_p3),11));
    zext_ln23_4_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_811_p3),11));
    zext_ln23_5_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_fu_761_p2),64));
    zext_ln23_6_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_921_p3),11));
    zext_ln23_7_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_932_p3),11));
    zext_ln23_8_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_4_fu_687_p2),64));
    zext_ln23_9_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln23_5_fu_842_p2),64));
    zext_ln23_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_6_fu_667_p3),64));
    zext_ln30_2_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_7_fu_675_p3),11));
    zext_ln30_3_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1118_p3),13));
    zext_ln30_4_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_8_fu_704_p3),11));
    zext_ln30_5_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln30_9_reg_1342),11));
    zext_ln30_6_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_2_fu_1138_p2),64));
    zext_ln30_7_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln30_3_reg_1753),64));
end behav;
