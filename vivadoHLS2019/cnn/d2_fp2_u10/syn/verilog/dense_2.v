// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dense_2_out_address0,
        dense_2_out_ce0,
        dense_2_out_we0,
        dense_2_out_d0,
        dense_1_out_address0,
        dense_1_out_ce0,
        dense_1_out_q0,
        dense_1_out_address1,
        dense_1_out_ce1,
        dense_1_out_q1
);

parameter    ap_ST_fsm_state1 = 48'd1;
parameter    ap_ST_fsm_state2 = 48'd2;
parameter    ap_ST_fsm_pp0_stage0 = 48'd4;
parameter    ap_ST_fsm_pp0_stage1 = 48'd8;
parameter    ap_ST_fsm_pp0_stage2 = 48'd16;
parameter    ap_ST_fsm_pp0_stage3 = 48'd32;
parameter    ap_ST_fsm_pp0_stage4 = 48'd64;
parameter    ap_ST_fsm_pp0_stage5 = 48'd128;
parameter    ap_ST_fsm_pp0_stage6 = 48'd256;
parameter    ap_ST_fsm_pp0_stage7 = 48'd512;
parameter    ap_ST_fsm_pp0_stage8 = 48'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 48'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 48'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 48'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 48'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 48'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 48'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 48'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 48'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 48'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 48'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 48'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 48'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 48'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 48'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 48'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 48'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 48'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 48'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 48'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 48'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 48'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 48'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 48'd8589934592;
parameter    ap_ST_fsm_pp0_stage32 = 48'd17179869184;
parameter    ap_ST_fsm_pp0_stage33 = 48'd34359738368;
parameter    ap_ST_fsm_pp0_stage34 = 48'd68719476736;
parameter    ap_ST_fsm_pp0_stage35 = 48'd137438953472;
parameter    ap_ST_fsm_pp0_stage36 = 48'd274877906944;
parameter    ap_ST_fsm_pp0_stage37 = 48'd549755813888;
parameter    ap_ST_fsm_pp0_stage38 = 48'd1099511627776;
parameter    ap_ST_fsm_pp0_stage39 = 48'd2199023255552;
parameter    ap_ST_fsm_state46 = 48'd4398046511104;
parameter    ap_ST_fsm_state47 = 48'd8796093022208;
parameter    ap_ST_fsm_state48 = 48'd17592186044416;
parameter    ap_ST_fsm_state49 = 48'd35184372088832;
parameter    ap_ST_fsm_state50 = 48'd70368744177664;
parameter    ap_ST_fsm_state51 = 48'd140737488355328;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] dense_2_out_address0;
output   dense_2_out_ce0;
output   dense_2_out_we0;
output  [31:0] dense_2_out_d0;
output  [5:0] dense_1_out_address0;
output   dense_1_out_ce0;
input  [31:0] dense_1_out_q0;
output  [5:0] dense_1_out_address1;
output   dense_1_out_ce1;
input  [31:0] dense_1_out_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dense_2_out_ce0;
reg dense_2_out_we0;
reg[5:0] dense_1_out_address0;
reg dense_1_out_ce0;
reg[5:0] dense_1_out_address1;
reg dense_1_out_ce1;

(* fsm_encoding = "none" *) reg   [47:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] dense_2_weights_address0;
reg    dense_2_weights_ce0;
wire   [31:0] dense_2_weights_q0;
wire   [4:0] dense_2_bias_address0;
reg    dense_2_bias_ce0;
wire   [31:0] dense_2_bias_q0;
reg   [31:0] sum_0_0_reg_295;
reg   [5:0] j_0_0_reg_307;
reg   [31:0] reg_337;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state44_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln13_reg_972;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state45_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] reg_347;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] reg_353;
reg   [31:0] reg_358;
reg   [31:0] reg_364;
wire   [31:0] grp_fu_319_p2;
reg   [31:0] reg_369;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state21_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state25_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state29_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state33_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state37_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state41_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln9_fu_375_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_381_p2;
reg   [4:0] i_reg_947;
wire   [63:0] zext_ln14_fu_387_p1;
reg   [63:0] zext_ln14_reg_952;
wire   [11:0] zext_ln13_fu_391_p1;
reg   [11:0] zext_ln13_reg_958;
wire   [0:0] icmp_ln13_fu_395_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state43_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln13_reg_972_pp0_iter1_reg;
wire   [5:0] or_ln13_fu_446_p2;
reg   [5:0] or_ln13_reg_986;
wire   [5:0] add_ln13_fu_495_p2;
reg   [5:0] add_ln13_reg_1002;
wire   [5:0] add_ln13_1_fu_506_p2;
reg   [5:0] add_ln13_1_reg_1013;
wire   [5:0] add_ln13_2_fu_555_p2;
reg   [5:0] add_ln13_2_reg_1029;
wire   [5:0] add_ln13_3_fu_566_p2;
reg   [5:0] add_ln13_3_reg_1040;
reg   [31:0] dense_1_out_load_5_reg_1056;
wire   [5:0] add_ln13_4_fu_615_p2;
reg   [5:0] add_ln13_4_reg_1061;
wire   [5:0] add_ln13_5_fu_626_p2;
reg   [5:0] add_ln13_5_reg_1072;
reg   [31:0] tmp_7_2_reg_1083;
reg   [31:0] dense_1_out_load_7_reg_1093;
wire   [5:0] add_ln13_6_fu_675_p2;
reg   [5:0] add_ln13_6_reg_1098;
wire   [5:0] add_ln13_7_fu_686_p2;
reg   [5:0] add_ln13_7_reg_1109;
reg   [31:0] tmp_7_3_reg_1120;
reg   [31:0] dense_1_out_load_9_reg_1130;
reg   [31:0] tmp_7_5_reg_1140;
reg   [31:0] tmp_7_6_reg_1150;
wire   [11:0] add_ln14_11_fu_877_p2;
reg   [11:0] add_ln14_11_reg_1160;
reg   [31:0] tmp_7_7_reg_1165;
reg   [31:0] tmp_7_9_reg_1175;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [5:0] add_ln13_8_fu_886_p2;
reg   [5:0] add_ln13_8_reg_1180;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_state42_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_11001;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [4:0] i_0_reg_284;
wire    ap_CS_fsm_state51;
wire   [31:0] ap_phi_mux_sum_0_0_phi_fu_299_p4;
reg   [5:0] ap_phi_mux_j_0_0_phi_fu_311_p4;
wire    ap_block_pp0_stage0;
wire  signed [63:0] sext_ln14_fu_441_p1;
wire   [63:0] zext_ln14_4_fu_401_p1;
wire   [63:0] zext_ln14_5_fu_452_p1;
wire  signed [63:0] sext_ln14_1_fu_490_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln14_6_fu_501_p1;
wire   [63:0] zext_ln14_7_fu_512_p1;
wire  signed [63:0] sext_ln14_2_fu_550_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln14_8_fu_561_p1;
wire   [63:0] zext_ln14_9_fu_572_p1;
wire  signed [63:0] sext_ln14_3_fu_610_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln14_10_fu_621_p1;
wire   [63:0] zext_ln14_11_fu_632_p1;
wire  signed [63:0] sext_ln14_4_fu_670_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln14_12_fu_681_p1;
wire   [63:0] zext_ln14_13_fu_692_p1;
wire  signed [63:0] sext_ln14_5_fu_730_p1;
wire    ap_block_pp0_stage5;
wire  signed [63:0] sext_ln14_6_fu_768_p1;
wire    ap_block_pp0_stage6;
wire  signed [63:0] sext_ln14_7_fu_806_p1;
wire    ap_block_pp0_stage7;
wire  signed [63:0] sext_ln14_8_fu_844_p1;
wire    ap_block_pp0_stage8;
wire  signed [63:0] sext_ln14_9_fu_882_p1;
wire    ap_block_pp0_stage9;
reg   [31:0] grp_fu_319_p0;
reg   [31:0] grp_fu_319_p1;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire    ap_block_pp0_stage39;
reg   [31:0] grp_fu_325_p0;
wire    ap_block_pp0_stage10;
wire   [10:0] tmp_4_fu_406_p3;
wire   [6:0] tmp_5_fu_418_p3;
wire   [11:0] zext_ln14_14_fu_414_p1;
wire   [11:0] zext_ln14_15_fu_426_p1;
wire   [11:0] sub_ln14_fu_430_p2;
wire   [11:0] add_ln14_fu_436_p2;
wire   [10:0] tmp_6_fu_457_p3;
wire   [6:0] tmp_8_fu_468_p3;
wire   [11:0] zext_ln14_16_fu_464_p1;
wire   [11:0] zext_ln14_17_fu_475_p1;
wire   [11:0] sub_ln14_1_fu_479_p2;
wire   [11:0] add_ln14_3_fu_485_p2;
wire   [10:0] tmp_9_fu_517_p3;
wire   [6:0] tmp_10_fu_528_p3;
wire   [11:0] zext_ln14_18_fu_524_p1;
wire   [11:0] zext_ln14_19_fu_535_p1;
wire   [11:0] sub_ln14_2_fu_539_p2;
wire   [11:0] add_ln14_4_fu_545_p2;
wire   [10:0] tmp_11_fu_577_p3;
wire   [6:0] tmp_12_fu_588_p3;
wire   [11:0] zext_ln14_20_fu_584_p1;
wire   [11:0] zext_ln14_21_fu_595_p1;
wire   [11:0] sub_ln14_3_fu_599_p2;
wire   [11:0] add_ln14_5_fu_605_p2;
wire   [10:0] tmp_13_fu_637_p3;
wire   [6:0] tmp_14_fu_648_p3;
wire   [11:0] zext_ln14_22_fu_644_p1;
wire   [11:0] zext_ln14_23_fu_655_p1;
wire   [11:0] sub_ln14_4_fu_659_p2;
wire   [11:0] add_ln14_6_fu_665_p2;
wire   [10:0] tmp_15_fu_697_p3;
wire   [6:0] tmp_16_fu_708_p3;
wire   [11:0] zext_ln14_24_fu_704_p1;
wire   [11:0] zext_ln14_25_fu_715_p1;
wire   [11:0] sub_ln14_5_fu_719_p2;
wire   [11:0] add_ln14_7_fu_725_p2;
wire   [10:0] tmp_17_fu_735_p3;
wire   [6:0] tmp_18_fu_746_p3;
wire   [11:0] zext_ln14_26_fu_742_p1;
wire   [11:0] zext_ln14_27_fu_753_p1;
wire   [11:0] sub_ln14_6_fu_757_p2;
wire   [11:0] add_ln14_8_fu_763_p2;
wire   [10:0] tmp_19_fu_773_p3;
wire   [6:0] tmp_20_fu_784_p3;
wire   [11:0] zext_ln14_28_fu_780_p1;
wire   [11:0] zext_ln14_29_fu_791_p1;
wire   [11:0] sub_ln14_7_fu_795_p2;
wire   [11:0] add_ln14_9_fu_801_p2;
wire   [10:0] tmp_21_fu_811_p3;
wire   [6:0] tmp_22_fu_822_p3;
wire   [11:0] zext_ln14_30_fu_818_p1;
wire   [11:0] zext_ln14_31_fu_829_p1;
wire   [11:0] sub_ln14_8_fu_833_p2;
wire   [11:0] add_ln14_10_fu_839_p2;
wire   [10:0] tmp_23_fu_849_p3;
wire   [6:0] tmp_24_fu_860_p3;
wire   [11:0] zext_ln14_32_fu_856_p1;
wire   [11:0] zext_ln14_33_fu_867_p1;
wire   [11:0] sub_ln14_9_fu_871_p2;
wire   [31:0] bitcast_ln19_fu_892_p1;
wire   [7:0] tmp_2_fu_896_p4;
wire   [22:0] trunc_ln19_fu_906_p1;
wire   [0:0] icmp_ln19_1_fu_916_p2;
wire   [0:0] icmp_ln19_fu_910_p2;
wire   [0:0] or_ln19_fu_922_p2;
wire   [0:0] grp_fu_331_p2;
wire   [0:0] and_ln19_fu_928_p2;
reg   [47:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state18_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state19_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state20_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state22_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state23_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state24_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state26_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_state27_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state28_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state30_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state31_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state32_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state34_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_state35_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_state36_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state38_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_state39_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_state40_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage38_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 48'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

dense_2_dense_2_wibs #(
    .DataWidth( 32 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_weights_address0),
    .ce0(dense_2_weights_ce0),
    .q0(dense_2_weights_q0)
);

dense_2_dense_2_bjbC #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_2_bias_address0),
    .ce0(dense_2_bias_ce0),
    .q0(dense_2_bias_q0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_319_p0),
    .din1(grp_fu_319_p1),
    .ce(1'b1),
    .dout(grp_fu_319_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_325_p0),
    .din1(dense_2_weights_q0),
    .ce(1'b1),
    .dout(grp_fu_325_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_319_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_331_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_375_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage39_subdone) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_375_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_0_reg_284 <= i_reg_947;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_284 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_972 == 1'd0))) begin
        j_0_0_reg_307 <= add_ln13_8_reg_1180;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_375_p2 == 1'd0))) begin
        j_0_0_reg_307 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_347 <= dense_1_out_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_347 <= dense_1_out_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_358 <= dense_1_out_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_358 <= dense_1_out_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln13_reg_972_pp0_iter1_reg == 1'd0))) begin
        sum_0_0_reg_295 <= grp_fu_319_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_375_p2 == 1'd0))) begin
        sum_0_0_reg_295 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln13_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln13_1_reg_1013 <= add_ln13_1_fu_506_p2;
        add_ln13_reg_1002 <= add_ln13_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        add_ln13_2_reg_1029 <= add_ln13_2_fu_555_p2;
        add_ln13_3_reg_1040 <= add_ln13_3_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        add_ln13_4_reg_1061 <= add_ln13_4_fu_615_p2;
        add_ln13_5_reg_1072 <= add_ln13_5_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        add_ln13_6_reg_1098 <= add_ln13_6_fu_675_p2;
        add_ln13_7_reg_1109 <= add_ln13_7_fu_686_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        add_ln13_8_reg_1180 <= add_ln13_8_fu_886_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln13_reg_972 == 1'd0))) begin
        add_ln14_11_reg_1160 <= add_ln14_11_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        dense_1_out_load_5_reg_1056 <= dense_1_out_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        dense_1_out_load_7_reg_1093 <= dense_1_out_q1;
        tmp_7_2_reg_1083 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        dense_1_out_load_9_reg_1130 <= dense_1_out_q1;
        tmp_7_3_reg_1120 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_947 <= i_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_972 <= icmp_ln13_fu_395_p2;
        icmp_ln13_reg_972_pp0_iter1_reg <= icmp_ln13_reg_972;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_fu_395_p2 == 1'd0))) begin
        or_ln13_reg_986[5 : 1] <= or_ln13_fu_446_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln13_reg_972 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln13_reg_972 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_337 <= dense_1_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln13_reg_972 == 1'd0)))) begin
        reg_353 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln13_reg_972 == 1'd0)))) begin
        reg_364 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((1'b0 == ap_block_pp0_stage38_11001) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage34_11001) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln13_reg_972 == 1'd0)))) begin
        reg_369 <= grp_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln13_reg_972 == 1'd0))) begin
        tmp_7_5_reg_1140 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        tmp_7_6_reg_1150 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        tmp_7_7_reg_1165 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_reg_972 == 1'd0))) begin
        tmp_7_9_reg_1175 <= grp_fu_325_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln9_fu_375_p2 == 1'd0))) begin
        zext_ln13_reg_958[4 : 0] <= zext_ln13_fu_391_p1[4 : 0];
        zext_ln14_reg_952[4 : 0] <= zext_ln14_fu_387_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln13_fu_395_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln9_fu_375_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_972 == 1'd0))) begin
        ap_phi_mux_j_0_0_phi_fu_311_p4 = add_ln13_8_reg_1180;
    end else begin
        ap_phi_mux_j_0_0_phi_fu_311_p4 = j_0_0_reg_307;
    end
end

always @ (*) begin
    if (((icmp_ln9_fu_375_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_1_out_address0 = zext_ln14_12_fu_681_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_1_out_address0 = zext_ln14_10_fu_621_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_1_out_address0 = zext_ln14_8_fu_561_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_1_out_address0 = zext_ln14_6_fu_501_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_1_out_address0 = zext_ln14_4_fu_401_p1;
        end else begin
            dense_1_out_address0 = 'bx;
        end
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_1_out_address1 = zext_ln14_13_fu_692_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_1_out_address1 = zext_ln14_11_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_1_out_address1 = zext_ln14_9_fu_572_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_1_out_address1 = zext_ln14_7_fu_512_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_1_out_address1 = zext_ln14_5_fu_452_p1;
        end else begin
            dense_1_out_address1 = 'bx;
        end
    end else begin
        dense_1_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_1_out_ce0 = 1'b1;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_1_out_ce1 = 1'b1;
    end else begin
        dense_1_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        dense_2_bias_ce0 = 1'b1;
    end else begin
        dense_2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        dense_2_out_ce0 = 1'b1;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        dense_2_out_we0 = 1'b1;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            dense_2_weights_address0 = sext_ln14_9_fu_882_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            dense_2_weights_address0 = sext_ln14_8_fu_844_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            dense_2_weights_address0 = sext_ln14_7_fu_806_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            dense_2_weights_address0 = sext_ln14_6_fu_768_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            dense_2_weights_address0 = sext_ln14_5_fu_730_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_2_weights_address0 = sext_ln14_4_fu_670_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_2_weights_address0 = sext_ln14_3_fu_610_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_2_weights_address0 = sext_ln14_2_fu_550_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_2_weights_address0 = sext_ln14_1_fu_490_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_2_weights_address0 = sext_ln14_fu_441_p1;
        end else begin
            dense_2_weights_address0 = 'bx;
        end
    end else begin
        dense_2_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_2_weights_ce0 = 1'b1;
    end else begin
        dense_2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_319_p0 = sum_0_0_reg_295;
    end else if ((((1'b0 == ap_block_pp0_stage35) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage39) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_319_p0 = reg_369;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p0 = ap_phi_mux_sum_0_0_phi_fu_299_p4;
    end else begin
        grp_fu_319_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_319_p1 = dense_2_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage39) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_9_reg_1175;
    end else if (((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_7_reg_1165;
    end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_6_reg_1150;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_5_reg_1140;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_3_reg_1120;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_319_p1 = tmp_7_2_reg_1083;
    end else if ((((1'b0 == ap_block_pp0_stage35) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_319_p1 = reg_364;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_319_p1 = reg_353;
    end else begin
        grp_fu_319_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_325_p0 = dense_1_out_load_9_reg_1130;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_325_p0 = dense_1_out_load_7_reg_1093;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_325_p0 = dense_1_out_load_5_reg_1056;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_325_p0 = reg_358;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_325_p0 = reg_337;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_325_p0 = reg_347;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_325_p0 = dense_1_out_q0;
    end else begin
        grp_fu_325_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln9_fu_375_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln13_fu_395_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln13_fu_395_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_1_fu_506_p2 = (j_0_0_reg_307 + 6'd3);

assign add_ln13_2_fu_555_p2 = (j_0_0_reg_307 + 6'd4);

assign add_ln13_3_fu_566_p2 = (j_0_0_reg_307 + 6'd5);

assign add_ln13_4_fu_615_p2 = (j_0_0_reg_307 + 6'd6);

assign add_ln13_5_fu_626_p2 = (j_0_0_reg_307 + 6'd7);

assign add_ln13_6_fu_675_p2 = (j_0_0_reg_307 + 6'd8);

assign add_ln13_7_fu_686_p2 = (j_0_0_reg_307 + 6'd9);

assign add_ln13_8_fu_886_p2 = (j_0_0_reg_307 + 6'd10);

assign add_ln13_fu_495_p2 = (j_0_0_reg_307 + 6'd2);

assign add_ln14_10_fu_839_p2 = (sub_ln14_8_fu_833_p2 + zext_ln13_reg_958);

assign add_ln14_11_fu_877_p2 = (sub_ln14_9_fu_871_p2 + zext_ln13_reg_958);

assign add_ln14_3_fu_485_p2 = (sub_ln14_1_fu_479_p2 + zext_ln13_reg_958);

assign add_ln14_4_fu_545_p2 = (sub_ln14_2_fu_539_p2 + zext_ln13_reg_958);

assign add_ln14_5_fu_605_p2 = (sub_ln14_3_fu_599_p2 + zext_ln13_reg_958);

assign add_ln14_6_fu_665_p2 = (sub_ln14_4_fu_659_p2 + zext_ln13_reg_958);

assign add_ln14_7_fu_725_p2 = (sub_ln14_5_fu_719_p2 + zext_ln13_reg_958);

assign add_ln14_8_fu_763_p2 = (sub_ln14_6_fu_757_p2 + zext_ln13_reg_958);

assign add_ln14_9_fu_801_p2 = (sub_ln14_7_fu_795_p2 + zext_ln13_reg_958);

assign add_ln14_fu_436_p2 = (sub_ln14_fu_430_p2 + zext_ln13_reg_958);

assign and_ln19_fu_928_p2 = (or_ln19_fu_922_p2 & grp_fu_331_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd47];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_sum_0_0_phi_fu_299_p4 = sum_0_0_reg_295;

assign bitcast_ln19_fu_892_p1 = reg_369;

assign dense_2_bias_address0 = zext_ln14_reg_952;

assign dense_2_out_address0 = zext_ln14_reg_952;

assign dense_2_out_d0 = ((and_ln19_fu_928_p2[0:0] === 1'b1) ? 32'd0 : reg_369);

assign i_fu_381_p2 = (i_0_reg_284 + 5'd1);

assign icmp_ln13_fu_395_p2 = ((ap_phi_mux_j_0_0_phi_fu_311_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_916_p2 = ((trunc_ln19_fu_906_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_910_p2 = ((tmp_2_fu_896_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_375_p2 = ((i_0_reg_284 == 5'd30) ? 1'b1 : 1'b0);

assign or_ln13_fu_446_p2 = (ap_phi_mux_j_0_0_phi_fu_311_p4 | 6'd1);

assign or_ln19_fu_922_p2 = (icmp_ln19_fu_910_p2 | icmp_ln19_1_fu_916_p2);

assign sext_ln14_1_fu_490_p1 = $signed(add_ln14_3_fu_485_p2);

assign sext_ln14_2_fu_550_p1 = $signed(add_ln14_4_fu_545_p2);

assign sext_ln14_3_fu_610_p1 = $signed(add_ln14_5_fu_605_p2);

assign sext_ln14_4_fu_670_p1 = $signed(add_ln14_6_fu_665_p2);

assign sext_ln14_5_fu_730_p1 = $signed(add_ln14_7_fu_725_p2);

assign sext_ln14_6_fu_768_p1 = $signed(add_ln14_8_fu_763_p2);

assign sext_ln14_7_fu_806_p1 = $signed(add_ln14_9_fu_801_p2);

assign sext_ln14_8_fu_844_p1 = $signed(add_ln14_10_fu_839_p2);

assign sext_ln14_9_fu_882_p1 = $signed(add_ln14_11_reg_1160);

assign sext_ln14_fu_441_p1 = $signed(add_ln14_fu_436_p2);

assign sub_ln14_1_fu_479_p2 = (zext_ln14_16_fu_464_p1 - zext_ln14_17_fu_475_p1);

assign sub_ln14_2_fu_539_p2 = (zext_ln14_18_fu_524_p1 - zext_ln14_19_fu_535_p1);

assign sub_ln14_3_fu_599_p2 = (zext_ln14_20_fu_584_p1 - zext_ln14_21_fu_595_p1);

assign sub_ln14_4_fu_659_p2 = (zext_ln14_22_fu_644_p1 - zext_ln14_23_fu_655_p1);

assign sub_ln14_5_fu_719_p2 = (zext_ln14_24_fu_704_p1 - zext_ln14_25_fu_715_p1);

assign sub_ln14_6_fu_757_p2 = (zext_ln14_26_fu_742_p1 - zext_ln14_27_fu_753_p1);

assign sub_ln14_7_fu_795_p2 = (zext_ln14_28_fu_780_p1 - zext_ln14_29_fu_791_p1);

assign sub_ln14_8_fu_833_p2 = (zext_ln14_30_fu_818_p1 - zext_ln14_31_fu_829_p1);

assign sub_ln14_9_fu_871_p2 = (zext_ln14_32_fu_856_p1 - zext_ln14_33_fu_867_p1);

assign sub_ln14_fu_430_p2 = (zext_ln14_14_fu_414_p1 - zext_ln14_15_fu_426_p1);

assign tmp_10_fu_528_p3 = {{add_ln13_reg_1002}, {1'd0}};

assign tmp_11_fu_577_p3 = {{add_ln13_1_reg_1013}, {5'd0}};

assign tmp_12_fu_588_p3 = {{add_ln13_1_reg_1013}, {1'd0}};

assign tmp_13_fu_637_p3 = {{add_ln13_2_reg_1029}, {5'd0}};

assign tmp_14_fu_648_p3 = {{add_ln13_2_reg_1029}, {1'd0}};

assign tmp_15_fu_697_p3 = {{add_ln13_3_reg_1040}, {5'd0}};

assign tmp_16_fu_708_p3 = {{add_ln13_3_reg_1040}, {1'd0}};

assign tmp_17_fu_735_p3 = {{add_ln13_4_reg_1061}, {5'd0}};

assign tmp_18_fu_746_p3 = {{add_ln13_4_reg_1061}, {1'd0}};

assign tmp_19_fu_773_p3 = {{add_ln13_5_reg_1072}, {5'd0}};

assign tmp_20_fu_784_p3 = {{add_ln13_5_reg_1072}, {1'd0}};

assign tmp_21_fu_811_p3 = {{add_ln13_6_reg_1098}, {5'd0}};

assign tmp_22_fu_822_p3 = {{add_ln13_6_reg_1098}, {1'd0}};

assign tmp_23_fu_849_p3 = {{add_ln13_7_reg_1109}, {5'd0}};

assign tmp_24_fu_860_p3 = {{add_ln13_7_reg_1109}, {1'd0}};

assign tmp_2_fu_896_p4 = {{bitcast_ln19_fu_892_p1[30:23]}};

assign tmp_4_fu_406_p3 = {{ap_phi_mux_j_0_0_phi_fu_311_p4}, {5'd0}};

assign tmp_5_fu_418_p3 = {{ap_phi_mux_j_0_0_phi_fu_311_p4}, {1'd0}};

assign tmp_6_fu_457_p3 = {{or_ln13_reg_986}, {5'd0}};

assign tmp_8_fu_468_p3 = {{or_ln13_reg_986}, {1'd0}};

assign tmp_9_fu_517_p3 = {{add_ln13_reg_1002}, {5'd0}};

assign trunc_ln19_fu_906_p1 = bitcast_ln19_fu_892_p1[22:0];

assign zext_ln13_fu_391_p1 = i_0_reg_284;

assign zext_ln14_10_fu_621_p1 = add_ln13_4_fu_615_p2;

assign zext_ln14_11_fu_632_p1 = add_ln13_5_fu_626_p2;

assign zext_ln14_12_fu_681_p1 = add_ln13_6_fu_675_p2;

assign zext_ln14_13_fu_692_p1 = add_ln13_7_fu_686_p2;

assign zext_ln14_14_fu_414_p1 = tmp_4_fu_406_p3;

assign zext_ln14_15_fu_426_p1 = tmp_5_fu_418_p3;

assign zext_ln14_16_fu_464_p1 = tmp_6_fu_457_p3;

assign zext_ln14_17_fu_475_p1 = tmp_8_fu_468_p3;

assign zext_ln14_18_fu_524_p1 = tmp_9_fu_517_p3;

assign zext_ln14_19_fu_535_p1 = tmp_10_fu_528_p3;

assign zext_ln14_20_fu_584_p1 = tmp_11_fu_577_p3;

assign zext_ln14_21_fu_595_p1 = tmp_12_fu_588_p3;

assign zext_ln14_22_fu_644_p1 = tmp_13_fu_637_p3;

assign zext_ln14_23_fu_655_p1 = tmp_14_fu_648_p3;

assign zext_ln14_24_fu_704_p1 = tmp_15_fu_697_p3;

assign zext_ln14_25_fu_715_p1 = tmp_16_fu_708_p3;

assign zext_ln14_26_fu_742_p1 = tmp_17_fu_735_p3;

assign zext_ln14_27_fu_753_p1 = tmp_18_fu_746_p3;

assign zext_ln14_28_fu_780_p1 = tmp_19_fu_773_p3;

assign zext_ln14_29_fu_791_p1 = tmp_20_fu_784_p3;

assign zext_ln14_30_fu_818_p1 = tmp_21_fu_811_p3;

assign zext_ln14_31_fu_829_p1 = tmp_22_fu_822_p3;

assign zext_ln14_32_fu_856_p1 = tmp_23_fu_849_p3;

assign zext_ln14_33_fu_867_p1 = tmp_24_fu_860_p3;

assign zext_ln14_4_fu_401_p1 = ap_phi_mux_j_0_0_phi_fu_311_p4;

assign zext_ln14_5_fu_452_p1 = or_ln13_fu_446_p2;

assign zext_ln14_6_fu_501_p1 = add_ln13_fu_495_p2;

assign zext_ln14_7_fu_512_p1 = add_ln13_1_fu_506_p2;

assign zext_ln14_8_fu_561_p1 = add_ln13_2_fu_555_p2;

assign zext_ln14_9_fu_572_p1 = add_ln13_3_fu_566_p2;

assign zext_ln14_fu_387_p1 = i_0_reg_284;

always @ (posedge ap_clk) begin
    zext_ln14_reg_952[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_958[11:5] <= 7'b0000000;
    or_ln13_reg_986[0] <= 1'b1;
end

endmodule //dense_2
