-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dense_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_2_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    dense_2_out_ce0 : OUT STD_LOGIC;
    dense_2_out_we0 : OUT STD_LOGIC;
    dense_2_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_1_out_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dense_1_out_ce0 : OUT STD_LOGIC;
    dense_1_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_1_out_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    dense_1_out_ce1 : OUT STD_LOGIC;
    dense_1_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of dense_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (47 downto 0) := "000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (47 downto 0) := "000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (47 downto 0) := "000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (47 downto 0) := "000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (47 downto 0) := "000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (47 downto 0) := "000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (47 downto 0) := "000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (47 downto 0) := "000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (47 downto 0) := "000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (47 downto 0) := "001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (47 downto 0) := "010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (47 downto 0) := "100000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_2_weights_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_ce0 : STD_LOGIC;
    signal dense_2_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_bias_ce0 : STD_LOGIC;
    signal dense_2_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_0_0_reg_295 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_0_reg_307 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln13_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state45_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal reg_347 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_325_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_358 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_state17_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_state21_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_state25_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state29_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state33_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state37_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state41_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_11001 : BOOLEAN;
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal icmp_ln9_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_381_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_947 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln14_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_reg_952 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln13_fu_391_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln13_reg_958 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln13_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln13_reg_972_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln13_fu_446_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln13_reg_986 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_fu_495_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_reg_1002 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_1_fu_506_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_1_reg_1013 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_2_fu_555_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_2_reg_1029 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_3_fu_566_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_3_reg_1040 : STD_LOGIC_VECTOR (5 downto 0);
    signal dense_1_out_load_5_reg_1056 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln13_4_fu_615_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_4_reg_1061 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_5_fu_626_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_5_reg_1072 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_2_reg_1083 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_load_7_reg_1093 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln13_6_fu_675_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_6_reg_1098 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_7_fu_686_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_7_reg_1109 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_3_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_load_9_reg_1130 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_5_reg_1140 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_6_reg_1150 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln14_11_fu_877_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_11_reg_1160 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_7_reg_1165 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_9_reg_1175 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal add_ln13_8_fu_886_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln13_8_reg_1180 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_state42_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage39_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal i_0_reg_284 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_phi_mux_sum_0_0_phi_fu_299_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_0_0_phi_fu_311_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal sext_ln14_fu_441_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_4_fu_401_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_5_fu_452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_1_fu_490_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln14_6_fu_501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_7_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_2_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln14_8_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_9_fu_572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_3_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln14_10_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_11_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_4_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln14_12_fu_681_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_13_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_5_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal sext_ln14_6_fu_768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal sext_ln14_7_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal sext_ln14_8_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal sext_ln14_9_fu_882_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal grp_fu_319_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_pp0_stage35 : BOOLEAN;
    signal ap_block_pp0_stage39 : BOOLEAN;
    signal grp_fu_325_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal tmp_4_fu_406_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_5_fu_418_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_14_fu_414_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_15_fu_426_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_fu_436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_457_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_468_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_16_fu_464_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_17_fu_475_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_1_fu_479_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_3_fu_485_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_517_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_528_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_18_fu_524_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_19_fu_535_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_2_fu_539_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_4_fu_545_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_577_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_588_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_20_fu_584_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_21_fu_595_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_3_fu_599_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_5_fu_605_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_637_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_fu_648_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_22_fu_644_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_23_fu_655_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_4_fu_659_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_6_fu_665_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_697_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_16_fu_708_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_24_fu_704_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_25_fu_715_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_5_fu_719_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_7_fu_725_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_735_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_746_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_26_fu_742_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_27_fu_753_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_6_fu_757_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_8_fu_763_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_773_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_fu_784_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_28_fu_780_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_29_fu_791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_7_fu_795_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_9_fu_801_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_811_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_822_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_30_fu_818_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_31_fu_829_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_8_fu_833_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_10_fu_839_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_849_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_fu_860_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_32_fu_856_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_33_fu_867_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_9_fu_871_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln19_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_896_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln19_fu_906_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln19_1_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln19_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln19_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_state16_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_state18_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_state19_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_state20_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_state22_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_state23_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_state24_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_state26_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_state27_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_state28_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_state30_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_state31_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_state32_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_block_state34_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_block_state35_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_subdone : BOOLEAN;
    signal ap_block_state36_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_subdone : BOOLEAN;
    signal ap_block_pp0_stage34_subdone : BOOLEAN;
    signal ap_block_state38_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_subdone : BOOLEAN;
    signal ap_block_state39_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_subdone : BOOLEAN;
    signal ap_block_state40_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_subdone : BOOLEAN;
    signal ap_block_pp0_stage38_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cnn_fadd_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fmul_32ns_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fcmp_32ns_32neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component dense_2_dense_2_wibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_2_dense_2_bjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dense_2_weights_U : component dense_2_dense_2_wibs
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_weights_address0,
        ce0 => dense_2_weights_ce0,
        q0 => dense_2_weights_q0);

    dense_2_bias_U : component dense_2_dense_2_bjbC
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_bias_address0,
        ce0 => dense_2_bias_ce0,
        q0 => dense_2_bias_q0);

    cnn_fadd_32ns_32ncud_U33 : component cnn_fadd_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_319_p0,
        din1 => grp_fu_319_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_319_p2);

    cnn_fmul_32ns_32ndEe_U34 : component cnn_fmul_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_325_p0,
        din1 => dense_2_weights_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_325_p2);

    cnn_fcmp_32ns_32neOg_U35 : component cnn_fcmp_32ns_32neOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_319_p2,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_331_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_375_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage39_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_375_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                i_0_reg_284 <= i_reg_947;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_284 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j_0_0_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then 
                j_0_0_reg_307 <= add_ln13_8_reg_1180;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_375_p2 = ap_const_lv1_0))) then 
                j_0_0_reg_307 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    reg_347_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                    reg_347 <= dense_1_out_q0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                    reg_347 <= dense_1_out_q1;
                end if;
            end if; 
        end if;
    end process;

    reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then 
                    reg_358 <= dense_1_out_q0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                    reg_358 <= dense_1_out_q1;
                end if;
            end if; 
        end if;
    end process;

    sum_0_0_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln13_reg_972_pp0_iter1_reg = ap_const_lv1_0))) then 
                sum_0_0_reg_295 <= grp_fu_319_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_375_p2 = ap_const_lv1_0))) then 
                sum_0_0_reg_295 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_972 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln13_1_reg_1013 <= add_ln13_1_fu_506_p2;
                add_ln13_reg_1002 <= add_ln13_fu_495_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                add_ln13_2_reg_1029 <= add_ln13_2_fu_555_p2;
                add_ln13_3_reg_1040 <= add_ln13_3_fu_566_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                add_ln13_4_reg_1061 <= add_ln13_4_fu_615_p2;
                add_ln13_5_reg_1072 <= add_ln13_5_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                add_ln13_6_reg_1098 <= add_ln13_6_fu_675_p2;
                add_ln13_7_reg_1109 <= add_ln13_7_fu_686_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage39_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                add_ln13_8_reg_1180 <= add_ln13_8_fu_886_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                add_ln14_11_reg_1160 <= add_ln14_11_fu_877_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                dense_1_out_load_5_reg_1056 <= dense_1_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                dense_1_out_load_7_reg_1093 <= dense_1_out_q1;
                tmp_7_2_reg_1083 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                dense_1_out_load_9_reg_1130 <= dense_1_out_q1;
                tmp_7_3_reg_1120 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_947 <= i_fu_381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln13_reg_972 <= icmp_ln13_fu_395_p2;
                icmp_ln13_reg_972_pp0_iter1_reg <= icmp_ln13_reg_972;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_fu_395_p2 = ap_const_lv1_0))) then
                    or_ln13_reg_986(5 downto 1) <= or_ln13_fu_446_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_reg_972 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_337 <= dense_1_out_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)))) then
                reg_353 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)))) then
                reg_364 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state50) or ((ap_const_boolean_0 = ap_block_pp0_stage38_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage34_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0)))) then
                reg_369 <= grp_fu_319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                tmp_7_5_reg_1140 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                tmp_7_6_reg_1150 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                tmp_7_7_reg_1165 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then
                tmp_7_9_reg_1175 <= grp_fu_325_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln9_fu_375_p2 = ap_const_lv1_0))) then
                    zext_ln13_reg_958(4 downto 0) <= zext_ln13_fu_391_p1(4 downto 0);
                    zext_ln14_reg_952(4 downto 0) <= zext_ln14_fu_387_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln14_reg_952(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln13_reg_958(11 downto 5) <= "0000000";
    or_ln13_reg_986(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln9_fu_375_p2, ap_CS_fsm_state2, icmp_ln13_fu_395_p2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage39_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_block_pp0_stage31_subdone, ap_block_pp0_stage32_subdone, ap_block_pp0_stage33_subdone, ap_block_pp0_stage34_subdone, ap_block_pp0_stage35_subdone, ap_block_pp0_stage36_subdone, ap_block_pp0_stage37_subdone, ap_block_pp0_stage38_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln9_fu_375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln13_fu_395_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln13_fu_395_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage32_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage33_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage34_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage35_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage36_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage37_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage38_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage39_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln13_1_fu_506_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_3));
    add_ln13_2_fu_555_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_4));
    add_ln13_3_fu_566_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_5));
    add_ln13_4_fu_615_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_6));
    add_ln13_5_fu_626_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_7));
    add_ln13_6_fu_675_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_8));
    add_ln13_7_fu_686_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_9));
    add_ln13_8_fu_886_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_A));
    add_ln13_fu_495_p2 <= std_logic_vector(unsigned(j_0_0_reg_307) + unsigned(ap_const_lv6_2));
    add_ln14_10_fu_839_p2 <= std_logic_vector(unsigned(sub_ln14_8_fu_833_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_11_fu_877_p2 <= std_logic_vector(unsigned(sub_ln14_9_fu_871_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_3_fu_485_p2 <= std_logic_vector(unsigned(sub_ln14_1_fu_479_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_4_fu_545_p2 <= std_logic_vector(unsigned(sub_ln14_2_fu_539_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_5_fu_605_p2 <= std_logic_vector(unsigned(sub_ln14_3_fu_599_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_6_fu_665_p2 <= std_logic_vector(unsigned(sub_ln14_4_fu_659_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_7_fu_725_p2 <= std_logic_vector(unsigned(sub_ln14_5_fu_719_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_8_fu_763_p2 <= std_logic_vector(unsigned(sub_ln14_6_fu_757_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_9_fu_801_p2 <= std_logic_vector(unsigned(sub_ln14_7_fu_795_p2) + unsigned(zext_ln13_reg_958));
    add_ln14_fu_436_p2 <= std_logic_vector(unsigned(sub_ln14_fu_430_p2) + unsigned(zext_ln13_reg_958));
    and_ln19_fu_928_p2 <= (or_ln19_fu_922_p2 and grp_fu_331_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state46 <= ap_CS_fsm(42);
    ap_CS_fsm_state47 <= ap_CS_fsm(43);
    ap_CS_fsm_state50 <= ap_CS_fsm(46);
    ap_CS_fsm_state51 <= ap_CS_fsm(47);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage17_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage19_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage21_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage22_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage23_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage24_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage25_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage17_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage19_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage20_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage21_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage22_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage23_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage24_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage25_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln13_fu_395_p2)
    begin
        if ((icmp_ln13_fu_395_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln9_fu_375_p2, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln9_fu_375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_0_phi_fu_311_p4_assign_proc : process(j_0_0_reg_307, icmp_ln13_reg_972, ap_CS_fsm_pp0_stage0, add_ln13_8_reg_1180, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln13_reg_972 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_0_phi_fu_311_p4 <= add_ln13_8_reg_1180;
        else 
            ap_phi_mux_j_0_0_phi_fu_311_p4 <= j_0_0_reg_307;
        end if; 
    end process;

    ap_phi_mux_sum_0_0_phi_fu_299_p4 <= sum_0_0_reg_295;

    ap_ready_assign_proc : process(icmp_ln9_fu_375_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln9_fu_375_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln19_fu_892_p1 <= reg_369;

    dense_1_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln14_4_fu_401_p1, ap_block_pp0_stage1, zext_ln14_6_fu_501_p1, ap_block_pp0_stage2, zext_ln14_8_fu_561_p1, ap_block_pp0_stage3, zext_ln14_10_fu_621_p1, ap_block_pp0_stage4, zext_ln14_12_fu_681_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_1_out_address0 <= zext_ln14_12_fu_681_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_1_out_address0 <= zext_ln14_10_fu_621_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_1_out_address0 <= zext_ln14_8_fu_561_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_1_out_address0 <= zext_ln14_6_fu_501_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_1_out_address0 <= zext_ln14_4_fu_401_p1(6 - 1 downto 0);
            else 
                dense_1_out_address0 <= "XXXXXX";
            end if;
        else 
            dense_1_out_address0 <= "XXXXXX";
        end if; 
    end process;


    dense_1_out_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln14_5_fu_452_p1, ap_block_pp0_stage1, zext_ln14_7_fu_512_p1, ap_block_pp0_stage2, zext_ln14_9_fu_572_p1, ap_block_pp0_stage3, zext_ln14_11_fu_632_p1, ap_block_pp0_stage4, zext_ln14_13_fu_692_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_1_out_address1 <= zext_ln14_13_fu_692_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_1_out_address1 <= zext_ln14_11_fu_632_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_1_out_address1 <= zext_ln14_9_fu_572_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_1_out_address1 <= zext_ln14_7_fu_512_p1(6 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_1_out_address1 <= zext_ln14_5_fu_452_p1(6 - 1 downto 0);
            else 
                dense_1_out_address1 <= "XXXXXX";
            end if;
        else 
            dense_1_out_address1 <= "XXXXXX";
        end if; 
    end process;


    dense_1_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_1_out_ce0 <= ap_const_logic_1;
        else 
            dense_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_1_out_ce1 <= ap_const_logic_1;
        else 
            dense_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_bias_address0 <= zext_ln14_reg_952(5 - 1 downto 0);

    dense_2_bias_ce0_assign_proc : process(ap_CS_fsm_state46)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            dense_2_bias_ce0 <= ap_const_logic_1;
        else 
            dense_2_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_address0 <= zext_ln14_reg_952(5 - 1 downto 0);

    dense_2_out_ce0_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            dense_2_out_ce0 <= ap_const_logic_1;
        else 
            dense_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_d0 <= 
        ap_const_lv32_0 when (and_ln19_fu_928_p2(0) = '1') else 
        reg_369;

    dense_2_out_we0_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            dense_2_out_we0 <= ap_const_logic_1;
        else 
            dense_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_weights_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, sext_ln14_fu_441_p1, sext_ln14_1_fu_490_p1, ap_block_pp0_stage1, sext_ln14_2_fu_550_p1, ap_block_pp0_stage2, sext_ln14_3_fu_610_p1, ap_block_pp0_stage3, sext_ln14_4_fu_670_p1, ap_block_pp0_stage4, sext_ln14_5_fu_730_p1, ap_block_pp0_stage5, sext_ln14_6_fu_768_p1, ap_block_pp0_stage6, sext_ln14_7_fu_806_p1, ap_block_pp0_stage7, sext_ln14_8_fu_844_p1, ap_block_pp0_stage8, sext_ln14_9_fu_882_p1, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                dense_2_weights_address0 <= sext_ln14_9_fu_882_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                dense_2_weights_address0 <= sext_ln14_8_fu_844_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                dense_2_weights_address0 <= sext_ln14_7_fu_806_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                dense_2_weights_address0 <= sext_ln14_6_fu_768_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                dense_2_weights_address0 <= sext_ln14_5_fu_730_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                dense_2_weights_address0 <= sext_ln14_4_fu_670_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                dense_2_weights_address0 <= sext_ln14_3_fu_610_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                dense_2_weights_address0 <= sext_ln14_2_fu_550_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                dense_2_weights_address0 <= sext_ln14_1_fu_490_p1(11 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dense_2_weights_address0 <= sext_ln14_fu_441_p1(11 - 1 downto 0);
            else 
                dense_2_weights_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            dense_2_weights_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dense_2_weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dense_2_weights_ce0 <= ap_const_logic_1;
        else 
            dense_2_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_319_p0_assign_proc : process(sum_0_0_reg_295, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, reg_369, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage39, ap_CS_fsm_state47, ap_phi_mux_sum_0_0_phi_fu_299_p4, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_block_pp0_stage39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_319_p0 <= sum_0_0_reg_295;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_319_p0 <= reg_369;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p0 <= ap_phi_mux_sum_0_0_phi_fu_299_p4;
        else 
            grp_fu_319_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_319_p1_assign_proc : process(dense_2_bias_q0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage7, reg_353, reg_364, tmp_7_2_reg_1083, tmp_7_3_reg_1120, tmp_7_5_reg_1140, tmp_7_6_reg_1150, tmp_7_7_reg_1165, tmp_7_9_reg_1175, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage39, ap_CS_fsm_state47, ap_block_pp0_stage3, ap_block_pp0_stage7, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_block_pp0_stage39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_319_p1 <= dense_2_bias_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage39) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_9_reg_1175;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_7_reg_1165;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_6_reg_1150;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_5_reg_1140;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_3_reg_1120;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_319_p1 <= tmp_7_2_reg_1083;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage35) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_319_p1 <= reg_364;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_319_p1 <= reg_353;
        else 
            grp_fu_319_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_325_p0_assign_proc : process(dense_1_out_q0, reg_337, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, reg_347, reg_358, dense_1_out_load_5_reg_1056, dense_1_out_load_7_reg_1093, dense_1_out_load_9_reg_1130, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_325_p0 <= dense_1_out_load_9_reg_1130;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_325_p0 <= dense_1_out_load_7_reg_1093;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_325_p0 <= dense_1_out_load_5_reg_1056;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_325_p0 <= reg_358;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_325_p0 <= reg_337;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_325_p0 <= reg_347;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_325_p0 <= dense_1_out_q0;
        else 
            grp_fu_325_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_381_p2 <= std_logic_vector(unsigned(i_0_reg_284) + unsigned(ap_const_lv5_1));
    icmp_ln13_fu_395_p2 <= "1" when (ap_phi_mux_j_0_0_phi_fu_311_p4 = ap_const_lv6_32) else "0";
    icmp_ln19_1_fu_916_p2 <= "1" when (trunc_ln19_fu_906_p1 = ap_const_lv23_0) else "0";
    icmp_ln19_fu_910_p2 <= "0" when (tmp_2_fu_896_p4 = ap_const_lv8_FF) else "1";
    icmp_ln9_fu_375_p2 <= "1" when (i_0_reg_284 = ap_const_lv5_1E) else "0";
    or_ln13_fu_446_p2 <= (ap_phi_mux_j_0_0_phi_fu_311_p4 or ap_const_lv6_1);
    or_ln19_fu_922_p2 <= (icmp_ln19_fu_910_p2 or icmp_ln19_1_fu_916_p2);
        sext_ln14_1_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_3_fu_485_p2),64));

        sext_ln14_2_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_4_fu_545_p2),64));

        sext_ln14_3_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_5_fu_605_p2),64));

        sext_ln14_4_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_6_fu_665_p2),64));

        sext_ln14_5_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_7_fu_725_p2),64));

        sext_ln14_6_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_8_fu_763_p2),64));

        sext_ln14_7_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_9_fu_801_p2),64));

        sext_ln14_8_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_10_fu_839_p2),64));

        sext_ln14_9_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_11_reg_1160),64));

        sext_ln14_fu_441_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_fu_436_p2),64));

    sub_ln14_1_fu_479_p2 <= std_logic_vector(unsigned(zext_ln14_16_fu_464_p1) - unsigned(zext_ln14_17_fu_475_p1));
    sub_ln14_2_fu_539_p2 <= std_logic_vector(unsigned(zext_ln14_18_fu_524_p1) - unsigned(zext_ln14_19_fu_535_p1));
    sub_ln14_3_fu_599_p2 <= std_logic_vector(unsigned(zext_ln14_20_fu_584_p1) - unsigned(zext_ln14_21_fu_595_p1));
    sub_ln14_4_fu_659_p2 <= std_logic_vector(unsigned(zext_ln14_22_fu_644_p1) - unsigned(zext_ln14_23_fu_655_p1));
    sub_ln14_5_fu_719_p2 <= std_logic_vector(unsigned(zext_ln14_24_fu_704_p1) - unsigned(zext_ln14_25_fu_715_p1));
    sub_ln14_6_fu_757_p2 <= std_logic_vector(unsigned(zext_ln14_26_fu_742_p1) - unsigned(zext_ln14_27_fu_753_p1));
    sub_ln14_7_fu_795_p2 <= std_logic_vector(unsigned(zext_ln14_28_fu_780_p1) - unsigned(zext_ln14_29_fu_791_p1));
    sub_ln14_8_fu_833_p2 <= std_logic_vector(unsigned(zext_ln14_30_fu_818_p1) - unsigned(zext_ln14_31_fu_829_p1));
    sub_ln14_9_fu_871_p2 <= std_logic_vector(unsigned(zext_ln14_32_fu_856_p1) - unsigned(zext_ln14_33_fu_867_p1));
    sub_ln14_fu_430_p2 <= std_logic_vector(unsigned(zext_ln14_14_fu_414_p1) - unsigned(zext_ln14_15_fu_426_p1));
    tmp_10_fu_528_p3 <= (add_ln13_reg_1002 & ap_const_lv1_0);
    tmp_11_fu_577_p3 <= (add_ln13_1_reg_1013 & ap_const_lv5_0);
    tmp_12_fu_588_p3 <= (add_ln13_1_reg_1013 & ap_const_lv1_0);
    tmp_13_fu_637_p3 <= (add_ln13_2_reg_1029 & ap_const_lv5_0);
    tmp_14_fu_648_p3 <= (add_ln13_2_reg_1029 & ap_const_lv1_0);
    tmp_15_fu_697_p3 <= (add_ln13_3_reg_1040 & ap_const_lv5_0);
    tmp_16_fu_708_p3 <= (add_ln13_3_reg_1040 & ap_const_lv1_0);
    tmp_17_fu_735_p3 <= (add_ln13_4_reg_1061 & ap_const_lv5_0);
    tmp_18_fu_746_p3 <= (add_ln13_4_reg_1061 & ap_const_lv1_0);
    tmp_19_fu_773_p3 <= (add_ln13_5_reg_1072 & ap_const_lv5_0);
    tmp_20_fu_784_p3 <= (add_ln13_5_reg_1072 & ap_const_lv1_0);
    tmp_21_fu_811_p3 <= (add_ln13_6_reg_1098 & ap_const_lv5_0);
    tmp_22_fu_822_p3 <= (add_ln13_6_reg_1098 & ap_const_lv1_0);
    tmp_23_fu_849_p3 <= (add_ln13_7_reg_1109 & ap_const_lv5_0);
    tmp_24_fu_860_p3 <= (add_ln13_7_reg_1109 & ap_const_lv1_0);
    tmp_2_fu_896_p4 <= bitcast_ln19_fu_892_p1(30 downto 23);
    tmp_4_fu_406_p3 <= (ap_phi_mux_j_0_0_phi_fu_311_p4 & ap_const_lv5_0);
    tmp_5_fu_418_p3 <= (ap_phi_mux_j_0_0_phi_fu_311_p4 & ap_const_lv1_0);
    tmp_6_fu_457_p3 <= (or_ln13_reg_986 & ap_const_lv5_0);
    tmp_8_fu_468_p3 <= (or_ln13_reg_986 & ap_const_lv1_0);
    tmp_9_fu_517_p3 <= (add_ln13_reg_1002 & ap_const_lv5_0);
    trunc_ln19_fu_906_p1 <= bitcast_ln19_fu_892_p1(23 - 1 downto 0);
    zext_ln13_fu_391_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_284),12));
    zext_ln14_10_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_4_fu_615_p2),64));
    zext_ln14_11_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_5_fu_626_p2),64));
    zext_ln14_12_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_6_fu_675_p2),64));
    zext_ln14_13_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_7_fu_686_p2),64));
    zext_ln14_14_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_406_p3),12));
    zext_ln14_15_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_418_p3),12));
    zext_ln14_16_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_457_p3),12));
    zext_ln14_17_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_468_p3),12));
    zext_ln14_18_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_517_p3),12));
    zext_ln14_19_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_528_p3),12));
    zext_ln14_20_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_577_p3),12));
    zext_ln14_21_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_588_p3),12));
    zext_ln14_22_fu_644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_637_p3),12));
    zext_ln14_23_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_648_p3),12));
    zext_ln14_24_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_697_p3),12));
    zext_ln14_25_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_708_p3),12));
    zext_ln14_26_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_735_p3),12));
    zext_ln14_27_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_746_p3),12));
    zext_ln14_28_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_773_p3),12));
    zext_ln14_29_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_784_p3),12));
    zext_ln14_30_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_811_p3),12));
    zext_ln14_31_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_822_p3),12));
    zext_ln14_32_fu_856_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_849_p3),12));
    zext_ln14_33_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_860_p3),12));
    zext_ln14_4_fu_401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_j_0_0_phi_fu_311_p4),64));
    zext_ln14_5_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln13_fu_446_p2),64));
    zext_ln14_6_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_fu_495_p2),64));
    zext_ln14_7_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_1_fu_506_p2),64));
    zext_ln14_8_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_2_fu_555_p2),64));
    zext_ln14_9_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln13_3_fu_566_p2),64));
    zext_ln14_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_284),64));
end behav;
