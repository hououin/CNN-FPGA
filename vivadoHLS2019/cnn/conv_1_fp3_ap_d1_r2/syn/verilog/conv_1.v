// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        input_1_address0,
        input_1_ce0,
        input_1_q0,
        input_1_address1,
        input_1_ce1,
        input_1_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_pp0_stage0 = 5'd2;
parameter    ap_ST_fsm_pp0_stage1 = 5'd4;
parameter    ap_ST_fsm_pp0_stage2 = 5'd8;
parameter    ap_ST_fsm_state47 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [8:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [8:0] input_1_address0;
output   input_1_ce0;
input  [31:0] input_1_q0;
output  [8:0] input_1_address1;
output   input_1_ce1;
input  [31:0] input_1_q1;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] input_0_address0;
reg input_0_ce0;
reg[8:0] input_0_address1;
reg input_0_ce1;
reg[8:0] input_1_address0;
reg input_1_ce0;
reg[8:0] input_1_address1;
reg input_1_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] conv_1_weights_0_0_address0;
reg    conv_1_weights_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_q0;
wire   [2:0] conv_1_weights_0_1_address0;
reg    conv_1_weights_0_1_ce0;
wire   [31:0] conv_1_weights_0_1_q0;
wire   [2:0] conv_1_weights_0_2_address0;
reg    conv_1_weights_0_2_ce0;
wire   [31:0] conv_1_weights_0_2_q0;
wire   [2:0] conv_1_weights_1_0_address0;
reg    conv_1_weights_1_0_ce0;
wire   [31:0] conv_1_weights_1_0_q0;
wire   [2:0] conv_1_weights_1_1_address0;
reg    conv_1_weights_1_1_ce0;
wire   [31:0] conv_1_weights_1_1_q0;
wire   [2:0] conv_1_weights_1_2_address0;
reg    conv_1_weights_1_2_ce0;
wire   [31:0] conv_1_weights_1_2_q0;
wire   [2:0] conv_1_weights_2_0_address0;
reg    conv_1_weights_2_0_ce0;
wire   [31:0] conv_1_weights_2_0_q0;
wire   [2:0] conv_1_weights_2_1_address0;
reg    conv_1_weights_2_1_ce0;
wire   [31:0] conv_1_weights_2_1_q0;
wire   [2:0] conv_1_weights_2_2_address0;
reg    conv_1_weights_2_2_ce0;
wire   [31:0] conv_1_weights_2_2_q0;
wire   [2:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [11:0] indvar_flatten39_reg_417;
reg   [4:0] r_0_reg_428;
reg   [7:0] indvar_flatten_reg_439;
reg   [4:0] c_0_reg_450;
reg   [2:0] f_0_reg_461;
wire   [31:0] grp_fu_511_p3;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_state13_pp0_stage2_iter3;
wire    ap_block_state16_pp0_stage2_iter4;
wire    ap_block_state19_pp0_stage2_iter5;
wire    ap_block_state22_pp0_stage2_iter6;
wire    ap_block_state25_pp0_stage2_iter7;
wire    ap_block_state28_pp0_stage2_iter8;
wire    ap_block_state31_pp0_stage2_iter9;
wire    ap_block_state34_pp0_stage2_iter10;
wire    ap_block_state37_pp0_stage2_iter11;
wire    ap_block_state40_pp0_stage2_iter12;
wire    ap_block_state43_pp0_stage2_iter13;
wire    ap_block_state46_pp0_stage2_iter14;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln8_reg_1102;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state17_pp0_stage0_iter5;
wire    ap_block_state20_pp0_stage0_iter6;
wire    ap_block_state23_pp0_stage0_iter7;
wire    ap_block_state26_pp0_stage0_iter8;
wire    ap_block_state29_pp0_stage0_iter9;
wire    ap_block_state32_pp0_stage0_iter10;
wire    ap_block_state35_pp0_stage0_iter11;
wire    ap_block_state38_pp0_stage0_iter12;
wire    ap_block_state41_pp0_stage0_iter13;
wire    ap_block_state44_pp0_stage0_iter14;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_state18_pp0_stage1_iter5;
wire    ap_block_state21_pp0_stage1_iter6;
wire    ap_block_state24_pp0_stage1_iter7;
wire    ap_block_state27_pp0_stage1_iter8;
wire    ap_block_state30_pp0_stage1_iter9;
wire    ap_block_state33_pp0_stage1_iter10;
wire    ap_block_state36_pp0_stage1_iter11;
wire    ap_block_state39_pp0_stage1_iter12;
wire    ap_block_state42_pp0_stage1_iter13;
wire    ap_block_state45_pp0_stage1_iter14;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter1_reg;
wire   [31:0] grp_fu_520_p3;
reg   [31:0] reg_543;
wire   [31:0] grp_fu_529_p3;
wire   [0:0] icmp_ln8_fu_592_p2;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter2_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter3_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter4_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter5_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter6_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter7_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter8_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter9_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter10_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter11_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter12_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter13_reg;
reg   [0:0] icmp_ln8_reg_1102_pp0_iter14_reg;
wire   [11:0] add_ln8_fu_598_p2;
reg   [11:0] add_ln8_reg_1106;
wire   [0:0] icmp_ln11_fu_604_p2;
reg   [0:0] icmp_ln11_reg_1111;
wire   [4:0] select_ln30_1_fu_618_p3;
reg   [4:0] select_ln30_1_reg_1116;
wire   [0:0] trunc_ln30_fu_626_p1;
reg   [0:0] trunc_ln30_reg_1122;
reg   [0:0] trunc_ln30_reg_1122_pp0_iter1_reg;
wire   [3:0] select_ln30_2_fu_630_p3;
reg   [3:0] select_ln30_2_reg_1130;
wire   [3:0] select_ln30_3_fu_654_p3;
reg   [3:0] select_ln30_3_reg_1136;
reg   [3:0] zext_ln23_5_mid2_v_reg_1142;
wire   [2:0] select_ln30_7_fu_732_p3;
reg   [2:0] select_ln30_7_reg_1148;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter1_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter2_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter3_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter4_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter5_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter6_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter7_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter8_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter9_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter10_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter11_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter12_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter13_reg;
reg   [2:0] select_ln30_7_reg_1148_pp0_iter14_reg;
wire   [4:0] select_ln30_8_fu_740_p3;
reg   [4:0] select_ln30_8_reg_1154;
wire   [4:0] select_ln30_9_fu_754_p3;
reg   [4:0] select_ln30_9_reg_1160;
wire   [4:0] select_ln30_10_fu_768_p3;
reg   [4:0] select_ln30_10_reg_1165;
wire   [63:0] zext_ln23_fu_776_p1;
reg   [63:0] zext_ln23_reg_1170;
reg   [63:0] zext_ln23_reg_1170_pp0_iter1_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter2_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter3_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter4_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter5_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter6_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter7_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter8_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter9_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter10_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter11_reg;
reg   [63:0] zext_ln23_reg_1170_pp0_iter12_reg;
wire   [7:0] add_ln11_fu_786_p2;
reg   [7:0] add_ln11_reg_1208;
wire   [9:0] sub_ln23_fu_814_p2;
reg   [9:0] sub_ln23_reg_1213;
wire   [9:0] sub_ln23_1_fu_842_p2;
reg   [9:0] sub_ln23_1_reg_1218;
wire   [9:0] zext_ln30_1_fu_848_p1;
reg   [9:0] zext_ln30_1_reg_1223;
wire   [9:0] zext_ln30_3_fu_875_p1;
reg   [9:0] zext_ln30_3_reg_1249;
reg   [31:0] conv_1_weights_0_0_l_reg_1274;
reg   [31:0] conv_1_weights_0_1_l_reg_1279;
reg   [31:0] conv_1_weights_0_2_l_reg_1284;
reg   [31:0] conv_1_weights_1_0_l_reg_1289;
reg   [31:0] conv_1_weights_1_1_l_reg_1294;
reg   [31:0] conv_1_weights_1_2_l_reg_1299;
wire   [9:0] add_ln23_10_fu_941_p2;
reg   [9:0] add_ln23_10_reg_1314;
wire   [9:0] add_ln23_14_fu_971_p2;
reg   [9:0] add_ln23_14_reg_1329;
wire   [31:0] select_ln23_4_fu_977_p3;
reg   [31:0] select_ln23_4_reg_1344;
wire   [2:0] f_fu_984_p2;
reg   [2:0] f_reg_1349;
wire   [7:0] select_ln11_fu_989_p3;
reg   [7:0] select_ln11_reg_1354;
wire   [9:0] grp_fu_1095_p3;
reg   [9:0] add_ln30_1_reg_1359;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter2_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter3_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter4_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter5_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter6_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter7_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter8_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter9_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter10_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter11_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter12_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter13_reg;
reg   [9:0] add_ln30_1_reg_1359_pp0_iter14_reg;
wire   [31:0] grp_fu_490_p2;
reg   [31:0] tmp_8_reg_1385;
wire   [31:0] grp_fu_494_p2;
reg   [31:0] tmp_0_1_reg_1390;
reg   [31:0] tmp_0_1_reg_1390_pp0_iter2_reg;
wire   [31:0] grp_fu_498_p2;
reg   [31:0] tmp_1_reg_1395;
reg   [31:0] tmp_1_reg_1395_pp0_iter2_reg;
reg   [31:0] tmp_1_reg_1395_pp0_iter3_reg;
reg   [31:0] tmp_1_reg_1395_pp0_iter4_reg;
reg   [31:0] tmp_1_reg_1395_pp0_iter5_reg;
reg   [31:0] tmp_0_2_reg_1415;
reg   [31:0] tmp_0_2_reg_1415_pp0_iter2_reg;
reg   [31:0] tmp_0_2_reg_1415_pp0_iter3_reg;
reg   [31:0] tmp_1_1_reg_1420;
reg   [31:0] tmp_1_1_reg_1420_pp0_iter2_reg;
reg   [31:0] tmp_1_1_reg_1420_pp0_iter3_reg;
reg   [31:0] tmp_1_1_reg_1420_pp0_iter4_reg;
reg   [31:0] tmp_1_1_reg_1420_pp0_iter5_reg;
reg   [31:0] tmp_1_1_reg_1420_pp0_iter6_reg;
reg   [31:0] tmp_1_2_reg_1425;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter2_reg;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter3_reg;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter4_reg;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter5_reg;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter6_reg;
reg   [31:0] tmp_1_2_reg_1425_pp0_iter7_reg;
reg   [31:0] tmp_2_reg_1450;
reg   [31:0] tmp_2_reg_1450_pp0_iter2_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter3_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter4_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter5_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter6_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter7_reg;
reg   [31:0] tmp_2_reg_1450_pp0_iter8_reg;
reg   [31:0] tmp_2_1_reg_1455;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter2_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter3_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter4_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter5_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter6_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter7_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter8_reg;
reg   [31:0] tmp_2_1_reg_1455_pp0_iter9_reg;
reg   [31:0] tmp_2_2_reg_1460;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter2_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter3_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter4_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter5_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter6_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter7_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter8_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter9_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter10_reg;
reg   [31:0] tmp_2_2_reg_1460_pp0_iter11_reg;
wire   [31:0] grp_fu_472_p2;
reg   [31:0] w_sum_4_reg_1465;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] w_sum_4_0_1_reg_1470;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] w_sum_4_0_2_reg_1475;
reg    ap_enable_reg_pp0_iter5;
wire   [31:0] grp_fu_477_p2;
reg   [31:0] w_sum_4_1_reg_1480;
reg    ap_enable_reg_pp0_iter6;
reg   [31:0] w_sum_4_1_1_reg_1485;
reg    ap_enable_reg_pp0_iter7;
reg   [31:0] w_sum_4_1_2_reg_1490;
reg    ap_enable_reg_pp0_iter9;
wire   [31:0] grp_fu_481_p2;
reg   [31:0] w_sum_4_2_reg_1495;
reg    ap_enable_reg_pp0_iter10;
reg   [31:0] w_sum_4_2_1_reg_1500;
reg    ap_enable_reg_pp0_iter11;
reg   [31:0] w_sum_4_2_2_reg_1505;
reg    ap_enable_reg_pp0_iter13;
wire   [31:0] grp_fu_485_p2;
reg   [31:0] w_sum_reg_1520;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter14;
reg   [11:0] ap_phi_mux_indvar_flatten39_phi_fu_421_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_432_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_443_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_454_p4;
reg   [2:0] ap_phi_mux_f_0_phi_fu_465_p4;
wire   [63:0] zext_ln23_7_fu_857_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln23_8_fu_869_p1;
wire   [63:0] zext_ln23_9_fu_884_p1;
wire   [63:0] zext_ln23_10_fu_896_p1;
wire  signed [63:0] sext_ln23_fu_935_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln23_11_fu_954_p1;
wire   [63:0] zext_ln23_12_fu_965_p1;
wire  signed [63:0] sext_ln23_1_fu_998_p1;
wire   [63:0] zext_ln23_13_fu_1003_p1;
wire   [63:0] zext_ln30_6_fu_1041_p1;
reg   [31:0] grp_fu_472_p0;
reg   [31:0] grp_fu_472_p1;
reg   [31:0] grp_fu_477_p0;
reg   [31:0] grp_fu_477_p1;
reg   [31:0] grp_fu_481_p0;
reg   [31:0] grp_fu_481_p1;
reg   [31:0] grp_fu_490_p0;
reg   [31:0] grp_fu_490_p1;
reg   [31:0] grp_fu_494_p0;
reg   [31:0] grp_fu_494_p1;
reg   [31:0] grp_fu_498_p0;
reg   [31:0] grp_fu_498_p1;
reg   [0:0] grp_fu_511_p0;
reg   [0:0] grp_fu_520_p0;
wire   [4:0] r_fu_564_p2;
wire   [3:0] lshr_ln23_1_fu_570_p4;
wire   [3:0] lshr_ln_fu_554_p4;
wire   [4:0] add_ln23_fu_638_p2;
wire   [3:0] lshr_ln23_1_mid1_fu_644_p4;
wire   [4:0] select_ln30_4_fu_662_p3;
wire   [4:0] add_ln30_fu_670_p2;
wire   [4:0] c_fu_580_p2;
wire   [4:0] add_ln23_1_fu_586_p2;
wire   [0:0] icmp_ln14_fu_708_p2;
wire   [0:0] xor_ln30_fu_702_p2;
wire   [4:0] select_ln30_fu_610_p3;
wire   [0:0] and_ln30_fu_714_p2;
wire   [0:0] or_ln30_fu_726_p2;
wire   [4:0] add_ln23_3_fu_720_p2;
wire   [4:0] add_ln23_7_fu_748_p2;
wire   [4:0] select_ln30_5_fu_686_p3;
wire   [4:0] add_ln23_11_fu_762_p2;
wire   [4:0] select_ln30_6_fu_694_p3;
wire   [8:0] tmp_11_fu_792_p3;
wire   [5:0] tmp_12_fu_803_p3;
wire   [9:0] zext_ln23_1_fu_799_p1;
wire   [9:0] zext_ln23_2_fu_810_p1;
wire   [8:0] tmp_13_fu_820_p3;
wire   [5:0] tmp_14_fu_831_p3;
wire   [9:0] zext_ln23_3_fu_827_p1;
wire   [9:0] zext_ln23_4_fu_838_p1;
wire   [9:0] add_ln23_4_fu_851_p2;
wire   [9:0] add_ln23_5_fu_863_p2;
wire   [9:0] add_ln23_8_fu_878_p2;
wire   [9:0] add_ln23_9_fu_890_p2;
wire   [8:0] tmp_9_fu_902_p3;
wire   [5:0] tmp_10_fu_913_p3;
wire   [9:0] zext_ln23_5_fu_909_p1;
wire   [9:0] zext_ln23_6_fu_920_p1;
wire   [9:0] sub_ln23_2_fu_924_p2;
wire   [9:0] add_ln23_6_fu_930_p2;
wire   [9:0] zext_ln30_4_fu_946_p1;
wire   [9:0] add_ln23_12_fu_949_p2;
wire   [9:0] add_ln23_13_fu_960_p2;
wire   [10:0] tmp_15_fu_1015_p3;
wire   [12:0] p_shl_cast_fu_1008_p3;
wire   [12:0] zext_ln30_2_fu_1022_p1;
wire   [12:0] sub_ln30_fu_1026_p2;
wire   [12:0] zext_ln30_5_fu_1032_p1;
wire   [12:0] add_ln30_2_fu_1035_p2;
wire   [31:0] bitcast_ln29_fu_1046_p1;
wire   [7:0] tmp_fu_1049_p4;
wire   [22:0] trunc_ln29_fu_1059_p1;
wire   [0:0] icmp_ln29_7_fu_1069_p2;
wire   [0:0] icmp_ln29_fu_1063_p2;
wire   [0:0] or_ln29_fu_1075_p2;
wire   [0:0] grp_fu_505_p2;
wire   [0:0] and_ln29_fu_1081_p2;
wire   [5:0] grp_fu_1095_p0;
wire   [4:0] grp_fu_1095_p1;
wire   [4:0] grp_fu_1095_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state47;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1095_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_address0),
    .ce0(conv_1_weights_0_0_ce0),
    .q0(conv_1_weights_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_address0),
    .ce0(conv_1_weights_0_1_ce0),
    .q0(conv_1_weights_0_1_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_address0),
    .ce0(conv_1_weights_0_2_ce0),
    .q0(conv_1_weights_0_2_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_address0),
    .ce0(conv_1_weights_1_0_ce0),
    .q0(conv_1_weights_1_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_address0),
    .ce0(conv_1_weights_1_1_ce0),
    .q0(conv_1_weights_1_1_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_address0),
    .ce0(conv_1_weights_1_2_ce0),
    .q0(conv_1_weights_1_2_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_address0),
    .ce0(conv_1_weights_2_0_ce0),
    .q0(conv_1_weights_2_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_address0),
    .ce0(conv_1_weights_2_1_ce0),
    .q0(conv_1_weights_2_1_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_weights_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_address0),
    .ce0(conv_1_weights_2_2_ce0),
    .q0(conv_1_weights_2_2_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_472_p0),
    .din1(grp_fu_472_p1),
    .ce(1'b1),
    .dout(grp_fu_472_p2)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_477_p0),
    .din1(grp_fu_477_p1),
    .ce(1'b1),
    .dout(grp_fu_477_p2)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_481_p0),
    .din1(grp_fu_481_p1),
    .ce(1'b1),
    .dout(grp_fu_481_p2)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(w_sum_4_2_2_reg_1505),
    .din1(conv_1_bias_q0),
    .ce(1'b1),
    .dout(grp_fu_485_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_490_p0),
    .din1(grp_fu_490_p1),
    .ce(1'b1),
    .dout(grp_fu_490_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_494_p0),
    .din1(grp_fu_494_p1),
    .ce(1'b1),
    .dout(grp_fu_494_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_498_p0),
    .din1(grp_fu_498_p1),
    .ce(1'b1),
    .dout(grp_fu_498_p2)
);

cnn_fcmp_32ns_32nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32nmb6_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_485_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_505_p2)
);

cnn_mac_muladd_6nncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_6nncg_U9(
    .din0(grp_fu_1095_p0),
    .din1(grp_fu_1095_p1),
    .din2(grp_fu_1095_p2),
    .dout(grp_fu_1095_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        c_0_reg_450 <= select_ln30_8_reg_1154;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_450 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        f_0_reg_461 <= f_reg_1349;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_461 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        indvar_flatten39_reg_417 <= add_ln8_reg_1106;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten39_reg_417 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        indvar_flatten_reg_439 <= select_ln11_reg_1354;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_439 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        r_0_reg_428 <= select_ln30_1_reg_1116;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_428 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_592_p2 == 1'd0))) begin
        add_ln11_reg_1208 <= add_ln11_fu_786_p2;
        icmp_ln11_reg_1111 <= icmp_ln11_fu_604_p2;
        select_ln30_10_reg_1165 <= select_ln30_10_fu_768_p3;
        select_ln30_2_reg_1130 <= select_ln30_2_fu_630_p3;
        select_ln30_3_reg_1136 <= select_ln30_3_fu_654_p3;
        select_ln30_7_reg_1148 <= select_ln30_7_fu_732_p3;
        select_ln30_9_reg_1160 <= select_ln30_9_fu_754_p3;
        trunc_ln30_reg_1122 <= trunc_ln30_fu_626_p1;
        zext_ln23_5_mid2_v_reg_1142 <= {{add_ln30_fu_670_p2[4:1]}};
        zext_ln23_reg_1170[2 : 0] <= zext_ln23_fu_776_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln23_10_reg_1314 <= add_ln23_10_fu_941_p2;
        add_ln23_14_reg_1329 <= add_ln23_14_fu_971_p2;
        select_ln23_4_reg_1344 <= select_ln23_4_fu_977_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0))) begin
        add_ln30_1_reg_1359 <= grp_fu_1095_p3;
        tmp_0_1_reg_1390 <= grp_fu_494_p2;
        tmp_1_reg_1395 <= grp_fu_498_p2;
        tmp_8_reg_1385 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln30_1_reg_1359_pp0_iter10_reg <= add_ln30_1_reg_1359_pp0_iter9_reg;
        add_ln30_1_reg_1359_pp0_iter11_reg <= add_ln30_1_reg_1359_pp0_iter10_reg;
        add_ln30_1_reg_1359_pp0_iter12_reg <= add_ln30_1_reg_1359_pp0_iter11_reg;
        add_ln30_1_reg_1359_pp0_iter13_reg <= add_ln30_1_reg_1359_pp0_iter12_reg;
        add_ln30_1_reg_1359_pp0_iter14_reg <= add_ln30_1_reg_1359_pp0_iter13_reg;
        add_ln30_1_reg_1359_pp0_iter2_reg <= add_ln30_1_reg_1359;
        add_ln30_1_reg_1359_pp0_iter3_reg <= add_ln30_1_reg_1359_pp0_iter2_reg;
        add_ln30_1_reg_1359_pp0_iter4_reg <= add_ln30_1_reg_1359_pp0_iter3_reg;
        add_ln30_1_reg_1359_pp0_iter5_reg <= add_ln30_1_reg_1359_pp0_iter4_reg;
        add_ln30_1_reg_1359_pp0_iter6_reg <= add_ln30_1_reg_1359_pp0_iter5_reg;
        add_ln30_1_reg_1359_pp0_iter7_reg <= add_ln30_1_reg_1359_pp0_iter6_reg;
        add_ln30_1_reg_1359_pp0_iter8_reg <= add_ln30_1_reg_1359_pp0_iter7_reg;
        add_ln30_1_reg_1359_pp0_iter9_reg <= add_ln30_1_reg_1359_pp0_iter8_reg;
        icmp_ln8_reg_1102 <= icmp_ln8_fu_592_p2;
        icmp_ln8_reg_1102_pp0_iter10_reg <= icmp_ln8_reg_1102_pp0_iter9_reg;
        icmp_ln8_reg_1102_pp0_iter11_reg <= icmp_ln8_reg_1102_pp0_iter10_reg;
        icmp_ln8_reg_1102_pp0_iter12_reg <= icmp_ln8_reg_1102_pp0_iter11_reg;
        icmp_ln8_reg_1102_pp0_iter13_reg <= icmp_ln8_reg_1102_pp0_iter12_reg;
        icmp_ln8_reg_1102_pp0_iter14_reg <= icmp_ln8_reg_1102_pp0_iter13_reg;
        icmp_ln8_reg_1102_pp0_iter1_reg <= icmp_ln8_reg_1102;
        icmp_ln8_reg_1102_pp0_iter2_reg <= icmp_ln8_reg_1102_pp0_iter1_reg;
        icmp_ln8_reg_1102_pp0_iter3_reg <= icmp_ln8_reg_1102_pp0_iter2_reg;
        icmp_ln8_reg_1102_pp0_iter4_reg <= icmp_ln8_reg_1102_pp0_iter3_reg;
        icmp_ln8_reg_1102_pp0_iter5_reg <= icmp_ln8_reg_1102_pp0_iter4_reg;
        icmp_ln8_reg_1102_pp0_iter6_reg <= icmp_ln8_reg_1102_pp0_iter5_reg;
        icmp_ln8_reg_1102_pp0_iter7_reg <= icmp_ln8_reg_1102_pp0_iter6_reg;
        icmp_ln8_reg_1102_pp0_iter8_reg <= icmp_ln8_reg_1102_pp0_iter7_reg;
        icmp_ln8_reg_1102_pp0_iter9_reg <= icmp_ln8_reg_1102_pp0_iter8_reg;
        select_ln30_7_reg_1148_pp0_iter10_reg <= select_ln30_7_reg_1148_pp0_iter9_reg;
        select_ln30_7_reg_1148_pp0_iter11_reg <= select_ln30_7_reg_1148_pp0_iter10_reg;
        select_ln30_7_reg_1148_pp0_iter12_reg <= select_ln30_7_reg_1148_pp0_iter11_reg;
        select_ln30_7_reg_1148_pp0_iter13_reg <= select_ln30_7_reg_1148_pp0_iter12_reg;
        select_ln30_7_reg_1148_pp0_iter14_reg <= select_ln30_7_reg_1148_pp0_iter13_reg;
        select_ln30_7_reg_1148_pp0_iter1_reg <= select_ln30_7_reg_1148;
        select_ln30_7_reg_1148_pp0_iter2_reg <= select_ln30_7_reg_1148_pp0_iter1_reg;
        select_ln30_7_reg_1148_pp0_iter3_reg <= select_ln30_7_reg_1148_pp0_iter2_reg;
        select_ln30_7_reg_1148_pp0_iter4_reg <= select_ln30_7_reg_1148_pp0_iter3_reg;
        select_ln30_7_reg_1148_pp0_iter5_reg <= select_ln30_7_reg_1148_pp0_iter4_reg;
        select_ln30_7_reg_1148_pp0_iter6_reg <= select_ln30_7_reg_1148_pp0_iter5_reg;
        select_ln30_7_reg_1148_pp0_iter7_reg <= select_ln30_7_reg_1148_pp0_iter6_reg;
        select_ln30_7_reg_1148_pp0_iter8_reg <= select_ln30_7_reg_1148_pp0_iter7_reg;
        select_ln30_7_reg_1148_pp0_iter9_reg <= select_ln30_7_reg_1148_pp0_iter8_reg;
        tmp_0_1_reg_1390_pp0_iter2_reg <= tmp_0_1_reg_1390;
        tmp_1_reg_1395_pp0_iter2_reg <= tmp_1_reg_1395;
        tmp_1_reg_1395_pp0_iter3_reg <= tmp_1_reg_1395_pp0_iter2_reg;
        tmp_1_reg_1395_pp0_iter4_reg <= tmp_1_reg_1395_pp0_iter3_reg;
        tmp_1_reg_1395_pp0_iter5_reg <= tmp_1_reg_1395_pp0_iter4_reg;
        trunc_ln30_reg_1122_pp0_iter1_reg <= trunc_ln30_reg_1122;
        zext_ln23_reg_1170_pp0_iter10_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter9_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter11_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter10_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter12_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter11_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter1_reg[2 : 0] <= zext_ln23_reg_1170[2 : 0];
        zext_ln23_reg_1170_pp0_iter2_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter1_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter3_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter2_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter4_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter3_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter5_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter4_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter6_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter5_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter7_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter6_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter8_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter7_reg[2 : 0];
        zext_ln23_reg_1170_pp0_iter9_reg[2 : 0] <= zext_ln23_reg_1170_pp0_iter8_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln8_reg_1106 <= add_ln8_fu_598_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1102 == 1'd0))) begin
        conv_1_weights_0_0_l_reg_1274 <= conv_1_weights_0_0_q0;
        conv_1_weights_0_1_l_reg_1279 <= conv_1_weights_0_1_q0;
        conv_1_weights_0_2_l_reg_1284 <= conv_1_weights_0_2_q0;
        conv_1_weights_1_0_l_reg_1289 <= conv_1_weights_1_0_q0;
        conv_1_weights_1_1_l_reg_1294 <= conv_1_weights_1_1_q0;
        conv_1_weights_1_2_l_reg_1299 <= conv_1_weights_1_2_q0;
        sub_ln23_1_reg_1218[9 : 2] <= sub_ln23_1_fu_842_p2[9 : 2];
        sub_ln23_reg_1213[9 : 2] <= sub_ln23_fu_814_p2[9 : 2];
        zext_ln30_1_reg_1223[4 : 0] <= zext_ln30_1_fu_848_p1[4 : 0];
        zext_ln30_3_reg_1249[4 : 0] <= zext_ln30_3_fu_875_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        f_reg_1349 <= f_fu_984_p2;
        select_ln11_reg_1354 <= select_ln11_fu_989_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_543 <= grp_fu_520_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_592_p2 == 1'd0))) begin
        select_ln30_1_reg_1116 <= select_ln30_1_fu_618_p3;
        select_ln30_8_reg_1154 <= select_ln30_8_fu_740_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln8_reg_1102_pp0_iter1_reg == 1'd0))) begin
        tmp_0_2_reg_1415 <= grp_fu_490_p2;
        tmp_1_1_reg_1420 <= grp_fu_494_p2;
        tmp_1_2_reg_1425 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_0_2_reg_1415_pp0_iter2_reg <= tmp_0_2_reg_1415;
        tmp_0_2_reg_1415_pp0_iter3_reg <= tmp_0_2_reg_1415_pp0_iter2_reg;
        tmp_1_1_reg_1420_pp0_iter2_reg <= tmp_1_1_reg_1420;
        tmp_1_1_reg_1420_pp0_iter3_reg <= tmp_1_1_reg_1420_pp0_iter2_reg;
        tmp_1_1_reg_1420_pp0_iter4_reg <= tmp_1_1_reg_1420_pp0_iter3_reg;
        tmp_1_1_reg_1420_pp0_iter5_reg <= tmp_1_1_reg_1420_pp0_iter4_reg;
        tmp_1_1_reg_1420_pp0_iter6_reg <= tmp_1_1_reg_1420_pp0_iter5_reg;
        tmp_1_2_reg_1425_pp0_iter2_reg <= tmp_1_2_reg_1425;
        tmp_1_2_reg_1425_pp0_iter3_reg <= tmp_1_2_reg_1425_pp0_iter2_reg;
        tmp_1_2_reg_1425_pp0_iter4_reg <= tmp_1_2_reg_1425_pp0_iter3_reg;
        tmp_1_2_reg_1425_pp0_iter5_reg <= tmp_1_2_reg_1425_pp0_iter4_reg;
        tmp_1_2_reg_1425_pp0_iter6_reg <= tmp_1_2_reg_1425_pp0_iter5_reg;
        tmp_1_2_reg_1425_pp0_iter7_reg <= tmp_1_2_reg_1425_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_2_1_reg_1455 <= grp_fu_494_p2;
        tmp_2_2_reg_1460 <= grp_fu_498_p2;
        tmp_2_reg_1450 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_2_1_reg_1455_pp0_iter2_reg <= tmp_2_1_reg_1455;
        tmp_2_1_reg_1455_pp0_iter3_reg <= tmp_2_1_reg_1455_pp0_iter2_reg;
        tmp_2_1_reg_1455_pp0_iter4_reg <= tmp_2_1_reg_1455_pp0_iter3_reg;
        tmp_2_1_reg_1455_pp0_iter5_reg <= tmp_2_1_reg_1455_pp0_iter4_reg;
        tmp_2_1_reg_1455_pp0_iter6_reg <= tmp_2_1_reg_1455_pp0_iter5_reg;
        tmp_2_1_reg_1455_pp0_iter7_reg <= tmp_2_1_reg_1455_pp0_iter6_reg;
        tmp_2_1_reg_1455_pp0_iter8_reg <= tmp_2_1_reg_1455_pp0_iter7_reg;
        tmp_2_1_reg_1455_pp0_iter9_reg <= tmp_2_1_reg_1455_pp0_iter8_reg;
        tmp_2_2_reg_1460_pp0_iter10_reg <= tmp_2_2_reg_1460_pp0_iter9_reg;
        tmp_2_2_reg_1460_pp0_iter11_reg <= tmp_2_2_reg_1460_pp0_iter10_reg;
        tmp_2_2_reg_1460_pp0_iter2_reg <= tmp_2_2_reg_1460;
        tmp_2_2_reg_1460_pp0_iter3_reg <= tmp_2_2_reg_1460_pp0_iter2_reg;
        tmp_2_2_reg_1460_pp0_iter4_reg <= tmp_2_2_reg_1460_pp0_iter3_reg;
        tmp_2_2_reg_1460_pp0_iter5_reg <= tmp_2_2_reg_1460_pp0_iter4_reg;
        tmp_2_2_reg_1460_pp0_iter6_reg <= tmp_2_2_reg_1460_pp0_iter5_reg;
        tmp_2_2_reg_1460_pp0_iter7_reg <= tmp_2_2_reg_1460_pp0_iter6_reg;
        tmp_2_2_reg_1460_pp0_iter8_reg <= tmp_2_2_reg_1460_pp0_iter7_reg;
        tmp_2_2_reg_1460_pp0_iter9_reg <= tmp_2_2_reg_1460_pp0_iter8_reg;
        tmp_2_reg_1450_pp0_iter2_reg <= tmp_2_reg_1450;
        tmp_2_reg_1450_pp0_iter3_reg <= tmp_2_reg_1450_pp0_iter2_reg;
        tmp_2_reg_1450_pp0_iter4_reg <= tmp_2_reg_1450_pp0_iter3_reg;
        tmp_2_reg_1450_pp0_iter5_reg <= tmp_2_reg_1450_pp0_iter4_reg;
        tmp_2_reg_1450_pp0_iter6_reg <= tmp_2_reg_1450_pp0_iter5_reg;
        tmp_2_reg_1450_pp0_iter7_reg <= tmp_2_reg_1450_pp0_iter6_reg;
        tmp_2_reg_1450_pp0_iter8_reg <= tmp_2_reg_1450_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_4_0_1_reg_1470 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102_pp0_iter4_reg == 1'd0))) begin
        w_sum_4_0_2_reg_1475 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_4_1_1_reg_1485 <= grp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102_pp0_iter8_reg == 1'd0))) begin
        w_sum_4_1_2_reg_1490 <= grp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1102_pp0_iter6_reg == 1'd0))) begin
        w_sum_4_1_reg_1480 <= grp_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_4_2_1_reg_1500 <= grp_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1102_pp0_iter12_reg == 1'd0))) begin
        w_sum_4_2_2_reg_1505 <= grp_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1102_pp0_iter10_reg == 1'd0))) begin
        w_sum_4_2_reg_1495 <= grp_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1102_pp0_iter2_reg == 1'd0))) begin
        w_sum_4_reg_1465 <= grp_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1102_pp0_iter14_reg == 1'd0))) begin
        w_sum_reg_1520 <= grp_fu_485_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_592_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_454_p4 = select_ln30_8_reg_1154;
    end else begin
        ap_phi_mux_c_0_phi_fu_454_p4 = c_0_reg_450;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_465_p4 = f_reg_1349;
    end else begin
        ap_phi_mux_f_0_phi_fu_465_p4 = f_0_reg_461;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        ap_phi_mux_indvar_flatten39_phi_fu_421_p4 = add_ln8_reg_1106;
    end else begin
        ap_phi_mux_indvar_flatten39_phi_fu_421_p4 = indvar_flatten39_reg_417;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_443_p4 = select_ln11_reg_1354;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_443_p4 = indvar_flatten_reg_439;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_432_p4 = select_ln30_1_reg_1116;
    end else begin
        ap_phi_mux_r_0_phi_fu_432_p4 = r_0_reg_428;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_1_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_2_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102_pp0_iter14_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_472_p0 = w_sum_4_0_1_reg_1470;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_472_p0 = w_sum_4_reg_1465;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_472_p0 = tmp_8_reg_1385;
    end else begin
        grp_fu_472_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_472_p1 = tmp_0_2_reg_1415_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_472_p1 = tmp_0_1_reg_1390_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_472_p1 = 32'd0;
    end else begin
        grp_fu_472_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_477_p0 = w_sum_4_1_1_reg_1485;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_477_p0 = w_sum_4_1_reg_1480;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_477_p0 = w_sum_4_0_2_reg_1475;
    end else begin
        grp_fu_477_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_477_p1 = tmp_1_2_reg_1425_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_477_p1 = tmp_1_1_reg_1420_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_477_p1 = tmp_1_reg_1395_pp0_iter5_reg;
    end else begin
        grp_fu_477_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_481_p0 = w_sum_4_2_1_reg_1500;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_481_p0 = w_sum_4_2_reg_1495;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_481_p0 = w_sum_4_1_2_reg_1490;
    end else begin
        grp_fu_481_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_481_p1 = tmp_2_2_reg_1460_pp0_iter11_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_481_p1 = tmp_2_1_reg_1455_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_481_p1 = tmp_2_reg_1450_pp0_iter8_reg;
    end else begin
        grp_fu_481_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_490_p0 = conv_1_weights_2_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_490_p0 = conv_1_weights_0_2_l_reg_1284;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_490_p0 = conv_1_weights_0_0_l_reg_1274;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_490_p1 = reg_543;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_490_p1 = grp_fu_511_p3;
    end else begin
        grp_fu_490_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_494_p0 = conv_1_weights_2_1_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_494_p0 = conv_1_weights_1_1_l_reg_1294;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_494_p0 = conv_1_weights_0_1_l_reg_1279;
    end else begin
        grp_fu_494_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_494_p1 = grp_fu_511_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_494_p1 = select_ln23_4_reg_1344;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_494_p1 = grp_fu_520_p3;
    end else begin
        grp_fu_494_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p0 = conv_1_weights_2_2_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_498_p0 = conv_1_weights_1_2_l_reg_1299;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_498_p0 = conv_1_weights_1_0_l_reg_1289;
    end else begin
        grp_fu_498_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_498_p1 = grp_fu_520_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_498_p1 = grp_fu_529_p3;
    end else begin
        grp_fu_498_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_511_p0 = trunc_ln30_reg_1122_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_511_p0 = trunc_ln30_reg_1122;
    end else begin
        grp_fu_511_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        grp_fu_520_p0 = trunc_ln30_reg_1122_pp0_iter1_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_520_p0 = trunc_ln30_reg_1122;
    end else begin
        grp_fu_520_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_address0 = sext_ln23_1_fu_998_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address0 = zext_ln23_12_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address0 = zext_ln23_11_fu_954_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (trunc_ln30_reg_1122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address0 = zext_ln23_8_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address0 = zext_ln23_7_fu_857_p1;
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_address1 = zext_ln23_13_fu_1003_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_0_address1 = sext_ln23_fu_935_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (trunc_ln30_reg_1122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address1 = zext_ln23_10_fu_896_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_0_address1 = zext_ln23_9_fu_884_p1;
    end else begin
        input_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln30_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0)) | ((trunc_ln30_reg_1122 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln30_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_address0 = sext_ln23_1_fu_998_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address0 = zext_ln23_12_fu_965_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address0 = zext_ln23_11_fu_954_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address0 = zext_ln23_8_fu_869_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (trunc_ln30_reg_1122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address0 = zext_ln23_7_fu_857_p1;
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_address1 = zext_ln23_13_fu_1003_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_1_address1 = sext_ln23_fu_935_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address1 = zext_ln23_10_fu_896_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (trunc_ln30_reg_1122 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0))) begin
        input_1_address1 = zext_ln23_9_fu_884_p1;
    end else begin
        input_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln30_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0)) | ((trunc_ln30_reg_1122 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((trunc_ln30_reg_1122 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1102 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (trunc_ln30_reg_1122 == 1'd0) & (icmp_ln8_reg_1102 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        input_1_ce1 = 1'b1;
    end else begin
        input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_592_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_592_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_786_p2 = (8'd1 + ap_phi_mux_indvar_flatten_phi_fu_443_p4);

assign add_ln23_10_fu_941_p2 = (sub_ln23_2_fu_924_p2 + zext_ln30_3_reg_1249);

assign add_ln23_11_fu_762_p2 = (5'd3 + select_ln30_fu_610_p3);

assign add_ln23_12_fu_949_p2 = (sub_ln23_reg_1213 + zext_ln30_4_fu_946_p1);

assign add_ln23_13_fu_960_p2 = (sub_ln23_1_reg_1218 + zext_ln30_4_fu_946_p1);

assign add_ln23_14_fu_971_p2 = (sub_ln23_2_fu_924_p2 + zext_ln30_4_fu_946_p1);

assign add_ln23_1_fu_586_p2 = (ap_phi_mux_c_0_phi_fu_454_p4 + 5'd2);

assign add_ln23_3_fu_720_p2 = (5'd1 + select_ln30_fu_610_p3);

assign add_ln23_4_fu_851_p2 = (sub_ln23_fu_814_p2 + zext_ln30_1_fu_848_p1);

assign add_ln23_5_fu_863_p2 = (sub_ln23_1_fu_842_p2 + zext_ln30_1_fu_848_p1);

assign add_ln23_6_fu_930_p2 = (sub_ln23_2_fu_924_p2 + zext_ln30_1_reg_1223);

assign add_ln23_7_fu_748_p2 = (5'd2 + select_ln30_fu_610_p3);

assign add_ln23_8_fu_878_p2 = (sub_ln23_fu_814_p2 + zext_ln30_3_fu_875_p1);

assign add_ln23_9_fu_890_p2 = (sub_ln23_1_fu_842_p2 + zext_ln30_3_fu_875_p1);

assign add_ln23_fu_638_p2 = (5'd2 + ap_phi_mux_r_0_phi_fu_432_p4);

assign add_ln30_2_fu_1035_p2 = (sub_ln30_fu_1026_p2 + zext_ln30_5_fu_1032_p1);

assign add_ln30_fu_670_p2 = (ap_phi_mux_r_0_phi_fu_432_p4 + select_ln30_4_fu_662_p3);

assign add_ln8_fu_598_p2 = (ap_phi_mux_indvar_flatten39_phi_fu_421_p4 + 12'd1);

assign and_ln29_fu_1081_p2 = (or_ln29_fu_1075_p2 & grp_fu_505_p2);

assign and_ln30_fu_714_p2 = (xor_ln30_fu_702_p2 & icmp_ln14_fu_708_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln29_fu_1046_p1 = w_sum_reg_1520;

assign c_fu_580_p2 = (ap_phi_mux_c_0_phi_fu_454_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln23_reg_1170_pp0_iter12_reg;

assign conv_1_weights_0_0_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_0_1_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_0_2_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_1_0_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_1_1_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_1_2_address0 = zext_ln23_fu_776_p1;

assign conv_1_weights_2_0_address0 = zext_ln23_reg_1170;

assign conv_1_weights_2_1_address0 = zext_ln23_reg_1170;

assign conv_1_weights_2_2_address0 = zext_ln23_reg_1170;

assign conv_out_address0 = zext_ln30_6_fu_1041_p1;

assign conv_out_d0 = ((and_ln29_fu_1081_p2[0:0] === 1'b1) ? w_sum_reg_1520 : 32'd0);

assign f_fu_984_p2 = (3'd1 + select_ln30_7_reg_1148);

assign grp_fu_1095_p0 = 10'd26;

assign grp_fu_1095_p1 = grp_fu_1095_p10;

assign grp_fu_1095_p10 = select_ln30_1_reg_1116;

assign grp_fu_1095_p2 = zext_ln30_1_reg_1223;

assign grp_fu_511_p3 = ((grp_fu_511_p0[0:0] === 1'b1) ? input_1_q0 : input_0_q0);

assign grp_fu_520_p3 = ((grp_fu_520_p0[0:0] === 1'b1) ? input_1_q1 : input_0_q1);

assign grp_fu_529_p3 = ((trunc_ln30_reg_1122[0:0] === 1'b1) ? input_0_q0 : input_1_q0);

assign icmp_ln11_fu_604_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_443_p4 == 8'd156) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_708_p2 = ((ap_phi_mux_f_0_phi_fu_465_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1069_p2 = ((trunc_ln29_fu_1059_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_1063_p2 = ((tmp_fu_1049_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_592_p2 = ((ap_phi_mux_indvar_flatten39_phi_fu_421_p4 == 12'd4056) ? 1'b1 : 1'b0);

assign lshr_ln23_1_fu_570_p4 = {{r_fu_564_p2[4:1]}};

assign lshr_ln23_1_mid1_fu_644_p4 = {{add_ln23_fu_638_p2[4:1]}};

assign lshr_ln_fu_554_p4 = {{ap_phi_mux_r_0_phi_fu_432_p4[4:1]}};

assign or_ln29_fu_1075_p2 = (icmp_ln29_fu_1063_p2 | icmp_ln29_7_fu_1069_p2);

assign or_ln30_fu_726_p2 = (icmp_ln11_fu_604_p2 | and_ln30_fu_714_p2);

assign p_shl_cast_fu_1008_p3 = {{add_ln30_1_reg_1359_pp0_iter14_reg}, {3'd0}};

assign r_fu_564_p2 = (ap_phi_mux_r_0_phi_fu_432_p4 + 5'd1);

assign select_ln11_fu_989_p3 = ((icmp_ln11_reg_1111[0:0] === 1'b1) ? 8'd1 : add_ln11_reg_1208);

assign select_ln23_4_fu_977_p3 = ((trunc_ln30_reg_1122[0:0] === 1'b1) ? input_0_q1 : input_1_q1);

assign select_ln30_10_fu_768_p3 = ((and_ln30_fu_714_p2[0:0] === 1'b1) ? add_ln23_11_fu_762_p2 : select_ln30_6_fu_694_p3);

assign select_ln30_1_fu_618_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? r_fu_564_p2 : ap_phi_mux_r_0_phi_fu_432_p4);

assign select_ln30_2_fu_630_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? lshr_ln23_1_fu_570_p4 : lshr_ln_fu_554_p4);

assign select_ln30_3_fu_654_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? lshr_ln23_1_mid1_fu_644_p4 : lshr_ln23_1_fu_570_p4);

assign select_ln30_4_fu_662_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln30_5_fu_686_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? 5'd1 : c_fu_580_p2);

assign select_ln30_6_fu_694_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? 5'd2 : add_ln23_1_fu_586_p2);

assign select_ln30_7_fu_732_p3 = ((or_ln30_fu_726_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_f_0_phi_fu_465_p4);

assign select_ln30_8_fu_740_p3 = ((and_ln30_fu_714_p2[0:0] === 1'b1) ? add_ln23_3_fu_720_p2 : select_ln30_fu_610_p3);

assign select_ln30_9_fu_754_p3 = ((and_ln30_fu_714_p2[0:0] === 1'b1) ? add_ln23_7_fu_748_p2 : select_ln30_5_fu_686_p3);

assign select_ln30_fu_610_p3 = ((icmp_ln11_fu_604_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_454_p4);

assign sext_ln23_1_fu_998_p1 = $signed(add_ln23_10_reg_1314);

assign sext_ln23_fu_935_p1 = $signed(add_ln23_6_fu_930_p2);

assign sub_ln23_1_fu_842_p2 = (zext_ln23_3_fu_827_p1 - zext_ln23_4_fu_838_p1);

assign sub_ln23_2_fu_924_p2 = (zext_ln23_5_fu_909_p1 - zext_ln23_6_fu_920_p1);

assign sub_ln23_fu_814_p2 = (zext_ln23_1_fu_799_p1 - zext_ln23_2_fu_810_p1);

assign sub_ln30_fu_1026_p2 = (p_shl_cast_fu_1008_p3 - zext_ln30_2_fu_1022_p1);

assign tmp_10_fu_913_p3 = {{zext_ln23_5_mid2_v_reg_1142}, {2'd0}};

assign tmp_11_fu_792_p3 = {{select_ln30_2_reg_1130}, {5'd0}};

assign tmp_12_fu_803_p3 = {{select_ln30_2_reg_1130}, {2'd0}};

assign tmp_13_fu_820_p3 = {{select_ln30_3_reg_1136}, {5'd0}};

assign tmp_14_fu_831_p3 = {{select_ln30_3_reg_1136}, {2'd0}};

assign tmp_15_fu_1015_p3 = {{add_ln30_1_reg_1359_pp0_iter14_reg}, {1'd0}};

assign tmp_9_fu_902_p3 = {{zext_ln23_5_mid2_v_reg_1142}, {5'd0}};

assign tmp_fu_1049_p4 = {{bitcast_ln29_fu_1046_p1[30:23]}};

assign trunc_ln29_fu_1059_p1 = bitcast_ln29_fu_1046_p1[22:0];

assign trunc_ln30_fu_626_p1 = select_ln30_1_fu_618_p3[0:0];

assign xor_ln30_fu_702_p2 = (icmp_ln11_fu_604_p2 ^ 1'd1);

assign zext_ln23_10_fu_896_p1 = add_ln23_9_fu_890_p2;

assign zext_ln23_11_fu_954_p1 = add_ln23_12_fu_949_p2;

assign zext_ln23_12_fu_965_p1 = add_ln23_13_fu_960_p2;

assign zext_ln23_13_fu_1003_p1 = add_ln23_14_reg_1329;

assign zext_ln23_1_fu_799_p1 = tmp_11_fu_792_p3;

assign zext_ln23_2_fu_810_p1 = tmp_12_fu_803_p3;

assign zext_ln23_3_fu_827_p1 = tmp_13_fu_820_p3;

assign zext_ln23_4_fu_838_p1 = tmp_14_fu_831_p3;

assign zext_ln23_5_fu_909_p1 = tmp_9_fu_902_p3;

assign zext_ln23_6_fu_920_p1 = tmp_10_fu_913_p3;

assign zext_ln23_7_fu_857_p1 = add_ln23_4_fu_851_p2;

assign zext_ln23_8_fu_869_p1 = add_ln23_5_fu_863_p2;

assign zext_ln23_9_fu_884_p1 = add_ln23_8_fu_878_p2;

assign zext_ln23_fu_776_p1 = select_ln30_7_fu_732_p3;

assign zext_ln30_1_fu_848_p1 = select_ln30_8_reg_1154;

assign zext_ln30_2_fu_1022_p1 = tmp_15_fu_1015_p3;

assign zext_ln30_3_fu_875_p1 = select_ln30_9_reg_1160;

assign zext_ln30_4_fu_946_p1 = select_ln30_10_reg_1165;

assign zext_ln30_5_fu_1032_p1 = select_ln30_7_reg_1148_pp0_iter14_reg;

assign zext_ln30_6_fu_1041_p1 = add_ln30_2_fu_1035_p2;

always @ (posedge ap_clk) begin
    zext_ln23_reg_1170[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter2_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter3_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter4_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter5_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter6_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter7_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter8_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter9_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter10_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter11_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln23_reg_1170_pp0_iter12_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    sub_ln23_reg_1213[1:0] <= 2'b00;
    sub_ln23_1_reg_1218[1:0] <= 2'b00;
    zext_ln30_1_reg_1223[9:5] <= 5'b00000;
    zext_ln30_3_reg_1249[9:5] <= 5'b00000;
end

endmodule //conv_1
