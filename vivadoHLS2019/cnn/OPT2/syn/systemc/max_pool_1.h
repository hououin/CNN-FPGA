// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32ndEe.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_out< sc_lv<12> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<12> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32ndEe<1,2,32,32,1>* cnn_fcmp_32ns_32ndEe_U33;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten59_reg_138;
    sc_signal< sc_lv<3> > f_0_reg_149;
    sc_signal< sc_lv<9> > indvar_flatten22_reg_161;
    sc_signal< sc_lv<4> > r_0_reg_172;
    sc_signal< sc_lv<6> > indvar_flatten_reg_183;
    sc_signal< sc_lv<4> > c_0_reg_195;
    sc_signal< sc_lv<32> > max_0_reg_207;
    sc_signal< sc_lv<2> > mpr_0_reg_219;
    sc_signal< sc_lv<5> > shl_ln2_fu_235_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_861;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > or_ln27_fu_243_p2;
    sc_signal< sc_lv<5> > or_ln27_reg_866;
    sc_signal< sc_lv<1> > icmp_ln10_fu_249_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_871;
    sc_signal< sc_lv<1> > icmp_ln10_reg_871_pp0_iter1_reg;
    sc_signal< sc_lv<11> > add_ln10_fu_255_p2;
    sc_signal< sc_lv<11> > add_ln10_reg_875;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_261_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_880;
    sc_signal< sc_lv<4> > select_ln29_5_fu_267_p3;
    sc_signal< sc_lv<4> > select_ln29_5_reg_887;
    sc_signal< sc_lv<1> > and_ln29_8_fu_315_p2;
    sc_signal< sc_lv<1> > and_ln29_8_reg_892;
    sc_signal< sc_lv<4> > r_fu_321_p2;
    sc_signal< sc_lv<4> > r_reg_898;
    sc_signal< sc_lv<1> > and_ln13_fu_355_p2;
    sc_signal< sc_lv<1> > and_ln13_reg_903;
    sc_signal< sc_lv<1> > or_ln16_2_fu_367_p2;
    sc_signal< sc_lv<1> > or_ln16_2_reg_910;
    sc_signal< sc_lv<2> > select_ln16_6_fu_373_p3;
    sc_signal< sc_lv<2> > select_ln16_6_reg_915;
    sc_signal< sc_lv<10> > mul_ln29_fu_395_p2;
    sc_signal< sc_lv<10> > mul_ln29_reg_920;
    sc_signal< sc_lv<9> > add_ln13_2_fu_401_p2;
    sc_signal< sc_lv<9> > add_ln13_2_reg_926;
    sc_signal< sc_lv<3> > select_ln29_6_fu_413_p3;
    sc_signal< sc_lv<3> > select_ln29_6_reg_931;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<4> > select_ln13_7_fu_436_p3;
    sc_signal< sc_lv<4> > select_ln13_7_reg_937;
    sc_signal< sc_lv<4> > select_ln16_9_fu_497_p3;
    sc_signal< sc_lv<4> > select_ln16_9_reg_943;
    sc_signal< sc_lv<2> > mpr_fu_588_p2;
    sc_signal< sc_lv<2> > mpr_reg_959;
    sc_signal< sc_lv<6> > select_ln16_10_fu_599_p3;
    sc_signal< sc_lv<6> > select_ln16_10_reg_965;
    sc_signal< sc_lv<9> > select_ln13_10_fu_607_p3;
    sc_signal< sc_lv<9> > select_ln13_10_reg_970;
    sc_signal< sc_lv<32> > select_ln16_fu_613_p3;
    sc_signal< sc_lv<32> > select_ln16_reg_975;
    sc_signal< sc_lv<32> > conv_1_out_load_reg_982;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > conv_1_out_load_1_reg_989;
    sc_signal< sc_lv<1> > icmp_ln20_2_fu_621_p2;
    sc_signal< sc_lv<1> > icmp_ln20_2_reg_996;
    sc_signal< sc_lv<32> > select_ln29_fu_720_p3;
    sc_signal< sc_lv<32> > select_ln29_reg_1000;
    sc_signal< sc_lv<11> > add_ln36_3_fu_762_p2;
    sc_signal< sc_lv<11> > add_ln36_3_reg_1007;
    sc_signal< sc_lv<32> > select_ln29_2_fu_850_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_indvar_flatten59_phi_fu_142_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_f_0_phi_fu_153_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<9> > ap_phi_mux_indvar_flatten22_phi_fu_165_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_176_p4;
    sc_signal< sc_lv<6> > ap_phi_mux_indvar_flatten_phi_fu_187_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_199_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_max_0_phi_fu_211_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_223_p4;
    sc_signal< sc_lv<64> > zext_ln29_4_fu_541_p1;
    sc_signal< sc_lv<64> > zext_ln29_6_fu_583_p1;
    sc_signal< sc_lv<64> > zext_ln36_6_fu_857_p1;
    sc_signal< sc_lv<32> > grp_fu_230_p0;
    sc_signal< sc_lv<32> > grp_fu_230_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_275_p3;
    sc_signal< sc_lv<1> > icmp_ln20_fu_297_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_291_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_309_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_327_p3;
    sc_signal< sc_lv<5> > select_ln29_7_fu_283_p3;
    sc_signal< sc_lv<1> > xor_ln13_fu_343_p2;
    sc_signal< sc_lv<1> > and_ln29_7_fu_303_p2;
    sc_signal< sc_lv<1> > or_ln13_2_fu_349_p2;
    sc_signal< sc_lv<1> > or_ln16_fu_361_p2;
    sc_signal< sc_lv<5> > select_ln13_6_fu_335_p3;
    sc_signal< sc_lv<5> > zext_ln20_fu_381_p1;
    sc_signal< sc_lv<5> > i_fu_385_p2;
    sc_signal< sc_lv<5> > mul_ln29_fu_395_p1;
    sc_signal< sc_lv<3> > f_fu_407_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_424_p2;
    sc_signal< sc_lv<4> > select_ln13_fu_428_p3;
    sc_signal< sc_lv<4> > c_fu_455_p2;
    sc_signal< sc_lv<5> > shl_ln27_mid1_fu_461_p3;
    sc_signal< sc_lv<5> > select_ln13_8_fu_441_p3;
    sc_signal< sc_lv<5> > select_ln16_7_fu_469_p3;
    sc_signal< sc_lv<5> > or_ln27_2_fu_480_p2;
    sc_signal< sc_lv<5> > select_ln13_9_fu_448_p3;
    sc_signal< sc_lv<5> > select_ln16_8_fu_486_p3;
    sc_signal< sc_lv<10> > zext_ln16_fu_476_p1;
    sc_signal< sc_lv<10> > add_ln29_fu_504_p2;
    sc_signal< sc_lv<11> > tmp_fu_517_p3;
    sc_signal< sc_lv<13> > p_shl3_cast_fu_509_p3;
    sc_signal< sc_lv<13> > zext_ln29_3_fu_525_p1;
    sc_signal< sc_lv<13> > zext_ln26_2_fu_420_p1;
    sc_signal< sc_lv<13> > sub_ln29_fu_529_p2;
    sc_signal< sc_lv<13> > add_ln29_4_fu_535_p2;
    sc_signal< sc_lv<10> > zext_ln16_2_fu_493_p1;
    sc_signal< sc_lv<10> > add_ln29_5_fu_546_p2;
    sc_signal< sc_lv<11> > tmp_6_fu_559_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_551_p3;
    sc_signal< sc_lv<13> > zext_ln29_5_fu_567_p1;
    sc_signal< sc_lv<13> > sub_ln29_1_fu_571_p2;
    sc_signal< sc_lv<13> > add_ln29_6_fu_577_p2;
    sc_signal< sc_lv<6> > add_ln16_fu_593_p2;
    sc_signal< sc_lv<4> > mul_ln36_fu_632_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_638_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_4_fu_655_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_641_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_651_p1;
    sc_signal< sc_lv<1> > icmp_ln29_8_fu_678_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_672_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_658_p4;
    sc_signal< sc_lv<23> > trunc_ln29_4_fu_668_p1;
    sc_signal< sc_lv<1> > icmp_ln29_10_fu_696_p2;
    sc_signal< sc_lv<1> > icmp_ln29_9_fu_690_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_684_p2;
    sc_signal< sc_lv<1> > or_ln29_4_fu_702_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_708_p2;
    sc_signal< sc_lv<1> > grp_fu_230_p2;
    sc_signal< sc_lv<1> > and_ln29_4_fu_714_p2;
    sc_signal< sc_lv<8> > zext_ln36_4_fu_727_p1;
    sc_signal< sc_lv<8> > mul_ln36_fu_632_p2;
    sc_signal< sc_lv<8> > add_ln36_fu_730_p2;
    sc_signal< sc_lv<9> > tmp_7_fu_744_p3;
    sc_signal< sc_lv<11> > p_shl5_cast_fu_736_p3;
    sc_signal< sc_lv<11> > zext_ln36_5_fu_752_p1;
    sc_signal< sc_lv<11> > zext_ln26_fu_626_p1;
    sc_signal< sc_lv<11> > sub_ln36_fu_756_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_5_fu_768_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_6_fu_785_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_771_p4;
    sc_signal< sc_lv<23> > trunc_ln29_5_fu_781_p1;
    sc_signal< sc_lv<1> > icmp_ln29_12_fu_808_p2;
    sc_signal< sc_lv<1> > icmp_ln29_11_fu_802_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_788_p4;
    sc_signal< sc_lv<23> > trunc_ln29_6_fu_798_p1;
    sc_signal< sc_lv<1> > icmp_ln29_14_fu_826_p2;
    sc_signal< sc_lv<1> > icmp_ln29_13_fu_820_p2;
    sc_signal< sc_lv<1> > or_ln29_5_fu_814_p2;
    sc_signal< sc_lv<1> > or_ln29_6_fu_832_p2;
    sc_signal< sc_lv<1> > and_ln29_5_fu_838_p2;
    sc_signal< sc_lv<1> > and_ln29_6_fu_844_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln29_fu_395_p10;
    sc_signal< sc_lv<8> > mul_ln36_fu_632_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<11> ap_const_lv11_7EC;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<9> ap_const_lv9_152;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<6> ap_const_lv6_1A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_255_p2();
    void thread_add_ln13_2_fu_401_p2();
    void thread_add_ln16_fu_593_p2();
    void thread_add_ln29_4_fu_535_p2();
    void thread_add_ln29_5_fu_546_p2();
    void thread_add_ln29_6_fu_577_p2();
    void thread_add_ln29_fu_504_p2();
    void thread_add_ln36_3_fu_762_p2();
    void thread_add_ln36_fu_730_p2();
    void thread_and_ln13_fu_355_p2();
    void thread_and_ln29_4_fu_714_p2();
    void thread_and_ln29_5_fu_838_p2();
    void thread_and_ln29_6_fu_844_p2();
    void thread_and_ln29_7_fu_303_p2();
    void thread_and_ln29_8_fu_315_p2();
    void thread_and_ln29_fu_708_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_199_p4();
    void thread_ap_phi_mux_f_0_phi_fu_153_p4();
    void thread_ap_phi_mux_indvar_flatten22_phi_fu_165_p4();
    void thread_ap_phi_mux_indvar_flatten59_phi_fu_142_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_187_p4();
    void thread_ap_phi_mux_max_0_phi_fu_211_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_223_p4();
    void thread_ap_phi_mux_r_0_phi_fu_176_p4();
    void thread_ap_ready();
    void thread_bitcast_ln29_4_fu_655_p1();
    void thread_bitcast_ln29_5_fu_768_p1();
    void thread_bitcast_ln29_6_fu_785_p1();
    void thread_bitcast_ln29_fu_638_p1();
    void thread_c_fu_455_p2();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_407_p2();
    void thread_grp_fu_230_p0();
    void thread_grp_fu_230_p1();
    void thread_i_fu_385_p2();
    void thread_icmp_ln10_fu_249_p2();
    void thread_icmp_ln13_fu_261_p2();
    void thread_icmp_ln16_fu_309_p2();
    void thread_icmp_ln20_2_fu_621_p2();
    void thread_icmp_ln20_fu_297_p2();
    void thread_icmp_ln29_10_fu_696_p2();
    void thread_icmp_ln29_11_fu_802_p2();
    void thread_icmp_ln29_12_fu_808_p2();
    void thread_icmp_ln29_13_fu_820_p2();
    void thread_icmp_ln29_14_fu_826_p2();
    void thread_icmp_ln29_8_fu_678_p2();
    void thread_icmp_ln29_9_fu_690_p2();
    void thread_icmp_ln29_fu_672_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpr_fu_588_p2();
    void thread_mul_ln29_fu_395_p1();
    void thread_mul_ln29_fu_395_p10();
    void thread_mul_ln29_fu_395_p2();
    void thread_mul_ln36_fu_632_p1();
    void thread_mul_ln36_fu_632_p10();
    void thread_mul_ln36_fu_632_p2();
    void thread_or_ln13_2_fu_349_p2();
    void thread_or_ln13_fu_424_p2();
    void thread_or_ln16_2_fu_367_p2();
    void thread_or_ln16_fu_361_p2();
    void thread_or_ln27_2_fu_480_p2();
    void thread_or_ln27_fu_243_p2();
    void thread_or_ln29_4_fu_702_p2();
    void thread_or_ln29_5_fu_814_p2();
    void thread_or_ln29_6_fu_832_p2();
    void thread_or_ln29_fu_684_p2();
    void thread_p_shl3_cast_fu_509_p3();
    void thread_p_shl5_cast_fu_736_p3();
    void thread_p_shl_cast_fu_551_p3();
    void thread_r_fu_321_p2();
    void thread_select_ln13_10_fu_607_p3();
    void thread_select_ln13_6_fu_335_p3();
    void thread_select_ln13_7_fu_436_p3();
    void thread_select_ln13_8_fu_441_p3();
    void thread_select_ln13_9_fu_448_p3();
    void thread_select_ln13_fu_428_p3();
    void thread_select_ln16_10_fu_599_p3();
    void thread_select_ln16_6_fu_373_p3();
    void thread_select_ln16_7_fu_469_p3();
    void thread_select_ln16_8_fu_486_p3();
    void thread_select_ln16_9_fu_497_p3();
    void thread_select_ln16_fu_613_p3();
    void thread_select_ln29_2_fu_850_p3();
    void thread_select_ln29_5_fu_267_p3();
    void thread_select_ln29_6_fu_413_p3();
    void thread_select_ln29_7_fu_283_p3();
    void thread_select_ln29_fu_720_p3();
    void thread_shl_ln26_mid1_fu_327_p3();
    void thread_shl_ln27_mid1_fu_461_p3();
    void thread_shl_ln2_fu_235_p3();
    void thread_shl_ln_fu_275_p3();
    void thread_sub_ln29_1_fu_571_p2();
    void thread_sub_ln29_fu_529_p2();
    void thread_sub_ln36_fu_756_p2();
    void thread_tmp_1_fu_658_p4();
    void thread_tmp_3_fu_771_p4();
    void thread_tmp_4_fu_788_p4();
    void thread_tmp_6_fu_559_p3();
    void thread_tmp_7_fu_744_p3();
    void thread_tmp_fu_517_p3();
    void thread_tmp_s_fu_641_p4();
    void thread_trunc_ln29_4_fu_668_p1();
    void thread_trunc_ln29_5_fu_781_p1();
    void thread_trunc_ln29_6_fu_798_p1();
    void thread_trunc_ln29_fu_651_p1();
    void thread_xor_ln13_fu_343_p2();
    void thread_xor_ln29_fu_291_p2();
    void thread_zext_ln16_2_fu_493_p1();
    void thread_zext_ln16_fu_476_p1();
    void thread_zext_ln20_fu_381_p1();
    void thread_zext_ln26_2_fu_420_p1();
    void thread_zext_ln26_fu_626_p1();
    void thread_zext_ln29_3_fu_525_p1();
    void thread_zext_ln29_4_fu_541_p1();
    void thread_zext_ln29_5_fu_567_p1();
    void thread_zext_ln29_6_fu_583_p1();
    void thread_zext_ln36_4_fu_727_p1();
    void thread_zext_ln36_5_fu_752_p1();
    void thread_zext_ln36_6_fu_857_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
