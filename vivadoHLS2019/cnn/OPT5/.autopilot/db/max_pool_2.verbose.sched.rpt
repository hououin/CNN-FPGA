

================================================================
== Vivado HLS Report for 'max_pool_2'
================================================================
* Date:           Sun Jul 14 19:46:21 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    17.357|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1603|  1603|  1603|  1603|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                      |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name              |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Col_Loop_Pool_Row_Loop  |  1601|  1601|         4|          2|          1|   800|    yes   |
        +--------------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (1.76ns)   --->   "br label %1" [cnn/max_pool_2.cpp:10]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 17.3>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten59 = phi i10 [ 0, %0 ], [ %add_ln10, %ifFalse ]" [cnn/max_pool_2.cpp:10]   --->   Operation 8 'phi' 'indvar_flatten59' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%f_0 = phi i5 [ 0, %0 ], [ %select_ln29_3, %ifFalse ]" [cnn/max_pool_2.cpp:29]   --->   Operation 9 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten22 = phi i7 [ 0, %0 ], [ %select_ln13_5, %ifFalse ]" [cnn/max_pool_2.cpp:13]   --->   Operation 10 'phi' 'indvar_flatten22' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %select_ln13_2, %ifFalse ]" [cnn/max_pool_2.cpp:13]   --->   Operation 11 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i5 [ 0, %0 ], [ %select_ln16_5, %ifFalse ]" [cnn/max_pool_2.cpp:16]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %select_ln16_4, %ifFalse ]" [cnn/max_pool_2.cpp:16]   --->   Operation 13 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%max_0 = phi float [ 0x3810000000000000, %0 ], [ %select_ln29_1, %ifFalse ]" [cnn/max_pool_2.cpp:29]   --->   Operation 14 'phi' 'max_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%mpr_0 = phi i2 [ 0, %0 ], [ %mpr, %ifFalse ]"   --->   Operation 15 'phi' 'mpr_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%shl_ln1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c_0, i1 false)" [cnn/max_pool_2.cpp:27]   --->   Operation 16 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%or_ln27 = or i4 %shl_ln1, 1" [cnn/max_pool_2.cpp:27]   --->   Operation 17 'or' 'or_ln27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.77ns)   --->   "%icmp_ln10 = icmp eq i10 %indvar_flatten59, -224" [cnn/max_pool_2.cpp:10]   --->   Operation 18 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.73ns)   --->   "%add_ln10 = add i10 %indvar_flatten59, 1" [cnn/max_pool_2.cpp:10]   --->   Operation 19 'add' 'add_ln10' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Pool_Row_Loop" [cnn/max_pool_2.cpp:10]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.78ns)   --->   "%f = add i5 1, %f_0" [cnn/max_pool_2.cpp:10]   --->   Operation 21 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.48ns)   --->   "%icmp_ln13 = icmp eq i7 %indvar_flatten22, 50" [cnn/max_pool_2.cpp:13]   --->   Operation 22 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.98ns)   --->   "%select_ln29_2 = select i1 %icmp_ln13, i3 0, i3 %r_0" [cnn/max_pool_2.cpp:29]   --->   Operation 23 'select' 'select_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.21ns)   --->   "%select_ln29_3 = select i1 %icmp_ln13, i5 %f, i5 %f_0" [cnn/max_pool_2.cpp:29]   --->   Operation 24 'select' 'select_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i5 %select_ln29_3 to i12" [cnn/max_pool_2.cpp:26]   --->   Operation 25 'zext' 'zext_ln26_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r_0, i1 false)" [cnn/max_pool_2.cpp:26]   --->   Operation 26 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%select_ln29_4 = select i1 %icmp_ln13, i4 0, i4 %shl_ln" [cnn/max_pool_2.cpp:29]   --->   Operation 27 'select' 'select_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.97ns)   --->   "%xor_ln29 = xor i1 %icmp_ln13, true" [cnn/max_pool_2.cpp:29]   --->   Operation 28 'xor' 'xor_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.95ns)   --->   "%icmp_ln20 = icmp eq i2 %mpr_0, -2" [cnn/max_pool_2.cpp:20]   --->   Operation 29 'icmp' 'icmp_ln20' <Predicate = (!icmp_ln10)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%and_ln29_4 = and i1 %icmp_ln20, %xor_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 30 'and' 'and_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.36ns)   --->   "%icmp_ln16 = icmp eq i5 %indvar_flatten, 10" [cnn/max_pool_2.cpp:16]   --->   Operation 31 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns)   --->   "%and_ln29_5 = and i1 %icmp_ln16, %xor_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 32 'and' 'and_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.65ns)   --->   "%r = add i3 1, %select_ln29_2" [cnn/max_pool_2.cpp:13]   --->   Operation 33 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.97ns)   --->   "%or_ln13 = or i1 %and_ln29_5, %icmp_ln13" [cnn/max_pool_2.cpp:13]   --->   Operation 34 'or' 'or_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.98ns)   --->   "%select_ln13 = select i1 %or_ln13, i3 0, i3 %c_0" [cnn/max_pool_2.cpp:13]   --->   Operation 35 'select' 'select_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%shl_ln26_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r, i1 false)" [cnn/max_pool_2.cpp:26]   --->   Operation 36 'bitconcatenate' 'shl_ln26_mid1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%select_ln13_1 = select i1 %and_ln29_5, i4 %shl_ln26_mid1, i4 %select_ln29_4" [cnn/max_pool_2.cpp:13]   --->   Operation 37 'select' 'select_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.98ns)   --->   "%select_ln13_2 = select i1 %and_ln29_5, i3 %r, i3 %select_ln29_2" [cnn/max_pool_2.cpp:13]   --->   Operation 38 'select' 'select_ln13_2' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln29)   --->   "%select_ln13_3 = select i1 %or_ln13, i4 0, i4 %shl_ln1" [cnn/max_pool_2.cpp:13]   --->   Operation 39 'select' 'select_ln13_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%select_ln13_4 = select i1 %or_ln13, i4 1, i4 %or_ln27" [cnn/max_pool_2.cpp:13]   --->   Operation 40 'select' 'select_ln13_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%xor_ln13 = xor i1 %icmp_ln16, true" [cnn/max_pool_2.cpp:13]   --->   Operation 41 'xor' 'xor_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node and_ln13)   --->   "%or_ln13_1 = or i1 %icmp_ln13, %xor_ln13" [cnn/max_pool_2.cpp:13]   --->   Operation 42 'or' 'or_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln13 = and i1 %and_ln29_4, %or_ln13_1" [cnn/max_pool_2.cpp:13]   --->   Operation 43 'and' 'and_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.65ns)   --->   "%c = add i3 1, %select_ln13" [cnn/max_pool_2.cpp:16]   --->   Operation 44 'add' 'c' <Predicate = (!icmp_ln10)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node or_ln16_1)   --->   "%or_ln16 = or i1 %and_ln13, %and_ln29_5" [cnn/max_pool_2.cpp:16]   --->   Operation 45 'or' 'or_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln16_1 = or i1 %or_ln16, %icmp_ln13" [cnn/max_pool_2.cpp:16]   --->   Operation 46 'or' 'or_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.99ns)   --->   "%select_ln16_1 = select i1 %or_ln16_1, i2 0, i2 %mpr_0" [cnn/max_pool_2.cpp:16]   --->   Operation 47 'select' 'select_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%shl_ln27_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %c, i1 false)" [cnn/max_pool_2.cpp:27]   --->   Operation 48 'bitconcatenate' 'shl_ln27_mid1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node add_ln29)   --->   "%select_ln16_2 = select i1 %and_ln13, i4 %shl_ln27_mid1, i4 %select_ln13_3" [cnn/max_pool_2.cpp:16]   --->   Operation 49 'select' 'select_ln16_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node add_ln29)   --->   "%zext_ln16 = zext i4 %select_ln16_2 to i8" [cnn/max_pool_2.cpp:16]   --->   Operation 50 'zext' 'zext_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%or_ln27_1 = or i4 %shl_ln27_mid1, 1" [cnn/max_pool_2.cpp:27]   --->   Operation 51 'or' 'or_ln27_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%select_ln16_3 = select i1 %and_ln13, i4 %or_ln27_1, i4 %select_ln13_4" [cnn/max_pool_2.cpp:16]   --->   Operation 52 'select' 'select_ln16_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln29_2)   --->   "%zext_ln16_1 = zext i4 %select_ln16_3 to i8" [cnn/max_pool_2.cpp:16]   --->   Operation 53 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.98ns)   --->   "%select_ln16_4 = select i1 %and_ln13, i3 %c, i3 %select_ln13" [cnn/max_pool_2.cpp:16]   --->   Operation 54 'select' 'select_ln16_4' <Predicate = (!icmp_ln10)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node i)   --->   "%zext_ln20 = zext i2 %select_ln16_1 to i4" [cnn/max_pool_2.cpp:20]   --->   Operation 55 'zext' 'zext_ln20' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.73ns) (out node of the LUT)   --->   "%i = add i4 %zext_ln20, %select_ln13_1" [cnn/max_pool_2.cpp:26]   --->   Operation 56 'add' 'i' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln29 = zext i4 %i to i8" [cnn/max_pool_2.cpp:29]   --->   Operation 57 'zext' 'zext_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (3.49ns)   --->   "%mul_ln29 = mul i8 11, %zext_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 58 'mul' 'mul_ln29' <Predicate = (!icmp_ln10)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln29 = add i8 %mul_ln29, %zext_ln16" [cnn/max_pool_2.cpp:29]   --->   Operation 59 'add' 'add_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_3_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %add_ln29, i4 0)" [cnn/max_pool_2.cpp:29]   --->   Operation 60 'bitconcatenate' 'tmp_3_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (1.54ns)   --->   "%add_ln29_1 = add i12 %tmp_3_cast, %zext_ln26_1" [cnn/max_pool_2.cpp:29]   --->   Operation 61 'add' 'add_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln29_1 = zext i12 %add_ln29_1 to i64" [cnn/max_pool_2.cpp:29]   --->   Operation 62 'zext' 'zext_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%conv_2_out_addr = getelementptr [1936 x float]* @conv_2_out, i64 0, i64 %zext_ln29_1" [cnn/max_pool_2.cpp:29]   --->   Operation 63 'getelementptr' 'conv_2_out_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.91ns) (out node of the LUT)   --->   "%add_ln29_2 = add i8 %mul_ln29, %zext_ln16_1" [cnn/max_pool_2.cpp:29]   --->   Operation 64 'add' 'add_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_11_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %add_ln29_2, i4 0)" [cnn/max_pool_2.cpp:29]   --->   Operation 65 'bitconcatenate' 'tmp_11_cast' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (1.54ns)   --->   "%add_ln29_3 = add i12 %tmp_11_cast, %zext_ln26_1" [cnn/max_pool_2.cpp:29]   --->   Operation 66 'add' 'add_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln29_2 = zext i12 %add_ln29_3 to i64" [cnn/max_pool_2.cpp:29]   --->   Operation 67 'zext' 'zext_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%conv_2_out_addr_1 = getelementptr [1936 x float]* @conv_2_out, i64 0, i64 %zext_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 68 'getelementptr' 'conv_2_out_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 69 [2/2] (3.25ns)   --->   "%conv_2_out_load = load float* %conv_2_out_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 69 'load' 'conv_2_out_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_2 : Operation 70 [2/2] (3.25ns)   --->   "%conv_2_out_load_1 = load float* %conv_2_out_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 70 'load' 'conv_2_out_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_2 : Operation 71 [1/1] (1.78ns)   --->   "%add_ln16 = add i5 %indvar_flatten, 1" [cnn/max_pool_2.cpp:16]   --->   Operation 71 'add' 'add_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.68>
ST_3 : Operation 72 [1/1] (0.69ns)   --->   "%select_ln16 = select i1 %or_ln16_1, float 0x3810000000000000, float %max_0" [cnn/max_pool_2.cpp:16]   --->   Operation 72 'select' 'select_ln16' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 73 [1/2] (3.25ns)   --->   "%conv_2_out_load = load float* %conv_2_out_addr, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 73 'load' 'conv_2_out_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 74 [2/2] (5.43ns)   --->   "%tmp_6 = fcmp ogt float %conv_2_out_load, %select_ln16" [cnn/max_pool_2.cpp:29]   --->   Operation 74 'fcmp' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/2] (3.25ns)   --->   "%conv_2_out_load_1 = load float* %conv_2_out_addr_1, align 4" [cnn/max_pool_2.cpp:29]   --->   Operation 75 'load' 'conv_2_out_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 76 [1/1] (1.56ns)   --->   "%mpr = add i2 1, %select_ln16_1" [cnn/max_pool_2.cpp:20]   --->   Operation 76 'add' 'mpr' <Predicate = (!icmp_ln10)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (1.21ns)   --->   "%select_ln16_5 = select i1 %or_ln13, i5 1, i5 %add_ln16" [cnn/max_pool_2.cpp:16]   --->   Operation 77 'select' 'select_ln16_5' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (1.87ns)   --->   "%add_ln13_1 = add i7 %indvar_flatten22, 1" [cnn/max_pool_2.cpp:13]   --->   Operation 78 'add' 'add_ln13_1' <Predicate = (!icmp_ln10 & !icmp_ln13)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.99ns)   --->   "%select_ln13_5 = select i1 %icmp_ln13, i7 1, i7 %add_ln13_1" [cnn/max_pool_2.cpp:13]   --->   Operation 79 'select' 'select_ln13_5' <Predicate = (!icmp_ln10)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 80 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 12.5>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i5 %select_ln29_3 to i10" [cnn/max_pool_2.cpp:26]   --->   Operation 81 'zext' 'zext_ln26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i3 %select_ln13_2 to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 82 'zext' 'zext_ln36' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln13_2, i2 0)" [cnn/max_pool_2.cpp:36]   --->   Operation 83 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln36_2 = zext i5 %tmp to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 84 'zext' 'zext_ln36_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (1.78ns)   --->   "%add_ln36 = add i6 %zext_ln36, %zext_ln36_2" [cnn/max_pool_2.cpp:36]   --->   Operation 85 'add' 'add_ln36' <Predicate = (!icmp_ln10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%bitcast_ln29 = bitcast float %conv_2_out_load to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 86 'bitcast' 'bitcast_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 87 'partselect' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i32 %bitcast_ln29 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 88 'trunc' 'trunc_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%bitcast_ln29_1 = bitcast float %select_ln16 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 89 'bitcast' 'bitcast_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_1, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 90 'partselect' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = trunc i32 %bitcast_ln29_1 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 91 'trunc' 'trunc_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (1.55ns)   --->   "%icmp_ln29 = icmp ne i8 %tmp_1, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 92 'icmp' 'icmp_ln29' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 93 [1/1] (2.44ns)   --->   "%icmp_ln29_1 = icmp eq i23 %trunc_ln29, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 93 'icmp' 'icmp_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_1)   --->   "%or_ln29 = or i1 %icmp_ln29_1, %icmp_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 94 'or' 'or_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 95 [1/1] (1.55ns)   --->   "%icmp_ln29_2 = icmp ne i8 %tmp_5, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 95 'icmp' 'icmp_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 96 [1/1] (2.44ns)   --->   "%icmp_ln29_3 = icmp eq i23 %trunc_ln29_1, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 96 'icmp' 'icmp_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_1)   --->   "%or_ln29_1 = or i1 %icmp_ln29_3, %icmp_ln29_2" [cnn/max_pool_2.cpp:29]   --->   Operation 97 'or' 'or_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_1)   --->   "%and_ln29 = and i1 %or_ln29, %or_ln29_1" [cnn/max_pool_2.cpp:29]   --->   Operation 98 'and' 'and_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/2] (5.43ns)   --->   "%tmp_6 = fcmp ogt float %conv_2_out_load, %select_ln16" [cnn/max_pool_2.cpp:29]   --->   Operation 99 'fcmp' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 100 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_1 = and i1 %and_ln29, %tmp_6" [cnn/max_pool_2.cpp:29]   --->   Operation 100 'and' 'and_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29 = select i1 %and_ln29_1, float %conv_2_out_load, float %select_ln16" [cnn/max_pool_2.cpp:29]   --->   Operation 101 'select' 'select_ln29' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 102 [2/2] (5.43ns)   --->   "%tmp_9 = fcmp ogt float %conv_2_out_load_1, %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 102 'fcmp' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 103 [1/1] (0.95ns)   --->   "%icmp_ln20_1 = icmp eq i2 %mpr, -2" [cnn/max_pool_2.cpp:20]   --->   Operation 103 'icmp' 'icmp_ln20_1' <Predicate = (!icmp_ln10)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_1, label %ifTrue, label %ifFalse" [cnn/max_pool_2.cpp:20]   --->   Operation 104 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln36_1 = zext i3 %select_ln16_4 to i6" [cnn/max_pool_2.cpp:36]   --->   Operation 105 'zext' 'zext_ln36_1' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (1.82ns)   --->   "%add_ln36_1 = add i6 %add_ln36, %zext_ln36_1" [cnn/max_pool_2.cpp:36]   --->   Operation 106 'add' 'add_ln36_1' <Predicate = (icmp_ln20_1)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_13_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %add_ln36_1, i4 0)" [cnn/max_pool_2.cpp:36]   --->   Operation 107 'bitconcatenate' 'tmp_13_cast' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (1.73ns)   --->   "%add_ln36_2 = add i10 %tmp_13_cast, %zext_ln26" [cnn/max_pool_2.cpp:36]   --->   Operation 108 'add' 'add_ln36_2' <Predicate = (icmp_ln20_1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 13.2>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([35 x i8]* @Filter_Loop_Col_Loop)"   --->   Operation 109 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 800, i64 800, i64 800)"   --->   Operation 110 'speclooptripcount' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([32 x i8]* @Row_Loop_Col_Loop_Po)"   --->   Operation 111 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([23 x i8]* @Col_Loop_Pool_Row_Lo)"   --->   Operation 112 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str358) nounwind" [cnn/max_pool_2.cpp:21]   --->   Operation 113 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str358)" [cnn/max_pool_2.cpp:21]   --->   Operation 114 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str459) nounwind" [cnn/max_pool_2.cpp:22]   --->   Operation 115 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%bitcast_ln29_2 = bitcast float %conv_2_out_load_1 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 116 'bitcast' 'bitcast_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_2, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 117 'partselect' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln29_2 = trunc i32 %bitcast_ln29_2 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 118 'trunc' 'trunc_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%bitcast_ln29_3 = bitcast float %select_ln29 to i32" [cnn/max_pool_2.cpp:29]   --->   Operation 119 'bitcast' 'bitcast_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln29_3, i32 23, i32 30)" [cnn/max_pool_2.cpp:29]   --->   Operation 120 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%trunc_ln29_3 = trunc i32 %bitcast_ln29_3 to i23" [cnn/max_pool_2.cpp:29]   --->   Operation 121 'trunc' 'trunc_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (1.55ns)   --->   "%icmp_ln29_4 = icmp ne i8 %tmp_7, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 122 'icmp' 'icmp_ln29_4' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (2.44ns)   --->   "%icmp_ln29_5 = icmp eq i23 %trunc_ln29_2, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 123 'icmp' 'icmp_ln29_5' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_3)   --->   "%or_ln29_2 = or i1 %icmp_ln29_5, %icmp_ln29_4" [cnn/max_pool_2.cpp:29]   --->   Operation 124 'or' 'or_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (1.55ns)   --->   "%icmp_ln29_6 = icmp ne i8 %tmp_8, -1" [cnn/max_pool_2.cpp:29]   --->   Operation 125 'icmp' 'icmp_ln29_6' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (2.44ns)   --->   "%icmp_ln29_7 = icmp eq i23 %trunc_ln29_3, 0" [cnn/max_pool_2.cpp:29]   --->   Operation 126 'icmp' 'icmp_ln29_7' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_3)   --->   "%or_ln29_3 = or i1 %icmp_ln29_7, %icmp_ln29_6" [cnn/max_pool_2.cpp:29]   --->   Operation 127 'or' 'or_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node and_ln29_3)   --->   "%and_ln29_2 = and i1 %or_ln29_2, %or_ln29_3" [cnn/max_pool_2.cpp:29]   --->   Operation 128 'and' 'and_ln29_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 129 [1/2] (5.43ns)   --->   "%tmp_9 = fcmp ogt float %conv_2_out_load_1, %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 129 'fcmp' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 5.43> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 5.43> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 130 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln29_3 = and i1 %and_ln29_2, %tmp_9" [cnn/max_pool_2.cpp:29]   --->   Operation 130 'and' 'and_ln29_3' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 131 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln29_1 = select i1 %and_ln29_3, float %conv_2_out_load_1, float %select_ln29" [cnn/max_pool_2.cpp:29]   --->   Operation 131 'select' 'select_ln29_1' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str358, i32 %tmp_4)" [cnn/max_pool_2.cpp:34]   --->   Operation 132 'specregionend' 'empty_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 133 [1/1] (0.00ns)   --->   "%zext_ln36_3 = zext i10 %add_ln36_2 to i64" [cnn/max_pool_2.cpp:36]   --->   Operation 133 'zext' 'zext_ln36_3' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_5 : Operation 134 [1/1] (0.00ns)   --->   "%max_pool_2_out_addr = getelementptr [400 x float]* @max_pool_2_out, i64 0, i64 %zext_ln36_3" [cnn/max_pool_2.cpp:36]   --->   Operation 134 'getelementptr' 'max_pool_2_out_addr' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_5 : Operation 135 [1/1] (3.25ns)   --->   "store float %select_ln29_1, float* %max_pool_2_out_addr, align 4" [cnn/max_pool_2.cpp:36]   --->   Operation 135 'store' <Predicate = (icmp_ln20_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_5 : Operation 136 [1/1] (0.00ns)   --->   "br label %ifFalse"   --->   Operation 136 'br' <Predicate = (icmp_ln20_1)> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "ret void" [cnn/max_pool_2.cpp:40]   --->   Operation 137 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten59', cnn/max_pool_2.cpp:10) with incoming values : ('add_ln10', cnn/max_pool_2.cpp:10) [5]  (1.77 ns)

 <State 2>: 17.4ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten22', cnn/max_pool_2.cpp:13) with incoming values : ('select_ln13_5', cnn/max_pool_2.cpp:13) [7]  (0 ns)
	'icmp' operation ('icmp_ln13', cnn/max_pool_2.cpp:13) [22]  (1.49 ns)
	'xor' operation ('xor_ln29', cnn/max_pool_2.cpp:29) [29]  (0.978 ns)
	'and' operation ('and_ln29_5', cnn/max_pool_2.cpp:29) [33]  (0.978 ns)
	'or' operation ('or_ln16', cnn/max_pool_2.cpp:16) [52]  (0 ns)
	'or' operation ('or_ln16_1', cnn/max_pool_2.cpp:16) [53]  (0.978 ns)
	'select' operation ('select_ln16_1', cnn/max_pool_2.cpp:16) [55]  (0.993 ns)
	'add' operation ('i', cnn/max_pool_2.cpp:26) [67]  (1.74 ns)
	'mul' operation ('mul_ln29', cnn/max_pool_2.cpp:29) [69]  (3.49 ns)
	'add' operation ('add_ln29', cnn/max_pool_2.cpp:29) [70]  (1.92 ns)
	'add' operation ('add_ln29_1', cnn/max_pool_2.cpp:29) [72]  (1.55 ns)
	'getelementptr' operation ('conv_2_out_addr', cnn/max_pool_2.cpp:29) [74]  (0 ns)
	'load' operation ('conv_2_out_load', cnn/max_pool_2.cpp:29) on array 'conv_2_out' [80]  (3.25 ns)

 <State 3>: 8.69ns
The critical path consists of the following:
	'load' operation ('conv_2_out_load', cnn/max_pool_2.cpp:29) on array 'conv_2_out' [80]  (3.25 ns)
	'fcmp' operation ('tmp_6', cnn/max_pool_2.cpp:29) [94]  (5.43 ns)

 <State 4>: 12.5ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', cnn/max_pool_2.cpp:29) [94]  (5.43 ns)
	'and' operation ('and_ln29_1', cnn/max_pool_2.cpp:29) [95]  (0.978 ns)
	'select' operation ('select_ln29', cnn/max_pool_2.cpp:29) [96]  (0.698 ns)
	'fcmp' operation ('tmp_9', cnn/max_pool_2.cpp:29) [111]  (5.43 ns)

 <State 5>: 13.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', cnn/max_pool_2.cpp:29) [111]  (5.43 ns)
	'and' operation ('and_ln29_3', cnn/max_pool_2.cpp:29) [112]  (0.978 ns)
	'select' operation ('select_ln29_1', cnn/max_pool_2.cpp:29) [113]  (0.698 ns)
	'phi' operation ('max_0', cnn/max_pool_2.cpp:29) with incoming values : ('select_ln29_1', cnn/max_pool_2.cpp:29) [11]  (0 ns)
	'select' operation ('select_ln16', cnn/max_pool_2.cpp:16) [54]  (0.698 ns)
	'fcmp' operation ('tmp_6', cnn/max_pool_2.cpp:29) [94]  (5.43 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
