// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module flat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_q0,
        flat_array_0_address0,
        flat_array_0_ce0,
        flat_array_0_we0,
        flat_array_0_d0,
        flat_array_1_address0,
        flat_array_1_ce0,
        flat_array_1_we0,
        flat_array_1_d0,
        flat_array_2_address0,
        flat_array_2_ce0,
        flat_array_2_we0,
        flat_array_2_d0,
        flat_array_3_address0,
        flat_array_3_ce0,
        flat_array_3_we0,
        flat_array_3_d0,
        flat_array_4_address0,
        flat_array_4_ce0,
        flat_array_4_we0,
        flat_array_4_d0,
        flat_array_5_address0,
        flat_array_5_ce0,
        flat_array_5_we0,
        flat_array_5_d0,
        flat_array_6_address0,
        flat_array_6_ce0,
        flat_array_6_we0,
        flat_array_6_d0,
        flat_array_7_address0,
        flat_array_7_ce0,
        flat_array_7_we0,
        flat_array_7_d0,
        flat_array_8_address0,
        flat_array_8_ce0,
        flat_array_8_we0,
        flat_array_8_d0,
        flat_array_9_address0,
        flat_array_9_ce0,
        flat_array_9_we0,
        flat_array_9_d0,
        flat_array_10_address0,
        flat_array_10_ce0,
        flat_array_10_we0,
        flat_array_10_d0,
        flat_array_11_address0,
        flat_array_11_ce0,
        flat_array_11_we0,
        flat_array_11_d0,
        flat_array_12_address0,
        flat_array_12_ce0,
        flat_array_12_we0,
        flat_array_12_d0,
        flat_array_13_address0,
        flat_array_13_ce0,
        flat_array_13_we0,
        flat_array_13_d0,
        flat_array_14_address0,
        flat_array_14_ce0,
        flat_array_14_we0,
        flat_array_14_d0,
        flat_array_15_address0,
        flat_array_15_ce0,
        flat_array_15_we0,
        flat_array_15_d0,
        flat_array_16_address0,
        flat_array_16_ce0,
        flat_array_16_we0,
        flat_array_16_d0,
        flat_array_17_address0,
        flat_array_17_ce0,
        flat_array_17_we0,
        flat_array_17_d0,
        flat_array_18_address0,
        flat_array_18_ce0,
        flat_array_18_we0,
        flat_array_18_d0,
        flat_array_19_address0,
        flat_array_19_ce0,
        flat_array_19_we0,
        flat_array_19_d0,
        flat_array_20_address0,
        flat_array_20_ce0,
        flat_array_20_we0,
        flat_array_20_d0,
        flat_array_21_address0,
        flat_array_21_ce0,
        flat_array_21_we0,
        flat_array_21_d0,
        flat_array_22_address0,
        flat_array_22_ce0,
        flat_array_22_we0,
        flat_array_22_d0,
        flat_array_23_address0,
        flat_array_23_ce0,
        flat_array_23_we0,
        flat_array_23_d0,
        flat_array_24_address0,
        flat_array_24_ce0,
        flat_array_24_we0,
        flat_array_24_d0,
        flat_array_25_address0,
        flat_array_25_ce0,
        flat_array_25_we0,
        flat_array_25_d0,
        flat_array_26_address0,
        flat_array_26_ce0,
        flat_array_26_we0,
        flat_array_26_d0,
        flat_array_27_address0,
        flat_array_27_ce0,
        flat_array_27_we0,
        flat_array_27_d0,
        flat_array_28_address0,
        flat_array_28_ce0,
        flat_array_28_we0,
        flat_array_28_d0,
        flat_array_29_address0,
        flat_array_29_ce0,
        flat_array_29_we0,
        flat_array_29_d0,
        flat_array_30_address0,
        flat_array_30_ce0,
        flat_array_30_we0,
        flat_array_30_d0,
        flat_array_31_address0,
        flat_array_31_ce0,
        flat_array_31_we0,
        flat_array_31_d0,
        flat_array_32_address0,
        flat_array_32_ce0,
        flat_array_32_we0,
        flat_array_32_d0,
        flat_array_33_address0,
        flat_array_33_ce0,
        flat_array_33_we0,
        flat_array_33_d0,
        flat_array_34_address0,
        flat_array_34_ce0,
        flat_array_34_we0,
        flat_array_34_d0,
        flat_array_35_address0,
        flat_array_35_ce0,
        flat_array_35_we0,
        flat_array_35_d0,
        flat_array_36_address0,
        flat_array_36_ce0,
        flat_array_36_we0,
        flat_array_36_d0,
        flat_array_37_address0,
        flat_array_37_ce0,
        flat_array_37_we0,
        flat_array_37_d0,
        flat_array_38_address0,
        flat_array_38_ce0,
        flat_array_38_we0,
        flat_array_38_d0,
        flat_array_39_address0,
        flat_array_39_ce0,
        flat_array_39_we0,
        flat_array_39_d0,
        flat_array_40_address0,
        flat_array_40_ce0,
        flat_array_40_we0,
        flat_array_40_d0,
        flat_array_41_address0,
        flat_array_41_ce0,
        flat_array_41_we0,
        flat_array_41_d0,
        flat_array_42_address0,
        flat_array_42_ce0,
        flat_array_42_we0,
        flat_array_42_d0,
        flat_array_43_address0,
        flat_array_43_ce0,
        flat_array_43_we0,
        flat_array_43_d0,
        flat_array_44_address0,
        flat_array_44_ce0,
        flat_array_44_we0,
        flat_array_44_d0,
        flat_array_45_address0,
        flat_array_45_ce0,
        flat_array_45_we0,
        flat_array_45_d0,
        flat_array_46_address0,
        flat_array_46_ce0,
        flat_array_46_we0,
        flat_array_46_d0,
        flat_array_47_address0,
        flat_array_47_ce0,
        flat_array_47_we0,
        flat_array_47_d0,
        flat_array_48_address0,
        flat_array_48_ce0,
        flat_array_48_we0,
        flat_array_48_d0,
        flat_array_49_address0,
        flat_array_49_ce0,
        flat_array_49_we0,
        flat_array_49_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] max_pool_out_address0;
output   max_pool_out_ce0;
input  [31:0] max_pool_out_q0;
output  [2:0] flat_array_0_address0;
output   flat_array_0_ce0;
output   flat_array_0_we0;
output  [31:0] flat_array_0_d0;
output  [2:0] flat_array_1_address0;
output   flat_array_1_ce0;
output   flat_array_1_we0;
output  [31:0] flat_array_1_d0;
output  [2:0] flat_array_2_address0;
output   flat_array_2_ce0;
output   flat_array_2_we0;
output  [31:0] flat_array_2_d0;
output  [2:0] flat_array_3_address0;
output   flat_array_3_ce0;
output   flat_array_3_we0;
output  [31:0] flat_array_3_d0;
output  [2:0] flat_array_4_address0;
output   flat_array_4_ce0;
output   flat_array_4_we0;
output  [31:0] flat_array_4_d0;
output  [2:0] flat_array_5_address0;
output   flat_array_5_ce0;
output   flat_array_5_we0;
output  [31:0] flat_array_5_d0;
output  [2:0] flat_array_6_address0;
output   flat_array_6_ce0;
output   flat_array_6_we0;
output  [31:0] flat_array_6_d0;
output  [2:0] flat_array_7_address0;
output   flat_array_7_ce0;
output   flat_array_7_we0;
output  [31:0] flat_array_7_d0;
output  [2:0] flat_array_8_address0;
output   flat_array_8_ce0;
output   flat_array_8_we0;
output  [31:0] flat_array_8_d0;
output  [2:0] flat_array_9_address0;
output   flat_array_9_ce0;
output   flat_array_9_we0;
output  [31:0] flat_array_9_d0;
output  [2:0] flat_array_10_address0;
output   flat_array_10_ce0;
output   flat_array_10_we0;
output  [31:0] flat_array_10_d0;
output  [2:0] flat_array_11_address0;
output   flat_array_11_ce0;
output   flat_array_11_we0;
output  [31:0] flat_array_11_d0;
output  [2:0] flat_array_12_address0;
output   flat_array_12_ce0;
output   flat_array_12_we0;
output  [31:0] flat_array_12_d0;
output  [2:0] flat_array_13_address0;
output   flat_array_13_ce0;
output   flat_array_13_we0;
output  [31:0] flat_array_13_d0;
output  [2:0] flat_array_14_address0;
output   flat_array_14_ce0;
output   flat_array_14_we0;
output  [31:0] flat_array_14_d0;
output  [2:0] flat_array_15_address0;
output   flat_array_15_ce0;
output   flat_array_15_we0;
output  [31:0] flat_array_15_d0;
output  [2:0] flat_array_16_address0;
output   flat_array_16_ce0;
output   flat_array_16_we0;
output  [31:0] flat_array_16_d0;
output  [2:0] flat_array_17_address0;
output   flat_array_17_ce0;
output   flat_array_17_we0;
output  [31:0] flat_array_17_d0;
output  [2:0] flat_array_18_address0;
output   flat_array_18_ce0;
output   flat_array_18_we0;
output  [31:0] flat_array_18_d0;
output  [2:0] flat_array_19_address0;
output   flat_array_19_ce0;
output   flat_array_19_we0;
output  [31:0] flat_array_19_d0;
output  [2:0] flat_array_20_address0;
output   flat_array_20_ce0;
output   flat_array_20_we0;
output  [31:0] flat_array_20_d0;
output  [2:0] flat_array_21_address0;
output   flat_array_21_ce0;
output   flat_array_21_we0;
output  [31:0] flat_array_21_d0;
output  [2:0] flat_array_22_address0;
output   flat_array_22_ce0;
output   flat_array_22_we0;
output  [31:0] flat_array_22_d0;
output  [2:0] flat_array_23_address0;
output   flat_array_23_ce0;
output   flat_array_23_we0;
output  [31:0] flat_array_23_d0;
output  [2:0] flat_array_24_address0;
output   flat_array_24_ce0;
output   flat_array_24_we0;
output  [31:0] flat_array_24_d0;
output  [2:0] flat_array_25_address0;
output   flat_array_25_ce0;
output   flat_array_25_we0;
output  [31:0] flat_array_25_d0;
output  [2:0] flat_array_26_address0;
output   flat_array_26_ce0;
output   flat_array_26_we0;
output  [31:0] flat_array_26_d0;
output  [2:0] flat_array_27_address0;
output   flat_array_27_ce0;
output   flat_array_27_we0;
output  [31:0] flat_array_27_d0;
output  [2:0] flat_array_28_address0;
output   flat_array_28_ce0;
output   flat_array_28_we0;
output  [31:0] flat_array_28_d0;
output  [2:0] flat_array_29_address0;
output   flat_array_29_ce0;
output   flat_array_29_we0;
output  [31:0] flat_array_29_d0;
output  [2:0] flat_array_30_address0;
output   flat_array_30_ce0;
output   flat_array_30_we0;
output  [31:0] flat_array_30_d0;
output  [2:0] flat_array_31_address0;
output   flat_array_31_ce0;
output   flat_array_31_we0;
output  [31:0] flat_array_31_d0;
output  [2:0] flat_array_32_address0;
output   flat_array_32_ce0;
output   flat_array_32_we0;
output  [31:0] flat_array_32_d0;
output  [2:0] flat_array_33_address0;
output   flat_array_33_ce0;
output   flat_array_33_we0;
output  [31:0] flat_array_33_d0;
output  [2:0] flat_array_34_address0;
output   flat_array_34_ce0;
output   flat_array_34_we0;
output  [31:0] flat_array_34_d0;
output  [2:0] flat_array_35_address0;
output   flat_array_35_ce0;
output   flat_array_35_we0;
output  [31:0] flat_array_35_d0;
output  [2:0] flat_array_36_address0;
output   flat_array_36_ce0;
output   flat_array_36_we0;
output  [31:0] flat_array_36_d0;
output  [2:0] flat_array_37_address0;
output   flat_array_37_ce0;
output   flat_array_37_we0;
output  [31:0] flat_array_37_d0;
output  [2:0] flat_array_38_address0;
output   flat_array_38_ce0;
output   flat_array_38_we0;
output  [31:0] flat_array_38_d0;
output  [2:0] flat_array_39_address0;
output   flat_array_39_ce0;
output   flat_array_39_we0;
output  [31:0] flat_array_39_d0;
output  [2:0] flat_array_40_address0;
output   flat_array_40_ce0;
output   flat_array_40_we0;
output  [31:0] flat_array_40_d0;
output  [2:0] flat_array_41_address0;
output   flat_array_41_ce0;
output   flat_array_41_we0;
output  [31:0] flat_array_41_d0;
output  [2:0] flat_array_42_address0;
output   flat_array_42_ce0;
output   flat_array_42_we0;
output  [31:0] flat_array_42_d0;
output  [2:0] flat_array_43_address0;
output   flat_array_43_ce0;
output   flat_array_43_we0;
output  [31:0] flat_array_43_d0;
output  [2:0] flat_array_44_address0;
output   flat_array_44_ce0;
output   flat_array_44_we0;
output  [31:0] flat_array_44_d0;
output  [2:0] flat_array_45_address0;
output   flat_array_45_ce0;
output   flat_array_45_we0;
output  [31:0] flat_array_45_d0;
output  [2:0] flat_array_46_address0;
output   flat_array_46_ce0;
output   flat_array_46_we0;
output  [31:0] flat_array_46_d0;
output  [2:0] flat_array_47_address0;
output   flat_array_47_ce0;
output   flat_array_47_we0;
output  [31:0] flat_array_47_d0;
output  [2:0] flat_array_48_address0;
output   flat_array_48_ce0;
output   flat_array_48_we0;
output  [31:0] flat_array_48_d0;
output  [2:0] flat_array_49_address0;
output   flat_array_49_ce0;
output   flat_array_49_we0;
output  [31:0] flat_array_49_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_pool_out_ce0;
reg flat_array_0_ce0;
reg flat_array_0_we0;
reg flat_array_1_ce0;
reg flat_array_1_we0;
reg flat_array_2_ce0;
reg flat_array_2_we0;
reg flat_array_3_ce0;
reg flat_array_3_we0;
reg flat_array_4_ce0;
reg flat_array_4_we0;
reg flat_array_5_ce0;
reg flat_array_5_we0;
reg flat_array_6_ce0;
reg flat_array_6_we0;
reg flat_array_7_ce0;
reg flat_array_7_we0;
reg flat_array_8_ce0;
reg flat_array_8_we0;
reg flat_array_9_ce0;
reg flat_array_9_we0;
reg flat_array_10_ce0;
reg flat_array_10_we0;
reg flat_array_11_ce0;
reg flat_array_11_we0;
reg flat_array_12_ce0;
reg flat_array_12_we0;
reg flat_array_13_ce0;
reg flat_array_13_we0;
reg flat_array_14_ce0;
reg flat_array_14_we0;
reg flat_array_15_ce0;
reg flat_array_15_we0;
reg flat_array_16_ce0;
reg flat_array_16_we0;
reg flat_array_17_ce0;
reg flat_array_17_we0;
reg flat_array_18_ce0;
reg flat_array_18_we0;
reg flat_array_19_ce0;
reg flat_array_19_we0;
reg flat_array_20_ce0;
reg flat_array_20_we0;
reg flat_array_21_ce0;
reg flat_array_21_we0;
reg flat_array_22_ce0;
reg flat_array_22_we0;
reg flat_array_23_ce0;
reg flat_array_23_we0;
reg flat_array_24_ce0;
reg flat_array_24_we0;
reg flat_array_25_ce0;
reg flat_array_25_we0;
reg flat_array_26_ce0;
reg flat_array_26_we0;
reg flat_array_27_ce0;
reg flat_array_27_we0;
reg flat_array_28_ce0;
reg flat_array_28_we0;
reg flat_array_29_ce0;
reg flat_array_29_we0;
reg flat_array_30_ce0;
reg flat_array_30_we0;
reg flat_array_31_ce0;
reg flat_array_31_we0;
reg flat_array_32_ce0;
reg flat_array_32_we0;
reg flat_array_33_ce0;
reg flat_array_33_we0;
reg flat_array_34_ce0;
reg flat_array_34_we0;
reg flat_array_35_ce0;
reg flat_array_35_we0;
reg flat_array_36_ce0;
reg flat_array_36_we0;
reg flat_array_37_ce0;
reg flat_array_37_we0;
reg flat_array_38_ce0;
reg flat_array_38_we0;
reg flat_array_39_ce0;
reg flat_array_39_we0;
reg flat_array_40_ce0;
reg flat_array_40_we0;
reg flat_array_41_ce0;
reg flat_array_41_we0;
reg flat_array_42_ce0;
reg flat_array_42_we0;
reg flat_array_43_ce0;
reg flat_array_43_we0;
reg flat_array_44_ce0;
reg flat_array_44_we0;
reg flat_array_45_ce0;
reg flat_array_45_we0;
reg flat_array_46_ce0;
reg flat_array_46_we0;
reg flat_array_47_ce0;
reg flat_array_47_we0;
reg flat_array_48_ce0;
reg flat_array_48_we0;
reg flat_array_49_ce0;
reg flat_array_49_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] indvar_flatten17_reg_983;
reg   [2:0] r_0_reg_994;
reg   [8:0] i_0_reg_1005;
reg   [7:0] indvar_flatten_reg_1016;
reg   [8:0] i_1_reg_1027;
reg   [2:0] c_0_reg_1038;
reg   [8:0] i_2_reg_1049;
reg   [4:0] f_0_reg_1060;
wire   [0:0] icmp_ln6_fu_1071_p2;
reg   [0:0] icmp_ln6_reg_1357;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] add_ln6_fu_1077_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln15_3_fu_1125_p3;
reg   [2:0] select_ln15_3_reg_1366;
wire   [8:0] select_ln6_fu_1173_p3;
wire   [2:0] select_ln15_6_fu_1215_p3;
reg   [2:0] select_ln15_6_reg_1376;
wire   [8:0] select_ln9_fu_1241_p3;
reg   [5:0] tmp_s_reg_1391;
wire   [2:0] trunc_ln14_fu_1274_p1;
reg   [2:0] trunc_ln14_reg_1395;
wire   [8:0] add_ln15_1_fu_1278_p2;
wire   [4:0] f_fu_1284_p2;
wire   [7:0] select_ln9_1_fu_1296_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [2:0] ap_phi_mux_r_0_phi_fu_998_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_c_0_phi_fu_1042_p4;
wire   [63:0] zext_ln14_4_fu_1259_p1;
wire   [63:0] zext_ln14_3_fu_1304_p1;
wire   [0:0] icmp_ln9_fu_1095_p2;
wire   [8:0] add_ln15_fu_1089_p2;
wire   [2:0] r_fu_1083_p2;
wire   [4:0] tmp_fu_1137_p3;
wire   [5:0] zext_ln14_1_fu_1145_p1;
wire   [5:0] zext_ln14_fu_1133_p1;
wire   [0:0] icmp_ln12_fu_1161_p2;
wire   [0:0] xor_ln15_fu_1155_p2;
wire   [2:0] select_ln15_1_fu_1109_p3;
wire   [8:0] select_ln15_fu_1101_p3;
wire   [0:0] and_ln15_fu_1167_p2;
wire   [8:0] add_ln15_2_fu_1187_p2;
wire   [8:0] select_ln15_2_fu_1117_p3;
wire   [0:0] or_ln15_fu_1201_p2;
wire   [2:0] c_fu_1181_p2;
wire   [5:0] zext_ln15_fu_1223_p1;
wire   [5:0] add_ln14_fu_1149_p2;
wire   [5:0] add_ln14_1_fu_1227_p2;
wire   [4:0] select_ln15_5_fu_1207_p3;
wire   [9:0] zext_ln14_2_fu_1249_p1;
wire   [9:0] tmp_20_cast_fu_1233_p3;
wire   [9:0] add_ln14_2_fu_1253_p2;
wire   [8:0] select_ln15_4_fu_1193_p3;
wire   [7:0] add_ln9_fu_1290_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_reg_1038 <= select_ln15_6_reg_1376;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_1038 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_0_reg_1060 <= f_fu_1284_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_1060 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_1005 <= select_ln6_fu_1173_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_1005 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1027 <= select_ln9_fu_1241_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_1_reg_1027 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_reg_1049 <= add_ln15_1_fu_1278_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_reg_1049 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten17_reg_983 <= add_ln6_fu_1077_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten17_reg_983 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1016 <= select_ln9_1_fu_1296_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_1016 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_0_reg_994 <= select_ln15_3_reg_1366;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_994 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln6_reg_1357 <= icmp_ln6_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_3_reg_1366 <= select_ln15_3_fu_1125_p3;
        select_ln15_6_reg_1376 <= select_ln15_6_fu_1215_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_1071_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_s_reg_1391 <= {{select_ln15_4_fu_1193_p3[8:3]}};
        trunc_ln14_reg_1395 <= trunc_ln14_fu_1274_p1;
    end
end

always @ (*) begin
    if ((icmp_ln6_fu_1071_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln6_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_1042_p4 = select_ln15_6_reg_1376;
    end else begin
        ap_phi_mux_c_0_phi_fu_1042_p4 = c_0_reg_1038;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln6_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_998_p4 = select_ln15_3_reg_1366;
    end else begin
        ap_phi_mux_r_0_phi_fu_998_p4 = r_0_reg_994;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_0_ce0 = 1'b1;
    end else begin
        flat_array_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_0_we0 = 1'b1;
    end else begin
        flat_array_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_10_ce0 = 1'b1;
    end else begin
        flat_array_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_10_we0 = 1'b1;
    end else begin
        flat_array_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_11_ce0 = 1'b1;
    end else begin
        flat_array_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_11_we0 = 1'b1;
    end else begin
        flat_array_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_12_ce0 = 1'b1;
    end else begin
        flat_array_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_12_we0 = 1'b1;
    end else begin
        flat_array_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_13_ce0 = 1'b1;
    end else begin
        flat_array_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_13_we0 = 1'b1;
    end else begin
        flat_array_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_14_ce0 = 1'b1;
    end else begin
        flat_array_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_14_we0 = 1'b1;
    end else begin
        flat_array_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_15_ce0 = 1'b1;
    end else begin
        flat_array_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_15_we0 = 1'b1;
    end else begin
        flat_array_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_16_ce0 = 1'b1;
    end else begin
        flat_array_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_16_we0 = 1'b1;
    end else begin
        flat_array_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_17_ce0 = 1'b1;
    end else begin
        flat_array_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_17_we0 = 1'b1;
    end else begin
        flat_array_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_18_ce0 = 1'b1;
    end else begin
        flat_array_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_18_we0 = 1'b1;
    end else begin
        flat_array_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_19_ce0 = 1'b1;
    end else begin
        flat_array_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_19_we0 = 1'b1;
    end else begin
        flat_array_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_1_ce0 = 1'b1;
    end else begin
        flat_array_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_1_we0 = 1'b1;
    end else begin
        flat_array_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_20_ce0 = 1'b1;
    end else begin
        flat_array_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_20_we0 = 1'b1;
    end else begin
        flat_array_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_21_ce0 = 1'b1;
    end else begin
        flat_array_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_21_we0 = 1'b1;
    end else begin
        flat_array_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_22_ce0 = 1'b1;
    end else begin
        flat_array_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_22_we0 = 1'b1;
    end else begin
        flat_array_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_23_ce0 = 1'b1;
    end else begin
        flat_array_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_23_we0 = 1'b1;
    end else begin
        flat_array_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_24_ce0 = 1'b1;
    end else begin
        flat_array_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_24_we0 = 1'b1;
    end else begin
        flat_array_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_25_ce0 = 1'b1;
    end else begin
        flat_array_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_25_we0 = 1'b1;
    end else begin
        flat_array_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_26_ce0 = 1'b1;
    end else begin
        flat_array_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_26_we0 = 1'b1;
    end else begin
        flat_array_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_27_ce0 = 1'b1;
    end else begin
        flat_array_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_27_we0 = 1'b1;
    end else begin
        flat_array_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_28_ce0 = 1'b1;
    end else begin
        flat_array_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_28_we0 = 1'b1;
    end else begin
        flat_array_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_29_ce0 = 1'b1;
    end else begin
        flat_array_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_29_we0 = 1'b1;
    end else begin
        flat_array_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_2_ce0 = 1'b1;
    end else begin
        flat_array_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_2_we0 = 1'b1;
    end else begin
        flat_array_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_30_ce0 = 1'b1;
    end else begin
        flat_array_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_30_we0 = 1'b1;
    end else begin
        flat_array_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_31_ce0 = 1'b1;
    end else begin
        flat_array_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_31_we0 = 1'b1;
    end else begin
        flat_array_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_32_ce0 = 1'b1;
    end else begin
        flat_array_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_32_we0 = 1'b1;
    end else begin
        flat_array_32_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_33_ce0 = 1'b1;
    end else begin
        flat_array_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_33_we0 = 1'b1;
    end else begin
        flat_array_33_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_34_ce0 = 1'b1;
    end else begin
        flat_array_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_34_we0 = 1'b1;
    end else begin
        flat_array_34_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_35_ce0 = 1'b1;
    end else begin
        flat_array_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_35_we0 = 1'b1;
    end else begin
        flat_array_35_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_36_ce0 = 1'b1;
    end else begin
        flat_array_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_36_we0 = 1'b1;
    end else begin
        flat_array_36_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_37_ce0 = 1'b1;
    end else begin
        flat_array_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_37_we0 = 1'b1;
    end else begin
        flat_array_37_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_38_ce0 = 1'b1;
    end else begin
        flat_array_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_38_we0 = 1'b1;
    end else begin
        flat_array_38_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_39_ce0 = 1'b1;
    end else begin
        flat_array_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_39_we0 = 1'b1;
    end else begin
        flat_array_39_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_3_ce0 = 1'b1;
    end else begin
        flat_array_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_3_we0 = 1'b1;
    end else begin
        flat_array_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_40_ce0 = 1'b1;
    end else begin
        flat_array_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_40_we0 = 1'b1;
    end else begin
        flat_array_40_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_41_ce0 = 1'b1;
    end else begin
        flat_array_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_41_we0 = 1'b1;
    end else begin
        flat_array_41_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_42_ce0 = 1'b1;
    end else begin
        flat_array_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_42_we0 = 1'b1;
    end else begin
        flat_array_42_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_43_ce0 = 1'b1;
    end else begin
        flat_array_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_43_we0 = 1'b1;
    end else begin
        flat_array_43_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_44_ce0 = 1'b1;
    end else begin
        flat_array_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd44) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_44_we0 = 1'b1;
    end else begin
        flat_array_44_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_45_ce0 = 1'b1;
    end else begin
        flat_array_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd45) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_45_we0 = 1'b1;
    end else begin
        flat_array_45_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_46_ce0 = 1'b1;
    end else begin
        flat_array_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd46) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_46_we0 = 1'b1;
    end else begin
        flat_array_46_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_47_ce0 = 1'b1;
    end else begin
        flat_array_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd47) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_47_we0 = 1'b1;
    end else begin
        flat_array_47_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_48_ce0 = 1'b1;
    end else begin
        flat_array_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd48) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_48_we0 = 1'b1;
    end else begin
        flat_array_48_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_49_ce0 = 1'b1;
    end else begin
        flat_array_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((tmp_s_reg_1391 == 6'd49) | ((tmp_s_reg_1391 == 6'd50) | ((tmp_s_reg_1391 == 6'd51) | ((tmp_s_reg_1391 == 6'd52) | ((tmp_s_reg_1391 == 6'd53) | ((tmp_s_reg_1391 == 6'd54) | ((tmp_s_reg_1391 == 6'd55) | ((tmp_s_reg_1391 == 6'd56) | ((tmp_s_reg_1391 == 6'd57) | ((tmp_s_reg_1391 == 6'd58) | ((tmp_s_reg_1391 == 6'd59) | ((tmp_s_reg_1391 == 6'd60) | ((tmp_s_reg_1391 == 6'd61) | ((tmp_s_reg_1391 == 6'd62) | (tmp_s_reg_1391 == 6'd63))))))))))))))))) begin
        flat_array_49_we0 = 1'b1;
    end else begin
        flat_array_49_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_4_ce0 = 1'b1;
    end else begin
        flat_array_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_4_we0 = 1'b1;
    end else begin
        flat_array_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_5_ce0 = 1'b1;
    end else begin
        flat_array_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_5_we0 = 1'b1;
    end else begin
        flat_array_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_6_ce0 = 1'b1;
    end else begin
        flat_array_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_6_we0 = 1'b1;
    end else begin
        flat_array_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_7_ce0 = 1'b1;
    end else begin
        flat_array_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_7_we0 = 1'b1;
    end else begin
        flat_array_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_8_ce0 = 1'b1;
    end else begin
        flat_array_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_8_we0 = 1'b1;
    end else begin
        flat_array_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_9_ce0 = 1'b1;
    end else begin
        flat_array_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_1391 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        flat_array_9_we0 = 1'b1;
    end else begin
        flat_array_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln6_fu_1071_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln6_fu_1071_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_1227_p2 = (zext_ln15_fu_1223_p1 + add_ln14_fu_1149_p2);

assign add_ln14_2_fu_1253_p2 = (zext_ln14_2_fu_1249_p1 + tmp_20_cast_fu_1233_p3);

assign add_ln14_fu_1149_p2 = (zext_ln14_1_fu_1145_p1 + zext_ln14_fu_1133_p1);

assign add_ln15_1_fu_1278_p2 = (select_ln15_4_fu_1193_p3 + 9'd1);

assign add_ln15_2_fu_1187_p2 = (9'd16 + select_ln15_fu_1101_p3);

assign add_ln15_fu_1089_p2 = (9'd80 + i_0_reg_1005);

assign add_ln6_fu_1077_p2 = (indvar_flatten17_reg_983 + 9'd1);

assign add_ln9_fu_1290_p2 = (indvar_flatten_reg_1016 + 8'd1);

assign and_ln15_fu_1167_p2 = (xor_ln15_fu_1155_p2 & icmp_ln12_fu_1161_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_1181_p2 = (3'd1 + select_ln15_1_fu_1109_p3);

assign f_fu_1284_p2 = (select_ln15_5_fu_1207_p3 + 5'd1);

assign flat_array_0_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_0_d0 = max_pool_out_q0;

assign flat_array_10_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_10_d0 = max_pool_out_q0;

assign flat_array_11_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_11_d0 = max_pool_out_q0;

assign flat_array_12_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_12_d0 = max_pool_out_q0;

assign flat_array_13_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_13_d0 = max_pool_out_q0;

assign flat_array_14_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_14_d0 = max_pool_out_q0;

assign flat_array_15_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_15_d0 = max_pool_out_q0;

assign flat_array_16_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_16_d0 = max_pool_out_q0;

assign flat_array_17_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_17_d0 = max_pool_out_q0;

assign flat_array_18_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_18_d0 = max_pool_out_q0;

assign flat_array_19_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_19_d0 = max_pool_out_q0;

assign flat_array_1_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_1_d0 = max_pool_out_q0;

assign flat_array_20_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_20_d0 = max_pool_out_q0;

assign flat_array_21_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_21_d0 = max_pool_out_q0;

assign flat_array_22_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_22_d0 = max_pool_out_q0;

assign flat_array_23_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_23_d0 = max_pool_out_q0;

assign flat_array_24_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_24_d0 = max_pool_out_q0;

assign flat_array_25_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_25_d0 = max_pool_out_q0;

assign flat_array_26_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_26_d0 = max_pool_out_q0;

assign flat_array_27_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_27_d0 = max_pool_out_q0;

assign flat_array_28_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_28_d0 = max_pool_out_q0;

assign flat_array_29_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_29_d0 = max_pool_out_q0;

assign flat_array_2_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_2_d0 = max_pool_out_q0;

assign flat_array_30_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_30_d0 = max_pool_out_q0;

assign flat_array_31_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_31_d0 = max_pool_out_q0;

assign flat_array_32_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_32_d0 = max_pool_out_q0;

assign flat_array_33_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_33_d0 = max_pool_out_q0;

assign flat_array_34_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_34_d0 = max_pool_out_q0;

assign flat_array_35_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_35_d0 = max_pool_out_q0;

assign flat_array_36_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_36_d0 = max_pool_out_q0;

assign flat_array_37_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_37_d0 = max_pool_out_q0;

assign flat_array_38_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_38_d0 = max_pool_out_q0;

assign flat_array_39_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_39_d0 = max_pool_out_q0;

assign flat_array_3_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_3_d0 = max_pool_out_q0;

assign flat_array_40_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_40_d0 = max_pool_out_q0;

assign flat_array_41_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_41_d0 = max_pool_out_q0;

assign flat_array_42_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_42_d0 = max_pool_out_q0;

assign flat_array_43_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_43_d0 = max_pool_out_q0;

assign flat_array_44_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_44_d0 = max_pool_out_q0;

assign flat_array_45_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_45_d0 = max_pool_out_q0;

assign flat_array_46_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_46_d0 = max_pool_out_q0;

assign flat_array_47_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_47_d0 = max_pool_out_q0;

assign flat_array_48_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_48_d0 = max_pool_out_q0;

assign flat_array_49_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_49_d0 = max_pool_out_q0;

assign flat_array_4_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_4_d0 = max_pool_out_q0;

assign flat_array_5_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_5_d0 = max_pool_out_q0;

assign flat_array_6_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_6_d0 = max_pool_out_q0;

assign flat_array_7_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_7_d0 = max_pool_out_q0;

assign flat_array_8_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_8_d0 = max_pool_out_q0;

assign flat_array_9_address0 = zext_ln14_3_fu_1304_p1;

assign flat_array_9_d0 = max_pool_out_q0;

assign icmp_ln12_fu_1161_p2 = ((f_0_reg_1060 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln6_fu_1071_p2 = ((indvar_flatten17_reg_983 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1095_p2 = ((indvar_flatten_reg_1016 == 8'd80) ? 1'b1 : 1'b0);

assign max_pool_out_address0 = zext_ln14_4_fu_1259_p1;

assign or_ln15_fu_1201_p2 = (icmp_ln9_fu_1095_p2 | and_ln15_fu_1167_p2);

assign r_fu_1083_p2 = (3'd1 + ap_phi_mux_r_0_phi_fu_998_p4);

assign select_ln15_1_fu_1109_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_c_0_phi_fu_1042_p4);

assign select_ln15_2_fu_1117_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? add_ln15_fu_1089_p2 : i_2_reg_1049);

assign select_ln15_3_fu_1125_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? r_fu_1083_p2 : ap_phi_mux_r_0_phi_fu_998_p4);

assign select_ln15_4_fu_1193_p3 = ((and_ln15_fu_1167_p2[0:0] === 1'b1) ? add_ln15_2_fu_1187_p2 : select_ln15_2_fu_1117_p3);

assign select_ln15_5_fu_1207_p3 = ((or_ln15_fu_1201_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_1060);

assign select_ln15_6_fu_1215_p3 = ((and_ln15_fu_1167_p2[0:0] === 1'b1) ? c_fu_1181_p2 : select_ln15_1_fu_1109_p3);

assign select_ln15_fu_1101_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? add_ln15_fu_1089_p2 : i_1_reg_1027);

assign select_ln6_fu_1173_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? add_ln15_fu_1089_p2 : i_0_reg_1005);

assign select_ln9_1_fu_1296_p3 = ((icmp_ln9_fu_1095_p2[0:0] === 1'b1) ? 8'd1 : add_ln9_fu_1290_p2);

assign select_ln9_fu_1241_p3 = ((and_ln15_fu_1167_p2[0:0] === 1'b1) ? add_ln15_2_fu_1187_p2 : select_ln15_fu_1101_p3);

assign tmp_20_cast_fu_1233_p3 = {{add_ln14_1_fu_1227_p2}, {4'd0}};

assign tmp_fu_1137_p3 = {{select_ln15_3_fu_1125_p3}, {2'd0}};

assign trunc_ln14_fu_1274_p1 = select_ln15_4_fu_1193_p3[2:0];

assign xor_ln15_fu_1155_p2 = (icmp_ln9_fu_1095_p2 ^ 1'd1);

assign zext_ln14_1_fu_1145_p1 = tmp_fu_1137_p3;

assign zext_ln14_2_fu_1249_p1 = select_ln15_5_fu_1207_p3;

assign zext_ln14_3_fu_1304_p1 = trunc_ln14_reg_1395;

assign zext_ln14_4_fu_1259_p1 = add_ln14_2_fu_1253_p2;

assign zext_ln14_fu_1133_p1 = select_ln15_3_fu_1125_p3;

assign zext_ln15_fu_1223_p1 = select_ln15_6_fu_1215_p3;

endmodule //flat
