-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cnn is
generic (
    C_S_AXI_CRTL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CRTL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    cnn_input_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_EN_A : OUT STD_LOGIC;
    cnn_input_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    cnn_input_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    cnn_input_Clk_A : OUT STD_LOGIC;
    cnn_input_Rst_A : OUT STD_LOGIC;
    prediction_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_EN_A : OUT STD_LOGIC;
    prediction_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    prediction_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    prediction_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    prediction_Clk_A : OUT STD_LOGIC;
    prediction_Rst_A : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CRTL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CRTL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CRTL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CRTL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CRTL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CRTL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CRTL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CRTL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of cnn is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=21.764000,HLS_SYN_LAT=111732,HLS_SYN_TPT=none,HLS_SYN_MEM=97,HLS_SYN_DSP=188,HLS_SYN_FF=43781,HLS_SYN_LUT=57756,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv6_28 : STD_LOGIC_VECTOR (5 downto 0) := "101000";
    constant ap_const_lv6_29 : STD_LOGIC_VECTOR (5 downto 0) := "101001";
    constant ap_const_lv6_2A : STD_LOGIC_VECTOR (5 downto 0) := "101010";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_2C : STD_LOGIC_VECTOR (5 downto 0) := "101100";
    constant ap_const_lv6_2D : STD_LOGIC_VECTOR (5 downto 0) := "101101";
    constant ap_const_lv6_2E : STD_LOGIC_VECTOR (5 downto 0) := "101110";
    constant ap_const_lv6_2F : STD_LOGIC_VECTOR (5 downto 0) := "101111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_3E : STD_LOGIC_VECTOR (5 downto 0) := "111110";
    constant ap_const_lv6_3D : STD_LOGIC_VECTOR (5 downto 0) := "111101";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv6_3B : STD_LOGIC_VECTOR (5 downto 0) := "111011";
    constant ap_const_lv6_3A : STD_LOGIC_VECTOR (5 downto 0) := "111010";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv6_36 : STD_LOGIC_VECTOR (5 downto 0) := "110110";
    constant ap_const_lv6_35 : STD_LOGIC_VECTOR (5 downto 0) := "110101";
    constant ap_const_lv6_34 : STD_LOGIC_VECTOR (5 downto 0) := "110100";
    constant ap_const_lv6_33 : STD_LOGIC_VECTOR (5 downto 0) := "110011";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv10_1C : STD_LOGIC_VECTOR (9 downto 0) := "0000011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv11_5DC : STD_LOGIC_VECTOR (10 downto 0) := "10111011100";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal conv_1_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_out_ce0 : STD_LOGIC;
    signal conv_1_out_we0 : STD_LOGIC;
    signal conv_1_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_out_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_out_ce1 : STD_LOGIC;
    signal conv_1_out_we1 : STD_LOGIC;
    signal conv_1_out_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_0_ce0 : STD_LOGIC;
    signal max_pool_1_out_0_we0 : STD_LOGIC;
    signal max_pool_1_out_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_0_ce1 : STD_LOGIC;
    signal max_pool_1_out_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_1_ce0 : STD_LOGIC;
    signal max_pool_1_out_1_we0 : STD_LOGIC;
    signal max_pool_1_out_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_1_ce1 : STD_LOGIC;
    signal max_pool_1_out_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_2_ce0 : STD_LOGIC;
    signal max_pool_1_out_2_we0 : STD_LOGIC;
    signal max_pool_1_out_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_2_ce1 : STD_LOGIC;
    signal max_pool_1_out_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_3_ce0 : STD_LOGIC;
    signal max_pool_1_out_3_we0 : STD_LOGIC;
    signal max_pool_1_out_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_3_ce1 : STD_LOGIC;
    signal max_pool_1_out_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_4_ce0 : STD_LOGIC;
    signal max_pool_1_out_4_we0 : STD_LOGIC;
    signal max_pool_1_out_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_4_ce1 : STD_LOGIC;
    signal max_pool_1_out_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_pool_1_out_5_ce0 : STD_LOGIC;
    signal max_pool_1_out_5_we0 : STD_LOGIC;
    signal max_pool_1_out_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_1_out_5_ce1 : STD_LOGIC;
    signal max_pool_1_out_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_2_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_2_out_ce0 : STD_LOGIC;
    signal conv_2_out_we0 : STD_LOGIC;
    signal conv_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_2_out_ce1 : STD_LOGIC;
    signal conv_2_out_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal max_pool_2_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal max_pool_2_out_ce0 : STD_LOGIC;
    signal max_pool_2_out_we0 : STD_LOGIC;
    signal max_pool_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_0_ce0 : STD_LOGIC;
    signal flat_array_0_we0 : STD_LOGIC;
    signal flat_array_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_0_ce1 : STD_LOGIC;
    signal flat_array_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_1_ce0 : STD_LOGIC;
    signal flat_array_1_we0 : STD_LOGIC;
    signal flat_array_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_1_ce1 : STD_LOGIC;
    signal flat_array_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_2_ce0 : STD_LOGIC;
    signal flat_array_2_we0 : STD_LOGIC;
    signal flat_array_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_2_ce1 : STD_LOGIC;
    signal flat_array_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_3_ce0 : STD_LOGIC;
    signal flat_array_3_we0 : STD_LOGIC;
    signal flat_array_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_3_ce1 : STD_LOGIC;
    signal flat_array_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_4_ce0 : STD_LOGIC;
    signal flat_array_4_we0 : STD_LOGIC;
    signal flat_array_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_4_ce1 : STD_LOGIC;
    signal flat_array_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_5_ce0 : STD_LOGIC;
    signal flat_array_5_we0 : STD_LOGIC;
    signal flat_array_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_5_ce1 : STD_LOGIC;
    signal flat_array_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_6_ce0 : STD_LOGIC;
    signal flat_array_6_we0 : STD_LOGIC;
    signal flat_array_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_6_ce1 : STD_LOGIC;
    signal flat_array_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_7_ce0 : STD_LOGIC;
    signal flat_array_7_we0 : STD_LOGIC;
    signal flat_array_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_7_ce1 : STD_LOGIC;
    signal flat_array_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_8_ce0 : STD_LOGIC;
    signal flat_array_8_we0 : STD_LOGIC;
    signal flat_array_8_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_8_ce1 : STD_LOGIC;
    signal flat_array_8_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_9_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_9_ce0 : STD_LOGIC;
    signal flat_array_9_we0 : STD_LOGIC;
    signal flat_array_9_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_9_ce1 : STD_LOGIC;
    signal flat_array_9_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_10_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_10_ce0 : STD_LOGIC;
    signal flat_array_10_we0 : STD_LOGIC;
    signal flat_array_10_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_10_ce1 : STD_LOGIC;
    signal flat_array_10_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_11_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_11_ce0 : STD_LOGIC;
    signal flat_array_11_we0 : STD_LOGIC;
    signal flat_array_11_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_11_ce1 : STD_LOGIC;
    signal flat_array_11_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_12_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_12_ce0 : STD_LOGIC;
    signal flat_array_12_we0 : STD_LOGIC;
    signal flat_array_12_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_12_ce1 : STD_LOGIC;
    signal flat_array_12_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_13_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_13_ce0 : STD_LOGIC;
    signal flat_array_13_we0 : STD_LOGIC;
    signal flat_array_13_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_13_ce1 : STD_LOGIC;
    signal flat_array_13_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_14_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_14_ce0 : STD_LOGIC;
    signal flat_array_14_we0 : STD_LOGIC;
    signal flat_array_14_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_14_ce1 : STD_LOGIC;
    signal flat_array_14_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_15_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_15_ce0 : STD_LOGIC;
    signal flat_array_15_we0 : STD_LOGIC;
    signal flat_array_15_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_15_ce1 : STD_LOGIC;
    signal flat_array_15_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_16_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_16_ce0 : STD_LOGIC;
    signal flat_array_16_we0 : STD_LOGIC;
    signal flat_array_16_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_16_ce1 : STD_LOGIC;
    signal flat_array_16_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_17_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_17_ce0 : STD_LOGIC;
    signal flat_array_17_we0 : STD_LOGIC;
    signal flat_array_17_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_17_ce1 : STD_LOGIC;
    signal flat_array_17_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_18_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_18_ce0 : STD_LOGIC;
    signal flat_array_18_we0 : STD_LOGIC;
    signal flat_array_18_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_18_ce1 : STD_LOGIC;
    signal flat_array_18_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_19_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_19_ce0 : STD_LOGIC;
    signal flat_array_19_we0 : STD_LOGIC;
    signal flat_array_19_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_19_ce1 : STD_LOGIC;
    signal flat_array_19_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_20_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_20_ce0 : STD_LOGIC;
    signal flat_array_20_we0 : STD_LOGIC;
    signal flat_array_20_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_20_ce1 : STD_LOGIC;
    signal flat_array_20_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_21_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_21_ce0 : STD_LOGIC;
    signal flat_array_21_we0 : STD_LOGIC;
    signal flat_array_21_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_21_ce1 : STD_LOGIC;
    signal flat_array_21_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_22_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_22_ce0 : STD_LOGIC;
    signal flat_array_22_we0 : STD_LOGIC;
    signal flat_array_22_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_22_ce1 : STD_LOGIC;
    signal flat_array_22_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_23_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_23_ce0 : STD_LOGIC;
    signal flat_array_23_we0 : STD_LOGIC;
    signal flat_array_23_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_23_ce1 : STD_LOGIC;
    signal flat_array_23_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_24_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_24_ce0 : STD_LOGIC;
    signal flat_array_24_we0 : STD_LOGIC;
    signal flat_array_24_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_24_ce1 : STD_LOGIC;
    signal flat_array_24_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_25_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_25_ce0 : STD_LOGIC;
    signal flat_array_25_we0 : STD_LOGIC;
    signal flat_array_25_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_25_ce1 : STD_LOGIC;
    signal flat_array_25_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_26_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_26_ce0 : STD_LOGIC;
    signal flat_array_26_we0 : STD_LOGIC;
    signal flat_array_26_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_26_ce1 : STD_LOGIC;
    signal flat_array_26_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_27_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_27_ce0 : STD_LOGIC;
    signal flat_array_27_we0 : STD_LOGIC;
    signal flat_array_27_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_27_ce1 : STD_LOGIC;
    signal flat_array_27_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_28_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_28_ce0 : STD_LOGIC;
    signal flat_array_28_we0 : STD_LOGIC;
    signal flat_array_28_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_28_ce1 : STD_LOGIC;
    signal flat_array_28_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_29_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_29_ce0 : STD_LOGIC;
    signal flat_array_29_we0 : STD_LOGIC;
    signal flat_array_29_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_29_ce1 : STD_LOGIC;
    signal flat_array_29_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_30_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_30_ce0 : STD_LOGIC;
    signal flat_array_30_we0 : STD_LOGIC;
    signal flat_array_30_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_30_ce1 : STD_LOGIC;
    signal flat_array_30_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_31_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_31_ce0 : STD_LOGIC;
    signal flat_array_31_we0 : STD_LOGIC;
    signal flat_array_31_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_31_ce1 : STD_LOGIC;
    signal flat_array_31_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_32_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_32_ce0 : STD_LOGIC;
    signal flat_array_32_we0 : STD_LOGIC;
    signal flat_array_32_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_32_ce1 : STD_LOGIC;
    signal flat_array_32_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_33_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_33_ce0 : STD_LOGIC;
    signal flat_array_33_we0 : STD_LOGIC;
    signal flat_array_33_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_33_ce1 : STD_LOGIC;
    signal flat_array_33_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_34_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_34_ce0 : STD_LOGIC;
    signal flat_array_34_we0 : STD_LOGIC;
    signal flat_array_34_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_34_ce1 : STD_LOGIC;
    signal flat_array_34_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_35_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_35_ce0 : STD_LOGIC;
    signal flat_array_35_we0 : STD_LOGIC;
    signal flat_array_35_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_35_ce1 : STD_LOGIC;
    signal flat_array_35_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_36_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_36_ce0 : STD_LOGIC;
    signal flat_array_36_we0 : STD_LOGIC;
    signal flat_array_36_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_36_ce1 : STD_LOGIC;
    signal flat_array_36_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_37_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_37_ce0 : STD_LOGIC;
    signal flat_array_37_we0 : STD_LOGIC;
    signal flat_array_37_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_37_ce1 : STD_LOGIC;
    signal flat_array_37_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_38_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_38_ce0 : STD_LOGIC;
    signal flat_array_38_we0 : STD_LOGIC;
    signal flat_array_38_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_38_ce1 : STD_LOGIC;
    signal flat_array_38_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_39_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_39_ce0 : STD_LOGIC;
    signal flat_array_39_we0 : STD_LOGIC;
    signal flat_array_39_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_39_ce1 : STD_LOGIC;
    signal flat_array_39_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_40_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_40_ce0 : STD_LOGIC;
    signal flat_array_40_we0 : STD_LOGIC;
    signal flat_array_40_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_40_ce1 : STD_LOGIC;
    signal flat_array_40_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_41_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_41_ce0 : STD_LOGIC;
    signal flat_array_41_we0 : STD_LOGIC;
    signal flat_array_41_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_41_ce1 : STD_LOGIC;
    signal flat_array_41_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_42_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_42_ce0 : STD_LOGIC;
    signal flat_array_42_we0 : STD_LOGIC;
    signal flat_array_42_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_42_ce1 : STD_LOGIC;
    signal flat_array_42_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_43_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_43_ce0 : STD_LOGIC;
    signal flat_array_43_we0 : STD_LOGIC;
    signal flat_array_43_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_43_ce1 : STD_LOGIC;
    signal flat_array_43_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_44_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_44_ce0 : STD_LOGIC;
    signal flat_array_44_we0 : STD_LOGIC;
    signal flat_array_44_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_44_ce1 : STD_LOGIC;
    signal flat_array_44_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_45_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_45_ce0 : STD_LOGIC;
    signal flat_array_45_we0 : STD_LOGIC;
    signal flat_array_45_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_45_ce1 : STD_LOGIC;
    signal flat_array_45_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_46_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_46_ce0 : STD_LOGIC;
    signal flat_array_46_we0 : STD_LOGIC;
    signal flat_array_46_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_46_ce1 : STD_LOGIC;
    signal flat_array_46_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_47_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_47_ce0 : STD_LOGIC;
    signal flat_array_47_we0 : STD_LOGIC;
    signal flat_array_47_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_47_ce1 : STD_LOGIC;
    signal flat_array_47_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_48_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_48_ce0 : STD_LOGIC;
    signal flat_array_48_we0 : STD_LOGIC;
    signal flat_array_48_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_48_ce1 : STD_LOGIC;
    signal flat_array_48_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_49_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal flat_array_49_ce0 : STD_LOGIC;
    signal flat_array_49_we0 : STD_LOGIC;
    signal flat_array_49_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal flat_array_49_ce1 : STD_LOGIC;
    signal flat_array_49_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_1_out_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal dense_2_weights_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_weights_ce0 : STD_LOGIC;
    signal dense_2_weights_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_bias_ce0 : STD_LOGIC;
    signal dense_2_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_out_ce0 : STD_LOGIC;
    signal dense_2_out_we0 : STD_LOGIC;
    signal dense_2_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_out_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_reg_661 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_0_i_reg_672 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_0_i_reg_683 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_i_reg_695 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_fu_1272_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_2259 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ix_in_fu_1278_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ix_in_reg_2264 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln23_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln27_fu_1308_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln27_reg_2269 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_fu_1320_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_reg_2277 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln25_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln27_fu_1335_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln27_reg_2287 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln28_fu_1340_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln28_reg_2292 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal dense_1_out_0_ret_reg_2547 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_dense_1_fu_812_ap_ready : STD_LOGIC;
    signal grp_dense_1_fu_812_ap_done : STD_LOGIC;
    signal dense_1_out_1_ret_reg_2552 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_2_ret_reg_2557 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_3_ret_reg_2562 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_4_ret_reg_2567 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_5_ret_reg_2572 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_6_ret_reg_2577 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_7_ret_reg_2582 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_8_ret_reg_2587 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_9_ret_reg_2592 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_10_ret_reg_2597 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_11_ret_reg_2602 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_12_ret_reg_2607 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_13_ret_reg_2612 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_14_ret_reg_2617 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_15_ret_reg_2622 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_16_ret_reg_2627 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_17_ret_reg_2632 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_18_ret_reg_2637 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_19_ret_reg_2642 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_20_ret_reg_2647 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_21_ret_reg_2652 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_22_ret_reg_2657 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_23_ret_reg_2662 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_24_ret_reg_2667 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_25_ret_reg_2672 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_26_ret_reg_2677 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_27_ret_reg_2682 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_28_ret_reg_2687 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_29_ret_reg_2692 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_30_ret_reg_2697 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_31_ret_reg_2702 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_32_ret_reg_2707 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_33_ret_reg_2712 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_34_ret_reg_2717 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_35_ret_reg_2722 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_36_ret_reg_2727 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_37_ret_reg_2732 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_38_ret_reg_2737 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_39_ret_reg_2742 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_40_ret_reg_2747 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_41_ret_reg_2752 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_42_ret_reg_2757 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_43_ret_reg_2762 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_44_ret_reg_2767 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_45_ret_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_46_ret_reg_2777 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_47_ret_reg_2782 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_48_ret_reg_2787 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_out_49_ret_reg_2792 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln9_fu_2100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln9_reg_2797 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state16_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln9_reg_2797_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln9_fu_2106_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln9_reg_2801 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal icmp_ln13_fu_2118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_reg_2806 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_1_fu_2124_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln14_1_reg_2811 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln14_2_fu_2132_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln14_2_reg_2816 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln14_2_reg_2816_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state17_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_i_reg_2832 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state18_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal j_1_fu_2185_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_reg_2837 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln14_fu_2190_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln13_1_fu_2198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_1_reg_2848 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_1_reg_2848_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln13_1_reg_2848_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln14_fu_2203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_reg_2852 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_reg_2852_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1249_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_2857 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_i_reg_2873 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state16 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal conv_1_input_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_1_input_ce0 : STD_LOGIC;
    signal conv_1_input_we0 : STD_LOGIC;
    signal conv_1_input_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_input_ce1 : STD_LOGIC;
    signal conv_1_input_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_start : STD_LOGIC;
    signal grp_dense_1_fu_812_ap_idle : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_0_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_0_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_1_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_1_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_1_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_2_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_2_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_2_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_3_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_3_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_3_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_4_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_4_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_4_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_5_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_5_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_5_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_6_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_6_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_6_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_7_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_7_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_7_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_8_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_8_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_8_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_9_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_9_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_9_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_9_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_10_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_10_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_10_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_10_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_11_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_11_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_11_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_11_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_12_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_12_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_12_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_12_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_13_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_13_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_13_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_13_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_14_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_14_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_14_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_14_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_15_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_15_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_15_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_15_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_16_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_16_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_16_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_16_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_17_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_17_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_17_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_17_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_18_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_18_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_18_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_18_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_19_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_19_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_19_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_19_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_20_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_20_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_20_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_20_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_21_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_21_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_21_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_21_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_22_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_22_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_22_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_22_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_23_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_23_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_23_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_23_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_24_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_24_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_24_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_24_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_25_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_25_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_25_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_25_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_26_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_26_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_26_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_26_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_27_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_27_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_27_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_27_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_28_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_28_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_28_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_28_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_29_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_29_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_29_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_29_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_30_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_30_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_30_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_30_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_31_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_31_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_31_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_31_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_32_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_32_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_32_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_32_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_33_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_33_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_33_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_33_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_34_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_34_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_34_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_34_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_35_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_35_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_35_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_35_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_36_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_36_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_36_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_36_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_37_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_37_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_37_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_37_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_38_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_38_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_38_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_38_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_39_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_39_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_39_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_39_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_40_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_40_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_40_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_40_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_41_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_41_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_41_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_41_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_42_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_42_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_42_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_42_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_43_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_43_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_43_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_43_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_44_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_44_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_44_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_44_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_45_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_45_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_45_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_45_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_46_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_46_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_46_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_46_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_47_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_47_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_47_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_47_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_48_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_48_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_48_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_48_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_49_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_49_ce0 : STD_LOGIC;
    signal grp_dense_1_fu_812_flat_array_49_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dense_1_fu_812_flat_array_49_ce1 : STD_LOGIC;
    signal grp_dense_1_fu_812_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_8 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_9 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_11 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_12 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_13 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_14 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_15 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_25 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_26 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_27 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_28 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_29 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_30 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_31 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_32 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_33 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_34 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_35 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_36 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_37 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_38 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_39 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_40 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_41 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_42 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_43 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_44 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_45 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_46 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_47 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_return_49 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_2_fu_970_ap_start : STD_LOGIC;
    signal grp_conv_2_fu_970_ap_done : STD_LOGIC;
    signal grp_conv_2_fu_970_ap_idle : STD_LOGIC;
    signal grp_conv_2_fu_970_ap_ready : STD_LOGIC;
    signal grp_conv_2_fu_970_conv_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv_2_fu_970_conv_out_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_conv_out_we0 : STD_LOGIC;
    signal grp_conv_2_fu_970_conv_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_0_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_0_ce1 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_1_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_1_ce1 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_2_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_2_ce1 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_3_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_3_ce1 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_4_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_4_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_4_ce1 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_5_ce0 : STD_LOGIC;
    signal grp_conv_2_fu_970_max_pool_1_out_5_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv_2_fu_970_max_pool_1_out_5_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_1098_ap_start : STD_LOGIC;
    signal grp_conv_1_fu_1098_ap_done : STD_LOGIC;
    signal grp_conv_1_fu_1098_ap_idle : STD_LOGIC;
    signal grp_conv_1_fu_1098_ap_ready : STD_LOGIC;
    signal grp_conv_1_fu_1098_input_r_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_1_fu_1098_input_r_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_1098_input_r_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv_1_fu_1098_input_r_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_1098_conv_1_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_1_fu_1098_conv_1_out_ce0 : STD_LOGIC;
    signal grp_conv_1_fu_1098_conv_1_out_we0 : STD_LOGIC;
    signal grp_conv_1_fu_1098_conv_1_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_1_fu_1098_conv_1_out_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv_1_fu_1098_conv_1_out_ce1 : STD_LOGIC;
    signal grp_conv_1_fu_1098_conv_1_out_we1 : STD_LOGIC;
    signal grp_conv_1_fu_1098_conv_1_out_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_1105_ap_start : STD_LOGIC;
    signal grp_dense_out_fu_1105_ap_done : STD_LOGIC;
    signal grp_dense_out_fu_1105_ap_idle : STD_LOGIC;
    signal grp_dense_out_fu_1105_ap_ready : STD_LOGIC;
    signal grp_dense_out_fu_1105_prediction_Addr_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_1105_prediction_EN_A : STD_LOGIC;
    signal grp_dense_out_fu_1105_prediction_WEN_A : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dense_out_fu_1105_prediction_Din_A : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_out_fu_1105_dense_2_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_dense_out_fu_1105_dense_2_out_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_ap_start : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_ap_done : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_ap_idle : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_ap_ready : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_max_pool_2_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_max_pool_2_fu_1117_max_pool_2_out_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_max_pool_2_out_we0 : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_max_pool_2_out_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_2_fu_1117_conv_2_out_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_2_fu_1117_conv_2_out_ce0 : STD_LOGIC;
    signal grp_max_pool_2_fu_1117_conv_2_out_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_max_pool_2_fu_1117_conv_2_out_ce1 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_ap_start : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_ap_done : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_ap_idle : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_ap_ready : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_conv_out_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_max_pool_1_fu_1125_conv_out_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_conv_out_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_max_pool_1_fu_1125_conv_out_ce1 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_0_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_0_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_1_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_1_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_2_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_2_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_3_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_3_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_4_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_4_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_4_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_5_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_max_pool_1_fu_1125_max_pool_out_5_ce0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_5_we0 : STD_LOGIC;
    signal grp_max_pool_1_fu_1125_max_pool_out_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_ap_start : STD_LOGIC;
    signal grp_flat_fu_1143_ap_done : STD_LOGIC;
    signal grp_flat_fu_1143_ap_idle : STD_LOGIC;
    signal grp_flat_fu_1143_ap_ready : STD_LOGIC;
    signal grp_flat_fu_1143_max_pool_out_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_flat_fu_1143_max_pool_out_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_0_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_0_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_1_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_1_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_2_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_2_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_3_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_3_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_4_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_4_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_5_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_5_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_6_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_6_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_7_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_7_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_8_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_8_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_8_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_8_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_9_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_9_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_9_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_9_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_10_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_10_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_10_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_10_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_11_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_11_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_11_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_11_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_12_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_12_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_12_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_12_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_13_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_13_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_13_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_13_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_14_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_14_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_14_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_14_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_15_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_15_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_15_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_15_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_16_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_16_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_16_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_16_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_17_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_17_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_17_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_17_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_18_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_18_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_18_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_18_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_19_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_19_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_19_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_19_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_20_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_20_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_20_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_20_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_21_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_21_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_21_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_21_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_22_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_22_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_22_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_22_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_23_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_23_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_23_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_23_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_24_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_24_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_24_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_24_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_25_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_25_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_25_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_25_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_26_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_26_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_26_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_26_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_27_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_27_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_27_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_27_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_28_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_28_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_28_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_28_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_29_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_29_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_29_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_29_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_30_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_30_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_30_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_30_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_31_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_31_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_31_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_31_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_32_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_32_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_32_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_32_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_33_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_33_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_33_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_33_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_34_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_34_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_34_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_34_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_35_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_35_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_35_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_35_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_36_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_36_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_36_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_36_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_37_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_37_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_37_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_37_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_38_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_38_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_38_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_38_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_39_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_39_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_39_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_39_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_40_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_40_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_40_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_40_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_41_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_41_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_41_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_41_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_42_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_42_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_42_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_42_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_43_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_43_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_43_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_43_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_44_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_44_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_44_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_44_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_45_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_45_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_45_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_45_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_46_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_46_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_46_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_46_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_47_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_47_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_47_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_47_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_48_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_48_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_48_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_48_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_flat_fu_1143_flat_array_49_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_flat_fu_1143_flat_array_49_ce0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_49_we0 : STD_LOGIC;
    signal grp_flat_fu_1143_flat_array_49_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ix_in_0_reg_617 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_0_reg_629 : STD_LOGIC_VECTOR (4 downto 0);
    signal ix_in_1_reg_640 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal j_0_reg_650 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_665_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_0_i_phi_fu_676_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_sum_0_i_phi_fu_687_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_j_0_i_phi_fu_699_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_dense_1_fu_812_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv_2_fu_970_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_conv_1_fu_1098_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_dense_out_fu_1105_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_max_pool_2_fu_1117_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_max_pool_1_fu_1125_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_flat_fu_1143_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln27_1_fu_1326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln27_fu_1346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln14_fu_2180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal cnn_input_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1249_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1249_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_57_fu_1284_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_58_fu_1296_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln27_fu_1292_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln27_2_fu_1304_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln27_3_fu_1331_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_1_fu_2112_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_59_fu_2144_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_60_fu_2156_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln14_113_fu_2152_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln14_114_fu_2164_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln14_fu_2168_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln13_fu_2140_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln14_fu_2174_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln19_fu_2207_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_2210_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln19_fu_2220_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln19_2_fu_2230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_fu_2224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln19_fu_2236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln19_fu_2242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_2322 : BOOLEAN;
    signal ap_condition_1165 : BOOLEAN;

    component dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dense_1_out_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_5_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_6_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_7_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_8_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_9_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_10_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_11_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_12_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_13_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_14_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_15_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_16_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_17_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_18_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_19_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_20_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_21_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_22_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_23_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_24_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_25_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_26_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_27_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_28_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_29_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_30_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_31_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_32_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_33_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_34_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_35_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_36_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_37_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_38_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_39_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_40_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_41_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_42_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_43_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_44_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_45_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_46_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_47_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_48_read : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_out_49_read : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_0_ce0 : OUT STD_LOGIC;
        flat_array_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_0_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_0_ce1 : OUT STD_LOGIC;
        flat_array_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_1_ce0 : OUT STD_LOGIC;
        flat_array_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_1_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_1_ce1 : OUT STD_LOGIC;
        flat_array_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_2_ce0 : OUT STD_LOGIC;
        flat_array_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_2_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_2_ce1 : OUT STD_LOGIC;
        flat_array_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_3_ce0 : OUT STD_LOGIC;
        flat_array_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_3_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_3_ce1 : OUT STD_LOGIC;
        flat_array_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_4_ce0 : OUT STD_LOGIC;
        flat_array_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_4_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_4_ce1 : OUT STD_LOGIC;
        flat_array_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_5_ce0 : OUT STD_LOGIC;
        flat_array_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_5_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_5_ce1 : OUT STD_LOGIC;
        flat_array_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_6_ce0 : OUT STD_LOGIC;
        flat_array_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_6_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_6_ce1 : OUT STD_LOGIC;
        flat_array_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_7_ce0 : OUT STD_LOGIC;
        flat_array_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_7_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_7_ce1 : OUT STD_LOGIC;
        flat_array_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_8_ce0 : OUT STD_LOGIC;
        flat_array_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_8_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_8_ce1 : OUT STD_LOGIC;
        flat_array_8_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_9_ce0 : OUT STD_LOGIC;
        flat_array_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_9_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_9_ce1 : OUT STD_LOGIC;
        flat_array_9_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_10_ce0 : OUT STD_LOGIC;
        flat_array_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_10_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_10_ce1 : OUT STD_LOGIC;
        flat_array_10_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_11_ce0 : OUT STD_LOGIC;
        flat_array_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_11_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_11_ce1 : OUT STD_LOGIC;
        flat_array_11_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_12_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_12_ce0 : OUT STD_LOGIC;
        flat_array_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_12_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_12_ce1 : OUT STD_LOGIC;
        flat_array_12_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_13_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_13_ce0 : OUT STD_LOGIC;
        flat_array_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_13_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_13_ce1 : OUT STD_LOGIC;
        flat_array_13_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_14_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_14_ce0 : OUT STD_LOGIC;
        flat_array_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_14_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_14_ce1 : OUT STD_LOGIC;
        flat_array_14_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_15_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_15_ce0 : OUT STD_LOGIC;
        flat_array_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_15_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_15_ce1 : OUT STD_LOGIC;
        flat_array_15_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_16_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_16_ce0 : OUT STD_LOGIC;
        flat_array_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_16_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_16_ce1 : OUT STD_LOGIC;
        flat_array_16_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_17_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_17_ce0 : OUT STD_LOGIC;
        flat_array_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_17_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_17_ce1 : OUT STD_LOGIC;
        flat_array_17_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_18_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_18_ce0 : OUT STD_LOGIC;
        flat_array_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_18_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_18_ce1 : OUT STD_LOGIC;
        flat_array_18_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_19_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_19_ce0 : OUT STD_LOGIC;
        flat_array_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_19_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_19_ce1 : OUT STD_LOGIC;
        flat_array_19_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_20_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_20_ce0 : OUT STD_LOGIC;
        flat_array_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_20_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_20_ce1 : OUT STD_LOGIC;
        flat_array_20_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_21_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_21_ce0 : OUT STD_LOGIC;
        flat_array_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_21_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_21_ce1 : OUT STD_LOGIC;
        flat_array_21_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_22_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_22_ce0 : OUT STD_LOGIC;
        flat_array_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_22_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_22_ce1 : OUT STD_LOGIC;
        flat_array_22_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_23_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_23_ce0 : OUT STD_LOGIC;
        flat_array_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_23_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_23_ce1 : OUT STD_LOGIC;
        flat_array_23_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_24_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_24_ce0 : OUT STD_LOGIC;
        flat_array_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_24_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_24_ce1 : OUT STD_LOGIC;
        flat_array_24_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_25_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_25_ce0 : OUT STD_LOGIC;
        flat_array_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_25_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_25_ce1 : OUT STD_LOGIC;
        flat_array_25_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_26_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_26_ce0 : OUT STD_LOGIC;
        flat_array_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_26_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_26_ce1 : OUT STD_LOGIC;
        flat_array_26_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_27_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_27_ce0 : OUT STD_LOGIC;
        flat_array_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_27_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_27_ce1 : OUT STD_LOGIC;
        flat_array_27_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_28_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_28_ce0 : OUT STD_LOGIC;
        flat_array_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_28_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_28_ce1 : OUT STD_LOGIC;
        flat_array_28_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_29_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_29_ce0 : OUT STD_LOGIC;
        flat_array_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_29_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_29_ce1 : OUT STD_LOGIC;
        flat_array_29_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_30_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_30_ce0 : OUT STD_LOGIC;
        flat_array_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_30_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_30_ce1 : OUT STD_LOGIC;
        flat_array_30_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_31_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_31_ce0 : OUT STD_LOGIC;
        flat_array_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_31_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_31_ce1 : OUT STD_LOGIC;
        flat_array_31_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_32_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_32_ce0 : OUT STD_LOGIC;
        flat_array_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_32_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_32_ce1 : OUT STD_LOGIC;
        flat_array_32_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_33_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_33_ce0 : OUT STD_LOGIC;
        flat_array_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_33_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_33_ce1 : OUT STD_LOGIC;
        flat_array_33_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_34_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_34_ce0 : OUT STD_LOGIC;
        flat_array_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_34_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_34_ce1 : OUT STD_LOGIC;
        flat_array_34_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_35_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_35_ce0 : OUT STD_LOGIC;
        flat_array_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_35_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_35_ce1 : OUT STD_LOGIC;
        flat_array_35_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_36_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_36_ce0 : OUT STD_LOGIC;
        flat_array_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_36_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_36_ce1 : OUT STD_LOGIC;
        flat_array_36_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_37_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_37_ce0 : OUT STD_LOGIC;
        flat_array_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_37_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_37_ce1 : OUT STD_LOGIC;
        flat_array_37_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_38_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_38_ce0 : OUT STD_LOGIC;
        flat_array_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_38_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_38_ce1 : OUT STD_LOGIC;
        flat_array_38_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_39_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_39_ce0 : OUT STD_LOGIC;
        flat_array_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_39_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_39_ce1 : OUT STD_LOGIC;
        flat_array_39_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_40_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_40_ce0 : OUT STD_LOGIC;
        flat_array_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_40_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_40_ce1 : OUT STD_LOGIC;
        flat_array_40_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_41_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_41_ce0 : OUT STD_LOGIC;
        flat_array_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_41_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_41_ce1 : OUT STD_LOGIC;
        flat_array_41_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_42_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_42_ce0 : OUT STD_LOGIC;
        flat_array_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_42_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_42_ce1 : OUT STD_LOGIC;
        flat_array_42_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_43_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_43_ce0 : OUT STD_LOGIC;
        flat_array_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_43_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_43_ce1 : OUT STD_LOGIC;
        flat_array_43_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_44_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_44_ce0 : OUT STD_LOGIC;
        flat_array_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_44_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_44_ce1 : OUT STD_LOGIC;
        flat_array_44_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_45_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_45_ce0 : OUT STD_LOGIC;
        flat_array_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_45_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_45_ce1 : OUT STD_LOGIC;
        flat_array_45_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_46_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_46_ce0 : OUT STD_LOGIC;
        flat_array_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_46_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_46_ce1 : OUT STD_LOGIC;
        flat_array_46_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_47_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_47_ce0 : OUT STD_LOGIC;
        flat_array_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_47_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_47_ce1 : OUT STD_LOGIC;
        flat_array_47_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_48_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_48_ce0 : OUT STD_LOGIC;
        flat_array_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_48_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_48_ce1 : OUT STD_LOGIC;
        flat_array_48_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_49_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_49_ce0 : OUT STD_LOGIC;
        flat_array_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_49_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_49_ce1 : OUT STD_LOGIC;
        flat_array_49_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_out_ce0 : OUT STD_LOGIC;
        conv_out_we0 : OUT STD_LOGIC;
        conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_0_ce0 : OUT STD_LOGIC;
        max_pool_1_out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_0_ce1 : OUT STD_LOGIC;
        max_pool_1_out_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_1_ce0 : OUT STD_LOGIC;
        max_pool_1_out_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_1_ce1 : OUT STD_LOGIC;
        max_pool_1_out_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_2_ce0 : OUT STD_LOGIC;
        max_pool_1_out_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_2_ce1 : OUT STD_LOGIC;
        max_pool_1_out_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_3_ce0 : OUT STD_LOGIC;
        max_pool_1_out_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_3_ce1 : OUT STD_LOGIC;
        max_pool_1_out_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_4_ce0 : OUT STD_LOGIC;
        max_pool_1_out_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_4_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_4_ce1 : OUT STD_LOGIC;
        max_pool_1_out_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_5_ce0 : OUT STD_LOGIC;
        max_pool_1_out_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_1_out_5_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_1_out_5_ce1 : OUT STD_LOGIC;
        max_pool_1_out_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_r_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_r_ce1 : OUT STD_LOGIC;
        input_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_1_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_1_out_ce0 : OUT STD_LOGIC;
        conv_1_out_we0 : OUT STD_LOGIC;
        conv_1_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_1_out_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_1_out_ce1 : OUT STD_LOGIC;
        conv_1_out_we1 : OUT STD_LOGIC;
        conv_1_out_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dense_out IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        prediction_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_EN_A : OUT STD_LOGIC;
        prediction_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
        prediction_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
        prediction_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_2_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_out_ce0 : OUT STD_LOGIC;
        dense_2_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component max_pool_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_2_out_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_2_out_ce0 : OUT STD_LOGIC;
        max_pool_2_out_we0 : OUT STD_LOGIC;
        max_pool_2_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_2_out_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_2_out_ce0 : OUT STD_LOGIC;
        conv_2_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_2_out_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv_2_out_ce1 : OUT STD_LOGIC;
        conv_2_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component max_pool_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_out_ce0 : OUT STD_LOGIC;
        conv_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_out_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv_out_ce1 : OUT STD_LOGIC;
        conv_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_0_ce0 : OUT STD_LOGIC;
        max_pool_out_0_we0 : OUT STD_LOGIC;
        max_pool_out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_1_ce0 : OUT STD_LOGIC;
        max_pool_out_1_we0 : OUT STD_LOGIC;
        max_pool_out_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_2_ce0 : OUT STD_LOGIC;
        max_pool_out_2_we0 : OUT STD_LOGIC;
        max_pool_out_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_3_ce0 : OUT STD_LOGIC;
        max_pool_out_3_we0 : OUT STD_LOGIC;
        max_pool_out_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_4_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_4_ce0 : OUT STD_LOGIC;
        max_pool_out_4_we0 : OUT STD_LOGIC;
        max_pool_out_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        max_pool_out_5_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        max_pool_out_5_ce0 : OUT STD_LOGIC;
        max_pool_out_5_we0 : OUT STD_LOGIC;
        max_pool_out_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component flat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        max_pool_out_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        max_pool_out_ce0 : OUT STD_LOGIC;
        max_pool_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        flat_array_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_0_ce0 : OUT STD_LOGIC;
        flat_array_0_we0 : OUT STD_LOGIC;
        flat_array_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_1_ce0 : OUT STD_LOGIC;
        flat_array_1_we0 : OUT STD_LOGIC;
        flat_array_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_2_ce0 : OUT STD_LOGIC;
        flat_array_2_we0 : OUT STD_LOGIC;
        flat_array_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_3_ce0 : OUT STD_LOGIC;
        flat_array_3_we0 : OUT STD_LOGIC;
        flat_array_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_4_ce0 : OUT STD_LOGIC;
        flat_array_4_we0 : OUT STD_LOGIC;
        flat_array_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_5_ce0 : OUT STD_LOGIC;
        flat_array_5_we0 : OUT STD_LOGIC;
        flat_array_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_6_ce0 : OUT STD_LOGIC;
        flat_array_6_we0 : OUT STD_LOGIC;
        flat_array_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_7_ce0 : OUT STD_LOGIC;
        flat_array_7_we0 : OUT STD_LOGIC;
        flat_array_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_8_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_8_ce0 : OUT STD_LOGIC;
        flat_array_8_we0 : OUT STD_LOGIC;
        flat_array_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_9_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_9_ce0 : OUT STD_LOGIC;
        flat_array_9_we0 : OUT STD_LOGIC;
        flat_array_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_10_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_10_ce0 : OUT STD_LOGIC;
        flat_array_10_we0 : OUT STD_LOGIC;
        flat_array_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_11_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_11_ce0 : OUT STD_LOGIC;
        flat_array_11_we0 : OUT STD_LOGIC;
        flat_array_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_12_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_12_ce0 : OUT STD_LOGIC;
        flat_array_12_we0 : OUT STD_LOGIC;
        flat_array_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_13_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_13_ce0 : OUT STD_LOGIC;
        flat_array_13_we0 : OUT STD_LOGIC;
        flat_array_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_14_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_14_ce0 : OUT STD_LOGIC;
        flat_array_14_we0 : OUT STD_LOGIC;
        flat_array_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_15_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_15_ce0 : OUT STD_LOGIC;
        flat_array_15_we0 : OUT STD_LOGIC;
        flat_array_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_16_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_16_ce0 : OUT STD_LOGIC;
        flat_array_16_we0 : OUT STD_LOGIC;
        flat_array_16_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_17_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_17_ce0 : OUT STD_LOGIC;
        flat_array_17_we0 : OUT STD_LOGIC;
        flat_array_17_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_18_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_18_ce0 : OUT STD_LOGIC;
        flat_array_18_we0 : OUT STD_LOGIC;
        flat_array_18_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_19_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_19_ce0 : OUT STD_LOGIC;
        flat_array_19_we0 : OUT STD_LOGIC;
        flat_array_19_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_20_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_20_ce0 : OUT STD_LOGIC;
        flat_array_20_we0 : OUT STD_LOGIC;
        flat_array_20_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_21_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_21_ce0 : OUT STD_LOGIC;
        flat_array_21_we0 : OUT STD_LOGIC;
        flat_array_21_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_22_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_22_ce0 : OUT STD_LOGIC;
        flat_array_22_we0 : OUT STD_LOGIC;
        flat_array_22_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_23_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_23_ce0 : OUT STD_LOGIC;
        flat_array_23_we0 : OUT STD_LOGIC;
        flat_array_23_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_24_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_24_ce0 : OUT STD_LOGIC;
        flat_array_24_we0 : OUT STD_LOGIC;
        flat_array_24_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_25_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_25_ce0 : OUT STD_LOGIC;
        flat_array_25_we0 : OUT STD_LOGIC;
        flat_array_25_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_26_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_26_ce0 : OUT STD_LOGIC;
        flat_array_26_we0 : OUT STD_LOGIC;
        flat_array_26_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_27_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_27_ce0 : OUT STD_LOGIC;
        flat_array_27_we0 : OUT STD_LOGIC;
        flat_array_27_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_28_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_28_ce0 : OUT STD_LOGIC;
        flat_array_28_we0 : OUT STD_LOGIC;
        flat_array_28_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_29_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_29_ce0 : OUT STD_LOGIC;
        flat_array_29_we0 : OUT STD_LOGIC;
        flat_array_29_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_30_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_30_ce0 : OUT STD_LOGIC;
        flat_array_30_we0 : OUT STD_LOGIC;
        flat_array_30_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_31_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_31_ce0 : OUT STD_LOGIC;
        flat_array_31_we0 : OUT STD_LOGIC;
        flat_array_31_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_32_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_32_ce0 : OUT STD_LOGIC;
        flat_array_32_we0 : OUT STD_LOGIC;
        flat_array_32_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_33_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_33_ce0 : OUT STD_LOGIC;
        flat_array_33_we0 : OUT STD_LOGIC;
        flat_array_33_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_34_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_34_ce0 : OUT STD_LOGIC;
        flat_array_34_we0 : OUT STD_LOGIC;
        flat_array_34_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_35_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_35_ce0 : OUT STD_LOGIC;
        flat_array_35_we0 : OUT STD_LOGIC;
        flat_array_35_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_36_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_36_ce0 : OUT STD_LOGIC;
        flat_array_36_we0 : OUT STD_LOGIC;
        flat_array_36_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_37_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_37_ce0 : OUT STD_LOGIC;
        flat_array_37_we0 : OUT STD_LOGIC;
        flat_array_37_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_38_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_38_ce0 : OUT STD_LOGIC;
        flat_array_38_we0 : OUT STD_LOGIC;
        flat_array_38_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_39_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_39_ce0 : OUT STD_LOGIC;
        flat_array_39_we0 : OUT STD_LOGIC;
        flat_array_39_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_40_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_40_ce0 : OUT STD_LOGIC;
        flat_array_40_we0 : OUT STD_LOGIC;
        flat_array_40_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_41_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_41_ce0 : OUT STD_LOGIC;
        flat_array_41_we0 : OUT STD_LOGIC;
        flat_array_41_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_42_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_42_ce0 : OUT STD_LOGIC;
        flat_array_42_we0 : OUT STD_LOGIC;
        flat_array_42_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_43_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_43_ce0 : OUT STD_LOGIC;
        flat_array_43_we0 : OUT STD_LOGIC;
        flat_array_43_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_44_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_44_ce0 : OUT STD_LOGIC;
        flat_array_44_we0 : OUT STD_LOGIC;
        flat_array_44_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_45_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_45_ce0 : OUT STD_LOGIC;
        flat_array_45_we0 : OUT STD_LOGIC;
        flat_array_45_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_46_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_46_ce0 : OUT STD_LOGIC;
        flat_array_46_we0 : OUT STD_LOGIC;
        flat_array_46_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_47_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_47_ce0 : OUT STD_LOGIC;
        flat_array_47_we0 : OUT STD_LOGIC;
        flat_array_47_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_48_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_48_ce0 : OUT STD_LOGIC;
        flat_array_48_we0 : OUT STD_LOGIC;
        flat_array_48_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        flat_array_49_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        flat_array_49_ce0 : OUT STD_LOGIC;
        flat_array_49_we0 : OUT STD_LOGIC;
        flat_array_49_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fadd_32ns_32nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fmul_32ns_32ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_fcmp_32ns_32ndEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component cnn_conv_1_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_max_pool_1_oubhl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_conv_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_max_pool_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_flat_array_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_2_weights IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_2_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_dense_2_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_conv_1_input IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cnn_CRTL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    conv_1_out_U : component cnn_conv_1_out
    generic map (
        DataWidth => 32,
        AddressRange => 4056,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_1_out_address0,
        ce0 => conv_1_out_ce0,
        we0 => conv_1_out_we0,
        d0 => grp_conv_1_fu_1098_conv_1_out_d0,
        q0 => conv_1_out_q0,
        address1 => conv_1_out_address1,
        ce1 => conv_1_out_ce1,
        we1 => conv_1_out_we1,
        d1 => grp_conv_1_fu_1098_conv_1_out_d1,
        q1 => conv_1_out_q1);

    max_pool_1_out_0_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_0_address0,
        ce0 => max_pool_1_out_0_ce0,
        we0 => max_pool_1_out_0_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_0_d0,
        q0 => max_pool_1_out_0_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_0_address1,
        ce1 => max_pool_1_out_0_ce1,
        q1 => max_pool_1_out_0_q1);

    max_pool_1_out_1_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_1_address0,
        ce0 => max_pool_1_out_1_ce0,
        we0 => max_pool_1_out_1_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_1_d0,
        q0 => max_pool_1_out_1_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_1_address1,
        ce1 => max_pool_1_out_1_ce1,
        q1 => max_pool_1_out_1_q1);

    max_pool_1_out_2_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_2_address0,
        ce0 => max_pool_1_out_2_ce0,
        we0 => max_pool_1_out_2_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_2_d0,
        q0 => max_pool_1_out_2_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_2_address1,
        ce1 => max_pool_1_out_2_ce1,
        q1 => max_pool_1_out_2_q1);

    max_pool_1_out_3_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_3_address0,
        ce0 => max_pool_1_out_3_ce0,
        we0 => max_pool_1_out_3_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_3_d0,
        q0 => max_pool_1_out_3_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_3_address1,
        ce1 => max_pool_1_out_3_ce1,
        q1 => max_pool_1_out_3_q1);

    max_pool_1_out_4_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_4_address0,
        ce0 => max_pool_1_out_4_ce0,
        we0 => max_pool_1_out_4_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_4_d0,
        q0 => max_pool_1_out_4_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_4_address1,
        ce1 => max_pool_1_out_4_ce1,
        q1 => max_pool_1_out_4_q1);

    max_pool_1_out_5_U : component cnn_max_pool_1_oubhl
    generic map (
        DataWidth => 32,
        AddressRange => 169,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_1_out_5_address0,
        ce0 => max_pool_1_out_5_ce0,
        we0 => max_pool_1_out_5_we0,
        d0 => grp_max_pool_1_fu_1125_max_pool_out_5_d0,
        q0 => max_pool_1_out_5_q0,
        address1 => grp_conv_2_fu_970_max_pool_1_out_5_address1,
        ce1 => max_pool_1_out_5_ce1,
        q1 => max_pool_1_out_5_q1);

    conv_2_out_U : component cnn_conv_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 1936,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_2_out_address0,
        ce0 => conv_2_out_ce0,
        we0 => conv_2_out_we0,
        d0 => grp_conv_2_fu_970_conv_out_d0,
        q0 => conv_2_out_q0,
        address1 => grp_max_pool_2_fu_1117_conv_2_out_address1,
        ce1 => conv_2_out_ce1,
        q1 => conv_2_out_q1);

    max_pool_2_out_U : component cnn_max_pool_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 400,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => max_pool_2_out_address0,
        ce0 => max_pool_2_out_ce0,
        we0 => max_pool_2_out_we0,
        d0 => grp_max_pool_2_fu_1117_max_pool_2_out_d0,
        q0 => max_pool_2_out_q0);

    flat_array_0_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_0_address0,
        ce0 => flat_array_0_ce0,
        we0 => flat_array_0_we0,
        d0 => grp_flat_fu_1143_flat_array_0_d0,
        q0 => flat_array_0_q0,
        address1 => grp_dense_1_fu_812_flat_array_0_address1,
        ce1 => flat_array_0_ce1,
        q1 => flat_array_0_q1);

    flat_array_1_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_1_address0,
        ce0 => flat_array_1_ce0,
        we0 => flat_array_1_we0,
        d0 => grp_flat_fu_1143_flat_array_1_d0,
        q0 => flat_array_1_q0,
        address1 => grp_dense_1_fu_812_flat_array_1_address1,
        ce1 => flat_array_1_ce1,
        q1 => flat_array_1_q1);

    flat_array_2_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_2_address0,
        ce0 => flat_array_2_ce0,
        we0 => flat_array_2_we0,
        d0 => grp_flat_fu_1143_flat_array_2_d0,
        q0 => flat_array_2_q0,
        address1 => grp_dense_1_fu_812_flat_array_2_address1,
        ce1 => flat_array_2_ce1,
        q1 => flat_array_2_q1);

    flat_array_3_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_3_address0,
        ce0 => flat_array_3_ce0,
        we0 => flat_array_3_we0,
        d0 => grp_flat_fu_1143_flat_array_3_d0,
        q0 => flat_array_3_q0,
        address1 => grp_dense_1_fu_812_flat_array_3_address1,
        ce1 => flat_array_3_ce1,
        q1 => flat_array_3_q1);

    flat_array_4_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_4_address0,
        ce0 => flat_array_4_ce0,
        we0 => flat_array_4_we0,
        d0 => grp_flat_fu_1143_flat_array_4_d0,
        q0 => flat_array_4_q0,
        address1 => grp_dense_1_fu_812_flat_array_4_address1,
        ce1 => flat_array_4_ce1,
        q1 => flat_array_4_q1);

    flat_array_5_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_5_address0,
        ce0 => flat_array_5_ce0,
        we0 => flat_array_5_we0,
        d0 => grp_flat_fu_1143_flat_array_5_d0,
        q0 => flat_array_5_q0,
        address1 => grp_dense_1_fu_812_flat_array_5_address1,
        ce1 => flat_array_5_ce1,
        q1 => flat_array_5_q1);

    flat_array_6_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_6_address0,
        ce0 => flat_array_6_ce0,
        we0 => flat_array_6_we0,
        d0 => grp_flat_fu_1143_flat_array_6_d0,
        q0 => flat_array_6_q0,
        address1 => grp_dense_1_fu_812_flat_array_6_address1,
        ce1 => flat_array_6_ce1,
        q1 => flat_array_6_q1);

    flat_array_7_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_7_address0,
        ce0 => flat_array_7_ce0,
        we0 => flat_array_7_we0,
        d0 => grp_flat_fu_1143_flat_array_7_d0,
        q0 => flat_array_7_q0,
        address1 => grp_dense_1_fu_812_flat_array_7_address1,
        ce1 => flat_array_7_ce1,
        q1 => flat_array_7_q1);

    flat_array_8_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_8_address0,
        ce0 => flat_array_8_ce0,
        we0 => flat_array_8_we0,
        d0 => grp_flat_fu_1143_flat_array_8_d0,
        q0 => flat_array_8_q0,
        address1 => grp_dense_1_fu_812_flat_array_8_address1,
        ce1 => flat_array_8_ce1,
        q1 => flat_array_8_q1);

    flat_array_9_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_9_address0,
        ce0 => flat_array_9_ce0,
        we0 => flat_array_9_we0,
        d0 => grp_flat_fu_1143_flat_array_9_d0,
        q0 => flat_array_9_q0,
        address1 => grp_dense_1_fu_812_flat_array_9_address1,
        ce1 => flat_array_9_ce1,
        q1 => flat_array_9_q1);

    flat_array_10_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_10_address0,
        ce0 => flat_array_10_ce0,
        we0 => flat_array_10_we0,
        d0 => grp_flat_fu_1143_flat_array_10_d0,
        q0 => flat_array_10_q0,
        address1 => grp_dense_1_fu_812_flat_array_10_address1,
        ce1 => flat_array_10_ce1,
        q1 => flat_array_10_q1);

    flat_array_11_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_11_address0,
        ce0 => flat_array_11_ce0,
        we0 => flat_array_11_we0,
        d0 => grp_flat_fu_1143_flat_array_11_d0,
        q0 => flat_array_11_q0,
        address1 => grp_dense_1_fu_812_flat_array_11_address1,
        ce1 => flat_array_11_ce1,
        q1 => flat_array_11_q1);

    flat_array_12_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_12_address0,
        ce0 => flat_array_12_ce0,
        we0 => flat_array_12_we0,
        d0 => grp_flat_fu_1143_flat_array_12_d0,
        q0 => flat_array_12_q0,
        address1 => grp_dense_1_fu_812_flat_array_12_address1,
        ce1 => flat_array_12_ce1,
        q1 => flat_array_12_q1);

    flat_array_13_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_13_address0,
        ce0 => flat_array_13_ce0,
        we0 => flat_array_13_we0,
        d0 => grp_flat_fu_1143_flat_array_13_d0,
        q0 => flat_array_13_q0,
        address1 => grp_dense_1_fu_812_flat_array_13_address1,
        ce1 => flat_array_13_ce1,
        q1 => flat_array_13_q1);

    flat_array_14_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_14_address0,
        ce0 => flat_array_14_ce0,
        we0 => flat_array_14_we0,
        d0 => grp_flat_fu_1143_flat_array_14_d0,
        q0 => flat_array_14_q0,
        address1 => grp_dense_1_fu_812_flat_array_14_address1,
        ce1 => flat_array_14_ce1,
        q1 => flat_array_14_q1);

    flat_array_15_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_15_address0,
        ce0 => flat_array_15_ce0,
        we0 => flat_array_15_we0,
        d0 => grp_flat_fu_1143_flat_array_15_d0,
        q0 => flat_array_15_q0,
        address1 => grp_dense_1_fu_812_flat_array_15_address1,
        ce1 => flat_array_15_ce1,
        q1 => flat_array_15_q1);

    flat_array_16_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_16_address0,
        ce0 => flat_array_16_ce0,
        we0 => flat_array_16_we0,
        d0 => grp_flat_fu_1143_flat_array_16_d0,
        q0 => flat_array_16_q0,
        address1 => grp_dense_1_fu_812_flat_array_16_address1,
        ce1 => flat_array_16_ce1,
        q1 => flat_array_16_q1);

    flat_array_17_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_17_address0,
        ce0 => flat_array_17_ce0,
        we0 => flat_array_17_we0,
        d0 => grp_flat_fu_1143_flat_array_17_d0,
        q0 => flat_array_17_q0,
        address1 => grp_dense_1_fu_812_flat_array_17_address1,
        ce1 => flat_array_17_ce1,
        q1 => flat_array_17_q1);

    flat_array_18_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_18_address0,
        ce0 => flat_array_18_ce0,
        we0 => flat_array_18_we0,
        d0 => grp_flat_fu_1143_flat_array_18_d0,
        q0 => flat_array_18_q0,
        address1 => grp_dense_1_fu_812_flat_array_18_address1,
        ce1 => flat_array_18_ce1,
        q1 => flat_array_18_q1);

    flat_array_19_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_19_address0,
        ce0 => flat_array_19_ce0,
        we0 => flat_array_19_we0,
        d0 => grp_flat_fu_1143_flat_array_19_d0,
        q0 => flat_array_19_q0,
        address1 => grp_dense_1_fu_812_flat_array_19_address1,
        ce1 => flat_array_19_ce1,
        q1 => flat_array_19_q1);

    flat_array_20_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_20_address0,
        ce0 => flat_array_20_ce0,
        we0 => flat_array_20_we0,
        d0 => grp_flat_fu_1143_flat_array_20_d0,
        q0 => flat_array_20_q0,
        address1 => grp_dense_1_fu_812_flat_array_20_address1,
        ce1 => flat_array_20_ce1,
        q1 => flat_array_20_q1);

    flat_array_21_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_21_address0,
        ce0 => flat_array_21_ce0,
        we0 => flat_array_21_we0,
        d0 => grp_flat_fu_1143_flat_array_21_d0,
        q0 => flat_array_21_q0,
        address1 => grp_dense_1_fu_812_flat_array_21_address1,
        ce1 => flat_array_21_ce1,
        q1 => flat_array_21_q1);

    flat_array_22_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_22_address0,
        ce0 => flat_array_22_ce0,
        we0 => flat_array_22_we0,
        d0 => grp_flat_fu_1143_flat_array_22_d0,
        q0 => flat_array_22_q0,
        address1 => grp_dense_1_fu_812_flat_array_22_address1,
        ce1 => flat_array_22_ce1,
        q1 => flat_array_22_q1);

    flat_array_23_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_23_address0,
        ce0 => flat_array_23_ce0,
        we0 => flat_array_23_we0,
        d0 => grp_flat_fu_1143_flat_array_23_d0,
        q0 => flat_array_23_q0,
        address1 => grp_dense_1_fu_812_flat_array_23_address1,
        ce1 => flat_array_23_ce1,
        q1 => flat_array_23_q1);

    flat_array_24_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_24_address0,
        ce0 => flat_array_24_ce0,
        we0 => flat_array_24_we0,
        d0 => grp_flat_fu_1143_flat_array_24_d0,
        q0 => flat_array_24_q0,
        address1 => grp_dense_1_fu_812_flat_array_24_address1,
        ce1 => flat_array_24_ce1,
        q1 => flat_array_24_q1);

    flat_array_25_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_25_address0,
        ce0 => flat_array_25_ce0,
        we0 => flat_array_25_we0,
        d0 => grp_flat_fu_1143_flat_array_25_d0,
        q0 => flat_array_25_q0,
        address1 => grp_dense_1_fu_812_flat_array_25_address1,
        ce1 => flat_array_25_ce1,
        q1 => flat_array_25_q1);

    flat_array_26_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_26_address0,
        ce0 => flat_array_26_ce0,
        we0 => flat_array_26_we0,
        d0 => grp_flat_fu_1143_flat_array_26_d0,
        q0 => flat_array_26_q0,
        address1 => grp_dense_1_fu_812_flat_array_26_address1,
        ce1 => flat_array_26_ce1,
        q1 => flat_array_26_q1);

    flat_array_27_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_27_address0,
        ce0 => flat_array_27_ce0,
        we0 => flat_array_27_we0,
        d0 => grp_flat_fu_1143_flat_array_27_d0,
        q0 => flat_array_27_q0,
        address1 => grp_dense_1_fu_812_flat_array_27_address1,
        ce1 => flat_array_27_ce1,
        q1 => flat_array_27_q1);

    flat_array_28_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_28_address0,
        ce0 => flat_array_28_ce0,
        we0 => flat_array_28_we0,
        d0 => grp_flat_fu_1143_flat_array_28_d0,
        q0 => flat_array_28_q0,
        address1 => grp_dense_1_fu_812_flat_array_28_address1,
        ce1 => flat_array_28_ce1,
        q1 => flat_array_28_q1);

    flat_array_29_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_29_address0,
        ce0 => flat_array_29_ce0,
        we0 => flat_array_29_we0,
        d0 => grp_flat_fu_1143_flat_array_29_d0,
        q0 => flat_array_29_q0,
        address1 => grp_dense_1_fu_812_flat_array_29_address1,
        ce1 => flat_array_29_ce1,
        q1 => flat_array_29_q1);

    flat_array_30_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_30_address0,
        ce0 => flat_array_30_ce0,
        we0 => flat_array_30_we0,
        d0 => grp_flat_fu_1143_flat_array_30_d0,
        q0 => flat_array_30_q0,
        address1 => grp_dense_1_fu_812_flat_array_30_address1,
        ce1 => flat_array_30_ce1,
        q1 => flat_array_30_q1);

    flat_array_31_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_31_address0,
        ce0 => flat_array_31_ce0,
        we0 => flat_array_31_we0,
        d0 => grp_flat_fu_1143_flat_array_31_d0,
        q0 => flat_array_31_q0,
        address1 => grp_dense_1_fu_812_flat_array_31_address1,
        ce1 => flat_array_31_ce1,
        q1 => flat_array_31_q1);

    flat_array_32_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_32_address0,
        ce0 => flat_array_32_ce0,
        we0 => flat_array_32_we0,
        d0 => grp_flat_fu_1143_flat_array_32_d0,
        q0 => flat_array_32_q0,
        address1 => grp_dense_1_fu_812_flat_array_32_address1,
        ce1 => flat_array_32_ce1,
        q1 => flat_array_32_q1);

    flat_array_33_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_33_address0,
        ce0 => flat_array_33_ce0,
        we0 => flat_array_33_we0,
        d0 => grp_flat_fu_1143_flat_array_33_d0,
        q0 => flat_array_33_q0,
        address1 => grp_dense_1_fu_812_flat_array_33_address1,
        ce1 => flat_array_33_ce1,
        q1 => flat_array_33_q1);

    flat_array_34_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_34_address0,
        ce0 => flat_array_34_ce0,
        we0 => flat_array_34_we0,
        d0 => grp_flat_fu_1143_flat_array_34_d0,
        q0 => flat_array_34_q0,
        address1 => grp_dense_1_fu_812_flat_array_34_address1,
        ce1 => flat_array_34_ce1,
        q1 => flat_array_34_q1);

    flat_array_35_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_35_address0,
        ce0 => flat_array_35_ce0,
        we0 => flat_array_35_we0,
        d0 => grp_flat_fu_1143_flat_array_35_d0,
        q0 => flat_array_35_q0,
        address1 => grp_dense_1_fu_812_flat_array_35_address1,
        ce1 => flat_array_35_ce1,
        q1 => flat_array_35_q1);

    flat_array_36_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_36_address0,
        ce0 => flat_array_36_ce0,
        we0 => flat_array_36_we0,
        d0 => grp_flat_fu_1143_flat_array_36_d0,
        q0 => flat_array_36_q0,
        address1 => grp_dense_1_fu_812_flat_array_36_address1,
        ce1 => flat_array_36_ce1,
        q1 => flat_array_36_q1);

    flat_array_37_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_37_address0,
        ce0 => flat_array_37_ce0,
        we0 => flat_array_37_we0,
        d0 => grp_flat_fu_1143_flat_array_37_d0,
        q0 => flat_array_37_q0,
        address1 => grp_dense_1_fu_812_flat_array_37_address1,
        ce1 => flat_array_37_ce1,
        q1 => flat_array_37_q1);

    flat_array_38_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_38_address0,
        ce0 => flat_array_38_ce0,
        we0 => flat_array_38_we0,
        d0 => grp_flat_fu_1143_flat_array_38_d0,
        q0 => flat_array_38_q0,
        address1 => grp_dense_1_fu_812_flat_array_38_address1,
        ce1 => flat_array_38_ce1,
        q1 => flat_array_38_q1);

    flat_array_39_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_39_address0,
        ce0 => flat_array_39_ce0,
        we0 => flat_array_39_we0,
        d0 => grp_flat_fu_1143_flat_array_39_d0,
        q0 => flat_array_39_q0,
        address1 => grp_dense_1_fu_812_flat_array_39_address1,
        ce1 => flat_array_39_ce1,
        q1 => flat_array_39_q1);

    flat_array_40_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_40_address0,
        ce0 => flat_array_40_ce0,
        we0 => flat_array_40_we0,
        d0 => grp_flat_fu_1143_flat_array_40_d0,
        q0 => flat_array_40_q0,
        address1 => grp_dense_1_fu_812_flat_array_40_address1,
        ce1 => flat_array_40_ce1,
        q1 => flat_array_40_q1);

    flat_array_41_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_41_address0,
        ce0 => flat_array_41_ce0,
        we0 => flat_array_41_we0,
        d0 => grp_flat_fu_1143_flat_array_41_d0,
        q0 => flat_array_41_q0,
        address1 => grp_dense_1_fu_812_flat_array_41_address1,
        ce1 => flat_array_41_ce1,
        q1 => flat_array_41_q1);

    flat_array_42_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_42_address0,
        ce0 => flat_array_42_ce0,
        we0 => flat_array_42_we0,
        d0 => grp_flat_fu_1143_flat_array_42_d0,
        q0 => flat_array_42_q0,
        address1 => grp_dense_1_fu_812_flat_array_42_address1,
        ce1 => flat_array_42_ce1,
        q1 => flat_array_42_q1);

    flat_array_43_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_43_address0,
        ce0 => flat_array_43_ce0,
        we0 => flat_array_43_we0,
        d0 => grp_flat_fu_1143_flat_array_43_d0,
        q0 => flat_array_43_q0,
        address1 => grp_dense_1_fu_812_flat_array_43_address1,
        ce1 => flat_array_43_ce1,
        q1 => flat_array_43_q1);

    flat_array_44_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_44_address0,
        ce0 => flat_array_44_ce0,
        we0 => flat_array_44_we0,
        d0 => grp_flat_fu_1143_flat_array_44_d0,
        q0 => flat_array_44_q0,
        address1 => grp_dense_1_fu_812_flat_array_44_address1,
        ce1 => flat_array_44_ce1,
        q1 => flat_array_44_q1);

    flat_array_45_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_45_address0,
        ce0 => flat_array_45_ce0,
        we0 => flat_array_45_we0,
        d0 => grp_flat_fu_1143_flat_array_45_d0,
        q0 => flat_array_45_q0,
        address1 => grp_dense_1_fu_812_flat_array_45_address1,
        ce1 => flat_array_45_ce1,
        q1 => flat_array_45_q1);

    flat_array_46_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_46_address0,
        ce0 => flat_array_46_ce0,
        we0 => flat_array_46_we0,
        d0 => grp_flat_fu_1143_flat_array_46_d0,
        q0 => flat_array_46_q0,
        address1 => grp_dense_1_fu_812_flat_array_46_address1,
        ce1 => flat_array_46_ce1,
        q1 => flat_array_46_q1);

    flat_array_47_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_47_address0,
        ce0 => flat_array_47_ce0,
        we0 => flat_array_47_we0,
        d0 => grp_flat_fu_1143_flat_array_47_d0,
        q0 => flat_array_47_q0,
        address1 => grp_dense_1_fu_812_flat_array_47_address1,
        ce1 => flat_array_47_ce1,
        q1 => flat_array_47_q1);

    flat_array_48_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_48_address0,
        ce0 => flat_array_48_ce0,
        we0 => flat_array_48_we0,
        d0 => grp_flat_fu_1143_flat_array_48_d0,
        q0 => flat_array_48_q0,
        address1 => grp_dense_1_fu_812_flat_array_48_address1,
        ce1 => flat_array_48_ce1,
        q1 => flat_array_48_q1);

    flat_array_49_U : component cnn_flat_array_0
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => flat_array_49_address0,
        ce0 => flat_array_49_ce0,
        we0 => flat_array_49_we0,
        d0 => grp_flat_fu_1143_flat_array_49_d0,
        q0 => flat_array_49_q0,
        address1 => grp_dense_1_fu_812_flat_array_49_address1,
        ce1 => flat_array_49_ce1,
        q1 => flat_array_49_q1);

    dense_2_weights_U : component cnn_dense_2_weights
    generic map (
        DataWidth => 32,
        AddressRange => 1500,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_2_weights_address0,
        ce0 => dense_2_weights_ce0,
        q0 => dense_2_weights_q0);

    dense_2_bias_U : component cnn_dense_2_bias
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_2_bias_address0,
        ce0 => dense_2_bias_ce0,
        q0 => dense_2_bias_q0);

    dense_2_out_U : component cnn_dense_2_out
    generic map (
        DataWidth => 32,
        AddressRange => 30,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => dense_2_out_address0,
        ce0 => dense_2_out_ce0,
        we0 => dense_2_out_we0,
        d0 => dense_2_out_d0,
        q0 => dense_2_out_q0);

    cnn_CRTL_BUS_s_axi_U : component cnn_CRTL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CRTL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CRTL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CRTL_BUS_AWVALID,
        AWREADY => s_axi_CRTL_BUS_AWREADY,
        AWADDR => s_axi_CRTL_BUS_AWADDR,
        WVALID => s_axi_CRTL_BUS_WVALID,
        WREADY => s_axi_CRTL_BUS_WREADY,
        WDATA => s_axi_CRTL_BUS_WDATA,
        WSTRB => s_axi_CRTL_BUS_WSTRB,
        ARVALID => s_axi_CRTL_BUS_ARVALID,
        ARREADY => s_axi_CRTL_BUS_ARREADY,
        ARADDR => s_axi_CRTL_BUS_ARADDR,
        RVALID => s_axi_CRTL_BUS_RVALID,
        RREADY => s_axi_CRTL_BUS_RREADY,
        RDATA => s_axi_CRTL_BUS_RDATA,
        RRESP => s_axi_CRTL_BUS_RRESP,
        BVALID => s_axi_CRTL_BUS_BVALID,
        BREADY => s_axi_CRTL_BUS_BREADY,
        BRESP => s_axi_CRTL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    conv_1_input_U : component cnn_conv_1_input
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => conv_1_input_address0,
        ce0 => conv_1_input_ce0,
        we0 => conv_1_input_we0,
        d0 => cnn_input_Dout_A,
        q0 => conv_1_input_q0,
        address1 => grp_conv_1_fu_1098_input_r_address1,
        ce1 => conv_1_input_ce1,
        q1 => conv_1_input_q1);

    grp_dense_1_fu_812 : component dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dense_1_fu_812_ap_start,
        ap_done => grp_dense_1_fu_812_ap_done,
        ap_idle => grp_dense_1_fu_812_ap_idle,
        ap_ready => grp_dense_1_fu_812_ap_ready,
        dense_1_out_0_read => dense_1_out_0,
        dense_1_out_1_read => dense_1_out_1,
        dense_1_out_2_read => dense_1_out_2,
        dense_1_out_3_read => dense_1_out_3,
        dense_1_out_4_read => dense_1_out_4,
        dense_1_out_5_read => dense_1_out_5,
        dense_1_out_6_read => dense_1_out_6,
        dense_1_out_7_read => dense_1_out_7,
        dense_1_out_8_read => dense_1_out_8,
        dense_1_out_9_read => dense_1_out_9,
        dense_1_out_10_read => dense_1_out_10,
        dense_1_out_11_read => dense_1_out_11,
        dense_1_out_12_read => dense_1_out_12,
        dense_1_out_13_read => dense_1_out_13,
        dense_1_out_14_read => dense_1_out_14,
        dense_1_out_15_read => dense_1_out_15,
        dense_1_out_16_read => dense_1_out_16,
        dense_1_out_17_read => dense_1_out_17,
        dense_1_out_18_read => dense_1_out_18,
        dense_1_out_19_read => dense_1_out_19,
        dense_1_out_20_read => dense_1_out_20,
        dense_1_out_21_read => dense_1_out_21,
        dense_1_out_22_read => dense_1_out_22,
        dense_1_out_23_read => dense_1_out_23,
        dense_1_out_24_read => dense_1_out_24,
        dense_1_out_25_read => dense_1_out_25,
        dense_1_out_26_read => dense_1_out_26,
        dense_1_out_27_read => dense_1_out_27,
        dense_1_out_28_read => dense_1_out_28,
        dense_1_out_29_read => dense_1_out_29,
        dense_1_out_30_read => dense_1_out_30,
        dense_1_out_31_read => dense_1_out_31,
        dense_1_out_32_read => dense_1_out_32,
        dense_1_out_33_read => dense_1_out_33,
        dense_1_out_34_read => dense_1_out_34,
        dense_1_out_35_read => dense_1_out_35,
        dense_1_out_36_read => dense_1_out_36,
        dense_1_out_37_read => dense_1_out_37,
        dense_1_out_38_read => dense_1_out_38,
        dense_1_out_39_read => dense_1_out_39,
        dense_1_out_40_read => dense_1_out_40,
        dense_1_out_41_read => dense_1_out_41,
        dense_1_out_42_read => dense_1_out_42,
        dense_1_out_43_read => dense_1_out_43,
        dense_1_out_44_read => dense_1_out_44,
        dense_1_out_45_read => dense_1_out_45,
        dense_1_out_46_read => dense_1_out_46,
        dense_1_out_47_read => dense_1_out_47,
        dense_1_out_48_read => dense_1_out_48,
        dense_1_out_49_read => dense_1_out_49,
        flat_array_0_address0 => grp_dense_1_fu_812_flat_array_0_address0,
        flat_array_0_ce0 => grp_dense_1_fu_812_flat_array_0_ce0,
        flat_array_0_q0 => flat_array_0_q0,
        flat_array_0_address1 => grp_dense_1_fu_812_flat_array_0_address1,
        flat_array_0_ce1 => grp_dense_1_fu_812_flat_array_0_ce1,
        flat_array_0_q1 => flat_array_0_q1,
        flat_array_1_address0 => grp_dense_1_fu_812_flat_array_1_address0,
        flat_array_1_ce0 => grp_dense_1_fu_812_flat_array_1_ce0,
        flat_array_1_q0 => flat_array_1_q0,
        flat_array_1_address1 => grp_dense_1_fu_812_flat_array_1_address1,
        flat_array_1_ce1 => grp_dense_1_fu_812_flat_array_1_ce1,
        flat_array_1_q1 => flat_array_1_q1,
        flat_array_2_address0 => grp_dense_1_fu_812_flat_array_2_address0,
        flat_array_2_ce0 => grp_dense_1_fu_812_flat_array_2_ce0,
        flat_array_2_q0 => flat_array_2_q0,
        flat_array_2_address1 => grp_dense_1_fu_812_flat_array_2_address1,
        flat_array_2_ce1 => grp_dense_1_fu_812_flat_array_2_ce1,
        flat_array_2_q1 => flat_array_2_q1,
        flat_array_3_address0 => grp_dense_1_fu_812_flat_array_3_address0,
        flat_array_3_ce0 => grp_dense_1_fu_812_flat_array_3_ce0,
        flat_array_3_q0 => flat_array_3_q0,
        flat_array_3_address1 => grp_dense_1_fu_812_flat_array_3_address1,
        flat_array_3_ce1 => grp_dense_1_fu_812_flat_array_3_ce1,
        flat_array_3_q1 => flat_array_3_q1,
        flat_array_4_address0 => grp_dense_1_fu_812_flat_array_4_address0,
        flat_array_4_ce0 => grp_dense_1_fu_812_flat_array_4_ce0,
        flat_array_4_q0 => flat_array_4_q0,
        flat_array_4_address1 => grp_dense_1_fu_812_flat_array_4_address1,
        flat_array_4_ce1 => grp_dense_1_fu_812_flat_array_4_ce1,
        flat_array_4_q1 => flat_array_4_q1,
        flat_array_5_address0 => grp_dense_1_fu_812_flat_array_5_address0,
        flat_array_5_ce0 => grp_dense_1_fu_812_flat_array_5_ce0,
        flat_array_5_q0 => flat_array_5_q0,
        flat_array_5_address1 => grp_dense_1_fu_812_flat_array_5_address1,
        flat_array_5_ce1 => grp_dense_1_fu_812_flat_array_5_ce1,
        flat_array_5_q1 => flat_array_5_q1,
        flat_array_6_address0 => grp_dense_1_fu_812_flat_array_6_address0,
        flat_array_6_ce0 => grp_dense_1_fu_812_flat_array_6_ce0,
        flat_array_6_q0 => flat_array_6_q0,
        flat_array_6_address1 => grp_dense_1_fu_812_flat_array_6_address1,
        flat_array_6_ce1 => grp_dense_1_fu_812_flat_array_6_ce1,
        flat_array_6_q1 => flat_array_6_q1,
        flat_array_7_address0 => grp_dense_1_fu_812_flat_array_7_address0,
        flat_array_7_ce0 => grp_dense_1_fu_812_flat_array_7_ce0,
        flat_array_7_q0 => flat_array_7_q0,
        flat_array_7_address1 => grp_dense_1_fu_812_flat_array_7_address1,
        flat_array_7_ce1 => grp_dense_1_fu_812_flat_array_7_ce1,
        flat_array_7_q1 => flat_array_7_q1,
        flat_array_8_address0 => grp_dense_1_fu_812_flat_array_8_address0,
        flat_array_8_ce0 => grp_dense_1_fu_812_flat_array_8_ce0,
        flat_array_8_q0 => flat_array_8_q0,
        flat_array_8_address1 => grp_dense_1_fu_812_flat_array_8_address1,
        flat_array_8_ce1 => grp_dense_1_fu_812_flat_array_8_ce1,
        flat_array_8_q1 => flat_array_8_q1,
        flat_array_9_address0 => grp_dense_1_fu_812_flat_array_9_address0,
        flat_array_9_ce0 => grp_dense_1_fu_812_flat_array_9_ce0,
        flat_array_9_q0 => flat_array_9_q0,
        flat_array_9_address1 => grp_dense_1_fu_812_flat_array_9_address1,
        flat_array_9_ce1 => grp_dense_1_fu_812_flat_array_9_ce1,
        flat_array_9_q1 => flat_array_9_q1,
        flat_array_10_address0 => grp_dense_1_fu_812_flat_array_10_address0,
        flat_array_10_ce0 => grp_dense_1_fu_812_flat_array_10_ce0,
        flat_array_10_q0 => flat_array_10_q0,
        flat_array_10_address1 => grp_dense_1_fu_812_flat_array_10_address1,
        flat_array_10_ce1 => grp_dense_1_fu_812_flat_array_10_ce1,
        flat_array_10_q1 => flat_array_10_q1,
        flat_array_11_address0 => grp_dense_1_fu_812_flat_array_11_address0,
        flat_array_11_ce0 => grp_dense_1_fu_812_flat_array_11_ce0,
        flat_array_11_q0 => flat_array_11_q0,
        flat_array_11_address1 => grp_dense_1_fu_812_flat_array_11_address1,
        flat_array_11_ce1 => grp_dense_1_fu_812_flat_array_11_ce1,
        flat_array_11_q1 => flat_array_11_q1,
        flat_array_12_address0 => grp_dense_1_fu_812_flat_array_12_address0,
        flat_array_12_ce0 => grp_dense_1_fu_812_flat_array_12_ce0,
        flat_array_12_q0 => flat_array_12_q0,
        flat_array_12_address1 => grp_dense_1_fu_812_flat_array_12_address1,
        flat_array_12_ce1 => grp_dense_1_fu_812_flat_array_12_ce1,
        flat_array_12_q1 => flat_array_12_q1,
        flat_array_13_address0 => grp_dense_1_fu_812_flat_array_13_address0,
        flat_array_13_ce0 => grp_dense_1_fu_812_flat_array_13_ce0,
        flat_array_13_q0 => flat_array_13_q0,
        flat_array_13_address1 => grp_dense_1_fu_812_flat_array_13_address1,
        flat_array_13_ce1 => grp_dense_1_fu_812_flat_array_13_ce1,
        flat_array_13_q1 => flat_array_13_q1,
        flat_array_14_address0 => grp_dense_1_fu_812_flat_array_14_address0,
        flat_array_14_ce0 => grp_dense_1_fu_812_flat_array_14_ce0,
        flat_array_14_q0 => flat_array_14_q0,
        flat_array_14_address1 => grp_dense_1_fu_812_flat_array_14_address1,
        flat_array_14_ce1 => grp_dense_1_fu_812_flat_array_14_ce1,
        flat_array_14_q1 => flat_array_14_q1,
        flat_array_15_address0 => grp_dense_1_fu_812_flat_array_15_address0,
        flat_array_15_ce0 => grp_dense_1_fu_812_flat_array_15_ce0,
        flat_array_15_q0 => flat_array_15_q0,
        flat_array_15_address1 => grp_dense_1_fu_812_flat_array_15_address1,
        flat_array_15_ce1 => grp_dense_1_fu_812_flat_array_15_ce1,
        flat_array_15_q1 => flat_array_15_q1,
        flat_array_16_address0 => grp_dense_1_fu_812_flat_array_16_address0,
        flat_array_16_ce0 => grp_dense_1_fu_812_flat_array_16_ce0,
        flat_array_16_q0 => flat_array_16_q0,
        flat_array_16_address1 => grp_dense_1_fu_812_flat_array_16_address1,
        flat_array_16_ce1 => grp_dense_1_fu_812_flat_array_16_ce1,
        flat_array_16_q1 => flat_array_16_q1,
        flat_array_17_address0 => grp_dense_1_fu_812_flat_array_17_address0,
        flat_array_17_ce0 => grp_dense_1_fu_812_flat_array_17_ce0,
        flat_array_17_q0 => flat_array_17_q0,
        flat_array_17_address1 => grp_dense_1_fu_812_flat_array_17_address1,
        flat_array_17_ce1 => grp_dense_1_fu_812_flat_array_17_ce1,
        flat_array_17_q1 => flat_array_17_q1,
        flat_array_18_address0 => grp_dense_1_fu_812_flat_array_18_address0,
        flat_array_18_ce0 => grp_dense_1_fu_812_flat_array_18_ce0,
        flat_array_18_q0 => flat_array_18_q0,
        flat_array_18_address1 => grp_dense_1_fu_812_flat_array_18_address1,
        flat_array_18_ce1 => grp_dense_1_fu_812_flat_array_18_ce1,
        flat_array_18_q1 => flat_array_18_q1,
        flat_array_19_address0 => grp_dense_1_fu_812_flat_array_19_address0,
        flat_array_19_ce0 => grp_dense_1_fu_812_flat_array_19_ce0,
        flat_array_19_q0 => flat_array_19_q0,
        flat_array_19_address1 => grp_dense_1_fu_812_flat_array_19_address1,
        flat_array_19_ce1 => grp_dense_1_fu_812_flat_array_19_ce1,
        flat_array_19_q1 => flat_array_19_q1,
        flat_array_20_address0 => grp_dense_1_fu_812_flat_array_20_address0,
        flat_array_20_ce0 => grp_dense_1_fu_812_flat_array_20_ce0,
        flat_array_20_q0 => flat_array_20_q0,
        flat_array_20_address1 => grp_dense_1_fu_812_flat_array_20_address1,
        flat_array_20_ce1 => grp_dense_1_fu_812_flat_array_20_ce1,
        flat_array_20_q1 => flat_array_20_q1,
        flat_array_21_address0 => grp_dense_1_fu_812_flat_array_21_address0,
        flat_array_21_ce0 => grp_dense_1_fu_812_flat_array_21_ce0,
        flat_array_21_q0 => flat_array_21_q0,
        flat_array_21_address1 => grp_dense_1_fu_812_flat_array_21_address1,
        flat_array_21_ce1 => grp_dense_1_fu_812_flat_array_21_ce1,
        flat_array_21_q1 => flat_array_21_q1,
        flat_array_22_address0 => grp_dense_1_fu_812_flat_array_22_address0,
        flat_array_22_ce0 => grp_dense_1_fu_812_flat_array_22_ce0,
        flat_array_22_q0 => flat_array_22_q0,
        flat_array_22_address1 => grp_dense_1_fu_812_flat_array_22_address1,
        flat_array_22_ce1 => grp_dense_1_fu_812_flat_array_22_ce1,
        flat_array_22_q1 => flat_array_22_q1,
        flat_array_23_address0 => grp_dense_1_fu_812_flat_array_23_address0,
        flat_array_23_ce0 => grp_dense_1_fu_812_flat_array_23_ce0,
        flat_array_23_q0 => flat_array_23_q0,
        flat_array_23_address1 => grp_dense_1_fu_812_flat_array_23_address1,
        flat_array_23_ce1 => grp_dense_1_fu_812_flat_array_23_ce1,
        flat_array_23_q1 => flat_array_23_q1,
        flat_array_24_address0 => grp_dense_1_fu_812_flat_array_24_address0,
        flat_array_24_ce0 => grp_dense_1_fu_812_flat_array_24_ce0,
        flat_array_24_q0 => flat_array_24_q0,
        flat_array_24_address1 => grp_dense_1_fu_812_flat_array_24_address1,
        flat_array_24_ce1 => grp_dense_1_fu_812_flat_array_24_ce1,
        flat_array_24_q1 => flat_array_24_q1,
        flat_array_25_address0 => grp_dense_1_fu_812_flat_array_25_address0,
        flat_array_25_ce0 => grp_dense_1_fu_812_flat_array_25_ce0,
        flat_array_25_q0 => flat_array_25_q0,
        flat_array_25_address1 => grp_dense_1_fu_812_flat_array_25_address1,
        flat_array_25_ce1 => grp_dense_1_fu_812_flat_array_25_ce1,
        flat_array_25_q1 => flat_array_25_q1,
        flat_array_26_address0 => grp_dense_1_fu_812_flat_array_26_address0,
        flat_array_26_ce0 => grp_dense_1_fu_812_flat_array_26_ce0,
        flat_array_26_q0 => flat_array_26_q0,
        flat_array_26_address1 => grp_dense_1_fu_812_flat_array_26_address1,
        flat_array_26_ce1 => grp_dense_1_fu_812_flat_array_26_ce1,
        flat_array_26_q1 => flat_array_26_q1,
        flat_array_27_address0 => grp_dense_1_fu_812_flat_array_27_address0,
        flat_array_27_ce0 => grp_dense_1_fu_812_flat_array_27_ce0,
        flat_array_27_q0 => flat_array_27_q0,
        flat_array_27_address1 => grp_dense_1_fu_812_flat_array_27_address1,
        flat_array_27_ce1 => grp_dense_1_fu_812_flat_array_27_ce1,
        flat_array_27_q1 => flat_array_27_q1,
        flat_array_28_address0 => grp_dense_1_fu_812_flat_array_28_address0,
        flat_array_28_ce0 => grp_dense_1_fu_812_flat_array_28_ce0,
        flat_array_28_q0 => flat_array_28_q0,
        flat_array_28_address1 => grp_dense_1_fu_812_flat_array_28_address1,
        flat_array_28_ce1 => grp_dense_1_fu_812_flat_array_28_ce1,
        flat_array_28_q1 => flat_array_28_q1,
        flat_array_29_address0 => grp_dense_1_fu_812_flat_array_29_address0,
        flat_array_29_ce0 => grp_dense_1_fu_812_flat_array_29_ce0,
        flat_array_29_q0 => flat_array_29_q0,
        flat_array_29_address1 => grp_dense_1_fu_812_flat_array_29_address1,
        flat_array_29_ce1 => grp_dense_1_fu_812_flat_array_29_ce1,
        flat_array_29_q1 => flat_array_29_q1,
        flat_array_30_address0 => grp_dense_1_fu_812_flat_array_30_address0,
        flat_array_30_ce0 => grp_dense_1_fu_812_flat_array_30_ce0,
        flat_array_30_q0 => flat_array_30_q0,
        flat_array_30_address1 => grp_dense_1_fu_812_flat_array_30_address1,
        flat_array_30_ce1 => grp_dense_1_fu_812_flat_array_30_ce1,
        flat_array_30_q1 => flat_array_30_q1,
        flat_array_31_address0 => grp_dense_1_fu_812_flat_array_31_address0,
        flat_array_31_ce0 => grp_dense_1_fu_812_flat_array_31_ce0,
        flat_array_31_q0 => flat_array_31_q0,
        flat_array_31_address1 => grp_dense_1_fu_812_flat_array_31_address1,
        flat_array_31_ce1 => grp_dense_1_fu_812_flat_array_31_ce1,
        flat_array_31_q1 => flat_array_31_q1,
        flat_array_32_address0 => grp_dense_1_fu_812_flat_array_32_address0,
        flat_array_32_ce0 => grp_dense_1_fu_812_flat_array_32_ce0,
        flat_array_32_q0 => flat_array_32_q0,
        flat_array_32_address1 => grp_dense_1_fu_812_flat_array_32_address1,
        flat_array_32_ce1 => grp_dense_1_fu_812_flat_array_32_ce1,
        flat_array_32_q1 => flat_array_32_q1,
        flat_array_33_address0 => grp_dense_1_fu_812_flat_array_33_address0,
        flat_array_33_ce0 => grp_dense_1_fu_812_flat_array_33_ce0,
        flat_array_33_q0 => flat_array_33_q0,
        flat_array_33_address1 => grp_dense_1_fu_812_flat_array_33_address1,
        flat_array_33_ce1 => grp_dense_1_fu_812_flat_array_33_ce1,
        flat_array_33_q1 => flat_array_33_q1,
        flat_array_34_address0 => grp_dense_1_fu_812_flat_array_34_address0,
        flat_array_34_ce0 => grp_dense_1_fu_812_flat_array_34_ce0,
        flat_array_34_q0 => flat_array_34_q0,
        flat_array_34_address1 => grp_dense_1_fu_812_flat_array_34_address1,
        flat_array_34_ce1 => grp_dense_1_fu_812_flat_array_34_ce1,
        flat_array_34_q1 => flat_array_34_q1,
        flat_array_35_address0 => grp_dense_1_fu_812_flat_array_35_address0,
        flat_array_35_ce0 => grp_dense_1_fu_812_flat_array_35_ce0,
        flat_array_35_q0 => flat_array_35_q0,
        flat_array_35_address1 => grp_dense_1_fu_812_flat_array_35_address1,
        flat_array_35_ce1 => grp_dense_1_fu_812_flat_array_35_ce1,
        flat_array_35_q1 => flat_array_35_q1,
        flat_array_36_address0 => grp_dense_1_fu_812_flat_array_36_address0,
        flat_array_36_ce0 => grp_dense_1_fu_812_flat_array_36_ce0,
        flat_array_36_q0 => flat_array_36_q0,
        flat_array_36_address1 => grp_dense_1_fu_812_flat_array_36_address1,
        flat_array_36_ce1 => grp_dense_1_fu_812_flat_array_36_ce1,
        flat_array_36_q1 => flat_array_36_q1,
        flat_array_37_address0 => grp_dense_1_fu_812_flat_array_37_address0,
        flat_array_37_ce0 => grp_dense_1_fu_812_flat_array_37_ce0,
        flat_array_37_q0 => flat_array_37_q0,
        flat_array_37_address1 => grp_dense_1_fu_812_flat_array_37_address1,
        flat_array_37_ce1 => grp_dense_1_fu_812_flat_array_37_ce1,
        flat_array_37_q1 => flat_array_37_q1,
        flat_array_38_address0 => grp_dense_1_fu_812_flat_array_38_address0,
        flat_array_38_ce0 => grp_dense_1_fu_812_flat_array_38_ce0,
        flat_array_38_q0 => flat_array_38_q0,
        flat_array_38_address1 => grp_dense_1_fu_812_flat_array_38_address1,
        flat_array_38_ce1 => grp_dense_1_fu_812_flat_array_38_ce1,
        flat_array_38_q1 => flat_array_38_q1,
        flat_array_39_address0 => grp_dense_1_fu_812_flat_array_39_address0,
        flat_array_39_ce0 => grp_dense_1_fu_812_flat_array_39_ce0,
        flat_array_39_q0 => flat_array_39_q0,
        flat_array_39_address1 => grp_dense_1_fu_812_flat_array_39_address1,
        flat_array_39_ce1 => grp_dense_1_fu_812_flat_array_39_ce1,
        flat_array_39_q1 => flat_array_39_q1,
        flat_array_40_address0 => grp_dense_1_fu_812_flat_array_40_address0,
        flat_array_40_ce0 => grp_dense_1_fu_812_flat_array_40_ce0,
        flat_array_40_q0 => flat_array_40_q0,
        flat_array_40_address1 => grp_dense_1_fu_812_flat_array_40_address1,
        flat_array_40_ce1 => grp_dense_1_fu_812_flat_array_40_ce1,
        flat_array_40_q1 => flat_array_40_q1,
        flat_array_41_address0 => grp_dense_1_fu_812_flat_array_41_address0,
        flat_array_41_ce0 => grp_dense_1_fu_812_flat_array_41_ce0,
        flat_array_41_q0 => flat_array_41_q0,
        flat_array_41_address1 => grp_dense_1_fu_812_flat_array_41_address1,
        flat_array_41_ce1 => grp_dense_1_fu_812_flat_array_41_ce1,
        flat_array_41_q1 => flat_array_41_q1,
        flat_array_42_address0 => grp_dense_1_fu_812_flat_array_42_address0,
        flat_array_42_ce0 => grp_dense_1_fu_812_flat_array_42_ce0,
        flat_array_42_q0 => flat_array_42_q0,
        flat_array_42_address1 => grp_dense_1_fu_812_flat_array_42_address1,
        flat_array_42_ce1 => grp_dense_1_fu_812_flat_array_42_ce1,
        flat_array_42_q1 => flat_array_42_q1,
        flat_array_43_address0 => grp_dense_1_fu_812_flat_array_43_address0,
        flat_array_43_ce0 => grp_dense_1_fu_812_flat_array_43_ce0,
        flat_array_43_q0 => flat_array_43_q0,
        flat_array_43_address1 => grp_dense_1_fu_812_flat_array_43_address1,
        flat_array_43_ce1 => grp_dense_1_fu_812_flat_array_43_ce1,
        flat_array_43_q1 => flat_array_43_q1,
        flat_array_44_address0 => grp_dense_1_fu_812_flat_array_44_address0,
        flat_array_44_ce0 => grp_dense_1_fu_812_flat_array_44_ce0,
        flat_array_44_q0 => flat_array_44_q0,
        flat_array_44_address1 => grp_dense_1_fu_812_flat_array_44_address1,
        flat_array_44_ce1 => grp_dense_1_fu_812_flat_array_44_ce1,
        flat_array_44_q1 => flat_array_44_q1,
        flat_array_45_address0 => grp_dense_1_fu_812_flat_array_45_address0,
        flat_array_45_ce0 => grp_dense_1_fu_812_flat_array_45_ce0,
        flat_array_45_q0 => flat_array_45_q0,
        flat_array_45_address1 => grp_dense_1_fu_812_flat_array_45_address1,
        flat_array_45_ce1 => grp_dense_1_fu_812_flat_array_45_ce1,
        flat_array_45_q1 => flat_array_45_q1,
        flat_array_46_address0 => grp_dense_1_fu_812_flat_array_46_address0,
        flat_array_46_ce0 => grp_dense_1_fu_812_flat_array_46_ce0,
        flat_array_46_q0 => flat_array_46_q0,
        flat_array_46_address1 => grp_dense_1_fu_812_flat_array_46_address1,
        flat_array_46_ce1 => grp_dense_1_fu_812_flat_array_46_ce1,
        flat_array_46_q1 => flat_array_46_q1,
        flat_array_47_address0 => grp_dense_1_fu_812_flat_array_47_address0,
        flat_array_47_ce0 => grp_dense_1_fu_812_flat_array_47_ce0,
        flat_array_47_q0 => flat_array_47_q0,
        flat_array_47_address1 => grp_dense_1_fu_812_flat_array_47_address1,
        flat_array_47_ce1 => grp_dense_1_fu_812_flat_array_47_ce1,
        flat_array_47_q1 => flat_array_47_q1,
        flat_array_48_address0 => grp_dense_1_fu_812_flat_array_48_address0,
        flat_array_48_ce0 => grp_dense_1_fu_812_flat_array_48_ce0,
        flat_array_48_q0 => flat_array_48_q0,
        flat_array_48_address1 => grp_dense_1_fu_812_flat_array_48_address1,
        flat_array_48_ce1 => grp_dense_1_fu_812_flat_array_48_ce1,
        flat_array_48_q1 => flat_array_48_q1,
        flat_array_49_address0 => grp_dense_1_fu_812_flat_array_49_address0,
        flat_array_49_ce0 => grp_dense_1_fu_812_flat_array_49_ce0,
        flat_array_49_q0 => flat_array_49_q0,
        flat_array_49_address1 => grp_dense_1_fu_812_flat_array_49_address1,
        flat_array_49_ce1 => grp_dense_1_fu_812_flat_array_49_ce1,
        flat_array_49_q1 => flat_array_49_q1,
        ap_return_0 => grp_dense_1_fu_812_ap_return_0,
        ap_return_1 => grp_dense_1_fu_812_ap_return_1,
        ap_return_2 => grp_dense_1_fu_812_ap_return_2,
        ap_return_3 => grp_dense_1_fu_812_ap_return_3,
        ap_return_4 => grp_dense_1_fu_812_ap_return_4,
        ap_return_5 => grp_dense_1_fu_812_ap_return_5,
        ap_return_6 => grp_dense_1_fu_812_ap_return_6,
        ap_return_7 => grp_dense_1_fu_812_ap_return_7,
        ap_return_8 => grp_dense_1_fu_812_ap_return_8,
        ap_return_9 => grp_dense_1_fu_812_ap_return_9,
        ap_return_10 => grp_dense_1_fu_812_ap_return_10,
        ap_return_11 => grp_dense_1_fu_812_ap_return_11,
        ap_return_12 => grp_dense_1_fu_812_ap_return_12,
        ap_return_13 => grp_dense_1_fu_812_ap_return_13,
        ap_return_14 => grp_dense_1_fu_812_ap_return_14,
        ap_return_15 => grp_dense_1_fu_812_ap_return_15,
        ap_return_16 => grp_dense_1_fu_812_ap_return_16,
        ap_return_17 => grp_dense_1_fu_812_ap_return_17,
        ap_return_18 => grp_dense_1_fu_812_ap_return_18,
        ap_return_19 => grp_dense_1_fu_812_ap_return_19,
        ap_return_20 => grp_dense_1_fu_812_ap_return_20,
        ap_return_21 => grp_dense_1_fu_812_ap_return_21,
        ap_return_22 => grp_dense_1_fu_812_ap_return_22,
        ap_return_23 => grp_dense_1_fu_812_ap_return_23,
        ap_return_24 => grp_dense_1_fu_812_ap_return_24,
        ap_return_25 => grp_dense_1_fu_812_ap_return_25,
        ap_return_26 => grp_dense_1_fu_812_ap_return_26,
        ap_return_27 => grp_dense_1_fu_812_ap_return_27,
        ap_return_28 => grp_dense_1_fu_812_ap_return_28,
        ap_return_29 => grp_dense_1_fu_812_ap_return_29,
        ap_return_30 => grp_dense_1_fu_812_ap_return_30,
        ap_return_31 => grp_dense_1_fu_812_ap_return_31,
        ap_return_32 => grp_dense_1_fu_812_ap_return_32,
        ap_return_33 => grp_dense_1_fu_812_ap_return_33,
        ap_return_34 => grp_dense_1_fu_812_ap_return_34,
        ap_return_35 => grp_dense_1_fu_812_ap_return_35,
        ap_return_36 => grp_dense_1_fu_812_ap_return_36,
        ap_return_37 => grp_dense_1_fu_812_ap_return_37,
        ap_return_38 => grp_dense_1_fu_812_ap_return_38,
        ap_return_39 => grp_dense_1_fu_812_ap_return_39,
        ap_return_40 => grp_dense_1_fu_812_ap_return_40,
        ap_return_41 => grp_dense_1_fu_812_ap_return_41,
        ap_return_42 => grp_dense_1_fu_812_ap_return_42,
        ap_return_43 => grp_dense_1_fu_812_ap_return_43,
        ap_return_44 => grp_dense_1_fu_812_ap_return_44,
        ap_return_45 => grp_dense_1_fu_812_ap_return_45,
        ap_return_46 => grp_dense_1_fu_812_ap_return_46,
        ap_return_47 => grp_dense_1_fu_812_ap_return_47,
        ap_return_48 => grp_dense_1_fu_812_ap_return_48,
        ap_return_49 => grp_dense_1_fu_812_ap_return_49);

    grp_conv_2_fu_970 : component conv_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_2_fu_970_ap_start,
        ap_done => grp_conv_2_fu_970_ap_done,
        ap_idle => grp_conv_2_fu_970_ap_idle,
        ap_ready => grp_conv_2_fu_970_ap_ready,
        conv_out_address0 => grp_conv_2_fu_970_conv_out_address0,
        conv_out_ce0 => grp_conv_2_fu_970_conv_out_ce0,
        conv_out_we0 => grp_conv_2_fu_970_conv_out_we0,
        conv_out_d0 => grp_conv_2_fu_970_conv_out_d0,
        max_pool_1_out_0_address0 => grp_conv_2_fu_970_max_pool_1_out_0_address0,
        max_pool_1_out_0_ce0 => grp_conv_2_fu_970_max_pool_1_out_0_ce0,
        max_pool_1_out_0_q0 => max_pool_1_out_0_q0,
        max_pool_1_out_0_address1 => grp_conv_2_fu_970_max_pool_1_out_0_address1,
        max_pool_1_out_0_ce1 => grp_conv_2_fu_970_max_pool_1_out_0_ce1,
        max_pool_1_out_0_q1 => max_pool_1_out_0_q1,
        max_pool_1_out_1_address0 => grp_conv_2_fu_970_max_pool_1_out_1_address0,
        max_pool_1_out_1_ce0 => grp_conv_2_fu_970_max_pool_1_out_1_ce0,
        max_pool_1_out_1_q0 => max_pool_1_out_1_q0,
        max_pool_1_out_1_address1 => grp_conv_2_fu_970_max_pool_1_out_1_address1,
        max_pool_1_out_1_ce1 => grp_conv_2_fu_970_max_pool_1_out_1_ce1,
        max_pool_1_out_1_q1 => max_pool_1_out_1_q1,
        max_pool_1_out_2_address0 => grp_conv_2_fu_970_max_pool_1_out_2_address0,
        max_pool_1_out_2_ce0 => grp_conv_2_fu_970_max_pool_1_out_2_ce0,
        max_pool_1_out_2_q0 => max_pool_1_out_2_q0,
        max_pool_1_out_2_address1 => grp_conv_2_fu_970_max_pool_1_out_2_address1,
        max_pool_1_out_2_ce1 => grp_conv_2_fu_970_max_pool_1_out_2_ce1,
        max_pool_1_out_2_q1 => max_pool_1_out_2_q1,
        max_pool_1_out_3_address0 => grp_conv_2_fu_970_max_pool_1_out_3_address0,
        max_pool_1_out_3_ce0 => grp_conv_2_fu_970_max_pool_1_out_3_ce0,
        max_pool_1_out_3_q0 => max_pool_1_out_3_q0,
        max_pool_1_out_3_address1 => grp_conv_2_fu_970_max_pool_1_out_3_address1,
        max_pool_1_out_3_ce1 => grp_conv_2_fu_970_max_pool_1_out_3_ce1,
        max_pool_1_out_3_q1 => max_pool_1_out_3_q1,
        max_pool_1_out_4_address0 => grp_conv_2_fu_970_max_pool_1_out_4_address0,
        max_pool_1_out_4_ce0 => grp_conv_2_fu_970_max_pool_1_out_4_ce0,
        max_pool_1_out_4_q0 => max_pool_1_out_4_q0,
        max_pool_1_out_4_address1 => grp_conv_2_fu_970_max_pool_1_out_4_address1,
        max_pool_1_out_4_ce1 => grp_conv_2_fu_970_max_pool_1_out_4_ce1,
        max_pool_1_out_4_q1 => max_pool_1_out_4_q1,
        max_pool_1_out_5_address0 => grp_conv_2_fu_970_max_pool_1_out_5_address0,
        max_pool_1_out_5_ce0 => grp_conv_2_fu_970_max_pool_1_out_5_ce0,
        max_pool_1_out_5_q0 => max_pool_1_out_5_q0,
        max_pool_1_out_5_address1 => grp_conv_2_fu_970_max_pool_1_out_5_address1,
        max_pool_1_out_5_ce1 => grp_conv_2_fu_970_max_pool_1_out_5_ce1,
        max_pool_1_out_5_q1 => max_pool_1_out_5_q1);

    grp_conv_1_fu_1098 : component conv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_1_fu_1098_ap_start,
        ap_done => grp_conv_1_fu_1098_ap_done,
        ap_idle => grp_conv_1_fu_1098_ap_idle,
        ap_ready => grp_conv_1_fu_1098_ap_ready,
        input_r_address0 => grp_conv_1_fu_1098_input_r_address0,
        input_r_ce0 => grp_conv_1_fu_1098_input_r_ce0,
        input_r_q0 => conv_1_input_q0,
        input_r_address1 => grp_conv_1_fu_1098_input_r_address1,
        input_r_ce1 => grp_conv_1_fu_1098_input_r_ce1,
        input_r_q1 => conv_1_input_q1,
        conv_1_out_address0 => grp_conv_1_fu_1098_conv_1_out_address0,
        conv_1_out_ce0 => grp_conv_1_fu_1098_conv_1_out_ce0,
        conv_1_out_we0 => grp_conv_1_fu_1098_conv_1_out_we0,
        conv_1_out_d0 => grp_conv_1_fu_1098_conv_1_out_d0,
        conv_1_out_address1 => grp_conv_1_fu_1098_conv_1_out_address1,
        conv_1_out_ce1 => grp_conv_1_fu_1098_conv_1_out_ce1,
        conv_1_out_we1 => grp_conv_1_fu_1098_conv_1_out_we1,
        conv_1_out_d1 => grp_conv_1_fu_1098_conv_1_out_d1);

    grp_dense_out_fu_1105 : component dense_out
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dense_out_fu_1105_ap_start,
        ap_done => grp_dense_out_fu_1105_ap_done,
        ap_idle => grp_dense_out_fu_1105_ap_idle,
        ap_ready => grp_dense_out_fu_1105_ap_ready,
        prediction_Addr_A => grp_dense_out_fu_1105_prediction_Addr_A,
        prediction_EN_A => grp_dense_out_fu_1105_prediction_EN_A,
        prediction_WEN_A => grp_dense_out_fu_1105_prediction_WEN_A,
        prediction_Din_A => grp_dense_out_fu_1105_prediction_Din_A,
        prediction_Dout_A => ap_const_lv32_0,
        dense_2_out_address0 => grp_dense_out_fu_1105_dense_2_out_address0,
        dense_2_out_ce0 => grp_dense_out_fu_1105_dense_2_out_ce0,
        dense_2_out_q0 => dense_2_out_q0);

    grp_max_pool_2_fu_1117 : component max_pool_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_max_pool_2_fu_1117_ap_start,
        ap_done => grp_max_pool_2_fu_1117_ap_done,
        ap_idle => grp_max_pool_2_fu_1117_ap_idle,
        ap_ready => grp_max_pool_2_fu_1117_ap_ready,
        max_pool_2_out_address0 => grp_max_pool_2_fu_1117_max_pool_2_out_address0,
        max_pool_2_out_ce0 => grp_max_pool_2_fu_1117_max_pool_2_out_ce0,
        max_pool_2_out_we0 => grp_max_pool_2_fu_1117_max_pool_2_out_we0,
        max_pool_2_out_d0 => grp_max_pool_2_fu_1117_max_pool_2_out_d0,
        conv_2_out_address0 => grp_max_pool_2_fu_1117_conv_2_out_address0,
        conv_2_out_ce0 => grp_max_pool_2_fu_1117_conv_2_out_ce0,
        conv_2_out_q0 => conv_2_out_q0,
        conv_2_out_address1 => grp_max_pool_2_fu_1117_conv_2_out_address1,
        conv_2_out_ce1 => grp_max_pool_2_fu_1117_conv_2_out_ce1,
        conv_2_out_q1 => conv_2_out_q1);

    grp_max_pool_1_fu_1125 : component max_pool_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_max_pool_1_fu_1125_ap_start,
        ap_done => grp_max_pool_1_fu_1125_ap_done,
        ap_idle => grp_max_pool_1_fu_1125_ap_idle,
        ap_ready => grp_max_pool_1_fu_1125_ap_ready,
        conv_out_address0 => grp_max_pool_1_fu_1125_conv_out_address0,
        conv_out_ce0 => grp_max_pool_1_fu_1125_conv_out_ce0,
        conv_out_q0 => conv_1_out_q0,
        conv_out_address1 => grp_max_pool_1_fu_1125_conv_out_address1,
        conv_out_ce1 => grp_max_pool_1_fu_1125_conv_out_ce1,
        conv_out_q1 => conv_1_out_q1,
        max_pool_out_0_address0 => grp_max_pool_1_fu_1125_max_pool_out_0_address0,
        max_pool_out_0_ce0 => grp_max_pool_1_fu_1125_max_pool_out_0_ce0,
        max_pool_out_0_we0 => grp_max_pool_1_fu_1125_max_pool_out_0_we0,
        max_pool_out_0_d0 => grp_max_pool_1_fu_1125_max_pool_out_0_d0,
        max_pool_out_1_address0 => grp_max_pool_1_fu_1125_max_pool_out_1_address0,
        max_pool_out_1_ce0 => grp_max_pool_1_fu_1125_max_pool_out_1_ce0,
        max_pool_out_1_we0 => grp_max_pool_1_fu_1125_max_pool_out_1_we0,
        max_pool_out_1_d0 => grp_max_pool_1_fu_1125_max_pool_out_1_d0,
        max_pool_out_2_address0 => grp_max_pool_1_fu_1125_max_pool_out_2_address0,
        max_pool_out_2_ce0 => grp_max_pool_1_fu_1125_max_pool_out_2_ce0,
        max_pool_out_2_we0 => grp_max_pool_1_fu_1125_max_pool_out_2_we0,
        max_pool_out_2_d0 => grp_max_pool_1_fu_1125_max_pool_out_2_d0,
        max_pool_out_3_address0 => grp_max_pool_1_fu_1125_max_pool_out_3_address0,
        max_pool_out_3_ce0 => grp_max_pool_1_fu_1125_max_pool_out_3_ce0,
        max_pool_out_3_we0 => grp_max_pool_1_fu_1125_max_pool_out_3_we0,
        max_pool_out_3_d0 => grp_max_pool_1_fu_1125_max_pool_out_3_d0,
        max_pool_out_4_address0 => grp_max_pool_1_fu_1125_max_pool_out_4_address0,
        max_pool_out_4_ce0 => grp_max_pool_1_fu_1125_max_pool_out_4_ce0,
        max_pool_out_4_we0 => grp_max_pool_1_fu_1125_max_pool_out_4_we0,
        max_pool_out_4_d0 => grp_max_pool_1_fu_1125_max_pool_out_4_d0,
        max_pool_out_5_address0 => grp_max_pool_1_fu_1125_max_pool_out_5_address0,
        max_pool_out_5_ce0 => grp_max_pool_1_fu_1125_max_pool_out_5_ce0,
        max_pool_out_5_we0 => grp_max_pool_1_fu_1125_max_pool_out_5_we0,
        max_pool_out_5_d0 => grp_max_pool_1_fu_1125_max_pool_out_5_d0);

    grp_flat_fu_1143 : component flat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_flat_fu_1143_ap_start,
        ap_done => grp_flat_fu_1143_ap_done,
        ap_idle => grp_flat_fu_1143_ap_idle,
        ap_ready => grp_flat_fu_1143_ap_ready,
        max_pool_out_address0 => grp_flat_fu_1143_max_pool_out_address0,
        max_pool_out_ce0 => grp_flat_fu_1143_max_pool_out_ce0,
        max_pool_out_q0 => max_pool_2_out_q0,
        flat_array_0_address0 => grp_flat_fu_1143_flat_array_0_address0,
        flat_array_0_ce0 => grp_flat_fu_1143_flat_array_0_ce0,
        flat_array_0_we0 => grp_flat_fu_1143_flat_array_0_we0,
        flat_array_0_d0 => grp_flat_fu_1143_flat_array_0_d0,
        flat_array_1_address0 => grp_flat_fu_1143_flat_array_1_address0,
        flat_array_1_ce0 => grp_flat_fu_1143_flat_array_1_ce0,
        flat_array_1_we0 => grp_flat_fu_1143_flat_array_1_we0,
        flat_array_1_d0 => grp_flat_fu_1143_flat_array_1_d0,
        flat_array_2_address0 => grp_flat_fu_1143_flat_array_2_address0,
        flat_array_2_ce0 => grp_flat_fu_1143_flat_array_2_ce0,
        flat_array_2_we0 => grp_flat_fu_1143_flat_array_2_we0,
        flat_array_2_d0 => grp_flat_fu_1143_flat_array_2_d0,
        flat_array_3_address0 => grp_flat_fu_1143_flat_array_3_address0,
        flat_array_3_ce0 => grp_flat_fu_1143_flat_array_3_ce0,
        flat_array_3_we0 => grp_flat_fu_1143_flat_array_3_we0,
        flat_array_3_d0 => grp_flat_fu_1143_flat_array_3_d0,
        flat_array_4_address0 => grp_flat_fu_1143_flat_array_4_address0,
        flat_array_4_ce0 => grp_flat_fu_1143_flat_array_4_ce0,
        flat_array_4_we0 => grp_flat_fu_1143_flat_array_4_we0,
        flat_array_4_d0 => grp_flat_fu_1143_flat_array_4_d0,
        flat_array_5_address0 => grp_flat_fu_1143_flat_array_5_address0,
        flat_array_5_ce0 => grp_flat_fu_1143_flat_array_5_ce0,
        flat_array_5_we0 => grp_flat_fu_1143_flat_array_5_we0,
        flat_array_5_d0 => grp_flat_fu_1143_flat_array_5_d0,
        flat_array_6_address0 => grp_flat_fu_1143_flat_array_6_address0,
        flat_array_6_ce0 => grp_flat_fu_1143_flat_array_6_ce0,
        flat_array_6_we0 => grp_flat_fu_1143_flat_array_6_we0,
        flat_array_6_d0 => grp_flat_fu_1143_flat_array_6_d0,
        flat_array_7_address0 => grp_flat_fu_1143_flat_array_7_address0,
        flat_array_7_ce0 => grp_flat_fu_1143_flat_array_7_ce0,
        flat_array_7_we0 => grp_flat_fu_1143_flat_array_7_we0,
        flat_array_7_d0 => grp_flat_fu_1143_flat_array_7_d0,
        flat_array_8_address0 => grp_flat_fu_1143_flat_array_8_address0,
        flat_array_8_ce0 => grp_flat_fu_1143_flat_array_8_ce0,
        flat_array_8_we0 => grp_flat_fu_1143_flat_array_8_we0,
        flat_array_8_d0 => grp_flat_fu_1143_flat_array_8_d0,
        flat_array_9_address0 => grp_flat_fu_1143_flat_array_9_address0,
        flat_array_9_ce0 => grp_flat_fu_1143_flat_array_9_ce0,
        flat_array_9_we0 => grp_flat_fu_1143_flat_array_9_we0,
        flat_array_9_d0 => grp_flat_fu_1143_flat_array_9_d0,
        flat_array_10_address0 => grp_flat_fu_1143_flat_array_10_address0,
        flat_array_10_ce0 => grp_flat_fu_1143_flat_array_10_ce0,
        flat_array_10_we0 => grp_flat_fu_1143_flat_array_10_we0,
        flat_array_10_d0 => grp_flat_fu_1143_flat_array_10_d0,
        flat_array_11_address0 => grp_flat_fu_1143_flat_array_11_address0,
        flat_array_11_ce0 => grp_flat_fu_1143_flat_array_11_ce0,
        flat_array_11_we0 => grp_flat_fu_1143_flat_array_11_we0,
        flat_array_11_d0 => grp_flat_fu_1143_flat_array_11_d0,
        flat_array_12_address0 => grp_flat_fu_1143_flat_array_12_address0,
        flat_array_12_ce0 => grp_flat_fu_1143_flat_array_12_ce0,
        flat_array_12_we0 => grp_flat_fu_1143_flat_array_12_we0,
        flat_array_12_d0 => grp_flat_fu_1143_flat_array_12_d0,
        flat_array_13_address0 => grp_flat_fu_1143_flat_array_13_address0,
        flat_array_13_ce0 => grp_flat_fu_1143_flat_array_13_ce0,
        flat_array_13_we0 => grp_flat_fu_1143_flat_array_13_we0,
        flat_array_13_d0 => grp_flat_fu_1143_flat_array_13_d0,
        flat_array_14_address0 => grp_flat_fu_1143_flat_array_14_address0,
        flat_array_14_ce0 => grp_flat_fu_1143_flat_array_14_ce0,
        flat_array_14_we0 => grp_flat_fu_1143_flat_array_14_we0,
        flat_array_14_d0 => grp_flat_fu_1143_flat_array_14_d0,
        flat_array_15_address0 => grp_flat_fu_1143_flat_array_15_address0,
        flat_array_15_ce0 => grp_flat_fu_1143_flat_array_15_ce0,
        flat_array_15_we0 => grp_flat_fu_1143_flat_array_15_we0,
        flat_array_15_d0 => grp_flat_fu_1143_flat_array_15_d0,
        flat_array_16_address0 => grp_flat_fu_1143_flat_array_16_address0,
        flat_array_16_ce0 => grp_flat_fu_1143_flat_array_16_ce0,
        flat_array_16_we0 => grp_flat_fu_1143_flat_array_16_we0,
        flat_array_16_d0 => grp_flat_fu_1143_flat_array_16_d0,
        flat_array_17_address0 => grp_flat_fu_1143_flat_array_17_address0,
        flat_array_17_ce0 => grp_flat_fu_1143_flat_array_17_ce0,
        flat_array_17_we0 => grp_flat_fu_1143_flat_array_17_we0,
        flat_array_17_d0 => grp_flat_fu_1143_flat_array_17_d0,
        flat_array_18_address0 => grp_flat_fu_1143_flat_array_18_address0,
        flat_array_18_ce0 => grp_flat_fu_1143_flat_array_18_ce0,
        flat_array_18_we0 => grp_flat_fu_1143_flat_array_18_we0,
        flat_array_18_d0 => grp_flat_fu_1143_flat_array_18_d0,
        flat_array_19_address0 => grp_flat_fu_1143_flat_array_19_address0,
        flat_array_19_ce0 => grp_flat_fu_1143_flat_array_19_ce0,
        flat_array_19_we0 => grp_flat_fu_1143_flat_array_19_we0,
        flat_array_19_d0 => grp_flat_fu_1143_flat_array_19_d0,
        flat_array_20_address0 => grp_flat_fu_1143_flat_array_20_address0,
        flat_array_20_ce0 => grp_flat_fu_1143_flat_array_20_ce0,
        flat_array_20_we0 => grp_flat_fu_1143_flat_array_20_we0,
        flat_array_20_d0 => grp_flat_fu_1143_flat_array_20_d0,
        flat_array_21_address0 => grp_flat_fu_1143_flat_array_21_address0,
        flat_array_21_ce0 => grp_flat_fu_1143_flat_array_21_ce0,
        flat_array_21_we0 => grp_flat_fu_1143_flat_array_21_we0,
        flat_array_21_d0 => grp_flat_fu_1143_flat_array_21_d0,
        flat_array_22_address0 => grp_flat_fu_1143_flat_array_22_address0,
        flat_array_22_ce0 => grp_flat_fu_1143_flat_array_22_ce0,
        flat_array_22_we0 => grp_flat_fu_1143_flat_array_22_we0,
        flat_array_22_d0 => grp_flat_fu_1143_flat_array_22_d0,
        flat_array_23_address0 => grp_flat_fu_1143_flat_array_23_address0,
        flat_array_23_ce0 => grp_flat_fu_1143_flat_array_23_ce0,
        flat_array_23_we0 => grp_flat_fu_1143_flat_array_23_we0,
        flat_array_23_d0 => grp_flat_fu_1143_flat_array_23_d0,
        flat_array_24_address0 => grp_flat_fu_1143_flat_array_24_address0,
        flat_array_24_ce0 => grp_flat_fu_1143_flat_array_24_ce0,
        flat_array_24_we0 => grp_flat_fu_1143_flat_array_24_we0,
        flat_array_24_d0 => grp_flat_fu_1143_flat_array_24_d0,
        flat_array_25_address0 => grp_flat_fu_1143_flat_array_25_address0,
        flat_array_25_ce0 => grp_flat_fu_1143_flat_array_25_ce0,
        flat_array_25_we0 => grp_flat_fu_1143_flat_array_25_we0,
        flat_array_25_d0 => grp_flat_fu_1143_flat_array_25_d0,
        flat_array_26_address0 => grp_flat_fu_1143_flat_array_26_address0,
        flat_array_26_ce0 => grp_flat_fu_1143_flat_array_26_ce0,
        flat_array_26_we0 => grp_flat_fu_1143_flat_array_26_we0,
        flat_array_26_d0 => grp_flat_fu_1143_flat_array_26_d0,
        flat_array_27_address0 => grp_flat_fu_1143_flat_array_27_address0,
        flat_array_27_ce0 => grp_flat_fu_1143_flat_array_27_ce0,
        flat_array_27_we0 => grp_flat_fu_1143_flat_array_27_we0,
        flat_array_27_d0 => grp_flat_fu_1143_flat_array_27_d0,
        flat_array_28_address0 => grp_flat_fu_1143_flat_array_28_address0,
        flat_array_28_ce0 => grp_flat_fu_1143_flat_array_28_ce0,
        flat_array_28_we0 => grp_flat_fu_1143_flat_array_28_we0,
        flat_array_28_d0 => grp_flat_fu_1143_flat_array_28_d0,
        flat_array_29_address0 => grp_flat_fu_1143_flat_array_29_address0,
        flat_array_29_ce0 => grp_flat_fu_1143_flat_array_29_ce0,
        flat_array_29_we0 => grp_flat_fu_1143_flat_array_29_we0,
        flat_array_29_d0 => grp_flat_fu_1143_flat_array_29_d0,
        flat_array_30_address0 => grp_flat_fu_1143_flat_array_30_address0,
        flat_array_30_ce0 => grp_flat_fu_1143_flat_array_30_ce0,
        flat_array_30_we0 => grp_flat_fu_1143_flat_array_30_we0,
        flat_array_30_d0 => grp_flat_fu_1143_flat_array_30_d0,
        flat_array_31_address0 => grp_flat_fu_1143_flat_array_31_address0,
        flat_array_31_ce0 => grp_flat_fu_1143_flat_array_31_ce0,
        flat_array_31_we0 => grp_flat_fu_1143_flat_array_31_we0,
        flat_array_31_d0 => grp_flat_fu_1143_flat_array_31_d0,
        flat_array_32_address0 => grp_flat_fu_1143_flat_array_32_address0,
        flat_array_32_ce0 => grp_flat_fu_1143_flat_array_32_ce0,
        flat_array_32_we0 => grp_flat_fu_1143_flat_array_32_we0,
        flat_array_32_d0 => grp_flat_fu_1143_flat_array_32_d0,
        flat_array_33_address0 => grp_flat_fu_1143_flat_array_33_address0,
        flat_array_33_ce0 => grp_flat_fu_1143_flat_array_33_ce0,
        flat_array_33_we0 => grp_flat_fu_1143_flat_array_33_we0,
        flat_array_33_d0 => grp_flat_fu_1143_flat_array_33_d0,
        flat_array_34_address0 => grp_flat_fu_1143_flat_array_34_address0,
        flat_array_34_ce0 => grp_flat_fu_1143_flat_array_34_ce0,
        flat_array_34_we0 => grp_flat_fu_1143_flat_array_34_we0,
        flat_array_34_d0 => grp_flat_fu_1143_flat_array_34_d0,
        flat_array_35_address0 => grp_flat_fu_1143_flat_array_35_address0,
        flat_array_35_ce0 => grp_flat_fu_1143_flat_array_35_ce0,
        flat_array_35_we0 => grp_flat_fu_1143_flat_array_35_we0,
        flat_array_35_d0 => grp_flat_fu_1143_flat_array_35_d0,
        flat_array_36_address0 => grp_flat_fu_1143_flat_array_36_address0,
        flat_array_36_ce0 => grp_flat_fu_1143_flat_array_36_ce0,
        flat_array_36_we0 => grp_flat_fu_1143_flat_array_36_we0,
        flat_array_36_d0 => grp_flat_fu_1143_flat_array_36_d0,
        flat_array_37_address0 => grp_flat_fu_1143_flat_array_37_address0,
        flat_array_37_ce0 => grp_flat_fu_1143_flat_array_37_ce0,
        flat_array_37_we0 => grp_flat_fu_1143_flat_array_37_we0,
        flat_array_37_d0 => grp_flat_fu_1143_flat_array_37_d0,
        flat_array_38_address0 => grp_flat_fu_1143_flat_array_38_address0,
        flat_array_38_ce0 => grp_flat_fu_1143_flat_array_38_ce0,
        flat_array_38_we0 => grp_flat_fu_1143_flat_array_38_we0,
        flat_array_38_d0 => grp_flat_fu_1143_flat_array_38_d0,
        flat_array_39_address0 => grp_flat_fu_1143_flat_array_39_address0,
        flat_array_39_ce0 => grp_flat_fu_1143_flat_array_39_ce0,
        flat_array_39_we0 => grp_flat_fu_1143_flat_array_39_we0,
        flat_array_39_d0 => grp_flat_fu_1143_flat_array_39_d0,
        flat_array_40_address0 => grp_flat_fu_1143_flat_array_40_address0,
        flat_array_40_ce0 => grp_flat_fu_1143_flat_array_40_ce0,
        flat_array_40_we0 => grp_flat_fu_1143_flat_array_40_we0,
        flat_array_40_d0 => grp_flat_fu_1143_flat_array_40_d0,
        flat_array_41_address0 => grp_flat_fu_1143_flat_array_41_address0,
        flat_array_41_ce0 => grp_flat_fu_1143_flat_array_41_ce0,
        flat_array_41_we0 => grp_flat_fu_1143_flat_array_41_we0,
        flat_array_41_d0 => grp_flat_fu_1143_flat_array_41_d0,
        flat_array_42_address0 => grp_flat_fu_1143_flat_array_42_address0,
        flat_array_42_ce0 => grp_flat_fu_1143_flat_array_42_ce0,
        flat_array_42_we0 => grp_flat_fu_1143_flat_array_42_we0,
        flat_array_42_d0 => grp_flat_fu_1143_flat_array_42_d0,
        flat_array_43_address0 => grp_flat_fu_1143_flat_array_43_address0,
        flat_array_43_ce0 => grp_flat_fu_1143_flat_array_43_ce0,
        flat_array_43_we0 => grp_flat_fu_1143_flat_array_43_we0,
        flat_array_43_d0 => grp_flat_fu_1143_flat_array_43_d0,
        flat_array_44_address0 => grp_flat_fu_1143_flat_array_44_address0,
        flat_array_44_ce0 => grp_flat_fu_1143_flat_array_44_ce0,
        flat_array_44_we0 => grp_flat_fu_1143_flat_array_44_we0,
        flat_array_44_d0 => grp_flat_fu_1143_flat_array_44_d0,
        flat_array_45_address0 => grp_flat_fu_1143_flat_array_45_address0,
        flat_array_45_ce0 => grp_flat_fu_1143_flat_array_45_ce0,
        flat_array_45_we0 => grp_flat_fu_1143_flat_array_45_we0,
        flat_array_45_d0 => grp_flat_fu_1143_flat_array_45_d0,
        flat_array_46_address0 => grp_flat_fu_1143_flat_array_46_address0,
        flat_array_46_ce0 => grp_flat_fu_1143_flat_array_46_ce0,
        flat_array_46_we0 => grp_flat_fu_1143_flat_array_46_we0,
        flat_array_46_d0 => grp_flat_fu_1143_flat_array_46_d0,
        flat_array_47_address0 => grp_flat_fu_1143_flat_array_47_address0,
        flat_array_47_ce0 => grp_flat_fu_1143_flat_array_47_ce0,
        flat_array_47_we0 => grp_flat_fu_1143_flat_array_47_we0,
        flat_array_47_d0 => grp_flat_fu_1143_flat_array_47_d0,
        flat_array_48_address0 => grp_flat_fu_1143_flat_array_48_address0,
        flat_array_48_ce0 => grp_flat_fu_1143_flat_array_48_ce0,
        flat_array_48_we0 => grp_flat_fu_1143_flat_array_48_we0,
        flat_array_48_d0 => grp_flat_fu_1143_flat_array_48_d0,
        flat_array_49_address0 => grp_flat_fu_1143_flat_array_49_address0,
        flat_array_49_ce0 => grp_flat_fu_1143_flat_array_49_ce0,
        flat_array_49_we0 => grp_flat_fu_1143_flat_array_49_we0,
        flat_array_49_d0 => grp_flat_fu_1143_flat_array_49_d0);

    cnn_fadd_32ns_32nbkb_U351 : component cnn_fadd_32ns_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1249_p0,
        din1 => grp_fu_1249_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1249_p2);

    cnn_fmul_32ns_32ncud_U352 : component cnn_fmul_32ns_32ncud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706,
        din1 => dense_2_weights_q0,
        ce => ap_const_logic_1,
        dout => grp_fu_1254_p2);

    cnn_fcmp_32ns_32ndEe_U353 : component cnn_fcmp_32ns_32ndEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1249_p2,
        din1 => ap_const_lv32_0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_4,
        dout => grp_fu_1260_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state16) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_1_fu_1098_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_1_fu_1098_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln23_fu_1266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_conv_1_fu_1098_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_1_fu_1098_ap_ready = ap_const_logic_1)) then 
                    grp_conv_1_fu_1098_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_2_fu_970_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_2_fu_970_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_conv_2_fu_970_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_2_fu_970_ap_ready = ap_const_logic_1)) then 
                    grp_conv_2_fu_970_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_1_fu_812_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dense_1_fu_812_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_dense_1_fu_812_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_1_fu_812_ap_ready = ap_const_logic_1)) then 
                    grp_dense_1_fu_812_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dense_out_fu_1105_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dense_out_fu_1105_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_dense_out_fu_1105_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dense_out_fu_1105_ap_ready = ap_const_logic_1)) then 
                    grp_dense_out_fu_1105_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_flat_fu_1143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_flat_fu_1143_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_flat_fu_1143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_flat_fu_1143_ap_ready = ap_const_logic_1)) then 
                    grp_flat_fu_1143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_1_fu_1125_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_max_pool_1_fu_1125_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_max_pool_1_fu_1125_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_1_fu_1125_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_1_fu_1125_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_2_fu_1117_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_max_pool_2_fu_1117_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_max_pool_2_fu_1117_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_2_fu_1117_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_2_fu_1117_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1165)) then
                if (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_0))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_0_ret_reg_2547;
                elsif ((ap_const_boolean_1 = ap_condition_2322)) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_49_ret_reg_2792;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_30))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_48_ret_reg_2787;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2F))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_47_ret_reg_2782;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2E))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_46_ret_reg_2777;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2D))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_45_ret_reg_2772;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2C))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_44_ret_reg_2767;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2B))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_43_ret_reg_2762;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2A))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_42_ret_reg_2757;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_29))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_41_ret_reg_2752;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_28))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_40_ret_reg_2747;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_27))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_39_ret_reg_2742;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_26))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_38_ret_reg_2737;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_25))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_37_ret_reg_2732;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_24))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_36_ret_reg_2727;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_23))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_35_ret_reg_2722;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_22))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_34_ret_reg_2717;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_21))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_33_ret_reg_2712;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_20))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_32_ret_reg_2707;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1F))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_31_ret_reg_2702;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1E))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_30_ret_reg_2697;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1D))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_29_ret_reg_2692;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1C))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_28_ret_reg_2687;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1B))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_27_ret_reg_2682;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1A))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_26_ret_reg_2677;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_19))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_25_ret_reg_2672;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_18))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_24_ret_reg_2667;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_17))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_23_ret_reg_2662;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_16))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_22_ret_reg_2657;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_15))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_21_ret_reg_2652;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_14))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_20_ret_reg_2647;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_13))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_19_ret_reg_2642;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_12))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_18_ret_reg_2637;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_11))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_17_ret_reg_2632;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_10))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_16_ret_reg_2627;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_F))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_15_ret_reg_2622;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_E))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_14_ret_reg_2617;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_D))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_13_ret_reg_2612;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_C))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_12_ret_reg_2607;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_B))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_11_ret_reg_2602;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_A))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_10_ret_reg_2597;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_9))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_9_ret_reg_2592;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_8))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_8_ret_reg_2587;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_7))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_7_ret_reg_2582;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_6))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_6_ret_reg_2577;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_5))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_5_ret_reg_2572;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_4))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_4_ret_reg_2567;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_3_ret_reg_2562;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_2))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_2_ret_reg_2557;
                elsif (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_1))) then 
                    ap_phi_reg_pp0_iter0_UnifiedRetVal_i_reg_706 <= dense_1_out_1_ret_reg_2552;
                end if;
            end if; 
        end if;
    end process;

    i_0_i_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_0_i_reg_672 <= select_ln14_2_reg_2816;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                i_0_i_reg_672 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_0_reg_629_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_1314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_629 <= i_reg_2259;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_629 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_661 <= add_ln9_reg_2801;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                indvar_flatten_reg_661 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    ix_in_0_reg_617_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_1314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                ix_in_0_reg_617 <= ix_in_reg_2264;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                ix_in_0_reg_617 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    ix_in_1_reg_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                ix_in_1_reg_640 <= add_ln28_reg_2292;
            elsif (((icmp_ln23_fu_1266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                ix_in_1_reg_640 <= ix_in_0_reg_617;
            end if; 
        end if;
    end process;

    j_0_i_reg_695_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_0_i_reg_695 <= j_1_reg_2837;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                j_0_i_reg_695 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_0_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_0_reg_650 <= j_reg_2277;
            elsif (((icmp_ln23_fu_1266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_650 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    sum_0_i_reg_683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                sum_0_i_reg_683 <= grp_fu_1249_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then 
                sum_0_i_reg_683 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln25_fu_1314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln27_reg_2287 <= add_ln27_fu_1335_p2;
                add_ln28_reg_2292 <= add_ln28_fu_1340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln9_reg_2801 <= add_ln9_fu_2106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then
                dense_1_out_0 <= grp_dense_1_fu_812_ap_return_0;
                dense_1_out_0_ret_reg_2547 <= grp_dense_1_fu_812_ap_return_0;
                dense_1_out_1 <= grp_dense_1_fu_812_ap_return_1;
                dense_1_out_10 <= grp_dense_1_fu_812_ap_return_10;
                dense_1_out_10_ret_reg_2597 <= grp_dense_1_fu_812_ap_return_10;
                dense_1_out_11 <= grp_dense_1_fu_812_ap_return_11;
                dense_1_out_11_ret_reg_2602 <= grp_dense_1_fu_812_ap_return_11;
                dense_1_out_12 <= grp_dense_1_fu_812_ap_return_12;
                dense_1_out_12_ret_reg_2607 <= grp_dense_1_fu_812_ap_return_12;
                dense_1_out_13 <= grp_dense_1_fu_812_ap_return_13;
                dense_1_out_13_ret_reg_2612 <= grp_dense_1_fu_812_ap_return_13;
                dense_1_out_14 <= grp_dense_1_fu_812_ap_return_14;
                dense_1_out_14_ret_reg_2617 <= grp_dense_1_fu_812_ap_return_14;
                dense_1_out_15 <= grp_dense_1_fu_812_ap_return_15;
                dense_1_out_15_ret_reg_2622 <= grp_dense_1_fu_812_ap_return_15;
                dense_1_out_16 <= grp_dense_1_fu_812_ap_return_16;
                dense_1_out_16_ret_reg_2627 <= grp_dense_1_fu_812_ap_return_16;
                dense_1_out_17 <= grp_dense_1_fu_812_ap_return_17;
                dense_1_out_17_ret_reg_2632 <= grp_dense_1_fu_812_ap_return_17;
                dense_1_out_18 <= grp_dense_1_fu_812_ap_return_18;
                dense_1_out_18_ret_reg_2637 <= grp_dense_1_fu_812_ap_return_18;
                dense_1_out_19 <= grp_dense_1_fu_812_ap_return_19;
                dense_1_out_19_ret_reg_2642 <= grp_dense_1_fu_812_ap_return_19;
                dense_1_out_1_ret_reg_2552 <= grp_dense_1_fu_812_ap_return_1;
                dense_1_out_2 <= grp_dense_1_fu_812_ap_return_2;
                dense_1_out_20 <= grp_dense_1_fu_812_ap_return_20;
                dense_1_out_20_ret_reg_2647 <= grp_dense_1_fu_812_ap_return_20;
                dense_1_out_21 <= grp_dense_1_fu_812_ap_return_21;
                dense_1_out_21_ret_reg_2652 <= grp_dense_1_fu_812_ap_return_21;
                dense_1_out_22 <= grp_dense_1_fu_812_ap_return_22;
                dense_1_out_22_ret_reg_2657 <= grp_dense_1_fu_812_ap_return_22;
                dense_1_out_23 <= grp_dense_1_fu_812_ap_return_23;
                dense_1_out_23_ret_reg_2662 <= grp_dense_1_fu_812_ap_return_23;
                dense_1_out_24 <= grp_dense_1_fu_812_ap_return_24;
                dense_1_out_24_ret_reg_2667 <= grp_dense_1_fu_812_ap_return_24;
                dense_1_out_25 <= grp_dense_1_fu_812_ap_return_25;
                dense_1_out_25_ret_reg_2672 <= grp_dense_1_fu_812_ap_return_25;
                dense_1_out_26 <= grp_dense_1_fu_812_ap_return_26;
                dense_1_out_26_ret_reg_2677 <= grp_dense_1_fu_812_ap_return_26;
                dense_1_out_27 <= grp_dense_1_fu_812_ap_return_27;
                dense_1_out_27_ret_reg_2682 <= grp_dense_1_fu_812_ap_return_27;
                dense_1_out_28 <= grp_dense_1_fu_812_ap_return_28;
                dense_1_out_28_ret_reg_2687 <= grp_dense_1_fu_812_ap_return_28;
                dense_1_out_29 <= grp_dense_1_fu_812_ap_return_29;
                dense_1_out_29_ret_reg_2692 <= grp_dense_1_fu_812_ap_return_29;
                dense_1_out_2_ret_reg_2557 <= grp_dense_1_fu_812_ap_return_2;
                dense_1_out_3 <= grp_dense_1_fu_812_ap_return_3;
                dense_1_out_30 <= grp_dense_1_fu_812_ap_return_30;
                dense_1_out_30_ret_reg_2697 <= grp_dense_1_fu_812_ap_return_30;
                dense_1_out_31 <= grp_dense_1_fu_812_ap_return_31;
                dense_1_out_31_ret_reg_2702 <= grp_dense_1_fu_812_ap_return_31;
                dense_1_out_32 <= grp_dense_1_fu_812_ap_return_32;
                dense_1_out_32_ret_reg_2707 <= grp_dense_1_fu_812_ap_return_32;
                dense_1_out_33 <= grp_dense_1_fu_812_ap_return_33;
                dense_1_out_33_ret_reg_2712 <= grp_dense_1_fu_812_ap_return_33;
                dense_1_out_34 <= grp_dense_1_fu_812_ap_return_34;
                dense_1_out_34_ret_reg_2717 <= grp_dense_1_fu_812_ap_return_34;
                dense_1_out_35 <= grp_dense_1_fu_812_ap_return_35;
                dense_1_out_35_ret_reg_2722 <= grp_dense_1_fu_812_ap_return_35;
                dense_1_out_36 <= grp_dense_1_fu_812_ap_return_36;
                dense_1_out_36_ret_reg_2727 <= grp_dense_1_fu_812_ap_return_36;
                dense_1_out_37 <= grp_dense_1_fu_812_ap_return_37;
                dense_1_out_37_ret_reg_2732 <= grp_dense_1_fu_812_ap_return_37;
                dense_1_out_38 <= grp_dense_1_fu_812_ap_return_38;
                dense_1_out_38_ret_reg_2737 <= grp_dense_1_fu_812_ap_return_38;
                dense_1_out_39 <= grp_dense_1_fu_812_ap_return_39;
                dense_1_out_39_ret_reg_2742 <= grp_dense_1_fu_812_ap_return_39;
                dense_1_out_3_ret_reg_2562 <= grp_dense_1_fu_812_ap_return_3;
                dense_1_out_4 <= grp_dense_1_fu_812_ap_return_4;
                dense_1_out_40 <= grp_dense_1_fu_812_ap_return_40;
                dense_1_out_40_ret_reg_2747 <= grp_dense_1_fu_812_ap_return_40;
                dense_1_out_41 <= grp_dense_1_fu_812_ap_return_41;
                dense_1_out_41_ret_reg_2752 <= grp_dense_1_fu_812_ap_return_41;
                dense_1_out_42 <= grp_dense_1_fu_812_ap_return_42;
                dense_1_out_42_ret_reg_2757 <= grp_dense_1_fu_812_ap_return_42;
                dense_1_out_43 <= grp_dense_1_fu_812_ap_return_43;
                dense_1_out_43_ret_reg_2762 <= grp_dense_1_fu_812_ap_return_43;
                dense_1_out_44 <= grp_dense_1_fu_812_ap_return_44;
                dense_1_out_44_ret_reg_2767 <= grp_dense_1_fu_812_ap_return_44;
                dense_1_out_45 <= grp_dense_1_fu_812_ap_return_45;
                dense_1_out_45_ret_reg_2772 <= grp_dense_1_fu_812_ap_return_45;
                dense_1_out_46 <= grp_dense_1_fu_812_ap_return_46;
                dense_1_out_46_ret_reg_2777 <= grp_dense_1_fu_812_ap_return_46;
                dense_1_out_47 <= grp_dense_1_fu_812_ap_return_47;
                dense_1_out_47_ret_reg_2782 <= grp_dense_1_fu_812_ap_return_47;
                dense_1_out_48 <= grp_dense_1_fu_812_ap_return_48;
                dense_1_out_48_ret_reg_2787 <= grp_dense_1_fu_812_ap_return_48;
                dense_1_out_49 <= grp_dense_1_fu_812_ap_return_49;
                dense_1_out_49_ret_reg_2792 <= grp_dense_1_fu_812_ap_return_49;
                dense_1_out_4_ret_reg_2567 <= grp_dense_1_fu_812_ap_return_4;
                dense_1_out_5 <= grp_dense_1_fu_812_ap_return_5;
                dense_1_out_5_ret_reg_2572 <= grp_dense_1_fu_812_ap_return_5;
                dense_1_out_6 <= grp_dense_1_fu_812_ap_return_6;
                dense_1_out_6_ret_reg_2577 <= grp_dense_1_fu_812_ap_return_6;
                dense_1_out_7 <= grp_dense_1_fu_812_ap_return_7;
                dense_1_out_7_ret_reg_2582 <= grp_dense_1_fu_812_ap_return_7;
                dense_1_out_8 <= grp_dense_1_fu_812_ap_return_8;
                dense_1_out_8_ret_reg_2587 <= grp_dense_1_fu_812_ap_return_8;
                dense_1_out_9 <= grp_dense_1_fu_812_ap_return_9;
                dense_1_out_9_ret_reg_2592 <= grp_dense_1_fu_812_ap_return_9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_2259 <= i_fu_1272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln13_1_reg_2848 <= icmp_ln13_1_fu_2198_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln13_1_reg_2848_pp0_iter2_reg <= icmp_ln13_1_reg_2848;
                icmp_ln13_1_reg_2848_pp0_iter3_reg <= icmp_ln13_1_reg_2848_pp0_iter2_reg;
                icmp_ln9_reg_2797 <= icmp_ln9_fu_2100_p2;
                icmp_ln9_reg_2797_pp0_iter1_reg <= icmp_ln9_reg_2797;
                select_ln14_2_reg_2816_pp0_iter1_reg <= select_ln14_2_reg_2816;
                    zext_ln14_reg_2852_pp0_iter3_reg(4 downto 0) <= zext_ln14_reg_2852(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln13_reg_2806 <= icmp_ln13_fu_2118_p2;
                select_ln14_1_reg_2811 <= select_ln14_1_fu_2124_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln23_fu_1266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                ix_in_reg_2264 <= ix_in_fu_1278_p2;
                    sub_ln27_reg_2269(10 downto 2) <= sub_ln27_fu_1308_p2(10 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                j_1_reg_2837 <= j_1_fu_2185_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_2277 <= j_fu_1320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln14_2_reg_2816 <= select_ln14_2_fu_2132_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sum_reg_2857 <= grp_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_7_i_reg_2832 <= grp_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln13_1_reg_2848_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_i_reg_2873 <= grp_fu_1249_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln9_reg_2797_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln14_reg_2852(4 downto 0) <= zext_ln14_fu_2203_p1(4 downto 0);
            end if;
        end if;
    end process;
    sub_ln27_reg_2269(1 downto 0) <= "00";
    zext_ln14_reg_2852(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln14_reg_2852_pp0_iter3_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln23_fu_1266_p2, ap_CS_fsm_state3, icmp_ln25_fu_1314_p2, ap_CS_fsm_state15, grp_dense_1_fu_812_ap_done, icmp_ln9_fu_2100_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_subdone, grp_conv_2_fu_970_ap_done, grp_conv_1_fu_1098_ap_done, grp_dense_out_fu_1105_ap_done, grp_max_pool_2_fu_1117_ap_done, grp_max_pool_1_fu_1125_ap_done, grp_flat_fu_1143_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state29, ap_CS_fsm_state11, ap_CS_fsm_state7, ap_CS_fsm_state13, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln23_fu_1266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln25_fu_1314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_conv_1_fu_1098_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_max_pool_1_fu_1125_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_conv_2_fu_970_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_max_pool_2_fu_1117_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_flat_fu_1143_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_dense_1_fu_812_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln9_fu_2100_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln9_fu_2100_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (grp_dense_out_fu_1105_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln14_fu_2174_p2 <= std_logic_vector(unsigned(sub_ln14_fu_2168_p2) + unsigned(zext_ln13_fu_2140_p1));
    add_ln27_fu_1335_p2 <= std_logic_vector(unsigned(sub_ln27_reg_2269) + unsigned(zext_ln27_3_fu_1331_p1));
    add_ln28_fu_1340_p2 <= std_logic_vector(unsigned(ix_in_1_reg_640) + unsigned(ap_const_lv10_1));
    add_ln9_fu_2106_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_665_p4) + unsigned(ap_const_lv11_1));
    and_ln19_fu_2242_p2 <= (or_ln19_fu_2236_p2 and grp_fu_1260_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state28 <= ap_CS_fsm(18);
    ap_CS_fsm_state29 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1165_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_1165 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_2322_assign_proc : process(icmp_ln9_fu_2100_p2, select_ln14_1_fu_2124_p3)
    begin
                ap_condition_2322 <= ((((((((((((((((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3E)) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3F))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3D))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3C))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3B))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_3A))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_39))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_38))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_37))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_36))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_35))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_34))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_33))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_32))) or ((icmp_ln9_fu_2100_p2 = ap_const_lv1_0) and (select_ln14_1_fu_2124_p3 = ap_const_lv6_31)));
    end process;


    ap_condition_pp0_exit_iter0_state16_assign_proc : process(icmp_ln9_fu_2100_p2)
    begin
        if ((icmp_ln9_fu_2100_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state16 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_dense_out_fu_1105_ap_done, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (grp_dense_out_fu_1105_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_i_phi_fu_676_p4_assign_proc : process(i_0_i_reg_672, icmp_ln9_reg_2797, ap_CS_fsm_pp0_stage0, select_ln14_2_reg_2816, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_i_phi_fu_676_p4 <= select_ln14_2_reg_2816;
        else 
            ap_phi_mux_i_0_i_phi_fu_676_p4 <= i_0_i_reg_672;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_665_p4_assign_proc : process(indvar_flatten_reg_661, icmp_ln9_reg_2797, ap_CS_fsm_pp0_stage0, add_ln9_reg_2801, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_665_p4 <= add_ln9_reg_2801;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_665_p4 <= indvar_flatten_reg_661;
        end if; 
    end process;


    ap_phi_mux_j_0_i_phi_fu_699_p4_assign_proc : process(j_0_i_reg_695, icmp_ln9_reg_2797, ap_CS_fsm_pp0_stage0, j_1_reg_2837, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln9_reg_2797 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_j_0_i_phi_fu_699_p4 <= j_1_reg_2837;
        else 
            ap_phi_mux_j_0_i_phi_fu_699_p4 <= j_0_i_reg_695;
        end if; 
    end process;


    ap_phi_mux_sum_0_i_phi_fu_687_p4_assign_proc : process(sum_0_i_reg_683, ap_CS_fsm_pp0_stage0, icmp_ln9_reg_2797_pp0_iter1_reg, grp_fu_1249_p2, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0)
    begin
        if (((icmp_ln9_reg_2797_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_sum_0_i_phi_fu_687_p4 <= grp_fu_1249_p2;
        else 
            ap_phi_mux_sum_0_i_phi_fu_687_p4 <= sum_0_i_reg_683;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_dense_out_fu_1105_ap_done, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (grp_dense_out_fu_1105_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln19_fu_2207_p1 <= tmp_i_reg_2873;
    cnn_input_Addr_A <= std_logic_vector(shift_left(unsigned(cnn_input_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    cnn_input_Addr_A_orig <= zext_ln27_1_fu_1326_p1(32 - 1 downto 0);
    cnn_input_Clk_A <= ap_clk;
    cnn_input_Din_A <= ap_const_lv32_0;

    cnn_input_EN_A_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cnn_input_EN_A <= ap_const_logic_1;
        else 
            cnn_input_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    cnn_input_Rst_A <= ap_rst_n_inv;
    cnn_input_WEN_A <= ap_const_lv4_0;

    conv_1_input_address0_assign_proc : process(grp_conv_1_fu_1098_input_r_address0, ap_CS_fsm_state4, ap_CS_fsm_state5, sext_ln27_fu_1346_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_address0 <= sext_ln27_fu_1346_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_input_address0 <= grp_conv_1_fu_1098_input_r_address0;
        else 
            conv_1_input_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv_1_input_ce0_assign_proc : process(grp_conv_1_fu_1098_input_r_ce0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_input_ce0 <= grp_conv_1_fu_1098_input_r_ce0;
        else 
            conv_1_input_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_ce1_assign_proc : process(grp_conv_1_fu_1098_input_r_ce1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_input_ce1 <= grp_conv_1_fu_1098_input_r_ce1;
        else 
            conv_1_input_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_input_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            conv_1_input_we0 <= ap_const_logic_1;
        else 
            conv_1_input_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_address0_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_address0, grp_max_pool_1_fu_1125_conv_out_address0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_address0 <= grp_max_pool_1_fu_1125_conv_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_address0 <= grp_conv_1_fu_1098_conv_1_out_address0;
        else 
            conv_1_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_address1_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_address1, grp_max_pool_1_fu_1125_conv_out_address1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_address1 <= grp_max_pool_1_fu_1125_conv_out_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_address1 <= grp_conv_1_fu_1098_conv_1_out_address1;
        else 
            conv_1_out_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_1_out_ce0_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_ce0, grp_max_pool_1_fu_1125_conv_out_ce0, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_ce0 <= grp_max_pool_1_fu_1125_conv_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_ce0 <= grp_conv_1_fu_1098_conv_1_out_ce0;
        else 
            conv_1_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_ce1_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_ce1, grp_max_pool_1_fu_1125_conv_out_ce1, ap_CS_fsm_state5, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            conv_1_out_ce1 <= grp_max_pool_1_fu_1125_conv_out_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_ce1 <= grp_conv_1_fu_1098_conv_1_out_ce1;
        else 
            conv_1_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_we0_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_we0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_we0 <= grp_conv_1_fu_1098_conv_1_out_we0;
        else 
            conv_1_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_1_out_we1_assign_proc : process(grp_conv_1_fu_1098_conv_1_out_we1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv_1_out_we1 <= grp_conv_1_fu_1098_conv_1_out_we1;
        else 
            conv_1_out_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_address0_assign_proc : process(grp_conv_2_fu_970_conv_out_address0, grp_max_pool_2_fu_1117_conv_2_out_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_2_out_address0 <= grp_max_pool_2_fu_1117_conv_2_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_address0 <= grp_conv_2_fu_970_conv_out_address0;
        else 
            conv_2_out_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv_2_out_ce0_assign_proc : process(grp_conv_2_fu_970_conv_out_ce0, grp_max_pool_2_fu_1117_conv_2_out_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_2_out_ce0 <= grp_max_pool_2_fu_1117_conv_2_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_ce0 <= grp_conv_2_fu_970_conv_out_ce0;
        else 
            conv_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_ce1_assign_proc : process(grp_max_pool_2_fu_1117_conv_2_out_ce1, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_2_out_ce1 <= grp_max_pool_2_fu_1117_conv_2_out_ce1;
        else 
            conv_2_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_2_out_we0_assign_proc : process(grp_conv_2_fu_970_conv_out_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            conv_2_out_we0 <= grp_conv_2_fu_970_conv_out_we0;
        else 
            conv_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_bias_address0 <= zext_ln14_fu_2203_p1(5 - 1 downto 0);

    dense_2_bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_bias_ce0 <= ap_const_logic_1;
        else 
            dense_2_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, zext_ln14_reg_2852_pp0_iter3_reg, ap_enable_reg_pp0_iter3, grp_dense_out_fu_1105_dense_2_out_address0, ap_CS_fsm_state29, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            dense_2_out_address0 <= zext_ln14_reg_2852_pp0_iter3_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            dense_2_out_address0 <= grp_dense_out_fu_1105_dense_2_out_address0;
        else 
            dense_2_out_address0 <= "XXXXX";
        end if; 
    end process;


    dense_2_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter3, grp_dense_out_fu_1105_dense_2_out_ce0, ap_CS_fsm_state29)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            dense_2_out_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            dense_2_out_ce0 <= grp_dense_out_fu_1105_dense_2_out_ce0;
        else 
            dense_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_out_d0 <= 
        ap_const_lv32_0 when (and_ln19_fu_2242_p2(0) = '1') else 
        tmp_i_reg_2873;

    dense_2_out_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, icmp_ln13_1_reg_2848_pp0_iter3_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln13_1_reg_2848_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            dense_2_out_we0 <= ap_const_logic_1;
        else 
            dense_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_weights_address0 <= sext_ln14_fu_2180_p1(11 - 1 downto 0);

    dense_2_weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dense_2_weights_ce0 <= ap_const_logic_1;
        else 
            dense_2_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_0_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_0_address0, grp_flat_fu_1143_flat_array_0_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_0_address0 <= grp_flat_fu_1143_flat_array_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_0_address0 <= grp_dense_1_fu_812_flat_array_0_address0;
        else 
            flat_array_0_address0 <= "XXX";
        end if; 
    end process;


    flat_array_0_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_0_ce0, grp_flat_fu_1143_flat_array_0_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_0_ce0 <= grp_flat_fu_1143_flat_array_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_0_ce0 <= grp_dense_1_fu_812_flat_array_0_ce0;
        else 
            flat_array_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_0_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_0_ce1 <= grp_dense_1_fu_812_flat_array_0_ce1;
        else 
            flat_array_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_0_we0_assign_proc : process(grp_flat_fu_1143_flat_array_0_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_0_we0 <= grp_flat_fu_1143_flat_array_0_we0;
        else 
            flat_array_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_10_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_10_address0, grp_flat_fu_1143_flat_array_10_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_10_address0 <= grp_flat_fu_1143_flat_array_10_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_10_address0 <= grp_dense_1_fu_812_flat_array_10_address0;
        else 
            flat_array_10_address0 <= "XXX";
        end if; 
    end process;


    flat_array_10_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_10_ce0, grp_flat_fu_1143_flat_array_10_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_10_ce0 <= grp_flat_fu_1143_flat_array_10_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_10_ce0 <= grp_dense_1_fu_812_flat_array_10_ce0;
        else 
            flat_array_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_10_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_10_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_10_ce1 <= grp_dense_1_fu_812_flat_array_10_ce1;
        else 
            flat_array_10_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_10_we0_assign_proc : process(grp_flat_fu_1143_flat_array_10_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_10_we0 <= grp_flat_fu_1143_flat_array_10_we0;
        else 
            flat_array_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_11_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_11_address0, grp_flat_fu_1143_flat_array_11_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_11_address0 <= grp_flat_fu_1143_flat_array_11_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_11_address0 <= grp_dense_1_fu_812_flat_array_11_address0;
        else 
            flat_array_11_address0 <= "XXX";
        end if; 
    end process;


    flat_array_11_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_11_ce0, grp_flat_fu_1143_flat_array_11_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_11_ce0 <= grp_flat_fu_1143_flat_array_11_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_11_ce0 <= grp_dense_1_fu_812_flat_array_11_ce0;
        else 
            flat_array_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_11_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_11_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_11_ce1 <= grp_dense_1_fu_812_flat_array_11_ce1;
        else 
            flat_array_11_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_11_we0_assign_proc : process(grp_flat_fu_1143_flat_array_11_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_11_we0 <= grp_flat_fu_1143_flat_array_11_we0;
        else 
            flat_array_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_12_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_12_address0, grp_flat_fu_1143_flat_array_12_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_12_address0 <= grp_flat_fu_1143_flat_array_12_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_12_address0 <= grp_dense_1_fu_812_flat_array_12_address0;
        else 
            flat_array_12_address0 <= "XXX";
        end if; 
    end process;


    flat_array_12_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_12_ce0, grp_flat_fu_1143_flat_array_12_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_12_ce0 <= grp_flat_fu_1143_flat_array_12_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_12_ce0 <= grp_dense_1_fu_812_flat_array_12_ce0;
        else 
            flat_array_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_12_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_12_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_12_ce1 <= grp_dense_1_fu_812_flat_array_12_ce1;
        else 
            flat_array_12_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_12_we0_assign_proc : process(grp_flat_fu_1143_flat_array_12_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_12_we0 <= grp_flat_fu_1143_flat_array_12_we0;
        else 
            flat_array_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_13_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_13_address0, grp_flat_fu_1143_flat_array_13_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_13_address0 <= grp_flat_fu_1143_flat_array_13_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_13_address0 <= grp_dense_1_fu_812_flat_array_13_address0;
        else 
            flat_array_13_address0 <= "XXX";
        end if; 
    end process;


    flat_array_13_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_13_ce0, grp_flat_fu_1143_flat_array_13_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_13_ce0 <= grp_flat_fu_1143_flat_array_13_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_13_ce0 <= grp_dense_1_fu_812_flat_array_13_ce0;
        else 
            flat_array_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_13_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_13_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_13_ce1 <= grp_dense_1_fu_812_flat_array_13_ce1;
        else 
            flat_array_13_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_13_we0_assign_proc : process(grp_flat_fu_1143_flat_array_13_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_13_we0 <= grp_flat_fu_1143_flat_array_13_we0;
        else 
            flat_array_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_14_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_14_address0, grp_flat_fu_1143_flat_array_14_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_14_address0 <= grp_flat_fu_1143_flat_array_14_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_14_address0 <= grp_dense_1_fu_812_flat_array_14_address0;
        else 
            flat_array_14_address0 <= "XXX";
        end if; 
    end process;


    flat_array_14_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_14_ce0, grp_flat_fu_1143_flat_array_14_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_14_ce0 <= grp_flat_fu_1143_flat_array_14_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_14_ce0 <= grp_dense_1_fu_812_flat_array_14_ce0;
        else 
            flat_array_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_14_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_14_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_14_ce1 <= grp_dense_1_fu_812_flat_array_14_ce1;
        else 
            flat_array_14_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_14_we0_assign_proc : process(grp_flat_fu_1143_flat_array_14_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_14_we0 <= grp_flat_fu_1143_flat_array_14_we0;
        else 
            flat_array_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_15_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_15_address0, grp_flat_fu_1143_flat_array_15_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_15_address0 <= grp_flat_fu_1143_flat_array_15_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_15_address0 <= grp_dense_1_fu_812_flat_array_15_address0;
        else 
            flat_array_15_address0 <= "XXX";
        end if; 
    end process;


    flat_array_15_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_15_ce0, grp_flat_fu_1143_flat_array_15_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_15_ce0 <= grp_flat_fu_1143_flat_array_15_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_15_ce0 <= grp_dense_1_fu_812_flat_array_15_ce0;
        else 
            flat_array_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_15_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_15_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_15_ce1 <= grp_dense_1_fu_812_flat_array_15_ce1;
        else 
            flat_array_15_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_15_we0_assign_proc : process(grp_flat_fu_1143_flat_array_15_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_15_we0 <= grp_flat_fu_1143_flat_array_15_we0;
        else 
            flat_array_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_16_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_16_address0, grp_flat_fu_1143_flat_array_16_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_16_address0 <= grp_flat_fu_1143_flat_array_16_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_16_address0 <= grp_dense_1_fu_812_flat_array_16_address0;
        else 
            flat_array_16_address0 <= "XXX";
        end if; 
    end process;


    flat_array_16_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_16_ce0, grp_flat_fu_1143_flat_array_16_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_16_ce0 <= grp_flat_fu_1143_flat_array_16_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_16_ce0 <= grp_dense_1_fu_812_flat_array_16_ce0;
        else 
            flat_array_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_16_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_16_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_16_ce1 <= grp_dense_1_fu_812_flat_array_16_ce1;
        else 
            flat_array_16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_16_we0_assign_proc : process(grp_flat_fu_1143_flat_array_16_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_16_we0 <= grp_flat_fu_1143_flat_array_16_we0;
        else 
            flat_array_16_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_17_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_17_address0, grp_flat_fu_1143_flat_array_17_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_17_address0 <= grp_flat_fu_1143_flat_array_17_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_17_address0 <= grp_dense_1_fu_812_flat_array_17_address0;
        else 
            flat_array_17_address0 <= "XXX";
        end if; 
    end process;


    flat_array_17_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_17_ce0, grp_flat_fu_1143_flat_array_17_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_17_ce0 <= grp_flat_fu_1143_flat_array_17_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_17_ce0 <= grp_dense_1_fu_812_flat_array_17_ce0;
        else 
            flat_array_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_17_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_17_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_17_ce1 <= grp_dense_1_fu_812_flat_array_17_ce1;
        else 
            flat_array_17_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_17_we0_assign_proc : process(grp_flat_fu_1143_flat_array_17_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_17_we0 <= grp_flat_fu_1143_flat_array_17_we0;
        else 
            flat_array_17_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_18_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_18_address0, grp_flat_fu_1143_flat_array_18_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_18_address0 <= grp_flat_fu_1143_flat_array_18_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_18_address0 <= grp_dense_1_fu_812_flat_array_18_address0;
        else 
            flat_array_18_address0 <= "XXX";
        end if; 
    end process;


    flat_array_18_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_18_ce0, grp_flat_fu_1143_flat_array_18_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_18_ce0 <= grp_flat_fu_1143_flat_array_18_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_18_ce0 <= grp_dense_1_fu_812_flat_array_18_ce0;
        else 
            flat_array_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_18_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_18_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_18_ce1 <= grp_dense_1_fu_812_flat_array_18_ce1;
        else 
            flat_array_18_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_18_we0_assign_proc : process(grp_flat_fu_1143_flat_array_18_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_18_we0 <= grp_flat_fu_1143_flat_array_18_we0;
        else 
            flat_array_18_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_19_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_19_address0, grp_flat_fu_1143_flat_array_19_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_19_address0 <= grp_flat_fu_1143_flat_array_19_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_19_address0 <= grp_dense_1_fu_812_flat_array_19_address0;
        else 
            flat_array_19_address0 <= "XXX";
        end if; 
    end process;


    flat_array_19_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_19_ce0, grp_flat_fu_1143_flat_array_19_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_19_ce0 <= grp_flat_fu_1143_flat_array_19_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_19_ce0 <= grp_dense_1_fu_812_flat_array_19_ce0;
        else 
            flat_array_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_19_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_19_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_19_ce1 <= grp_dense_1_fu_812_flat_array_19_ce1;
        else 
            flat_array_19_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_19_we0_assign_proc : process(grp_flat_fu_1143_flat_array_19_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_19_we0 <= grp_flat_fu_1143_flat_array_19_we0;
        else 
            flat_array_19_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_1_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_1_address0, grp_flat_fu_1143_flat_array_1_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_1_address0 <= grp_flat_fu_1143_flat_array_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_1_address0 <= grp_dense_1_fu_812_flat_array_1_address0;
        else 
            flat_array_1_address0 <= "XXX";
        end if; 
    end process;


    flat_array_1_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_1_ce0, grp_flat_fu_1143_flat_array_1_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_1_ce0 <= grp_flat_fu_1143_flat_array_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_1_ce0 <= grp_dense_1_fu_812_flat_array_1_ce0;
        else 
            flat_array_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_1_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_1_ce1 <= grp_dense_1_fu_812_flat_array_1_ce1;
        else 
            flat_array_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_1_we0_assign_proc : process(grp_flat_fu_1143_flat_array_1_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_1_we0 <= grp_flat_fu_1143_flat_array_1_we0;
        else 
            flat_array_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_20_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_20_address0, grp_flat_fu_1143_flat_array_20_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_20_address0 <= grp_flat_fu_1143_flat_array_20_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_20_address0 <= grp_dense_1_fu_812_flat_array_20_address0;
        else 
            flat_array_20_address0 <= "XXX";
        end if; 
    end process;


    flat_array_20_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_20_ce0, grp_flat_fu_1143_flat_array_20_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_20_ce0 <= grp_flat_fu_1143_flat_array_20_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_20_ce0 <= grp_dense_1_fu_812_flat_array_20_ce0;
        else 
            flat_array_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_20_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_20_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_20_ce1 <= grp_dense_1_fu_812_flat_array_20_ce1;
        else 
            flat_array_20_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_20_we0_assign_proc : process(grp_flat_fu_1143_flat_array_20_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_20_we0 <= grp_flat_fu_1143_flat_array_20_we0;
        else 
            flat_array_20_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_21_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_21_address0, grp_flat_fu_1143_flat_array_21_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_21_address0 <= grp_flat_fu_1143_flat_array_21_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_21_address0 <= grp_dense_1_fu_812_flat_array_21_address0;
        else 
            flat_array_21_address0 <= "XXX";
        end if; 
    end process;


    flat_array_21_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_21_ce0, grp_flat_fu_1143_flat_array_21_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_21_ce0 <= grp_flat_fu_1143_flat_array_21_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_21_ce0 <= grp_dense_1_fu_812_flat_array_21_ce0;
        else 
            flat_array_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_21_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_21_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_21_ce1 <= grp_dense_1_fu_812_flat_array_21_ce1;
        else 
            flat_array_21_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_21_we0_assign_proc : process(grp_flat_fu_1143_flat_array_21_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_21_we0 <= grp_flat_fu_1143_flat_array_21_we0;
        else 
            flat_array_21_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_22_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_22_address0, grp_flat_fu_1143_flat_array_22_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_22_address0 <= grp_flat_fu_1143_flat_array_22_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_22_address0 <= grp_dense_1_fu_812_flat_array_22_address0;
        else 
            flat_array_22_address0 <= "XXX";
        end if; 
    end process;


    flat_array_22_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_22_ce0, grp_flat_fu_1143_flat_array_22_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_22_ce0 <= grp_flat_fu_1143_flat_array_22_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_22_ce0 <= grp_dense_1_fu_812_flat_array_22_ce0;
        else 
            flat_array_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_22_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_22_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_22_ce1 <= grp_dense_1_fu_812_flat_array_22_ce1;
        else 
            flat_array_22_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_22_we0_assign_proc : process(grp_flat_fu_1143_flat_array_22_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_22_we0 <= grp_flat_fu_1143_flat_array_22_we0;
        else 
            flat_array_22_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_23_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_23_address0, grp_flat_fu_1143_flat_array_23_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_23_address0 <= grp_flat_fu_1143_flat_array_23_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_23_address0 <= grp_dense_1_fu_812_flat_array_23_address0;
        else 
            flat_array_23_address0 <= "XXX";
        end if; 
    end process;


    flat_array_23_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_23_ce0, grp_flat_fu_1143_flat_array_23_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_23_ce0 <= grp_flat_fu_1143_flat_array_23_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_23_ce0 <= grp_dense_1_fu_812_flat_array_23_ce0;
        else 
            flat_array_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_23_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_23_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_23_ce1 <= grp_dense_1_fu_812_flat_array_23_ce1;
        else 
            flat_array_23_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_23_we0_assign_proc : process(grp_flat_fu_1143_flat_array_23_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_23_we0 <= grp_flat_fu_1143_flat_array_23_we0;
        else 
            flat_array_23_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_24_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_24_address0, grp_flat_fu_1143_flat_array_24_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_24_address0 <= grp_flat_fu_1143_flat_array_24_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_24_address0 <= grp_dense_1_fu_812_flat_array_24_address0;
        else 
            flat_array_24_address0 <= "XXX";
        end if; 
    end process;


    flat_array_24_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_24_ce0, grp_flat_fu_1143_flat_array_24_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_24_ce0 <= grp_flat_fu_1143_flat_array_24_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_24_ce0 <= grp_dense_1_fu_812_flat_array_24_ce0;
        else 
            flat_array_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_24_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_24_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_24_ce1 <= grp_dense_1_fu_812_flat_array_24_ce1;
        else 
            flat_array_24_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_24_we0_assign_proc : process(grp_flat_fu_1143_flat_array_24_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_24_we0 <= grp_flat_fu_1143_flat_array_24_we0;
        else 
            flat_array_24_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_25_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_25_address0, grp_flat_fu_1143_flat_array_25_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_25_address0 <= grp_flat_fu_1143_flat_array_25_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_25_address0 <= grp_dense_1_fu_812_flat_array_25_address0;
        else 
            flat_array_25_address0 <= "XXX";
        end if; 
    end process;


    flat_array_25_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_25_ce0, grp_flat_fu_1143_flat_array_25_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_25_ce0 <= grp_flat_fu_1143_flat_array_25_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_25_ce0 <= grp_dense_1_fu_812_flat_array_25_ce0;
        else 
            flat_array_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_25_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_25_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_25_ce1 <= grp_dense_1_fu_812_flat_array_25_ce1;
        else 
            flat_array_25_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_25_we0_assign_proc : process(grp_flat_fu_1143_flat_array_25_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_25_we0 <= grp_flat_fu_1143_flat_array_25_we0;
        else 
            flat_array_25_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_26_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_26_address0, grp_flat_fu_1143_flat_array_26_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_26_address0 <= grp_flat_fu_1143_flat_array_26_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_26_address0 <= grp_dense_1_fu_812_flat_array_26_address0;
        else 
            flat_array_26_address0 <= "XXX";
        end if; 
    end process;


    flat_array_26_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_26_ce0, grp_flat_fu_1143_flat_array_26_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_26_ce0 <= grp_flat_fu_1143_flat_array_26_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_26_ce0 <= grp_dense_1_fu_812_flat_array_26_ce0;
        else 
            flat_array_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_26_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_26_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_26_ce1 <= grp_dense_1_fu_812_flat_array_26_ce1;
        else 
            flat_array_26_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_26_we0_assign_proc : process(grp_flat_fu_1143_flat_array_26_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_26_we0 <= grp_flat_fu_1143_flat_array_26_we0;
        else 
            flat_array_26_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_27_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_27_address0, grp_flat_fu_1143_flat_array_27_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_27_address0 <= grp_flat_fu_1143_flat_array_27_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_27_address0 <= grp_dense_1_fu_812_flat_array_27_address0;
        else 
            flat_array_27_address0 <= "XXX";
        end if; 
    end process;


    flat_array_27_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_27_ce0, grp_flat_fu_1143_flat_array_27_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_27_ce0 <= grp_flat_fu_1143_flat_array_27_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_27_ce0 <= grp_dense_1_fu_812_flat_array_27_ce0;
        else 
            flat_array_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_27_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_27_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_27_ce1 <= grp_dense_1_fu_812_flat_array_27_ce1;
        else 
            flat_array_27_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_27_we0_assign_proc : process(grp_flat_fu_1143_flat_array_27_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_27_we0 <= grp_flat_fu_1143_flat_array_27_we0;
        else 
            flat_array_27_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_28_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_28_address0, grp_flat_fu_1143_flat_array_28_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_28_address0 <= grp_flat_fu_1143_flat_array_28_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_28_address0 <= grp_dense_1_fu_812_flat_array_28_address0;
        else 
            flat_array_28_address0 <= "XXX";
        end if; 
    end process;


    flat_array_28_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_28_ce0, grp_flat_fu_1143_flat_array_28_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_28_ce0 <= grp_flat_fu_1143_flat_array_28_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_28_ce0 <= grp_dense_1_fu_812_flat_array_28_ce0;
        else 
            flat_array_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_28_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_28_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_28_ce1 <= grp_dense_1_fu_812_flat_array_28_ce1;
        else 
            flat_array_28_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_28_we0_assign_proc : process(grp_flat_fu_1143_flat_array_28_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_28_we0 <= grp_flat_fu_1143_flat_array_28_we0;
        else 
            flat_array_28_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_29_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_29_address0, grp_flat_fu_1143_flat_array_29_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_29_address0 <= grp_flat_fu_1143_flat_array_29_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_29_address0 <= grp_dense_1_fu_812_flat_array_29_address0;
        else 
            flat_array_29_address0 <= "XXX";
        end if; 
    end process;


    flat_array_29_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_29_ce0, grp_flat_fu_1143_flat_array_29_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_29_ce0 <= grp_flat_fu_1143_flat_array_29_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_29_ce0 <= grp_dense_1_fu_812_flat_array_29_ce0;
        else 
            flat_array_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_29_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_29_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_29_ce1 <= grp_dense_1_fu_812_flat_array_29_ce1;
        else 
            flat_array_29_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_29_we0_assign_proc : process(grp_flat_fu_1143_flat_array_29_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_29_we0 <= grp_flat_fu_1143_flat_array_29_we0;
        else 
            flat_array_29_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_2_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_2_address0, grp_flat_fu_1143_flat_array_2_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_2_address0 <= grp_flat_fu_1143_flat_array_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_2_address0 <= grp_dense_1_fu_812_flat_array_2_address0;
        else 
            flat_array_2_address0 <= "XXX";
        end if; 
    end process;


    flat_array_2_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_2_ce0, grp_flat_fu_1143_flat_array_2_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_2_ce0 <= grp_flat_fu_1143_flat_array_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_2_ce0 <= grp_dense_1_fu_812_flat_array_2_ce0;
        else 
            flat_array_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_2_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_2_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_2_ce1 <= grp_dense_1_fu_812_flat_array_2_ce1;
        else 
            flat_array_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_2_we0_assign_proc : process(grp_flat_fu_1143_flat_array_2_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_2_we0 <= grp_flat_fu_1143_flat_array_2_we0;
        else 
            flat_array_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_30_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_30_address0, grp_flat_fu_1143_flat_array_30_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_30_address0 <= grp_flat_fu_1143_flat_array_30_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_30_address0 <= grp_dense_1_fu_812_flat_array_30_address0;
        else 
            flat_array_30_address0 <= "XXX";
        end if; 
    end process;


    flat_array_30_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_30_ce0, grp_flat_fu_1143_flat_array_30_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_30_ce0 <= grp_flat_fu_1143_flat_array_30_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_30_ce0 <= grp_dense_1_fu_812_flat_array_30_ce0;
        else 
            flat_array_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_30_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_30_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_30_ce1 <= grp_dense_1_fu_812_flat_array_30_ce1;
        else 
            flat_array_30_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_30_we0_assign_proc : process(grp_flat_fu_1143_flat_array_30_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_30_we0 <= grp_flat_fu_1143_flat_array_30_we0;
        else 
            flat_array_30_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_31_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_31_address0, grp_flat_fu_1143_flat_array_31_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_31_address0 <= grp_flat_fu_1143_flat_array_31_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_31_address0 <= grp_dense_1_fu_812_flat_array_31_address0;
        else 
            flat_array_31_address0 <= "XXX";
        end if; 
    end process;


    flat_array_31_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_31_ce0, grp_flat_fu_1143_flat_array_31_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_31_ce0 <= grp_flat_fu_1143_flat_array_31_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_31_ce0 <= grp_dense_1_fu_812_flat_array_31_ce0;
        else 
            flat_array_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_31_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_31_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_31_ce1 <= grp_dense_1_fu_812_flat_array_31_ce1;
        else 
            flat_array_31_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_31_we0_assign_proc : process(grp_flat_fu_1143_flat_array_31_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_31_we0 <= grp_flat_fu_1143_flat_array_31_we0;
        else 
            flat_array_31_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_32_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_32_address0, grp_flat_fu_1143_flat_array_32_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_32_address0 <= grp_flat_fu_1143_flat_array_32_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_32_address0 <= grp_dense_1_fu_812_flat_array_32_address0;
        else 
            flat_array_32_address0 <= "XXX";
        end if; 
    end process;


    flat_array_32_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_32_ce0, grp_flat_fu_1143_flat_array_32_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_32_ce0 <= grp_flat_fu_1143_flat_array_32_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_32_ce0 <= grp_dense_1_fu_812_flat_array_32_ce0;
        else 
            flat_array_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_32_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_32_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_32_ce1 <= grp_dense_1_fu_812_flat_array_32_ce1;
        else 
            flat_array_32_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_32_we0_assign_proc : process(grp_flat_fu_1143_flat_array_32_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_32_we0 <= grp_flat_fu_1143_flat_array_32_we0;
        else 
            flat_array_32_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_33_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_33_address0, grp_flat_fu_1143_flat_array_33_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_33_address0 <= grp_flat_fu_1143_flat_array_33_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_33_address0 <= grp_dense_1_fu_812_flat_array_33_address0;
        else 
            flat_array_33_address0 <= "XXX";
        end if; 
    end process;


    flat_array_33_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_33_ce0, grp_flat_fu_1143_flat_array_33_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_33_ce0 <= grp_flat_fu_1143_flat_array_33_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_33_ce0 <= grp_dense_1_fu_812_flat_array_33_ce0;
        else 
            flat_array_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_33_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_33_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_33_ce1 <= grp_dense_1_fu_812_flat_array_33_ce1;
        else 
            flat_array_33_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_33_we0_assign_proc : process(grp_flat_fu_1143_flat_array_33_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_33_we0 <= grp_flat_fu_1143_flat_array_33_we0;
        else 
            flat_array_33_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_34_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_34_address0, grp_flat_fu_1143_flat_array_34_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_34_address0 <= grp_flat_fu_1143_flat_array_34_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_34_address0 <= grp_dense_1_fu_812_flat_array_34_address0;
        else 
            flat_array_34_address0 <= "XXX";
        end if; 
    end process;


    flat_array_34_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_34_ce0, grp_flat_fu_1143_flat_array_34_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_34_ce0 <= grp_flat_fu_1143_flat_array_34_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_34_ce0 <= grp_dense_1_fu_812_flat_array_34_ce0;
        else 
            flat_array_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_34_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_34_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_34_ce1 <= grp_dense_1_fu_812_flat_array_34_ce1;
        else 
            flat_array_34_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_34_we0_assign_proc : process(grp_flat_fu_1143_flat_array_34_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_34_we0 <= grp_flat_fu_1143_flat_array_34_we0;
        else 
            flat_array_34_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_35_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_35_address0, grp_flat_fu_1143_flat_array_35_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_35_address0 <= grp_flat_fu_1143_flat_array_35_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_35_address0 <= grp_dense_1_fu_812_flat_array_35_address0;
        else 
            flat_array_35_address0 <= "XXX";
        end if; 
    end process;


    flat_array_35_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_35_ce0, grp_flat_fu_1143_flat_array_35_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_35_ce0 <= grp_flat_fu_1143_flat_array_35_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_35_ce0 <= grp_dense_1_fu_812_flat_array_35_ce0;
        else 
            flat_array_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_35_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_35_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_35_ce1 <= grp_dense_1_fu_812_flat_array_35_ce1;
        else 
            flat_array_35_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_35_we0_assign_proc : process(grp_flat_fu_1143_flat_array_35_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_35_we0 <= grp_flat_fu_1143_flat_array_35_we0;
        else 
            flat_array_35_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_36_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_36_address0, grp_flat_fu_1143_flat_array_36_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_36_address0 <= grp_flat_fu_1143_flat_array_36_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_36_address0 <= grp_dense_1_fu_812_flat_array_36_address0;
        else 
            flat_array_36_address0 <= "XXX";
        end if; 
    end process;


    flat_array_36_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_36_ce0, grp_flat_fu_1143_flat_array_36_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_36_ce0 <= grp_flat_fu_1143_flat_array_36_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_36_ce0 <= grp_dense_1_fu_812_flat_array_36_ce0;
        else 
            flat_array_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_36_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_36_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_36_ce1 <= grp_dense_1_fu_812_flat_array_36_ce1;
        else 
            flat_array_36_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_36_we0_assign_proc : process(grp_flat_fu_1143_flat_array_36_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_36_we0 <= grp_flat_fu_1143_flat_array_36_we0;
        else 
            flat_array_36_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_37_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_37_address0, grp_flat_fu_1143_flat_array_37_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_37_address0 <= grp_flat_fu_1143_flat_array_37_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_37_address0 <= grp_dense_1_fu_812_flat_array_37_address0;
        else 
            flat_array_37_address0 <= "XXX";
        end if; 
    end process;


    flat_array_37_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_37_ce0, grp_flat_fu_1143_flat_array_37_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_37_ce0 <= grp_flat_fu_1143_flat_array_37_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_37_ce0 <= grp_dense_1_fu_812_flat_array_37_ce0;
        else 
            flat_array_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_37_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_37_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_37_ce1 <= grp_dense_1_fu_812_flat_array_37_ce1;
        else 
            flat_array_37_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_37_we0_assign_proc : process(grp_flat_fu_1143_flat_array_37_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_37_we0 <= grp_flat_fu_1143_flat_array_37_we0;
        else 
            flat_array_37_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_38_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_38_address0, grp_flat_fu_1143_flat_array_38_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_38_address0 <= grp_flat_fu_1143_flat_array_38_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_38_address0 <= grp_dense_1_fu_812_flat_array_38_address0;
        else 
            flat_array_38_address0 <= "XXX";
        end if; 
    end process;


    flat_array_38_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_38_ce0, grp_flat_fu_1143_flat_array_38_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_38_ce0 <= grp_flat_fu_1143_flat_array_38_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_38_ce0 <= grp_dense_1_fu_812_flat_array_38_ce0;
        else 
            flat_array_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_38_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_38_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_38_ce1 <= grp_dense_1_fu_812_flat_array_38_ce1;
        else 
            flat_array_38_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_38_we0_assign_proc : process(grp_flat_fu_1143_flat_array_38_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_38_we0 <= grp_flat_fu_1143_flat_array_38_we0;
        else 
            flat_array_38_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_39_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_39_address0, grp_flat_fu_1143_flat_array_39_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_39_address0 <= grp_flat_fu_1143_flat_array_39_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_39_address0 <= grp_dense_1_fu_812_flat_array_39_address0;
        else 
            flat_array_39_address0 <= "XXX";
        end if; 
    end process;


    flat_array_39_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_39_ce0, grp_flat_fu_1143_flat_array_39_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_39_ce0 <= grp_flat_fu_1143_flat_array_39_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_39_ce0 <= grp_dense_1_fu_812_flat_array_39_ce0;
        else 
            flat_array_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_39_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_39_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_39_ce1 <= grp_dense_1_fu_812_flat_array_39_ce1;
        else 
            flat_array_39_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_39_we0_assign_proc : process(grp_flat_fu_1143_flat_array_39_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_39_we0 <= grp_flat_fu_1143_flat_array_39_we0;
        else 
            flat_array_39_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_3_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_3_address0, grp_flat_fu_1143_flat_array_3_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_3_address0 <= grp_flat_fu_1143_flat_array_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_3_address0 <= grp_dense_1_fu_812_flat_array_3_address0;
        else 
            flat_array_3_address0 <= "XXX";
        end if; 
    end process;


    flat_array_3_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_3_ce0, grp_flat_fu_1143_flat_array_3_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_3_ce0 <= grp_flat_fu_1143_flat_array_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_3_ce0 <= grp_dense_1_fu_812_flat_array_3_ce0;
        else 
            flat_array_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_3_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_3_ce1 <= grp_dense_1_fu_812_flat_array_3_ce1;
        else 
            flat_array_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_3_we0_assign_proc : process(grp_flat_fu_1143_flat_array_3_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_3_we0 <= grp_flat_fu_1143_flat_array_3_we0;
        else 
            flat_array_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_40_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_40_address0, grp_flat_fu_1143_flat_array_40_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_40_address0 <= grp_flat_fu_1143_flat_array_40_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_40_address0 <= grp_dense_1_fu_812_flat_array_40_address0;
        else 
            flat_array_40_address0 <= "XXX";
        end if; 
    end process;


    flat_array_40_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_40_ce0, grp_flat_fu_1143_flat_array_40_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_40_ce0 <= grp_flat_fu_1143_flat_array_40_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_40_ce0 <= grp_dense_1_fu_812_flat_array_40_ce0;
        else 
            flat_array_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_40_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_40_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_40_ce1 <= grp_dense_1_fu_812_flat_array_40_ce1;
        else 
            flat_array_40_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_40_we0_assign_proc : process(grp_flat_fu_1143_flat_array_40_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_40_we0 <= grp_flat_fu_1143_flat_array_40_we0;
        else 
            flat_array_40_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_41_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_41_address0, grp_flat_fu_1143_flat_array_41_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_41_address0 <= grp_flat_fu_1143_flat_array_41_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_41_address0 <= grp_dense_1_fu_812_flat_array_41_address0;
        else 
            flat_array_41_address0 <= "XXX";
        end if; 
    end process;


    flat_array_41_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_41_ce0, grp_flat_fu_1143_flat_array_41_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_41_ce0 <= grp_flat_fu_1143_flat_array_41_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_41_ce0 <= grp_dense_1_fu_812_flat_array_41_ce0;
        else 
            flat_array_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_41_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_41_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_41_ce1 <= grp_dense_1_fu_812_flat_array_41_ce1;
        else 
            flat_array_41_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_41_we0_assign_proc : process(grp_flat_fu_1143_flat_array_41_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_41_we0 <= grp_flat_fu_1143_flat_array_41_we0;
        else 
            flat_array_41_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_42_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_42_address0, grp_flat_fu_1143_flat_array_42_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_42_address0 <= grp_flat_fu_1143_flat_array_42_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_42_address0 <= grp_dense_1_fu_812_flat_array_42_address0;
        else 
            flat_array_42_address0 <= "XXX";
        end if; 
    end process;


    flat_array_42_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_42_ce0, grp_flat_fu_1143_flat_array_42_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_42_ce0 <= grp_flat_fu_1143_flat_array_42_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_42_ce0 <= grp_dense_1_fu_812_flat_array_42_ce0;
        else 
            flat_array_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_42_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_42_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_42_ce1 <= grp_dense_1_fu_812_flat_array_42_ce1;
        else 
            flat_array_42_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_42_we0_assign_proc : process(grp_flat_fu_1143_flat_array_42_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_42_we0 <= grp_flat_fu_1143_flat_array_42_we0;
        else 
            flat_array_42_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_43_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_43_address0, grp_flat_fu_1143_flat_array_43_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_43_address0 <= grp_flat_fu_1143_flat_array_43_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_43_address0 <= grp_dense_1_fu_812_flat_array_43_address0;
        else 
            flat_array_43_address0 <= "XXX";
        end if; 
    end process;


    flat_array_43_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_43_ce0, grp_flat_fu_1143_flat_array_43_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_43_ce0 <= grp_flat_fu_1143_flat_array_43_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_43_ce0 <= grp_dense_1_fu_812_flat_array_43_ce0;
        else 
            flat_array_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_43_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_43_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_43_ce1 <= grp_dense_1_fu_812_flat_array_43_ce1;
        else 
            flat_array_43_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_43_we0_assign_proc : process(grp_flat_fu_1143_flat_array_43_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_43_we0 <= grp_flat_fu_1143_flat_array_43_we0;
        else 
            flat_array_43_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_44_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_44_address0, grp_flat_fu_1143_flat_array_44_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_44_address0 <= grp_flat_fu_1143_flat_array_44_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_44_address0 <= grp_dense_1_fu_812_flat_array_44_address0;
        else 
            flat_array_44_address0 <= "XXX";
        end if; 
    end process;


    flat_array_44_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_44_ce0, grp_flat_fu_1143_flat_array_44_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_44_ce0 <= grp_flat_fu_1143_flat_array_44_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_44_ce0 <= grp_dense_1_fu_812_flat_array_44_ce0;
        else 
            flat_array_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_44_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_44_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_44_ce1 <= grp_dense_1_fu_812_flat_array_44_ce1;
        else 
            flat_array_44_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_44_we0_assign_proc : process(grp_flat_fu_1143_flat_array_44_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_44_we0 <= grp_flat_fu_1143_flat_array_44_we0;
        else 
            flat_array_44_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_45_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_45_address0, grp_flat_fu_1143_flat_array_45_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_45_address0 <= grp_flat_fu_1143_flat_array_45_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_45_address0 <= grp_dense_1_fu_812_flat_array_45_address0;
        else 
            flat_array_45_address0 <= "XXX";
        end if; 
    end process;


    flat_array_45_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_45_ce0, grp_flat_fu_1143_flat_array_45_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_45_ce0 <= grp_flat_fu_1143_flat_array_45_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_45_ce0 <= grp_dense_1_fu_812_flat_array_45_ce0;
        else 
            flat_array_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_45_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_45_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_45_ce1 <= grp_dense_1_fu_812_flat_array_45_ce1;
        else 
            flat_array_45_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_45_we0_assign_proc : process(grp_flat_fu_1143_flat_array_45_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_45_we0 <= grp_flat_fu_1143_flat_array_45_we0;
        else 
            flat_array_45_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_46_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_46_address0, grp_flat_fu_1143_flat_array_46_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_46_address0 <= grp_flat_fu_1143_flat_array_46_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_46_address0 <= grp_dense_1_fu_812_flat_array_46_address0;
        else 
            flat_array_46_address0 <= "XXX";
        end if; 
    end process;


    flat_array_46_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_46_ce0, grp_flat_fu_1143_flat_array_46_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_46_ce0 <= grp_flat_fu_1143_flat_array_46_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_46_ce0 <= grp_dense_1_fu_812_flat_array_46_ce0;
        else 
            flat_array_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_46_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_46_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_46_ce1 <= grp_dense_1_fu_812_flat_array_46_ce1;
        else 
            flat_array_46_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_46_we0_assign_proc : process(grp_flat_fu_1143_flat_array_46_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_46_we0 <= grp_flat_fu_1143_flat_array_46_we0;
        else 
            flat_array_46_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_47_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_47_address0, grp_flat_fu_1143_flat_array_47_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_47_address0 <= grp_flat_fu_1143_flat_array_47_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_47_address0 <= grp_dense_1_fu_812_flat_array_47_address0;
        else 
            flat_array_47_address0 <= "XXX";
        end if; 
    end process;


    flat_array_47_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_47_ce0, grp_flat_fu_1143_flat_array_47_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_47_ce0 <= grp_flat_fu_1143_flat_array_47_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_47_ce0 <= grp_dense_1_fu_812_flat_array_47_ce0;
        else 
            flat_array_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_47_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_47_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_47_ce1 <= grp_dense_1_fu_812_flat_array_47_ce1;
        else 
            flat_array_47_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_47_we0_assign_proc : process(grp_flat_fu_1143_flat_array_47_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_47_we0 <= grp_flat_fu_1143_flat_array_47_we0;
        else 
            flat_array_47_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_48_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_48_address0, grp_flat_fu_1143_flat_array_48_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_48_address0 <= grp_flat_fu_1143_flat_array_48_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_48_address0 <= grp_dense_1_fu_812_flat_array_48_address0;
        else 
            flat_array_48_address0 <= "XXX";
        end if; 
    end process;


    flat_array_48_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_48_ce0, grp_flat_fu_1143_flat_array_48_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_48_ce0 <= grp_flat_fu_1143_flat_array_48_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_48_ce0 <= grp_dense_1_fu_812_flat_array_48_ce0;
        else 
            flat_array_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_48_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_48_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_48_ce1 <= grp_dense_1_fu_812_flat_array_48_ce1;
        else 
            flat_array_48_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_48_we0_assign_proc : process(grp_flat_fu_1143_flat_array_48_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_48_we0 <= grp_flat_fu_1143_flat_array_48_we0;
        else 
            flat_array_48_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_49_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_49_address0, grp_flat_fu_1143_flat_array_49_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_49_address0 <= grp_flat_fu_1143_flat_array_49_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_49_address0 <= grp_dense_1_fu_812_flat_array_49_address0;
        else 
            flat_array_49_address0 <= "XXX";
        end if; 
    end process;


    flat_array_49_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_49_ce0, grp_flat_fu_1143_flat_array_49_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_49_ce0 <= grp_flat_fu_1143_flat_array_49_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_49_ce0 <= grp_dense_1_fu_812_flat_array_49_ce0;
        else 
            flat_array_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_49_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_49_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_49_ce1 <= grp_dense_1_fu_812_flat_array_49_ce1;
        else 
            flat_array_49_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_49_we0_assign_proc : process(grp_flat_fu_1143_flat_array_49_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_49_we0 <= grp_flat_fu_1143_flat_array_49_we0;
        else 
            flat_array_49_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_4_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_4_address0, grp_flat_fu_1143_flat_array_4_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_4_address0 <= grp_flat_fu_1143_flat_array_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_4_address0 <= grp_dense_1_fu_812_flat_array_4_address0;
        else 
            flat_array_4_address0 <= "XXX";
        end if; 
    end process;


    flat_array_4_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_4_ce0, grp_flat_fu_1143_flat_array_4_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_4_ce0 <= grp_flat_fu_1143_flat_array_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_4_ce0 <= grp_dense_1_fu_812_flat_array_4_ce0;
        else 
            flat_array_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_4_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_4_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_4_ce1 <= grp_dense_1_fu_812_flat_array_4_ce1;
        else 
            flat_array_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_4_we0_assign_proc : process(grp_flat_fu_1143_flat_array_4_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_4_we0 <= grp_flat_fu_1143_flat_array_4_we0;
        else 
            flat_array_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_5_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_5_address0, grp_flat_fu_1143_flat_array_5_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_5_address0 <= grp_flat_fu_1143_flat_array_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_5_address0 <= grp_dense_1_fu_812_flat_array_5_address0;
        else 
            flat_array_5_address0 <= "XXX";
        end if; 
    end process;


    flat_array_5_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_5_ce0, grp_flat_fu_1143_flat_array_5_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_5_ce0 <= grp_flat_fu_1143_flat_array_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_5_ce0 <= grp_dense_1_fu_812_flat_array_5_ce0;
        else 
            flat_array_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_5_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_5_ce1 <= grp_dense_1_fu_812_flat_array_5_ce1;
        else 
            flat_array_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_5_we0_assign_proc : process(grp_flat_fu_1143_flat_array_5_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_5_we0 <= grp_flat_fu_1143_flat_array_5_we0;
        else 
            flat_array_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_6_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_6_address0, grp_flat_fu_1143_flat_array_6_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_6_address0 <= grp_flat_fu_1143_flat_array_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_6_address0 <= grp_dense_1_fu_812_flat_array_6_address0;
        else 
            flat_array_6_address0 <= "XXX";
        end if; 
    end process;


    flat_array_6_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_6_ce0, grp_flat_fu_1143_flat_array_6_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_6_ce0 <= grp_flat_fu_1143_flat_array_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_6_ce0 <= grp_dense_1_fu_812_flat_array_6_ce0;
        else 
            flat_array_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_6_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_6_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_6_ce1 <= grp_dense_1_fu_812_flat_array_6_ce1;
        else 
            flat_array_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_6_we0_assign_proc : process(grp_flat_fu_1143_flat_array_6_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_6_we0 <= grp_flat_fu_1143_flat_array_6_we0;
        else 
            flat_array_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_7_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_7_address0, grp_flat_fu_1143_flat_array_7_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_7_address0 <= grp_flat_fu_1143_flat_array_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_7_address0 <= grp_dense_1_fu_812_flat_array_7_address0;
        else 
            flat_array_7_address0 <= "XXX";
        end if; 
    end process;


    flat_array_7_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_7_ce0, grp_flat_fu_1143_flat_array_7_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_7_ce0 <= grp_flat_fu_1143_flat_array_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_7_ce0 <= grp_dense_1_fu_812_flat_array_7_ce0;
        else 
            flat_array_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_7_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_7_ce1 <= grp_dense_1_fu_812_flat_array_7_ce1;
        else 
            flat_array_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_7_we0_assign_proc : process(grp_flat_fu_1143_flat_array_7_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_7_we0 <= grp_flat_fu_1143_flat_array_7_we0;
        else 
            flat_array_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_8_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_8_address0, grp_flat_fu_1143_flat_array_8_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_8_address0 <= grp_flat_fu_1143_flat_array_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_8_address0 <= grp_dense_1_fu_812_flat_array_8_address0;
        else 
            flat_array_8_address0 <= "XXX";
        end if; 
    end process;


    flat_array_8_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_8_ce0, grp_flat_fu_1143_flat_array_8_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_8_ce0 <= grp_flat_fu_1143_flat_array_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_8_ce0 <= grp_dense_1_fu_812_flat_array_8_ce0;
        else 
            flat_array_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_8_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_8_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_8_ce1 <= grp_dense_1_fu_812_flat_array_8_ce1;
        else 
            flat_array_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_8_we0_assign_proc : process(grp_flat_fu_1143_flat_array_8_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_8_we0 <= grp_flat_fu_1143_flat_array_8_we0;
        else 
            flat_array_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_9_address0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_9_address0, grp_flat_fu_1143_flat_array_9_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_9_address0 <= grp_flat_fu_1143_flat_array_9_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_9_address0 <= grp_dense_1_fu_812_flat_array_9_address0;
        else 
            flat_array_9_address0 <= "XXX";
        end if; 
    end process;


    flat_array_9_ce0_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_9_ce0, grp_flat_fu_1143_flat_array_9_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_9_ce0 <= grp_flat_fu_1143_flat_array_9_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_9_ce0 <= grp_dense_1_fu_812_flat_array_9_ce0;
        else 
            flat_array_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_9_ce1_assign_proc : process(ap_CS_fsm_state15, grp_dense_1_fu_812_flat_array_9_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            flat_array_9_ce1 <= grp_dense_1_fu_812_flat_array_9_ce1;
        else 
            flat_array_9_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_9_we0_assign_proc : process(grp_flat_fu_1143_flat_array_9_we0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            flat_array_9_we0 <= grp_flat_fu_1143_flat_array_9_we0;
        else 
            flat_array_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv_1_fu_1098_ap_start <= grp_conv_1_fu_1098_ap_start_reg;
    grp_conv_2_fu_970_ap_start <= grp_conv_2_fu_970_ap_start_reg;
    grp_dense_1_fu_812_ap_start <= grp_dense_1_fu_812_ap_start_reg;
    grp_dense_out_fu_1105_ap_start <= grp_dense_out_fu_1105_ap_start_reg;
    grp_flat_fu_1143_ap_start <= grp_flat_fu_1143_ap_start_reg;

    grp_fu_1249_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, select_ln14_fu_2190_p3, sum_reg_2857, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1249_p0 <= sum_reg_2857;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1249_p0 <= select_ln14_fu_2190_p3;
        else 
            grp_fu_1249_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1249_p1_assign_proc : process(dense_2_bias_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, tmp_7_i_reg_2832, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1249_p1 <= dense_2_bias_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1249_p1 <= tmp_7_i_reg_2832;
        else 
            grp_fu_1249_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_max_pool_1_fu_1125_ap_start <= grp_max_pool_1_fu_1125_ap_start_reg;
    grp_max_pool_2_fu_1117_ap_start <= grp_max_pool_2_fu_1117_ap_start_reg;
    i_1_fu_2112_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_i_phi_fu_676_p4) + unsigned(ap_const_lv5_1));
    i_fu_1272_p2 <= std_logic_vector(unsigned(i_0_reg_629) + unsigned(ap_const_lv5_1));
    icmp_ln13_1_fu_2198_p2 <= "1" when (j_1_reg_2837 = ap_const_lv6_32) else "0";
    icmp_ln13_fu_2118_p2 <= "1" when (ap_phi_mux_j_0_i_phi_fu_699_p4 = ap_const_lv6_32) else "0";
    icmp_ln19_2_fu_2230_p2 <= "1" when (trunc_ln19_fu_2220_p1 = ap_const_lv23_0) else "0";
    icmp_ln19_fu_2224_p2 <= "0" when (tmp_fu_2210_p4 = ap_const_lv8_FF) else "1";
    icmp_ln23_fu_1266_p2 <= "1" when (i_0_reg_629 = ap_const_lv5_1C) else "0";
    icmp_ln25_fu_1314_p2 <= "1" when (j_0_reg_650 = ap_const_lv5_1C) else "0";
    icmp_ln9_fu_2100_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_665_p4 = ap_const_lv11_5DC) else "0";
    ix_in_fu_1278_p2 <= std_logic_vector(unsigned(ix_in_0_reg_617) + unsigned(ap_const_lv10_1C));
    j_1_fu_2185_p2 <= std_logic_vector(unsigned(select_ln14_1_reg_2811) + unsigned(ap_const_lv6_1));
    j_fu_1320_p2 <= std_logic_vector(unsigned(j_0_reg_650) + unsigned(ap_const_lv5_1));

    max_pool_1_out_0_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_0_address0, grp_max_pool_1_fu_1125_max_pool_out_0_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_0_address0 <= grp_max_pool_1_fu_1125_max_pool_out_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_0_address0 <= grp_conv_2_fu_970_max_pool_1_out_0_address0;
        else 
            max_pool_1_out_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_0_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_0_ce0, grp_max_pool_1_fu_1125_max_pool_out_0_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_0_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_0_ce0 <= grp_conv_2_fu_970_max_pool_1_out_0_ce0;
        else 
            max_pool_1_out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_0_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_0_ce1 <= grp_conv_2_fu_970_max_pool_1_out_0_ce1;
        else 
            max_pool_1_out_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_0_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_0_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_0_we0 <= grp_max_pool_1_fu_1125_max_pool_out_0_we0;
        else 
            max_pool_1_out_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_1_address0, grp_max_pool_1_fu_1125_max_pool_out_1_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_1_address0 <= grp_max_pool_1_fu_1125_max_pool_out_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_1_address0 <= grp_conv_2_fu_970_max_pool_1_out_1_address0;
        else 
            max_pool_1_out_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_1_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_1_ce0, grp_max_pool_1_fu_1125_max_pool_out_1_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_1_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_1_ce0 <= grp_conv_2_fu_970_max_pool_1_out_1_ce0;
        else 
            max_pool_1_out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_1_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_1_ce1 <= grp_conv_2_fu_970_max_pool_1_out_1_ce1;
        else 
            max_pool_1_out_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_1_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_1_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_1_we0 <= grp_max_pool_1_fu_1125_max_pool_out_1_we0;
        else 
            max_pool_1_out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_2_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_2_address0, grp_max_pool_1_fu_1125_max_pool_out_2_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_2_address0 <= grp_max_pool_1_fu_1125_max_pool_out_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_2_address0 <= grp_conv_2_fu_970_max_pool_1_out_2_address0;
        else 
            max_pool_1_out_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_2_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_2_ce0, grp_max_pool_1_fu_1125_max_pool_out_2_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_2_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_2_ce0 <= grp_conv_2_fu_970_max_pool_1_out_2_ce0;
        else 
            max_pool_1_out_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_2_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_2_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_2_ce1 <= grp_conv_2_fu_970_max_pool_1_out_2_ce1;
        else 
            max_pool_1_out_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_2_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_2_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_2_we0 <= grp_max_pool_1_fu_1125_max_pool_out_2_we0;
        else 
            max_pool_1_out_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_3_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_3_address0, grp_max_pool_1_fu_1125_max_pool_out_3_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_3_address0 <= grp_max_pool_1_fu_1125_max_pool_out_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_3_address0 <= grp_conv_2_fu_970_max_pool_1_out_3_address0;
        else 
            max_pool_1_out_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_3_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_3_ce0, grp_max_pool_1_fu_1125_max_pool_out_3_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_3_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_3_ce0 <= grp_conv_2_fu_970_max_pool_1_out_3_ce0;
        else 
            max_pool_1_out_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_3_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_3_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_3_ce1 <= grp_conv_2_fu_970_max_pool_1_out_3_ce1;
        else 
            max_pool_1_out_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_3_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_3_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_3_we0 <= grp_max_pool_1_fu_1125_max_pool_out_3_we0;
        else 
            max_pool_1_out_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_4_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_4_address0, grp_max_pool_1_fu_1125_max_pool_out_4_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_4_address0 <= grp_max_pool_1_fu_1125_max_pool_out_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_4_address0 <= grp_conv_2_fu_970_max_pool_1_out_4_address0;
        else 
            max_pool_1_out_4_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_4_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_4_ce0, grp_max_pool_1_fu_1125_max_pool_out_4_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_4_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_4_ce0 <= grp_conv_2_fu_970_max_pool_1_out_4_ce0;
        else 
            max_pool_1_out_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_4_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_4_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_4_ce1 <= grp_conv_2_fu_970_max_pool_1_out_4_ce1;
        else 
            max_pool_1_out_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_4_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_4_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_4_we0 <= grp_max_pool_1_fu_1125_max_pool_out_4_we0;
        else 
            max_pool_1_out_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_5_address0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_5_address0, grp_max_pool_1_fu_1125_max_pool_out_5_address0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_5_address0 <= grp_max_pool_1_fu_1125_max_pool_out_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_5_address0 <= grp_conv_2_fu_970_max_pool_1_out_5_address0;
        else 
            max_pool_1_out_5_address0 <= "XXXXXXXX";
        end if; 
    end process;


    max_pool_1_out_5_ce0_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_5_ce0, grp_max_pool_1_fu_1125_max_pool_out_5_ce0, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_5_ce0 <= grp_max_pool_1_fu_1125_max_pool_out_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_5_ce0 <= grp_conv_2_fu_970_max_pool_1_out_5_ce0;
        else 
            max_pool_1_out_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_5_ce1_assign_proc : process(grp_conv_2_fu_970_max_pool_1_out_5_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            max_pool_1_out_5_ce1 <= grp_conv_2_fu_970_max_pool_1_out_5_ce1;
        else 
            max_pool_1_out_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_1_out_5_we0_assign_proc : process(grp_max_pool_1_fu_1125_max_pool_out_5_we0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            max_pool_1_out_5_we0 <= grp_max_pool_1_fu_1125_max_pool_out_5_we0;
        else 
            max_pool_1_out_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_address0_assign_proc : process(grp_max_pool_2_fu_1117_max_pool_2_out_address0, grp_flat_fu_1143_max_pool_out_address0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            max_pool_2_out_address0 <= grp_flat_fu_1143_max_pool_out_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_address0 <= grp_max_pool_2_fu_1117_max_pool_2_out_address0;
        else 
            max_pool_2_out_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_2_out_ce0_assign_proc : process(grp_max_pool_2_fu_1117_max_pool_2_out_ce0, grp_flat_fu_1143_max_pool_out_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            max_pool_2_out_ce0 <= grp_flat_fu_1143_max_pool_out_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_ce0 <= grp_max_pool_2_fu_1117_max_pool_2_out_ce0;
        else 
            max_pool_2_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_2_out_we0_assign_proc : process(grp_max_pool_2_fu_1117_max_pool_2_out_we0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            max_pool_2_out_we0 <= grp_max_pool_2_fu_1117_max_pool_2_out_we0;
        else 
            max_pool_2_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln19_fu_2236_p2 <= (icmp_ln19_fu_2224_p2 or icmp_ln19_2_fu_2230_p2);
    prediction_Addr_A <= grp_dense_out_fu_1105_prediction_Addr_A;
    prediction_Clk_A <= ap_clk;
    prediction_Din_A <= grp_dense_out_fu_1105_prediction_Din_A;
    prediction_EN_A <= grp_dense_out_fu_1105_prediction_EN_A;
    prediction_Rst_A <= ap_rst_n_inv;
    prediction_WEN_A <= grp_dense_out_fu_1105_prediction_WEN_A;
    select_ln14_1_fu_2124_p3 <= 
        ap_const_lv6_0 when (icmp_ln13_fu_2118_p2(0) = '1') else 
        ap_phi_mux_j_0_i_phi_fu_699_p4;
    select_ln14_2_fu_2132_p3 <= 
        i_1_fu_2112_p2 when (icmp_ln13_fu_2118_p2(0) = '1') else 
        ap_phi_mux_i_0_i_phi_fu_676_p4;
    select_ln14_fu_2190_p3 <= 
        ap_const_lv32_0 when (icmp_ln13_reg_2806(0) = '1') else 
        ap_phi_mux_sum_0_i_phi_fu_687_p4;
        sext_ln14_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln14_fu_2174_p2),64));

        sext_ln27_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln27_reg_2287),64));

    sub_ln14_fu_2168_p2 <= std_logic_vector(unsigned(zext_ln14_113_fu_2152_p1) - unsigned(zext_ln14_114_fu_2164_p1));
    sub_ln27_fu_1308_p2 <= std_logic_vector(unsigned(zext_ln27_fu_1292_p1) - unsigned(zext_ln27_2_fu_1304_p1));
    tmp_57_fu_1284_p3 <= (i_0_reg_629 & ap_const_lv5_0);
    tmp_58_fu_1296_p3 <= (i_0_reg_629 & ap_const_lv2_0);
    tmp_59_fu_2144_p3 <= (select_ln14_1_fu_2124_p3 & ap_const_lv5_0);
    tmp_60_fu_2156_p3 <= (select_ln14_1_fu_2124_p3 & ap_const_lv1_0);
    tmp_fu_2210_p4 <= bitcast_ln19_fu_2207_p1(30 downto 23);
    trunc_ln19_fu_2220_p1 <= bitcast_ln19_fu_2207_p1(23 - 1 downto 0);
    zext_ln13_fu_2140_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_2_fu_2132_p3),12));
    zext_ln14_113_fu_2152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_2144_p3),12));
    zext_ln14_114_fu_2164_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_2156_p3),12));
    zext_ln14_fu_2203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln14_2_reg_2816_pp0_iter1_reg),64));
    zext_ln27_1_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ix_in_1_reg_640),64));
    zext_ln27_2_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_1296_p3),11));
    zext_ln27_3_fu_1331_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_650),11));
    zext_ln27_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_1284_p3),11));
end behav;
