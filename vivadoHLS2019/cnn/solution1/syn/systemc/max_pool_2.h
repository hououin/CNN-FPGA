// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<11> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U21;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > f_fu_178_p2;
    sc_signal< sc_lv<7> > f_reg_503;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > zext_ln12_fu_184_p1;
    sc_signal< sc_lv<14> > zext_ln12_reg_508;
    sc_signal< sc_lv<1> > icmp_ln9_fu_172_p2;
    sc_signal< sc_lv<12> > zext_ln12_1_fu_188_p1;
    sc_signal< sc_lv<12> > zext_ln12_1_reg_513;
    sc_signal< sc_lv<3> > r_fu_198_p2;
    sc_signal< sc_lv<3> > r_reg_521;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln_fu_204_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_526;
    sc_signal< sc_lv<1> > icmp_ln12_fu_192_p2;
    sc_signal< sc_lv<6> > add_ln39_fu_228_p2;
    sc_signal< sc_lv<6> > add_ln39_reg_531;
    sc_signal< sc_lv<3> > c_fu_240_p2;
    sc_signal< sc_lv<3> > c_reg_539;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > shl_ln1_fu_246_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_544;
    sc_signal< sc_lv<1> > icmp_ln15_fu_234_p2;
    sc_signal< sc_lv<11> > max_pool_out_addr_reg_549;
    sc_signal< sc_lv<1> > trunc_ln19_fu_281_p1;
    sc_signal< sc_lv<1> > trunc_ln19_reg_554;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > mpr_fu_295_p2;
    sc_signal< sc_lv<2> > mpr_reg_562;
    sc_signal< sc_lv<8> > mul_ln32_fu_310_p2;
    sc_signal< sc_lv<8> > mul_ln32_reg_567;
    sc_signal< sc_lv<1> > icmp_ln19_fu_289_p2;
    sc_signal< sc_lv<1> > icmp_ln37_fu_316_p2;
    sc_signal< sc_lv<1> > icmp_ln37_reg_572;
    sc_signal< sc_lv<1> > trunc_ln22_fu_326_p1;
    sc_signal< sc_lv<1> > trunc_ln22_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > mpc_fu_336_p2;
    sc_signal< sc_lv<2> > mpc_reg_585;
    sc_signal< sc_lv<1> > icmp_ln22_fu_330_p2;
    sc_signal< sc_lv<1> > and_ln37_fu_380_p2;
    sc_signal< sc_lv<1> > and_ln37_reg_595;
    sc_signal< sc_lv<32> > select_ln24_fu_392_p3;
    sc_signal< sc_lv<32> > select_ln24_reg_599;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > max_reg_606;
    sc_signal< sc_lv<32> > max_2_fu_483_p3;
    sc_signal< sc_lv<32> > max_2_reg_613;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<7> > f_0_reg_107;
    sc_signal< sc_lv<3> > r_0_reg_118;
    sc_signal< sc_lv<3> > c_0_reg_129;
    sc_signal< sc_lv<2> > mpr_0_reg_140;
    sc_signal< sc_lv<2> > mpc_0_reg_151;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > zext_ln39_3_fu_276_p1;
    sc_signal< sc_lv<64> > zext_ln32_2_fu_369_p1;
    sc_signal< sc_lv<32> > max_1_fu_78;
    sc_signal< sc_lv<32> > grp_fu_162_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_216_p3;
    sc_signal< sc_lv<6> > zext_ln39_fu_212_p1;
    sc_signal< sc_lv<6> > zext_ln39_1_fu_224_p1;
    sc_signal< sc_lv<6> > zext_ln39_2_fu_254_p1;
    sc_signal< sc_lv<6> > add_ln39_1_fu_258_p2;
    sc_signal< sc_lv<12> > tmp_9_cast_fu_263_p3;
    sc_signal< sc_lv<12> > add_ln39_2_fu_271_p2;
    sc_signal< sc_lv<4> > zext_ln19_fu_285_p1;
    sc_signal< sc_lv<4> > i_fu_301_p2;
    sc_signal< sc_lv<4> > mul_ln32_fu_310_p0;
    sc_signal< sc_lv<4> > zext_ln22_fu_322_p1;
    sc_signal< sc_lv<4> > j_fu_342_p2;
    sc_signal< sc_lv<8> > zext_ln32_1_fu_347_p1;
    sc_signal< sc_lv<8> > add_ln32_fu_351_p2;
    sc_signal< sc_lv<14> > tmp_11_cast_fu_356_p3;
    sc_signal< sc_lv<14> > add_ln32_1_fu_364_p2;
    sc_signal< sc_lv<1> > icmp_ln37_1_fu_374_p2;
    sc_signal< sc_lv<1> > or_ln24_fu_388_p2;
    sc_signal< sc_lv<32> > bitcast_ln32_fu_401_p1;
    sc_signal< sc_lv<32> > bitcast_ln32_1_fu_418_p1;
    sc_signal< sc_lv<8> > tmp_fu_404_p4;
    sc_signal< sc_lv<23> > trunc_ln32_fu_414_p1;
    sc_signal< sc_lv<1> > icmp_ln32_1_fu_441_p2;
    sc_signal< sc_lv<1> > icmp_ln32_fu_435_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_421_p4;
    sc_signal< sc_lv<23> > trunc_ln32_1_fu_431_p1;
    sc_signal< sc_lv<1> > icmp_ln32_3_fu_459_p2;
    sc_signal< sc_lv<1> > icmp_ln32_2_fu_453_p2;
    sc_signal< sc_lv<1> > or_ln32_fu_447_p2;
    sc_signal< sc_lv<1> > or_ln32_1_fu_465_p2;
    sc_signal< sc_lv<1> > and_ln32_fu_471_p2;
    sc_signal< sc_lv<1> > grp_fu_162_p2;
    sc_signal< sc_lv<1> > and_ln32_1_fu_477_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<8> > mul_ln32_fu_310_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln32_1_fu_364_p2();
    void thread_add_ln32_fu_351_p2();
    void thread_add_ln39_1_fu_258_p2();
    void thread_add_ln39_2_fu_271_p2();
    void thread_add_ln39_fu_228_p2();
    void thread_and_ln32_1_fu_477_p2();
    void thread_and_ln32_fu_471_p2();
    void thread_and_ln37_fu_380_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln32_1_fu_418_p1();
    void thread_bitcast_ln32_fu_401_p1();
    void thread_c_fu_240_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_178_p2();
    void thread_grp_fu_162_p1();
    void thread_i_fu_301_p2();
    void thread_icmp_ln12_fu_192_p2();
    void thread_icmp_ln15_fu_234_p2();
    void thread_icmp_ln19_fu_289_p2();
    void thread_icmp_ln22_fu_330_p2();
    void thread_icmp_ln32_1_fu_441_p2();
    void thread_icmp_ln32_2_fu_453_p2();
    void thread_icmp_ln32_3_fu_459_p2();
    void thread_icmp_ln32_fu_435_p2();
    void thread_icmp_ln37_1_fu_374_p2();
    void thread_icmp_ln37_fu_316_p2();
    void thread_icmp_ln9_fu_172_p2();
    void thread_j_fu_342_p2();
    void thread_max_2_fu_483_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_336_p2();
    void thread_mpr_fu_295_p2();
    void thread_mul_ln32_fu_310_p0();
    void thread_mul_ln32_fu_310_p00();
    void thread_mul_ln32_fu_310_p2();
    void thread_or_ln24_fu_388_p2();
    void thread_or_ln32_1_fu_465_p2();
    void thread_or_ln32_fu_447_p2();
    void thread_r_fu_198_p2();
    void thread_select_ln24_fu_392_p3();
    void thread_shl_ln1_fu_246_p3();
    void thread_shl_ln_fu_204_p3();
    void thread_tmp_11_cast_fu_356_p3();
    void thread_tmp_5_fu_421_p4();
    void thread_tmp_7_fu_216_p3();
    void thread_tmp_9_cast_fu_263_p3();
    void thread_tmp_fu_404_p4();
    void thread_trunc_ln19_fu_281_p1();
    void thread_trunc_ln22_fu_326_p1();
    void thread_trunc_ln32_1_fu_431_p1();
    void thread_trunc_ln32_fu_414_p1();
    void thread_zext_ln12_1_fu_188_p1();
    void thread_zext_ln12_fu_184_p1();
    void thread_zext_ln19_fu_285_p1();
    void thread_zext_ln22_fu_322_p1();
    void thread_zext_ln32_1_fu_347_p1();
    void thread_zext_ln32_2_fu_369_p1();
    void thread_zext_ln39_1_fu_224_p1();
    void thread_zext_ln39_2_fu_254_p1();
    void thread_zext_ln39_3_fu_276_p1();
    void thread_zext_ln39_fu_212_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
