// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "dense_dense_weights.h"
#include "dense_dense_array.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > prediction_Addr_A;
    sc_out< sc_logic > prediction_EN_A;
    sc_out< sc_lv<4> > prediction_WEN_A;
    sc_out< sc_lv<32> > prediction_Din_A;
    sc_in< sc_lv<32> > prediction_Dout_A;
    sc_out< sc_lv<11> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    dense_dense_weights* dense_weights_U;
    dense_dense_array* dense_array_U;
    soft_max* grp_soft_max_fu_129;
    cnn_fadd_32ns_32ncud<1,5,32,32,32>* cnn_fadd_32ns_32ncud_U32;
    cnn_fmul_32ns_32ndEe<1,4,32,32,32>* cnn_fmul_32ns_32ndEe_U33;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<4> > d_fu_155_p2;
    sc_signal< sc_lv<4> > d_reg_264;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<15> > zext_ln43_fu_166_p1;
    sc_signal< sc_lv<15> > zext_ln43_reg_269;
    sc_signal< sc_lv<1> > icmp_ln29_fu_149_p2;
    sc_signal< sc_lv<4> > dense_array_addr_reg_274;
    sc_signal< sc_lv<11> > f_fu_176_p2;
    sc_signal< sc_lv<11> > f_reg_282;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln35_fu_182_p2;
    sc_signal< sc_lv<1> > icmp_ln35_reg_287;
    sc_signal< sc_lv<1> > icmp_ln33_fu_170_p2;
    sc_signal< sc_lv<1> > icmp_ln41_fu_233_p2;
    sc_signal< sc_lv<1> > icmp_ln41_reg_302;
    sc_signal< sc_lv<32> > dense_weights_load_reg_306;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > flat_array_load_reg_311;
    sc_signal< sc_lv<32> > grp_fu_140_p2;
    sc_signal< sc_lv<32> > tmp_reg_316;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_136_p2;
    sc_signal< sc_lv<32> > w_sum_reg_326;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > grp_soft_max_fu_129_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_129_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_129_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_129_ap_ready;
    sc_signal< sc_lv<4> > grp_soft_max_fu_129_dense_array_address0;
    sc_signal< sc_logic > grp_soft_max_fu_129_dense_array_ce0;
    sc_signal< sc_lv<32> > grp_soft_max_fu_129_prediction_Addr_A;
    sc_signal< sc_logic > grp_soft_max_fu_129_prediction_EN_A;
    sc_signal< sc_lv<4> > grp_soft_max_fu_129_prediction_WEN_A;
    sc_signal< sc_lv<32> > grp_soft_max_fu_129_prediction_Din_A;
    sc_signal< sc_lv<4> > d_0_reg_107;
    sc_signal< sc_lv<11> > f_0_reg_118;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > grp_soft_max_fu_129_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > zext_ln39_fu_161_p1;
    sc_signal< sc_lv<64> > zext_ln39_8_fu_228_p1;
    sc_signal< sc_lv<64> > zext_ln39_3_fu_188_p1;
    sc_signal< sc_lv<32> > w_sum_1_fu_62;
    sc_signal< sc_lv<32> > grp_fu_136_p0;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<14> > tmp_1_fu_193_p3;
    sc_signal< sc_lv<12> > tmp_2_fu_205_p3;
    sc_signal< sc_lv<15> > zext_ln39_7_fu_213_p1;
    sc_signal< sc_lv<15> > zext_ln39_6_fu_201_p1;
    sc_signal< sc_lv<15> > add_ln39_fu_217_p2;
    sc_signal< sc_lv<15> > add_ln39_4_fu_223_p2;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<11> ap_const_lv11_63F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln39_4_fu_223_p2();
    void thread_add_ln39_fu_217_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_155_p2();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_we0();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_176_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_136_p0();
    void thread_grp_soft_max_fu_129_ap_start();
    void thread_icmp_ln29_fu_149_p2();
    void thread_icmp_ln33_fu_170_p2();
    void thread_icmp_ln35_fu_182_p2();
    void thread_icmp_ln41_fu_233_p2();
    void thread_prediction_Addr_A();
    void thread_prediction_Din_A();
    void thread_prediction_EN_A();
    void thread_prediction_WEN_A();
    void thread_tmp_1_fu_193_p3();
    void thread_tmp_2_fu_205_p3();
    void thread_zext_ln39_3_fu_188_p1();
    void thread_zext_ln39_6_fu_201_p1();
    void thread_zext_ln39_7_fu_213_p1();
    void thread_zext_ln39_8_fu_228_p1();
    void thread_zext_ln39_fu_161_p1();
    void thread_zext_ln43_fu_166_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
