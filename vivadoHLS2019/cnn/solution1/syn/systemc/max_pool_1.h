// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<13> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U11;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > f_fu_192_p2;
    sc_signal< sc_lv<6> > f_reg_510;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<16> > zext_ln12_fu_198_p1;
    sc_signal< sc_lv<16> > zext_ln12_reg_515;
    sc_signal< sc_lv<1> > icmp_ln9_fu_186_p2;
    sc_signal< sc_lv<14> > zext_ln12_2_fu_202_p1;
    sc_signal< sc_lv<14> > zext_ln12_2_reg_520;
    sc_signal< sc_lv<8> > add_ln12_fu_206_p2;
    sc_signal< sc_lv<8> > add_ln12_reg_525;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_218_p2;
    sc_signal< sc_lv<4> > r_reg_533;
    sc_signal< sc_lv<5> > shl_ln_fu_224_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_538;
    sc_signal< sc_lv<1> > icmp_ln12_fu_212_p2;
    sc_signal< sc_lv<4> > c_fu_238_p2;
    sc_signal< sc_lv<4> > c_reg_546;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > shl_ln2_fu_244_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_551;
    sc_signal< sc_lv<1> > icmp_ln15_fu_232_p2;
    sc_signal< sc_lv<13> > max_pool_out_addr_reg_556;
    sc_signal< sc_lv<1> > trunc_ln19_fu_284_p1;
    sc_signal< sc_lv<1> > trunc_ln19_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > mpr_fu_298_p2;
    sc_signal< sc_lv<2> > mpr_reg_569;
    sc_signal< sc_lv<10> > mul_ln32_fu_313_p2;
    sc_signal< sc_lv<10> > mul_ln32_reg_574;
    sc_signal< sc_lv<1> > icmp_ln19_fu_292_p2;
    sc_signal< sc_lv<1> > icmp_ln37_fu_319_p2;
    sc_signal< sc_lv<1> > icmp_ln37_reg_579;
    sc_signal< sc_lv<1> > trunc_ln22_fu_329_p1;
    sc_signal< sc_lv<1> > trunc_ln22_reg_584;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > mpc_fu_339_p2;
    sc_signal< sc_lv<2> > mpc_reg_592;
    sc_signal< sc_lv<1> > icmp_ln22_fu_333_p2;
    sc_signal< sc_lv<1> > and_ln37_fu_387_p2;
    sc_signal< sc_lv<1> > and_ln37_reg_602;
    sc_signal< sc_lv<32> > select_ln24_fu_399_p3;
    sc_signal< sc_lv<32> > select_ln24_reg_606;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > max_reg_613;
    sc_signal< sc_lv<32> > max_4_fu_490_p3;
    sc_signal< sc_lv<32> > max_4_reg_620;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > f_0_reg_109;
    sc_signal< sc_lv<4> > r_0_reg_120;
    sc_signal< sc_lv<8> > phi_mul_reg_131;
    sc_signal< sc_lv<4> > c_0_reg_143;
    sc_signal< sc_lv<2> > mpr_0_reg_154;
    sc_signal< sc_lv<2> > mpc_0_reg_165;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<64> > zext_ln39_5_fu_279_p1;
    sc_signal< sc_lv<64> > zext_ln32_5_fu_376_p1;
    sc_signal< sc_lv<32> > max_3_fu_80;
    sc_signal< sc_lv<32> > grp_fu_176_p1;
    sc_signal< sc_lv<8> > zext_ln39_fu_252_p1;
    sc_signal< sc_lv<8> > add_ln39_fu_256_p2;
    sc_signal< sc_lv<13> > tmp_1_fu_262_p3;
    sc_signal< sc_lv<14> > zext_ln39_4_fu_270_p1;
    sc_signal< sc_lv<14> > add_ln39_3_fu_274_p2;
    sc_signal< sc_lv<5> > zext_ln19_fu_288_p1;
    sc_signal< sc_lv<5> > i_fu_304_p2;
    sc_signal< sc_lv<5> > mul_ln32_fu_313_p0;
    sc_signal< sc_lv<5> > zext_ln22_fu_325_p1;
    sc_signal< sc_lv<5> > j_fu_345_p2;
    sc_signal< sc_lv<10> > zext_ln32_3_fu_350_p1;
    sc_signal< sc_lv<10> > add_ln32_fu_354_p2;
    sc_signal< sc_lv<15> > tmp_2_fu_359_p3;
    sc_signal< sc_lv<16> > zext_ln32_4_fu_367_p1;
    sc_signal< sc_lv<16> > add_ln32_2_fu_371_p2;
    sc_signal< sc_lv<1> > icmp_ln37_2_fu_381_p2;
    sc_signal< sc_lv<1> > or_ln24_fu_395_p2;
    sc_signal< sc_lv<32> > bitcast_ln32_fu_408_p1;
    sc_signal< sc_lv<32> > bitcast_ln32_2_fu_425_p1;
    sc_signal< sc_lv<8> > tmp_fu_411_p4;
    sc_signal< sc_lv<23> > trunc_ln32_fu_421_p1;
    sc_signal< sc_lv<1> > icmp_ln32_4_fu_448_p2;
    sc_signal< sc_lv<1> > icmp_ln32_fu_442_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_428_p4;
    sc_signal< sc_lv<23> > trunc_ln32_2_fu_438_p1;
    sc_signal< sc_lv<1> > icmp_ln32_6_fu_466_p2;
    sc_signal< sc_lv<1> > icmp_ln32_5_fu_460_p2;
    sc_signal< sc_lv<1> > or_ln32_fu_454_p2;
    sc_signal< sc_lv<1> > or_ln32_2_fu_472_p2;
    sc_signal< sc_lv<1> > and_ln32_fu_478_p2;
    sc_signal< sc_lv<1> > grp_fu_176_p2;
    sc_signal< sc_lv<1> > and_ln32_2_fu_484_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln32_fu_313_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_206_p2();
    void thread_add_ln32_2_fu_371_p2();
    void thread_add_ln32_fu_354_p2();
    void thread_add_ln39_3_fu_274_p2();
    void thread_add_ln39_fu_256_p2();
    void thread_and_ln32_2_fu_484_p2();
    void thread_and_ln32_fu_478_p2();
    void thread_and_ln37_fu_387_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln32_2_fu_425_p1();
    void thread_bitcast_ln32_fu_408_p1();
    void thread_c_fu_238_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_192_p2();
    void thread_grp_fu_176_p1();
    void thread_i_fu_304_p2();
    void thread_icmp_ln12_fu_212_p2();
    void thread_icmp_ln15_fu_232_p2();
    void thread_icmp_ln19_fu_292_p2();
    void thread_icmp_ln22_fu_333_p2();
    void thread_icmp_ln32_4_fu_448_p2();
    void thread_icmp_ln32_5_fu_460_p2();
    void thread_icmp_ln32_6_fu_466_p2();
    void thread_icmp_ln32_fu_442_p2();
    void thread_icmp_ln37_2_fu_381_p2();
    void thread_icmp_ln37_fu_319_p2();
    void thread_icmp_ln9_fu_186_p2();
    void thread_j_fu_345_p2();
    void thread_max_4_fu_490_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_339_p2();
    void thread_mpr_fu_298_p2();
    void thread_mul_ln32_fu_313_p0();
    void thread_mul_ln32_fu_313_p00();
    void thread_mul_ln32_fu_313_p2();
    void thread_or_ln24_fu_395_p2();
    void thread_or_ln32_2_fu_472_p2();
    void thread_or_ln32_fu_454_p2();
    void thread_r_fu_218_p2();
    void thread_select_ln24_fu_399_p3();
    void thread_shl_ln2_fu_244_p3();
    void thread_shl_ln_fu_224_p3();
    void thread_tmp_1_fu_262_p3();
    void thread_tmp_2_fu_359_p3();
    void thread_tmp_9_fu_428_p4();
    void thread_tmp_fu_411_p4();
    void thread_trunc_ln19_fu_284_p1();
    void thread_trunc_ln22_fu_329_p1();
    void thread_trunc_ln32_2_fu_438_p1();
    void thread_trunc_ln32_fu_421_p1();
    void thread_zext_ln12_2_fu_202_p1();
    void thread_zext_ln12_fu_198_p1();
    void thread_zext_ln19_fu_288_p1();
    void thread_zext_ln22_fu_325_p1();
    void thread_zext_ln32_3_fu_350_p1();
    void thread_zext_ln32_4_fu_367_p1();
    void thread_zext_ln32_5_fu_376_p1();
    void thread_zext_ln39_4_fu_270_p1();
    void thread_zext_ln39_5_fu_279_p1();
    void thread_zext_ln39_fu_252_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
