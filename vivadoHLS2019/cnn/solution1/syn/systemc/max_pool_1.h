// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<13> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U11;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > f_fu_207_p2;
    sc_signal< sc_lv<6> > f_reg_475;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<16> > zext_ln12_fu_213_p1;
    sc_signal< sc_lv<16> > zext_ln12_reg_480;
    sc_signal< sc_lv<1> > icmp_ln9_fu_201_p2;
    sc_signal< sc_lv<14> > zext_ln12_2_fu_217_p1;
    sc_signal< sc_lv<14> > zext_ln12_2_reg_485;
    sc_signal< sc_lv<8> > add_ln12_fu_221_p2;
    sc_signal< sc_lv<8> > add_ln12_reg_490;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_233_p2;
    sc_signal< sc_lv<4> > r_reg_498;
    sc_signal< sc_lv<5> > shl_ln_fu_239_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_503;
    sc_signal< sc_lv<1> > icmp_ln12_fu_227_p2;
    sc_signal< sc_lv<4> > c_fu_253_p2;
    sc_signal< sc_lv<4> > c_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > shl_ln2_fu_259_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_516;
    sc_signal< sc_lv<1> > icmp_ln15_fu_247_p2;
    sc_signal< sc_lv<2> > mpr_fu_277_p2;
    sc_signal< sc_lv<2> > mpr_reg_524;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > mul_ln28_fu_292_p2;
    sc_signal< sc_lv<10> > mul_ln28_reg_529;
    sc_signal< sc_lv<1> > icmp_ln19_fu_271_p2;
    sc_signal< sc_lv<2> > mpc_fu_340_p2;
    sc_signal< sc_lv<2> > mpc_reg_537;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln22_fu_334_p2;
    sc_signal< sc_lv<32> > max_reg_547;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > max_3_fu_465_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > f_0_reg_102;
    sc_signal< sc_lv<4> > r_0_reg_113;
    sc_signal< sc_lv<8> > phi_mul_reg_124;
    sc_signal< sc_lv<4> > c_0_reg_136;
    sc_signal< sc_lv<32> > max_0_reg_148;
    sc_signal< sc_lv<2> > mpr_0_reg_161;
    sc_signal< sc_lv<32> > max_1_reg_172;
    sc_signal< sc_lv<2> > mpc_0_reg_184;
    sc_signal< sc_lv<64> > zext_ln35_5_fu_325_p1;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_377_p1;
    sc_signal< sc_lv<5> > zext_ln19_fu_267_p1;
    sc_signal< sc_lv<5> > i_fu_283_p2;
    sc_signal< sc_lv<5> > mul_ln28_fu_292_p0;
    sc_signal< sc_lv<8> > zext_ln35_fu_298_p1;
    sc_signal< sc_lv<8> > add_ln35_fu_302_p2;
    sc_signal< sc_lv<13> > tmp_1_fu_308_p3;
    sc_signal< sc_lv<14> > zext_ln35_4_fu_316_p1;
    sc_signal< sc_lv<14> > add_ln35_3_fu_320_p2;
    sc_signal< sc_lv<5> > zext_ln22_fu_330_p1;
    sc_signal< sc_lv<5> > j_fu_346_p2;
    sc_signal< sc_lv<10> > zext_ln28_3_fu_351_p1;
    sc_signal< sc_lv<10> > add_ln28_fu_355_p2;
    sc_signal< sc_lv<15> > tmp_2_fu_360_p3;
    sc_signal< sc_lv<16> > zext_ln28_4_fu_368_p1;
    sc_signal< sc_lv<16> > add_ln28_2_fu_372_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_382_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_399_p1;
    sc_signal< sc_lv<8> > tmp_fu_385_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_395_p1;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_423_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_417_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_403_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_413_p1;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_441_p2;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_435_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_429_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_447_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_453_p2;
    sc_signal< sc_lv<1> > grp_fu_195_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_459_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln28_fu_292_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_221_p2();
    void thread_add_ln28_2_fu_372_p2();
    void thread_add_ln28_fu_355_p2();
    void thread_add_ln35_3_fu_320_p2();
    void thread_add_ln35_fu_302_p2();
    void thread_and_ln28_2_fu_459_p2();
    void thread_and_ln28_fu_453_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_2_fu_399_p1();
    void thread_bitcast_ln28_fu_382_p1();
    void thread_c_fu_253_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_207_p2();
    void thread_i_fu_283_p2();
    void thread_icmp_ln12_fu_227_p2();
    void thread_icmp_ln15_fu_247_p2();
    void thread_icmp_ln19_fu_271_p2();
    void thread_icmp_ln22_fu_334_p2();
    void thread_icmp_ln28_4_fu_423_p2();
    void thread_icmp_ln28_5_fu_435_p2();
    void thread_icmp_ln28_6_fu_441_p2();
    void thread_icmp_ln28_fu_417_p2();
    void thread_icmp_ln9_fu_201_p2();
    void thread_j_fu_346_p2();
    void thread_max_3_fu_465_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_340_p2();
    void thread_mpr_fu_277_p2();
    void thread_mul_ln28_fu_292_p0();
    void thread_mul_ln28_fu_292_p00();
    void thread_mul_ln28_fu_292_p2();
    void thread_or_ln28_2_fu_447_p2();
    void thread_or_ln28_fu_429_p2();
    void thread_r_fu_233_p2();
    void thread_shl_ln2_fu_259_p3();
    void thread_shl_ln_fu_239_p3();
    void thread_tmp_1_fu_308_p3();
    void thread_tmp_2_fu_360_p3();
    void thread_tmp_9_fu_403_p4();
    void thread_tmp_fu_385_p4();
    void thread_trunc_ln28_2_fu_413_p1();
    void thread_trunc_ln28_fu_395_p1();
    void thread_zext_ln12_2_fu_217_p1();
    void thread_zext_ln12_fu_213_p1();
    void thread_zext_ln19_fu_267_p1();
    void thread_zext_ln22_fu_330_p1();
    void thread_zext_ln28_3_fu_351_p1();
    void thread_zext_ln28_4_fu_368_p1();
    void thread_zext_ln28_5_fu_377_p1();
    void thread_zext_ln35_4_fu_316_p1();
    void thread_zext_ln35_5_fu_325_p1();
    void thread_zext_ln35_fu_298_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
