

================================================================
== Vivado HLS Report for 'soft_max'
================================================================
* Date:           Wed Mar 13 20:39:48 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    17.393|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  252|  252|  252|  252|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                   |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Sum_Loop         |  100|  100|        10|          -|          -|    10|    no    |
        |- Prediction_Loop  |  150|  150|        15|          -|          -|    10|    no    |
        +-------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 12 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 12 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([10 x float]* %prediction, [5 x i8]* @p_str28, i32 0, i32 0, [1 x i8]* @p_str129, i32 0, i32 0, [1 x i8]* @p_str129, [1 x i8]* @p_str129, [1 x i8]* @p_str129, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str129, [1 x i8]* @p_str129) nounwind"   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.76ns)   --->   "br label %1" [cnn/dense_out.cpp:11]   --->   Operation 28 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 2.32>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%sum_0 = phi float [ 0.000000e+00, %0 ], [ %sum, %2 ]"   --->   Operation 29 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %2 ]"   --->   Operation 30 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.30ns)   --->   "%icmp_ln11 = icmp eq i4 %i_0, -6" [cnn/dense_out.cpp:11]   --->   Operation 31 'icmp' 'icmp_ln11' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [cnn/dense_out.cpp:11]   --->   Operation 33 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln11, label %.preheader.preheader, label %2" [cnn/dense_out.cpp:11]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i4 %i_0 to i64" [cnn/dense_out.cpp:13]   --->   Operation 35 'zext' 'zext_ln13' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%dense_array_addr = getelementptr [10 x float]* %dense_array, i64 0, i64 %zext_ln13" [cnn/dense_out.cpp:13]   --->   Operation 36 'getelementptr' 'dense_array_addr' <Predicate = (!icmp_ln11)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (2.32ns)   --->   "%dense_array_load = load float* %dense_array_addr, align 4" [cnn/dense_out.cpp:13]   --->   Operation 37 'load' 'dense_array_load' <Predicate = (!icmp_ln11)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 38 [1/1] (1.76ns)   --->   "br label %.preheader" [cnn/dense_out.cpp:17]   --->   Operation 38 'br' <Predicate = (icmp_ln11)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 17.3>
ST_3 : Operation 39 [1/2] (2.32ns)   --->   "%dense_array_load = load float* %dense_array_addr, align 4" [cnn/dense_out.cpp:13]   --->   Operation 39 'load' 'dense_array_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 40 [5/5] (15.0ns)   --->   "%tmp = call float @llvm.exp.f32(float %dense_array_load)" [cnn/dense_out.cpp:13]   --->   Operation 40 'fexp' 'tmp' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 4 <SV = 3> <Delay = 15.0>
ST_4 : Operation 41 [4/5] (15.0ns)   --->   "%tmp = call float @llvm.exp.f32(float %dense_array_load)" [cnn/dense_out.cpp:13]   --->   Operation 41 'fexp' 'tmp' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 5 <SV = 4> <Delay = 15.0>
ST_5 : Operation 42 [3/5] (15.0ns)   --->   "%tmp = call float @llvm.exp.f32(float %dense_array_load)" [cnn/dense_out.cpp:13]   --->   Operation 42 'fexp' 'tmp' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 15.0>
ST_6 : Operation 43 [2/5] (15.0ns)   --->   "%tmp = call float @llvm.exp.f32(float %dense_array_load)" [cnn/dense_out.cpp:13]   --->   Operation 43 'fexp' 'tmp' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 15.0>
ST_7 : Operation 44 [1/5] (15.0ns)   --->   "%tmp = call float @llvm.exp.f32(float %dense_array_load)" [cnn/dense_out.cpp:13]   --->   Operation 44 'fexp' 'tmp' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 8 <SV = 7> <Delay = 10.5>
ST_8 : Operation 45 [4/4] (10.5ns)   --->   "%sum = fadd float %sum_0, %tmp" [cnn/dense_out.cpp:13]   --->   Operation 45 'fadd' 'sum' <Predicate = true> <Delay = 10.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 10.5>
ST_9 : Operation 46 [3/4] (10.5ns)   --->   "%sum = fadd float %sum_0, %tmp" [cnn/dense_out.cpp:13]   --->   Operation 46 'fadd' 'sum' <Predicate = true> <Delay = 10.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 10.5>
ST_10 : Operation 47 [2/4] (10.5ns)   --->   "%sum = fadd float %sum_0, %tmp" [cnn/dense_out.cpp:13]   --->   Operation 47 'fadd' 'sum' <Predicate = true> <Delay = 10.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 10.5>
ST_11 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str13) nounwind" [cnn/dense_out.cpp:12]   --->   Operation 48 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 49 [1/4] (10.5ns)   --->   "%sum = fadd float %sum_0, %tmp" [cnn/dense_out.cpp:13]   --->   Operation 49 'fadd' 'sum' <Predicate = true> <Delay = 10.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 10.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 50 [1/1] (0.00ns)   --->   "br label %1" [cnn/dense_out.cpp:11]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 2> <Delay = 2.32>
ST_12 : Operation 51 [1/1] (0.00ns)   --->   "%j_0 = phi i4 [ %j, %3 ], [ 0, %.preheader.preheader ]"   --->   Operation 51 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 52 [1/1] (1.30ns)   --->   "%icmp_ln17 = icmp eq i4 %j_0, -6" [cnn/dense_out.cpp:17]   --->   Operation 52 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 53 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 53 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 54 [1/1] (1.73ns)   --->   "%j = add i4 %j_0, 1" [cnn/dense_out.cpp:17]   --->   Operation 54 'add' 'j' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 55 [1/1] (0.00ns)   --->   "br i1 %icmp_ln17, label %4, label %3" [cnn/dense_out.cpp:17]   --->   Operation 55 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i4 %j_0 to i64" [cnn/dense_out.cpp:19]   --->   Operation 56 'zext' 'zext_ln19' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_12 : Operation 57 [1/1] (0.00ns)   --->   "%dense_array_addr_1 = getelementptr [10 x float]* %dense_array, i64 0, i64 %zext_ln19" [cnn/dense_out.cpp:19]   --->   Operation 57 'getelementptr' 'dense_array_addr_1' <Predicate = (!icmp_ln17)> <Delay = 0.00>
ST_12 : Operation 58 [2/2] (2.32ns)   --->   "%dense_array_load_1 = load float* %dense_array_addr_1, align 4" [cnn/dense_out.cpp:19]   --->   Operation 58 'load' 'dense_array_load_1' <Predicate = (!icmp_ln17)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_12 : Operation 59 [1/1] (0.00ns)   --->   "ret void" [cnn/dense_out.cpp:22]   --->   Operation 59 'ret' <Predicate = (icmp_ln17)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 17.3>
ST_13 : Operation 60 [1/2] (2.32ns)   --->   "%dense_array_load_1 = load float* %dense_array_addr_1, align 4" [cnn/dense_out.cpp:19]   --->   Operation 60 'load' 'dense_array_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_13 : Operation 61 [5/5] (15.0ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %dense_array_load_1)" [cnn/dense_out.cpp:19]   --->   Operation 61 'fexp' 'tmp_2' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 4> <Delay = 15.0>
ST_14 : Operation 62 [4/5] (15.0ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %dense_array_load_1)" [cnn/dense_out.cpp:19]   --->   Operation 62 'fexp' 'tmp_2' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 15 <SV = 5> <Delay = 15.0>
ST_15 : Operation 63 [3/5] (15.0ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %dense_array_load_1)" [cnn/dense_out.cpp:19]   --->   Operation 63 'fexp' 'tmp_2' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 6> <Delay = 15.0>
ST_16 : Operation 64 [2/5] (15.0ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %dense_array_load_1)" [cnn/dense_out.cpp:19]   --->   Operation 64 'fexp' 'tmp_2' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 17 <SV = 7> <Delay = 15.0>
ST_17 : Operation 65 [1/5] (15.0ns)   --->   "%tmp_2 = call float @llvm.exp.f32(float %dense_array_load_1)" [cnn/dense_out.cpp:19]   --->   Operation 65 'fexp' 'tmp_2' <Predicate = true> <Delay = 15.0> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 4> <II = 1> <Delay = 15.0> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 18 <SV = 8> <Delay = 16.6>
ST_18 : Operation 66 [8/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 66 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 9> <Delay = 16.6>
ST_19 : Operation 67 [7/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 67 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 10> <Delay = 16.6>
ST_20 : Operation 68 [6/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 68 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 11> <Delay = 16.6>
ST_21 : Operation 69 [5/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 69 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 12> <Delay = 16.6>
ST_22 : Operation 70 [4/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 70 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 13> <Delay = 16.6>
ST_23 : Operation 71 [3/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 71 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 14> <Delay = 16.6>
ST_24 : Operation 72 [2/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 72 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 15> <Delay = 16.6>
ST_25 : Operation 73 [1/8] (16.6ns)   --->   "%tmp_3 = fdiv float %tmp_2, %sum_0" [cnn/dense_out.cpp:19]   --->   Operation 73 'fdiv' 'tmp_3' <Predicate = true> <Delay = 16.6> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 7> <II = 1> <Delay = 16.6> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 16> <Delay = 2.32>
ST_26 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @p_str114) nounwind" [cnn/dense_out.cpp:18]   --->   Operation 74 'specloopname' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 75 [1/1] (0.00ns)   --->   "%prediction_addr = getelementptr [10 x float]* %prediction, i64 0, i64 %zext_ln19" [cnn/dense_out.cpp:19]   --->   Operation 75 'getelementptr' 'prediction_addr' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 76 [1/1] (2.32ns)   --->   "store float %tmp_3, float* %prediction_addr, align 4" [cnn/dense_out.cpp:19]   --->   Operation 76 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_26 : Operation 77 [1/1] (0.00ns)   --->   "br label %.preheader" [cnn/dense_out.cpp:17]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sum') with incoming values : ('sum', cnn/dense_out.cpp:13) [6]  (1.77 ns)

 <State 2>: 2.32ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', cnn/dense_out.cpp:11) [7]  (0 ns)
	'getelementptr' operation ('dense_array_addr', cnn/dense_out.cpp:13) [15]  (0 ns)
	'load' operation ('dense_array_load', cnn/dense_out.cpp:13) on array 'dense_array' [16]  (2.32 ns)

 <State 3>: 17.4ns
The critical path consists of the following:
	'load' operation ('dense_array_load', cnn/dense_out.cpp:13) on array 'dense_array' [16]  (2.32 ns)
	'fexp' operation ('tmp', cnn/dense_out.cpp:13) [17]  (15.1 ns)

 <State 4>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', cnn/dense_out.cpp:13) [17]  (15.1 ns)

 <State 5>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', cnn/dense_out.cpp:13) [17]  (15.1 ns)

 <State 6>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', cnn/dense_out.cpp:13) [17]  (15.1 ns)

 <State 7>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp', cnn/dense_out.cpp:13) [17]  (15.1 ns)

 <State 8>: 10.5ns
The critical path consists of the following:
	'fadd' operation ('sum', cnn/dense_out.cpp:13) [18]  (10.5 ns)

 <State 9>: 10.5ns
The critical path consists of the following:
	'fadd' operation ('sum', cnn/dense_out.cpp:13) [18]  (10.5 ns)

 <State 10>: 10.5ns
The critical path consists of the following:
	'fadd' operation ('sum', cnn/dense_out.cpp:13) [18]  (10.5 ns)

 <State 11>: 10.5ns
The critical path consists of the following:
	'fadd' operation ('sum', cnn/dense_out.cpp:13) [18]  (10.5 ns)

 <State 12>: 2.32ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', cnn/dense_out.cpp:17) [23]  (0 ns)
	'getelementptr' operation ('dense_array_addr_1', cnn/dense_out.cpp:19) [31]  (0 ns)
	'load' operation ('dense_array_load_1', cnn/dense_out.cpp:19) on array 'dense_array' [32]  (2.32 ns)

 <State 13>: 17.4ns
The critical path consists of the following:
	'load' operation ('dense_array_load_1', cnn/dense_out.cpp:19) on array 'dense_array' [32]  (2.32 ns)
	'fexp' operation ('tmp_2', cnn/dense_out.cpp:19) [33]  (15.1 ns)

 <State 14>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', cnn/dense_out.cpp:19) [33]  (15.1 ns)

 <State 15>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', cnn/dense_out.cpp:19) [33]  (15.1 ns)

 <State 16>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', cnn/dense_out.cpp:19) [33]  (15.1 ns)

 <State 17>: 15.1ns
The critical path consists of the following:
	'fexp' operation ('tmp_2', cnn/dense_out.cpp:19) [33]  (15.1 ns)

 <State 18>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 19>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 20>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 21>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 22>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 23>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 24>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 25>: 16.6ns
The critical path consists of the following:
	'fdiv' operation ('tmp_3', cnn/dense_out.cpp:19) [34]  (16.6 ns)

 <State 26>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('prediction_addr', cnn/dense_out.cpp:19) [35]  (0 ns)
	'store' operation ('store_ln19', cnn/dense_out.cpp:19) of variable 'tmp_3', cnn/dense_out.cpp:19 on array 'prediction' [36]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
