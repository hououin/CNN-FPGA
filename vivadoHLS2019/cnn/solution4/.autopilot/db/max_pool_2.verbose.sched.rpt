

================================================================
== Vivado HLS Report for 'max_pool_2'
================================================================
* Date:           Fri Jan 26 21:45:14 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        cnn
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    23.438|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3202|  3202|  3202|  3202|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+
        |                                 |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop_Col_Loop  |  3200|  3200|         3|          2|          1|  1600|    yes   |
        +---------------------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (1.76ns)   --->   "br label %1" [cnn/max_pool_2.cpp:9]   --->   Operation 6 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 15.5>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten23 = phi i11 [ 0, %0 ], [ %add_ln9, %Col_Loop ]" [cnn/max_pool_2.cpp:9]   --->   Operation 7 'phi' 'indvar_flatten23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%f_0 = phi i7 [ 0, %0 ], [ %select_ln28_5, %Col_Loop ]" [cnn/max_pool_2.cpp:28]   --->   Operation 8 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 [ 0, %0 ], [ %select_ln12_4, %Col_Loop ]" [cnn/max_pool_2.cpp:12]   --->   Operation 9 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %select_ln12_1, %Col_Loop ]" [cnn/max_pool_2.cpp:12]   --->   Operation 10 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %c, %Col_Loop ]"   --->   Operation 11 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r_0, i1 false)" [cnn/max_pool_2.cpp:25]   --->   Operation 12 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%or_ln25 = or i4 %shl_ln, 1" [cnn/max_pool_2.cpp:25]   --->   Operation 13 'or' 'or_ln25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.88ns)   --->   "%icmp_ln9 = icmp eq i11 %indvar_flatten23, -448" [cnn/max_pool_2.cpp:9]   --->   Operation 14 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (1.63ns)   --->   "%add_ln9 = add i11 %indvar_flatten23, 1" [cnn/max_pool_2.cpp:9]   --->   Operation 15 'add' 'add_ln9' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %2, label %Col_Loop" [cnn/max_pool_2.cpp:9]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.87ns)   --->   "%f = add i7 1, %f_0" [cnn/max_pool_2.cpp:9]   --->   Operation 17 'add' 'f' <Predicate = (!icmp_ln9)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.42ns)   --->   "%icmp_ln12 = icmp eq i6 %indvar_flatten, 25" [cnn/max_pool_2.cpp:12]   --->   Operation 18 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln9)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.98ns)   --->   "%select_ln28_4 = select i1 %icmp_ln12, i3 0, i3 %r_0" [cnn/max_pool_2.cpp:28]   --->   Operation 19 'select' 'select_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.99ns)   --->   "%select_ln28_5 = select i1 %icmp_ln12, i7 %f, i7 %f_0" [cnn/max_pool_2.cpp:28]   --->   Operation 20 'select' 'select_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i7 %select_ln28_5 to i14" [cnn/max_pool_2.cpp:28]   --->   Operation 21 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_2)   --->   "%select_ln28_6 = select i1 %icmp_ln12, i4 0, i4 %shl_ln" [cnn/max_pool_2.cpp:28]   --->   Operation 22 'select' 'select_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_3)   --->   "%select_ln28_7 = select i1 %icmp_ln12, i4 1, i4 %or_ln25" [cnn/max_pool_2.cpp:28]   --->   Operation 23 'select' 'select_ln28_7' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%xor_ln28 = xor i1 %icmp_ln12, true" [cnn/max_pool_2.cpp:28]   --->   Operation 24 'xor' 'xor_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.13ns)   --->   "%icmp_ln15 = icmp eq i3 %c_0, -3" [cnn/max_pool_2.cpp:15]   --->   Operation 25 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln9)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_7 = and i1 %icmp_ln15, %xor_ln28" [cnn/max_pool_2.cpp:28]   --->   Operation 26 'and' 'and_ln28_7' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.65ns)   --->   "%r = add i3 1, %select_ln28_4" [cnn/max_pool_2.cpp:12]   --->   Operation 27 'add' 'r' <Predicate = (!icmp_ln9)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln12)   --->   "%or_ln12 = or i1 %and_ln28_7, %icmp_ln12" [cnn/max_pool_2.cpp:12]   --->   Operation 28 'or' 'or_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.98ns) (out node of the LUT)   --->   "%select_ln12 = select i1 %or_ln12, i3 0, i3 %c_0" [cnn/max_pool_2.cpp:12]   --->   Operation 29 'select' 'select_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%shl_ln25_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %r, i1 false)" [cnn/max_pool_2.cpp:25]   --->   Operation 30 'bitconcatenate' 'shl_ln25_mid1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.98ns)   --->   "%select_ln12_1 = select i1 %and_ln28_7, i3 %r, i3 %select_ln28_4" [cnn/max_pool_2.cpp:12]   --->   Operation 31 'select' 'select_ln12_1' <Predicate = (!icmp_ln9)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln12_2 = select i1 %and_ln28_7, i4 %shl_ln25_mid1, i4 %select_ln28_6" [cnn/max_pool_2.cpp:12]   --->   Operation 32 'select' 'select_ln12_2' <Predicate = (!icmp_ln9)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i4 %select_ln12_2 to i8" [cnn/max_pool_2.cpp:28]   --->   Operation 33 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (3.49ns)   --->   "%mul_ln28 = mul i8 11, %zext_ln28_2" [cnn/max_pool_2.cpp:28]   --->   Operation 34 'mul' 'mul_ln28' <Predicate = (!icmp_ln9)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_3)   --->   "%or_ln25_1 = or i4 %shl_ln25_mid1, 1" [cnn/max_pool_2.cpp:25]   --->   Operation 35 'or' 'or_ln25_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln12_3 = select i1 %and_ln28_7, i4 %or_ln25_1, i4 %select_ln28_7" [cnn/max_pool_2.cpp:12]   --->   Operation 36 'select' 'select_ln12_3' <Predicate = (!icmp_ln9)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%shl_ln1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %select_ln12, i1 false)" [cnn/max_pool_2.cpp:26]   --->   Operation 37 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i4 %shl_ln1 to i8" [cnn/max_pool_2.cpp:28]   --->   Operation 38 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.91ns)   --->   "%add_ln28 = add i8 %mul_ln28, %zext_ln28_4" [cnn/max_pool_2.cpp:28]   --->   Operation 39 'add' 'add_ln28' <Predicate = (!icmp_ln9)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_14_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln28, i6 0)" [cnn/max_pool_2.cpp:28]   --->   Operation 40 'bitconcatenate' 'tmp_14_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.81ns)   --->   "%add_ln28_1 = add i14 %tmp_14_cast, %zext_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 41 'add' 'add_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i14 %add_ln28_1 to i64" [cnn/max_pool_2.cpp:28]   --->   Operation 42 'zext' 'zext_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%conv_2_out_addr = getelementptr [7744 x float]* @conv_2_out, i64 0, i64 %zext_ln28_5" [cnn/max_pool_2.cpp:28]   --->   Operation 43 'getelementptr' 'conv_2_out_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (3.25ns)   --->   "%conv_2_out_load = load float* %conv_2_out_addr, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 44 'load' 'conv_2_out_load' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%or_ln26 = or i4 %shl_ln1, 1" [cnn/max_pool_2.cpp:26]   --->   Operation 45 'or' 'or_ln26' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln28_7 = zext i4 %or_ln26 to i8" [cnn/max_pool_2.cpp:28]   --->   Operation 46 'zext' 'zext_ln28_7' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.91ns)   --->   "%add_ln28_4 = add i8 %mul_ln28, %zext_ln28_7" [cnn/max_pool_2.cpp:28]   --->   Operation 47 'add' 'add_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_18_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln28_4, i6 0)" [cnn/max_pool_2.cpp:28]   --->   Operation 48 'bitconcatenate' 'tmp_18_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.81ns)   --->   "%add_ln28_5 = add i14 %tmp_18_cast, %zext_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 49 'add' 'add_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln28_8 = zext i14 %add_ln28_5 to i64" [cnn/max_pool_2.cpp:28]   --->   Operation 50 'zext' 'zext_ln28_8' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%conv_2_out_addr_1 = getelementptr [7744 x float]* @conv_2_out, i64 0, i64 %zext_ln28_8" [cnn/max_pool_2.cpp:28]   --->   Operation 51 'getelementptr' 'conv_2_out_addr_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 52 [2/2] (3.25ns)   --->   "%conv_2_out_load_1 = load float* %conv_2_out_addr_1, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 52 'load' 'conv_2_out_load_1' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_2 : Operation 53 [1/1] (1.82ns)   --->   "%add_ln12 = add i6 1, %indvar_flatten" [cnn/max_pool_2.cpp:12]   --->   Operation 53 'add' 'add_ln12' <Predicate = (!icmp_ln9)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.18ns)   --->   "%select_ln12_4 = select i1 %icmp_ln12, i6 1, i6 %add_ln12" [cnn/max_pool_2.cpp:12]   --->   Operation 54 'select' 'select_ln12_4' <Predicate = (!icmp_ln9)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 19.4>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i4 %select_ln12_3 to i8" [cnn/max_pool_2.cpp:28]   --->   Operation 55 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (3.49ns)   --->   "%mul_ln28_1 = mul i8 11, %zext_ln28_3" [cnn/max_pool_2.cpp:28]   --->   Operation 56 'mul' 'mul_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 3.49> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.49> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [1/1] (1.91ns)   --->   "%add_ln28_2 = add i8 %mul_ln28_1, %zext_ln28_4" [cnn/max_pool_2.cpp:28]   --->   Operation 57 'add' 'add_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_16_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln28_2, i6 0)" [cnn/max_pool_2.cpp:28]   --->   Operation 58 'bitconcatenate' 'tmp_16_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (1.81ns)   --->   "%add_ln28_3 = add i14 %tmp_16_cast, %zext_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 59 'add' 'add_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln28_6 = zext i14 %add_ln28_3 to i64" [cnn/max_pool_2.cpp:28]   --->   Operation 60 'zext' 'zext_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%conv_2_out_addr_2 = getelementptr [7744 x float]* @conv_2_out, i64 0, i64 %zext_ln28_6" [cnn/max_pool_2.cpp:28]   --->   Operation 61 'getelementptr' 'conv_2_out_addr_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 62 [1/2] (3.25ns)   --->   "%conv_2_out_load = load float* %conv_2_out_addr, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 62 'load' 'conv_2_out_load' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %conv_2_out_load to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 63 'bitcast' 'bitcast_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 64 'partselect' 'tmp_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 65 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.55ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_1, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 66 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (2.44ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 67 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [cnn/max_pool_2.cpp:28]   --->   Operation 68 'or' 'or_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (6.78ns)   --->   "%tmp_2 = fcmp ogt float %conv_2_out_load, 0x3810000000000000" [cnn/max_pool_2.cpp:28]   --->   Operation 69 'fcmp' 'tmp_2' <Predicate = (!icmp_ln9)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%and_ln28 = and i1 %or_ln28, %tmp_2" [cnn/max_pool_2.cpp:28]   --->   Operation 70 'and' 'and_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28, float %conv_2_out_load, float 0x3810000000000000" [cnn/max_pool_2.cpp:28]   --->   Operation 71 'select' 'select_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (1.91ns)   --->   "%add_ln28_6 = add i8 %mul_ln28_1, %zext_ln28_7" [cnn/max_pool_2.cpp:28]   --->   Operation 72 'add' 'add_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_20_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln28_6, i6 0)" [cnn/max_pool_2.cpp:28]   --->   Operation 73 'bitconcatenate' 'tmp_20_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (1.81ns)   --->   "%add_ln28_7 = add i14 %tmp_20_cast, %zext_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 74 'add' 'add_ln28_7' <Predicate = (!icmp_ln9)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln28_9 = zext i14 %add_ln28_7 to i64" [cnn/max_pool_2.cpp:28]   --->   Operation 75 'zext' 'zext_ln28_9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%conv_2_out_addr_3 = getelementptr [7744 x float]* @conv_2_out, i64 0, i64 %zext_ln28_9" [cnn/max_pool_2.cpp:28]   --->   Operation 76 'getelementptr' 'conv_2_out_addr_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 77 [1/2] (3.25ns)   --->   "%conv_2_out_load_1 = load float* %conv_2_out_addr_1, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 77 'load' 'conv_2_out_load_1' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %conv_2_out_load_1 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 78 'bitcast' 'bitcast_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 79 'partselect' 'tmp_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 80 'trunc' 'trunc_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %select_ln28 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 81 'bitcast' 'bitcast_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 82 'partselect' 'tmp_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_2 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 83 'trunc' 'trunc_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (1.55ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_3, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 84 'icmp' 'icmp_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (2.44ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 85 'icmp' 'icmp_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [cnn/max_pool_2.cpp:28]   --->   Operation 86 'or' 'or_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (1.55ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_4, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 87 'icmp' 'icmp_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (2.44ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 88 'icmp' 'icmp_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [cnn/max_pool_2.cpp:28]   --->   Operation 89 'or' 'or_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%and_ln28_1 = and i1 %or_ln28_1, %or_ln28_2" [cnn/max_pool_2.cpp:28]   --->   Operation 90 'and' 'and_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (6.78ns)   --->   "%tmp_7 = fcmp ogt float %conv_2_out_load_1, %select_ln28" [cnn/max_pool_2.cpp:28]   --->   Operation 91 'fcmp' 'tmp_7' <Predicate = (!icmp_ln9)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_2 = and i1 %and_ln28_1, %tmp_7" [cnn/max_pool_2.cpp:28]   --->   Operation 92 'and' 'and_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_2, float %conv_2_out_load_1, float %select_ln28" [cnn/max_pool_2.cpp:28]   --->   Operation 93 'select' 'select_ln28_1' <Predicate = (!icmp_ln9)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 94 [2/2] (3.25ns)   --->   "%conv_2_out_load_2 = load float* %conv_2_out_addr_2, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 94 'load' 'conv_2_out_load_2' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_3 : Operation 95 [2/2] (3.25ns)   --->   "%conv_2_out_load_3 = load float* %conv_2_out_addr_3, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 95 'load' 'conv_2_out_load_3' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_3 : Operation 96 [1/1] (1.65ns)   --->   "%c = add i3 1, %select_ln12" [cnn/max_pool_2.cpp:15]   --->   Operation 96 'add' 'c' <Predicate = (!icmp_ln9)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 23.4>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 97 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1600, i64 1600, i64 1600)"   --->   Operation 98 'speclooptripcount' 'empty' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i7 %select_ln28_5 to i12" [cnn/max_pool_2.cpp:28]   --->   Operation 99 'zext' 'zext_ln28' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Row_Loop_Col_Loop_st)"   --->   Operation 100 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i3 %select_ln12_1 to i6" [cnn/max_pool_2.cpp:35]   --->   Operation 101 'zext' 'zext_ln35' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln12_1, i2 0)" [cnn/max_pool_2.cpp:35]   --->   Operation 102 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i5 %tmp to i6" [cnn/max_pool_2.cpp:35]   --->   Operation 103 'zext' 'zext_ln35_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35 = add i6 %zext_ln35, %zext_ln35_2" [cnn/max_pool_2.cpp:35]   --->   Operation 104 'add' 'add_ln35' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str2) nounwind" [cnn/max_pool_2.cpp:16]   --->   Operation 105 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2)" [cnn/max_pool_2.cpp:16]   --->   Operation 106 'specregionbegin' 'tmp_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind" [cnn/max_pool_2.cpp:17]   --->   Operation 107 'specpipeline' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 108 [1/2] (3.25ns)   --->   "%conv_2_out_load_2 = load float* %conv_2_out_addr_2, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 108 'load' 'conv_2_out_load_2' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %conv_2_out_load_2 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 109 'bitcast' 'bitcast_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 110 'partselect' 'tmp_8' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_3 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 111 'trunc' 'trunc_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %select_ln28_1 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 112 'bitcast' 'bitcast_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 113 'partselect' 'tmp_9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_4 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 114 'trunc' 'trunc_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (1.55ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_8, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 115 'icmp' 'icmp_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 116 [1/1] (2.44ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 116 'icmp' 'icmp_ln28_7' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [cnn/max_pool_2.cpp:28]   --->   Operation 117 'or' 'or_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (1.55ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_9, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 118 'icmp' 'icmp_ln28_8' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (2.44ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 119 'icmp' 'icmp_ln28_9' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [cnn/max_pool_2.cpp:28]   --->   Operation 120 'or' 'or_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%and_ln28_3 = and i1 %or_ln28_3, %or_ln28_4" [cnn/max_pool_2.cpp:28]   --->   Operation 121 'and' 'and_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 122 [1/1] (6.78ns)   --->   "%tmp_s = fcmp ogt float %conv_2_out_load_2, %select_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 122 'fcmp' 'tmp_s' <Predicate = (!icmp_ln9)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 123 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_4 = and i1 %and_ln28_3, %tmp_s" [cnn/max_pool_2.cpp:28]   --->   Operation 123 'and' 'and_ln28_4' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 124 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_4, float %conv_2_out_load_2, float %select_ln28_1" [cnn/max_pool_2.cpp:28]   --->   Operation 124 'select' 'select_ln28_2' <Predicate = (!icmp_ln9)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 125 [1/2] (3.25ns)   --->   "%conv_2_out_load_3 = load float* %conv_2_out_addr_3, align 4" [cnn/max_pool_2.cpp:28]   --->   Operation 125 'load' 'conv_2_out_load_3' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %conv_2_out_load_3 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 126 'bitcast' 'bitcast_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 127 'partselect' 'tmp_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_5 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 128 'trunc' 'trunc_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %select_ln28_2 to i32" [cnn/max_pool_2.cpp:28]   --->   Operation 129 'bitcast' 'bitcast_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [cnn/max_pool_2.cpp:28]   --->   Operation 130 'partselect' 'tmp_10' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_6 to i23" [cnn/max_pool_2.cpp:28]   --->   Operation 131 'trunc' 'trunc_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (1.55ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_5, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 132 'icmp' 'icmp_ln28_10' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 133 [1/1] (2.44ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 133 'icmp' 'icmp_ln28_11' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [cnn/max_pool_2.cpp:28]   --->   Operation 134 'or' 'or_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (1.55ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_10, -1" [cnn/max_pool_2.cpp:28]   --->   Operation 135 'icmp' 'icmp_ln28_12' <Predicate = (!icmp_ln9)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (2.44ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [cnn/max_pool_2.cpp:28]   --->   Operation 136 'icmp' 'icmp_ln28_13' <Predicate = (!icmp_ln9)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [cnn/max_pool_2.cpp:28]   --->   Operation 137 'or' 'or_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%and_ln28_5 = and i1 %or_ln28_5, %or_ln28_6" [cnn/max_pool_2.cpp:28]   --->   Operation 138 'and' 'and_ln28_5' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 139 [1/1] (6.78ns)   --->   "%tmp_11 = fcmp ogt float %conv_2_out_load_3, %select_ln28_2" [cnn/max_pool_2.cpp:28]   --->   Operation 139 'fcmp' 'tmp_11' <Predicate = (!icmp_ln9)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 140 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_6 = and i1 %and_ln28_5, %tmp_11" [cnn/max_pool_2.cpp:28]   --->   Operation 140 'and' 'and_ln28_6' <Predicate = (!icmp_ln9)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 141 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_6, float %conv_2_out_load_3, float %select_ln28_2" [cnn/max_pool_2.cpp:28]   --->   Operation 141 'select' 'select_ln28_3' <Predicate = (!icmp_ln9)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i3 %select_ln12 to i6" [cnn/max_pool_2.cpp:35]   --->   Operation 142 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%add_ln35_1 = add i6 %add_ln35, %zext_ln35_1" [cnn/max_pool_2.cpp:35]   --->   Operation 143 'add' 'add_ln35_1' <Predicate = (!icmp_ln9)> <Delay = 3.49> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_22_cast = call i12 @_ssdm_op_BitConcatenate.i12.i6.i6(i6 %add_ln35_1, i6 0)" [cnn/max_pool_2.cpp:35]   --->   Operation 144 'bitconcatenate' 'tmp_22_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 145 [1/1] (1.54ns)   --->   "%add_ln35_2 = add i12 %tmp_22_cast, %zext_ln28" [cnn/max_pool_2.cpp:35]   --->   Operation 145 'add' 'add_ln35_2' <Predicate = (!icmp_ln9)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i12 %add_ln35_2 to i64" [cnn/max_pool_2.cpp:35]   --->   Operation 146 'zext' 'zext_ln35_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 147 [1/1] (0.00ns)   --->   "%max_pool_out_addr = getelementptr [1600 x float]* %max_pool_out, i64 0, i64 %zext_ln35_3" [cnn/max_pool_2.cpp:35]   --->   Operation 147 'getelementptr' 'max_pool_out_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 148 [1/1] (3.25ns)   --->   "store float %select_ln28_3, float* %max_pool_out_addr, align 4" [cnn/max_pool_2.cpp:35]   --->   Operation 148 'store' <Predicate = (!icmp_ln9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1600> <RAM>
ST_4 : Operation 149 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_6)" [cnn/max_pool_2.cpp:36]   --->   Operation 149 'specregionend' 'empty_10' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 150 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 150 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 151 [1/1] (0.00ns)   --->   "ret void" [cnn/max_pool_2.cpp:39]   --->   Operation 151 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten23', cnn/max_pool_2.cpp:9) with incoming values : ('add_ln9', cnn/max_pool_2.cpp:9) [5]  (1.77 ns)

 <State 2>: 15.6ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', cnn/max_pool_2.cpp:12) with incoming values : ('select_ln12_4', cnn/max_pool_2.cpp:12) [7]  (0 ns)
	'icmp' operation ('icmp_ln12', cnn/max_pool_2.cpp:12) [19]  (1.43 ns)
	'select' operation ('select_ln28_4', cnn/max_pool_2.cpp:28) [20]  (0.98 ns)
	'add' operation ('r', cnn/max_pool_2.cpp:12) [29]  (1.65 ns)
	'select' operation ('select_ln12_2', cnn/max_pool_2.cpp:12) [39]  (1.02 ns)
	'mul' operation ('mul_ln28', cnn/max_pool_2.cpp:28) [41]  (3.49 ns)
	'add' operation ('add_ln28', cnn/max_pool_2.cpp:28) [51]  (1.92 ns)
	'add' operation ('add_ln28_1', cnn/max_pool_2.cpp:28) [53]  (1.81 ns)
	'getelementptr' operation ('conv_2_out_addr', cnn/max_pool_2.cpp:28) [55]  (0 ns)
	'load' operation ('conv_2_out_load', cnn/max_pool_2.cpp:28) on array 'conv_2_out' [61]  (3.25 ns)

 <State 3>: 19.5ns
The critical path consists of the following:
	'load' operation ('conv_2_out_load', cnn/max_pool_2.cpp:28) on array 'conv_2_out' [61]  (3.25 ns)
	'fcmp' operation ('tmp_2', cnn/max_pool_2.cpp:28) [68]  (6.79 ns)
	'and' operation ('and_ln28', cnn/max_pool_2.cpp:28) [69]  (0 ns)
	'select' operation ('select_ln28', cnn/max_pool_2.cpp:28) [70]  (0.978 ns)
	'fcmp' operation ('tmp_7', cnn/max_pool_2.cpp:28) [97]  (6.79 ns)
	'and' operation ('and_ln28_2', cnn/max_pool_2.cpp:28) [98]  (0.978 ns)
	'select' operation ('select_ln28_1', cnn/max_pool_2.cpp:28) [99]  (0.698 ns)

 <State 4>: 23.4ns
The critical path consists of the following:
	'load' operation ('conv_2_out_load_2', cnn/max_pool_2.cpp:28) on array 'conv_2_out' [100]  (3.25 ns)
	'fcmp' operation ('tmp_s', cnn/max_pool_2.cpp:28) [114]  (6.79 ns)
	'and' operation ('and_ln28_4', cnn/max_pool_2.cpp:28) [115]  (0.978 ns)
	'select' operation ('select_ln28_2', cnn/max_pool_2.cpp:28) [116]  (0.698 ns)
	'fcmp' operation ('tmp_11', cnn/max_pool_2.cpp:28) [131]  (6.79 ns)
	'and' operation ('and_ln28_6', cnn/max_pool_2.cpp:28) [132]  (0.978 ns)
	'select' operation ('select_ln28_3', cnn/max_pool_2.cpp:28) [133]  (0.698 ns)
	'store' operation ('store_ln35', cnn/max_pool_2.cpp:35) of variable 'select_ln28_3', cnn/max_pool_2.cpp:28 on array 'max_pool_out' [140]  (3.25 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
