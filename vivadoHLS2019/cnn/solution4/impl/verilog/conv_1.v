// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_q0,
        input_0_address1,
        input_0_ce1,
        input_0_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state24 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_0_address0;
output   input_0_ce0;
input  [31:0] input_0_q0;
output  [9:0] input_0_address1;
output   input_0_ce1;
input  [31:0] input_0_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_0_address0;
reg input_0_ce0;
reg[9:0] input_0_address1;
reg input_0_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_weights_0_0_0_address0;
reg    conv_1_weights_0_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_0_q0;
wire   [4:0] conv_1_weights_0_1_0_address0;
reg    conv_1_weights_0_1_0_ce0;
wire   [31:0] conv_1_weights_0_1_0_q0;
wire   [4:0] conv_1_weights_0_2_0_address0;
reg    conv_1_weights_0_2_0_ce0;
wire   [31:0] conv_1_weights_0_2_0_q0;
wire   [4:0] conv_1_weights_1_0_0_address0;
reg    conv_1_weights_1_0_0_ce0;
wire   [31:0] conv_1_weights_1_0_0_q0;
wire   [4:0] conv_1_weights_1_1_0_address0;
reg    conv_1_weights_1_1_0_ce0;
wire   [31:0] conv_1_weights_1_1_0_q0;
wire   [4:0] conv_1_weights_1_2_0_address0;
reg    conv_1_weights_1_2_0_ce0;
wire   [31:0] conv_1_weights_1_2_0_q0;
wire   [4:0] conv_1_weights_2_0_0_address0;
reg    conv_1_weights_2_0_0_ce0;
wire   [31:0] conv_1_weights_2_0_0_q0;
wire   [4:0] conv_1_weights_2_1_0_address0;
reg    conv_1_weights_2_1_0_ce0;
wire   [31:0] conv_1_weights_2_1_0_q0;
wire   [4:0] conv_1_weights_2_2_0_address0;
reg    conv_1_weights_2_2_0_ce0;
wire   [31:0] conv_1_weights_2_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [14:0] indvar_flatten30_reg_326;
reg   [4:0] r_0_reg_337;
reg   [10:0] indvar_flatten_reg_348;
reg   [4:0] c_0_reg_359;
reg   [5:0] f_0_reg_370;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_922;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_390_p2;
reg   [31:0] reg_419;
wire   [31:0] grp_fu_381_p2;
reg   [31:0] reg_425;
reg   [31:0] reg_430;
reg   [0:0] icmp_ln8_reg_922_pp0_iter1_reg;
wire   [31:0] grp_fu_386_p2;
reg   [31:0] reg_435;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln8_reg_922_pp0_iter2_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] reg_440;
reg   [0:0] icmp_ln8_reg_922_pp0_iter3_reg;
wire   [0:0] icmp_ln8_fu_463_p2;
reg   [0:0] icmp_ln8_reg_922_pp0_iter4_reg;
wire   [14:0] add_ln8_fu_469_p2;
reg   [14:0] add_ln8_reg_926;
wire   [4:0] select_ln35_10_fu_489_p3;
reg   [4:0] select_ln35_10_reg_931;
reg   [4:0] select_ln35_10_reg_931_pp0_iter1_reg;
reg   [4:0] select_ln35_10_reg_931_pp0_iter2_reg;
reg   [4:0] select_ln35_10_reg_931_pp0_iter3_reg;
reg   [4:0] select_ln35_10_reg_931_pp0_iter4_reg;
wire   [10:0] sub_ln26_fu_521_p2;
reg   [10:0] sub_ln26_reg_937;
wire   [4:0] select_ln35_11_fu_533_p3;
reg   [4:0] select_ln35_11_reg_942;
wire   [4:0] add_ln35_fu_549_p2;
reg   [4:0] add_ln35_reg_948;
wire   [5:0] select_ln35_15_fu_601_p3;
reg   [5:0] select_ln35_15_reg_954;
reg   [5:0] select_ln35_15_reg_954_pp0_iter1_reg;
reg   [5:0] select_ln35_15_reg_954_pp0_iter2_reg;
reg   [5:0] select_ln35_15_reg_954_pp0_iter3_reg;
reg   [5:0] select_ln35_15_reg_954_pp0_iter4_reg;
wire   [4:0] select_ln35_16_fu_609_p3;
reg   [4:0] select_ln35_16_reg_960;
reg   [4:0] select_ln35_16_reg_960_pp0_iter1_reg;
reg   [4:0] select_ln35_16_reg_960_pp0_iter2_reg;
reg   [4:0] select_ln35_16_reg_960_pp0_iter3_reg;
reg   [4:0] select_ln35_16_reg_960_pp0_iter4_reg;
wire   [10:0] zext_ln35_15_fu_617_p1;
reg   [10:0] zext_ln35_15_reg_966;
wire   [10:0] zext_ln35_16_fu_646_p1;
reg   [10:0] zext_ln35_16_reg_977;
wire   [4:0] select_ln35_18_fu_667_p3;
reg   [4:0] select_ln35_18_reg_988;
wire   [63:0] zext_ln26_fu_675_p1;
reg   [63:0] zext_ln26_reg_993;
reg   [63:0] zext_ln26_reg_993_pp0_iter1_reg;
reg   [63:0] zext_ln26_reg_993_pp0_iter2_reg;
wire   [10:0] select_ln11_fu_694_p3;
reg   [10:0] select_ln11_reg_1043;
wire   [10:0] sub_ln26_1_fu_724_p2;
reg   [10:0] sub_ln26_1_reg_1048;
wire   [10:0] zext_ln35_17_fu_740_p1;
reg   [10:0] zext_ln35_17_reg_1059;
reg   [31:0] conv_1_weights_0_2_0_2_reg_1080;
reg   [31:0] conv_1_weights_1_0_0_2_reg_1085;
reg   [31:0] conv_1_weights_1_1_0_2_reg_1090;
reg   [31:0] conv_1_weights_1_2_0_2_reg_1095;
reg   [31:0] conv_1_weights_2_0_0_2_reg_1100;
reg   [31:0] conv_1_weights_2_1_0_2_reg_1105;
reg   [31:0] conv_1_weights_2_2_0_2_reg_1110;
wire   [10:0] add_ln26_14_fu_781_p2;
reg   [10:0] add_ln26_14_reg_1115;
wire   [10:0] add_ln26_18_fu_795_p2;
reg   [10:0] add_ln26_18_reg_1125;
wire   [10:0] add_ln26_22_fu_809_p2;
reg   [10:0] add_ln26_22_reg_1135;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] tmp_7_0_1_reg_1140;
reg   [31:0] tmp_7_1_reg_1155;
reg   [31:0] tmp_7_1_1_reg_1165;
reg   [31:0] tmp_7_1_1_reg_1165_pp0_iter1_reg;
reg   [31:0] tmp_7_1_2_reg_1170;
reg   [31:0] tmp_7_1_2_reg_1170_pp0_iter1_reg;
wire   [5:0] f_fu_826_p2;
reg   [5:0] f_reg_1175;
reg   [31:0] tmp_7_2_reg_1180;
reg   [31:0] tmp_7_2_reg_1180_pp0_iter2_reg;
reg   [31:0] tmp_7_2_1_reg_1185;
reg   [31:0] tmp_7_2_1_reg_1185_pp0_iter2_reg;
reg   [31:0] tmp_7_2_1_reg_1185_pp0_iter3_reg;
reg   [31:0] tmp_7_2_2_reg_1190;
reg   [31:0] tmp_7_2_2_reg_1190_pp0_iter2_reg;
reg   [31:0] tmp_7_2_2_reg_1190_pp0_iter3_reg;
reg   [31:0] w_sum_4_1_1_reg_1195;
reg   [31:0] conv_1_bias_load_reg_1205;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter4;
reg   [14:0] ap_phi_mux_indvar_flatten30_phi_fu_330_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_341_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_352_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_363_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_374_p4;
wire   [63:0] zext_ln26_108_fu_627_p1;
wire   [63:0] zext_ln26_111_fu_656_p1;
wire   [63:0] zext_ln26_109_fu_735_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_113_fu_748_p1;
wire   [63:0] zext_ln26_112_fu_790_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_114_fu_804_p1;
wire  signed [63:0] sext_ln26_fu_814_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln26_1_fu_818_p1;
wire   [63:0] zext_ln26_115_fu_822_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln35_19_fu_857_p1;
reg   [31:0] grp_fu_381_p0;
reg   [31:0] grp_fu_381_p1;
reg   [31:0] grp_fu_386_p0;
reg   [31:0] grp_fu_386_p1;
reg   [31:0] grp_fu_390_p0;
reg   [31:0] grp_fu_397_p0;
wire   [0:0] icmp_ln11_fu_475_p2;
wire   [4:0] r_fu_445_p2;
wire   [9:0] tmp_10_fu_497_p3;
wire   [6:0] tmp_11_fu_509_p3;
wire   [10:0] zext_ln26_102_fu_505_p1;
wire   [10:0] zext_ln26_103_fu_517_p1;
wire   [4:0] add_ln26_fu_527_p2;
wire   [4:0] select_ln35_12_fu_541_p3;
wire   [4:0] c_fu_451_p2;
wire   [4:0] add_ln26_3_fu_457_p2;
wire   [0:0] icmp_ln14_fu_577_p2;
wire   [0:0] xor_ln35_fu_571_p2;
wire   [4:0] select_ln35_fu_481_p3;
wire   [0:0] and_ln35_fu_583_p2;
wire   [0:0] or_ln35_fu_595_p2;
wire   [4:0] add_ln26_11_fu_589_p2;
wire   [10:0] add_ln26_12_fu_621_p2;
wire   [4:0] add_ln26_15_fu_632_p2;
wire   [4:0] select_ln35_13_fu_555_p3;
wire   [4:0] select_ln35_17_fu_638_p3;
wire   [10:0] add_ln26_16_fu_650_p2;
wire   [4:0] add_ln26_19_fu_661_p2;
wire   [4:0] select_ln35_14_fu_563_p3;
wire   [10:0] add_ln11_fu_688_p2;
wire   [9:0] tmp_12_fu_702_p3;
wire   [6:0] tmp_13_fu_713_p3;
wire   [10:0] zext_ln26_104_fu_709_p1;
wire   [10:0] zext_ln26_105_fu_720_p1;
wire   [10:0] add_ln26_13_fu_730_p2;
wire   [10:0] add_ln26_20_fu_743_p2;
wire   [9:0] tmp_28_fu_753_p3;
wire   [6:0] tmp_29_fu_764_p3;
wire   [10:0] zext_ln26_106_fu_760_p1;
wire   [10:0] zext_ln26_107_fu_771_p1;
wire   [10:0] sub_ln26_2_fu_775_p2;
wire   [10:0] add_ln26_17_fu_786_p2;
wire   [10:0] add_ln26_21_fu_800_p2;
wire   [9:0] grp_fu_913_p3;
wire   [14:0] tmp_14_fu_837_p3;
wire   [15:0] zext_ln26_110_fu_844_p1;
wire   [15:0] zext_ln35_18_fu_848_p1;
wire   [15:0] add_ln35_7_fu_851_p2;
wire   [31:0] bitcast_ln34_fu_862_p1;
wire   [7:0] tmp_fu_866_p4;
wire   [22:0] trunc_ln34_fu_876_p1;
wire   [0:0] icmp_ln34_2_fu_886_p2;
wire   [0:0] icmp_ln34_fu_880_p2;
wire   [0:0] or_ln34_fu_892_p2;
wire   [0:0] tmp_s_fu_403_p2;
wire   [0:0] and_ln34_fu_898_p2;
wire   [5:0] grp_fu_913_p0;
wire   [4:0] grp_fu_913_p1;
wire   [4:0] grp_fu_913_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state24;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_913_p10;
wire   [9:0] grp_fu_913_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_0_address0),
    .ce0(conv_1_weights_0_0_0_ce0),
    .q0(conv_1_weights_0_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_0_address0),
    .ce0(conv_1_weights_0_1_0_ce0),
    .q0(conv_1_weights_0_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_0_address0),
    .ce0(conv_1_weights_0_2_0_ce0),
    .q0(conv_1_weights_0_2_0_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_0_address0),
    .ce0(conv_1_weights_1_0_0_ce0),
    .q0(conv_1_weights_1_0_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_0_address0),
    .ce0(conv_1_weights_1_1_0_ce0),
    .q0(conv_1_weights_1_1_0_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_0_address0),
    .ce0(conv_1_weights_1_2_0_ce0),
    .q0(conv_1_weights_1_2_0_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_0_address0),
    .ce0(conv_1_weights_2_0_0_ce0),
    .q0(conv_1_weights_2_0_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_0_address0),
    .ce0(conv_1_weights_2_1_0_ce0),
    .q0(conv_1_weights_2_1_0_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_0_address0),
    .ce0(conv_1_weights_2_2_0_ce0),
    .q0(conv_1_weights_2_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_381_p0),
    .din1(grp_fu_381_p1),
    .ce(1'b1),
    .dout(grp_fu_381_p2)
);

cnn_fadd_32ns_32nkbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nkbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_386_p0),
    .din1(grp_fu_386_p1),
    .ce(1'b1),
    .dout(grp_fu_386_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_390_p0),
    .din1(input_0_q0),
    .ce(1'b1),
    .dout(grp_fu_390_p2)
);

cnn_fmul_32ns_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32nlbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_397_p0),
    .din1(input_0_q1),
    .ce(1'b1),
    .dout(grp_fu_397_p2)
);

cnn_fcmp_32ns_32nmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32nmb6_U5(
    .din0(grp_fu_386_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_s_fu_403_p2)
);

cnn_mac_muladd_6nncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
cnn_mac_muladd_6nncg_U6(
    .din0(grp_fu_913_p0),
    .din1(grp_fu_913_p1),
    .din2(grp_fu_913_p2),
    .dout(grp_fu_913_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        c_0_reg_359 <= select_ln35_16_reg_960;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_359 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        f_0_reg_370 <= f_reg_1175;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_370 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        indvar_flatten30_reg_326 <= add_ln8_reg_926;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_326 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        indvar_flatten_reg_348 <= select_ln11_reg_1043;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_348 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        r_0_reg_337 <= select_ln35_10_reg_931;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_337 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_922 == 1'd0))) begin
        add_ln26_14_reg_1115 <= add_ln26_14_fu_781_p2;
        add_ln26_18_reg_1125 <= add_ln26_18_fu_795_p2;
        add_ln26_22_reg_1135 <= add_ln26_22_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        add_ln35_reg_948 <= add_ln35_fu_549_p2;
        select_ln35_11_reg_942 <= select_ln35_11_fu_533_p3;
        select_ln35_15_reg_954 <= select_ln35_15_fu_601_p3;
        select_ln35_18_reg_988 <= select_ln35_18_fu_667_p3;
        sub_ln26_reg_937[10 : 2] <= sub_ln26_fu_521_p2[10 : 2];
        zext_ln26_reg_993[5 : 0] <= zext_ln26_fu_675_p1[5 : 0];
        zext_ln35_15_reg_966[4 : 0] <= zext_ln35_15_fu_617_p1[4 : 0];
        zext_ln35_16_reg_977[4 : 0] <= zext_ln35_16_fu_646_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_926 <= add_ln8_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_922_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_bias_load_reg_1205 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_922 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_0_2_0_2_reg_1080 <= conv_1_weights_0_2_0_q0;
        conv_1_weights_1_0_0_2_reg_1085 <= conv_1_weights_1_0_0_q0;
        conv_1_weights_1_1_0_2_reg_1090 <= conv_1_weights_1_1_0_q0;
        conv_1_weights_1_2_0_2_reg_1095 <= conv_1_weights_1_2_0_q0;
        conv_1_weights_2_0_0_2_reg_1100 <= conv_1_weights_2_0_0_q0;
        conv_1_weights_2_1_0_2_reg_1105 <= conv_1_weights_2_1_0_q0;
        conv_1_weights_2_2_0_2_reg_1110 <= conv_1_weights_2_2_0_q0;
        sub_ln26_1_reg_1048[10 : 2] <= sub_ln26_1_fu_724_p2[10 : 2];
        zext_ln35_17_reg_1059[4 : 0] <= zext_ln35_17_fu_740_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_922 == 1'd0))) begin
        f_reg_1175 <= f_fu_826_p2;
        tmp_7_1_1_reg_1165 <= grp_fu_390_p2;
        tmp_7_1_2_reg_1170 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_922 <= icmp_ln8_fu_463_p2;
        icmp_ln8_reg_922_pp0_iter1_reg <= icmp_ln8_reg_922;
        icmp_ln8_reg_922_pp0_iter2_reg <= icmp_ln8_reg_922_pp0_iter1_reg;
        icmp_ln8_reg_922_pp0_iter3_reg <= icmp_ln8_reg_922_pp0_iter2_reg;
        icmp_ln8_reg_922_pp0_iter4_reg <= icmp_ln8_reg_922_pp0_iter3_reg;
        select_ln35_10_reg_931_pp0_iter1_reg <= select_ln35_10_reg_931;
        select_ln35_10_reg_931_pp0_iter2_reg <= select_ln35_10_reg_931_pp0_iter1_reg;
        select_ln35_10_reg_931_pp0_iter3_reg <= select_ln35_10_reg_931_pp0_iter2_reg;
        select_ln35_10_reg_931_pp0_iter4_reg <= select_ln35_10_reg_931_pp0_iter3_reg;
        select_ln35_15_reg_954_pp0_iter1_reg <= select_ln35_15_reg_954;
        select_ln35_15_reg_954_pp0_iter2_reg <= select_ln35_15_reg_954_pp0_iter1_reg;
        select_ln35_15_reg_954_pp0_iter3_reg <= select_ln35_15_reg_954_pp0_iter2_reg;
        select_ln35_15_reg_954_pp0_iter4_reg <= select_ln35_15_reg_954_pp0_iter3_reg;
        select_ln35_16_reg_960_pp0_iter1_reg <= select_ln35_16_reg_960;
        select_ln35_16_reg_960_pp0_iter2_reg <= select_ln35_16_reg_960_pp0_iter1_reg;
        select_ln35_16_reg_960_pp0_iter3_reg <= select_ln35_16_reg_960_pp0_iter2_reg;
        select_ln35_16_reg_960_pp0_iter4_reg <= select_ln35_16_reg_960_pp0_iter3_reg;
        tmp_7_2_1_reg_1185_pp0_iter2_reg <= tmp_7_2_1_reg_1185;
        tmp_7_2_1_reg_1185_pp0_iter3_reg <= tmp_7_2_1_reg_1185_pp0_iter2_reg;
        tmp_7_2_reg_1180_pp0_iter2_reg <= tmp_7_2_reg_1180;
        zext_ln26_reg_993_pp0_iter1_reg[5 : 0] <= zext_ln26_reg_993[5 : 0];
        zext_ln26_reg_993_pp0_iter2_reg[5 : 0] <= zext_ln26_reg_993_pp0_iter1_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_922 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_922 == 1'd0)))) begin
        reg_419 <= grp_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_922 == 1'd0)))) begin
        reg_425 <= grp_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_922_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_922_pp0_iter1_reg == 1'd0)))) begin
        reg_430 <= grp_fu_381_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_922_pp0_iter2_reg == 1'd0)))) begin
        reg_435 <= grp_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_922_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_922_pp0_iter3_reg == 1'd0)))) begin
        reg_440 <= grp_fu_386_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_463_p2 == 1'd0))) begin
        select_ln11_reg_1043 <= select_ln11_fu_694_p3;
        select_ln35_10_reg_931 <= select_ln35_10_fu_489_p3;
        select_ln35_16_reg_960 <= select_ln35_16_fu_609_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_922 == 1'd0))) begin
        tmp_7_0_1_reg_1140 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_7_1_1_reg_1165_pp0_iter1_reg <= tmp_7_1_1_reg_1165;
        tmp_7_1_2_reg_1170_pp0_iter1_reg <= tmp_7_1_2_reg_1170;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_922 == 1'd0))) begin
        tmp_7_1_reg_1155 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        tmp_7_2_1_reg_1185 <= grp_fu_397_p2;
        tmp_7_2_reg_1180 <= grp_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_922_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_7_2_2_reg_1190 <= grp_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_7_2_2_reg_1190_pp0_iter2_reg <= tmp_7_2_2_reg_1190;
        tmp_7_2_2_reg_1190_pp0_iter3_reg <= tmp_7_2_2_reg_1190_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_922_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_4_1_1_reg_1195 <= grp_fu_381_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_463_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_363_p4 = select_ln35_16_reg_960;
    end else begin
        ap_phi_mux_c_0_phi_fu_363_p4 = c_0_reg_359;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_374_p4 = f_reg_1175;
    end else begin
        ap_phi_mux_f_0_phi_fu_374_p4 = f_0_reg_370;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_330_p4 = add_ln8_reg_926;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_330_p4 = indvar_flatten30_reg_326;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_352_p4 = select_ln11_reg_1043;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_352_p4 = indvar_flatten_reg_348;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_922 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_341_p4 = select_ln35_10_reg_931;
    end else begin
        ap_phi_mux_r_0_phi_fu_341_p4 = r_0_reg_337;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_922_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_381_p0 = reg_430;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_381_p0 = reg_425;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_381_p0 = grp_fu_390_p2;
    end else begin
        grp_fu_381_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_381_p1 = tmp_7_1_1_reg_1165_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_381_p1 = tmp_7_1_reg_1155;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_381_p1 = reg_419;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_381_p1 = tmp_7_0_1_reg_1140;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_381_p1 = 32'd0;
    end else begin
        grp_fu_381_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_386_p0 = reg_440;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_386_p0 = reg_435;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_386_p0 = w_sum_4_1_1_reg_1195;
    end else begin
        grp_fu_386_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_386_p1 = conv_1_bias_load_reg_1205;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_386_p1 = tmp_7_2_2_reg_1190_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_386_p1 = tmp_7_2_1_reg_1185_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_386_p1 = tmp_7_2_reg_1180_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_386_p1 = tmp_7_1_2_reg_1170_pp0_iter1_reg;
    end else begin
        grp_fu_386_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_390_p0 = conv_1_weights_2_2_0_2_reg_1110;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_390_p0 = conv_1_weights_2_0_0_2_reg_1100;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_390_p0 = conv_1_weights_1_1_0_2_reg_1090;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_390_p0 = conv_1_weights_0_2_0_2_reg_1080;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_390_p0 = conv_1_weights_0_0_0_q0;
    end else begin
        grp_fu_390_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_397_p0 = conv_1_weights_2_1_0_2_reg_1105;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_397_p0 = conv_1_weights_1_2_0_2_reg_1095;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_397_p0 = conv_1_weights_1_0_0_2_reg_1085;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_397_p0 = conv_1_weights_0_1_0_q0;
        end else begin
            grp_fu_397_p0 = 'bx;
        end
    end else begin
        grp_fu_397_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_0_address0 = zext_ln26_115_fu_822_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_0_address0 = sext_ln26_fu_814_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_0_address0 = zext_ln26_112_fu_790_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_0_address0 = zext_ln26_113_fu_748_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_0_address0 = zext_ln26_108_fu_627_p1;
        end else begin
            input_0_address0 = 'bx;
        end
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_0_address1 = sext_ln26_1_fu_818_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_0_address1 = zext_ln26_114_fu_804_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_0_address1 = zext_ln26_109_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_0_address1 = zext_ln26_111_fu_656_p1;
        end else begin
            input_0_address1 = 'bx;
        end
    end else begin
        input_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_0_ce1 = 1'b1;
    end else begin
        input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_463_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_688_p2 = (11'd1 + ap_phi_mux_indvar_flatten_phi_fu_352_p4);

assign add_ln26_11_fu_589_p2 = (5'd1 + select_ln35_fu_481_p3);

assign add_ln26_12_fu_621_p2 = (sub_ln26_fu_521_p2 + zext_ln35_15_fu_617_p1);

assign add_ln26_13_fu_730_p2 = (sub_ln26_1_fu_724_p2 + zext_ln35_15_reg_966);

assign add_ln26_14_fu_781_p2 = (sub_ln26_2_fu_775_p2 + zext_ln35_15_reg_966);

assign add_ln26_15_fu_632_p2 = (5'd2 + select_ln35_fu_481_p3);

assign add_ln26_16_fu_650_p2 = (sub_ln26_fu_521_p2 + zext_ln35_16_fu_646_p1);

assign add_ln26_17_fu_786_p2 = (sub_ln26_1_reg_1048 + zext_ln35_16_reg_977);

assign add_ln26_18_fu_795_p2 = (sub_ln26_2_fu_775_p2 + zext_ln35_16_reg_977);

assign add_ln26_19_fu_661_p2 = (5'd3 + select_ln35_fu_481_p3);

assign add_ln26_20_fu_743_p2 = (sub_ln26_reg_937 + zext_ln35_17_fu_740_p1);

assign add_ln26_21_fu_800_p2 = (sub_ln26_1_reg_1048 + zext_ln35_17_reg_1059);

assign add_ln26_22_fu_809_p2 = (sub_ln26_2_fu_775_p2 + zext_ln35_17_reg_1059);

assign add_ln26_3_fu_457_p2 = (ap_phi_mux_c_0_phi_fu_363_p4 + 5'd2);

assign add_ln26_fu_527_p2 = (5'd2 + ap_phi_mux_r_0_phi_fu_341_p4);

assign add_ln35_7_fu_851_p2 = (zext_ln26_110_fu_844_p1 + zext_ln35_18_fu_848_p1);

assign add_ln35_fu_549_p2 = (ap_phi_mux_r_0_phi_fu_341_p4 + select_ln35_12_fu_541_p3);

assign add_ln8_fu_469_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_330_p4 + 15'd1);

assign and_ln34_fu_898_p2 = (tmp_s_fu_403_p2 & or_ln34_fu_892_p2);

assign and_ln35_fu_583_p2 = (xor_ln35_fu_571_p2 & icmp_ln14_fu_577_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_862_p1 = grp_fu_386_p2;

assign c_fu_451_p2 = (ap_phi_mux_c_0_phi_fu_363_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_reg_993_pp0_iter2_reg;

assign conv_1_weights_0_0_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_0_1_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_0_2_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_1_0_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_1_1_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_1_2_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_2_0_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_2_1_0_address0 = zext_ln26_fu_675_p1;

assign conv_1_weights_2_2_0_address0 = zext_ln26_fu_675_p1;

assign conv_out_address0 = zext_ln35_19_fu_857_p1;

assign conv_out_d0 = ((and_ln34_fu_898_p2[0:0] === 1'b1) ? grp_fu_386_p2 : 32'd0);

assign f_fu_826_p2 = (6'd1 + select_ln35_15_reg_954);

assign grp_fu_913_p0 = 10'd26;

assign grp_fu_913_p1 = grp_fu_913_p10;

assign grp_fu_913_p10 = select_ln35_10_reg_931_pp0_iter4_reg;

assign grp_fu_913_p2 = grp_fu_913_p20;

assign grp_fu_913_p20 = select_ln35_16_reg_960_pp0_iter4_reg;

assign icmp_ln11_fu_475_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_352_p4 == 11'd832) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_577_p2 = ((ap_phi_mux_f_0_phi_fu_374_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_886_p2 = ((trunc_ln34_fu_876_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_880_p2 = ((tmp_fu_866_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_463_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_330_p4 == 15'd21632) ? 1'b1 : 1'b0);

assign or_ln34_fu_892_p2 = (icmp_ln34_fu_880_p2 | icmp_ln34_2_fu_886_p2);

assign or_ln35_fu_595_p2 = (icmp_ln11_fu_475_p2 | and_ln35_fu_583_p2);

assign r_fu_445_p2 = (ap_phi_mux_r_0_phi_fu_341_p4 + 5'd1);

assign select_ln11_fu_694_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? 11'd1 : add_ln11_fu_688_p2);

assign select_ln35_10_fu_489_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? r_fu_445_p2 : ap_phi_mux_r_0_phi_fu_341_p4);

assign select_ln35_11_fu_533_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? add_ln26_fu_527_p2 : r_fu_445_p2);

assign select_ln35_12_fu_541_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln35_13_fu_555_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? 5'd1 : c_fu_451_p2);

assign select_ln35_14_fu_563_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? 5'd2 : add_ln26_3_fu_457_p2);

assign select_ln35_15_fu_601_p3 = ((or_ln35_fu_595_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_374_p4);

assign select_ln35_16_fu_609_p3 = ((and_ln35_fu_583_p2[0:0] === 1'b1) ? add_ln26_11_fu_589_p2 : select_ln35_fu_481_p3);

assign select_ln35_17_fu_638_p3 = ((and_ln35_fu_583_p2[0:0] === 1'b1) ? add_ln26_15_fu_632_p2 : select_ln35_13_fu_555_p3);

assign select_ln35_18_fu_667_p3 = ((and_ln35_fu_583_p2[0:0] === 1'b1) ? add_ln26_19_fu_661_p2 : select_ln35_14_fu_563_p3);

assign select_ln35_fu_481_p3 = ((icmp_ln11_fu_475_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_363_p4);

assign sext_ln26_1_fu_818_p1 = $signed(add_ln26_18_reg_1125);

assign sext_ln26_fu_814_p1 = $signed(add_ln26_14_reg_1115);

assign sub_ln26_1_fu_724_p2 = (zext_ln26_104_fu_709_p1 - zext_ln26_105_fu_720_p1);

assign sub_ln26_2_fu_775_p2 = (zext_ln26_106_fu_760_p1 - zext_ln26_107_fu_771_p1);

assign sub_ln26_fu_521_p2 = (zext_ln26_102_fu_505_p1 - zext_ln26_103_fu_517_p1);

assign tmp_10_fu_497_p3 = {{select_ln35_10_fu_489_p3}, {5'd0}};

assign tmp_11_fu_509_p3 = {{select_ln35_10_fu_489_p3}, {2'd0}};

assign tmp_12_fu_702_p3 = {{select_ln35_11_reg_942}, {5'd0}};

assign tmp_13_fu_713_p3 = {{select_ln35_11_reg_942}, {2'd0}};

assign tmp_14_fu_837_p3 = {{grp_fu_913_p3}, {5'd0}};

assign tmp_28_fu_753_p3 = {{add_ln35_reg_948}, {5'd0}};

assign tmp_29_fu_764_p3 = {{add_ln35_reg_948}, {2'd0}};

assign tmp_fu_866_p4 = {{bitcast_ln34_fu_862_p1[30:23]}};

assign trunc_ln34_fu_876_p1 = bitcast_ln34_fu_862_p1[22:0];

assign xor_ln35_fu_571_p2 = (icmp_ln11_fu_475_p2 ^ 1'd1);

assign zext_ln26_102_fu_505_p1 = tmp_10_fu_497_p3;

assign zext_ln26_103_fu_517_p1 = tmp_11_fu_509_p3;

assign zext_ln26_104_fu_709_p1 = tmp_12_fu_702_p3;

assign zext_ln26_105_fu_720_p1 = tmp_13_fu_713_p3;

assign zext_ln26_106_fu_760_p1 = tmp_28_fu_753_p3;

assign zext_ln26_107_fu_771_p1 = tmp_29_fu_764_p3;

assign zext_ln26_108_fu_627_p1 = add_ln26_12_fu_621_p2;

assign zext_ln26_109_fu_735_p1 = add_ln26_13_fu_730_p2;

assign zext_ln26_110_fu_844_p1 = tmp_14_fu_837_p3;

assign zext_ln26_111_fu_656_p1 = add_ln26_16_fu_650_p2;

assign zext_ln26_112_fu_790_p1 = add_ln26_17_fu_786_p2;

assign zext_ln26_113_fu_748_p1 = add_ln26_20_fu_743_p2;

assign zext_ln26_114_fu_804_p1 = add_ln26_21_fu_800_p2;

assign zext_ln26_115_fu_822_p1 = add_ln26_22_reg_1135;

assign zext_ln26_fu_675_p1 = select_ln35_15_fu_601_p3;

assign zext_ln35_15_fu_617_p1 = select_ln35_16_fu_609_p3;

assign zext_ln35_16_fu_646_p1 = select_ln35_17_fu_638_p3;

assign zext_ln35_17_fu_740_p1 = select_ln35_18_reg_988;

assign zext_ln35_18_fu_848_p1 = select_ln35_15_reg_954_pp0_iter4_reg;

assign zext_ln35_19_fu_857_p1 = add_ln35_7_fu_851_p2;

always @ (posedge ap_clk) begin
    sub_ln26_reg_937[1:0] <= 2'b00;
    zext_ln35_15_reg_966[10:5] <= 6'b000000;
    zext_ln35_16_reg_977[10:5] <= 6'b000000;
    zext_ln26_reg_993[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_993_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_993_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    sub_ln26_1_reg_1048[1:0] <= 2'b00;
    zext_ln35_17_reg_1059[10:5] <= 6'b000000;
end

endmodule //conv_1
