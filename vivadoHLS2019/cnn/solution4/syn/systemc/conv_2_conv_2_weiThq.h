// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiThq_H__
#define __conv_2_conv_2_weiThq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiThq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiThq_ram) {
        ram[0] = "0b10111100010111101101101001010010";
        ram[1] = "0b00111101001001011011100101110101";
        ram[2] = "0b10111110011001100010010100010000";
        ram[3] = "0b00111101000101010011101111001010";
        ram[4] = "0b00111110100010001110010110100010";
        ram[5] = "0b00111101110000111011100111101000";
        ram[6] = "0b00111101111110011101001001100110";
        ram[7] = "0b10111101110100010010101001001101";
        ram[8] = "0b00111101101110101011000100110111";
        ram[9] = "0b00111101010101011111100010001011";
        ram[10] = "0b00111100010101111001000101111110";
        ram[11] = "0b00111101100101111100100110111010";
        ram[12] = "0b00111110001101000001100111010100";
        ram[13] = "0b00111101100011010001000001101010";
        ram[14] = "0b00111110000001010010100000010101";
        ram[15] = "0b00111100100000111010100111011111";
        ram[16] = "0b00111101000000110001001011011010";
        ram[17] = "0b10111101000111001001011100111110";
        ram[18] = "0b10111101101000001101100000001010";
        ram[19] = "0b10111110101111001111010001100010";
        ram[20] = "0b00111110001101001111100010101001";
        ram[21] = "0b00111101110010011001101000101011";
        ram[22] = "0b00111101100100010011010011010101";
        ram[23] = "0b00111101110001001101110110001011";
        ram[24] = "0b00111110010000011101000101010100";
        ram[25] = "0b10111101110110110111100011110111";
        ram[26] = "0b00111101100111101001010110001000";
        ram[27] = "0b00111110010101011010100101000001";
        ram[28] = "0b10111110000001000001101101000010";
        ram[29] = "0b00111101000110010101010011100110";
        ram[30] = "0b00111110011100100010010010100100";
        ram[31] = "0b10111110101110011010010110100101";
        ram[32] = "0b00111101111100000010010010111001";
        ram[33] = "0b10111100000000010010010001010111";
        ram[34] = "0b00111101011110111000101110011000";
        ram[35] = "0b00111100110110000101000101110001";
        ram[36] = "0b10111110101010100100001111100010";
        ram[37] = "0b10111100100100011101110011110101";
        ram[38] = "0b00111110000001101011110000010111";
        ram[39] = "0b00111101101010011010011111100100";
        ram[40] = "0b10111011010111101011110100001000";
        ram[41] = "0b10111110011011011000100011101011";
        ram[42] = "0b00111011010000010001010011100001";
        ram[43] = "0b10111110001001100110000000111110";
        ram[44] = "0b10111110001010000110101001011110";
        ram[45] = "0b00111110000001111001011001110110";
        ram[46] = "0b00111101101101011000101111010000";
        ram[47] = "0b10111101111000011001011001001111";
        ram[48] = "0b10111110001110011001101101100111";
        ram[49] = "0b10111110011001100111110011111011";
        ram[50] = "0b00111110001101110110101111001010";
        ram[51] = "0b00111110010011110001001001100110";
        ram[52] = "0b10111100100110010000111000000100";
        ram[53] = "0b10111101111000011100101011110000";
        ram[54] = "0b10111101110001111001100010111101";
        ram[55] = "0b00111100110100101000000011000011";
        ram[56] = "0b10111110000010001011110000010011";
        ram[57] = "0b10111110001110101001110000110010";
        ram[58] = "0b10111100110110000001100111111001";
        ram[59] = "0b00111011111010011010001111100110";
        ram[60] = "0b00111101110110100100000101000001";
        ram[61] = "0b10111011110000011100011101101100";
        ram[62] = "0b00111110000011101000100011111001";
        ram[63] = "0b10111100111010100110000010011000";
        ram[64] = "0b00111011001110010010111111000110";
        ram[65] = "0b00111110010001011000000100100111";
        ram[66] = "0b00111101111000010101100000101100";
        ram[67] = "0b10111101000101001010010001110000";
        ram[68] = "0b00111110010000001100101101111011";
        ram[69] = "0b10111101100010010100101011111011";
        ram[70] = "0b00111101101111010110010010100100";
        ram[71] = "0b00111100110000001001110000010111";
        ram[72] = "0b10111100101010000010000110010011";
        ram[73] = "0b00111011110110001101110001010011";
        ram[74] = "0b00111101101100111010100000010100";
        ram[75] = "0b00111110000011100010111011100011";
        ram[76] = "0b00111110011000011000110110010001";
        ram[77] = "0b00111101101000000000000101001011";
        ram[78] = "0b00111110000011000101111110100011";
        ram[79] = "0b10111101101010101100101000010001";
        ram[80] = "0b10111100110101001100000101110110";
        ram[81] = "0b10111100110001000000111011010101";
        ram[82] = "0b10111101110000001111100000011110";
        ram[83] = "0b10111110001001000110001001010101";
        ram[84] = "0b00111110010010110100001101010110";
        ram[85] = "0b10111100101001001010111101111000";
        ram[86] = "0b10111101010001000011011001011110";
        ram[87] = "0b00111101000010011010100101110110";
        ram[88] = "0b00111110010011111111000001111100";
        ram[89] = "0b10111100111110111100001101101010";
        ram[90] = "0b00111101101000001100010001001001";
        ram[91] = "0b10111110010101011101111011010010";
        ram[92] = "0b10111110010000010111000010000110";
        ram[93] = "0b00111101001111100000111001010110";
        ram[94] = "0b00111101010010110011110111010111";
        ram[95] = "0b10111110110010100000000100000001";
        ram[96] = "0b00111101100111110100101001100111";
        ram[97] = "0b10111110011011000111110011001010";
        ram[98] = "0b00111110010100100100110110001011";
        ram[99] = "0b00111100111010011000001111011010";
        ram[100] = "0b10111110000010110011010111110001";
        ram[101] = "0b00111110001110100010111101100001";
        ram[102] = "0b10111100100001010110101110110000";
        ram[103] = "0b10111101111100101001000001001111";
        ram[104] = "0b10111101110111100011010000010110";
        ram[105] = "0b10111101101110110100100000101001";
        ram[106] = "0b00111110010010001101111011111110";
        ram[107] = "0b10111110000010011010110111000011";
        ram[108] = "0b10111101011000010101000001110101";
        ram[109] = "0b00111110000100101110011010110000";
        ram[110] = "0b00111101110111101010001101110101";
        ram[111] = "0b10111011011100110101001010000010";
        ram[112] = "0b00111101001010011010100001001010";
        ram[113] = "0b10111110001011011111010001110101";
        ram[114] = "0b00111110100100101010101001000010";
        ram[115] = "0b00111101000001111110111100110101";
        ram[116] = "0b10111110000100101000001111010110";
        ram[117] = "0b00111101000001100101110110101111";
        ram[118] = "0b10111110010010101110001100010111";
        ram[119] = "0b10111101000110100101111100101010";
        ram[120] = "0b10111101010101100011000100111010";
        ram[121] = "0b00111101110011101101011011000010";
        ram[122] = "0b10111101111111011111100000000000";
        ram[123] = "0b00111101101100111000100011101001";
        ram[124] = "0b00111110001001011011101101100011";
        ram[125] = "0b10111110000111100010101001011111";
        ram[126] = "0b10111101000010110111111011111100";
        ram[127] = "0b00111100001100110100111011010010";
        ram[128] = "0b00111110001000001011001101111100";
        ram[129] = "0b00111101011001011100110110000100";
        ram[130] = "0b00111101110011111111110000001100";
        ram[131] = "0b10111101101100111011111100001000";
        ram[132] = "0b00111110001001111100110100000100";
        ram[133] = "0b00111101100101000000100101111010";
        ram[134] = "0b10111011110001100101010111010111";
        ram[135] = "0b10111101110010001000101101111010";
        ram[136] = "0b10111101101010111000111011001100";
        ram[137] = "0b10111100110110111110001001011001";
        ram[138] = "0b10111100100001110111010111111001";
        ram[139] = "0b00111101000001101000010001110111";
        ram[140] = "0b00111101111011101001101100100101";
        ram[141] = "0b10111100101011001110000011001000";
        ram[142] = "0b00111101001101101101001111000110";
        ram[143] = "0b00111101101011001111111100110000";
        ram[144] = "0b10111110001011011111010000011000";
        ram[145] = "0b00111101110010011001011110110000";
        ram[146] = "0b00111100111010110111011010111100";
        ram[147] = "0b10111110001011101110100001111100";
        ram[148] = "0b10111110100100111111111011000100";
        ram[149] = "0b00111101000101001100100010000111";
        ram[150] = "0b00111100000000000011011111011101";
        ram[151] = "0b10111101011111100110000110000000";
        ram[152] = "0b00111011111100010100010111101111";
        ram[153] = "0b00111110000100011111001001111011";
        ram[154] = "0b10111101110100100011110101010100";
        ram[155] = "0b10111101001101010000110001110101";
        ram[156] = "0b10111110010111000001010000011101";
        ram[157] = "0b10111100100110101111010000011010";
        ram[158] = "0b00111101011110110010110001100101";
        ram[159] = "0b10111110011001011111000110111101";
        ram[160] = "0b10111100110011110011111100100100";
        ram[161] = "0b00111100101000110100111001000111";
        ram[162] = "0b00111110001100111011100110100101";
        ram[163] = "0b10111110101110001010110011110111";
        ram[164] = "0b00111101101011101011100111011001";
        ram[165] = "0b10111101011111110010001001011001";
        ram[166] = "0b10111101100101101111000100001010";
        ram[167] = "0b10111100111000111000011110010100";
        ram[168] = "0b00111101100001011101011100110110";
        ram[169] = "0b00111101011001011111011001000001";
        ram[170] = "0b00111110001000010010111011111000";
        ram[171] = "0b00111101000011111110011110101010";
        ram[172] = "0b00111100101101000101000111111100";
        ram[173] = "0b10111100100101101000000100010011";
        ram[174] = "0b10111110000001101011010011101101";
        ram[175] = "0b00111101001100100100001101000000";
        ram[176] = "0b10111101000001101100101111001000";
        ram[177] = "0b00111101000001011111110100001000";
        ram[178] = "0b00111110010110100001101100011001";
        ram[179] = "0b00111101011011100100000111011001";
        ram[180] = "0b10111101101011011100111110001101";
        ram[181] = "0b00111101101111010110100111110011";
        ram[182] = "0b10111110010001110011000110011000";
        ram[183] = "0b00111110010100110101001101001100";
        ram[184] = "0b10111101001111001011100100001010";
        ram[185] = "0b10111100110010101011001111011010";
        ram[186] = "0b10111110000010001001001101000100";
        ram[187] = "0b00111010011011001101011100001111";
        ram[188] = "0b00111101110100010001011110000111";
        ram[189] = "0b00111101100011011000011001000010";
        ram[190] = "0b10111100110011000011101011010011";
        ram[191] = "0b00111101000110000001100101101001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiThq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiThq_ram* meminst;


SC_CTOR(conv_2_conv_2_weiThq) {
meminst = new conv_2_conv_2_weiThq_ram("conv_2_conv_2_weiThq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiThq() {
    delete meminst;
}


};//endmodule
#endif
