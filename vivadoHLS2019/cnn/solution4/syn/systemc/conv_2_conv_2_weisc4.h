// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weisc4_H__
#define __conv_2_conv_2_weisc4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weisc4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weisc4_ram) {
        ram[0] = "0b10111110011001110110001010000101";
        ram[1] = "0b00111101001100011110101111011110";
        ram[2] = "0b10111101001000111100111010000111";
        ram[3] = "0b10111110000000111000001110000101";
        ram[4] = "0b10111101010011000010100110010101";
        ram[5] = "0b10111101101000010011000010100100";
        ram[6] = "0b00111101101011110111011110001111";
        ram[7] = "0b00111100110101100000110110110011";
        ram[8] = "0b10111110110011011100000000101011";
        ram[9] = "0b10111100111010001110010010100001";
        ram[10] = "0b10111110001011111001101111110100";
        ram[11] = "0b00111110011001010010101111001001";
        ram[12] = "0b00111110001100011101010010000101";
        ram[13] = "0b00111101110011000101011111001110";
        ram[14] = "0b10111110000101001100000000110000";
        ram[15] = "0b10111110111000011000100000011100";
        ram[16] = "0b00111100000011011000110100001010";
        ram[17] = "0b10111101111011010001100001001100";
        ram[18] = "0b00111101100001010000101110001111";
        ram[19] = "0b10111100000101010101011100110010";
        ram[20] = "0b00111101111100001010110110000101";
        ram[21] = "0b10111100000011111000100010001110";
        ram[22] = "0b10111101010001110000101100001111";
        ram[23] = "0b00111101110011110110111101011001";
        ram[24] = "0b10111101111001011100001110101001";
        ram[25] = "0b10111110110010100001101000000010";
        ram[26] = "0b10111110100010011011100001000101";
        ram[27] = "0b00111101111011000111000000010000";
        ram[28] = "0b00111101110000100011001101101111";
        ram[29] = "0b10111110100001001000011011110111";
        ram[30] = "0b00111110100000001100001101011001";
        ram[31] = "0b10111101110100010000010010011010";
        ram[32] = "0b00111101011000001010101110110000";
        ram[33] = "0b00111110010101011100011000101010";
        ram[34] = "0b10111101000101101001010010011101";
        ram[35] = "0b00111110010001001111010010011001";
        ram[36] = "0b10111101110010100110001110100111";
        ram[37] = "0b10111100110110011000001011100100";
        ram[38] = "0b00111101110101111111011001000110";
        ram[39] = "0b10111110111010001000101111110011";
        ram[40] = "0b10111101101001100010010000100100";
        ram[41] = "0b10111110111100110101000011001110";
        ram[42] = "0b00111110000001101110001010001011";
        ram[43] = "0b10111100100000110111100000010111";
        ram[44] = "0b10111100100011110011000000011100";
        ram[45] = "0b10111101001010010111101001000100";
        ram[46] = "0b00111101000100111111010001111000";
        ram[47] = "0b10111101000110100011001111111011";
        ram[48] = "0b00111110000001101001100110000011";
        ram[49] = "0b10111101101010001110011100001011";
        ram[50] = "0b00111100001000100111000011111101";
        ram[51] = "0b10111100010011110011011101000010";
        ram[52] = "0b00111101001111010100110101100001";
        ram[53] = "0b00111100010100110010110110011101";
        ram[54] = "0b10111100110010000101110000001011";
        ram[55] = "0b00111110001100100001001011011110";
        ram[56] = "0b00111110000011001110110000010100";
        ram[57] = "0b10111101101010111101100001111000";
        ram[58] = "0b00111011010100100010101110110110";
        ram[59] = "0b00111110001001100111001010111011";
        ram[60] = "0b10111101000111110101001010101101";
        ram[61] = "0b10111110011011101110110011010000";
        ram[62] = "0b10111110010000010000100111101110";
        ram[63] = "0b10111110101011100100011110001010";
        ram[64] = "0b10111110000111011001111110000101";
        ram[65] = "0b10111101011010110010001111010100";
        ram[66] = "0b10111110011101101010000100111011";
        ram[67] = "0b00111101101000010101101011100001";
        ram[68] = "0b10111101111100101100001111110000";
        ram[69] = "0b00111110000011000100101110000101";
        ram[70] = "0b00111110000111110001100101111110";
        ram[71] = "0b10111100011010000010100011101001";
        ram[72] = "0b10111110111111110100011001000011";
        ram[73] = "0b00111101101010011100111110011100";
        ram[74] = "0b00111101010010100000110001010110";
        ram[75] = "0b00111101011011110001110110101110";
        ram[76] = "0b00111101001100011110000000011101";
        ram[77] = "0b10111101001100000110100010000001";
        ram[78] = "0b10111110111000000000110010011000";
        ram[79] = "0b10111110111011101001011010000110";
        ram[80] = "0b10111110100110110011001000000100";
        ram[81] = "0b00111101000100110000010001011100";
        ram[82] = "0b10111110011101000010001100100101";
        ram[83] = "0b00111011011111011101000100000110";
        ram[84] = "0b00111110000101110001111111011001";
        ram[85] = "0b00111101100000101100111100110101";
        ram[86] = "0b10111101111111101010001110100010";
        ram[87] = "0b00111101110111111011100000110010";
        ram[88] = "0b10111101101000100011001000011000";
        ram[89] = "0b10111101101110111011100000011010";
        ram[90] = "0b00111101110101100111101011111111";
        ram[91] = "0b10111101010111011100100100110011";
        ram[92] = "0b10111110111000001011011000110000";
        ram[93] = "0b10111110011010100010110110111000";
        ram[94] = "0b00111101110010101010101001010011";
        ram[95] = "0b00111100110010111110111111000100";
        ram[96] = "0b00111101100011111001111010100111";
        ram[97] = "0b10111101101000001011100110101100";
        ram[98] = "0b00111110001010011111000000100100";
        ram[99] = "0b00111110010001100111100001111011";
        ram[100] = "0b10111101001011010100011000001010";
        ram[101] = "0b00111110000100011100010010101101";
        ram[102] = "0b10111100100101001011000110010010";
        ram[103] = "0b10111110011110100100100111110101";
        ram[104] = "0b10111100101010001100011110111011";
        ram[105] = "0b00111101100010001000000001110011";
        ram[106] = "0b10111110010000000111010010000100";
        ram[107] = "0b10111100001011011100101001100000";
        ram[108] = "0b00111101100000000110100001001100";
        ram[109] = "0b00111110000010110001110101010010";
        ram[110] = "0b00111101000000111011001101100011";
        ram[111] = "0b10111110000100001000110011110011";
        ram[112] = "0b00111100110010100000100011010000";
        ram[113] = "0b10111110000111011000011100000110";
        ram[114] = "0b00111101011010111110011100011101";
        ram[115] = "0b00111101000001110110100000001110";
        ram[116] = "0b10111101101000001100110010001111";
        ram[117] = "0b00111110011000100110001000111110";
        ram[118] = "0b10111110010011110011001111110011";
        ram[119] = "0b00111100110100100100101011110110";
        ram[120] = "0b10111101101010111111001111111000";
        ram[121] = "0b00111100111111101100100110000110";
        ram[122] = "0b10111101011011011001100101000000";
        ram[123] = "0b00111101000101111001011011001110";
        ram[124] = "0b10111101110110110010101011101010";
        ram[125] = "0b10111110010101011100101110011011";
        ram[126] = "0b10111101110111000111001000010000";
        ram[127] = "0b10111101001010110100101011000000";
        ram[128] = "0b10111101100101111100000100100101";
        ram[129] = "0b10111110100111111101100110110011";
        ram[130] = "0b10111110011010000011000000110100";
        ram[131] = "0b10111101111101000011000111000100";
        ram[132] = "0b10111110010000100011111101001011";
        ram[133] = "0b00111110001100101100000111000100";
        ram[134] = "0b00111110010011001001011000101100";
        ram[135] = "0b10111110001110111000101001000101";
        ram[136] = "0b10111101000010000101010010101111";
        ram[137] = "0b00111100000100011100000111000001";
        ram[138] = "0b00111100100101110010101100101010";
        ram[139] = "0b10111101001110110111101100110111";
        ram[140] = "0b00111101111111011000111010000111";
        ram[141] = "0b10111110100011000011111010110000";
        ram[142] = "0b10111101101111110011111010001110";
        ram[143] = "0b10111110001101101100000110011011";
        ram[144] = "0b10111110010101110111110101100101";
        ram[145] = "0b00111101000010100101001110100100";
        ram[146] = "0b10111110000001101111010000011110";
        ram[147] = "0b10111100100100100010101111011000";
        ram[148] = "0b10111110001010011110111110101111";
        ram[149] = "0b00111101111100110011000001000000";
        ram[150] = "0b10111110101001011001001011010101";
        ram[151] = "0b00111110000101100001111100110000";
        ram[152] = "0b00111110000011011000000111000110";
        ram[153] = "0b10111011100101001000011101110101";
        ram[154] = "0b00111110000010011000000101111101";
        ram[155] = "0b10111110100100010001000100110010";
        ram[156] = "0b10111110010100010101100111111000";
        ram[157] = "0b10111110011110111101010001001011";
        ram[158] = "0b10111110000100011010001111101000";
        ram[159] = "0b00111101000010010010100110110101";
        ram[160] = "0b00111110010000011001011010000110";
        ram[161] = "0b10111101110110101100100001011101";
        ram[162] = "0b00111101111111000011100110001000";
        ram[163] = "0b10111101100000011000001001111010";
        ram[164] = "0b10111110000101101010000100000100";
        ram[165] = "0b10111011111110100000001011100100";
        ram[166] = "0b10111110000001111001110001100100";
        ram[167] = "0b00111101110110010101110001110001";
        ram[168] = "0b10111101011001000010011011000000";
        ram[169] = "0b00111110010100010011110111110111";
        ram[170] = "0b00111101100011110001010000110110";
        ram[171] = "0b00111110001100111110000010100111";
        ram[172] = "0b10111110001001010011010011110100";
        ram[173] = "0b00111110000100001011010111101000";
        ram[174] = "0b10111101100101110111011111111011";
        ram[175] = "0b10111101010101010111101110101000";
        ram[176] = "0b10111101100001001111000110001100";
        ram[177] = "0b10111110011101101001010111000010";
        ram[178] = "0b10111101000110000010011000110001";
        ram[179] = "0b00111110011110110110000111000111";
        ram[180] = "0b00111100001111000000001001101010";
        ram[181] = "0b10111010101001100110000001011010";
        ram[182] = "0b10111110100001011101000011100111";
        ram[183] = "0b10111110000001010110001010100000";
        ram[184] = "0b10111100101111010110111001010111";
        ram[185] = "0b10111101100101010011110100010001";
        ram[186] = "0b10111101011001001101000101110100";
        ram[187] = "0b00111100111010110111010000000110";
        ram[188] = "0b10111110001011001110001001100010";
        ram[189] = "0b10111100100100100101110100011011";
        ram[190] = "0b10111100011000110010110101000111";
        ram[191] = "0b00111101111001110100010100010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weisc4) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weisc4_ram* meminst;


SC_CTOR(conv_2_conv_2_weisc4) {
meminst = new conv_2_conv_2_weisc4_ram("conv_2_conv_2_weisc4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weisc4() {
    delete meminst;
}


};//endmodule
#endif
