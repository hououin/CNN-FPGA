// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiwdI_H__
#define __conv_2_conv_2_weiwdI_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiwdI_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiwdI_ram) {
        ram[0] = "0b10111110011001100011111011110001";
        ram[1] = "0b00111110000111001110100110101110";
        ram[2] = "0b00111101010101110011111100100011";
        ram[3] = "0b10111100100111111110000110010011";
        ram[4] = "0b10111101101101111001001100110110";
        ram[5] = "0b10111101111011101111000001100111";
        ram[6] = "0b10111101001010110111110111011011";
        ram[7] = "0b00111100110011010001000111010011";
        ram[8] = "0b10111110100100010101101011000010";
        ram[9] = "0b10111101000101100111000111110000";
        ram[10] = "0b10111110100101011101001101100111";
        ram[11] = "0b00111110010110010101010110011100";
        ram[12] = "0b00111101110101101000000110001000";
        ram[13] = "0b00111011110110011101010001011110";
        ram[14] = "0b10111011011011111100111100010000";
        ram[15] = "0b10111110101000010001001001101000";
        ram[16] = "0b00111101111110100011010110111011";
        ram[17] = "0b10111100110110110110000101011000";
        ram[18] = "0b00111110001110111011010100011100";
        ram[19] = "0b00111101110100110011011110100110";
        ram[20] = "0b00111110001001111100100011101100";
        ram[21] = "0b10111110000101011010101101101010";
        ram[22] = "0b10111101011000101011110000111001";
        ram[23] = "0b00111101100001111100111110101100";
        ram[24] = "0b10111101100000010101111000111110";
        ram[25] = "0b10111110101100010000100100111110";
        ram[26] = "0b10111110101101100110111110101000";
        ram[27] = "0b00111110011011110011100011010010";
        ram[28] = "0b10111101100111010101011111010000";
        ram[29] = "0b10111110011011101000000000001000";
        ram[30] = "0b00111110000101100101110110100110";
        ram[31] = "0b10111110010110001110110101101010";
        ram[32] = "0b00111100111100000110001100011010";
        ram[33] = "0b00111110010010110010100010000100";
        ram[34] = "0b00111010101010010011101000110000";
        ram[35] = "0b00111110001001001011101010101100";
        ram[36] = "0b10111010111001011011110100010101";
        ram[37] = "0b10111101111110100010101010100000";
        ram[38] = "0b00111101110000100001101010000000";
        ram[39] = "0b10111110100001100100000111101000";
        ram[40] = "0b00111101111100110100000011111110";
        ram[41] = "0b10111110001111011111101110100111";
        ram[42] = "0b00111110010010101111011111001100";
        ram[43] = "0b10111100100100010111101101101000";
        ram[44] = "0b00111100010000011100011110001100";
        ram[45] = "0b10111100111010101101001010110010";
        ram[46] = "0b00111110000001011100000001100010";
        ram[47] = "0b00111100100101010001010001111010";
        ram[48] = "0b00111110100000011100111101001100";
        ram[49] = "0b10111110110100100100100010111110";
        ram[50] = "0b10111110001101101001001101010101";
        ram[51] = "0b10111110010101000001111110111111";
        ram[52] = "0b10111101111111100101010111110111";
        ram[53] = "0b00111101110011011100001100111010";
        ram[54] = "0b10111110000110011001101111110101";
        ram[55] = "0b00111101100010101100001011101001";
        ram[56] = "0b00111100100011101001100111100110";
        ram[57] = "0b00111101111001100111000011001100";
        ram[58] = "0b10111101011101001001010010111101";
        ram[59] = "0b00111101111001010101001101011101";
        ram[60] = "0b00111110000111001000101010000010";
        ram[61] = "0b10111110100110011010110111111001";
        ram[62] = "0b10111101101011111101010011111011";
        ram[63] = "0b10111110010011010011000001100010";
        ram[64] = "0b10111101110110111111011010111110";
        ram[65] = "0b10111110001001001101000001010010";
        ram[66] = "0b10111110010110000111001001111110";
        ram[67] = "0b00111101100010110110101101010000";
        ram[68] = "0b10111110001001101101111010010001";
        ram[69] = "0b00111110010100000110011100101110";
        ram[70] = "0b00111101110010010011110101111010";
        ram[71] = "0b00111101101101101101111010010110";
        ram[72] = "0b10111110100010111100101001101111";
        ram[73] = "0b00111110000101010011101101111101";
        ram[74] = "0b00111110000111011010000011010111";
        ram[75] = "0b00111101010001111110100001100001";
        ram[76] = "0b10111101000111111001111101011000";
        ram[77] = "0b10111110010101101111000111101101";
        ram[78] = "0b10111110100001100111001101001000";
        ram[79] = "0b10111110010110001000000010111010";
        ram[80] = "0b10111110011110111001000011111101";
        ram[81] = "0b00111110000011110110001100110001";
        ram[82] = "0b10111110100000000100001111011110";
        ram[83] = "0b00111110001111001010111011010101";
        ram[84] = "0b10111101101101001101000010011000";
        ram[85] = "0b10111101101101001010010001111111";
        ram[86] = "0b10111110101110101011000011111110";
        ram[87] = "0b00111110100001111101110010110001";
        ram[88] = "0b10111101011111110000001011101110";
        ram[89] = "0b00111101100111001111100001110001";
        ram[90] = "0b00111101110110110011111011010011";
        ram[91] = "0b10111101101000111011101101010111";
        ram[92] = "0b10111110101101001001001001011010";
        ram[93] = "0b10111101111011000110111101000101";
        ram[94] = "0b10111110001111101101011101011110";
        ram[95] = "0b00111110001101001011101011010111";
        ram[96] = "0b00111101111011101000000010010100";
        ram[97] = "0b10111110100111110000111001001101";
        ram[98] = "0b00111101000010110100000010110011";
        ram[99] = "0b00111110001001000111011101100000";
        ram[100] = "0b00111110000011010101001010001101";
        ram[101] = "0b00111110001010110001011101101101";
        ram[102] = "0b10111101100101100101111100101100";
        ram[103] = "0b10111101111101111111100010101010";
        ram[104] = "0b00111101111100010011010100111000";
        ram[105] = "0b00111110000011010100110111100110";
        ram[106] = "0b10111101101111010000001000111011";
        ram[107] = "0b00111101001011111011110011111010";
        ram[108] = "0b00111101101110100010100001110000";
        ram[109] = "0b00111110011001110111010100110010";
        ram[110] = "0b00111100010000000010100010000100";
        ram[111] = "0b10111110000000111010101001111000";
        ram[112] = "0b00111101111000001011011010010010";
        ram[113] = "0b10111110100011000100000001000000";
        ram[114] = "0b10111110001111111011000101110011";
        ram[115] = "0b10111100011001011001111100100000";
        ram[116] = "0b10111110100111010000101001111001";
        ram[117] = "0b00111110100001100110010000010101";
        ram[118] = "0b10111101110011011100010001111101";
        ram[119] = "0b10111110101001001001010000111010";
        ram[120] = "0b10111110100000101011011110001010";
        ram[121] = "0b10111010111100110111000101011011";
        ram[122] = "0b10111100101001000010001001100011";
        ram[123] = "0b10111101000111010111000001110000";
        ram[124] = "0b10111110000110100110000100110000";
        ram[125] = "0b10111110101000111101010100011011";
        ram[126] = "0b10111101100010111001100011000101";
        ram[127] = "0b00111101100000001110001110000100";
        ram[128] = "0b00111100011111011101010011110010";
        ram[129] = "0b10111110100011101101100101010010";
        ram[130] = "0b10111110010000011101011111001001";
        ram[131] = "0b10111110000011110011100001010111";
        ram[132] = "0b10111110000110001000101001001111";
        ram[133] = "0b00111110101001111100101011001100";
        ram[134] = "0b00111011011000101101110111010101";
        ram[135] = "0b00111101101100101100011000000000";
        ram[136] = "0b10111101100100100111110100001001";
        ram[137] = "0b00111101101000011111110010011001";
        ram[138] = "0b10111011101011011100101111011010";
        ram[139] = "0b10111110001101000100010000000000";
        ram[140] = "0b00111101100100001111111011111001";
        ram[141] = "0b10111110101111100100011100100100";
        ram[142] = "0b10111101101100000000100001111101";
        ram[143] = "0b10111011001111100011101111011111";
        ram[144] = "0b10111011100101101010011011100011";
        ram[145] = "0b00111101100011111100000010000000";
        ram[146] = "0b10111110011011101111101000010010";
        ram[147] = "0b00111101000101011010101001010100";
        ram[148] = "0b10111111000100001111111001011111";
        ram[149] = "0b00111011111110011110001001110000";
        ram[150] = "0b10111110010111100110011001010001";
        ram[151] = "0b00111101100011001001001010110000";
        ram[152] = "0b10111101110111000100001101111001";
        ram[153] = "0b00111110001011010011100000001110";
        ram[154] = "0b00111110010110010001111001110100";
        ram[155] = "0b10111110010011111011110001110101";
        ram[156] = "0b10111100101001100101001011000000";
        ram[157] = "0b10111110010000100111000010000000";
        ram[158] = "0b10111110100100001100011011001100";
        ram[159] = "0b00111110010000010110111010011100";
        ram[160] = "0b10111101110110110111001011011010";
        ram[161] = "0b00111101011001110101110011110010";
        ram[162] = "0b00111101001110000110101000001100";
        ram[163] = "0b10111110011011010000100110010111";
        ram[164] = "0b10111101111001001010010111100100";
        ram[165] = "0b00111100110010000110010001011011";
        ram[166] = "0b10111100110100101100001111111000";
        ram[167] = "0b00111110001001011000011101001110";
        ram[168] = "0b10111110011011011001011011000110";
        ram[169] = "0b00111110001100010000110010111011";
        ram[170] = "0b00111100111101000010001110101000";
        ram[171] = "0b00111110001011000101001000011100";
        ram[172] = "0b10111110101001100110111110000000";
        ram[173] = "0b10111110011100010011010000001001";
        ram[174] = "0b00111101100100000111010000010110";
        ram[175] = "0b00111101101100011011100100010101";
        ram[176] = "0b10111110000000101001001011000000";
        ram[177] = "0b10111110001000101100110000100101";
        ram[178] = "0b10111101010111011100100011010011";
        ram[179] = "0b00111110001001100100101111110011";
        ram[180] = "0b10111101000111000011111100011111";
        ram[181] = "0b10111101110000010111101110010011";
        ram[182] = "0b10111110011111011100011111110010";
        ram[183] = "0b10111101101101000011000011100101";
        ram[184] = "0b00111011000101011000101010101000";
        ram[185] = "0b00111011111010001000011111010010";
        ram[186] = "0b10111101111001011111010111101110";
        ram[187] = "0b00111101110101111101001011001111";
        ram[188] = "0b10111110001110010100011110011011";
        ram[189] = "0b00111110001000000000110110100000";
        ram[190] = "0b00111101111010100001011101011000";
        ram[191] = "0b00111101111011011001100111010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiwdI) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiwdI_ram* meminst;


SC_CTOR(conv_2_conv_2_weiwdI) {
meminst = new conv_2_conv_2_weiwdI_ram("conv_2_conv_2_weiwdI_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiwdI() {
    delete meminst;
}


};//endmodule
#endif
