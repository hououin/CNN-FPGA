// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei4jc_H__
#define __conv_2_conv_2_wei4jc_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei4jc_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei4jc_ram) {
        ram[0] = "0b00111101101100011001001001111111";
        ram[1] = "0b10111101011101111101010000100000";
        ram[2] = "0b10111110000000100100110111010110";
        ram[3] = "0b00111101110011100001000001110001";
        ram[4] = "0b10111000100100001110011001001010";
        ram[5] = "0b00111101000110100100011000000111";
        ram[6] = "0b10111010011011001100011101101001";
        ram[7] = "0b10111110001001101111000111100001";
        ram[8] = "0b00111110001110000100100001011001";
        ram[9] = "0b00111101001000101010011011010011";
        ram[10] = "0b10111100010011100110111001010000";
        ram[11] = "0b10111101101101011010100000010101";
        ram[12] = "0b00111101000110001101101011011111";
        ram[13] = "0b10111101010111111110110010100110";
        ram[14] = "0b00111100110110000010010100100000";
        ram[15] = "0b00111100100101110010000010111100";
        ram[16] = "0b10111101010101001100100000100111";
        ram[17] = "0b10111101010110110100001100010101";
        ram[18] = "0b10111100100100011001010110101011";
        ram[19] = "0b10111110000110000100010011101000";
        ram[20] = "0b00111101101011110011010111100111";
        ram[21] = "0b10111110000110001111001110010101";
        ram[22] = "0b10111101011111010100100111000100";
        ram[23] = "0b00111100010000101011111101100001";
        ram[24] = "0b10111100100100000001101000110011";
        ram[25] = "0b00111101000001011011110101011101";
        ram[26] = "0b00111110000101001101011110110011";
        ram[27] = "0b10111100100010101101100011000101";
        ram[28] = "0b00111100101100100000111101010010";
        ram[29] = "0b10111100110011100101100011000101";
        ram[30] = "0b10111011111010010101001111001000";
        ram[31] = "0b10111110010010011010111011011011";
        ram[32] = "0b00111101010001111100011100000001";
        ram[33] = "0b10111110010111110101010011001100";
        ram[34] = "0b00111101101100000010010100010100";
        ram[35] = "0b00111101110101111101010000100101";
        ram[36] = "0b10111110011101011110110111001000";
        ram[37] = "0b00111101100000000011100101100000";
        ram[38] = "0b00111101011101000000000100001000";
        ram[39] = "0b00111100100000010001000000010000";
        ram[40] = "0b10111101011010110010101110000110";
        ram[41] = "0b00111110001101100010110010010001";
        ram[42] = "0b10111110000011100010111000001001";
        ram[43] = "0b00111101010001101110111010011110";
        ram[44] = "0b00111101101001000111011101000000";
        ram[45] = "0b00111101100101001101010101000111";
        ram[46] = "0b00111101101100010010100100111011";
        ram[47] = "0b00111110001001000011010011100111";
        ram[48] = "0b10111101100101100111101000100111";
        ram[49] = "0b10111110101001010010111000100000";
        ram[50] = "0b00111100000100001010001101111000";
        ram[51] = "0b00111101101001111001100011011101";
        ram[52] = "0b10111110001110010100100001100111";
        ram[53] = "0b10111110000010001100011000011111";
        ram[54] = "0b00111100101011010001000111001011";
        ram[55] = "0b10111110001010111110100010111000";
        ram[56] = "0b10111100011111101000101011100010";
        ram[57] = "0b10111101110011101011100000111011";
        ram[58] = "0b00111011110111000000100011100111";
        ram[59] = "0b00111100110011010011111001100101";
        ram[60] = "0b10111011000110001110110011111101";
        ram[61] = "0b00111101100010011100001101110100";
        ram[62] = "0b00111101010001101010110101101111";
        ram[63] = "0b10111011111001000011100101101010";
        ram[64] = "0b10111101100100110110100000111100";
        ram[65] = "0b00111101111111000110011111110101";
        ram[66] = "0b10111101000111010111010100011010";
        ram[67] = "0b10111101111001111101111110001011";
        ram[68] = "0b00111101110100000001000001110110";
        ram[69] = "0b00111101010001011101101001111101";
        ram[70] = "0b00111101110100010111100111010001";
        ram[71] = "0b10111110000101000001011111111010";
        ram[72] = "0b00111101000010011100001111001110";
        ram[73] = "0b10111101011101000010000000100010";
        ram[74] = "0b00111110000011000111011001011100";
        ram[75] = "0b10111101100001101001111110010000";
        ram[76] = "0b00111100110000001111110001000110";
        ram[77] = "0b00111101010011110111110110000110";
        ram[78] = "0b00111101111010101010011010101100";
        ram[79] = "0b00111100101101100110010100101100";
        ram[80] = "0b10111100110101101011011010000100";
        ram[81] = "0b10111101111010010111111000110000";
        ram[82] = "0b00111101100000101110011000010100";
        ram[83] = "0b00111101001101100011001000100110";
        ram[84] = "0b10111101110001000000000111101101";
        ram[85] = "0b10111101011101011010010011000011";
        ram[86] = "0b00111101110100111010011010010111";
        ram[87] = "0b10111101100110101100101001000101";
        ram[88] = "0b00111101101010101000110001100001";
        ram[89] = "0b00111101011111001101111101010011";
        ram[90] = "0b10111101101000011101001100001110";
        ram[91] = "0b10111110100101111111110011001100";
        ram[92] = "0b00111101011111011101110001010110";
        ram[93] = "0b00111101100000100110011101001110";
        ram[94] = "0b10111101110100100111111110111001";
        ram[95] = "0b10111011000111101100001001111111";
        ram[96] = "0b10111101000001111001111010110010";
        ram[97] = "0b10111101101001100000011010101010";
        ram[98] = "0b10111101100000010000111010101010";
        ram[99] = "0b00111100100001111110000110101110";
        ram[100] = "0b00111100100100110100110000100100";
        ram[101] = "0b10111101011100101100000001110100";
        ram[102] = "0b00111100100101110100000101000000";
        ram[103] = "0b10111110000110011101110000100011";
        ram[104] = "0b10111101110011100010000110110101";
        ram[105] = "0b10111011110110010110011011101111";
        ram[106] = "0b10111101000111101011011010010101";
        ram[107] = "0b10111101101111011101001111000010";
        ram[108] = "0b10111101010111010010001010100001";
        ram[109] = "0b10111100101100010010110001101100";
        ram[110] = "0b00111101011000101110111100001001";
        ram[111] = "0b00111011110101110101010000001111";
        ram[112] = "0b10111101011111001001011011010011";
        ram[113] = "0b10111110010110100110011001101100";
        ram[114] = "0b00111110000101011000111011010111";
        ram[115] = "0b00111110001001100010100000111010";
        ram[116] = "0b10111101101111011110001110001111";
        ram[117] = "0b10111101001010111110011001100001";
        ram[118] = "0b00111100001010100001100010001111";
        ram[119] = "0b10111110010110101010001100100110";
        ram[120] = "0b00111101111000111011010100100111";
        ram[121] = "0b00111100110111101100011101010000";
        ram[122] = "0b10111110011100011111010111010111";
        ram[123] = "0b10111010100100000101001000101100";
        ram[124] = "0b00111101110001110101101101011010";
        ram[125] = "0b10111101000010010110000011001101";
        ram[126] = "0b10111101111111100111001101000110";
        ram[127] = "0b10111101011100010100111101110001";
        ram[128] = "0b00111010100001010101011010001000";
        ram[129] = "0b00111110000110101011111111101101";
        ram[130] = "0b00111110000100100111010011011111";
        ram[131] = "0b10111101100000001101100100111101";
        ram[132] = "0b00111101100101111111100001000010";
        ram[133] = "0b10111101010101100010011000001001";
        ram[134] = "0b10111110000000010000100100111101";
        ram[135] = "0b10111101010001100111101011010000";
        ram[136] = "0b10111101001111101110100101000111";
        ram[137] = "0b10111110000110110100000001110110";
        ram[138] = "0b10111101111000111001001101010101";
        ram[139] = "0b10111101100000011101111111000111";
        ram[140] = "0b10111101000110110010111001011101";
        ram[141] = "0b00111101110000110000000100111010";
        ram[142] = "0b10111011000110000010011100111101";
        ram[143] = "0b00111101100000101111011101100100";
        ram[144] = "0b00111100101001001000100101000100";
        ram[145] = "0b10111101101110011011010111100100";
        ram[146] = "0b00111101100111111011110101000101";
        ram[147] = "0b10111100110001100011011100010110";
        ram[148] = "0b10111110010000110111110111010011";
        ram[149] = "0b00111101100111001001101110111010";
        ram[150] = "0b00111101001001101000101001111100";
        ram[151] = "0b10111101110101000100011111001011";
        ram[152] = "0b10111100100111101100011110101000";
        ram[153] = "0b10111101111011110101001110110111";
        ram[154] = "0b00111100001011110001001110001001";
        ram[155] = "0b00111100001110011100000000110101";
        ram[156] = "0b00111100001000110010010011111010";
        ram[157] = "0b00111101101001001001011111001001";
        ram[158] = "0b00111100101001011111000100110011";
        ram[159] = "0b10111101100111010000011110111101";
        ram[160] = "0b10111110100101001011110000011000";
        ram[161] = "0b00111110000000111101111011001000";
        ram[162] = "0b10111101110010111011101010000000";
        ram[163] = "0b10111101011100110101110111011101";
        ram[164] = "0b00111101000111100001111011001111";
        ram[165] = "0b10111101110011100101011111100111";
        ram[166] = "0b10111010111100110111100011010010";
        ram[167] = "0b10111100100000001100001110001101";
        ram[168] = "0b00111110000010011011101000010010";
        ram[169] = "0b10111101100010110001100010101011";
        ram[170] = "0b00111101101111011111111001001101";
        ram[171] = "0b10111101111010110011100000101011";
        ram[172] = "0b10111101111010100101110010110110";
        ram[173] = "0b10111110100011001111101100011011";
        ram[174] = "0b10111101111110011100111001001011";
        ram[175] = "0b10111110010000111101101101111011";
        ram[176] = "0b10111101100101100001111111100101";
        ram[177] = "0b00111101011100010101000101101110";
        ram[178] = "0b00111011111001000111001101011010";
        ram[179] = "0b10111100101101001101111111010101";
        ram[180] = "0b10111101010011010010110010000111";
        ram[181] = "0b00111101101001101000010010010100";
        ram[182] = "0b10111100101000001001101011010110";
        ram[183] = "0b00111101110000100100110011111100";
        ram[184] = "0b00111100110000001000110110010000";
        ram[185] = "0b10111101110111111101110110000000";
        ram[186] = "0b10111101101101101010111010101011";
        ram[187] = "0b00111100001111111011000101111010";
        ram[188] = "0b00111101110110110011100101001100";
        ram[189] = "0b00111101011111001000010011010010";
        ram[190] = "0b00111101111100111001101110110101";
        ram[191] = "0b10111100010110111011100001101100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei4jc) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei4jc_ram* meminst;


SC_CTOR(conv_2_conv_2_wei4jc) {
meminst = new conv_2_conv_2_wei4jc_ram("conv_2_conv_2_wei4jc_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei4jc() {
    delete meminst;
}


};//endmodule
#endif
