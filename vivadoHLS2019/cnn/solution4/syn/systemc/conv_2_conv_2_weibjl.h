// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibjl_H__
#define __conv_2_conv_2_weibjl_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibjl_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibjl_ram) {
        ram[0] = "0b10111101111111111000001000100011";
        ram[1] = "0b10111110000100001100010100110100";
        ram[2] = "0b10111101010100111011011010000000";
        ram[3] = "0b10111101001110011110001111010000";
        ram[4] = "0b10111101101011010010100110100110";
        ram[5] = "0b10111101110101001001111010011000";
        ram[6] = "0b10111110001101101001011000010010";
        ram[7] = "0b00111110000111101111101100101000";
        ram[8] = "0b00111010101010000111111101001000";
        ram[9] = "0b00111110000101110100011011100001";
        ram[10] = "0b10111101001110111000110101100110";
        ram[11] = "0b00111110100000101010100011100001";
        ram[12] = "0b10111110010010010101111011111111";
        ram[13] = "0b10111110101111100101000001111101";
        ram[14] = "0b10111101101110010100001010111000";
        ram[15] = "0b00111101010111110000110111110111";
        ram[16] = "0b10111110010111001100100000010100";
        ram[17] = "0b10111110100110011110100101101110";
        ram[18] = "0b00111101001000100111101001111111";
        ram[19] = "0b00111100110000000111010110001010";
        ram[20] = "0b00111110100011010000010100100000";
        ram[21] = "0b10111111000000110000000010101100";
        ram[22] = "0b10111110100101101001110111000000";
        ram[23] = "0b00111110000001110100001011110100";
        ram[24] = "0b10111110100010110001101110100010";
        ram[25] = "0b00111110000001100001010000111101";
        ram[26] = "0b10111101000111011010010000010001";
        ram[27] = "0b00111110000001101110111101111100";
        ram[28] = "0b10111110100110101111111110111110";
        ram[29] = "0b10111110001011101100101010111100";
        ram[30] = "0b00111101011011000110100100000111";
        ram[31] = "0b10111101101111110111010001010100";
        ram[32] = "0b00111101100010100110110100100000";
        ram[33] = "0b00111110011111101011001000001111";
        ram[34] = "0b00111100100010011000000001010110";
        ram[35] = "0b10111101010011110111100110111010";
        ram[36] = "0b00111100101101001111111011110100";
        ram[37] = "0b00111110000001111010001101010011";
        ram[38] = "0b10111100111111110011000100101100";
        ram[39] = "0b10111100100001110111111011110001";
        ram[40] = "0b10111101100111110101111010101111";
        ram[41] = "0b00111110000001010100011000000001";
        ram[42] = "0b10111101111000001111111011001110";
        ram[43] = "0b00111101011001110001110010110100";
        ram[44] = "0b00111101000100011101010011100111";
        ram[45] = "0b10111110010010110011011011010000";
        ram[46] = "0b10111110000010000001111000101110";
        ram[47] = "0b10111100111011001110111010101101";
        ram[48] = "0b00111101101100010101100011100010";
        ram[49] = "0b10111101100010010000110110010011";
        ram[50] = "0b10111110110100000001001000101110";
        ram[51] = "0b10111101001000000101100111000100";
        ram[52] = "0b10111101111001011010110000010010";
        ram[53] = "0b10111101111011000101000110001000";
        ram[54] = "0b10111110100110010011011001011011";
        ram[55] = "0b10111101100110111110010001011001";
        ram[56] = "0b10111110000001100011111110001001";
        ram[57] = "0b00111110010010010011111110001011";
        ram[58] = "0b10111110010010110101110000111100";
        ram[59] = "0b10111100111000100101110001001001";
        ram[60] = "0b10111110011011010010111011100000";
        ram[61] = "0b00111011100111100000101110000110";
        ram[62] = "0b00111101000101010001011111010010";
        ram[63] = "0b00111101100110111110010010110001";
        ram[64] = "0b10111100100011111110100110000111";
        ram[65] = "0b10111110010101101100011100010001";
        ram[66] = "0b10111110100011001100110000000000";
        ram[67] = "0b00111110100011001110100000100110";
        ram[68] = "0b10111110110010011101110111111000";
        ram[69] = "0b10111101100101111110000011110001";
        ram[70] = "0b10111110011100110000000101100111";
        ram[71] = "0b00111100111011100111010101011100";
        ram[72] = "0b10111110001100011000111011010000";
        ram[73] = "0b00111101100000010000101001110100";
        ram[74] = "0b00111101000010011001010000010110";
        ram[75] = "0b00111101101100001101010001000100";
        ram[76] = "0b10111110011100101000001111111100";
        ram[77] = "0b10111110100111001000100110000011";
        ram[78] = "0b10111101110011111100010101000111";
        ram[79] = "0b10111101110011101000001110100110";
        ram[80] = "0b10111101100011111100111100001001";
        ram[81] = "0b00111101111001100100110000100011";
        ram[82] = "0b00111101101010101011011010101010";
        ram[83] = "0b00111101111111000000111001111011";
        ram[84] = "0b00111101110110000111101111100100";
        ram[85] = "0b10111110111101100010011000110011";
        ram[86] = "0b10111110011000101010001110110110";
        ram[87] = "0b10111101010101111000000101101111";
        ram[88] = "0b10111110011110001101011101001010";
        ram[89] = "0b10111110100011000010000110000100";
        ram[90] = "0b00111101110000000110000000111101";
        ram[91] = "0b10111101111001101010011101101110";
        ram[92] = "0b00111100101110111111000101111111";
        ram[93] = "0b10111101001110111000010110100001";
        ram[94] = "0b10111100101001001001000000011000";
        ram[95] = "0b00111110100101001000110011001100";
        ram[96] = "0b00111101111010010110100011101111";
        ram[97] = "0b10111101100110000010100101000111";
        ram[98] = "0b00111101110001001010100001111011";
        ram[99] = "0b10111101111110000000011001110100";
        ram[100] = "0b10111110100101101100001000100100";
        ram[101] = "0b10111101000001011110000001001101";
        ram[102] = "0b10111110010011100100011011110000";
        ram[103] = "0b10111110100100011001010000100000";
        ram[104] = "0b10111101111010110010100011010111";
        ram[105] = "0b00111010000110000101111100110000";
        ram[106] = "0b10111110001111000011100011110001";
        ram[107] = "0b10111101000110111100001100011001";
        ram[108] = "0b00111110000100100101101111111101";
        ram[109] = "0b00111110011001011000110001001100";
        ram[110] = "0b00111101101011001001000101010000";
        ram[111] = "0b10111101111011111100110010100111";
        ram[112] = "0b10111100111010110001110101101101";
        ram[113] = "0b10111100101000011101101011110010";
        ram[114] = "0b10111110100011101110110110001101";
        ram[115] = "0b10111101100011111011000101011100";
        ram[116] = "0b00111110001110011101011101011110";
        ram[117] = "0b10111110010110001011010011011011";
        ram[118] = "0b10111110011101000111101110100110";
        ram[119] = "0b10111110101101010001110110011000";
        ram[120] = "0b00111100110101001000100110100000";
        ram[121] = "0b00111101101011010010110011011110";
        ram[122] = "0b10111110101111110100011011110000";
        ram[123] = "0b10111101010000100100000110110111";
        ram[124] = "0b10111110000011110011100101010011";
        ram[125] = "0b10111101101011001000110111000001";
        ram[126] = "0b10111101011101001100010110000011";
        ram[127] = "0b10111101010111011000010000111101";
        ram[128] = "0b00111101111000000101011100000111";
        ram[129] = "0b10111101000111110010010111010110";
        ram[130] = "0b10111110010011011111011001000011";
        ram[131] = "0b00111110000110101111011011001000";
        ram[132] = "0b10111110101011010000000010010111";
        ram[133] = "0b00111110100010110011101110100001";
        ram[134] = "0b00111100010110101100010011100000";
        ram[135] = "0b00111101111011010110000011111011";
        ram[136] = "0b00111101110110100101110111010111";
        ram[137] = "0b10111011100011010100001101011110";
        ram[138] = "0b10111101100000001110000001001110";
        ram[139] = "0b10111110001000110000101100001111";
        ram[140] = "0b10111101000000101110010110001101";
        ram[141] = "0b10111110100000110010000001111100";
        ram[142] = "0b00111101110000111100101011111101";
        ram[143] = "0b00111101111010101111100010100100";
        ram[144] = "0b00111110000101000011000011000010";
        ram[145] = "0b00111110100001011011001010001011";
        ram[146] = "0b00111100111100010111001010100100";
        ram[147] = "0b10111100111011110110000101010101";
        ram[148] = "0b10111110010000111101001011011111";
        ram[149] = "0b10111111000111100111111111101000";
        ram[150] = "0b10111101101001110100011000100001";
        ram[151] = "0b10111101111001011100111100011011";
        ram[152] = "0b10111110000111100101011110001101";
        ram[153] = "0b10111100010001001001110101010000";
        ram[154] = "0b00111110000100000111111110110111";
        ram[155] = "0b00111110001100111010011011110100";
        ram[156] = "0b00111101011101110110001000011011";
        ram[157] = "0b10111101100110011101001110110011";
        ram[158] = "0b10111101100010101110100100111001";
        ram[159] = "0b10111100001010101010101101111110";
        ram[160] = "0b00111110000000111111011011101110";
        ram[161] = "0b00111101011101011111001101011010";
        ram[162] = "0b00111101110110101011001010100000";
        ram[163] = "0b10111110100111001100001100100101";
        ram[164] = "0b10111110100110010000111011010101";
        ram[165] = "0b10111110110001110011010011000110";
        ram[166] = "0b10111110010110110001110001111110";
        ram[167] = "0b00111110011010000110101111000100";
        ram[168] = "0b10111110110001000001110010000001";
        ram[169] = "0b00111110001111100111110100111010";
        ram[170] = "0b10111101100101101110111011001010";
        ram[171] = "0b00111110000001001101101100001111";
        ram[172] = "0b10111110110110000010101101000111";
        ram[173] = "0b00111101101010011001110011001000";
        ram[174] = "0b00111110000011001000100010110001";
        ram[175] = "0b10111100000011110100011110011011";
        ram[176] = "0b00111101000110100010101010100010";
        ram[177] = "0b00111101100101001010001111100110";
        ram[178] = "0b10111110001100001100110001001010";
        ram[179] = "0b10111101101011010000011110100100";
        ram[180] = "0b00111101111101100001001001110001";
        ram[181] = "0b10111101101000010110000111010110";
        ram[182] = "0b10111110101001100100101001100110";
        ram[183] = "0b10111100111010000000101011010001";
        ram[184] = "0b00111110100000110100100011001101";
        ram[185] = "0b10111101110011111111000011001001";
        ram[186] = "0b10111110100100011101000100010010";
        ram[187] = "0b10111101110111110011011100001010";
        ram[188] = "0b10111101101110010111000001101110";
        ram[189] = "0b10111101111101000011110010100111";
        ram[190] = "0b00111100110111011101000100101100";
        ram[191] = "0b00111110000000000100111110010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibjl) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibjl_ram* meminst;


SC_CTOR(conv_2_conv_2_weibjl) {
meminst = new conv_2_conv_2_weibjl_ram("conv_2_conv_2_weibjl_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibjl() {
    delete meminst;
}


};//endmodule
#endif
