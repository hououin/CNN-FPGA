// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei9j0_H__
#define __conv_2_conv_2_wei9j0_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei9j0_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei9j0_ram) {
        ram[0] = "0b00111101100100001110010011110110";
        ram[1] = "0b10111110000001110110101101000000";
        ram[2] = "0b10111110011001000010110111001101";
        ram[3] = "0b00111110000100010001101001111100";
        ram[4] = "0b00111101011000001101011111010000";
        ram[5] = "0b00111101011110001011111010110111";
        ram[6] = "0b00111010101100010001101111111010";
        ram[7] = "0b10111110000011001011101100000010";
        ram[8] = "0b00111101010110000111111001010100";
        ram[9] = "0b00111101010010010100010011110110";
        ram[10] = "0b00111100111110110100010000001100";
        ram[11] = "0b10111100111101000010100001101100";
        ram[12] = "0b00111100110010010110101001101010";
        ram[13] = "0b10111101000010110011110011010010";
        ram[14] = "0b10111100111010101111000011110110";
        ram[15] = "0b00111101100101101110000000111011";
        ram[16] = "0b10111100010110000000011110110000";
        ram[17] = "0b00111100101111000011001100110000";
        ram[18] = "0b10111101001101000010101110011000";
        ram[19] = "0b00111101011001111111011100010011";
        ram[20] = "0b10111101000101101011110101001000";
        ram[21] = "0b10111110001110111110011111010110";
        ram[22] = "0b10111110000001001100101111000100";
        ram[23] = "0b10111101101101101011011100011111";
        ram[24] = "0b00111101110110000110111001111111";
        ram[25] = "0b00111101011111101000000100101011";
        ram[26] = "0b00111100000111011011000001111001";
        ram[27] = "0b00111101100110010011011100001011";
        ram[28] = "0b10111101100110010111000001011001";
        ram[29] = "0b00111101010100001110101001101111";
        ram[30] = "0b10111100101000001000011101001101";
        ram[31] = "0b10111110010101111001011000101011";
        ram[32] = "0b00111100011100001110011111111110";
        ram[33] = "0b10111110000001111001100101100111";
        ram[34] = "0b00111101010001101111111101110110";
        ram[35] = "0b00111101000101011010100001101000";
        ram[36] = "0b10111110000100011011010100000011";
        ram[37] = "0b00111100101101001110001001010000";
        ram[38] = "0b00111100111111111010001001110111";
        ram[39] = "0b00111110001110111100101010101100";
        ram[40] = "0b00111101101011011101011101011100";
        ram[41] = "0b00111110000000100011001001010111";
        ram[42] = "0b00111101010100001110001101110111";
        ram[43] = "0b00111101111000110010100101010101";
        ram[44] = "0b10111101001011100100010001111100";
        ram[45] = "0b00111101111110111101100001111111";
        ram[46] = "0b10111101110101000110001011101011";
        ram[47] = "0b10111100110100000111110001001110";
        ram[48] = "0b00111101001001011011101110000010";
        ram[49] = "0b10111101011001100011001001001011";
        ram[50] = "0b00111100100110110111001110010000";
        ram[51] = "0b00111101000101010110001001110110";
        ram[52] = "0b10111110001100101111000010010111";
        ram[53] = "0b10111100110100010000101100000000";
        ram[54] = "0b10111101000000100100011100100110";
        ram[55] = "0b10111101110010101100001011010000";
        ram[56] = "0b10111101011011011000110110010111";
        ram[57] = "0b10111101101001111010011001000000";
        ram[58] = "0b00111100100101110110011101101111";
        ram[59] = "0b00111101100001001010111011100101";
        ram[60] = "0b00111011111001000001110000100011";
        ram[61] = "0b10111011111110110100010101011110";
        ram[62] = "0b00111101000010000101011101100000";
        ram[63] = "0b00111110000100110100110111010010";
        ram[64] = "0b10111101000110110001101100110100";
        ram[65] = "0b00111101111011110001101100110001";
        ram[66] = "0b00111100001111001000001111001000";
        ram[67] = "0b10111110000001111111101011010001";
        ram[68] = "0b00111101000010011110011111001101";
        ram[69] = "0b00111101100010110100110110011011";
        ram[70] = "0b00111100110111011010011110100001";
        ram[71] = "0b10111101111111011010011000101110";
        ram[72] = "0b00111110001001101100000010100101";
        ram[73] = "0b00111100001111110111001100010011";
        ram[74] = "0b10111100101000000000010000011110";
        ram[75] = "0b10111101001111100111101000110111";
        ram[76] = "0b10111101000000011011101101000110";
        ram[77] = "0b00111100001011000110100010001110";
        ram[78] = "0b00111101000001100011001111001101";
        ram[79] = "0b00111100100000000001110110100100";
        ram[80] = "0b10111101110110101110011100101110";
        ram[81] = "0b10111101000011001000001100011110";
        ram[82] = "0b10111101001101100000101011010110";
        ram[83] = "0b10111101100000111000000111101111";
        ram[84] = "0b10111101111101110011011011001111";
        ram[85] = "0b10111101100001101001110001000001";
        ram[86] = "0b00111100010010000011001100001101";
        ram[87] = "0b10111100100011111010110110010110";
        ram[88] = "0b10111101001110000000001010100101";
        ram[89] = "0b10111101010000101110001100000011";
        ram[90] = "0b10111100010111000010000110001001";
        ram[91] = "0b10111110001101111110111011100101";
        ram[92] = "0b00111101000000110001111010100101";
        ram[93] = "0b00111101101011100110010001011001";
        ram[94] = "0b10111100111111000011100101100110";
        ram[95] = "0b10111101111100100011010101111110";
        ram[96] = "0b10111010110111001100010110111101";
        ram[97] = "0b10111101011100111001011110001101";
        ram[98] = "0b00111101000111110100001001010111";
        ram[99] = "0b00111101011100011111011110001010";
        ram[100] = "0b00111101011011010101011001101000";
        ram[101] = "0b10111101011101110011011011000001";
        ram[102] = "0b00111101101001011101010100111000";
        ram[103] = "0b10111101100101111101101101000010";
        ram[104] = "0b00111101001011100010101001110001";
        ram[105] = "0b00111101100001100101111011101000";
        ram[106] = "0b00111101100000111111000011011010";
        ram[107] = "0b10111100000100100010101000100011";
        ram[108] = "0b10111100100010110011011100100001";
        ram[109] = "0b00111011001001011110000001111100";
        ram[110] = "0b10111101100101010111110101010010";
        ram[111] = "0b10111101000000110011001110001001";
        ram[112] = "0b00111100110110000101111000111011";
        ram[113] = "0b10111100100100100111101011001110";
        ram[114] = "0b00111101000010001110101000011010";
        ram[115] = "0b00111101111010000110011110001101";
        ram[116] = "0b10111110000011100101000010011110";
        ram[117] = "0b10111110011101100101010110010111";
        ram[118] = "0b00111101001111101111111110111001";
        ram[119] = "0b10111110000010101100101001110101";
        ram[120] = "0b00111011010011010111000101110001";
        ram[121] = "0b00111101000110000011100001101001";
        ram[122] = "0b00111101100000010111100000111000";
        ram[123] = "0b10111100010100011101010000111111";
        ram[124] = "0b10111100111000001001000110000101";
        ram[125] = "0b10111101100000010010101010100110";
        ram[126] = "0b00111101100110001110100110110111";
        ram[127] = "0b00111100100110011010000101111111";
        ram[128] = "0b10111100110001101100000111010010";
        ram[129] = "0b00111110000011001111100010011000";
        ram[130] = "0b10111100100100111011000010010011";
        ram[131] = "0b10111101101010111110001000100101";
        ram[132] = "0b10111101100101100001011010111100";
        ram[133] = "0b10111110000011110101111100111100";
        ram[134] = "0b10111101111001010011100010101100";
        ram[135] = "0b10111101001100110110101100000001";
        ram[136] = "0b00111101100010011111010110101001";
        ram[137] = "0b10111101101110010100101111110100";
        ram[138] = "0b10111101101010000100110101101100";
        ram[139] = "0b10111101101110111111000101111000";
        ram[140] = "0b10111101010110111101011100011101";
        ram[141] = "0b00111101111010100111100111101101";
        ram[142] = "0b00111101001011010100011011110101";
        ram[143] = "0b10111101110111000111001100010101";
        ram[144] = "0b10111101010010100010110001000110";
        ram[145] = "0b10111100111010010111001100010111";
        ram[146] = "0b10111100010111101000101111100101";
        ram[147] = "0b10111101011010010111101110010000";
        ram[148] = "0b10111110100001111111111000100110";
        ram[149] = "0b10111101010101101111000101111000";
        ram[150] = "0b00111110000111001111010011010011";
        ram[151] = "0b10111110001011110000001011011001";
        ram[152] = "0b00111101001101100101110111000100";
        ram[153] = "0b00111101100000001011111011000101";
        ram[154] = "0b10111100110100101101001010000011";
        ram[155] = "0b10111101101111010000101011110111";
        ram[156] = "0b10111011110110000001101101000111";
        ram[157] = "0b10111101001001100100000010001001";
        ram[158] = "0b00111101100111010000001001110001";
        ram[159] = "0b00111100010101000010011111110101";
        ram[160] = "0b10111110101011011001011100000011";
        ram[161] = "0b10111100000111111001110110101110";
        ram[162] = "0b10111101110001110101100101001100";
        ram[163] = "0b10111101001110100110011100101011";
        ram[164] = "0b00111101101011111110011010011111";
        ram[165] = "0b10111101101101110111011100011010";
        ram[166] = "0b10111100101000000000110001001110";
        ram[167] = "0b10111110000011101010010101000011";
        ram[168] = "0b00111101010110001100110010001010";
        ram[169] = "0b10111100011101110100100100100011";
        ram[170] = "0b10111100111101000010100110011001";
        ram[171] = "0b00111100100111001100010110001001";
        ram[172] = "0b10111101011011110100101010111111";
        ram[173] = "0b10111110010011100000000111110101";
        ram[174] = "0b10111101101101100101100001111100";
        ram[175] = "0b10111101100011000010100101101000";
        ram[176] = "0b00111110000000111100110000000010";
        ram[177] = "0b10111101100001110010100111100010";
        ram[178] = "0b00111101101011110011011000001110";
        ram[179] = "0b10111110000110010011100000101010";
        ram[180] = "0b00111100100010011100011011010011";
        ram[181] = "0b00111100011010010011111111111100";
        ram[182] = "0b10111101011001100100001011110111";
        ram[183] = "0b00111101001100001001111101111101";
        ram[184] = "0b00111100110010001110000111101111";
        ram[185] = "0b00111101100110111111100111001001";
        ram[186] = "0b00111100110101111100000010101110";
        ram[187] = "0b00111100011001011011101011111010";
        ram[188] = "0b00111101110101100101011100110000";
        ram[189] = "0b00111101001001101100000001011100";
        ram[190] = "0b10111101100000001011000111011001";
        ram[191] = "0b10111100011011000010010101100100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei9j0) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei9j0_ram* meminst;


SC_CTOR(conv_2_conv_2_wei9j0) {
meminst = new conv_2_conv_2_wei9j0_ram("conv_2_conv_2_wei9j0_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei9j0() {
    delete meminst;
}


};//endmodule
#endif
