// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiWhU_H__
#define __conv_2_conv_2_weiWhU_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiWhU_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiWhU_ram) {
        ram[0] = "0b10111101000010110111011101111110";
        ram[1] = "0b00111100001011100111101011010101";
        ram[2] = "0b10111101111001110010011010001010";
        ram[3] = "0b00111110000110010011100010000011";
        ram[4] = "0b10111101100110011111001000100100";
        ram[5] = "0b10111100000010001110010000001001";
        ram[6] = "0b10111101100011011101000110111001";
        ram[7] = "0b00111110000000010111100010110101";
        ram[8] = "0b00111101100110111000111001000000";
        ram[9] = "0b00111101100111110010101111101010";
        ram[10] = "0b10111101010011101001000111101110";
        ram[11] = "0b00111101110011010010010010110010";
        ram[12] = "0b10111110000001100100011101000010";
        ram[13] = "0b10111101111111110101111110111111";
        ram[14] = "0b00111101111110110001110011101110";
        ram[15] = "0b00111110000101000111101111001100";
        ram[16] = "0b00111101000100111101110110000010";
        ram[17] = "0b10111100011011001001010011101111";
        ram[18] = "0b10111100000110110100110001011110";
        ram[19] = "0b00111100101011010001110101101100";
        ram[20] = "0b00111101111110101110110101000111";
        ram[21] = "0b10111101011001111001000011100010";
        ram[22] = "0b10111110001100111110010000001000";
        ram[23] = "0b00111101111000110101010110011100";
        ram[24] = "0b10111101110010000111101000101110";
        ram[25] = "0b00111110011100111111011110011010";
        ram[26] = "0b00111101100111100001010011001000";
        ram[27] = "0b10111110100011001011100011001101";
        ram[28] = "0b00111110011010111110011000110111";
        ram[29] = "0b10111110001111101101101011111101";
        ram[30] = "0b10111110000001111111010001010000";
        ram[31] = "0b00111110011010101100111010111111";
        ram[32] = "0b00111100100110010000001011011000";
        ram[33] = "0b10111110010101111100111111010000";
        ram[34] = "0b00111101110010101011101110100100";
        ram[35] = "0b00111101001110100011100010000011";
        ram[36] = "0b00111110000000110011110101000111";
        ram[37] = "0b10111101110110101101001111110000";
        ram[38] = "0b10111110011010111101101110100111";
        ram[39] = "0b10111101111011010100100100111011";
        ram[40] = "0b10111110010100110111100110010100";
        ram[41] = "0b00111101100011010011100011010110";
        ram[42] = "0b00111101100011000001000100000000";
        ram[43] = "0b00111110011110100011011001010001";
        ram[44] = "0b00111101101101011110001110100010";
        ram[45] = "0b00111101110100011001010111111110";
        ram[46] = "0b10111101101000111000101000011011";
        ram[47] = "0b10111100100011000000100011110000";
        ram[48] = "0b00111100011110100010011001100111";
        ram[49] = "0b10111110001101010111100110100001";
        ram[50] = "0b10111101111111001011010010000111";
        ram[51] = "0b10111110101000001001010011100110";
        ram[52] = "0b10111101101011100110001011100110";
        ram[53] = "0b10111101010101110111110101111100";
        ram[54] = "0b10111110101111000100101001001010";
        ram[55] = "0b10111110101100101001100001101010";
        ram[56] = "0b00111101110001110100111011010100";
        ram[57] = "0b00111101110101011000001110111100";
        ram[58] = "0b10111110001000111001111000111111";
        ram[59] = "0b00111100100111000010100010111011";
        ram[60] = "0b10111110011111110011111000001100";
        ram[61] = "0b00111110000011011001100111001001";
        ram[62] = "0b00111101111000001010001111110100";
        ram[63] = "0b10111011111001110010011011110111";
        ram[64] = "0b00111101111111000101110010001011";
        ram[65] = "0b10111100011101100000110100001011";
        ram[66] = "0b10111101101111100001100000100101";
        ram[67] = "0b00111101100000010000101101110111";
        ram[68] = "0b10111110000011010011110000101101";
        ram[69] = "0b00111101001001011011111011100101";
        ram[70] = "0b10111110000100100000100011011010";
        ram[71] = "0b00111011010111000001010010111000";
        ram[72] = "0b10111101110010011001011101010101";
        ram[73] = "0b00111101010110011000111010111110";
        ram[74] = "0b10111110001100100010011001110100";
        ram[75] = "0b10111101110001110100010010011000";
        ram[76] = "0b10111110001100101001111011011000";
        ram[77] = "0b10111110000001100011101011100011";
        ram[78] = "0b10111110000100101101010110111111";
        ram[79] = "0b10111110000011100100110000100000";
        ram[80] = "0b00111101100000101000101011010011";
        ram[81] = "0b00111101101010111111000111101111";
        ram[82] = "0b00111110001101011001111001001111";
        ram[83] = "0b00111110000001000000111111011101";
        ram[84] = "0b00111101101110011000000110010110";
        ram[85] = "0b10111101001011011100000110111000";
        ram[86] = "0b00111101111110011101001001010110";
        ram[87] = "0b10111101001011100110110100110000";
        ram[88] = "0b10111100100001111010111010111011";
        ram[89] = "0b10111100001000011010111110001100";
        ram[90] = "0b10111101011101111010110100001111";
        ram[91] = "0b00111101001110011010110011011100";
        ram[92] = "0b00111101101111110101110111111011";
        ram[93] = "0b10111110110001000001101100111111";
        ram[94] = "0b10111110010001001001011010011111";
        ram[95] = "0b00111110001101110011000101000001";
        ram[96] = "0b00111101011000100101101100000101";
        ram[97] = "0b00111110001111011010100100001110";
        ram[98] = "0b00111101110101101111110111100001";
        ram[99] = "0b10111110010010101000111101001110";
        ram[100] = "0b00111101000101110010011101111111";
        ram[101] = "0b10111110100101000010011010111111";
        ram[102] = "0b10111110010000110111010010000111";
        ram[103] = "0b10111101101010001100110100111100";
        ram[104] = "0b00111101001000100110110111111001";
        ram[105] = "0b10111101011011101111110100111111";
        ram[106] = "0b00111101100101100011101000101011";
        ram[107] = "0b00111100110111111000101001001111";
        ram[108] = "0b10111110100101010101000010000011";
        ram[109] = "0b10111101111001111011101100110011";
        ram[110] = "0b10111110100001111100101101101011";
        ram[111] = "0b10111110010100111011101000001100";
        ram[112] = "0b10111110000100011000110010110100";
        ram[113] = "0b00111100101101101001100111111001";
        ram[114] = "0b10111100110011010000101000010110";
        ram[115] = "0b10111110100110001011001100010111";
        ram[116] = "0b00111101001010101100001100100000";
        ram[117] = "0b10111101100111010100111111011101";
        ram[118] = "0b10111101010000011001110010100000";
        ram[119] = "0b00111110001001001110011100011011";
        ram[120] = "0b00111110011011111010110101010011";
        ram[121] = "0b00111100011101010001000001000011";
        ram[122] = "0b00111100110011101010101010100001";
        ram[123] = "0b00111101101010111011010011110000";
        ram[124] = "0b10111101111101000111100111011010";
        ram[125] = "0b00111110001010011000101100001010";
        ram[126] = "0b00111100111001001111100111011100";
        ram[127] = "0b00111100100111000110010111111101";
        ram[128] = "0b10111110001010101110111000101011";
        ram[129] = "0b10111110010000000100011100101111";
        ram[130] = "0b10111110101010010100100101100101";
        ram[131] = "0b00111101010100110101000011010111";
        ram[132] = "0b10111101111111010100011100001001";
        ram[133] = "0b10111110110011110110010011001011";
        ram[134] = "0b10111110010010101101101011111000";
        ram[135] = "0b00111101001001110110011011011111";
        ram[136] = "0b00111100110111011001101111100110";
        ram[137] = "0b10111111000011011111100010000010";
        ram[138] = "0b10111110011001011100101101100011";
        ram[139] = "0b10111110100111001010010101011101";
        ram[140] = "0b10111110100001100101000100100001";
        ram[141] = "0b10111101110101111110111100000010";
        ram[142] = "0b10111100010110011100100110101000";
        ram[143] = "0b10111101101101001100110010001011";
        ram[144] = "0b10111110010111100011111100001100";
        ram[145] = "0b10111010000101111000001000100100";
        ram[146] = "0b10111110000101001011011011000000";
        ram[147] = "0b10111110001001110000011001110101";
        ram[148] = "0b00111110001111110100110111010110";
        ram[149] = "0b10111101100011001010111101010101";
        ram[150] = "0b00111101011110110010110010001000";
        ram[151] = "0b10111110001011111001010100001110";
        ram[152] = "0b10111110100000011000011111101001";
        ram[153] = "0b10111110000111111100001000010111";
        ram[154] = "0b00111101101011000100111101010010";
        ram[155] = "0b00111101110011010001111010110000";
        ram[156] = "0b10111110000001011011001110000011";
        ram[157] = "0b10111110100010011100111111001010";
        ram[158] = "0b00111110000110000111100001110010";
        ram[159] = "0b10111100111001110110100000000100";
        ram[160] = "0b10111110100111101001000010101001";
        ram[161] = "0b00111100010011101011010101010101";
        ram[162] = "0b10111110110010011100101001110000";
        ram[163] = "0b10111101100010110011000011001011";
        ram[164] = "0b10111110010110100110110011110110";
        ram[165] = "0b10111110000101000111000001001010";
        ram[166] = "0b10111110000100001101110101101110";
        ram[167] = "0b00111110011000111011001001111100";
        ram[168] = "0b00111110001011111100111011101001";
        ram[169] = "0b10111110100110000010001100011111";
        ram[170] = "0b10111101111001011100001111010110";
        ram[171] = "0b10111101111001010000110111100110";
        ram[172] = "0b00111100101000011110001110100111";
        ram[173] = "0b00111110100110101000000111000000";
        ram[174] = "0b10111110011010100001000111010010";
        ram[175] = "0b10111110100010111010100100000101";
        ram[176] = "0b00111110010101100001111010011110";
        ram[177] = "0b00111101110100011000001111001010";
        ram[178] = "0b10111110100011101011010100011100";
        ram[179] = "0b10111110010100011110101111100101";
        ram[180] = "0b00111101100001010111101101100101";
        ram[181] = "0b00111101110110010110000100011101";
        ram[182] = "0b10111101101101111100111010010101";
        ram[183] = "0b00111100000010100011010111111001";
        ram[184] = "0b00111101110100011101101110111011";
        ram[185] = "0b00111011110001001110011111110010";
        ram[186] = "0b00111100110010000100001100101101";
        ram[187] = "0b10111110010000110111100101010111";
        ram[188] = "0b10111110010000100110011000010001";
        ram[189] = "0b00111100100110010001011110001011";
        ram[190] = "0b00111110010101010100001011000010";
        ram[191] = "0b00111110000000111101011101101011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiWhU) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiWhU_ram* meminst;


SC_CTOR(conv_2_conv_2_weiWhU) {
meminst = new conv_2_conv_2_weiWhU_ram("conv_2_conv_2_weiWhU_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiWhU() {
    delete meminst;
}


};//endmodule
#endif
