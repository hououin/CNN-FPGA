// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiPgM_H__
#define __conv_2_conv_2_weiPgM_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiPgM_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiPgM_ram) {
        ram[0] = "0b00111101000100101010110110010010";
        ram[1] = "0b00111101000101000100011001100000";
        ram[2] = "0b00111100111101110100001010011111";
        ram[3] = "0b00111101000000101110000011111100";
        ram[4] = "0b10111101111111001100001110101010";
        ram[5] = "0b00111100110000000110110001111011";
        ram[6] = "0b10111101110000011010110100000011";
        ram[7] = "0b10111100100110001111001010101000";
        ram[8] = "0b00111101111001011100010100010010";
        ram[9] = "0b10111110000101101110001011101001";
        ram[10] = "0b10111101111001110001011100101001";
        ram[11] = "0b00111101000100010101010010110010";
        ram[12] = "0b10111110001111101010110011100010";
        ram[13] = "0b10111101000010101000101101010010";
        ram[14] = "0b00111101100000111101110111011011";
        ram[15] = "0b10111011110011001000000000011100";
        ram[16] = "0b10111110100001110011000111110101";
        ram[17] = "0b00111101110000111000101011010010";
        ram[18] = "0b10110110110001000101101110100000";
        ram[19] = "0b00111101101000011010110011111101";
        ram[20] = "0b10111101100100110011011101101001";
        ram[21] = "0b10111110000001000010011010101111";
        ram[22] = "0b10111101101001001100010000101110";
        ram[23] = "0b10111100110010000110011100010101";
        ram[24] = "0b10111110011001010001101000111011";
        ram[25] = "0b10111101011101010111010100011011";
        ram[26] = "0b10111101101100111111110110110111";
        ram[27] = "0b00111110000110111001010100011011";
        ram[28] = "0b10111011110010000100110011111000";
        ram[29] = "0b10111101011101000001011101001010";
        ram[30] = "0b00111101110001111000011000001011";
        ram[31] = "0b00111110001011000111110111101101";
        ram[32] = "0b00111011110010011100001001110100";
        ram[33] = "0b10111110011101011110000010010110";
        ram[34] = "0b10111100110000000100111001110101";
        ram[35] = "0b00111110011010100010111100110011";
        ram[36] = "0b10111100100110100111111011100001";
        ram[37] = "0b10111100111101001110100000110110";
        ram[38] = "0b00111100101100111011100101110100";
        ram[39] = "0b00111100100011010010110011011000";
        ram[40] = "0b10111100110110111001011100101110";
        ram[41] = "0b10111100101100101011111100111001";
        ram[42] = "0b00111100001111111100011111110010";
        ram[43] = "0b00111101101100011010001111011011";
        ram[44] = "0b00111101101100110000101110101100";
        ram[45] = "0b10111101111011001011010010100001";
        ram[46] = "0b10111101111110100010110001000010";
        ram[47] = "0b00111101111000110100011001000101";
        ram[48] = "0b00111101101000010100011110011011";
        ram[49] = "0b10111110110010011010000000101001";
        ram[50] = "0b10111110011110001110110011000100";
        ram[51] = "0b10111100100011010011101011001000";
        ram[52] = "0b10111110100010000111100000010011";
        ram[53] = "0b00111110000100111100110111011000";
        ram[54] = "0b00111101000010011000011111000100";
        ram[55] = "0b10111101100000010101101100000110";
        ram[56] = "0b10111101000000111000101101110001";
        ram[57] = "0b00111101011000011111000001111100";
        ram[58] = "0b10111101011001000001111000111011";
        ram[59] = "0b00111110000011000100010010101000";
        ram[60] = "0b00111101001001000010010111110011";
        ram[61] = "0b10111101010110001011000000010010";
        ram[62] = "0b00111100100111000101011011011000";
        ram[63] = "0b00111101101111101011111001010110";
        ram[64] = "0b00111100000111110111101010000110";
        ram[65] = "0b10111101000011100101001110110011";
        ram[66] = "0b10111101101010001101000100010011";
        ram[67] = "0b10111101111010100100110011101111";
        ram[68] = "0b00111100100101100101011000100001";
        ram[69] = "0b10111101000110101111100011101010";
        ram[70] = "0b10111110011000111100111010110100";
        ram[71] = "0b10111101101010010110000110100110";
        ram[72] = "0b10111110001001101000000111011111";
        ram[73] = "0b00111100101010000001100000101111";
        ram[74] = "0b10111101011000010011110011000110";
        ram[75] = "0b10111100100011111011101101100111";
        ram[76] = "0b10111110000010011011000101100011";
        ram[77] = "0b10111110011101010101100011000000";
        ram[78] = "0b00111101010110111001000010100111";
        ram[79] = "0b10111101000100011101101001010010";
        ram[80] = "0b10111110100001111010011110111010";
        ram[81] = "0b10111101100100101110100011100001";
        ram[82] = "0b10111110001101011110001001101111";
        ram[83] = "0b00111101010001111101110110101101";
        ram[84] = "0b10111110010001101100000001110101";
        ram[85] = "0b10111110011011000000110111001010";
        ram[86] = "0b10111110111000111000111110111101";
        ram[87] = "0b00111110000011000111111010100010";
        ram[88] = "0b10111110010010110110110100001000";
        ram[89] = "0b00111101011111001001000110001110";
        ram[90] = "0b00111010000110001010010101100110";
        ram[91] = "0b00111101100110110101011110010001";
        ram[92] = "0b00111101100010110110000010111000";
        ram[93] = "0b00111101011101111011110101111110";
        ram[94] = "0b10111101100001101011110100111110";
        ram[95] = "0b00111110001101111111000001000010";
        ram[96] = "0b10111101101001101101101011001001";
        ram[97] = "0b10111110100110010000101001110001";
        ram[98] = "0b00111011100010110110010010001001";
        ram[99] = "0b00111101110011111000000001011011";
        ram[100] = "0b00111100101001111000011000000001";
        ram[101] = "0b00111101100001010111001011111001";
        ram[102] = "0b10111101001010010101101011010010";
        ram[103] = "0b10111100010001001110000100101100";
        ram[104] = "0b00111100110111011100000111111111";
        ram[105] = "0b10111011010110010001111000011010";
        ram[106] = "0b10111110000000000110000010110100";
        ram[107] = "0b10111011000010011001000111000100";
        ram[108] = "0b10111011111001000101000100101000";
        ram[109] = "0b00111100111011001010100000000001";
        ram[110] = "0b00111101010100101100110011110001";
        ram[111] = "0b00111101101111100000111011110001";
        ram[112] = "0b00111110001101101010011010111100";
        ram[113] = "0b10111101110101111010000101001100";
        ram[114] = "0b10111110101111100100001111111100";
        ram[115] = "0b10111100110000100100000111100110";
        ram[116] = "0b10111101101100100111001011110111";
        ram[117] = "0b00111110000111000100011011000110";
        ram[118] = "0b00111101111110111000000001111101";
        ram[119] = "0b10111110001111101111000111100011";
        ram[120] = "0b10111100111110100110110100101010";
        ram[121] = "0b00111100100011011110010001100110";
        ram[122] = "0b00111101100101001110000100101010";
        ram[123] = "0b10111101001110100011110000000101";
        ram[124] = "0b10111110101110011110101110011101";
        ram[125] = "0b10111110010101111011111101110100";
        ram[126] = "0b10111100100111110010011101100100";
        ram[127] = "0b10111101111000100111010000001101";
        ram[128] = "0b00111011010100000111011111101100";
        ram[129] = "0b00111110000001010100000100000100";
        ram[130] = "0b00111101101111011110101100011101";
        ram[131] = "0b00111100001000111010011010100100";
        ram[132] = "0b10111110110001010001001001101000";
        ram[133] = "0b00111100000101100100011110110010";
        ram[134] = "0b10111011100111101010000010101101";
        ram[135] = "0b10111100101001010011101100111101";
        ram[136] = "0b10111011011100010001101110001111";
        ram[137] = "0b00111100100010110011111111110000";
        ram[138] = "0b00111100100011110101011010010001";
        ram[139] = "0b10111110000101001111100101001010";
        ram[140] = "0b10111110000000011000010001011110";
        ram[141] = "0b10111101111111000100100110001000";
        ram[142] = "0b10111101101000011010110000101000";
        ram[143] = "0b10111110000001110100101011000000";
        ram[144] = "0b10111101001111000000111001010111";
        ram[145] = "0b00111101111000110001101100101010";
        ram[146] = "0b00111101100101111000110111001011";
        ram[147] = "0b00111101001100011011010011011000";
        ram[148] = "0b10111110010001111100010111010011";
        ram[149] = "0b00111101000111010100101110111100";
        ram[150] = "0b10111101100010000001100101011101";
        ram[151] = "0b10111110001000000111000101000111";
        ram[152] = "0b10111110100010100100010101010001";
        ram[153] = "0b10111101100000101011010000110010";
        ram[154] = "0b00111101111110100100100100101100";
        ram[155] = "0b10111110010001100100110100110101";
        ram[156] = "0b00111101000011001111000100110111";
        ram[157] = "0b00111101001111111111001001001111";
        ram[158] = "0b10111110001001101110001111110111";
        ram[159] = "0b00111110000000101010010000101111";
        ram[160] = "0b10111101110011111110001011011010";
        ram[161] = "0b10111010000100101101011100111101";
        ram[162] = "0b10111110001100001011101110101010";
        ram[163] = "0b10111110001100110101011110000110";
        ram[164] = "0b00111110000100011010010011101110";
        ram[165] = "0b10111101101010111011000011011100";
        ram[166] = "0b00111101000101111001000001111111";
        ram[167] = "0b00111101010100000001101011100101";
        ram[168] = "0b10111110000011011011000011101011";
        ram[169] = "0b10111101000001011000101111010010";
        ram[170] = "0b00111100101011101100001110011101";
        ram[171] = "0b00111101100101100000110000011011";
        ram[172] = "0b10111101101111001011100101010000";
        ram[173] = "0b10111110000101101011000000100110";
        ram[174] = "0b00111011110000000001011000010010";
        ram[175] = "0b10111100100100010100101000001110";
        ram[176] = "0b00111101101010010110000101111001";
        ram[177] = "0b10111101000011011111001010011110";
        ram[178] = "0b10111110110110100010101111000000";
        ram[179] = "0b10111011101110100100001101001100";
        ram[180] = "0b00111101110000010001100111010100";
        ram[181] = "0b10111101101011101101001001110101";
        ram[182] = "0b00111101110110111010100011101011";
        ram[183] = "0b10111100000011111100110110001001";
        ram[184] = "0b00111101000001001101011101010011";
        ram[185] = "0b00111101010101000101100001010010";
        ram[186] = "0b00111101100110101010100001001111";
        ram[187] = "0b00111101101011110110000100100001";
        ram[188] = "0b10111110110111000110001011011101";
        ram[189] = "0b10111100000101000001001000011010";
        ram[190] = "0b00111101100011110100001110011011";
        ram[191] = "0b10111101100010000010100111100010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiPgM) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiPgM_ram* meminst;


SC_CTOR(conv_2_conv_2_weiPgM) {
meminst = new conv_2_conv_2_weiPgM_ram("conv_2_conv_2_weiPgM_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiPgM() {
    delete meminst;
}


};//endmodule
#endif
