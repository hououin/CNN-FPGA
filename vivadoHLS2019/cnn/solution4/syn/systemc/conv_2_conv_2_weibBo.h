// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibBo_H__
#define __conv_2_conv_2_weibBo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibBo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibBo_ram) {
        ram[0] = "0b10111101010100110111001100110010";
        ram[1] = "0b10111110000011000010000100001000";
        ram[2] = "0b00111011100101000111111100010100";
        ram[3] = "0b10111101111010100010110001110110";
        ram[4] = "0b00111110000100100101101001100110";
        ram[5] = "0b00111101110000101001010001011110";
        ram[6] = "0b10111110001100001000111101100010";
        ram[7] = "0b00111101011110110100101010011100";
        ram[8] = "0b10111100000011011001010111010101";
        ram[9] = "0b10111100111001111100010111011100";
        ram[10] = "0b00111010111011110101001000000011";
        ram[11] = "0b10111010110100100110101010111000";
        ram[12] = "0b10111110010010110011101100000110";
        ram[13] = "0b00111101000000101100011010110010";
        ram[14] = "0b10111101010101011101101111011101";
        ram[15] = "0b00111101000110101010110010010110";
        ram[16] = "0b00111101010110111001101001010110";
        ram[17] = "0b10111101111010110111100010100000";
        ram[18] = "0b00111110010011000100001101011101";
        ram[19] = "0b10111110010100000101010101101100";
        ram[20] = "0b10111110000101110101101110011011";
        ram[21] = "0b10111011011100101001001000000111";
        ram[22] = "0b00111101110010101000011111100110";
        ram[23] = "0b00111110010100000110110011100100";
        ram[24] = "0b00111101100000100100101010111010";
        ram[25] = "0b00111011000100011101100011111010";
        ram[26] = "0b10111101111010111110111011111101";
        ram[27] = "0b10111110011100100010100111100000";
        ram[28] = "0b00111101110111111001010010001011";
        ram[29] = "0b10111110010101111011101000101100";
        ram[30] = "0b10111100100111101010101110110110";
        ram[31] = "0b10111110110000111001100011011011";
        ram[32] = "0b00111101001001111101100111100000";
        ram[33] = "0b10111101111110101101011101101000";
        ram[34] = "0b10111101001100111010011010100010";
        ram[35] = "0b10111101110100101101111011010001";
        ram[36] = "0b10111110001100110111000010010001";
        ram[37] = "0b10111101100101001001101001111101";
        ram[38] = "0b10111100100111111000110001110110";
        ram[39] = "0b00111110001100110111001010111001";
        ram[40] = "0b10111101101110110011011111010011";
        ram[41] = "0b10111101100001010110010010101110";
        ram[42] = "0b10111100101111101111001100010110";
        ram[43] = "0b10111110000101110110001000101111";
        ram[44] = "0b00111100000000111101011110101111";
        ram[45] = "0b00111101101000100111011111001100";
        ram[46] = "0b00111100100011100110111000011001";
        ram[47] = "0b10111101101100010000000000111111";
        ram[48] = "0b10111110100000001000011111010001";
        ram[49] = "0b10111110000100011000000010001001";
        ram[50] = "0b10111011100110111101100010001101";
        ram[51] = "0b10111110001111101000110001101001";
        ram[52] = "0b10111101101111111100110011010000";
        ram[53] = "0b10111101110001011011110010011011";
        ram[54] = "0b10111101010010000111110101100000";
        ram[55] = "0b00111100110010111000101001111001";
        ram[56] = "0b00111100111000011001101001001001";
        ram[57] = "0b10111101101000001010110111001110";
        ram[58] = "0b00111110001000110011110101011100";
        ram[59] = "0b00111101110001111101011101101110";
        ram[60] = "0b10111101111011001100100110111100";
        ram[61] = "0b10111101101010000001011000010001";
        ram[62] = "0b00111101101001011010110111000110";
        ram[63] = "0b00111101101011111101101010101011";
        ram[64] = "0b00111100110011100100010000100110";
        ram[65] = "0b10111110111000000111000011001000";
        ram[66] = "0b00111101111011111111111010101011";
        ram[67] = "0b10111101111000110100110010100000";
        ram[68] = "0b00111100111100111111001011111101";
        ram[69] = "0b00111101100110110001010100111000";
        ram[70] = "0b10111101001100000110101110010111";
        ram[71] = "0b10111101110010100011000010010001";
        ram[72] = "0b00111110001010110001100010000101";
        ram[73] = "0b10111110000000100010010011010100";
        ram[74] = "0b10111110001000110010000001010101";
        ram[75] = "0b00111101011010100001001111010111";
        ram[76] = "0b10111101101101110111110000000010";
        ram[77] = "0b10111100001000101011100101110010";
        ram[78] = "0b00111101000110110011101110110110";
        ram[79] = "0b10111011110010101010101001101110";
        ram[80] = "0b00111100101110011100001010010000";
        ram[81] = "0b00111101001110111110100110001101";
        ram[82] = "0b10111101101100010010011110100000";
        ram[83] = "0b00111100100011001100101000000010";
        ram[84] = "0b10111110001000101111100010000000";
        ram[85] = "0b10111011010001000011000111011010";
        ram[86] = "0b10111101101000011000010001011000";
        ram[87] = "0b00111110001010011000011000010001";
        ram[88] = "0b10111100000111010001101001110101";
        ram[89] = "0b00111100010111011100111011110100";
        ram[90] = "0b10111101101011111010111100110011";
        ram[91] = "0b00111101100101110111111000100011";
        ram[92] = "0b10111101010011011110011111001101";
        ram[93] = "0b10111110000001100010111000111101";
        ram[94] = "0b10111101101111100111111110010110";
        ram[95] = "0b10111110000001100011100011111101";
        ram[96] = "0b00111100100110001011101000101100";
        ram[97] = "0b10111101111011100001000110100101";
        ram[98] = "0b10111101101111011100000101100011";
        ram[99] = "0b10111110000111010010111101101110";
        ram[100] = "0b10111101100000010011100010011011";
        ram[101] = "0b10111101000110010001111110001010";
        ram[102] = "0b00111110000101000001010110100011";
        ram[103] = "0b00111100110000010011101101011001";
        ram[104] = "0b00111101001001011000000010111000";
        ram[105] = "0b10111100100101111000110000100001";
        ram[106] = "0b10111100101101110010111111000110";
        ram[107] = "0b10111101100011101000101011110011";
        ram[108] = "0b00111101001101011110110010000110";
        ram[109] = "0b10111101110010000010011100001010";
        ram[110] = "0b10111101100010001111000000011100";
        ram[111] = "0b00111101110101111010011000111011";
        ram[112] = "0b00111101100000011100110110110010";
        ram[113] = "0b10111101100011110001111001011001";
        ram[114] = "0b10111101001111100010110110001011";
        ram[115] = "0b10111101100011001111010111000011";
        ram[116] = "0b00111101111010001010110011011101";
        ram[117] = "0b00111101011110000111010101100111";
        ram[118] = "0b00111101111101111100100010110011";
        ram[119] = "0b10111110010001101001101010110110";
        ram[120] = "0b10111101100101000000010000101011";
        ram[121] = "0b00111110000011011100101101001110";
        ram[122] = "0b00111101101101110010100101111110";
        ram[123] = "0b00111100110001110100010100111011";
        ram[124] = "0b10111101101001000010001100000100";
        ram[125] = "0b00111110000011011011100110111011";
        ram[126] = "0b10111011100110110011100011101010";
        ram[127] = "0b00111101101011100101001001101111";
        ram[128] = "0b10111101010011010111000100101011";
        ram[129] = "0b10111110110110010001001110111110";
        ram[130] = "0b10111100100110010010011000001011";
        ram[131] = "0b10111100011010100111110001100010";
        ram[132] = "0b00111110010000110100001010101001";
        ram[133] = "0b10111110000100000011111110010100";
        ram[134] = "0b00111110001001111011010011101010";
        ram[135] = "0b10111101001110100000010001111001";
        ram[136] = "0b00111100101101010101000100111001";
        ram[137] = "0b10111110100001100011000111100100";
        ram[138] = "0b10111101100000111110101001010110";
        ram[139] = "0b10111110001101010000110110001110";
        ram[140] = "0b00111101100010101001110010011111";
        ram[141] = "0b00111100101011110100101001011100";
        ram[142] = "0b10111101001001010111100010010011";
        ram[143] = "0b00111100101011010010101001000001";
        ram[144] = "0b00111101011000011001000101000011";
        ram[145] = "0b00111101000101110010111010101111";
        ram[146] = "0b10111110000011010111110001011111";
        ram[147] = "0b00111110010000110101000011011010";
        ram[148] = "0b10111101111010011001100111000001";
        ram[149] = "0b00111101000010111001111110111011";
        ram[150] = "0b10111110010011110000010111101111";
        ram[151] = "0b00111101111011001111110101110110";
        ram[152] = "0b00111101110011111100001010000111";
        ram[153] = "0b00111100010010100110000011000011";
        ram[154] = "0b10111110011000000000111111000111";
        ram[155] = "0b10111110000101100011110010000001";
        ram[156] = "0b00111101100011000110001001110010";
        ram[157] = "0b00111100001100000101001011001111";
        ram[158] = "0b10111110010110011001011001011101";
        ram[159] = "0b00111101010011100110110100101110";
        ram[160] = "0b10111110000011100111110010000111";
        ram[161] = "0b00111011110111000001001110110110";
        ram[162] = "0b10111110011110110001100011110100";
        ram[163] = "0b10111110011011010011101001011000";
        ram[164] = "0b00111101100101100100100111001111";
        ram[165] = "0b00111110011100100001010000100101";
        ram[166] = "0b00111110011111010010101111101100";
        ram[167] = "0b10111110000110101000000110110000";
        ram[168] = "0b10111101000111110001001001110000";
        ram[169] = "0b00111101000100011111011000011001";
        ram[170] = "0b00111101110001001011000100000010";
        ram[171] = "0b00111110000000111000010110000100";
        ram[172] = "0b10111101011101001000011100101101";
        ram[173] = "0b10111110011011000010001110111011";
        ram[174] = "0b00111110000001111111101010010001";
        ram[175] = "0b00111110000010100010110011011111";
        ram[176] = "0b00111101011111101101001111010110";
        ram[177] = "0b10111100100011111001010001110011";
        ram[178] = "0b00111100110001111011000011101011";
        ram[179] = "0b10111011111101110101101001101101";
        ram[180] = "0b00111101110010001001011101110001";
        ram[181] = "0b10111101101111000110001000111011";
        ram[182] = "0b00111110001000010111000001111101";
        ram[183] = "0b00111010101001101101110110101110";
        ram[184] = "0b10111100110011100000011000110010";
        ram[185] = "0b00111110000111011001001101000001";
        ram[186] = "0b00111101111111010110001110100110";
        ram[187] = "0b10111101111000010001010000000011";
        ram[188] = "0b10111101010111011111101100111011";
        ram[189] = "0b00111101101001101000101011100100";
        ram[190] = "0b10111011111101111011000000101000";
        ram[191] = "0b00111100001111101111010111101010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibBo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibBo_ram* meminst;


SC_CTOR(conv_2_conv_2_weibBo) {
meminst = new conv_2_conv_2_weibBo_ram("conv_2_conv_2_weibBo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibBo() {
    delete meminst;
}


};//endmodule
#endif
