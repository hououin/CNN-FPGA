// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibrm_H__
#define __conv_2_conv_2_weibrm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibrm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibrm_ram) {
        ram[0] = "0b00111101011011000111000101000011";
        ram[1] = "0b10111100100011110110101011001001";
        ram[2] = "0b10111101010101101111101101100001";
        ram[3] = "0b10111101110011001001110011101101";
        ram[4] = "0b00111100011111101011100011110010";
        ram[5] = "0b10111101110000111001001001100100";
        ram[6] = "0b10111100110101110100010000010001";
        ram[7] = "0b00111100110111000001011101010110";
        ram[8] = "0b10111110000110111110011011011110";
        ram[9] = "0b00111110000010010101010010110010";
        ram[10] = "0b10111101100101001000101111110000";
        ram[11] = "0b00111110001100000001100000000110";
        ram[12] = "0b10111101110000100001001001101101";
        ram[13] = "0b10111110010110001011011010111001";
        ram[14] = "0b10111101111101010000100000001001";
        ram[15] = "0b10111101110001101110100010000001";
        ram[16] = "0b10111011110110000111001000100000";
        ram[17] = "0b10111100011110011011101100001001";
        ram[18] = "0b10111101100110010000100000101100";
        ram[19] = "0b00111110001101100100001010001111";
        ram[20] = "0b10111110100100010111010101100101";
        ram[21] = "0b10111100111110110110110101000101";
        ram[22] = "0b10111101011111101110000011100111";
        ram[23] = "0b10111110010101001001010101011110";
        ram[24] = "0b00111101111000000110001011101001";
        ram[25] = "0b10111110010111001000000000100001";
        ram[26] = "0b10111101111010010100110011001000";
        ram[27] = "0b00111100101111010110001111001110";
        ram[28] = "0b10111101010101000100001111100110";
        ram[29] = "0b00111110000010101111111000010001";
        ram[30] = "0b00111101110101000110110111010101";
        ram[31] = "0b10111101101010101101100000000111";
        ram[32] = "0b10111011101110101101001110110101";
        ram[33] = "0b10111110110100101010100111111101";
        ram[34] = "0b10111100100101001110101101100001";
        ram[35] = "0b10111110100101101010100111010000";
        ram[36] = "0b10111110101110001011001111000110";
        ram[37] = "0b10111110110001110001111001110110";
        ram[38] = "0b00111101111111011000000111001001";
        ram[39] = "0b00111011111010010010110000100101";
        ram[40] = "0b00111101111101000101100100001010";
        ram[41] = "0b10111110000001101010010101110110";
        ram[42] = "0b00111100111001100101110100001010";
        ram[43] = "0b10111110011000101011100110111111";
        ram[44] = "0b00111101110101011001010100001000";
        ram[45] = "0b10111110001000100001101001100001";
        ram[46] = "0b10111101010100010011100110011110";
        ram[47] = "0b10111100110001000101001100001011";
        ram[48] = "0b00111101101110010011111001001000";
        ram[49] = "0b10111110010100000010000001101111";
        ram[50] = "0b00111101101110000001100010001001";
        ram[51] = "0b10111101100111011110110100100001";
        ram[52] = "0b00111011010111101000010110111010";
        ram[53] = "0b10111110001000101011100111110100";
        ram[54] = "0b00111101100100110101010010110011";
        ram[55] = "0b10111110000000011010110000010011";
        ram[56] = "0b10111101110011011110001100111101";
        ram[57] = "0b00111110001101000000001010101010";
        ram[58] = "0b10111101101011111101000111011000";
        ram[59] = "0b00111110001001101101110011010100";
        ram[60] = "0b10111110001111000110111001110110";
        ram[61] = "0b10111110001110111011100010001110";
        ram[62] = "0b00111100100011011101011111001001";
        ram[63] = "0b10111110001000110100011101111011";
        ram[64] = "0b00111100100100101000111001100111";
        ram[65] = "0b10111110001010011011001110101011";
        ram[66] = "0b10111110000001101000000011000000";
        ram[67] = "0b00111101111100101001100110101000";
        ram[68] = "0b10111110001001111110010100111010";
        ram[69] = "0b10111110100100000011011001100110";
        ram[70] = "0b00111101100111110111001010101010";
        ram[71] = "0b00111101101011111110001010110000";
        ram[72] = "0b00111010101011110110000000100100";
        ram[73] = "0b00111011010101101110100010101010";
        ram[74] = "0b10111110011111100000111010011100";
        ram[75] = "0b10111110001001100111111110101000";
        ram[76] = "0b00111101111111111011100011011011";
        ram[77] = "0b10111110001000001100000001110001";
        ram[78] = "0b00111101011110001101100010110001";
        ram[79] = "0b10111101100010110110010100110110";
        ram[80] = "0b10111101101100010010100110010010";
        ram[81] = "0b10111101100010111100011000000111";
        ram[82] = "0b10111110101011010100000011101010";
        ram[83] = "0b10111011101111010111101100101001";
        ram[84] = "0b10111110001011001101001100011010";
        ram[85] = "0b10111101010100101111010101000101";
        ram[86] = "0b10111011000100010010100001101010";
        ram[87] = "0b10111110010010111111110110110110";
        ram[88] = "0b10111100000010010101111110000101";
        ram[89] = "0b00111100100000010010110111010010";
        ram[90] = "0b00111101000111101111110100110111";
        ram[91] = "0b00111110001010101100110011111110";
        ram[92] = "0b00111110000011010101000011100001";
        ram[93] = "0b10111110100001111100011011110000";
        ram[94] = "0b10111110000100011101110111001110";
        ram[95] = "0b00111110000001111111110000101011";
        ram[96] = "0b00111101011100001110011001011111";
        ram[97] = "0b00111110000001110000010110000110";
        ram[98] = "0b10111101100011001010111100010011";
        ram[99] = "0b10111110101000101111110101000001";
        ram[100] = "0b00111101100110111001001010111001";
        ram[101] = "0b00111101101111001010011111111011";
        ram[102] = "0b00111101110111011100001000111110";
        ram[103] = "0b10111101111110110110001001011010";
        ram[104] = "0b00111101110110111110100101110111";
        ram[105] = "0b10111100100111011101000001000110";
        ram[106] = "0b00111101101000011000110100000001";
        ram[107] = "0b00111110001101111100111001111100";
        ram[108] = "0b10111101010010100111110001011111";
        ram[109] = "0b10111110100001010111010011001000";
        ram[110] = "0b00111101001011000000101110000110";
        ram[111] = "0b00111110000110011011001111010000";
        ram[112] = "0b00111101110010101010101111100000";
        ram[113] = "0b00111110001000011011110000001110";
        ram[114] = "0b10111101110101000010100011011100";
        ram[115] = "0b10111110000001101000001111101100";
        ram[116] = "0b00111101100110000001100100100000";
        ram[117] = "0b10111101010011010101100000101000";
        ram[118] = "0b10111100010101001111011000000010";
        ram[119] = "0b10111110000110110111011000010100";
        ram[120] = "0b00111101011100110101101110101000";
        ram[121] = "0b10111101011011100100000000111001";
        ram[122] = "0b10111101011111011111010000011110";
        ram[123] = "0b10111110010001000101001011001010";
        ram[124] = "0b10111101111010111010110101010011";
        ram[125] = "0b10111101101010101001011000100101";
        ram[126] = "0b00111101011001001011100001010010";
        ram[127] = "0b10111100111100000101100110100101";
        ram[128] = "0b10111110100001001100101110101111";
        ram[129] = "0b10111110101000001001111010000011";
        ram[130] = "0b10111110010110100111000110010011";
        ram[131] = "0b00111101100010110001111000101100";
        ram[132] = "0b00111100110100010110001010010001";
        ram[133] = "0b10111110101101011010101000010101";
        ram[134] = "0b00111110011001111100111000101011";
        ram[135] = "0b00111101100111111010110001110101";
        ram[136] = "0b00111101111110011000101100111111";
        ram[137] = "0b10111110110011110001100011000001";
        ram[138] = "0b10111110000110000000011001011010";
        ram[139] = "0b10111110010110100001110011111101";
        ram[140] = "0b00111110001010001000111010011010";
        ram[141] = "0b00111101001001110000111011001001";
        ram[142] = "0b00111110001001101011100100111101";
        ram[143] = "0b00111101101000000100011101000110";
        ram[144] = "0b00111100110111101111011010000001";
        ram[145] = "0b00111101000011001010010101100110";
        ram[146] = "0b10111100011111010011001100100100";
        ram[147] = "0b00111101101100111111110000010010";
        ram[148] = "0b00111110000101000000100010101011";
        ram[149] = "0b10111100101001010110001010011111";
        ram[150] = "0b10111101010000101101001100011011";
        ram[151] = "0b10111101000011001001101110101010";
        ram[152] = "0b00111110010100001111000010001010";
        ram[153] = "0b00111110001011101000010000011001";
        ram[154] = "0b10111110011011000111010111110011";
        ram[155] = "0b00111101100000110111001001110000";
        ram[156] = "0b00111101110000001100000000101000";
        ram[157] = "0b10111101100000100111011001001011";
        ram[158] = "0b10111101010011011001100100101111";
        ram[159] = "0b00111110001110011110111100000101";
        ram[160] = "0b00111101111010101011111100110100";
        ram[161] = "0b00111110010010111010001101001111";
        ram[162] = "0b10111110110111100011001110100110";
        ram[163] = "0b10111110101010111000001111100001";
        ram[164] = "0b00111101101001000110100100100001";
        ram[165] = "0b00111110010001100001001100011000";
        ram[166] = "0b00111110001000011001111010100100";
        ram[167] = "0b00111101010011010001111101010110";
        ram[168] = "0b10111101111001101110110000101110";
        ram[169] = "0b00111110100001011010100101000111";
        ram[170] = "0b10111110010111000111010111110110";
        ram[171] = "0b00111110001000100101100100111001";
        ram[172] = "0b10111110001100001001111111000011";
        ram[173] = "0b00111101100111001111000001110110";
        ram[174] = "0b00111110100010001110000110100001";
        ram[175] = "0b00111110011010111100010100101110";
        ram[176] = "0b10111110010000111010100100100010";
        ram[177] = "0b00111110011101001011010100010001";
        ram[178] = "0b00111110011111100101010110000001";
        ram[179] = "0b10111110010011101001001011000101";
        ram[180] = "0b00111101110010111000100010110110";
        ram[181] = "0b10111110000010100110001111000100";
        ram[182] = "0b10111110001111111110101000100000";
        ram[183] = "0b00111101111001000010001101001111";
        ram[184] = "0b10111101000101010000111110010100";
        ram[185] = "0b10111100110110110011101011100000";
        ram[186] = "0b10111100100001100010011110010001";
        ram[187] = "0b10111101111101010000010000010000";
        ram[188] = "0b00111101010010001110011101111010";
        ram[189] = "0b10111011011111000011000011010110";
        ram[190] = "0b10111110100000011010101011110000";
        ram[191] = "0b10111101011001011111110000111100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibrm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibrm_ram* meminst;


SC_CTOR(conv_2_conv_2_weibrm) {
meminst = new conv_2_conv_2_weibrm_ram("conv_2_conv_2_weibrm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibrm() {
    delete meminst;
}


};//endmodule
#endif
