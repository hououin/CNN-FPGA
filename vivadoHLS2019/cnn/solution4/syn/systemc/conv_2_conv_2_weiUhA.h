// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiUhA_H__
#define __conv_2_conv_2_weiUhA_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiUhA_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiUhA_ram) {
        ram[0] = "0b00111100111001011010110100001100";
        ram[1] = "0b00111100110011010100011000100011";
        ram[2] = "0b10111110000001010110010111111010";
        ram[3] = "0b00111110000011001000111100111101";
        ram[4] = "0b00111110011010011100100101001001";
        ram[5] = "0b10111101010101100000110000111100";
        ram[6] = "0b00111110010010101011100001011001";
        ram[7] = "0b10111101110001111001101001011101";
        ram[8] = "0b00111110010011011010010101101000";
        ram[9] = "0b00111101011011110110111100010100";
        ram[10] = "0b10111101101010000001000001101001";
        ram[11] = "0b10111101010111010000110001000111";
        ram[12] = "0b00111101110001010000010101101111";
        ram[13] = "0b10111100000100100110101000110000";
        ram[14] = "0b00111101111001001111001101111101";
        ram[15] = "0b00111101100010011011011110101111";
        ram[16] = "0b10111011101111100010010111110100";
        ram[17] = "0b10111100011111011001010010000100";
        ram[18] = "0b10111101011011101100001011010001";
        ram[19] = "0b10111101111000110110010011100001";
        ram[20] = "0b00111011111010011010100000001011";
        ram[21] = "0b00111100000010010010010101001110";
        ram[22] = "0b00111101001001111101011000100100";
        ram[23] = "0b00111101000001101101100111001101";
        ram[24] = "0b00111101111110111110110000111110";
        ram[25] = "0b10111101001111011000011011010100";
        ram[26] = "0b00111110011110100010110000001111";
        ram[27] = "0b00111101100100101100010100010111";
        ram[28] = "0b10111101011001010101010101010011";
        ram[29] = "0b00111101101111001101101010010101";
        ram[30] = "0b00111100100011001111111000000000";
        ram[31] = "0b10111101010101000100010110111000";
        ram[32] = "0b00111100110011101010010011101011";
        ram[33] = "0b10111110001001011110100111011101";
        ram[34] = "0b10111101001010100010001111111110";
        ram[35] = "0b00111101111001110110111110110111";
        ram[36] = "0b10111110010000001011111111001111";
        ram[37] = "0b00111101010111111011100111010111";
        ram[38] = "0b10111101101101011111011111101101";
        ram[39] = "0b00111110001011010001100001011001";
        ram[40] = "0b10111110100000010111000100010110";
        ram[41] = "0b10111100100011001110001110000101";
        ram[42] = "0b00111101101110111000100111011100";
        ram[43] = "0b00111101000011111110111101101010";
        ram[44] = "0b00111100110111110100110111100100";
        ram[45] = "0b00111100101100111101100001000100";
        ram[46] = "0b00111100101100111010010101010000";
        ram[47] = "0b10111100101100001101010100011100";
        ram[48] = "0b10111101101110111110010000110010";
        ram[49] = "0b10111110100001101000110000101000";
        ram[50] = "0b00111110010011101100011001100001";
        ram[51] = "0b00111110010111110110011110001100";
        ram[52] = "0b10111110010010001011111101010010";
        ram[53] = "0b10111100000110010001000011100100";
        ram[54] = "0b00111101000000010001010000011001";
        ram[55] = "0b10111110001001010000000110110011";
        ram[56] = "0b10111100111110110011111100110001";
        ram[57] = "0b00111101101001111010111000011010";
        ram[58] = "0b10111101100011000011110001111001";
        ram[59] = "0b10111100010010101111000010000001";
        ram[60] = "0b00111101100111010000101100011110";
        ram[61] = "0b00111110000101111010001110100100";
        ram[62] = "0b00111110010001101100010100101001";
        ram[63] = "0b00111101110010011101010101000011";
        ram[64] = "0b00111100101100001110001101001111";
        ram[65] = "0b00111101110001111111010101001010";
        ram[66] = "0b00111101111000010111111001110001";
        ram[67] = "0b10111101110000110110101011000010";
        ram[68] = "0b00111101111101111100110010000000";
        ram[69] = "0b10111101101000110100010000010110";
        ram[70] = "0b10111101001110011011101000110101";
        ram[71] = "0b10111101100110001101001110100010";
        ram[72] = "0b00111101011101001101100101001000";
        ram[73] = "0b10111101011010110011001001101001";
        ram[74] = "0b10111101010110111010011110001000";
        ram[75] = "0b10111101001011110101011100101101";
        ram[76] = "0b00111110000100000010011000101111";
        ram[77] = "0b00111110001100101110100011100010";
        ram[78] = "0b00111101001010000010000010010110";
        ram[79] = "0b10111101111000000100001100011111";
        ram[80] = "0b00111101101000001001011100010111";
        ram[81] = "0b00111011110000110010011110101001";
        ram[82] = "0b10111101001011100111101010000110";
        ram[83] = "0b10111110001111100000110001101110";
        ram[84] = "0b10111110011000011101010110100011";
        ram[85] = "0b00111101001100011010110111101011";
        ram[86] = "0b00111101010110101101110111111101";
        ram[87] = "0b10111101111011110100101100101001";
        ram[88] = "0b00111110000010101010001111000110";
        ram[89] = "0b10111101110110110010011011111101";
        ram[90] = "0b00111101111111000101011111000001";
        ram[91] = "0b10111110001100100100111011001000";
        ram[92] = "0b10111101011100010101000010111010";
        ram[93] = "0b00111101000101110101101110100000";
        ram[94] = "0b00111100110111011111111111000110";
        ram[95] = "0b10111100110000110010010100101001";
        ram[96] = "0b00111101011111111011010111111001";
        ram[97] = "0b10111101000110001111110101011011";
        ram[98] = "0b10111100110110001111111100101000";
        ram[99] = "0b10111110100101100010100101010001";
        ram[100] = "0b10111101111100000100001111000111";
        ram[101] = "0b00111100011100111011010001011100";
        ram[102] = "0b10111101110101011110111001010111";
        ram[103] = "0b10111101011010001110101010000000";
        ram[104] = "0b10111101100011010001001001010101";
        ram[105] = "0b10111110000101010001101010000010";
        ram[106] = "0b00111110000111110100001010111010";
        ram[107] = "0b10111110001010100010010110110011";
        ram[108] = "0b10111110100000101011111110010101";
        ram[109] = "0b10111101101010000011101101010000";
        ram[110] = "0b00111101000111001001100100011000";
        ram[111] = "0b10111110011110101010111000001110";
        ram[112] = "0b10111100000000111001101101000000";
        ram[113] = "0b00111101011010110110000101001001";
        ram[114] = "0b00111110010000110000000111101111";
        ram[115] = "0b10111101001111100000111110110000";
        ram[116] = "0b00111101101000010010010001000010";
        ram[117] = "0b10111101001000000010110101110100";
        ram[118] = "0b10111110001011100010011100111000";
        ram[119] = "0b00111101010100101011100101101110";
        ram[120] = "0b10111011100110111010110111011000";
        ram[121] = "0b00111101001001010011011101111000";
        ram[122] = "0b10111110000111010010001111001000";
        ram[123] = "0b00111101101100100000011011010111";
        ram[124] = "0b00111101000111110011010000011010";
        ram[125] = "0b10111101010101100001110000010110";
        ram[126] = "0b10111101110011010111101111010000";
        ram[127] = "0b10111101100110100010100011111101";
        ram[128] = "0b10111101000010011011011000010001";
        ram[129] = "0b00111110001011101110101001100110";
        ram[130] = "0b00111110100011110011001101011110";
        ram[131] = "0b10111100010000111111000001001011";
        ram[132] = "0b00111110001001010101001011100111";
        ram[133] = "0b10111110011010111111101100001001";
        ram[134] = "0b10111101111110010010101100111011";
        ram[135] = "0b00111101010000110000011111001011";
        ram[136] = "0b10111101100001010111110011101110";
        ram[137] = "0b10111110010010010110011110000111";
        ram[138] = "0b10111110001101101000100111100001";
        ram[139] = "0b10111110001011111101010110110010";
        ram[140] = "0b00111101010000000100010010100100";
        ram[141] = "0b00111101111011111111000001101100";
        ram[142] = "0b00111101111110001111111010100000";
        ram[143] = "0b00111101100100101101001000111011";
        ram[144] = "0b10111101011001100100101000101001";
        ram[145] = "0b10111100111011011110110001001100";
        ram[146] = "0b00111100101010100111010101010000";
        ram[147] = "0b10111110010000000101100100111010";
        ram[148] = "0b10111011000101101101100010101001";
        ram[149] = "0b00111110001011011101001010101101";
        ram[150] = "0b00111101111100110100110111010010";
        ram[151] = "0b10111110000100100010011100001100";
        ram[152] = "0b10111100100010111100001101110100";
        ram[153] = "0b10111100101110101001111010111100";
        ram[154] = "0b10111110011111001011011110001110";
        ram[155] = "0b00111101100110111011000001101111";
        ram[156] = "0b10111101000111000100110010100110";
        ram[157] = "0b10111101001100100000100110111100";
        ram[158] = "0b00111101101001000010100110110000";
        ram[159] = "0b10111110000011011100101110111001";
        ram[160] = "0b10111110000101000010101101100000";
        ram[161] = "0b00111100100001001110110111010011";
        ram[162] = "0b10111110010100001111010110011010";
        ram[163] = "0b10111110101101010111011011001000";
        ram[164] = "0b10111100011001011010100110000111";
        ram[165] = "0b00111011110100001001111000100011";
        ram[166] = "0b10111101111011111110001100010010";
        ram[167] = "0b10111110000110111111010011000111";
        ram[168] = "0b00111101101010001000001010010100";
        ram[169] = "0b10111101101100000100110111110000";
        ram[170] = "0b00111101100001100010001010110001";
        ram[171] = "0b10111101110100010010101011010010";
        ram[172] = "0b10111101101000010110111000101010";
        ram[173] = "0b10111101001001010100010000000110";
        ram[174] = "0b10111110000110011100011000011000";
        ram[175] = "0b10111101110111110101111110010100";
        ram[176] = "0b10111100010010100110001111110011";
        ram[177] = "0b00111101110001001011011100111010";
        ram[178] = "0b00111101100111100100001100001010";
        ram[179] = "0b10111101101111110010100110100001";
        ram[180] = "0b00111100100011100101000011001101";
        ram[181] = "0b00111110001111001011100011001100";
        ram[182] = "0b10111101110111101100011001001101";
        ram[183] = "0b00111110010101001011111110100111";
        ram[184] = "0b10111101000001010111111110111110";
        ram[185] = "0b10111110001000110111011010001000";
        ram[186] = "0b10111101100001001110000101000010";
        ram[187] = "0b10111011001010100011100100110100";
        ram[188] = "0b00111101100000011000111001100011";
        ram[189] = "0b10111110001001000111000001011101";
        ram[190] = "0b10111101100100010101001101010111";
        ram[191] = "0b10111101010100101001110110001100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiUhA) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiUhA_ram* meminst;


SC_CTOR(conv_2_conv_2_weiUhA) {
meminst = new conv_2_conv_2_weiUhA_ram("conv_2_conv_2_weiUhA_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiUhA() {
    delete meminst;
}


};//endmodule
#endif
