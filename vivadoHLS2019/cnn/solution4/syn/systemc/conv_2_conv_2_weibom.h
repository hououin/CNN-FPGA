// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibom_H__
#define __conv_2_conv_2_weibom_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibom_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibom_ram) {
        ram[0] = "0b10111010111101101000101111101010";
        ram[1] = "0b10111100000101101101000101101011";
        ram[2] = "0b00111100110101010011011010100001";
        ram[3] = "0b10111110000001101000101010000110";
        ram[4] = "0b00111101100100111110101001000001";
        ram[5] = "0b10111100101110110011000000000110";
        ram[6] = "0b00111110001011001001001111001111";
        ram[7] = "0b10111101001011010001001110001100";
        ram[8] = "0b00111101011100110100100110010010";
        ram[9] = "0b10111011011000111000001001100100";
        ram[10] = "0b00111101110111000111110111100001";
        ram[11] = "0b00111011111100011011111011101011";
        ram[12] = "0b00111101111010010011000001110100";
        ram[13] = "0b10111100111010001000101100110010";
        ram[14] = "0b10111101101001000110001011011100";
        ram[15] = "0b00111101000111000100111011100111";
        ram[16] = "0b00111101101001101010101011000000";
        ram[17] = "0b10111101101001110000011001000001";
        ram[18] = "0b10111101111101011100001100011010";
        ram[19] = "0b10111101110001111010001101010111";
        ram[20] = "0b00111101000100000000000010101011";
        ram[21] = "0b10111110000011100100111011011011";
        ram[22] = "0b10111110010001000010000010000110";
        ram[23] = "0b10111101001001101110101111100001";
        ram[24] = "0b00111101101011010001100100111010";
        ram[25] = "0b10111101010000100001100010111111";
        ram[26] = "0b10111101001011000011110111010111";
        ram[27] = "0b10111101011101101000000011101111";
        ram[28] = "0b10111101110111011101011111110100";
        ram[29] = "0b00111110000000000100010001001000";
        ram[30] = "0b00111101010101011000100010110100";
        ram[31] = "0b00111100000000111001001100001000";
        ram[32] = "0b10111101010111111110110001011010";
        ram[33] = "0b10111101011010001000100000101011";
        ram[34] = "0b00111101110010111001111111011101";
        ram[35] = "0b10111100101111110111100010000011";
        ram[36] = "0b00111101000100111100010100010011";
        ram[37] = "0b10111101011110011111111101011001";
        ram[38] = "0b00111100111000010101001111000111";
        ram[39] = "0b00111101100011001000100011010110";
        ram[40] = "0b00111101011101111000111111111000";
        ram[41] = "0b00111100110011010010100111011111";
        ram[42] = "0b00111100000000111010110111101010";
        ram[43] = "0b10111101111100001101110100111100";
        ram[44] = "0b00111100101110110111001100011100";
        ram[45] = "0b00111101010111011100100110100011";
        ram[46] = "0b00111101111111110000011111011100";
        ram[47] = "0b00111101111000010011011110100110";
        ram[48] = "0b00111100001010111100010100100100";
        ram[49] = "0b10111101100010010001111110111000";
        ram[50] = "0b00111110001000100111010000000000";
        ram[51] = "0b00111110001111001011000111111111";
        ram[52] = "0b10111101011001000110000000110110";
        ram[53] = "0b10111110010010100011110001111001";
        ram[54] = "0b10111110000100101111011100000100";
        ram[55] = "0b10111110001101011000110001001110";
        ram[56] = "0b10111101111000011011100011101001";
        ram[57] = "0b00111100100010100011001000110011";
        ram[58] = "0b10111101000101111000101101100110";
        ram[59] = "0b00111101110100010001101011010100";
        ram[60] = "0b10111110000100100110001010001010";
        ram[61] = "0b10111110001000000000010001111101";
        ram[62] = "0b10111100110100011111011111010001";
        ram[63] = "0b00111011100011110011110111001101";
        ram[64] = "0b00111110001011111011101101001011";
        ram[65] = "0b10111100110100000111111000000101";
        ram[66] = "0b00111100011100010110101011100101";
        ram[67] = "0b00111101010011110010110001111101";
        ram[68] = "0b10111101000111100000101110010001";
        ram[69] = "0b00111101111101010010010111000100";
        ram[70] = "0b00111101010011110101001110010101";
        ram[71] = "0b00111100110001011111011100000100";
        ram[72] = "0b00111110000011111100001000001101";
        ram[73] = "0b00111101110011110111111111110110";
        ram[74] = "0b00111101001101110101100101011010";
        ram[75] = "0b10111101011100100011100000010000";
        ram[76] = "0b10111100110110111100000011101101";
        ram[77] = "0b10111101011010010111000001011110";
        ram[78] = "0b00111011100100001111111010100001";
        ram[79] = "0b00111100001001101010010001000101";
        ram[80] = "0b00111101001100000110101101001000";
        ram[81] = "0b00111100011110000010101111101101";
        ram[82] = "0b10111110000001011110101101101001";
        ram[83] = "0b00111101001101111101010011110010";
        ram[84] = "0b10111110001101110100100011101010";
        ram[85] = "0b10111101001110100111110111101010";
        ram[86] = "0b10111100001000100011101011111110";
        ram[87] = "0b10111110010111110011111000010000";
        ram[88] = "0b10111100100000100100101111111101";
        ram[89] = "0b00111101100011110101100011111010";
        ram[90] = "0b00111110001000100110011000001000";
        ram[91] = "0b10111110011000001001000001000101";
        ram[92] = "0b10111101000111010011010101011001";
        ram[93] = "0b00111101011101100110000010001011";
        ram[94] = "0b00111101001101100000110111010001";
        ram[95] = "0b00111100111110101101000011000010";
        ram[96] = "0b10111100111101010100110100111100";
        ram[97] = "0b10111101000110001101110011110000";
        ram[98] = "0b00111110000111000110100001101111";
        ram[99] = "0b00111101000010010111110111100100";
        ram[100] = "0b00111100101110101110111101100000";
        ram[101] = "0b10111101100010000111111010101000";
        ram[102] = "0b10111100110101111001101010011100";
        ram[103] = "0b00111011110100101111011100110110";
        ram[104] = "0b00111101001000001100111111110110";
        ram[105] = "0b00111100000111110110100000001110";
        ram[106] = "0b10111100011011001001001110111110";
        ram[107] = "0b00111101100010101011100001111000";
        ram[108] = "0b10111101010000101111010001101000";
        ram[109] = "0b00111110010000010110111101010101";
        ram[110] = "0b00111011111011110111010011110111";
        ram[111] = "0b10111101011100100110111011111011";
        ram[112] = "0b00111101100100011011111111111000";
        ram[113] = "0b00111101110111110110101111100010";
        ram[114] = "0b00111101111000111011110110001110";
        ram[115] = "0b10111101001011011111101010000010";
        ram[116] = "0b10111101101000100100000010010000";
        ram[117] = "0b10111101110011111100110110010010";
        ram[118] = "0b10111101110001111011111010110100";
        ram[119] = "0b00111101001000011101001111100010";
        ram[120] = "0b10111101101100110000000001011000";
        ram[121] = "0b10111101000111011101110101001111";
        ram[122] = "0b10111110001011000000010010000110";
        ram[123] = "0b10111100110101010100110100000111";
        ram[124] = "0b00111010010110000001101010011101";
        ram[125] = "0b00111100001101001000010010000100";
        ram[126] = "0b10111100111111010000001000101011";
        ram[127] = "0b10111100101001010001100101000010";
        ram[128] = "0b10111110001110100100011011101000";
        ram[129] = "0b10111100101111100101110001000111";
        ram[130] = "0b10111101000101111110010100000111";
        ram[131] = "0b10111100101000010011001111100101";
        ram[132] = "0b00111110001100000001010010111100";
        ram[133] = "0b10111110000010100110010100100111";
        ram[134] = "0b00111100010010101000100110110101";
        ram[135] = "0b10111011111111011111100101000010";
        ram[136] = "0b00111110001001010111011100011001";
        ram[137] = "0b10111101101111011011000111100010";
        ram[138] = "0b10111110011100111001111000110111";
        ram[139] = "0b10111110011100110011100110000110";
        ram[140] = "0b10111011100111101000111111001010";
        ram[141] = "0b00111100110010101000011010100110";
        ram[142] = "0b00111110000011010010010101110001";
        ram[143] = "0b00111110000101111100111001001011";
        ram[144] = "0b00111100111100110101110100011111";
        ram[145] = "0b10111110000001001101101010001000";
        ram[146] = "0b10111100100011111101001110101100";
        ram[147] = "0b00111101110000011011010011010101";
        ram[148] = "0b10111110001010100100000010001000";
        ram[149] = "0b00111101001000001011001101111101";
        ram[150] = "0b00111011000010000100010001101001";
        ram[151] = "0b10111101000010101110101010101000";
        ram[152] = "0b00111100100100011000110001111001";
        ram[153] = "0b00111101100101101011001011010001";
        ram[154] = "0b00111100111011100011010111101001";
        ram[155] = "0b10111101010110011011000110011000";
        ram[156] = "0b00111101101101111100101001101100";
        ram[157] = "0b10111110000110110010101101001011";
        ram[158] = "0b10111101100110000000001010110110";
        ram[159] = "0b10111101101001101111111010101110";
        ram[160] = "0b10111110100111001000011111000001";
        ram[161] = "0b10111101101001010111001101110000";
        ram[162] = "0b10111101111000100001001011101000";
        ram[163] = "0b10111101001011001111111100001111";
        ram[164] = "0b00111101110111000000111110010010";
        ram[165] = "0b10111110101000110100011000010111";
        ram[166] = "0b00111010100111101010100101011110";
        ram[167] = "0b10111101100001010000100101110100";
        ram[168] = "0b10111101000110110011111010101111";
        ram[169] = "0b00111011111100011000111100101010";
        ram[170] = "0b00111101011010010010011011100110";
        ram[171] = "0b00111101001010111101011100011111";
        ram[172] = "0b10111110001010000100011000110001";
        ram[173] = "0b10111110100010011010101011000100";
        ram[174] = "0b10111101111110111011100000010100";
        ram[175] = "0b10111101100001011100100101110000";
        ram[176] = "0b10111101001110111000110000110010";
        ram[177] = "0b10111101101111100111011001110101";
        ram[178] = "0b00111101100111010110101110100111";
        ram[179] = "0b10111110001010101011110001111010";
        ram[180] = "0b10111101101100010010110011101001";
        ram[181] = "0b00111100011010010010101000000011";
        ram[182] = "0b10111101101000100011010100000110";
        ram[183] = "0b00111101100101000111000110000100";
        ram[184] = "0b00111010111011110001000001000000";
        ram[185] = "0b00111101101100101010101101010010";
        ram[186] = "0b10111110000010011100001011011100";
        ram[187] = "0b10111101001111100001000111001001";
        ram[188] = "0b00111101110010100000100101111101";
        ram[189] = "0b00111110000001101000010001010000";
        ram[190] = "0b10111110001000101100111011010100";
        ram[191] = "0b10111101110001100100110010111011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibom) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibom_ram* meminst;


SC_CTOR(conv_2_conv_2_weibom) {
meminst = new conv_2_conv_2_weibom_ram("conv_2_conv_2_weibom_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibom() {
    delete meminst;
}


};//endmodule
#endif
