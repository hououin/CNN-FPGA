// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiAem_H__
#define __conv_2_conv_2_weiAem_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiAem_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiAem_ram) {
        ram[0] = "0b10111101000000011010101111100011";
        ram[1] = "0b00111101111100000111001011111010";
        ram[2] = "0b10111101100000101111100011011010";
        ram[3] = "0b00111101101110101110110011000000";
        ram[4] = "0b10111100001000110100001110011010";
        ram[5] = "0b10111110001100110000001001110011";
        ram[6] = "0b10111101010001011000110110101100";
        ram[7] = "0b10111101000001100111110100110011";
        ram[8] = "0b10111110111010100110110101001111";
        ram[9] = "0b10111110100001111010001010001001";
        ram[10] = "0b10111110001101100101001001000001";
        ram[11] = "0b10111101101000000001101100101011";
        ram[12] = "0b10111101011111111000111001110001";
        ram[13] = "0b00111110001110101011110011110101";
        ram[14] = "0b10111101110011000111110011010011";
        ram[15] = "0b10111110010101111000110010110110";
        ram[16] = "0b10111110011001010100011110001010";
        ram[17] = "0b00111100100011010011001110010011";
        ram[18] = "0b00111101000100101000001011101100";
        ram[19] = "0b00111110000010100011011100010100";
        ram[20] = "0b10111101000001010011001110000000";
        ram[21] = "0b00111100101101101111000101001001";
        ram[22] = "0b10111110000010110100001001011101";
        ram[23] = "0b10111110000001001010111011001000";
        ram[24] = "0b10111101110111111010100100100001";
        ram[25] = "0b10111110100111011000011000001100";
        ram[26] = "0b10111110000010000001101110001101";
        ram[27] = "0b00111100110100101100000111101100";
        ram[28] = "0b10111010110101101110111101101110";
        ram[29] = "0b10111101110101110011110101100110";
        ram[30] = "0b00111101101001010011001011101000";
        ram[31] = "0b00111101101100011110100100100101";
        ram[32] = "0b10111110000110001011001100110111";
        ram[33] = "0b10111101100100011101111110110100";
        ram[34] = "0b10111110001000110110110110101001";
        ram[35] = "0b00111110010000000110100001011010";
        ram[36] = "0b10111101110000011110001111011110";
        ram[37] = "0b10111101111110011000110000010100";
        ram[38] = "0b10111101111110101010001011010110";
        ram[39] = "0b10111110100110011011010010011110";
        ram[40] = "0b00111101010011010110010000001001";
        ram[41] = "0b10111110100111011011011011001110";
        ram[42] = "0b00111101101101010111001110110100";
        ram[43] = "0b00111101110110111101100000000110";
        ram[44] = "0b00111101010110001100000011011010";
        ram[45] = "0b10111101000000010010010110000010";
        ram[46] = "0b10111101101111101011000111001101";
        ram[47] = "0b10111101001001111001100111010000";
        ram[48] = "0b10111110001101111011010111101110";
        ram[49] = "0b10111110001111001101111101111100";
        ram[50] = "0b10111110000110000000010011000010";
        ram[51] = "0b10111101110100100000001011110000";
        ram[52] = "0b00111101011011010010100001011111";
        ram[53] = "0b10111100000100000111111101100001";
        ram[54] = "0b10111101100001111110111101010110";
        ram[55] = "0b00111101100010000110100111100111";
        ram[56] = "0b00111100111111100101011001100011";
        ram[57] = "0b10111101001010011110001001110100";
        ram[58] = "0b00111101100011100000111110001011";
        ram[59] = "0b10111101101001110001011000110011";
        ram[60] = "0b00111100101011100110101000011100";
        ram[61] = "0b10111101000111101000011000010110";
        ram[62] = "0b10111110010000100110110010001111";
        ram[63] = "0b10111110000110100111000101110110";
        ram[64] = "0b10111110010110001011101011011111";
        ram[65] = "0b10111101110110110010110101100111";
        ram[66] = "0b10111110000001111010001100111001";
        ram[67] = "0b10111110001001101101100001100110";
        ram[68] = "0b00111101111001110011101100001011";
        ram[69] = "0b00111101001111011011000010011011";
        ram[70] = "0b10111110001110011111000000111000";
        ram[71] = "0b10111110001110010001001010110011";
        ram[72] = "0b10111110101001110100100100111111";
        ram[73] = "0b00111110000010010001111010110110";
        ram[74] = "0b00111101101101101001111010101001";
        ram[75] = "0b10111101000110010101001010100100";
        ram[76] = "0b10111110000111100011110000111001";
        ram[77] = "0b10111101011111101010001101011010";
        ram[78] = "0b10111110100011010100101111000100";
        ram[79] = "0b10111110101000110100110111111010";
        ram[80] = "0b10111101101110011101101010011111";
        ram[81] = "0b10111101110101001101000001110110";
        ram[82] = "0b10111110111001010010110000110101";
        ram[83] = "0b10111101001000100111010100110101";
        ram[84] = "0b10111101111111101101100001001010";
        ram[85] = "0b00111101001110000010100001000101";
        ram[86] = "0b10111100111010011110100011101000";
        ram[87] = "0b00111101001110111110001110110011";
        ram[88] = "0b10111101111011010001001111110100";
        ram[89] = "0b10111110110110001111101110010011";
        ram[90] = "0b00111110010001110111011010110111";
        ram[91] = "0b00111100011011001000010001001000";
        ram[92] = "0b10111110001111010011001110001011";
        ram[93] = "0b00111101101001110001111001000001";
        ram[94] = "0b10111110000111011101000011111101";
        ram[95] = "0b00111101011010100011100101101000";
        ram[96] = "0b10111101011111111010000011011101";
        ram[97] = "0b10111101101100010001010010111001";
        ram[98] = "0b10111101110111110111111110110111";
        ram[99] = "0b00111110000010111011101010100001";
        ram[100] = "0b10111110101100101000011001111110";
        ram[101] = "0b00111100100101111001000011001011";
        ram[102] = "0b10111101100111010101001111111110";
        ram[103] = "0b10111110101110010100010100000100";
        ram[104] = "0b00111101001001011110111100000011";
        ram[105] = "0b10111101110000000101100101101000";
        ram[106] = "0b10111110001110000001010101000100";
        ram[107] = "0b10111101111110111101101110100110";
        ram[108] = "0b00111011110000111000001100010111";
        ram[109] = "0b10111101001100011010000010101111";
        ram[110] = "0b10111110000101000011100010111100";
        ram[111] = "0b00111101100010001101011110000110";
        ram[112] = "0b10111110010010101101111110001000";
        ram[113] = "0b10111101010001110110001101001111";
        ram[114] = "0b10111110110010110111010111111001";
        ram[115] = "0b00111101111010110101001010011010";
        ram[116] = "0b10111110000001001111110001100110";
        ram[117] = "0b00111110100110011101111101111101";
        ram[118] = "0b10111100001100100011100001111101";
        ram[119] = "0b10111100111000010011001001100101";
        ram[120] = "0b10111100010000010100010001001100";
        ram[121] = "0b10111110001001110010000100111011";
        ram[122] = "0b00111101000101111100000000101101";
        ram[123] = "0b10111110000011011110101000101001";
        ram[124] = "0b10111101100101010110111110100110";
        ram[125] = "0b10111110011000001000110110110001";
        ram[126] = "0b10111110101011001010001101111010";
        ram[127] = "0b10111110011000111001011111100101";
        ram[128] = "0b10111101000111100100000111111110";
        ram[129] = "0b00111110000001111010010011010011";
        ram[130] = "0b00111101001100011011011001001110";
        ram[131] = "0b10111101011111001111010111111110";
        ram[132] = "0b10111101100011110100110011000010";
        ram[133] = "0b10111100011011110110010000000100";
        ram[134] = "0b00111100111111111001011000010110";
        ram[135] = "0b10111110011000110010010001101010";
        ram[136] = "0b10111110101000110001101001001111";
        ram[137] = "0b10111100111110001001110000111100";
        ram[138] = "0b10111101100010100111110000100101";
        ram[139] = "0b10111101110111101110110001101100";
        ram[140] = "0b10111101101011000011101001101000";
        ram[141] = "0b10111101110101001110111110101010";
        ram[142] = "0b10111110101010010000010100101010";
        ram[143] = "0b10111110110111011010010000011101";
        ram[144] = "0b10111101111101000010001101111001";
        ram[145] = "0b00111101010001100101111000000011";
        ram[146] = "0b10111110000000010000010001110101";
        ram[147] = "0b00111101101000001010000011100011";
        ram[148] = "0b10111110001011001100000000010100";
        ram[149] = "0b00111110100001000010110011011011";
        ram[150] = "0b10111101100000101011111111101110";
        ram[151] = "0b00111110000100000011001101111100";
        ram[152] = "0b10111110000100100101110000111110";
        ram[153] = "0b10111110010111110011101001100000";
        ram[154] = "0b00111101100111011000110111100010";
        ram[155] = "0b10111101100001101000000000001111";
        ram[156] = "0b10111101100100011001110100111100";
        ram[157] = "0b00111101110000010101101100010011";
        ram[158] = "0b10111110010010100101100111100000";
        ram[159] = "0b00111100101100010101100110110110";
        ram[160] = "0b00111100000111000001111010110001";
        ram[161] = "0b10111110011110000111010110101010";
        ram[162] = "0b10111110010011100010111111000110";
        ram[163] = "0b10111101101111010110101111101110";
        ram[164] = "0b10111101000110110010000110110100";
        ram[165] = "0b00111101001101110010100010101010";
        ram[166] = "0b10111101011000010110101010011010";
        ram[167] = "0b10111100111100111101010111100011";
        ram[168] = "0b10111101100011101111000110011001";
        ram[169] = "0b00111101111100001011101101110111";
        ram[170] = "0b10111101100100100011010100110001";
        ram[171] = "0b00111011011100111110011100101111";
        ram[172] = "0b10111110100001010110011010110010";
        ram[173] = "0b10111101111110001000011011001100";
        ram[174] = "0b10111101110111000101000000011110";
        ram[175] = "0b00111110000010000101111000010100";
        ram[176] = "0b10111101101011011001010011010000";
        ram[177] = "0b10111110100000000010010011101110";
        ram[178] = "0b10111110110011111110100101010100";
        ram[179] = "0b00111110101010101000000010010011";
        ram[180] = "0b00111110010111101011100010001001";
        ram[181] = "0b00111101100101100001011101100100";
        ram[182] = "0b00111101101010101000001001000001";
        ram[183] = "0b10111101101000111101100011111010";
        ram[184] = "0b00111101010000100111011110011000";
        ram[185] = "0b10111110000100000110111100011110";
        ram[186] = "0b00111110010000010001110110010010";
        ram[187] = "0b10111101000011001110100110010100";
        ram[188] = "0b10111101010100001111011011110100";
        ram[189] = "0b10111110100110110011010000110000";
        ram[190] = "0b00111101101011001010010100101011";
        ram[191] = "0b00111101110010010110001100011100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiAem) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiAem_ram* meminst;


SC_CTOR(conv_2_conv_2_weiAem) {
meminst = new conv_2_conv_2_weiAem_ram("conv_2_conv_2_weiAem_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiAem() {
    delete meminst;
}


};//endmodule
#endif
