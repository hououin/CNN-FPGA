// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiGfk_H__
#define __conv_2_conv_2_weiGfk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiGfk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiGfk_ram) {
        ram[0] = "0b10111011011001010001011000000100";
        ram[1] = "0b00111100100001111100010010001000";
        ram[2] = "0b10111100101110101010011111100010";
        ram[3] = "0b00111101111011001000111001010100";
        ram[4] = "0b00111101111110010110001001010001";
        ram[5] = "0b00111101111011110101011100011010";
        ram[6] = "0b10111110010001111000101011010010";
        ram[7] = "0b00111110111000001100100001010111";
        ram[8] = "0b10111101001101001001011100001000";
        ram[9] = "0b00111110000001010011010100001101";
        ram[10] = "0b10111101111000010011001101001100";
        ram[11] = "0b00111101000000000110011111001010";
        ram[12] = "0b10111110011000111011001010101010";
        ram[13] = "0b10111110000101001100100010100000";
        ram[14] = "0b10111101000110101100100111001011";
        ram[15] = "0b00111110001110000001100001001011";
        ram[16] = "0b10111101100000110001011000100110";
        ram[17] = "0b10111101101101010001110110100011";
        ram[18] = "0b00111100011010011100011110011111";
        ram[19] = "0b00111110001000110111101110000001";
        ram[20] = "0b10111100101001110001010010111001";
        ram[21] = "0b10111101110111000110100011001110";
        ram[22] = "0b10111110010000101111000000000000";
        ram[23] = "0b00111110010110100010001001110110";
        ram[24] = "0b10111110100000000101010011101000";
        ram[25] = "0b00111110010100110100010111011001";
        ram[26] = "0b00111110011011011001101000110100";
        ram[27] = "0b10111110011101011101001011001011";
        ram[28] = "0b00111011000101101100000001010101";
        ram[29] = "0b10111110000110110101011010100101";
        ram[30] = "0b10111110100001000000110100010111";
        ram[31] = "0b00111101111101100011010001110011";
        ram[32] = "0b10111110010011100111001100110000";
        ram[33] = "0b00111100001001101100101110101000";
        ram[34] = "0b00111100001111110100111100001011";
        ram[35] = "0b10111101100101110101001000100101";
        ram[36] = "0b00111110000101001111000100010001";
        ram[37] = "0b10111110001100101010111001010101";
        ram[38] = "0b10111110101100011010001111001110";
        ram[39] = "0b00111101001100000011011100111000";
        ram[40] = "0b10111110010111111010111001010100";
        ram[41] = "0b10111110001000001110000101111100";
        ram[42] = "0b00111110010001010110101001110010";
        ram[43] = "0b00111110100000001010100100000111";
        ram[44] = "0b00111110000010111000111100110011";
        ram[45] = "0b10111110010001011110001010001010";
        ram[46] = "0b10111101101110001010100000101000";
        ram[47] = "0b10111101110100010001001101111111";
        ram[48] = "0b00111101010110111000001100101011";
        ram[49] = "0b10111110000010101110011010001111";
        ram[50] = "0b10111110000010000111000111011000";
        ram[51] = "0b10111110000101010100100000100111";
        ram[52] = "0b10111110000110010101011001011100";
        ram[53] = "0b10111011100001010100110110000001";
        ram[54] = "0b10111101111011010111111110111001";
        ram[55] = "0b10111110010011110000111100010110";
        ram[56] = "0b00111101000100010010011001010000";
        ram[57] = "0b00111110000111101111101100101000";
        ram[58] = "0b10111101101000100011100010010111";
        ram[59] = "0b10111110010110010111110111000001";
        ram[60] = "0b10111110000010101001000001100010";
        ram[61] = "0b00111101100111010111100010110000";
        ram[62] = "0b00111110010011001010000010001000";
        ram[63] = "0b00111101110011011101010000000001";
        ram[64] = "0b10111101110100000110101001101110";
        ram[65] = "0b00111101100001000100011010011110";
        ram[66] = "0b10111101100000101011110111111110";
        ram[67] = "0b00111101011110011101100010110001";
        ram[68] = "0b10111110001001100011101110000000";
        ram[69] = "0b10111110010101101000000100110101";
        ram[70] = "0b10111110011101000110000010001100";
        ram[71] = "0b00111101011010111111011100110111";
        ram[72] = "0b10111110001011110011101001101110";
        ram[73] = "0b10111101100110100010100000010001";
        ram[74] = "0b10111110111000001011100001000111";
        ram[75] = "0b10111110010100111000110111101000";
        ram[76] = "0b10111110100000000011000010101001";
        ram[77] = "0b00111101101010111110111000101110";
        ram[78] = "0b10111101010000001110101110001001";
        ram[79] = "0b10111110000111011001111101110011";
        ram[80] = "0b00111101100011100110101011011011";
        ram[81] = "0b10111101100101101110010011111000";
        ram[82] = "0b00111110011000111000100001011000";
        ram[83] = "0b00111110001110011000100011011111";
        ram[84] = "0b10111110001100100000100001101011";
        ram[85] = "0b10111110000110000000011011100101";
        ram[86] = "0b00111010000111000010111010100101";
        ram[87] = "0b00111101000111101111011001111000";
        ram[88] = "0b10111101010111100100100111101111";
        ram[89] = "0b10111110101010010100001110100000";
        ram[90] = "0b10111101000100000000010000010000";
        ram[91] = "0b10111101101000110111110101000011";
        ram[92] = "0b00111101110110011100111011011101";
        ram[93] = "0b10111110010110011001111000111110";
        ram[94] = "0b10111110011001111101000010100010";
        ram[95] = "0b00111110000101111111100011001010";
        ram[96] = "0b10111110100001000010010101100010";
        ram[97] = "0b00111110001111011010011101110100";
        ram[98] = "0b10111110011001011000100100000011";
        ram[99] = "0b10111100101101011000111110000010";
        ram[100] = "0b10111110000111010111100000011110";
        ram[101] = "0b00111101001100001111010111000001";
        ram[102] = "0b10111110000100001111011010111111";
        ram[103] = "0b10111110000011101010110001010101";
        ram[104] = "0b10111101111000011101000011110110";
        ram[105] = "0b10111110000100011111101011000100";
        ram[106] = "0b00111101101011001101110010010111";
        ram[107] = "0b00111101101111100100111100101101";
        ram[108] = "0b10111100110000110101100001010010";
        ram[109] = "0b10111111000001111110001001000000";
        ram[110] = "0b10111101111110000101111101010110";
        ram[111] = "0b10111110100100011110011101000011";
        ram[112] = "0b00111101010111110011010010100000";
        ram[113] = "0b00111011010101010011010111010110";
        ram[114] = "0b10111110000010010001101011111011";
        ram[115] = "0b10111111000101111001111110011100";
        ram[116] = "0b00111100111011101110110010011000";
        ram[117] = "0b10111100010111100001010000100110";
        ram[118] = "0b10111101111100011011011011010011";
        ram[119] = "0b00111110001100110101101001010001";
        ram[120] = "0b00111110011000000101000101010110";
        ram[121] = "0b00111101001001001110000010000111";
        ram[122] = "0b10111110010111110001111111000010";
        ram[123] = "0b00111101111000111101110110111010";
        ram[124] = "0b10111110101011100010001110110100";
        ram[125] = "0b00111011111100011001100001111110";
        ram[126] = "0b10111101111011001011011001110101";
        ram[127] = "0b10111011000101100101001011001000";
        ram[128] = "0b10111110100011110100011101101010";
        ram[129] = "0b00111110100010000111111001001101";
        ram[130] = "0b10111110000011010001011100100100";
        ram[131] = "0b00111101100101010101111100110010";
        ram[132] = "0b10111101011111100100011100111100";
        ram[133] = "0b10111110111100001000010111011101";
        ram[134] = "0b10111110011001111110001011111001";
        ram[135] = "0b10111100110010111101101000110010";
        ram[136] = "0b10111110100010101010001010001000";
        ram[137] = "0b10111110100000110000011010001011";
        ram[138] = "0b10111101111100100011010011111000";
        ram[139] = "0b10111110101011111110101100100001";
        ram[140] = "0b10111110001111000011001101010111";
        ram[141] = "0b00111101100011111101111000110111";
        ram[142] = "0b10111101000111110011111010110110";
        ram[143] = "0b10111110001011110101011001001101";
        ram[144] = "0b10111100110110000101100110110100";
        ram[145] = "0b10111110000100111000111111101101";
        ram[146] = "0b00111101111111000001011110100100";
        ram[147] = "0b00111011011011000100000101010001";
        ram[148] = "0b00111110000010111010110011011001";
        ram[149] = "0b00111101011011101110000101001001";
        ram[150] = "0b00111110001110110110001010101110";
        ram[151] = "0b00111101100101110010000011001100";
        ram[152] = "0b10111110100000011010100111011110";
        ram[153] = "0b10111110000011011100100001111011";
        ram[154] = "0b10111110000011100011100101111111";
        ram[155] = "0b00111101110111111000010000001111";
        ram[156] = "0b10111100110011010000011001101100";
        ram[157] = "0b10111110101100111000000111110000";
        ram[158] = "0b00111101001011101000101000110011";
        ram[159] = "0b00111110001101001101101101100111";
        ram[160] = "0b10111101000110101110001011000110";
        ram[161] = "0b10111100101000011001101010011011";
        ram[162] = "0b10111110001000010100100100110110";
        ram[163] = "0b00111101010111011011111010000100";
        ram[164] = "0b00111011101100110011110101010000";
        ram[165] = "0b10111110010110000101111101010010";
        ram[166] = "0b00111101100111111000010010110011";
        ram[167] = "0b00111101101000010000111011010000";
        ram[168] = "0b00111101100011110001001111100001";
        ram[169] = "0b10111101110111101011000000001011";
        ram[170] = "0b10111101101111000011011000011001";
        ram[171] = "0b00111110100001011110110101001000";
        ram[172] = "0b00111101111011100110000000111011";
        ram[173] = "0b00111110100000101111100101001110";
        ram[174] = "0b00111101000111110011001100101110";
        ram[175] = "0b10111101110010001100001101101001";
        ram[176] = "0b00111110110010110001001001010110";
        ram[177] = "0b00111110010100100001000010010011";
        ram[178] = "0b10111110101000010100100011111001";
        ram[179] = "0b10111110101111100010111100010000";
        ram[180] = "0b00111110010010101100101001110111";
        ram[181] = "0b10111101001110110101100110010110";
        ram[182] = "0b10111110011000011001111110110110";
        ram[183] = "0b00111101111000000100100011110010";
        ram[184] = "0b00111110000100001110110010001101";
        ram[185] = "0b10111110100001111111000000010000";
        ram[186] = "0b10111110100000011011011011011010";
        ram[187] = "0b10111110100011001101100101100101";
        ram[188] = "0b10111110000010111101101011010100";
        ram[189] = "0b10111110011100010010111000110001";
        ram[190] = "0b00111110000110010011010001100100";
        ram[191] = "0b00111101100001001010111111010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiGfk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiGfk_ram* meminst;


SC_CTOR(conv_2_conv_2_weiGfk) {
meminst = new conv_2_conv_2_weiGfk_ram("conv_2_conv_2_weiGfk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiGfk() {
    delete meminst;
}


};//endmodule
#endif
