// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibTr_H__
#define __conv_2_conv_2_weibTr_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibTr_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibTr_ram) {
        ram[0] = "0b10111110000010110010111100010101";
        ram[1] = "0b10111110001111010000010011101010";
        ram[2] = "0b10111101101110111101100110110011";
        ram[3] = "0b10111100000101101000111010110111";
        ram[4] = "0b00111110010110011010110100110011";
        ram[5] = "0b10111101100001111000000101111101";
        ram[6] = "0b10111101111001011011101101110100";
        ram[7] = "0b00111101101101000110111010111100";
        ram[8] = "0b10111101100010011000010010101100";
        ram[9] = "0b10111101101010010100010000010100";
        ram[10] = "0b00111101100111010110011001010100";
        ram[11] = "0b10111101100000101100111000001000";
        ram[12] = "0b10111101000011111100100011000001";
        ram[13] = "0b00111101110100110111101001011000";
        ram[14] = "0b00111101001000000001111100100010";
        ram[15] = "0b10111001111010100110110010101100";
        ram[16] = "0b10111100110000011011010000001110";
        ram[17] = "0b10111101110100010101110110110111";
        ram[18] = "0b00111100111011010100010100100011";
        ram[19] = "0b10111110000111110100001001111101";
        ram[20] = "0b00111101110011000100101001101111";
        ram[21] = "0b00111101110011010001011100100100";
        ram[22] = "0b00111100101110100110110111111010";
        ram[23] = "0b00111101110111010101101010010111";
        ram[24] = "0b10111101000011010101110001011101";
        ram[25] = "0b10111101001101100000001100110110";
        ram[26] = "0b10111100100100010100001010111001";
        ram[27] = "0b10111110110011101011010010110011";
        ram[28] = "0b10111110000100000100110110101000";
        ram[29] = "0b10111110001110110001111110111000";
        ram[30] = "0b00111101101101011110001100100001";
        ram[31] = "0b10111110101101101101001100100100";
        ram[32] = "0b10111101111100011101001011001110";
        ram[33] = "0b00111010101100001010011001101001";
        ram[34] = "0b10111101111000111111000011100101";
        ram[35] = "0b10111101100100111001101101011110";
        ram[36] = "0b10111101111100101101111100101111";
        ram[37] = "0b00111011110111111101110010011100";
        ram[38] = "0b10111100101000010011110011010100";
        ram[39] = "0b00111101100000111101100011001001";
        ram[40] = "0b10111101111000111110010000010000";
        ram[41] = "0b10111101010111110000010100011111";
        ram[42] = "0b10111100100100001011100111100101";
        ram[43] = "0b00111101001111110001011011010100";
        ram[44] = "0b00111101011000011111100010011110";
        ram[45] = "0b00111101110111011100000100011001";
        ram[46] = "0b10111101000000111000011010101010";
        ram[47] = "0b10111100101000100000000100011000";
        ram[48] = "0b10111110001101001100000111100110";
        ram[49] = "0b10111101110001111100110110101101";
        ram[50] = "0b10111101100110010110001110011100";
        ram[51] = "0b10111101100110110110011011001101";
        ram[52] = "0b10111110010010011111111111000100";
        ram[53] = "0b00111011100100011111100101101011";
        ram[54] = "0b10111110001101111001001101111000";
        ram[55] = "0b10111100101001001100010111010010";
        ram[56] = "0b00111100100000001100001110011011";
        ram[57] = "0b00111100101110010101000100010110";
        ram[58] = "0b00111110000010001100101110010011";
        ram[59] = "0b00111101100101101011110110110111";
        ram[60] = "0b00111101100011011011010110110101";
        ram[61] = "0b10111100100110010110000110001010";
        ram[62] = "0b10111100100111110000100111000101";
        ram[63] = "0b00111101101101010000100010000001";
        ram[64] = "0b10111101011111111000101011110111";
        ram[65] = "0b10111110011111001010011010101000";
        ram[66] = "0b10111110011000010100000011101000";
        ram[67] = "0b10111110000011111100100100010010";
        ram[68] = "0b00111101100110010100011111110100";
        ram[69] = "0b00111101010101011111101100000111";
        ram[70] = "0b10111101111001110110100011100110";
        ram[71] = "0b10111101101100111011100011110000";
        ram[72] = "0b10111100001000101000100100110001";
        ram[73] = "0b10111101000101010110011111001001";
        ram[74] = "0b10111110000011011111111011100101";
        ram[75] = "0b00111101001000010111010101100011";
        ram[76] = "0b00111100101101111111010100111010";
        ram[77] = "0b00111110000011100011011011101010";
        ram[78] = "0b10111100011101000010010001101000";
        ram[79] = "0b10111100101100100110000010011000";
        ram[80] = "0b00111101010100010000011100000110";
        ram[81] = "0b00111101010101000100001110000011";
        ram[82] = "0b10111100101111111011110011001010";
        ram[83] = "0b00111101010101011011100000001111";
        ram[84] = "0b10111100110111100010011001010011";
        ram[85] = "0b00111101111010100011100000100101";
        ram[86] = "0b10111100100000110101001011111111";
        ram[87] = "0b00111101010111101011010011100011";
        ram[88] = "0b00111101100010001011100100000101";
        ram[89] = "0b10111101100110111101011100110000";
        ram[90] = "0b10111101010101100000010110000010";
        ram[91] = "0b10111101111110011000011010001001";
        ram[92] = "0b10111101001100000111001110011110";
        ram[93] = "0b10111101000010110111000010000000";
        ram[94] = "0b10111101100001011010001011100001";
        ram[95] = "0b10111101110010111000110000101011";
        ram[96] = "0b00111101111000101001111011010011";
        ram[97] = "0b10111110000011000100110010101101";
        ram[98] = "0b00111100101001010010001110101000";
        ram[99] = "0b10111101100100101001000011111110";
        ram[100] = "0b10111110010100101110110101010101";
        ram[101] = "0b10111101111001101100011001001101";
        ram[102] = "0b10111100000100000000110100011001";
        ram[103] = "0b10111101000100011011001110011001";
        ram[104] = "0b00111011101101000100110110110001";
        ram[105] = "0b10111101100000101100011101001001";
        ram[106] = "0b00111101000011111111111011000011";
        ram[107] = "0b00111100101101100111111000111110";
        ram[108] = "0b00111101110000100110110011010110";
        ram[109] = "0b00111101001111001111110010100111";
        ram[110] = "0b00111100000010110000101000011001";
        ram[111] = "0b00111101001000001110011101010110";
        ram[112] = "0b00111101001101101111010001111100";
        ram[113] = "0b10111110010011100001111001110011";
        ram[114] = "0b10111100110100010110111000110110";
        ram[115] = "0b10111101011001000111101011111111";
        ram[116] = "0b10111101100011000011101011011100";
        ram[117] = "0b00111101110100010001110100001110";
        ram[118] = "0b00111101111011111101110101101000";
        ram[119] = "0b10111101110100001000101001100110";
        ram[120] = "0b10111101010001011111000010000100";
        ram[121] = "0b00111110000001001011100001100100";
        ram[122] = "0b00111110001011001100100010101110";
        ram[123] = "0b00111101001100100000001000011110";
        ram[124] = "0b00111100011100011110111000100101";
        ram[125] = "0b00111101000110100100010001011000";
        ram[126] = "0b10111101100011000011000011001010";
        ram[127] = "0b10111101010010110111001111101001";
        ram[128] = "0b00111100110001100101000001101010";
        ram[129] = "0b10111110011101011111011101101101";
        ram[130] = "0b10111110000000110001011001111110";
        ram[131] = "0b00111100110100000111010010011111";
        ram[132] = "0b00111101010011011111001000110100";
        ram[133] = "0b10111101101001011001010000110001";
        ram[134] = "0b00111110000000111111100111111101";
        ram[135] = "0b00111100111000010011100101011100";
        ram[136] = "0b00111100101101100011001100000010";
        ram[137] = "0b10111110000010111000100100000000";
        ram[138] = "0b10111100010011011010100100001011";
        ram[139] = "0b10111110000111100101011110110111";
        ram[140] = "0b10111011101011001101111101110010";
        ram[141] = "0b00111101111000001011010100011011";
        ram[142] = "0b10111101000100010011111010011110";
        ram[143] = "0b00111100100010110111100110101011";
        ram[144] = "0b10111011101010010011101000001000";
        ram[145] = "0b10111101100100110110010101100100";
        ram[146] = "0b10111101010101100111010001100010";
        ram[147] = "0b00111100110110111001111100101010";
        ram[148] = "0b00111100110100010100100100010010";
        ram[149] = "0b00111101101101110100111011010100";
        ram[150] = "0b00111100011111011101111100000010";
        ram[151] = "0b00111101100110101101100101110010";
        ram[152] = "0b00111100111000000010100110000101";
        ram[153] = "0b00111101001001001001011010000011";
        ram[154] = "0b10111101001110011011101101011100";
        ram[155] = "0b00111101100111001010111011101100";
        ram[156] = "0b00111100000001011110101000101111";
        ram[157] = "0b10111100100011101110111011001010";
        ram[158] = "0b10111101111011001110011010001111";
        ram[159] = "0b00111011100100011011001111000110";
        ram[160] = "0b10111010101011010100011001010101";
        ram[161] = "0b10111100101001100101100011110111";
        ram[162] = "0b10111101011110110011100110001010";
        ram[163] = "0b10111101101111011100100010000110";
        ram[164] = "0b00111011111111001111111100011110";
        ram[165] = "0b00111101110111101010111111000101";
        ram[166] = "0b10111100110110101111110000101011";
        ram[167] = "0b00111101011011100110110111100110";
        ram[168] = "0b00111101100010111110011111101110";
        ram[169] = "0b00111101010110010010000100110101";
        ram[170] = "0b00111101101110001000110110000010";
        ram[171] = "0b00111101000000111101001010100011";
        ram[172] = "0b10111101001011101000111000100101";
        ram[173] = "0b10111110010000100100000000001001";
        ram[174] = "0b00111101000011101101001101101110";
        ram[175] = "0b10111011110110010010011111110100";
        ram[176] = "0b10111010110010101111010001011001";
        ram[177] = "0b00111101100101000000011100100111";
        ram[178] = "0b10111100010001110100101110011100";
        ram[179] = "0b10111100011011001001010011000101";
        ram[180] = "0b00111110000010010110001111010111";
        ram[181] = "0b10111100101010011100100101010000";
        ram[182] = "0b10111100011111011001001110000111";
        ram[183] = "0b10111110001110110000100110111010";
        ram[184] = "0b00111100001100010100110101110000";
        ram[185] = "0b10111101100001010110110101111000";
        ram[186] = "0b00111110010100100001001111011010";
        ram[187] = "0b00111101001011011100101100000010";
        ram[188] = "0b10111101100011101010111111100010";
        ram[189] = "0b10111100101011110111001010001010";
        ram[190] = "0b10111101100101001101100110001001";
        ram[191] = "0b00111101100101110001101001001011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibTr) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibTr_ram* meminst;


SC_CTOR(conv_2_conv_2_weibTr) {
meminst = new conv_2_conv_2_weibTr_ram("conv_2_conv_2_weibTr_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibTr() {
    delete meminst;
}


};//endmodule
#endif
