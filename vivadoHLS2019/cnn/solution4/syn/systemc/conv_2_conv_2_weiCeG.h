// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiCeG_H__
#define __conv_2_conv_2_weiCeG_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiCeG_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiCeG_ram) {
        ram[0] = "0b10111100100110101101011000011011";
        ram[1] = "0b10111101100011101011100101010101";
        ram[2] = "0b10111100110011111100000000010010";
        ram[3] = "0b00111101010110001000001000110111";
        ram[4] = "0b00111101101001100100110010110011";
        ram[5] = "0b00111101000101000101001000110000";
        ram[6] = "0b00111101110000100100110110010101";
        ram[7] = "0b10111110001101111100001110001110";
        ram[8] = "0b00111110000110110001111110110010";
        ram[9] = "0b10111100001001010010111111010110";
        ram[10] = "0b00111101111010010000000110110000";
        ram[11] = "0b10111011000001100110010010010100";
        ram[12] = "0b00111101000000101100001101011000";
        ram[13] = "0b10111100101100111110011111111100";
        ram[14] = "0b10111101101001001110101001111010";
        ram[15] = "0b00111011110111001000100000001111";
        ram[16] = "0b10111110000010111100100000100101";
        ram[17] = "0b10111110000110111110100101010111";
        ram[18] = "0b10111110100010111000111111000100";
        ram[19] = "0b10111100101011100010001010011011";
        ram[20] = "0b10111100100000100100010001110111";
        ram[21] = "0b10111110100001100001001110111100";
        ram[22] = "0b10111110001010001111000101100111";
        ram[23] = "0b10111101101010000010011110000110";
        ram[24] = "0b00111100100100110110111111100001";
        ram[25] = "0b00111101011001011100000011010101";
        ram[26] = "0b10111101010101111010100010110001";
        ram[27] = "0b10111110000000101111101011001101";
        ram[28] = "0b10111101100010100110111011001011";
        ram[29] = "0b00111110000100101110101110001111";
        ram[30] = "0b00111011000111111111110000110111";
        ram[31] = "0b10111110001000100110110011100000";
        ram[32] = "0b10111110000000010101000110100011";
        ram[33] = "0b10111110100000000111110001001011";
        ram[34] = "0b00111101000011100100100101101010";
        ram[35] = "0b00111101110011101111011000111110";
        ram[36] = "0b10111100100100110111101000011001";
        ram[37] = "0b00111101110001000001010100010100";
        ram[38] = "0b10111100100110001001000100000000";
        ram[39] = "0b10111100100101110001111010001111";
        ram[40] = "0b00111101010010001100100111111111";
        ram[41] = "0b00111101011101111000010010100101";
        ram[42] = "0b10111100001100111000011010110110";
        ram[43] = "0b00111101100110011111000011111000";
        ram[44] = "0b00111011101010101000101010010110";
        ram[45] = "0b00111101101010111001011010001100";
        ram[46] = "0b10111100101110101001000000101011";
        ram[47] = "0b10111101000111111110100001000011";
        ram[48] = "0b00111100100010100110001111111011";
        ram[49] = "0b10111110011110000001010110110001";
        ram[50] = "0b10111100001001001100111110100010";
        ram[51] = "0b00111110000101110000100010100001";
        ram[52] = "0b10111110100110100111110010101111";
        ram[53] = "0b10111101011111101011011101111011";
        ram[54] = "0b00111101100001011110000000011101";
        ram[55] = "0b10111110011100110111000100110101";
        ram[56] = "0b10111110010100001001000001000001";
        ram[57] = "0b00111100100001101011110001111011";
        ram[58] = "0b10111101110110110100000111010000";
        ram[59] = "0b00111101011001001011001001111001";
        ram[60] = "0b00111101011010111100011000111100";
        ram[61] = "0b10111101001010011110010111010010";
        ram[62] = "0b00111100011101011011100100110000";
        ram[63] = "0b00111101000010101010101010001101";
        ram[64] = "0b00111100010110011001111101000111";
        ram[65] = "0b00111101101011010111100000001111";
        ram[66] = "0b00111101001110000100011001000101";
        ram[67] = "0b10111011011000001011010000100000";
        ram[68] = "0b00111100110101011000000001100011";
        ram[69] = "0b10111101000100111100000011111011";
        ram[70] = "0b00111101001000101010000000101000";
        ram[71] = "0b10111101100101100110011000011110";
        ram[72] = "0b00111100000111010001110000001101";
        ram[73] = "0b10111100100001011001101110000000";
        ram[74] = "0b00111101110100001110111011100100";
        ram[75] = "0b10111101111011001101101001001110";
        ram[76] = "0b10111101000010010000010010011011";
        ram[77] = "0b10111101010111110001010010100101";
        ram[78] = "0b10111101100100011111000010111000";
        ram[79] = "0b10111011111011001010011010100111";
        ram[80] = "0b00111100101100011001001111101110";
        ram[81] = "0b00111101001000001011110001011001";
        ram[82] = "0b10111100101011010001000011101001";
        ram[83] = "0b00111010010000000110111100100110";
        ram[84] = "0b10111110100011010000010100100010";
        ram[85] = "0b10111110001010100011100000111111";
        ram[86] = "0b10111100100100011001100000000111";
        ram[87] = "0b10111101110101000000100001101011";
        ram[88] = "0b00111101000010011111100011111100";
        ram[89] = "0b10111101000001010110010010111001";
        ram[90] = "0b00111100010000110100111011011110";
        ram[91] = "0b10111110101000000111000010000111";
        ram[92] = "0b00111100001111100100000010101011";
        ram[93] = "0b00111110000010010010100011001000";
        ram[94] = "0b10111110010110110101110110100110";
        ram[95] = "0b10111100111010100110000100010000";
        ram[96] = "0b10111101110111000010101011111010";
        ram[97] = "0b00111101110100011100110101101111";
        ram[98] = "0b00111101100001011001110010000000";
        ram[99] = "0b10111101100011010011111001001011";
        ram[100] = "0b00111100011110110010111011001100";
        ram[101] = "0b10111101100010001101000011001110";
        ram[102] = "0b10111101010111000011100011111111";
        ram[103] = "0b10111101100100010101110110010001";
        ram[104] = "0b10111101101010001101001111001111";
        ram[105] = "0b00111100111111101000110110101101";
        ram[106] = "0b00111101011001101001000110000011";
        ram[107] = "0b10111101111011010010011101101111";
        ram[108] = "0b10111101101100001001100001010111";
        ram[109] = "0b10111100110010101011110001011000";
        ram[110] = "0b10111101111011011011100000011100";
        ram[111] = "0b10111101100111001110110110000111";
        ram[112] = "0b10111101011001101100111111010001";
        ram[113] = "0b10111110000101010001010000111000";
        ram[114] = "0b00111100110110111000101111011011";
        ram[115] = "0b00111101011000000111000111100100";
        ram[116] = "0b00111011110011101111100111000001";
        ram[117] = "0b10111101111011110110101111011001";
        ram[118] = "0b10111100101000100101011010100100";
        ram[119] = "0b10111101110010011000010011011011";
        ram[120] = "0b00111100101001010000100100111001";
        ram[121] = "0b10111101001010010000101000111010";
        ram[122] = "0b10111110000111010100100010110110";
        ram[123] = "0b00111101101101100000111101100111";
        ram[124] = "0b10111101011101011010000100000000";
        ram[125] = "0b00111101010010110001100001101011";
        ram[126] = "0b10111110001000110101010010001011";
        ram[127] = "0b10111101000000010000001011010100";
        ram[128] = "0b10111100000000001101101111010101";
        ram[129] = "0b00111101100100001100000010010000";
        ram[130] = "0b00111110000100001001001011001101";
        ram[131] = "0b10111101000010100111010110001011";
        ram[132] = "0b00111110001010110001111000011101";
        ram[133] = "0b10111110010100101010010001110110";
        ram[134] = "0b10111101101001000101010000000010";
        ram[135] = "0b00111101100100011000000010011010";
        ram[136] = "0b00111101101001110000101010011000";
        ram[137] = "0b10111100101111110111000111101000";
        ram[138] = "0b10111110001011111100111011001011";
        ram[139] = "0b10111110100100010100000100000000";
        ram[140] = "0b10111101110110000011000101000011";
        ram[141] = "0b10111010010000111100111010110000";
        ram[142] = "0b10111101110000100100110100111100";
        ram[143] = "0b10111100111000100111000100001111";
        ram[144] = "0b00111101100010100111010011010000";
        ram[145] = "0b10111110001110000111001110111010";
        ram[146] = "0b10111100111100110110100000001101";
        ram[147] = "0b10111101000110101100010000010111";
        ram[148] = "0b10111101111000101110111110011001";
        ram[149] = "0b10111101100010001000111010011100";
        ram[150] = "0b00111110000100001010110010100111";
        ram[151] = "0b10111110011010101100010101011010";
        ram[152] = "0b00111101010101010011001100111010";
        ram[153] = "0b10111101101000111100100100000100";
        ram[154] = "0b10111101001111010010001000011100";
        ram[155] = "0b10111101101100000101101101001010";
        ram[156] = "0b00111101100001010001011111011110";
        ram[157] = "0b10111100011001110010110010000010";
        ram[158] = "0b10111101111000001000101101111111";
        ram[159] = "0b10111101110010011010001000001110";
        ram[160] = "0b10111110101100100010101111000110";
        ram[161] = "0b00111110000111000111111111010101";
        ram[162] = "0b10111110010000011011101010100000";
        ram[163] = "0b10111100011010000110111100011100";
        ram[164] = "0b10111100011100001001110010110000";
        ram[165] = "0b10111110010110100001100011001010";
        ram[166] = "0b10111110000000101101011100100010";
        ram[167] = "0b10111101010101000100001110100011";
        ram[168] = "0b00111101010011101100011000001010";
        ram[169] = "0b10111110000111100111101000000101";
        ram[170] = "0b00111110000011110110000101101110";
        ram[171] = "0b00111101010010100100001111000000";
        ram[172] = "0b10111101101001010000001101010100";
        ram[173] = "0b10111101100101010111011111011001";
        ram[174] = "0b10111101100000010101110111001101";
        ram[175] = "0b10111110001111110100110010111101";
        ram[176] = "0b00111001011000001100001011101101";
        ram[177] = "0b00111101110000011110110101111100";
        ram[178] = "0b00111100111000001000110001010001";
        ram[179] = "0b10111101111000000101001011111011";
        ram[180] = "0b00111101111001011000111101110101";
        ram[181] = "0b10111101100001110100101010001100";
        ram[182] = "0b00111101001111010111111111101000";
        ram[183] = "0b00111110000101100011100000001111";
        ram[184] = "0b10111100100101101101101101011100";
        ram[185] = "0b10111110001001000010010110111101";
        ram[186] = "0b10111110000110111001011111010011";
        ram[187] = "0b10111101010010010111001100111100";
        ram[188] = "0b00111100111001001100110100110000";
        ram[189] = "0b10111101000100110000110010010110";
        ram[190] = "0b10111101001111001011010100101111";
        ram[191] = "0b00111100010000010110011010100001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiCeG) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiCeG_ram* meminst;


SC_CTOR(conv_2_conv_2_weiCeG) {
meminst = new conv_2_conv_2_weiCeG_ram("conv_2_conv_2_weiCeG_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiCeG() {
    delete meminst;
}


};//endmodule
#endif
