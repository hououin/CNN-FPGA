// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32nmb6.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_out< sc_lv<13> > conv_2_out_address0;
    sc_out< sc_logic > conv_2_out_ce0;
    sc_in< sc_lv<32> > conv_2_out_q0;
    sc_out< sc_lv<13> > conv_2_out_address1;
    sc_out< sc_logic > conv_2_out_ce1;
    sc_in< sc_lv<32> > conv_2_out_q1;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32nmb6<1,1,32,32,1>* cnn_fcmp_32ns_32nmb6_U133;
    cnn_fcmp_32ns_32nmb6<1,1,32,32,1>* cnn_fcmp_32ns_32nmb6_U134;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten23_reg_140;
    sc_signal< sc_lv<7> > f_0_reg_151;
    sc_signal< sc_lv<6> > indvar_flatten_reg_162;
    sc_signal< sc_lv<3> > r_0_reg_173;
    sc_signal< sc_lv<3> > c_0_reg_184;
    sc_signal< sc_lv<1> > icmp_ln9_fu_220_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_890;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > add_ln9_fu_226_p2;
    sc_signal< sc_lv<11> > add_ln9_reg_894;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > select_ln28_5_fu_252_p3;
    sc_signal< sc_lv<7> > select_ln28_5_reg_899;
    sc_signal< sc_lv<14> > zext_ln28_1_fu_260_p1;
    sc_signal< sc_lv<14> > zext_ln28_1_reg_905;
    sc_signal< sc_lv<3> > select_ln12_fu_310_p3;
    sc_signal< sc_lv<3> > select_ln12_reg_911;
    sc_signal< sc_lv<3> > select_ln12_1_fu_326_p3;
    sc_signal< sc_lv<3> > select_ln12_1_reg_917;
    sc_signal< sc_lv<4> > select_ln12_3_fu_358_p3;
    sc_signal< sc_lv<4> > select_ln12_3_reg_924;
    sc_signal< sc_lv<8> > zext_ln28_4_fu_374_p1;
    sc_signal< sc_lv<8> > zext_ln28_4_reg_929;
    sc_signal< sc_lv<8> > zext_ln28_7_fu_409_p1;
    sc_signal< sc_lv<8> > zext_ln28_7_reg_939;
    sc_signal< sc_lv<6> > select_ln12_4_fu_444_p3;
    sc_signal< sc_lv<6> > select_ln12_4_reg_949;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > select_ln28_1_fu_642_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_964;
    sc_signal< sc_lv<3> > c_fu_650_p2;
    sc_signal< sc_lv<3> > c_reg_971;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<11> > ap_phi_mux_indvar_flatten23_phi_fu_144_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<7> > ap_phi_mux_f_0_phi_fu_155_p4;
    sc_signal< sc_lv<6> > ap_phi_mux_indvar_flatten_phi_fu_166_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_r_0_phi_fu_177_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_188_p4;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_398_p1;
    sc_signal< sc_lv<64> > zext_ln28_8_fu_433_p1;
    sc_signal< sc_lv<64> > zext_ln28_6_fu_479_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_9_fu_553_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_885_p1;
    sc_signal< sc_lv<32> > grp_fu_195_p1;
    sc_signal< sc_lv<32> > grp_fu_201_p1;
    sc_signal< sc_lv<32> > select_ln28_fu_526_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_761_p3;
    sc_signal< sc_lv<4> > shl_ln_fu_206_p3;
    sc_signal< sc_lv<1> > icmp_ln12_fu_238_p2;
    sc_signal< sc_lv<7> > f_fu_232_p2;
    sc_signal< sc_lv<4> > or_ln25_fu_214_p2;
    sc_signal< sc_lv<1> > icmp_ln15_fu_286_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_280_p2;
    sc_signal< sc_lv<3> > select_ln28_4_fu_244_p3;
    sc_signal< sc_lv<1> > and_ln28_7_fu_292_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_304_p2;
    sc_signal< sc_lv<3> > r_fu_298_p2;
    sc_signal< sc_lv<4> > shl_ln25_mid1_fu_318_p3;
    sc_signal< sc_lv<4> > select_ln28_6_fu_264_p3;
    sc_signal< sc_lv<4> > select_ln12_2_fu_334_p3;
    sc_signal< sc_lv<4> > mul_ln28_fu_346_p1;
    sc_signal< sc_lv<4> > or_ln25_1_fu_352_p2;
    sc_signal< sc_lv<4> > select_ln28_7_fu_272_p3;
    sc_signal< sc_lv<4> > shl_ln1_fu_366_p3;
    sc_signal< sc_lv<8> > mul_ln28_fu_346_p2;
    sc_signal< sc_lv<8> > add_ln28_fu_378_p2;
    sc_signal< sc_lv<14> > tmp_14_cast_fu_384_p3;
    sc_signal< sc_lv<14> > add_ln28_1_fu_392_p2;
    sc_signal< sc_lv<4> > or_ln26_fu_403_p2;
    sc_signal< sc_lv<8> > add_ln28_4_fu_413_p2;
    sc_signal< sc_lv<14> > tmp_18_cast_fu_419_p3;
    sc_signal< sc_lv<14> > add_ln28_5_fu_427_p2;
    sc_signal< sc_lv<6> > add_ln12_fu_438_p2;
    sc_signal< sc_lv<4> > mul_ln28_1_fu_455_p1;
    sc_signal< sc_lv<8> > mul_ln28_1_fu_455_p2;
    sc_signal< sc_lv<8> > add_ln28_2_fu_461_p2;
    sc_signal< sc_lv<14> > tmp_16_cast_fu_466_p3;
    sc_signal< sc_lv<14> > add_ln28_3_fu_474_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_484_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_488_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_498_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_508_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_502_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_514_p2;
    sc_signal< sc_lv<1> > grp_fu_195_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_520_p2;
    sc_signal< sc_lv<8> > add_ln28_6_fu_535_p2;
    sc_signal< sc_lv<14> > tmp_20_cast_fu_540_p3;
    sc_signal< sc_lv<14> > add_ln28_7_fu_548_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_558_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_576_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_562_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_572_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_600_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_594_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_580_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_590_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_618_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_612_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_606_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_624_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_630_p2;
    sc_signal< sc_lv<1> > grp_fu_201_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_636_p2;
    sc_signal< sc_lv<5> > tmp_fu_661_p3;
    sc_signal< sc_lv<6> > zext_ln35_fu_658_p1;
    sc_signal< sc_lv<6> > zext_ln35_2_fu_668_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_678_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_696_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_682_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_692_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_719_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_713_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_699_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_709_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_737_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_731_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_725_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_743_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_749_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_755_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_769_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_787_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_773_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_783_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_811_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_805_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_791_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_801_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_829_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_823_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_817_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_835_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_841_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_847_p2;
    sc_signal< sc_lv<6> > add_ln35_fu_672_p2;
    sc_signal< sc_lv<6> > zext_ln35_1_fu_862_p1;
    sc_signal< sc_lv<6> > add_ln35_1_fu_865_p2;
    sc_signal< sc_lv<12> > tmp_22_cast_fu_871_p3;
    sc_signal< sc_lv<12> > zext_ln28_fu_655_p1;
    sc_signal< sc_lv<12> > add_ln35_2_fu_879_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > mul_ln28_1_fu_455_p10;
    sc_signal< sc_lv<8> > mul_ln28_fu_346_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_438_p2();
    void thread_add_ln28_1_fu_392_p2();
    void thread_add_ln28_2_fu_461_p2();
    void thread_add_ln28_3_fu_474_p2();
    void thread_add_ln28_4_fu_413_p2();
    void thread_add_ln28_5_fu_427_p2();
    void thread_add_ln28_6_fu_535_p2();
    void thread_add_ln28_7_fu_548_p2();
    void thread_add_ln28_fu_378_p2();
    void thread_add_ln35_1_fu_865_p2();
    void thread_add_ln35_2_fu_879_p2();
    void thread_add_ln35_fu_672_p2();
    void thread_add_ln9_fu_226_p2();
    void thread_and_ln28_1_fu_630_p2();
    void thread_and_ln28_2_fu_636_p2();
    void thread_and_ln28_3_fu_749_p2();
    void thread_and_ln28_4_fu_755_p2();
    void thread_and_ln28_5_fu_841_p2();
    void thread_and_ln28_6_fu_847_p2();
    void thread_and_ln28_7_fu_292_p2();
    void thread_and_ln28_fu_520_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_188_p4();
    void thread_ap_phi_mux_f_0_phi_fu_155_p4();
    void thread_ap_phi_mux_indvar_flatten23_phi_fu_144_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_166_p4();
    void thread_ap_phi_mux_r_0_phi_fu_177_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_558_p1();
    void thread_bitcast_ln28_2_fu_576_p1();
    void thread_bitcast_ln28_3_fu_678_p1();
    void thread_bitcast_ln28_4_fu_696_p1();
    void thread_bitcast_ln28_5_fu_769_p1();
    void thread_bitcast_ln28_6_fu_787_p1();
    void thread_bitcast_ln28_fu_484_p1();
    void thread_c_fu_650_p2();
    void thread_conv_2_out_address0();
    void thread_conv_2_out_address1();
    void thread_conv_2_out_ce0();
    void thread_conv_2_out_ce1();
    void thread_f_fu_232_p2();
    void thread_grp_fu_195_p1();
    void thread_grp_fu_201_p1();
    void thread_icmp_ln12_fu_238_p2();
    void thread_icmp_ln15_fu_286_p2();
    void thread_icmp_ln28_10_fu_805_p2();
    void thread_icmp_ln28_11_fu_811_p2();
    void thread_icmp_ln28_12_fu_823_p2();
    void thread_icmp_ln28_13_fu_829_p2();
    void thread_icmp_ln28_1_fu_508_p2();
    void thread_icmp_ln28_2_fu_594_p2();
    void thread_icmp_ln28_3_fu_600_p2();
    void thread_icmp_ln28_4_fu_612_p2();
    void thread_icmp_ln28_5_fu_618_p2();
    void thread_icmp_ln28_6_fu_713_p2();
    void thread_icmp_ln28_7_fu_719_p2();
    void thread_icmp_ln28_8_fu_731_p2();
    void thread_icmp_ln28_9_fu_737_p2();
    void thread_icmp_ln28_fu_502_p2();
    void thread_icmp_ln9_fu_220_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mul_ln28_1_fu_455_p1();
    void thread_mul_ln28_1_fu_455_p10();
    void thread_mul_ln28_1_fu_455_p2();
    void thread_mul_ln28_fu_346_p1();
    void thread_mul_ln28_fu_346_p10();
    void thread_mul_ln28_fu_346_p2();
    void thread_or_ln12_fu_304_p2();
    void thread_or_ln25_1_fu_352_p2();
    void thread_or_ln25_fu_214_p2();
    void thread_or_ln26_fu_403_p2();
    void thread_or_ln28_1_fu_606_p2();
    void thread_or_ln28_2_fu_624_p2();
    void thread_or_ln28_3_fu_725_p2();
    void thread_or_ln28_4_fu_743_p2();
    void thread_or_ln28_5_fu_817_p2();
    void thread_or_ln28_6_fu_835_p2();
    void thread_or_ln28_fu_514_p2();
    void thread_r_fu_298_p2();
    void thread_select_ln12_1_fu_326_p3();
    void thread_select_ln12_2_fu_334_p3();
    void thread_select_ln12_3_fu_358_p3();
    void thread_select_ln12_4_fu_444_p3();
    void thread_select_ln12_fu_310_p3();
    void thread_select_ln28_1_fu_642_p3();
    void thread_select_ln28_2_fu_761_p3();
    void thread_select_ln28_4_fu_244_p3();
    void thread_select_ln28_5_fu_252_p3();
    void thread_select_ln28_6_fu_264_p3();
    void thread_select_ln28_7_fu_272_p3();
    void thread_select_ln28_fu_526_p3();
    void thread_shl_ln1_fu_366_p3();
    void thread_shl_ln25_mid1_fu_318_p3();
    void thread_shl_ln_fu_206_p3();
    void thread_tmp_10_fu_791_p4();
    void thread_tmp_14_cast_fu_384_p3();
    void thread_tmp_16_cast_fu_466_p3();
    void thread_tmp_18_cast_fu_419_p3();
    void thread_tmp_1_fu_488_p4();
    void thread_tmp_20_cast_fu_540_p3();
    void thread_tmp_22_cast_fu_871_p3();
    void thread_tmp_3_fu_562_p4();
    void thread_tmp_4_fu_580_p4();
    void thread_tmp_5_fu_773_p4();
    void thread_tmp_8_fu_682_p4();
    void thread_tmp_9_fu_699_p4();
    void thread_tmp_fu_661_p3();
    void thread_trunc_ln28_1_fu_572_p1();
    void thread_trunc_ln28_2_fu_590_p1();
    void thread_trunc_ln28_3_fu_692_p1();
    void thread_trunc_ln28_4_fu_709_p1();
    void thread_trunc_ln28_5_fu_783_p1();
    void thread_trunc_ln28_6_fu_801_p1();
    void thread_trunc_ln28_fu_498_p1();
    void thread_xor_ln28_fu_280_p2();
    void thread_zext_ln28_1_fu_260_p1();
    void thread_zext_ln28_4_fu_374_p1();
    void thread_zext_ln28_5_fu_398_p1();
    void thread_zext_ln28_6_fu_479_p1();
    void thread_zext_ln28_7_fu_409_p1();
    void thread_zext_ln28_8_fu_433_p1();
    void thread_zext_ln28_9_fu_553_p1();
    void thread_zext_ln28_fu_655_p1();
    void thread_zext_ln35_1_fu_862_p1();
    void thread_zext_ln35_2_fu_668_p1();
    void thread_zext_ln35_3_fu_885_p1();
    void thread_zext_ln35_fu_658_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
