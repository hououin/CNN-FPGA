// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weivdy_H__
#define __conv_2_conv_2_weivdy_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weivdy_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weivdy_ram) {
        ram[0] = "0b00111101100001110100010100101100";
        ram[1] = "0b00111101010010000000000000110110";
        ram[2] = "0b00111101101110000100100001111111";
        ram[3] = "0b00111010111111111000111100110011";
        ram[4] = "0b10111101111011011000111000110110";
        ram[5] = "0b10111101000100000111011000000000";
        ram[6] = "0b10111101100001101111101001110001";
        ram[7] = "0b10111100101100111001001100000100";
        ram[8] = "0b10111100111011001100001000010110";
        ram[9] = "0b10111100101010100101111001011100";
        ram[10] = "0b00111101100011001100111000100110";
        ram[11] = "0b00111101001011010110110110111001";
        ram[12] = "0b10111101110101100100010001011010";
        ram[13] = "0b10111110001111011010000111001000";
        ram[14] = "0b10111110000100011010001100000011";
        ram[15] = "0b10111101101111100111101110010111";
        ram[16] = "0b00111100100100000100010100010110";
        ram[17] = "0b00111100111100100100101010101010";
        ram[18] = "0b10111110010110001110110100001110";
        ram[19] = "0b10111101001001110001110100001100";
        ram[20] = "0b10111101111110001100011001100011";
        ram[21] = "0b10111110100010000100111101011000";
        ram[22] = "0b10111110001010110100011110001101";
        ram[23] = "0b10111100101110010111110010000101";
        ram[24] = "0b00111100101001010100100111111000";
        ram[25] = "0b10111100011001001110011010010011";
        ram[26] = "0b10111101111101001011010101011100";
        ram[27] = "0b00111110000000010000010111110010";
        ram[28] = "0b10111100011000001111111011110000";
        ram[29] = "0b00111101001101001000001011100010";
        ram[30] = "0b10111100001111111010000011100111";
        ram[31] = "0b10111110000111011001000001110101";
        ram[32] = "0b10111100101111110100101101011101";
        ram[33] = "0b10111110001100001101011111000001";
        ram[34] = "0b00111101100010011011110001111010";
        ram[35] = "0b00111110000111000011101011111100";
        ram[36] = "0b00111101100111001111000010100111";
        ram[37] = "0b00111110001001110001101110101001";
        ram[38] = "0b10111100100111101011111001101011";
        ram[39] = "0b00111110000010001000001111111110";
        ram[40] = "0b10111101100001111100000010110010";
        ram[41] = "0b00111101011101011100011010111111";
        ram[42] = "0b00111100011100010110011001100000";
        ram[43] = "0b00111100011110001101101100000011";
        ram[44] = "0b00111100101110000110000010110111";
        ram[45] = "0b10111100101110001100101101000010";
        ram[46] = "0b00111101101000101010100100010101";
        ram[47] = "0b00111100001011101000111001011000";
        ram[48] = "0b00111110000000111000100101100000";
        ram[49] = "0b10111110010101010001001100110100";
        ram[50] = "0b10111101001110010000110000011001";
        ram[51] = "0b10111101011011010101101011001011";
        ram[52] = "0b10111110100001001010101110100011";
        ram[53] = "0b00111100001011010001001011110111";
        ram[54] = "0b00111100111011111001010001111101";
        ram[55] = "0b10111101110110110111000101010111";
        ram[56] = "0b10111110000000100010001010001011";
        ram[57] = "0b00111100110111101100100010101110";
        ram[58] = "0b10111101110000111010111000100101";
        ram[59] = "0b00111101100011110101001100110111";
        ram[60] = "0b10111101011001001110110010001001";
        ram[61] = "0b10111101100000111100100111100100";
        ram[62] = "0b00111101101111100010000000111000";
        ram[63] = "0b10111100010010000010011000100000";
        ram[64] = "0b00111100101001011000100010101010";
        ram[65] = "0b10111100101100011101000110011100";
        ram[66] = "0b00111110000010110010100010001011";
        ram[67] = "0b10111101010100000001001100111101";
        ram[68] = "0b10111101101001011011100000001000";
        ram[69] = "0b00111101110000110000111100000011";
        ram[70] = "0b00111100101001010100000100101110";
        ram[71] = "0b00111100000100110001100011000001";
        ram[72] = "0b10111011111001011111000001100011";
        ram[73] = "0b00111101111010111001000011101001";
        ram[74] = "0b10111101001111011101010101101111";
        ram[75] = "0b00111101011010010001000011001001";
        ram[76] = "0b10111101101000111111011100111000";
        ram[77] = "0b10111110000000110111011111100011";
        ram[78] = "0b10111101101111100100001110111010";
        ram[79] = "0b00111101000110100100100001110001";
        ram[80] = "0b00111101010011010111011111101101";
        ram[81] = "0b00111101101101100000110011111110";
        ram[82] = "0b10111101110110000010000100110000";
        ram[83] = "0b00111101111001110100100100001110";
        ram[84] = "0b10111110011101111001100000110010";
        ram[85] = "0b10111110001101111101000010011001";
        ram[86] = "0b00111100111010101111100001111010";
        ram[87] = "0b10111110010000101000010110011100";
        ram[88] = "0b10111100110111111001100111010111";
        ram[89] = "0b10111101001010100001000010100001";
        ram[90] = "0b10111100100101101010001010011011";
        ram[91] = "0b10111110011010100110000010111110";
        ram[92] = "0b10111101110001101101111010110010";
        ram[93] = "0b00111101111001110110111110110011";
        ram[94] = "0b10111101110001000110001010000110";
        ram[95] = "0b00111100010001100101101111001111";
        ram[96] = "0b10111101110001111011001011010101";
        ram[97] = "0b10111100101111110010111101111011";
        ram[98] = "0b10111101000110100011101000101110";
        ram[99] = "0b00111100100110011000111110011001";
        ram[100] = "0b00111100100101110000111101100110";
        ram[101] = "0b00111011001110011111110000110010";
        ram[102] = "0b10111101011001100010100011001100";
        ram[103] = "0b00111100101100001101111010111010";
        ram[104] = "0b10111100000110010011100100100001";
        ram[105] = "0b00111101110100100001110111100011";
        ram[106] = "0b00111101001001010001100100100101";
        ram[107] = "0b10111100110111101001110010001001";
        ram[108] = "0b00111100110100010111110111100001";
        ram[109] = "0b10111100010111110110100010010010";
        ram[110] = "0b00111100001100111101101010111001";
        ram[111] = "0b10111101011010101110100010111011";
        ram[112] = "0b00111110000001001011001011111101";
        ram[113] = "0b10111110001010000101000100110101";
        ram[114] = "0b10111110000000101110110011011001";
        ram[115] = "0b00111101011110100100010011111010";
        ram[116] = "0b10111101011010101010100110001011";
        ram[117] = "0b10111110010101110010001011011111";
        ram[118] = "0b00111110000001111110111000001100";
        ram[119] = "0b10111100110011111101001101010011";
        ram[120] = "0b10111101010100111100110100010111";
        ram[121] = "0b10111101100000001100110010000111";
        ram[122] = "0b00111101000001000110101101000110";
        ram[123] = "0b10111011110010111010101111000010";
        ram[124] = "0b10111110010011100010010010000101";
        ram[125] = "0b10111101000010001111010101011111";
        ram[126] = "0b10111101010100001100100010000101";
        ram[127] = "0b00111010110111000110101001010110";
        ram[128] = "0b10111100001000000100111001101111";
        ram[129] = "0b10111100111100100111010110111001";
        ram[130] = "0b10111100101101010100001010101011";
        ram[131] = "0b10111101101110010101011100100100";
        ram[132] = "0b10111100011111100110101010000010";
        ram[133] = "0b10111100100110111111000000011100";
        ram[134] = "0b10111110011000110100100001111111";
        ram[135] = "0b10111101010111010010111100011010";
        ram[136] = "0b00111100000100111010111000101110";
        ram[137] = "0b10111101101101010110001001001011";
        ram[138] = "0b10111101100011111101111000001011";
        ram[139] = "0b10111101111001101010001110001001";
        ram[140] = "0b10111110011110110010011001111110";
        ram[141] = "0b10111101000011100011101100000100";
        ram[142] = "0b10111100001000101110011010000001";
        ram[143] = "0b00111110000101001000001010010000";
        ram[144] = "0b00111100010010110101111100110010";
        ram[145] = "0b10111101010001000001100000011011";
        ram[146] = "0b00111100101101110100111011110111";
        ram[147] = "0b10111101100100000111011100010011";
        ram[148] = "0b10111110001000011011100001001101";
        ram[149] = "0b10111100101011111100111110101111";
        ram[150] = "0b00111101010001111001001111110100";
        ram[151] = "0b10111101100010010111010101010011";
        ram[152] = "0b10111101000100111000011110000101";
        ram[153] = "0b10111011111110110010011111001010";
        ram[154] = "0b00111101100110110100101010100010";
        ram[155] = "0b10111110011100101100011101100100";
        ram[156] = "0b00111101110001010111010011001101";
        ram[157] = "0b00111101011001111001001000001111";
        ram[158] = "0b10111110000101010110001100011001";
        ram[159] = "0b00111101011011100100000101101100";
        ram[160] = "0b10111110100000100100011000110011";
        ram[161] = "0b00111110000000111101011001100001";
        ram[162] = "0b10111101101010100011000111101011";
        ram[163] = "0b10111101011111111100101000000001";
        ram[164] = "0b10111011000001001111110101001001";
        ram[165] = "0b10111011101010001011111001000010";
        ram[166] = "0b10111110000011110100110101110000";
        ram[167] = "0b00111101111101111101010101000010";
        ram[168] = "0b10111101100011001100001000101001";
        ram[169] = "0b10111101100000100000000000010001";
        ram[170] = "0b00111110001011001000011001010110";
        ram[171] = "0b00111101100110000110000010100010";
        ram[172] = "0b00111100111010101101000101010110";
        ram[173] = "0b10111110000010011000011000010001";
        ram[174] = "0b10111100111000000000001001011011";
        ram[175] = "0b10111101001010000001101110100101";
        ram[176] = "0b10111101111000010011000100101001";
        ram[177] = "0b00111101000010011101000111011010";
        ram[178] = "0b10111110001001000000001010111001";
        ram[179] = "0b10111101010111110011101000001100";
        ram[180] = "0b10111011101111111110011111100110";
        ram[181] = "0b10111110010000010110110111100101";
        ram[182] = "0b00111101100001001111101100110010";
        ram[183] = "0b10111011100011101101011011010010";
        ram[184] = "0b10111101100100011111111100100100";
        ram[185] = "0b10111101101101110010011011010010";
        ram[186] = "0b10111101110010001110010110100101";
        ram[187] = "0b00111101000110011111100000010001";
        ram[188] = "0b00111100111010010111110011010010";
        ram[189] = "0b00111101011000001001111011000011";
        ram[190] = "0b00111110000101100011001110111011";
        ram[191] = "0b10111001110111000101101111010111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weivdy) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weivdy_ram* meminst;


SC_CTOR(conv_2_conv_2_weivdy) {
meminst = new conv_2_conv_2_weivdy_ram("conv_2_conv_2_weivdy_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weivdy() {
    delete meminst;
}


};//endmodule
#endif
