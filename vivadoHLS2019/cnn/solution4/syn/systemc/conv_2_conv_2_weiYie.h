// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiYie_H__
#define __conv_2_conv_2_weiYie_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiYie_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiYie_ram) {
        ram[0] = "0b10111110001111100100101101100111";
        ram[1] = "0b00111011111010101010110001111111";
        ram[2] = "0b00111110011000100010100100101000";
        ram[3] = "0b10111101001011000010010100001011";
        ram[4] = "0b00111100001111110011010100000101";
        ram[5] = "0b10111101100000100101011101111101";
        ram[6] = "0b10111110101010010110001101110011";
        ram[7] = "0b00111100101010111110011110100100";
        ram[8] = "0b10111110111101001111101011000000";
        ram[9] = "0b10111101010100110111011100101110";
        ram[10] = "0b00111100010111101000000101011000";
        ram[11] = "0b00111110011001100001111100000110";
        ram[12] = "0b10111110000100000011100100101101";
        ram[13] = "0b10111110000110111011001001000110";
        ram[14] = "0b10111111000011101100101111111101";
        ram[15] = "0b10111110100001111100011100111110";
        ram[16] = "0b10111011111010010001000010100100";
        ram[17] = "0b10111101010000001100000111000010";
        ram[18] = "0b00111110010110110000110110011100";
        ram[19] = "0b00111101001001001101011011001010";
        ram[20] = "0b00111101100011110110101001100011";
        ram[21] = "0b10111110001100001000000110011011";
        ram[22] = "0b10111110010011011001101100000110";
        ram[23] = "0b00111101011100101110100011001011";
        ram[24] = "0b10111110111000000001010111001101";
        ram[25] = "0b10111110000111110010000011101100";
        ram[26] = "0b10111101111101001111001001101001";
        ram[27] = "0b00111100110110010000111011000100";
        ram[28] = "0b10111110000110101110011011100110";
        ram[29] = "0b10111100100101110001110100010111";
        ram[30] = "0b00111110010011111011000111001000";
        ram[31] = "0b10111101100100101111100110101110";
        ram[32] = "0b10111011111011111110100000001000";
        ram[33] = "0b00111101111111001100100001100001";
        ram[34] = "0b00111101001100100011000000001011";
        ram[35] = "0b00111101001010110010010000110111";
        ram[36] = "0b00111101100000000101000100010000";
        ram[37] = "0b00111101111111100101110100100010";
        ram[38] = "0b10111101110000101100100001010100";
        ram[39] = "0b10111110101000000001011100110010";
        ram[40] = "0b10111101111111101001010101010000";
        ram[41] = "0b10111110110110000110100110110100";
        ram[42] = "0b10111110011111000000000000111001";
        ram[43] = "0b10111110011010011100010110001001";
        ram[44] = "0b00111101111010110110010010011000";
        ram[45] = "0b10111101011100110101100010110000";
        ram[46] = "0b10111110011111001101111001010011";
        ram[47] = "0b10111110100101011011111111010010";
        ram[48] = "0b00111101101101010011001001110111";
        ram[49] = "0b00111101011010111101001001111001";
        ram[50] = "0b10111110101011011010011100001000";
        ram[51] = "0b00111100110001000000100100000100";
        ram[52] = "0b10111101011100111100010110111000";
        ram[53] = "0b10111110100001010010011000100010";
        ram[54] = "0b10111110100111111000011100000111";
        ram[55] = "0b00111101010100100001011000011011";
        ram[56] = "0b00111101000010100110001011001110";
        ram[57] = "0b00111101101010000101100000110110";
        ram[58] = "0b10111101010000100010101111000101";
        ram[59] = "0b00111100101000001101000011000001";
        ram[60] = "0b10111110100011100100011001000000";
        ram[61] = "0b10111110100110001001000000010000";
        ram[62] = "0b10111011000010111011001001110011";
        ram[63] = "0b10111110001000111110110100101100";
        ram[64] = "0b10111101110000100001001101101011";
        ram[65] = "0b10111101111110011101100101100101";
        ram[66] = "0b10111110000111011010111000110101";
        ram[67] = "0b00111101110000010101001000110111";
        ram[68] = "0b10111101111110100010000000101111";
        ram[69] = "0b10111101011110101010000111110010";
        ram[70] = "0b10111100100101111010000011010111";
        ram[71] = "0b00111101000000100111100011110001";
        ram[72] = "0b10111110111100011010100010001110";
        ram[73] = "0b10111011101100100111010101100111";
        ram[74] = "0b00111110000110101000011010001001";
        ram[75] = "0b10111101000100011010101000011010";
        ram[76] = "0b10111101110001101001000011111101";
        ram[77] = "0b10111110101100101110011010010101";
        ram[78] = "0b10111110100101111011100111110101";
        ram[79] = "0b10111110010010101010111010001100";
        ram[80] = "0b10111110001011110000000100010110";
        ram[81] = "0b00111101000011101101010100111100";
        ram[82] = "0b10111110000101010110000000101110";
        ram[83] = "0b00111100111010101111000001011111";
        ram[84] = "0b00111110100011011001010111011110";
        ram[85] = "0b10111110010001100110001010100010";
        ram[86] = "0b10111110111010000100000111100001";
        ram[87] = "0b10111101001011011011001100111101";
        ram[88] = "0b10111110000101011101111011101010";
        ram[89] = "0b10111110100001110100100111001001";
        ram[90] = "0b10111100110001000110101001101000";
        ram[91] = "0b10111110010011111101111011111111";
        ram[92] = "0b10111110011000110111110001101110";
        ram[93] = "0b10111101011111011001111110110101";
        ram[94] = "0b00111110010001011100111110001101";
        ram[95] = "0b00111101110011000111011011011110";
        ram[96] = "0b00111101100011010110110100001011";
        ram[97] = "0b00111110010010000101111001100010";
        ram[98] = "0b00111100110011000000010000011011";
        ram[99] = "0b00111100011110001111000011100100";
        ram[100] = "0b10111101011111000011101011100111";
        ram[101] = "0b00111101111000000101110110000000";
        ram[102] = "0b10111110000101011100001110111011";
        ram[103] = "0b10111110100111000111110010110011";
        ram[104] = "0b10111101111001010010011011110111";
        ram[105] = "0b10111101110000011110100110000011";
        ram[106] = "0b10111110001100000101011110110011";
        ram[107] = "0b10111101101000110100000101011111";
        ram[108] = "0b00111101100110100000001010111000";
        ram[109] = "0b00111101110000010010100111011000";
        ram[110] = "0b00111100110011000101111111110010";
        ram[111] = "0b10111100000111010101011101111101";
        ram[112] = "0b10111100110101010110101010111111";
        ram[113] = "0b10111110000101101100101010001001";
        ram[114] = "0b10111110010011110001000000010101";
        ram[115] = "0b00111100111010100001000110101110";
        ram[116] = "0b10111110000010001001111110100100";
        ram[117] = "0b10111101010000000100110010111100";
        ram[118] = "0b10111110011111110001010110101110";
        ram[119] = "0b00111100101010010000101010010101";
        ram[120] = "0b00111110000111101001000101000001";
        ram[121] = "0b00111110000100100101001101000100";
        ram[122] = "0b10111110000110110011110000001110";
        ram[123] = "0b00111100111001010000010110001001";
        ram[124] = "0b10111110110011100111000111011110";
        ram[125] = "0b10111101110001101010100100100111";
        ram[126] = "0b00111101100100101101010000001000";
        ram[127] = "0b10111101000101100001001000101000";
        ram[128] = "0b00111110010011001000100110100111";
        ram[129] = "0b10111110001000001001110001011101";
        ram[130] = "0b10111110011100000011001000111111";
        ram[131] = "0b00111110010001111111000111000101";
        ram[132] = "0b10111110100100011010111110101101";
        ram[133] = "0b00111110011110011110101011010100";
        ram[134] = "0b00111110010000101100001100100111";
        ram[135] = "0b10111101100011011001111010000110";
        ram[136] = "0b00111110010110001101111100010011";
        ram[137] = "0b00111011100111101100010000110000";
        ram[138] = "0b00111110000010001000010011111000";
        ram[139] = "0b00111101000011000101000100100000";
        ram[140] = "0b00111101100111110101011100110011";
        ram[141] = "0b10111110100100101001100100010110";
        ram[142] = "0b00111101111101110101100010001010";
        ram[143] = "0b10111100101111000111101101010100";
        ram[144] = "0b00111110000010001001111011100011";
        ram[145] = "0b00111110010111101110000111101101";
        ram[146] = "0b00111101001011110001110111101001";
        ram[147] = "0b10111101111011010111111010001001";
        ram[148] = "0b10111110001011100000111010111010";
        ram[149] = "0b10111110111100100101101011000111";
        ram[150] = "0b10111110011001001110000010010101";
        ram[151] = "0b00111101011101001010111100110000";
        ram[152] = "0b00111101100111111111011010111101";
        ram[153] = "0b00111110000110011110001111100001";
        ram[154] = "0b00111101100010000101000000001001";
        ram[155] = "0b00111101100011101000010100100101";
        ram[156] = "0b10111101001111001011010111100011";
        ram[157] = "0b10111100011001101011110001000110";
        ram[158] = "0b10111101010110100001101101111010";
        ram[159] = "0b00111100101111101110101010111010";
        ram[160] = "0b00111110010011001000011001111100";
        ram[161] = "0b10111101111011100001001101011111";
        ram[162] = "0b00111110010101100001010111010111";
        ram[163] = "0b00111101010111110000010110000011";
        ram[164] = "0b10111110001100000100100011110111";
        ram[165] = "0b10111110001000101101110101110111";
        ram[166] = "0b10111110011011011011010001010111";
        ram[167] = "0b00111010110011101010100101000100";
        ram[168] = "0b10111110111110000010100101101110";
        ram[169] = "0b00111110001100000110111111010011";
        ram[170] = "0b10111110010100000100011111001011";
        ram[171] = "0b00111110100100001111110010101000";
        ram[172] = "0b10111101000000110101000011101110";
        ram[173] = "0b00111110100000000011000101010000";
        ram[174] = "0b00111101111111111110000110000001";
        ram[175] = "0b00111101010011100011010010111100";
        ram[176] = "0b10111101101110011000011000111101";
        ram[177] = "0b10111101101010010010101011111101";
        ram[178] = "0b10111101000011001101001100100111";
        ram[179] = "0b10111100100110111010111001010100";
        ram[180] = "0b00111110001101111001010110101110";
        ram[181] = "0b10111110100100010010101110101000";
        ram[182] = "0b10111110000110111101101100110100";
        ram[183] = "0b10111101011100100110101111001010";
        ram[184] = "0b00111110000011100100010100010011";
        ram[185] = "0b10111101111111111010101010110000";
        ram[186] = "0b10111101110110001110100010111011";
        ram[187] = "0b00111101000111101000011001110110";
        ram[188] = "0b10111110100000011000110101100100";
        ram[189] = "0b00111101000011110001011100100111";
        ram[190] = "0b00111101010011111110010110011110";
        ram[191] = "0b10111101011001111000110010111000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiYie) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiYie_ram* meminst;


SC_CTOR(conv_2_conv_2_weiYie) {
meminst = new conv_2_conv_2_weiYie_ram("conv_2_conv_2_weiYie_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiYie() {
    delete meminst;
}


};//endmodule
#endif
