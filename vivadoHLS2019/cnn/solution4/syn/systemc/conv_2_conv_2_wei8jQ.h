// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei8jQ_H__
#define __conv_2_conv_2_wei8jQ_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei8jQ_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei8jQ_ram) {
        ram[0] = "0b00111011100101001110000000001010";
        ram[1] = "0b00111100100100110010001111011001";
        ram[2] = "0b10111101100101000011110011000011";
        ram[3] = "0b10111101011111011111111110011110";
        ram[4] = "0b00111101111010100111110001111100";
        ram[5] = "0b10111101001110110100001010101001";
        ram[6] = "0b00111101101111010010110101100111";
        ram[7] = "0b10111101000000001010110101001100";
        ram[8] = "0b10111100111100010011011011100011";
        ram[9] = "0b00111100011011100001011010100011";
        ram[10] = "0b00111101011111010111000001100010";
        ram[11] = "0b10111100000010110100100001100011";
        ram[12] = "0b00111101000111011001110011110010";
        ram[13] = "0b00111101100101111001111101001110";
        ram[14] = "0b00111101100110000100111011000000";
        ram[15] = "0b00111101101001101011000010110111";
        ram[16] = "0b10111011000000001110111010011011";
        ram[17] = "0b10111101111011101110100110101000";
        ram[18] = "0b10111110000101111100011101010101";
        ram[19] = "0b10111101110011010110100001001001";
        ram[20] = "0b00111101101001110101010100100110";
        ram[21] = "0b00111101100010001001001000110000";
        ram[22] = "0b10111100000110011011000111011001";
        ram[23] = "0b00111101000001100111100101010101";
        ram[24] = "0b00111100100011101110100011010110";
        ram[25] = "0b10111110000100100010101001001111";
        ram[26] = "0b00111101010111110111011111010101";
        ram[27] = "0b10111110011010101000001011011101";
        ram[28] = "0b10111101111111110011111110111101";
        ram[29] = "0b10111101001011000000110111100011";
        ram[30] = "0b10111100100011100001111111011110";
        ram[31] = "0b10111110001110111111010100011111";
        ram[32] = "0b10111101100000011111110011010100";
        ram[33] = "0b00111101011100101110100110011111";
        ram[34] = "0b10111101010111011101110100000111";
        ram[35] = "0b10111100111100110011110110011001";
        ram[36] = "0b10111110010100101110110110101001";
        ram[37] = "0b00111101010110011001101010101110";
        ram[38] = "0b10111101100101010000100000101101";
        ram[39] = "0b10111101111000111100111110000101";
        ram[40] = "0b10111101111011100110001111111110";
        ram[41] = "0b10111101001100001001010101111000";
        ram[42] = "0b00111101100011110000011010011100";
        ram[43] = "0b00111101010100011101010000001110";
        ram[44] = "0b00111101010111011010011011101011";
        ram[45] = "0b10111011100100101110111101001100";
        ram[46] = "0b00111100011100101010010111110100";
        ram[47] = "0b10111100101000000001100010010001";
        ram[48] = "0b10111101101110100110100011010011";
        ram[49] = "0b10111110010100111010000000001101";
        ram[50] = "0b10111101000000001110001111110100";
        ram[51] = "0b00111101100000011110011110111001";
        ram[52] = "0b10111110010100101110100111110000";
        ram[53] = "0b00111100011111011110011001010100";
        ram[54] = "0b10111101100010010010001110011011";
        ram[55] = "0b10111110000000000000001100001100";
        ram[56] = "0b10111101110010010101110101101001";
        ram[57] = "0b10111010111110110000101101101011";
        ram[58] = "0b00111101000011000010000110101101";
        ram[59] = "0b00111100010101001101000110011000";
        ram[60] = "0b00111101010011011011101011010111";
        ram[61] = "0b10111101110100000110001110111000";
        ram[62] = "0b10111101001001000110101110000000";
        ram[63] = "0b10111101101111111001000110101101";
        ram[64] = "0b00111101110010100011111010100011";
        ram[65] = "0b10111011001001101110001100110110";
        ram[66] = "0b10111011001110011011110100010000";
        ram[67] = "0b10111101110011101110001001100011";
        ram[68] = "0b00111101101100100000110000010111";
        ram[69] = "0b00111101100100010110001000011110";
        ram[70] = "0b10111100101000000000001110100101";
        ram[71] = "0b10111101100110011010101011011000";
        ram[72] = "0b10111110000100000101010001111001";
        ram[73] = "0b10111101011000000001110100001001";
        ram[74] = "0b10111100011101110000010001011100";
        ram[75] = "0b10111101010001100110100111010111";
        ram[76] = "0b00111101101101111100000001111110";
        ram[77] = "0b00111110000010111010011001100100";
        ram[78] = "0b10111101100101011111110111101110";
        ram[79] = "0b10111110000100111000010101001110";
        ram[80] = "0b00111101000100001000001000010100";
        ram[81] = "0b10111100100001100000010011100100";
        ram[82] = "0b10111101000000001000001101100000";
        ram[83] = "0b10111100101001101001011110011000";
        ram[84] = "0b10111110001010110110000001010011";
        ram[85] = "0b00111101100011011000110111011000";
        ram[86] = "0b10111101000110010011000011100111";
        ram[87] = "0b10111011000010000111000011111011";
        ram[88] = "0b00111101101111101111010000000010";
        ram[89] = "0b00111100000101110001001100101110";
        ram[90] = "0b00111101010100100101111000001011";
        ram[91] = "0b10111101101111100010000010100001";
        ram[92] = "0b10111100101100000100001100100000";
        ram[93] = "0b10111101100110010011010000010100";
        ram[94] = "0b10111100111011001011010000110110";
        ram[95] = "0b00111100110101101010101110011001";
        ram[96] = "0b10111101100001110010001100001010";
        ram[97] = "0b10111101010011011010110000001001";
        ram[98] = "0b00111101011011100111101111100100";
        ram[99] = "0b10111100011101110100011111101101";
        ram[100] = "0b00111101100101101010000111100011";
        ram[101] = "0b10111110100000110101101111011000";
        ram[102] = "0b00111011000001101000011111000010";
        ram[103] = "0b10111100111110010011110010011011";
        ram[104] = "0b00111101110000111010011111010100";
        ram[105] = "0b10111101100100111000110111100010";
        ram[106] = "0b00111101101110010100100101011000";
        ram[107] = "0b10111101111010100100110011000100";
        ram[108] = "0b10111101101001000011111100001110";
        ram[109] = "0b00111100100111101001101111000011";
        ram[110] = "0b00111101010100110111011110001000";
        ram[111] = "0b10111100101001110111001000110001";
        ram[112] = "0b00111101001100110110110011101100";
        ram[113] = "0b10111101000011000101000101010100";
        ram[114] = "0b10111011100111010110100101010110";
        ram[115] = "0b10111101011110110001001010101111";
        ram[116] = "0b10111101110110111101101100111011";
        ram[117] = "0b00111011001010000000111100101001";
        ram[118] = "0b10111101111101011011110001000110";
        ram[119] = "0b10111110000010110000010101101010";
        ram[120] = "0b10111101110000001101110110001110";
        ram[121] = "0b10111101001000000011001111010000";
        ram[122] = "0b00111101100110010100110001010101";
        ram[123] = "0b10111101000000000111001110010010";
        ram[124] = "0b00111101110000101110010001011100";
        ram[125] = "0b10111101111101011101011011000111";
        ram[126] = "0b10111101110011110010000110100011";
        ram[127] = "0b10111101010011010101111111001001";
        ram[128] = "0b10111101111001111001001000111100";
        ram[129] = "0b10111100000010111010010111111100";
        ram[130] = "0b10111110000001010001011111001011";
        ram[131] = "0b00111100101100010001011001011110";
        ram[132] = "0b00111110000111100011010001011010";
        ram[133] = "0b10111110001100001111011101100011";
        ram[134] = "0b00111101010011111101100110001001";
        ram[135] = "0b10111100010100100100111111010010";
        ram[136] = "0b00111100110110110110011111000111";
        ram[137] = "0b10111110000111001011101010011111";
        ram[138] = "0b10111110100000110100101101010100";
        ram[139] = "0b10111110011011011100111101011010";
        ram[140] = "0b00111101101010010111000110010111";
        ram[141] = "0b00111110000001011110101111100101";
        ram[142] = "0b10111100100111000110010001001111";
        ram[143] = "0b10111101100000000111111100001010";
        ram[144] = "0b10111101101010111101111100101100";
        ram[145] = "0b10111110000010101110110000001100";
        ram[146] = "0b10111101001001101111100010010110";
        ram[147] = "0b10111101000101010110100011011010";
        ram[148] = "0b10111101100100000100010011101010";
        ram[149] = "0b00111110000101000010111001011110";
        ram[150] = "0b00111101010111001000011101101000";
        ram[151] = "0b10111101001111010110010001010110";
        ram[152] = "0b00111101111011010001111001101000";
        ram[153] = "0b00111100111100101110000110110001";
        ram[154] = "0b10111101101111110001000111100110";
        ram[155] = "0b00111101011010100100010001010011";
        ram[156] = "0b10111110000110110001010010010111";
        ram[157] = "0b10111101101011111111100001010011";
        ram[158] = "0b10111101110001110010001111011000";
        ram[159] = "0b00111011111111100110111010001110";
        ram[160] = "0b10111110100000100100000001001111";
        ram[161] = "0b10111101010010110111101001111001";
        ram[162] = "0b10111110010000101010000100010001";
        ram[163] = "0b10111101010110111100001110110100";
        ram[164] = "0b00111101110001010000110000111000";
        ram[165] = "0b10111100001111111000010110110001";
        ram[166] = "0b10111011100101110101010001010000";
        ram[167] = "0b10111101100011010011100001111111";
        ram[168] = "0b00111110000100010111101110111000";
        ram[169] = "0b10111101111011111010110011111011";
        ram[170] = "0b00111110000010111011011100000110";
        ram[171] = "0b00111101000001000000100001101010";
        ram[172] = "0b10111110001010111110011010110001";
        ram[173] = "0b10111110010000000111010010011101";
        ram[174] = "0b10111101111000000110110001010101";
        ram[175] = "0b10111101100110011111010010001111";
        ram[176] = "0b10111101100110101100011101001110";
        ram[177] = "0b00111101100101110101101110110000";
        ram[178] = "0b10111011010111101011001110000101";
        ram[179] = "0b10111101100010110111000100011100";
        ram[180] = "0b00111101011011100101001111010111";
        ram[181] = "0b00111101100011100011100110010000";
        ram[182] = "0b10111101001101010101011000101000";
        ram[183] = "0b00111101110000100011000100010101";
        ram[184] = "0b10111110000010100011111001111110";
        ram[185] = "0b10111101101010110100110101111001";
        ram[186] = "0b10111100001001001001001110100011";
        ram[187] = "0b10111011100011110001101110111010";
        ram[188] = "0b00111101101001010000101100110010";
        ram[189] = "0b00111101100011000100100110011111";
        ram[190] = "0b00111101000101000101000100010111";
        ram[191] = "0b00111100001101110110000000001011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei8jQ) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei8jQ_ram* meminst;


SC_CTOR(conv_2_conv_2_wei8jQ) {
meminst = new conv_2_conv_2_wei8jQ_ram("conv_2_conv_2_wei8jQ_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei8jQ() {
    delete meminst;
}


};//endmodule
#endif
