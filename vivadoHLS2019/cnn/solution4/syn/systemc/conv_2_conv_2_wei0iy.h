// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei0iy_H__
#define __conv_2_conv_2_wei0iy_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei0iy_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei0iy_ram) {
        ram[0] = "0b10111101011110110110010001110001";
        ram[1] = "0b00111110001000001100100000011011";
        ram[2] = "0b00111110100000000000000110101110";
        ram[3] = "0b10111110100110001111101100010101";
        ram[4] = "0b00111101100110011000011100001110";
        ram[5] = "0b10111101101010010000001000101110";
        ram[6] = "0b10111110000001100110011001100011";
        ram[7] = "0b00111110000010111000011100100010";
        ram[8] = "0b10111110011001000010110101001110";
        ram[9] = "0b00111101011100110011111001010101";
        ram[10] = "0b10111101101000101000010000101001";
        ram[11] = "0b00111101101000110010101000111101";
        ram[12] = "0b10111101110001000010010000000001";
        ram[13] = "0b10111101110110111101110111101011";
        ram[14] = "0b10111110101011100101010001111101";
        ram[15] = "0b10111110101110110101100101000101";
        ram[16] = "0b00111101100110000010001110001100";
        ram[17] = "0b10111101101111011110100010100000";
        ram[18] = "0b00111100100101011010000101010110";
        ram[19] = "0b00111101011011111000111011000101";
        ram[20] = "0b00111110001000100011111011100011";
        ram[21] = "0b00111101011101000110110100010001";
        ram[22] = "0b10111110000010110010101000100101";
        ram[23] = "0b10111101111011010010111110001001";
        ram[24] = "0b10111110000011111001111110100110";
        ram[25] = "0b10111101110001100010001000010010";
        ram[26] = "0b10111110000011101010111011111101";
        ram[27] = "0b10111101000010101110011111010000";
        ram[28] = "0b10111101001110000010101010111100";
        ram[29] = "0b00111101101001110110010001110000";
        ram[30] = "0b10111101010110001100010100001001";
        ram[31] = "0b00111101110110100110001000010001";
        ram[32] = "0b10111110011001101000101011011011";
        ram[33] = "0b00111110000001010101101010011101";
        ram[34] = "0b10111110001010010110110001100010";
        ram[35] = "0b00111110001010111100111000110000";
        ram[36] = "0b00111110101000101110000001101001";
        ram[37] = "0b10111101001011100101011001001111";
        ram[38] = "0b10111101001111000110111101101010";
        ram[39] = "0b10111101110001011101111101010110";
        ram[40] = "0b10111100110001001001101001111100";
        ram[41] = "0b10111110100000111001101011100111";
        ram[42] = "0b00111101011011101000010101110001";
        ram[43] = "0b10111110110000111000000101011101";
        ram[44] = "0b00111011001100010010110010001010";
        ram[45] = "0b10111110100001001101010110001100";
        ram[46] = "0b00111101011101101011001111110100";
        ram[47] = "0b10111110101011110101011100110110";
        ram[48] = "0b00111101111100010001111111001100";
        ram[49] = "0b10111100110010000011010101111110";
        ram[50] = "0b10111110000110100000001011100000";
        ram[51] = "0b00111100110001000011010000100000";
        ram[52] = "0b10111100010101011010110101010100";
        ram[53] = "0b10111110000101000010100101111100";
        ram[54] = "0b10111010010011101100011011001011";
        ram[55] = "0b10111110001000011110101001111011";
        ram[56] = "0b10111101100101101000010011000101";
        ram[57] = "0b00111101110011100011001111100010";
        ram[58] = "0b00111101011110101111110101001101";
        ram[59] = "0b10111110001101111010100000010111";
        ram[60] = "0b10111011110011011011100010111101";
        ram[61] = "0b10111110101110111001101111001010";
        ram[62] = "0b10111110001110001010011110000111";
        ram[63] = "0b10111110010110011100111101000110";
        ram[64] = "0b00111101100111010001101100011000";
        ram[65] = "0b00111100101111010010011100011000";
        ram[66] = "0b00111101100010001000111111000010";
        ram[67] = "0b10111101100010001110001011001001";
        ram[68] = "0b10111101100101001111000111100001";
        ram[69] = "0b10111011010000110110000101110000";
        ram[70] = "0b10111110001111010000001100101010";
        ram[71] = "0b10111011111110110000110000001010";
        ram[72] = "0b10111110000100010010011101110000";
        ram[73] = "0b00111101110011001011111111110010";
        ram[74] = "0b00111100101101101100111001101000";
        ram[75] = "0b00111101010011000100111001100000";
        ram[76] = "0b10111101100100110001000101011010";
        ram[77] = "0b10111110001011000100010011111101";
        ram[78] = "0b10111111001000101100011000000101";
        ram[79] = "0b10111110111101011111010010101110";
        ram[80] = "0b10111110101001011101001011101011";
        ram[81] = "0b00111100101000100101011011100110";
        ram[82] = "0b10111110000100010100100110110101";
        ram[83] = "0b00111100000101011000111011000101";
        ram[84] = "0b00111110000000100111000110001100";
        ram[85] = "0b00111100111110000111110001110011";
        ram[86] = "0b10111110000101100101101000111001";
        ram[87] = "0b10111110100011011110000111101110";
        ram[88] = "0b10111110011001000100111111010001";
        ram[89] = "0b00111101001011001111110001011110";
        ram[90] = "0b10111101000001100101110011101111";
        ram[91] = "0b10111110000001000100010101101010";
        ram[92] = "0b10111110111000100011001001000100";
        ram[93] = "0b10111101101000110100001001001100";
        ram[94] = "0b10111101101101011111000101010001";
        ram[95] = "0b00111101101100001111000100111000";
        ram[96] = "0b10111101101000111001001100100000";
        ram[97] = "0b00111110100000101011111111100010";
        ram[98] = "0b10111101101101111011101000010011";
        ram[99] = "0b00111101010001011100000101010001";
        ram[100] = "0b00111110011010110110111101111001";
        ram[101] = "0b10111101011110010111010110000111";
        ram[102] = "0b10111110011010010101101011010011";
        ram[103] = "0b10111101100010010110110000010000";
        ram[104] = "0b10111100010100110101000010001101";
        ram[105] = "0b10111110000110100011111111000010";
        ram[106] = "0b00111100000100000101100001111010";
        ram[107] = "0b10111011100001001100100100000001";
        ram[108] = "0b10111101100110010110010000011110";
        ram[109] = "0b10111110001100010111100001101000";
        ram[110] = "0b10111110101100011101110110111100";
        ram[111] = "0b10111110011101101110000011000100";
        ram[112] = "0b10111100110010011010111111111101";
        ram[113] = "0b00111101101110001001001110100010";
        ram[114] = "0b10111101111100111000111001000010";
        ram[115] = "0b10111110001001000100110100111100";
        ram[116] = "0b10111100111010011000111010011100";
        ram[117] = "0b00111101011011101001001111000011";
        ram[118] = "0b10111110001111110111110100111010";
        ram[119] = "0b00111101110011000011011010011100";
        ram[120] = "0b10111110100000000100111111000100";
        ram[121] = "0b00111101010101001001100101100101";
        ram[122] = "0b00111100011011010001000100011011";
        ram[123] = "0b10111110110100010101111011001110";
        ram[124] = "0b10111101000000001101100110101011";
        ram[125] = "0b00111101011010001010111101111001";
        ram[126] = "0b10111101110011111001101100001100";
        ram[127] = "0b10111101101000000111110110101000";
        ram[128] = "0b10111110000010001010001111000101";
        ram[129] = "0b10111110010110001100111011010001";
        ram[130] = "0b10111110010100100000100011011101";
        ram[131] = "0b10111101110011010111000110101001";
        ram[132] = "0b00111011110111001001001011000011";
        ram[133] = "0b00111101010100111101100001110000";
        ram[134] = "0b10111110100110000101100001111111";
        ram[135] = "0b10111100001010110101111111000101";
        ram[136] = "0b10111101001010011001001100100110";
        ram[137] = "0b10111101110010100011000010111110";
        ram[138] = "0b10111100111100110100100110101010";
        ram[139] = "0b10111110001001101100001001010111";
        ram[140] = "0b10111110100011011001100011010101";
        ram[141] = "0b10111110101001011111001010000000";
        ram[142] = "0b10111110010001010101111101011011";
        ram[143] = "0b10111101100010111110111111110100";
        ram[144] = "0b10111110100010101000001101101111";
        ram[145] = "0b00111110001010001011110110111000";
        ram[146] = "0b10111110100001111011110100011101";
        ram[147] = "0b10111110101001000111101110011111";
        ram[148] = "0b00111101110100110110110100000101";
        ram[149] = "0b10111101010010000110000100011000";
        ram[150] = "0b10111110011101000110100100100001";
        ram[151] = "0b00111100101110100010000100110101";
        ram[152] = "0b10111110100000001100101001110001";
        ram[153] = "0b10111100111110000001100101010101";
        ram[154] = "0b00111110011011010011100101100101";
        ram[155] = "0b00111101000001001011101110110011";
        ram[156] = "0b10111110011011011100000011000001";
        ram[157] = "0b10111110001010111111011000001101";
        ram[158] = "0b00111101100110111110010111001110";
        ram[159] = "0b00111101001001010100101011100000";
        ram[160] = "0b00111110000100010111101110010000";
        ram[161] = "0b00111101111011001000010101101110";
        ram[162] = "0b00111101110010111111000000000010";
        ram[163] = "0b00111101010111101000001010001111";
        ram[164] = "0b10111101111011011111000001010111";
        ram[165] = "0b10111101110000110111000111010001";
        ram[166] = "0b10111110000101000000010110110100";
        ram[167] = "0b00111101100111111011001011000010";
        ram[168] = "0b10111101101100111001111011110010";
        ram[169] = "0b10111101010000100111011000010100";
        ram[170] = "0b10111110100111001111010010000111";
        ram[171] = "0b00111101100011110110111000100011";
        ram[172] = "0b10111101001111001001010101100100";
        ram[173] = "0b00111110011110010101001000000101";
        ram[174] = "0b10111100100100110011000001010000";
        ram[175] = "0b10111101100111010110001001011010";
        ram[176] = "0b10111110101011010110000001110111";
        ram[177] = "0b00111101100110100100011100111010";
        ram[178] = "0b10111110101111010001000010000101";
        ram[179] = "0b10111110001011001101010001110100";
        ram[180] = "0b10111100110011011101000111010101";
        ram[181] = "0b00111100101110110110110111101010";
        ram[182] = "0b10111110000100010000100101110000";
        ram[183] = "0b00111110000110000100001101100100";
        ram[184] = "0b10111110011100111101111111010001";
        ram[185] = "0b10111110001011000010011111100110";
        ram[186] = "0b10111100111011011010100101011110";
        ram[187] = "0b10111101101011000001110011111000";
        ram[188] = "0b10111110001101100111111110100110";
        ram[189] = "0b00111101100011010001111111111110";
        ram[190] = "0b10111110011101100000011100111000";
        ram[191] = "0b10111101101010100100011011000100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei0iy) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei0iy_ram* meminst;


SC_CTOR(conv_2_conv_2_wei0iy) {
meminst = new conv_2_conv_2_wei0iy_ram("conv_2_conv_2_wei0iy_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei0iy() {
    delete meminst;
}


};//endmodule
#endif
