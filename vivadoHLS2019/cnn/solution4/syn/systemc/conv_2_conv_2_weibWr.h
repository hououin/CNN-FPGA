// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibWr_H__
#define __conv_2_conv_2_weibWr_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibWr_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibWr_ram) {
        ram[0] = "0b10111100011111011001011111000001";
        ram[1] = "0b10111110000101001100100000000010";
        ram[2] = "0b10111100011110111111010011001000";
        ram[3] = "0b10111101111110011101110101110110";
        ram[4] = "0b00111101110000001100000101000110";
        ram[5] = "0b00111100110010111101100011111101";
        ram[6] = "0b10111101110001010101010011101101";
        ram[7] = "0b10111100110111001100010011010100";
        ram[8] = "0b00111100100001011010011100110110";
        ram[9] = "0b10111110000010101011010010001101";
        ram[10] = "0b00111101100010100100110110001101";
        ram[11] = "0b00111100111110000100110110010111";
        ram[12] = "0b10111110000101001000101010110111";
        ram[13] = "0b00111110100000000100010001100110";
        ram[14] = "0b10111101101001011100110100000010";
        ram[15] = "0b00111101101101101001111101101010";
        ram[16] = "0b00111101111001010010111100000010";
        ram[17] = "0b10111100101000000001010011100001";
        ram[18] = "0b00111101101000100011111011111011";
        ram[19] = "0b10111110000001110100101101101111";
        ram[20] = "0b10111101101111100111001110011001";
        ram[21] = "0b00111110010011000101110001010111";
        ram[22] = "0b00111101101000100111110000101100";
        ram[23] = "0b10111100001011000001000101001011";
        ram[24] = "0b00111110001011110000000011110000";
        ram[25] = "0b00111100001100000001110101100100";
        ram[26] = "0b10111101101000111101011011001111";
        ram[27] = "0b10111110010010011011011010100101";
        ram[28] = "0b00111101011111100000010010001010";
        ram[29] = "0b10111101011101000111010101011110";
        ram[30] = "0b10111110000000001110010100100010";
        ram[31] = "0b10111110100111110101101101100000";
        ram[32] = "0b00111101111111101000100111011000";
        ram[33] = "0b10111101111011011101111100100100";
        ram[34] = "0b00111100101111001011110100101100";
        ram[35] = "0b10111110001101001100011110110001";
        ram[36] = "0b10111101100100000000010011111100";
        ram[37] = "0b10111110001000101110100101000010";
        ram[38] = "0b00111101101011010101011111110011";
        ram[39] = "0b00111110001110001010110010011011";
        ram[40] = "0b00111101010010111010111100000001";
        ram[41] = "0b00111101101100100011111100010010";
        ram[42] = "0b00111101011101111000001011010101";
        ram[43] = "0b10111101111000111010111101101110";
        ram[44] = "0b10111110001011111111011011000111";
        ram[45] = "0b00111110000110101000101011001000";
        ram[46] = "0b00111101110101111010010110011001";
        ram[47] = "0b10111101001100100101110011011011";
        ram[48] = "0b10111101001100001100111110111001";
        ram[49] = "0b10111110001100011101110011011111";
        ram[50] = "0b10111101111101001111101010101000";
        ram[51] = "0b10111101100001010100100001001010";
        ram[52] = "0b10111101111111111001011111111011";
        ram[53] = "0b00111100101100011100001011010010";
        ram[54] = "0b00111110010101011101100010111000";
        ram[55] = "0b00111101101110001010111010010111";
        ram[56] = "0b00111101101111111100000100100000";
        ram[57] = "0b10111101111001110100110001100000";
        ram[58] = "0b00111110010100001000110111000001";
        ram[59] = "0b00111101000100111000011001110101";
        ram[60] = "0b10111101101011000111101010111011";
        ram[61] = "0b00111101011001000001010110110101";
        ram[62] = "0b10111100011011011110111110010010";
        ram[63] = "0b10111101001010011100011001110010";
        ram[64] = "0b00111101101101010100000011010000";
        ram[65] = "0b10111110011110011001101000010011";
        ram[66] = "0b00111110000000010000010010001011";
        ram[67] = "0b10111101111111010110001001000101";
        ram[68] = "0b00111101010001000000101001011001";
        ram[69] = "0b00111101011111000110000110111100";
        ram[70] = "0b10111101110000010110110010101111";
        ram[71] = "0b10111110000010101111111101001000";
        ram[72] = "0b00111101110000011110110010110110";
        ram[73] = "0b10111011101111110100011110001111";
        ram[74] = "0b10111110000100011010110100100110";
        ram[75] = "0b00111101101111001011000100011101";
        ram[76] = "0b10111110010110000110100011000100";
        ram[77] = "0b00111101101110000011110011110110";
        ram[78] = "0b10111101010011001110000001101000";
        ram[79] = "0b10111110000011100110001001000110";
        ram[80] = "0b10111101101111101101010100001100";
        ram[81] = "0b00111100100010011111101111010110";
        ram[82] = "0b10111101101110010001100011000000";
        ram[83] = "0b10111101000111111111101011001110";
        ram[84] = "0b10111110100100111111100010110001";
        ram[85] = "0b00111101111000011110011011011001";
        ram[86] = "0b00111101101010101001000111110111";
        ram[87] = "0b00111101101001110011101100101100";
        ram[88] = "0b00111101011011001100000011101010";
        ram[89] = "0b00111101111010000101100100011100";
        ram[90] = "0b10111101111100100001111010000011";
        ram[91] = "0b00111101110000000010100101001010";
        ram[92] = "0b10111100001111000111100011000000";
        ram[93] = "0b00111101000000011000000010111100";
        ram[94] = "0b10111101111000001101011011000110";
        ram[95] = "0b10111110001001011110101010101101";
        ram[96] = "0b00111101010101011011001111000001";
        ram[97] = "0b10111110000011101011101010011111";
        ram[98] = "0b10111110010010111101110101100100";
        ram[99] = "0b10111101110110110111010101001011";
        ram[100] = "0b10111110000001000110010100111101";
        ram[101] = "0b00111110000000001000001111111100";
        ram[102] = "0b10111101101001011011110110111001";
        ram[103] = "0b00111101100100101011001011110010";
        ram[104] = "0b00111110001100111010000100101001";
        ram[105] = "0b10111101101110011010101000110010";
        ram[106] = "0b00111011110011101111111010011111";
        ram[107] = "0b10111110101001111100100010001001";
        ram[108] = "0b10111101101000000001000010000101";
        ram[109] = "0b10111110000101101011000000010011";
        ram[110] = "0b10111110001000011000011100010110";
        ram[111] = "0b10111110000001101100001100101010";
        ram[112] = "0b10111101101000101011100110111001";
        ram[113] = "0b10111100100010100100010100110111";
        ram[114] = "0b10111101100101110110101110000110";
        ram[115] = "0b00111110000110111100000111010110";
        ram[116] = "0b00111011110110000101110101101101";
        ram[117] = "0b00111100101001000111101100101100";
        ram[118] = "0b00111110000011110011101110100000";
        ram[119] = "0b10111110100110110100111000001100";
        ram[120] = "0b10111101111011110110010111001010";
        ram[121] = "0b00111100111110011010100110001001";
        ram[122] = "0b00111110000111100011111100101111";
        ram[123] = "0b10111101000111110001011110001111";
        ram[124] = "0b10111110001001101111110111010011";
        ram[125] = "0b10111100100100100100011110001110";
        ram[126] = "0b00111100110110111111001101011001";
        ram[127] = "0b10111011101011110000111110111011";
        ram[128] = "0b10111110000011111101000111000011";
        ram[129] = "0b10111101100001000010010110011111";
        ram[130] = "0b00111101101111001110100011000111";
        ram[131] = "0b10111110011001011011111100111101";
        ram[132] = "0b00111110000101111011001101100000";
        ram[133] = "0b10111110001100111001101111000101";
        ram[134] = "0b00111101100110000001110100110010";
        ram[135] = "0b00111101011010011011111111000111";
        ram[136] = "0b00111110000100111010000111011111";
        ram[137] = "0b10111110101101000010000010001010";
        ram[138] = "0b00111101011010011110101001000111";
        ram[139] = "0b10111101101111101100101000010000";
        ram[140] = "0b00111101001000100100101110001001";
        ram[141] = "0b00111100111010100111011011010100";
        ram[142] = "0b00111101101100110001100101110001";
        ram[143] = "0b10111101010100110011010110111101";
        ram[144] = "0b10111110000000110010011111110000";
        ram[145] = "0b10111101011101001000001010010011";
        ram[146] = "0b10111110101100101110100011110100";
        ram[147] = "0b00111110000111110111111110101111";
        ram[148] = "0b00111100101010100100110100011000";
        ram[149] = "0b00111101100000001100000110010110";
        ram[150] = "0b10111101010100100111011010001100";
        ram[151] = "0b00111110100010010110011000101100";
        ram[152] = "0b00111101100011100000101010111101";
        ram[153] = "0b10111101100001101011111000000111";
        ram[154] = "0b10111110011110001110000010000000";
        ram[155] = "0b10111110000011100011000000001001";
        ram[156] = "0b10111101011110011010110111100110";
        ram[157] = "0b00111100001000111100011101011111";
        ram[158] = "0b10111110001000001011000010011010";
        ram[159] = "0b00111100100111101101110101001111";
        ram[160] = "0b10111110010111111110000111000100";
        ram[161] = "0b00111100010000001011101100100101";
        ram[162] = "0b10111110110100001010001101011110";
        ram[163] = "0b10111110101001011000110011001001";
        ram[164] = "0b10111101101001101101010000101011";
        ram[165] = "0b00111101011000010111001000011011";
        ram[166] = "0b00111110001101010000100011010011";
        ram[167] = "0b10111100111100111111001001000010";
        ram[168] = "0b00111101001110001010001010011100";
        ram[169] = "0b10111110001001101000000100010001";
        ram[170] = "0b10111101011110111110001101000110";
        ram[171] = "0b10111110100011100111110101000010";
        ram[172] = "0b00111101101110100011011100110101";
        ram[173] = "0b10111101111110011101110000100011";
        ram[174] = "0b10111100111000111110011010101001";
        ram[175] = "0b00111101001111111011001000001101";
        ram[176] = "0b00111101110100101111100110010110";
        ram[177] = "0b10111100000101111100101011111000";
        ram[178] = "0b10111101110100101110001110110010";
        ram[179] = "0b00111101010011001101011101011000";
        ram[180] = "0b10111101000001110010000010010001";
        ram[181] = "0b10111101001000011001110001011010";
        ram[182] = "0b00111101101001100110100110111000";
        ram[183] = "0b10111110010000000001001110001100";
        ram[184] = "0b10111110000101101011110111011100";
        ram[185] = "0b00111110011001011000101010101100";
        ram[186] = "0b00111110001100100001100101001110";
        ram[187] = "0b10111101010000010011100100001011";
        ram[188] = "0b00111100111110110100010101011111";
        ram[189] = "0b00111101111001011001010100001110";
        ram[190] = "0b10111101110000100101011011011100";
        ram[191] = "0b00111101100001001010011011001110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibWr) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibWr_ram* meminst;


SC_CTOR(conv_2_conv_2_weibWr) {
meminst = new conv_2_conv_2_weibWr_ram("conv_2_conv_2_weibWr_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibWr() {
    delete meminst;
}


};//endmodule
#endif
