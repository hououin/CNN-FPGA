// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibFp_H__
#define __conv_2_conv_2_weibFp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibFp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibFp_ram) {
        ram[0] = "0b00111011010100000110011101101000";
        ram[1] = "0b10111110000010111011111100011001";
        ram[2] = "0b10111110010110001110100010111000";
        ram[3] = "0b00111100101111001001010101110100";
        ram[4] = "0b00111011111011010111111010011111";
        ram[5] = "0b00111101010001010100011111101010";
        ram[6] = "0b00111100111010001011000011000001";
        ram[7] = "0b10111100100010001101101011010010";
        ram[8] = "0b00111101101111100010000010111010";
        ram[9] = "0b10111101110001000110001110001110";
        ram[10] = "0b10111100000000010000111111000010";
        ram[11] = "0b10111101111111001111110001000000";
        ram[12] = "0b00111100110000001011010001011001";
        ram[13] = "0b00111101001011000100010110110011";
        ram[14] = "0b00111100111001100111000100101111";
        ram[15] = "0b00111100101010011110011101100010";
        ram[16] = "0b10111100100101010010001101001111";
        ram[17] = "0b10111101110100101000011000110011";
        ram[18] = "0b10111101010110101001000101000110";
        ram[19] = "0b10111101001110111000001111010101";
        ram[20] = "0b10111101101000101001110010001101";
        ram[21] = "0b00111100101011100101011111101001";
        ram[22] = "0b10111101110100001000110011111010";
        ram[23] = "0b00111101001011001111110101011110";
        ram[24] = "0b10111101101000111000001111110111";
        ram[25] = "0b10111100000010001010111001011010";
        ram[26] = "0b10111100111000101101001011010001";
        ram[27] = "0b10111110001110111011000011001110";
        ram[28] = "0b00111100100010011111001000111111";
        ram[29] = "0b00111011101000011011100101000100";
        ram[30] = "0b00111100010001100111111100011001";
        ram[31] = "0b10111101110011100010111001010001";
        ram[32] = "0b00111010100100010000111101011001";
        ram[33] = "0b10111110000001100000011001110110";
        ram[34] = "0b10111100010111001000110111010000";
        ram[35] = "0b00111101100010000000000000101111";
        ram[36] = "0b10111110011001100001000010000011";
        ram[37] = "0b10111101100011110101110110011011";
        ram[38] = "0b10111100111100010101000101000101";
        ram[39] = "0b00111101101010101010011110000110";
        ram[40] = "0b10111100110000110000010101100010";
        ram[41] = "0b10111101011111110000000001011010";
        ram[42] = "0b00111100111101010001110000010100";
        ram[43] = "0b00111101110011101010001011111101";
        ram[44] = "0b00111101011001101011010001010010";
        ram[45] = "0b00111101101101001001001011010110";
        ram[46] = "0b10111101010111011110000000111010";
        ram[47] = "0b00111101000001100110100111000011";
        ram[48] = "0b10111110010001110101011001111111";
        ram[49] = "0b10111101100000101110011010100010";
        ram[50] = "0b10111101001101110010011110000110";
        ram[51] = "0b00111101100001001001011000011100";
        ram[52] = "0b10111110011110111111010011111100";
        ram[53] = "0b10111001001100001011001101001000";
        ram[54] = "0b10111110000101001110001101101110";
        ram[55] = "0b10111011100110011001010100100001";
        ram[56] = "0b10111100101001011001110110011111";
        ram[57] = "0b10111101110001110011101111100110";
        ram[58] = "0b00111101101001000010110001101100";
        ram[59] = "0b00111110000010101100011000100001";
        ram[60] = "0b00111011111100101110001010001011";
        ram[61] = "0b00111101100101000010011101110110";
        ram[62] = "0b00111100100101100100100110100001";
        ram[63] = "0b00111101100100100111001010001000";
        ram[64] = "0b10111101011010010101111000100111";
        ram[65] = "0b00111101111000010101010011110100";
        ram[66] = "0b00111100101010110001001001010001";
        ram[67] = "0b00111101101110111100100101101101";
        ram[68] = "0b00111100011111110000110111001001";
        ram[69] = "0b10111101101011010111010110001100";
        ram[70] = "0b10111011111101111110101001011111";
        ram[71] = "0b10111101110110101110110101100000";
        ram[72] = "0b10111101001100100110111111101011";
        ram[73] = "0b10111010010111110001011111100111";
        ram[74] = "0b00111101000000100011111010100100";
        ram[75] = "0b10111100110011010010100100100011";
        ram[76] = "0b00111101111001100110101000001011";
        ram[77] = "0b00111101100110111001111011101000";
        ram[78] = "0b10111100100000011100011101111000";
        ram[79] = "0b00111100100000010000101100100110";
        ram[80] = "0b00111101010010001100101101010011";
        ram[81] = "0b00111100111001011111000001100011";
        ram[82] = "0b00111011110010010110110000110010";
        ram[83] = "0b10111101010011111010101101111010";
        ram[84] = "0b10111110000011010001010001011101";
        ram[85] = "0b00111101101101111100100111011100";
        ram[86] = "0b10111101100000010100110111111000";
        ram[87] = "0b10111100101101110010001101001011";
        ram[88] = "0b00111101001100101000011011011001";
        ram[89] = "0b10111101000011101111100010000010";
        ram[90] = "0b00111101001000110111110000111111";
        ram[91] = "0b00111100110111000011011110100001";
        ram[92] = "0b00111101001100101100110100011010";
        ram[93] = "0b00111011000010001011011111010101";
        ram[94] = "0b00111100111001000110100000101101";
        ram[95] = "0b00111100111101011011110111101010";
        ram[96] = "0b10111101100010000000011111111101";
        ram[97] = "0b10111101101011111100010100111111";
        ram[98] = "0b10111100100100010111111110111001";
        ram[99] = "0b10111101101010001100100110010011";
        ram[100] = "0b00111101101010011001111110000000";
        ram[101] = "0b10111101011111011110010010000010";
        ram[102] = "0b00111101100101100011111101011110";
        ram[103] = "0b00111110001011001000000010000111";
        ram[104] = "0b00111100010111000111100101111011";
        ram[105] = "0b00111100010010010000110001101001";
        ram[106] = "0b00111101101100111010010101101001";
        ram[107] = "0b00111101010011010011011101100011";
        ram[108] = "0b00111101101101001101110000101101";
        ram[109] = "0b10111100110101111100100111010101";
        ram[110] = "0b10111011111100000111110011000011";
        ram[111] = "0b00111110000011100010011100000001";
        ram[112] = "0b00111101101100010111011110110000";
        ram[113] = "0b10111101101010100000011000000111";
        ram[114] = "0b10111101110111000100100001111001";
        ram[115] = "0b00111101111110110010001110111000";
        ram[116] = "0b10111101000011011111010110110110";
        ram[117] = "0b10111100111110101101010011001110";
        ram[118] = "0b10111101101001001000000010111000";
        ram[119] = "0b10111110010011110101111111110001";
        ram[120] = "0b00111100011000111000011100001000";
        ram[121] = "0b10111101000110010010101011000101";
        ram[122] = "0b00111101100100000011101101100000";
        ram[123] = "0b10111001000011111011011111000100";
        ram[124] = "0b10111101101110100001101100111100";
        ram[125] = "0b10111011001001000010101100100000";
        ram[126] = "0b10111101100000100010001010000011";
        ram[127] = "0b00111101001000011101000100010100";
        ram[128] = "0b10111101010000111000100000101001";
        ram[129] = "0b00111100110110101101000101010000";
        ram[130] = "0b10111100100110111001111111001101";
        ram[131] = "0b10111101010110000011010100101001";
        ram[132] = "0b00111101101011010011101101100111";
        ram[133] = "0b10111101101001110110011110001011";
        ram[134] = "0b00111101110100110110101100000000";
        ram[135] = "0b10111101000101101011110011111101";
        ram[136] = "0b10111101110110000110111110111011";
        ram[137] = "0b10111101111101100000011001101111";
        ram[138] = "0b10111110010001101101110011000000";
        ram[139] = "0b10111101100010100001100101001001";
        ram[140] = "0b00111101011100000001100100001110";
        ram[141] = "0b00111100110111111011111011000011";
        ram[142] = "0b10111101100101111010001100011111";
        ram[143] = "0b10111110001100001101001000000101";
        ram[144] = "0b10111101000111001010010110100111";
        ram[145] = "0b10111101100100011100110010001101";
        ram[146] = "0b10111101101101011010001011110001";
        ram[147] = "0b10111100100101001101000000111100";
        ram[148] = "0b10111101011010011001101110101001";
        ram[149] = "0b00111110001000101111010101110111";
        ram[150] = "0b10111100001001111110011110011100";
        ram[151] = "0b00111101110001011110011011000001";
        ram[152] = "0b00111101001101000110101000010100";
        ram[153] = "0b10111100001110100100000101110011";
        ram[154] = "0b10111010101011010110111101000100";
        ram[155] = "0b10111101011111001100010101011010";
        ram[156] = "0b10111110001100000010100110001111";
        ram[157] = "0b10111100101100001101010100111110";
        ram[158] = "0b10111101001100000110101011010101";
        ram[159] = "0b10111100100011000010000001100101";
        ram[160] = "0b10111101110010000000000100101000";
        ram[161] = "0b10111100001110111000011011110011";
        ram[162] = "0b10111110000101010100011111010011";
        ram[163] = "0b10111110011001101110011010001011";
        ram[164] = "0b00111110010001001111100101010110";
        ram[165] = "0b00111101001001110100000010000011";
        ram[166] = "0b00111100011110011010010010001110";
        ram[167] = "0b10111100100001111111010100011100";
        ram[168] = "0b00111101101101101101100110010010";
        ram[169] = "0b00111101110101010110111110010100";
        ram[170] = "0b00111010101001111110010101000101";
        ram[171] = "0b10111100011010000000110001111100";
        ram[172] = "0b00111110000011111001011100111100";
        ram[173] = "0b10111110100000010010100000010101";
        ram[174] = "0b00111101100100010011001000011001";
        ram[175] = "0b00111101100010000000100100010001";
        ram[176] = "0b00111101000001010000100110010001";
        ram[177] = "0b10111101100011110011001000111010";
        ram[178] = "0b10111011100101101001000011011101";
        ram[179] = "0b10111101100100110000011011011011";
        ram[180] = "0b00111100010011000101100100100110";
        ram[181] = "0b00111101101001010100000001011011";
        ram[182] = "0b00111100111100110000011100000000";
        ram[183] = "0b00111101101001010100100100110110";
        ram[184] = "0b10111110011100000000010100010001";
        ram[185] = "0b00111011100000010001011000100110";
        ram[186] = "0b10111100001111011000011110000100";
        ram[187] = "0b10111101000111001101110011101010";
        ram[188] = "0b00111100100001110000010100100100";
        ram[189] = "0b10111011000010011000100000101111";
        ram[190] = "0b10111101101000110001111101011010";
        ram[191] = "0b00111100100001110111011011011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibFp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibFp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibFp) {
meminst = new conv_2_conv_2_weibFp_ram("conv_2_conv_2_weibFp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibFp() {
    delete meminst;
}


};//endmodule
#endif
