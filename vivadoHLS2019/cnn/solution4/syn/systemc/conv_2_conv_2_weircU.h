// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weircU_H__
#define __conv_2_conv_2_weircU_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weircU_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weircU_ram) {
        ram[0] = "0b10111100000011001100001011010111";
        ram[1] = "0b10111101000111001010111100111001";
        ram[2] = "0b00111101111010111000101100000111";
        ram[3] = "0b10111101111011001101011011111010";
        ram[4] = "0b10111110010011001010100111101011";
        ram[5] = "0b00111101110010001111001000000011";
        ram[6] = "0b10111101000100101110101110101101";
        ram[7] = "0b10111101100111111110111100100110";
        ram[8] = "0b10111100001001011001011101100111";
        ram[9] = "0b00111110010100110000010110111010";
        ram[10] = "0b00111101100100000101101111101011";
        ram[11] = "0b10111001011100110101100101110010";
        ram[12] = "0b00111101100011110001010100001011";
        ram[13] = "0b10111110100010010011111011101000";
        ram[14] = "0b00111100111001100110100111100010";
        ram[15] = "0b10111110000101011010100111100101";
        ram[16] = "0b00111100100100001010100000011111";
        ram[17] = "0b10111011100110101000011000000110";
        ram[18] = "0b10111110001000110111101011001110";
        ram[19] = "0b10111100101000010100000010000000";
        ram[20] = "0b10111101101000010011100000101110";
        ram[21] = "0b10111110010100010100001110110110";
        ram[22] = "0b10111101011010100100001110101001";
        ram[23] = "0b10111110000110011001100101010000";
        ram[24] = "0b00111101100001101101010101110000";
        ram[25] = "0b00111110000011010110110011110111";
        ram[26] = "0b10111101100110111110001010111011";
        ram[27] = "0b00111110001001010011000011110011";
        ram[28] = "0b10111101011110000100010110010101";
        ram[29] = "0b00111101110010001000001010111001";
        ram[30] = "0b00111101100000011011100110010010";
        ram[31] = "0b10111110010101001111000101101010";
        ram[32] = "0b10111101101000101011101101111111";
        ram[33] = "0b10111110000000101001010101111101";
        ram[34] = "0b00111110000000110101100001110100";
        ram[35] = "0b10111010000110011010010001000010";
        ram[36] = "0b00111101010001000000010010011111";
        ram[37] = "0b00111101010001001100110100000110";
        ram[38] = "0b10111101111011110100000111111100";
        ram[39] = "0b00111101101010001100101101101000";
        ram[40] = "0b10111101010001000011010011100000";
        ram[41] = "0b00111110010101110010000111011111";
        ram[42] = "0b10111101100101111001000011111010";
        ram[43] = "0b10111101111110010001011001001011";
        ram[44] = "0b00111101001111111101100000001010";
        ram[45] = "0b00111101100111110010100101110001";
        ram[46] = "0b00111101101101000100101101100010";
        ram[47] = "0b10111101100011010101111010111101";
        ram[48] = "0b00111101001110010110000001011110";
        ram[49] = "0b10111110011001001011000000011100";
        ram[50] = "0b10111010111000001101111110001011";
        ram[51] = "0b00111101000010101101000011010000";
        ram[52] = "0b10111110010100101000011000101110";
        ram[53] = "0b10111101101101111100110100100011";
        ram[54] = "0b00111110010110110110000111100100";
        ram[55] = "0b10111110011010000111010001101101";
        ram[56] = "0b10111101111111000010011010110110";
        ram[57] = "0b10111100101010001100100110011101";
        ram[58] = "0b10111101100011011000110010011100";
        ram[59] = "0b00111100101011100100000010100101";
        ram[60] = "0b10111110000101010000100010000000";
        ram[61] = "0b10111101110111011011010101010101";
        ram[62] = "0b10111100010010011101100000111001";
        ram[63] = "0b10111011100010011010011111100000";
        ram[64] = "0b10111101101101111011110010011111";
        ram[65] = "0b00111001100111000011001011001111";
        ram[66] = "0b00111110010000101001100000000001";
        ram[67] = "0b10111101100110010000101001011111";
        ram[68] = "0b10111101110101100111011000101001";
        ram[69] = "0b00111011101011111111010101110110";
        ram[70] = "0b10111101100111111011111101010101";
        ram[71] = "0b00111011100101100111001000111001";
        ram[72] = "0b00111110000010101100000001111011";
        ram[73] = "0b10111101000101000000000111010010";
        ram[74] = "0b00111100110011001011001001011110";
        ram[75] = "0b10111101110010000011101100100110";
        ram[76] = "0b10111100100111000100101100000011";
        ram[77] = "0b10111101101111000111011001010100";
        ram[78] = "0b10111100100001010101010100111100";
        ram[79] = "0b00111110001000010010000011001100";
        ram[80] = "0b00111101100001000110011010110110";
        ram[81] = "0b00111101100001101000111010001010";
        ram[82] = "0b10111101101010110011100010000010";
        ram[83] = "0b00111100100110100100010001011000";
        ram[84] = "0b10111110011011010010100001111101";
        ram[85] = "0b10111110010011111010010111010100";
        ram[86] = "0b00111101100010111100001101111010";
        ram[87] = "0b10111101111000001100110010010011";
        ram[88] = "0b00111101011011100011010011111110";
        ram[89] = "0b00111010111010100000110010101110";
        ram[90] = "0b00111100000111011001010111110111";
        ram[91] = "0b10111110100011001011111111010001";
        ram[92] = "0b10111110000001111100010001101110";
        ram[93] = "0b00111101101111000101011010101011";
        ram[94] = "0b10111110000000100011110010011000";
        ram[95] = "0b10111100110000101001011111010101";
        ram[96] = "0b10111110000001110011101101000000";
        ram[97] = "0b00111101110100100000001000000101";
        ram[98] = "0b00111101000101110100111011111111";
        ram[99] = "0b00111101010000001111110001000001";
        ram[100] = "0b00111110000001000000000001010010";
        ram[101] = "0b00111101110001001100010101101111";
        ram[102] = "0b10111101111100001001101110010101";
        ram[103] = "0b00111101111001010001100000011101";
        ram[104] = "0b00111101100101100110101100101111";
        ram[105] = "0b00111101101010000111110000010101";
        ram[106] = "0b00111101010101111110101100111111";
        ram[107] = "0b00111101110101111010100100111010";
        ram[108] = "0b10111101100000100101010010111111";
        ram[109] = "0b00111101001000011111111000001000";
        ram[110] = "0b10111110000111101101011011011010";
        ram[111] = "0b10111101110001010010001001100100";
        ram[112] = "0b10111100000111100001010100100110";
        ram[113] = "0b10111110001011110100010111010001";
        ram[114] = "0b10111101100011101001100010110110";
        ram[115] = "0b10111100100000001010001010101011";
        ram[116] = "0b10111101011011001001010010100001";
        ram[117] = "0b10111110101101100100011101111100";
        ram[118] = "0b00111110001110111101011010100010";
        ram[119] = "0b10111110001000011010111101100110";
        ram[120] = "0b10111101110111010101001101000000";
        ram[121] = "0b00111101001100110101001010100101";
        ram[122] = "0b00111101011100100100001111000011";
        ram[123] = "0b10111100100111100111100110111000";
        ram[124] = "0b10111101010100001100110101000101";
        ram[125] = "0b00111101101001111010011001001011";
        ram[126] = "0b10111100011011101000101100001010";
        ram[127] = "0b00111110001100000101010100101011";
        ram[128] = "0b10111110010010001100010100111101";
        ram[129] = "0b00111101011001010010011111011010";
        ram[130] = "0b00111011110000000101111010001001";
        ram[131] = "0b00111101010111011001010010001100";
        ram[132] = "0b00111101011010011011111001011000";
        ram[133] = "0b10111101110100011101111010000111";
        ram[134] = "0b10111110101011110001110011101000";
        ram[135] = "0b00111110001100010110010111111100";
        ram[136] = "0b00111101101000111001001111011101";
        ram[137] = "0b10111101010110011000100101101001";
        ram[138] = "0b10111101011000011001111010110111";
        ram[139] = "0b10111110100100110100100110000101";
        ram[140] = "0b10111101110111100110110001000000";
        ram[141] = "0b00111101100100111101100110111011";
        ram[142] = "0b00111110000110011011001101110111";
        ram[143] = "0b00111101111001110111001111110011";
        ram[144] = "0b00111101100100011001001101001110";
        ram[145] = "0b10111101101000110011111100111010";
        ram[146] = "0b00111101100011110110111110110110";
        ram[147] = "0b10111101100100001010100010101111";
        ram[148] = "0b10111100000111001101010110011010";
        ram[149] = "0b10111101011110101001101000010011";
        ram[150] = "0b00111101001000000100010100010010";
        ram[151] = "0b10111110100100100110011011101111";
        ram[152] = "0b10111101100111000101100001111001";
        ram[153] = "0b00111101011100110110000101001100";
        ram[154] = "0b10111100101001101011100110111110";
        ram[155] = "0b10111110000001111111010100111110";
        ram[156] = "0b00111101001011110000011100111000";
        ram[157] = "0b00111101110110001000110111000101";
        ram[158] = "0b10111110000011011001000001100001";
        ram[159] = "0b00111101000110001110111001000111";
        ram[160] = "0b10111110110101010101110001011101";
        ram[161] = "0b00111110001100000001110101101110";
        ram[162] = "0b10111110000100000001110110110110";
        ram[163] = "0b10111101101101101000001111001011";
        ram[164] = "0b10111101011001110000101010110110";
        ram[165] = "0b10111110000011011111101110111011";
        ram[166] = "0b10111110100010100000011100001110";
        ram[167] = "0b00111101111101011111010001010000";
        ram[168] = "0b00111100110111011001110101100010";
        ram[169] = "0b10111110000101101101010101100001";
        ram[170] = "0b00111100011001010110011000100101";
        ram[171] = "0b00111101110100011111000110011111";
        ram[172] = "0b00111101000011101111100011110011";
        ram[173] = "0b10111101110111001101101000000100";
        ram[174] = "0b00111100110111101101010010000100";
        ram[175] = "0b10111101111001000101101011100100";
        ram[176] = "0b10111101111001100011110111001001";
        ram[177] = "0b00111101010111010001100100001110";
        ram[178] = "0b00111101010011000010100100000011";
        ram[179] = "0b10111110000010010111110000000010";
        ram[180] = "0b10111101000010110010011000101101";
        ram[181] = "0b10111110101110110101011011111101";
        ram[182] = "0b10111011100110010000101000001010";
        ram[183] = "0b00111101110011111000001110000011";
        ram[184] = "0b10111100111100010001110100101110";
        ram[185] = "0b10111110001011011010010101111010";
        ram[186] = "0b10111010001110000101001000010100";
        ram[187] = "0b00111101010111100100111111110000";
        ram[188] = "0b10111100010001010001001000101100";
        ram[189] = "0b00111101110101111101010101001100";
        ram[190] = "0b00111101100110010001111001111000";
        ram[191] = "0b00111100100010111011100110111010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weircU) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weircU_ram* meminst;


SC_CTOR(conv_2_conv_2_weircU) {
meminst = new conv_2_conv_2_weircU_ram("conv_2_conv_2_weircU_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weircU() {
    delete meminst;
}


};//endmodule
#endif
