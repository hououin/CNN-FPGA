// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiqcK_H__
#define __conv_2_conv_2_weiqcK_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiqcK_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiqcK_ram) {
        ram[0] = "0b00111101100110011001011000101101";
        ram[1] = "0b10111110001100000100101010011010";
        ram[2] = "0b10111110010000101010010010010100";
        ram[3] = "0b00111110001110011001100110000110";
        ram[4] = "0b00111110010001001100001111101010";
        ram[5] = "0b10111100111011010011000000010010";
        ram[6] = "0b10111110100100001110001000100110";
        ram[7] = "0b00111110110011000100101010010010";
        ram[8] = "0b10111101011100110101101110100111";
        ram[9] = "0b00111101101111001011010111111010";
        ram[10] = "0b10111101111100010111110000101110";
        ram[11] = "0b10111101001110110000101011001100";
        ram[12] = "0b10111110100011011011110110001000";
        ram[13] = "0b10111101101100010001101011010011";
        ram[14] = "0b10111101101010110110000010001011";
        ram[15] = "0b00111101100010011110111110101000";
        ram[16] = "0b10111100110010101111111100000101";
        ram[17] = "0b10111101000101011000110011011000";
        ram[18] = "0b10111110100101111010110010011000";
        ram[19] = "0b00111110010111110100010011001000";
        ram[20] = "0b00111100011000011011100011100000";
        ram[21] = "0b10111110001011110010111111011100";
        ram[22] = "0b10111110010111010001111011110100";
        ram[23] = "0b00111110100101111001000111110101";
        ram[24] = "0b10111110101010101010010110111000";
        ram[25] = "0b00111100111101110000100011111100";
        ram[26] = "0b00111110011000101101010110100100";
        ram[27] = "0b10111110101000001010110001101111";
        ram[28] = "0b10111010000111000010011110110110";
        ram[29] = "0b10111110001011100111010110110000";
        ram[30] = "0b10111110110001001111000111001010";
        ram[31] = "0b00111110001001010010010111011111";
        ram[32] = "0b10111110010010100110000001011101";
        ram[33] = "0b00111101100101110110011100100011";
        ram[34] = "0b10111100000001100111100011000000";
        ram[35] = "0b10111101000000101110110010111011";
        ram[36] = "0b00111110011011111001100011100101";
        ram[37] = "0b10111101101011110001110111100110";
        ram[38] = "0b10111110010101101111110100111110";
        ram[39] = "0b00111101011011111100000100011011";
        ram[40] = "0b10111110100101110001010110010010";
        ram[41] = "0b10111101100011100001100001011011";
        ram[42] = "0b00111101111111100110100000100111";
        ram[43] = "0b00111110100110110111011011011001";
        ram[44] = "0b00111110010110010101101010000000";
        ram[45] = "0b10111110001010011001010110111100";
        ram[46] = "0b10111101100001111110110110001101";
        ram[47] = "0b10111101111100110101000110101100";
        ram[48] = "0b00111101001111110100110100000101";
        ram[49] = "0b10111101111011010001000100110110";
        ram[50] = "0b10111110100001110110101001100111";
        ram[51] = "0b10111100100000000011101011010101";
        ram[52] = "0b10111101101001011000011001101110";
        ram[53] = "0b00111101001110000011001111101110";
        ram[54] = "0b10111101010111111001000001011110";
        ram[55] = "0b10111110100001010100110001010101";
        ram[56] = "0b10111101101111101010101011001111";
        ram[57] = "0b00111101100101000101011001010100";
        ram[58] = "0b10111100010000010000010100100110";
        ram[59] = "0b10111110100000100101111100111111";
        ram[60] = "0b10111100111110110011000001010001";
        ram[61] = "0b00111110010100110000111101000001";
        ram[62] = "0b00111110001010100010100101011001";
        ram[63] = "0b00111110000000100000010010011110";
        ram[64] = "0b10111110001011000001101011001000";
        ram[65] = "0b00111100011100011001111101101100";
        ram[66] = "0b10111110001100000110001001100101";
        ram[67] = "0b10111101100000001010110101110111";
        ram[68] = "0b10111101100111110100001001001110";
        ram[69] = "0b10111110011010111011111011101111";
        ram[70] = "0b10111110001001101111010010101101";
        ram[71] = "0b00111101101110101100001010010011";
        ram[72] = "0b00111011010011010111101100110001";
        ram[73] = "0b00111101011110001001000000011011";
        ram[74] = "0b10111110110101100110100010011110";
        ram[75] = "0b10111110001111011100000000010001";
        ram[76] = "0b10111110010111111100001100111101";
        ram[77] = "0b00111101101101110010000100001100";
        ram[78] = "0b00111011011101110010111000100001";
        ram[79] = "0b00111100100001110110010111100100";
        ram[80] = "0b00111101100100111100100101010000";
        ram[81] = "0b10111100000110010011010001010010";
        ram[82] = "0b00111101101000111111101111000110";
        ram[83] = "0b00111100011010001110011001111001";
        ram[84] = "0b10111110000100000100000100110010";
        ram[85] = "0b10111100000110011000011000111100";
        ram[86] = "0b00111100011101111011010001001011";
        ram[87] = "0b10111101001010111110010011010001";
        ram[88] = "0b10111101000101111110111011100100";
        ram[89] = "0b10111110100011001011111100011011";
        ram[90] = "0b00111101101011001010110111111111";
        ram[91] = "0b10111110011010010100101101010011";
        ram[92] = "0b00111110010011110100110001000110";
        ram[93] = "0b10111101100111100001110000100100";
        ram[94] = "0b10111110000100101101101111111100";
        ram[95] = "0b00111110001011011110111011110101";
        ram[96] = "0b10111110010110011000100010010100";
        ram[97] = "0b00111110011110001110111111001011";
        ram[98] = "0b10111110001110100011101010000000";
        ram[99] = "0b10111110110101010110111100110001";
        ram[100] = "0b10111101001100111111110010010010";
        ram[101] = "0b10111110010111010101101001100010";
        ram[102] = "0b10111110000010101010110000001111";
        ram[103] = "0b10111110000100100010000110011001";
        ram[104] = "0b10111101100100010011001010011100";
        ram[105] = "0b10111101111100110001001110110000";
        ram[106] = "0b00111110000110011111010110001111";
        ram[107] = "0b00111100111101101110101001110110";
        ram[108] = "0b10111101101100111010010100101010";
        ram[109] = "0b10111111000001010010111000000100";
        ram[110] = "0b10111110000100011000111011000011";
        ram[111] = "0b10111110010100001111111111100000";
        ram[112] = "0b00111011100111111011111101100001";
        ram[113] = "0b10111101111011101110010111000100";
        ram[114] = "0b10111110001110001010111010110100";
        ram[115] = "0b10111110011001001111111010010011";
        ram[116] = "0b00111101101010000000100100100111";
        ram[117] = "0b10111101110010010001010111101100";
        ram[118] = "0b10111101110100111100101011101011";
        ram[119] = "0b00111110100010000000101010110111";
        ram[120] = "0b00111100100101101011011111010001";
        ram[121] = "0b00111100100011000010001100010011";
        ram[122] = "0b10111100111100100101011011000001";
        ram[123] = "0b00111101010010001001001110100101";
        ram[124] = "0b10111110100110110011010001000100";
        ram[125] = "0b00111101111000010001100111110111";
        ram[126] = "0b10111110100111100001111101101111";
        ram[127] = "0b10111110000010100110001000001110";
        ram[128] = "0b10111110100101000111111011101111";
        ram[129] = "0b00111110100100000000111111001110";
        ram[130] = "0b10111100110111111010000101110111";
        ram[131] = "0b00111101011000101111010101100011";
        ram[132] = "0b00111011000000011100110111111000";
        ram[133] = "0b10111111000100011010010111010111";
        ram[134] = "0b10111110000000100011010110000100";
        ram[135] = "0b10111101010100100000111110100101";
        ram[136] = "0b10111110010100101100011000000000";
        ram[137] = "0b10111110011000111110100000110011";
        ram[138] = "0b10111101111111101110001010111100";
        ram[139] = "0b10111110011000100010011100110010";
        ram[140] = "0b10111110010001011111111100111101";
        ram[141] = "0b00111110001010111100011010001000";
        ram[142] = "0b00111101000011111100100011111100";
        ram[143] = "0b10111110010001000110111100001001";
        ram[144] = "0b00111100001000010000011000101110";
        ram[145] = "0b10111110010010001101010000111000";
        ram[146] = "0b00111101110111010000100101010001";
        ram[147] = "0b00111100000001000011011111111010";
        ram[148] = "0b00111101101001101010011101000101";
        ram[149] = "0b00111101000010001110110110111011";
        ram[150] = "0b00111110010000000011001100101100";
        ram[151] = "0b00111101100010101011110110110011";
        ram[152] = "0b10111101111111011101100000011001";
        ram[153] = "0b10111110010101011001001011001001";
        ram[154] = "0b10111101110101010100000000000010";
        ram[155] = "0b10111101100011010101101110111011";
        ram[156] = "0b10111100100010011100010011100010";
        ram[157] = "0b10111110101000011001111000001110";
        ram[158] = "0b10111101010100100000100101110000";
        ram[159] = "0b00111101111101000101011111010001";
        ram[160] = "0b10111101000011111010000010000101";
        ram[161] = "0b10111100100001010001001100001101";
        ram[162] = "0b10111110110010011010010000101011";
        ram[163] = "0b00111101010111000011111000001110";
        ram[164] = "0b00111101001000000100010001001000";
        ram[165] = "0b10111110110111011110011100100101";
        ram[166] = "0b00111110010110010010000110000011";
        ram[167] = "0b00111100110100101001011001011110";
        ram[168] = "0b10111101101101010101110011100110";
        ram[169] = "0b10111110001101000110010000100000";
        ram[170] = "0b10111101010011110100111110011011";
        ram[171] = "0b00111110001110110111111001111111";
        ram[172] = "0b00111101101001011001001011011011";
        ram[173] = "0b00111101110110011110111100011001";
        ram[174] = "0b00111011100100000101100100111001";
        ram[175] = "0b10111101111001100101011101101011";
        ram[176] = "0b00111110000110011001110100111011";
        ram[177] = "0b00111101101011111100100110011110";
        ram[178] = "0b10111110001111011000010000001111";
        ram[179] = "0b10111111001000100111110111011001";
        ram[180] = "0b00111110101000000100010010100110";
        ram[181] = "0b10111101011110101110011111101101";
        ram[182] = "0b10111110011011000011001110100000";
        ram[183] = "0b00111010011000100110001101101010";
        ram[184] = "0b00111110000010101001101111000111";
        ram[185] = "0b10111110011111111000000010110001";
        ram[186] = "0b10111110110000000101101101011100";
        ram[187] = "0b10111110010101010011011010101111";
        ram[188] = "0b10111101111000111001001010100000";
        ram[189] = "0b10111110011101011110000101110000";
        ram[190] = "0b00111101000011111001010101100110";
        ram[191] = "0b00111101110110100011000011000101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiqcK) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiqcK_ram* meminst;


SC_CTOR(conv_2_conv_2_weiqcK) {
meminst = new conv_2_conv_2_weiqcK_ram("conv_2_conv_2_weiqcK_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiqcK() {
    delete meminst;
}


};//endmodule
#endif
