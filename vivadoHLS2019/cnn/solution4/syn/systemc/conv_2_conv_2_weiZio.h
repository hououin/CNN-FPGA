// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiZio_H__
#define __conv_2_conv_2_weiZio_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiZio_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiZio_ram) {
        ram[0] = "0b10111101001101010100000110001000";
        ram[1] = "0b10111100100000101001111101011010";
        ram[2] = "0b10111110000001010001000101111101";
        ram[3] = "0b10111101010010111101011101110010";
        ram[4] = "0b00111110000000100101110011101010";
        ram[5] = "0b00111101001000101110101111010011";
        ram[6] = "0b00111100111101110100010000100111";
        ram[7] = "0b10111100100100111010100000101110";
        ram[8] = "0b00111100001010110000010101101111";
        ram[9] = "0b00111100100100010110111100110000";
        ram[10] = "0b00111100011001010001010010111010";
        ram[11] = "0b10111101000010000110001110101010";
        ram[12] = "0b00111101011001000100011001000011";
        ram[13] = "0b10111101100000010010111100010011";
        ram[14] = "0b00111101001101101101100010111000";
        ram[15] = "0b00111101111000110000101100000001";
        ram[16] = "0b10111101001001111010000010011101";
        ram[17] = "0b10111101000001100110010101000010";
        ram[18] = "0b10111110001001101111111111001001";
        ram[19] = "0b10111101110101101101000010111111";
        ram[20] = "0b00111101000100110011100000110101";
        ram[21] = "0b10111100000101110000011100110100";
        ram[22] = "0b10111101111010011011000101110000";
        ram[23] = "0b10111100110100101100110111101110";
        ram[24] = "0b00111101011100010111101011110001";
        ram[25] = "0b00111100100100010010001000001000";
        ram[26] = "0b00111100110101001001101011001110";
        ram[27] = "0b10111110100001001110110111100010";
        ram[28] = "0b10111100111111101110101001110000";
        ram[29] = "0b00111100100000110001000100001110";
        ram[30] = "0b00111101101001100011001111000111";
        ram[31] = "0b10111101101001100110110001100011";
        ram[32] = "0b10111101101001100011101110010111";
        ram[33] = "0b00111101000011111100110011110111";
        ram[34] = "0b10111101100011010100000100001100";
        ram[35] = "0b10111100101010110110011011110010";
        ram[36] = "0b10111101100101100100110010001110";
        ram[37] = "0b00111110000001000001100001100110";
        ram[38] = "0b00111101000111101101000100110100";
        ram[39] = "0b10111101011010010011111000101100";
        ram[40] = "0b10111110010100111101100101001010";
        ram[41] = "0b10111100110010010010010011000111";
        ram[42] = "0b00111110000010011001100011010111";
        ram[43] = "0b00111101110011000011100100011101";
        ram[44] = "0b00111101110110111010111111001100";
        ram[45] = "0b00111100000010010110000100100111";
        ram[46] = "0b00111100011000001000100001110101";
        ram[47] = "0b00111100111101100111010101111101";
        ram[48] = "0b10111101101111111111001101000110";
        ram[49] = "0b10111110001000010110011001001101";
        ram[50] = "0b10111101011101111101001101001011";
        ram[51] = "0b10111101100101001000100110011001";
        ram[52] = "0b10111110001011101101000001111011";
        ram[53] = "0b00111100011000101010111110011111";
        ram[54] = "0b10111110001001110001100011010100";
        ram[55] = "0b10111110000010010010001001010000";
        ram[56] = "0b10111011111100100010100001111100";
        ram[57] = "0b00111101001110011010011101001011";
        ram[58] = "0b10111101110001100000100011100111";
        ram[59] = "0b00111101101001011110100100000011";
        ram[60] = "0b10111101100010000101100111011101";
        ram[61] = "0b10111100001110011010101001011111";
        ram[62] = "0b00111100100100101100001000100000";
        ram[63] = "0b00111100001001001001011010011011";
        ram[64] = "0b00111101000011011010000010000101";
        ram[65] = "0b10111101100010000001010010010000";
        ram[66] = "0b10111101010011000011011000011000";
        ram[67] = "0b10111101001111000100010000001010";
        ram[68] = "0b00111110000001110011001010011111";
        ram[69] = "0b00111100111011101101011110010011";
        ram[70] = "0b10111100111110011110000101101110";
        ram[71] = "0b10111101100100000010100110100010";
        ram[72] = "0b10111101110000110000110010001010";
        ram[73] = "0b10111101101011101000000001110110";
        ram[74] = "0b10111101010011110010000010101010";
        ram[75] = "0b10111110000101110010000000010111";
        ram[76] = "0b00111101010000101101111100110101";
        ram[77] = "0b00111100101100101001001010100110";
        ram[78] = "0b00111101001101000100010111010011";
        ram[79] = "0b10111101001010100101111010001110";
        ram[80] = "0b00111100000111100000101000111011";
        ram[81] = "0b00111101101100011010011100100010";
        ram[82] = "0b10111100101000100000100001111110";
        ram[83] = "0b00111100101001111100111011011111";
        ram[84] = "0b10111101110101000010001110110110";
        ram[85] = "0b10111100101000110001111111001010";
        ram[86] = "0b00111100111101100111000001001000";
        ram[87] = "0b10111101011101011001100010011001";
        ram[88] = "0b00111011000111111010100000101000";
        ram[89] = "0b10111101110101110101110111110011";
        ram[90] = "0b10111100011101100010110010110110";
        ram[91] = "0b00111101000000101110111100101011";
        ram[92] = "0b10111101001110111111111100010001";
        ram[93] = "0b10111101111010000010000011100011";
        ram[94] = "0b10111100100001100100111001111110";
        ram[95] = "0b00111101101001011011110110001101";
        ram[96] = "0b00111100100110010100101001111101";
        ram[97] = "0b10111101100111011101101100010100";
        ram[98] = "0b00111101101110100110101010011011";
        ram[99] = "0b10111101110011011001000100101111";
        ram[100] = "0b10111101101110111011110111111010";
        ram[101] = "0b10111110100001111110101100111001";
        ram[102] = "0b10111101100110100111001000100011";
        ram[103] = "0b10111010110001010000010101110000";
        ram[104] = "0b10111011110001101100101101110110";
        ram[105] = "0b00111010110101111010011111100101";
        ram[106] = "0b00111101110101011001001000101000";
        ram[107] = "0b10111101011010110010110010101100";
        ram[108] = "0b10111101100100011111011001011000";
        ram[109] = "0b10111100101000000001100001011110";
        ram[110] = "0b10111101101001100011000000101010";
        ram[111] = "0b10111010111001101100101000001011";
        ram[112] = "0b00111101001111110100011100010001";
        ram[113] = "0b10111011000101010101001100110110";
        ram[114] = "0b00111101001101100000011110000111";
        ram[115] = "0b10111100001010111101100011010111";
        ram[116] = "0b00111100010100111010110000010110";
        ram[117] = "0b00111101001100000011101011000100";
        ram[118] = "0b10111110001011110110010100001111";
        ram[119] = "0b10111100101111001110111100010111";
        ram[120] = "0b00111101100001001001111010100100";
        ram[121] = "0b00111101000011001111010010100011";
        ram[122] = "0b10111101101001100000000101010000";
        ram[123] = "0b10111011100001011010000000000010";
        ram[124] = "0b00111101001100101100100000100101";
        ram[125] = "0b10111101101101110001101110011001";
        ram[126] = "0b10111100110101111000010110010001";
        ram[127] = "0b00111100000001110101101100100101";
        ram[128] = "0b10111101101010100101110101010001";
        ram[129] = "0b10111101001000000100111001110000";
        ram[130] = "0b10111110001100100010010110101000";
        ram[131] = "0b10111101000010110100101010011100";
        ram[132] = "0b00111101110111100100111110111001";
        ram[133] = "0b10111110000111111001110000101100";
        ram[134] = "0b00111101100011101010000010111111";
        ram[135] = "0b00111101110011001100010000100010";
        ram[136] = "0b00111101001100011011000010110000";
        ram[137] = "0b10111110000101011101111000011111";
        ram[138] = "0b10111110011101100100011111110110";
        ram[139] = "0b10111101111110101101011110100101";
        ram[140] = "0b00111011100110100001100010011101";
        ram[141] = "0b00111101001011110101001110001001";
        ram[142] = "0b10111101010011010101100100001000";
        ram[143] = "0b10111100000100010100100010101011";
        ram[144] = "0b10111100111110010111011101110101";
        ram[145] = "0b10111110010101011101011111001010";
        ram[146] = "0b00111100100111101011001101001101";
        ram[147] = "0b10111100111100101100010101100001";
        ram[148] = "0b10111101000100110101000100110000";
        ram[149] = "0b00111101100110111111101101100101";
        ram[150] = "0b00111101111010100011010100000001";
        ram[151] = "0b10111101101011001111000111000101";
        ram[152] = "0b00111101011001111101011000100110";
        ram[153] = "0b00111100110000000111000001101110";
        ram[154] = "0b10111101011101110001000001010001";
        ram[155] = "0b00111101100111011001001110001100";
        ram[156] = "0b10111110000100000011001010001001";
        ram[157] = "0b10111101111100110001100011101101";
        ram[158] = "0b10111101101100000000111001000010";
        ram[159] = "0b10111100011010001100100111111011";
        ram[160] = "0b10111110100000010010000000000100";
        ram[161] = "0b00111101011011001001100101110110";
        ram[162] = "0b10111110010111110011001001101000";
        ram[163] = "0b10111110000110010100110101001001";
        ram[164] = "0b00111101000011001001001100001101";
        ram[165] = "0b10111100101111001001010110101011";
        ram[166] = "0b10111101010101001111011010110010";
        ram[167] = "0b00111101100100101110000001001000";
        ram[168] = "0b00111101110110010000000111111010";
        ram[169] = "0b10111101100011110101010001000011";
        ram[170] = "0b00111101100001110011111101011110";
        ram[171] = "0b00111100000010010101011010111100";
        ram[172] = "0b10111110000110100100010011001100";
        ram[173] = "0b10111110000001001110110001111000";
        ram[174] = "0b10111101111111100000100110101001";
        ram[175] = "0b10111101010100000010011011111011";
        ram[176] = "0b00111101001001100000010111101010";
        ram[177] = "0b00111110000011011100011111000001";
        ram[178] = "0b00111101100010110000111101010101";
        ram[179] = "0b10111101010000111010101111001101";
        ram[180] = "0b00111101101101110111101001010111";
        ram[181] = "0b00111100100101010010000101110100";
        ram[182] = "0b10111110000011101100011001001111";
        ram[183] = "0b00111101000111110001010101101010";
        ram[184] = "0b10111101011110101101001001000011";
        ram[185] = "0b10111101000110000101000110111110";
        ram[186] = "0b00111101111011000100001100000100";
        ram[187] = "0b10111101111000000001000000101011";
        ram[188] = "0b10111011000110101000100101100110";
        ram[189] = "0b10111101000101110100110111100110";
        ram[190] = "0b00111100001101001001101001111000";
        ram[191] = "0b00111101101010001011101110101101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiZio) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiZio_ram* meminst;


SC_CTOR(conv_2_conv_2_weiZio) {
meminst = new conv_2_conv_2_weiZio_ram("conv_2_conv_2_weiZio_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiZio() {
    delete meminst;
}


};//endmodule
#endif
