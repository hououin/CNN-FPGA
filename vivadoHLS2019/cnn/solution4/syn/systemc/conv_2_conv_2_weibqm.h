// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibqm_H__
#define __conv_2_conv_2_weibqm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibqm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibqm_ram) {
        ram[0] = "0b00111010101001001100001010101101";
        ram[1] = "0b00111101100011011001010101011000";
        ram[2] = "0b10111110011110000011111010010011";
        ram[3] = "0b00111110010011011111001011000110";
        ram[4] = "0b00111110000111110000001100111001";
        ram[5] = "0b00111101010110100001101100110001";
        ram[6] = "0b00111110000011000011111100011011";
        ram[7] = "0b00111100101111101110010001000000";
        ram[8] = "0b00111101111010101110010011110101";
        ram[9] = "0b10111110000100111100110111110010";
        ram[10] = "0b00111110010110100101100010101110";
        ram[11] = "0b10111101111011001001100010010000";
        ram[12] = "0b00111101000101110000110100111100";
        ram[13] = "0b00111110000001011000001111000100";
        ram[14] = "0b00111101101100010110001101111001";
        ram[15] = "0b00111101011001111111101011110101";
        ram[16] = "0b00111101101000101101100001011101";
        ram[17] = "0b10111011111111001100000110010101";
        ram[18] = "0b00111100110000010010110011101111";
        ram[19] = "0b10111101001111100000010101111010";
        ram[20] = "0b00111110000011100111110010010010";
        ram[21] = "0b00111110011010011110011110100001";
        ram[22] = "0b10111101000110110000000011101101";
        ram[23] = "0b00111101000101000001000000011100";
        ram[24] = "0b00111100101000000111001100101101";
        ram[25] = "0b00111101101101110100110001000001";
        ram[26] = "0b10111100010101110011011111111101";
        ram[27] = "0b10111101100101110100001010001101";
        ram[28] = "0b00111101001101100000101101011101";
        ram[29] = "0b10111110100101011110101011101001";
        ram[30] = "0b10111101100001001111111111010000";
        ram[31] = "0b10111110000110001010110111011111";
        ram[32] = "0b00111110000111000010010111100000";
        ram[33] = "0b10111110000010110110101110100101";
        ram[34] = "0b00111101001110100010100111111111";
        ram[35] = "0b10111100110011100101100001010101";
        ram[36] = "0b10111110001101010100000100101101";
        ram[37] = "0b00111110001010110001001111010010";
        ram[38] = "0b10111011101000111001011111111100";
        ram[39] = "0b00111100000000101100011111111110";
        ram[40] = "0b10111110001001000111110111101010";
        ram[41] = "0b00111101100001111101000100000100";
        ram[42] = "0b00111100101111011100001111001000";
        ram[43] = "0b00111101101101001110110011010100";
        ram[44] = "0b00111101001001100001010011010110";
        ram[45] = "0b00111101101100100000111100111111";
        ram[46] = "0b10111100111010101111111001100010";
        ram[47] = "0b10111110000101001001000111000000";
        ram[48] = "0b10111101101011101110111010100001";
        ram[49] = "0b10111101100001011111101001101001";
        ram[50] = "0b00111100100010010111101011001100";
        ram[51] = "0b00111110100011100101100101000010";
        ram[52] = "0b10111110000011101111000010101000";
        ram[53] = "0b10111100110011101110101001001001";
        ram[54] = "0b10111101110000110010110001110001";
        ram[55] = "0b10111110100001111010011111101001";
        ram[56] = "0b00111101011010001110110011000000";
        ram[57] = "0b10111101000101111011111000010000";
        ram[58] = "0b00111010001011110100111000101110";
        ram[59] = "0b00111100110100101100010000100010";
        ram[60] = "0b00111101101100101101100101011100";
        ram[61] = "0b00111101100100001101000010010000";
        ram[62] = "0b10111101011011111011110100010111";
        ram[63] = "0b00111101100001110100001000101000";
        ram[64] = "0b10111100110001100010100100100100";
        ram[65] = "0b00111101111111111100011011000001";
        ram[66] = "0b10111110100101010010011001101001";
        ram[67] = "0b10111101010101100101011000100100";
        ram[68] = "0b00111101011010100000110110100100";
        ram[69] = "0b00111101101000111101001010001001";
        ram[70] = "0b00111101110111001111010100010010";
        ram[71] = "0b10111101101111101111111101101111";
        ram[72] = "0b10111110000101101100111001110110";
        ram[73] = "0b10111101110000111001000111001101";
        ram[74] = "0b00111100101001111110010101000101";
        ram[75] = "0b10111100110011101010000010110001";
        ram[76] = "0b00111110001000000000011101000110";
        ram[77] = "0b00111101111011000010111010111001";
        ram[78] = "0b00111101000101100001011101101010";
        ram[79] = "0b10111101111010110001100011100000";
        ram[80] = "0b10111100111010001001000010100101";
        ram[81] = "0b00111100011110011101001000111100";
        ram[82] = "0b00111101010010010001101100011110";
        ram[83] = "0b10111101000100101010101000000000";
        ram[84] = "0b10111110000000100100100001010111";
        ram[85] = "0b00111101010111100100000110111110";
        ram[86] = "0b00111100101110011111100101100110";
        ram[87] = "0b00111110000010001100110101110011";
        ram[88] = "0b00111101100100111001111101111011";
        ram[89] = "0b10111101101010110111000101100100";
        ram[90] = "0b10111101100011000011101010101001";
        ram[91] = "0b00111101110110110110100110110010";
        ram[92] = "0b00111101110001101101001110110111";
        ram[93] = "0b10111101100001101100000000111010";
        ram[94] = "0b00111101100011101011100110011111";
        ram[95] = "0b10111101110000111100110111101101";
        ram[96] = "0b00111101011111001100010101011000";
        ram[97] = "0b00111101010111011000000101101111";
        ram[98] = "0b10111110000101010010000101000100";
        ram[99] = "0b10111110011000001111110100110100";
        ram[100] = "0b10111101111001001000101000110011";
        ram[101] = "0b10111100000001000100111001110011";
        ram[102] = "0b10111100010000000110010011100000";
        ram[103] = "0b00111100010110000011100001000111";
        ram[104] = "0b00111110000011011000111100110100";
        ram[105] = "0b00111011110010010011101011111000";
        ram[106] = "0b10111011100101010101110001100100";
        ram[107] = "0b10111110001000000110000011010001";
        ram[108] = "0b10111011100101000101000010000011";
        ram[109] = "0b10111100101001100110111101101111";
        ram[110] = "0b10111101010000101000110011010101";
        ram[111] = "0b00111101010101100000011101111101";
        ram[112] = "0b10111101101000000000110110001110";
        ram[113] = "0b10111101100010111010001011101010";
        ram[114] = "0b10111011110110010110000000100000";
        ram[115] = "0b00111110000111101110110010111101";
        ram[116] = "0b00111101110011110010110000101011";
        ram[117] = "0b00111110000100110101001001100100";
        ram[118] = "0b10111100000110000111110110100101";
        ram[119] = "0b10111101101011100111100111101011";
        ram[120] = "0b10111100011101000001000100010111";
        ram[121] = "0b10111110100101100000100000010111";
        ram[122] = "0b00111101010000110011100011111100";
        ram[123] = "0b10111110000011110011000011101111";
        ram[124] = "0b00111101111110101100111011110111";
        ram[125] = "0b10111100111010100111000111101110";
        ram[126] = "0b00111101111010001000111100101101";
        ram[127] = "0b10111101101001001110111101010101";
        ram[128] = "0b10111101101010001010000111110110";
        ram[129] = "0b00111100110110100010111011011011";
        ram[130] = "0b10111101111101000110011101110110";
        ram[131] = "0b10111110000101110110010100000100";
        ram[132] = "0b00111011011110000110010001001000";
        ram[133] = "0b10111110100010010001010100111010";
        ram[134] = "0b00111101110000010100000111010011";
        ram[135] = "0b00111100100110011111010000100110";
        ram[136] = "0b10111110010000101000001000001001";
        ram[137] = "0b10111110011010010110100000100110";
        ram[138] = "0b10111110010011101000110010111110";
        ram[139] = "0b10111101101001110000101011110001";
        ram[140] = "0b00111110000110011010001111101011";
        ram[141] = "0b00111101101101011001101011010010";
        ram[142] = "0b00111100101111000100100101111001";
        ram[143] = "0b10111101110101000010111001001011";
        ram[144] = "0b10111110100100000000001001000111";
        ram[145] = "0b10111110001010100001001111001111";
        ram[146] = "0b10111101110001010011111000110001";
        ram[147] = "0b10111101010110001001101001010110";
        ram[148] = "0b00111110000101010110101110110010";
        ram[149] = "0b00111110010011011110000111100110";
        ram[150] = "0b00111110001111100100001110010111";
        ram[151] = "0b00111101111111111010110111100101";
        ram[152] = "0b10111011010111101011111101101110";
        ram[153] = "0b10111101000001001000001100000001";
        ram[154] = "0b10111110011000101010101000111000";
        ram[155] = "0b00111101010010000011010111001100";
        ram[156] = "0b10111101111011001001110110111110";
        ram[157] = "0b00111101101101011000011011111111";
        ram[158] = "0b10111101101011000101110010000010";
        ram[159] = "0b10111100100100101101011001100100";
        ram[160] = "0b10111110011010010000100011101111";
        ram[161] = "0b00111100110000010111000010010110";
        ram[162] = "0b10111110101110011111101000000000";
        ram[163] = "0b10111110101011111111010010100111";
        ram[164] = "0b00111110000011110010100111000110";
        ram[165] = "0b00111100110111100001110010000010";
        ram[166] = "0b00111100101101100011001110100111";
        ram[167] = "0b10111011000100000000110111011010";
        ram[168] = "0b00111110001010001111000010110011";
        ram[169] = "0b10111100110111110000001110011111";
        ram[170] = "0b10111011111111111000000010100010";
        ram[171] = "0b10111101011111100110110111010111";
        ram[172] = "0b00111101001110100000110110000111";
        ram[173] = "0b10111110000000111110110100000001";
        ram[174] = "0b00111101110110000001111010000110";
        ram[175] = "0b00111100000111100010111011111010";
        ram[176] = "0b00111110000110100111110110110000";
        ram[177] = "0b10111100110100111000001110001000";
        ram[178] = "0b10111101011010101111110010110010";
        ram[179] = "0b00111100001001010011001111000111";
        ram[180] = "0b00111101111010010000011111001000";
        ram[181] = "0b00111110000000110010111001011101";
        ram[182] = "0b00111101011011100101101110110010";
        ram[183] = "0b00111101010110111110011011010111";
        ram[184] = "0b10111110100011011100101111100100";
        ram[185] = "0b00111100100101111010100111001100";
        ram[186] = "0b00111101100101110111010101110101";
        ram[187] = "0b10111101001100110010000101110001";
        ram[188] = "0b00111101011010010000000011010000";
        ram[189] = "0b00111101011111100100000000111101";
        ram[190] = "0b10111101001011011011100110010111";
        ram[191] = "0b10111101111010001000101000111010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibqm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibqm_ram* meminst;


SC_CTOR(conv_2_conv_2_weibqm) {
meminst = new conv_2_conv_2_weibqm_ram("conv_2_conv_2_weibqm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibqm() {
    delete meminst;
}


};//endmodule
#endif
