// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibml_H__
#define __conv_2_conv_2_weibml_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibml_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibml_ram) {
        ram[0] = "0b00111110000010010100001100111000";
        ram[1] = "0b10111101011010101011000001100001";
        ram[2] = "0b10111110100001010101010100101010";
        ram[3] = "0b00111101111110101110001110011010";
        ram[4] = "0b10111110100011000101100100100011";
        ram[5] = "0b00111110001010011100000100010111";
        ram[6] = "0b10111010110111001011111011001111";
        ram[7] = "0b10111110010101010010000110111100";
        ram[8] = "0b00111110111100010110110110100011";
        ram[9] = "0b10111110000011111110000111000011";
        ram[10] = "0b00111110000010010110100111101101";
        ram[11] = "0b10111110001110110000100011000001";
        ram[12] = "0b00111101001111101101101011100000";
        ram[13] = "0b10111101001111100100101010011100";
        ram[14] = "0b00111110110011100001111101000100";
        ram[15] = "0b00111110110001111100010111101101";
        ram[16] = "0b10111101100011001011010111101100";
        ram[17] = "0b00111101001010110001100110101010";
        ram[18] = "0b10111101010100000010001110001110";
        ram[19] = "0b10111101111101011111011101010011";
        ram[20] = "0b10111101100000111001111100110000";
        ram[21] = "0b00111100010011110001110110110010";
        ram[22] = "0b10111100010000001110101000100101";
        ram[23] = "0b10111101100011010011000011100001";
        ram[24] = "0b00111110010111111110001011111000";
        ram[25] = "0b00111110101001111101011000101100";
        ram[26] = "0b10111100100111100001111111100000";
        ram[27] = "0b00111101111110011000110011000101";
        ram[28] = "0b00111110101010001000001110110111";
        ram[29] = "0b10111011111101010011010110111011";
        ram[30] = "0b10111101011101010111000101111111";
        ram[31] = "0b10111110010111110100111111111100";
        ram[32] = "0b00111110101100001011000001100111";
        ram[33] = "0b10111110000110101000010101000011";
        ram[34] = "0b00111101010111010010111010001001";
        ram[35] = "0b00111110000101011100100100101001";
        ram[36] = "0b10111110000111010111000100010111";
        ram[37] = "0b00111101010000111110010010011111";
        ram[38] = "0b00111101001100111100100111110110";
        ram[39] = "0b00111110000101011110100111101101";
        ram[40] = "0b10111011111001111110010110001110";
        ram[41] = "0b00111110100110110110110100001000";
        ram[42] = "0b10111101110101111110011101111011";
        ram[43] = "0b00111110100001110011101001111100";
        ram[44] = "0b10111101011100011100110110001100";
        ram[45] = "0b00111110000101111011111100101101";
        ram[46] = "0b10111110000100001010000011110101";
        ram[47] = "0b00111101111110010100011001101001";
        ram[48] = "0b10111110000100010011110001111101";
        ram[49] = "0b10111110001100010110100101110101";
        ram[50] = "0b00111110011111100010011010100101";
        ram[51] = "0b00111110000000111001011001100101";
        ram[52] = "0b10111110010100100110110000001000";
        ram[53] = "0b10111101110001111101110110101000";
        ram[54] = "0b00111101001011111110001101100011";
        ram[55] = "0b10111110011101100111111111110100";
        ram[56] = "0b00111101001001001111010111001100";
        ram[57] = "0b10111110100011110111010001110111";
        ram[58] = "0b00111110001100111101000110111010";
        ram[59] = "0b10111110000101111101111001101101";
        ram[60] = "0b00111101111000110011111110111001";
        ram[61] = "0b00111110100110000011110011110100";
        ram[62] = "0b00111100110110011000011100010110";
        ram[63] = "0b00111101101001101111110001101110";
        ram[64] = "0b10111110000011111000001001110101";
        ram[65] = "0b00111110010000000110110010110111";
        ram[66] = "0b00111101001001110000111100000000";
        ram[67] = "0b10111110110000110101101010000100";
        ram[68] = "0b10111101100000111010001101010101";
        ram[69] = "0b00111101100010110011011100000011";
        ram[70] = "0b10111100101111110101110010111100";
        ram[71] = "0b10111101100000001110011000110010";
        ram[72] = "0b00111110100101000101110101101101";
        ram[73] = "0b10111110010101111111001111111000";
        ram[74] = "0b00111110011100001101010011010011";
        ram[75] = "0b10111101110111100100000011111010";
        ram[76] = "0b10111101111101100000101001000111";
        ram[77] = "0b00111101010000000000001100011100";
        ram[78] = "0b00111110011101000100111010000000";
        ram[79] = "0b00111110000111111010101001001001";
        ram[80] = "0b10111110010110010110100110110101";
        ram[81] = "0b10111101110101100101010011000001";
        ram[82] = "0b00111110000001100011000000011101";
        ram[83] = "0b10111101110111001000110100111001";
        ram[84] = "0b10111110001111011101001101101011";
        ram[85] = "0b00111110010001011011111111010111";
        ram[86] = "0b00111110010101101110011111110011";
        ram[87] = "0b00111110000111101110011010011110";
        ram[88] = "0b00111110010101111001011101000011";
        ram[89] = "0b10111100011010110100111101010110";
        ram[90] = "0b10111101111000111001011111000000";
        ram[91] = "0b00111110000011110001011111010011";
        ram[92] = "0b00111110101010111100001001111100";
        ram[93] = "0b00111101111110111101111110010111";
        ram[94] = "0b10111110010110111010000000111111";
        ram[95] = "0b10111110000111100110001011101001";
        ram[96] = "0b10111110010100110001011000110111";
        ram[97] = "0b10111110000011010101001100000100";
        ram[98] = "0b10111110101100110010111011100110";
        ram[99] = "0b00111101110111100000110101110110";
        ram[100] = "0b10111110010011101101100011010110";
        ram[101] = "0b00111110010010111101001111010100";
        ram[102] = "0b10111101110000010011110001111010";
        ram[103] = "0b10111110000000101100010110000001";
        ram[104] = "0b00111110000100111001010101000011";
        ram[105] = "0b10111101110011010111010100000110";
        ram[106] = "0b10111110100000011001101010111101";
        ram[107] = "0b10111110100100110010100000001010";
        ram[108] = "0b10111101100110100011010000110001";
        ram[109] = "0b10111110101000010110011010000000";
        ram[110] = "0b00111101100011011101010111111100";
        ram[111] = "0b00111110000000000001100010110001";
        ram[112] = "0b10111110101011010111011110100111";
        ram[113] = "0b10111110001001111101111011001011";
        ram[114] = "0b00111110111000011010011000110101";
        ram[115] = "0b00111110011111111111000110110110";
        ram[116] = "0b10111100101110110110100010000010";
        ram[117] = "0b10111011101001001100010011001000";
        ram[118] = "0b00111101000100111010001000100100";
        ram[119] = "0b10111110101001010000000101110011";
        ram[120] = "0b10111101101010011101111111001011";
        ram[121] = "0b10111110100001001100101111100011";
        ram[122] = "0b00111110000000111011010001010011";
        ram[123] = "0b10111101101111011011100010110111";
        ram[124] = "0b00111110101000000001000010100011";
        ram[125] = "0b00111110000101011100010101001111";
        ram[126] = "0b00111101011100101110000011010111";
        ram[127] = "0b00111100111101011101001100111011";
        ram[128] = "0b10111110001000010111111101101010";
        ram[129] = "0b00111110000101101100011110101001";
        ram[130] = "0b00111110100000100000001100111100";
        ram[131] = "0b10111110101110000011010110001000";
        ram[132] = "0b10111110000111101001010001010010";
        ram[133] = "0b10111110010110100010111101011111";
        ram[134] = "0b10111110011011110110100100111000";
        ram[135] = "0b00111101101100110101100111011010";
        ram[136] = "0b10111101111011111010101100010011";
        ram[137] = "0b10111110100111110010110111111111";
        ram[138] = "0b10111101100000000110100010000111";
        ram[139] = "0b10111101100011110110100001001000";
        ram[140] = "0b10111110001000010111000010111101";
        ram[141] = "0b00111101010111100110010101100101";
        ram[142] = "0b10111110101010110011001111110000";
        ram[143] = "0b10111110110000001001110101010111";
        ram[144] = "0b00111011100001110000001001110101";
        ram[145] = "0b10111110011110101001101101010100";
        ram[146] = "0b00111110001001000100011001111000";
        ram[147] = "0b00111110100100001001011001101111";
        ram[148] = "0b00111101111100001000001100110111";
        ram[149] = "0b10111101100000100011010001011001";
        ram[150] = "0b00111110001010011100110000111111";
        ram[151] = "0b00111101000010010001100111011101";
        ram[152] = "0b10111101111110000000001010101011";
        ram[153] = "0b10111110101000001000111101010000";
        ram[154] = "0b10111110001100001111110010100001";
        ram[155] = "0b00111100110101011011000111000011";
        ram[156] = "0b10111101100101010100000110000010";
        ram[157] = "0b00111110010010001101101000110011";
        ram[158] = "0b00111101010010100101010101100100";
        ram[159] = "0b10111101111101000000100100110000";
        ram[160] = "0b10111110101001000111111100111001";
        ram[161] = "0b10111101111110111110010000010101";
        ram[162] = "0b10111110101101110101110110111011";
        ram[163] = "0b10111110010000100001111001001100";
        ram[164] = "0b00111110010011010100010001000111";
        ram[165] = "0b00111110000101100110000111001010";
        ram[166] = "0b00111101010111000001001010100100";
        ram[167] = "0b10111110010001010000011100101010";
        ram[168] = "0b00111110101011100000011111001111";
        ram[169] = "0b10111111000010000011010111011011";
        ram[170] = "0b10111110011100100100111001111000";
        ram[171] = "0b10111110101101111011011000111001";
        ram[172] = "0b00111101100010100110010000111010";
        ram[173] = "0b10111110110010100001111110110010";
        ram[174] = "0b10111110011111011011001000011000";
        ram[175] = "0b10111110000011100101101000010001";
        ram[176] = "0b00111110011110101001110101100110";
        ram[177] = "0b10111101110110010000100001011111";
        ram[178] = "0b00111101101011010000101011110001";
        ram[179] = "0b00111110000010110011001010100101";
        ram[180] = "0b00111110000110111111011001111111";
        ram[181] = "0b00111101111010001100110001001101";
        ram[182] = "0b00111110001101110010011101111011";
        ram[183] = "0b00111110000100010010110010001101";
        ram[184] = "0b10111110001101001001010110111110";
        ram[185] = "0b00111101000010011110011001110100";
        ram[186] = "0b00111110001001010110000110100011";
        ram[187] = "0b00111101010100100101111000110101";
        ram[188] = "0b00111110101111110000100011110101";
        ram[189] = "0b10111110100101010010100001110111";
        ram[190] = "0b10111110000011100011010011100000";
        ram[191] = "0b10111110011010101000100101100001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibml) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibml_ram* meminst;


SC_CTOR(conv_2_conv_2_weibml) {
meminst = new conv_2_conv_2_weibml_ram("conv_2_conv_2_weibml_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibml() {
    delete meminst;
}


};//endmodule
#endif
