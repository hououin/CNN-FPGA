// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibil_H__
#define __conv_2_conv_2_weibil_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibil_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibil_ram) {
        ram[0] = "0b10111011111110101101010000001010";
        ram[1] = "0b10111110010000010111110011100001";
        ram[2] = "0b10111101011100101101001000011101";
        ram[3] = "0b00111101110110000011011101000100";
        ram[4] = "0b00111101011011001011001011001111";
        ram[5] = "0b10111101101110001110011010110111";
        ram[6] = "0b10111101100100001110000010111000";
        ram[7] = "0b10111101101000101010110000110011";
        ram[8] = "0b00111110001101111111001001100100";
        ram[9] = "0b10111110000001001010001001000001";
        ram[10] = "0b10111100010001000010001101000010";
        ram[11] = "0b10111101110011000101110001111101";
        ram[12] = "0b00111100111011110001000110001001";
        ram[13] = "0b10111101001010000010001101000000";
        ram[14] = "0b00111011100011110001101101110000";
        ram[15] = "0b00111110001011110010110101101111";
        ram[16] = "0b10111110010010011011011000010100";
        ram[17] = "0b10111101110100110000000100101101";
        ram[18] = "0b10111110100000001000110100111110";
        ram[19] = "0b00111101001111111101110101110101";
        ram[20] = "0b00111101001110001000100000000010";
        ram[21] = "0b10111110011000101000010110001100";
        ram[22] = "0b10111110010001110100100100010101";
        ram[23] = "0b00111110000011011101101111111000";
        ram[24] = "0b00111100011100011101010100101000";
        ram[25] = "0b00111110000010000111010000011110";
        ram[26] = "0b00111100101000101101100100010001";
        ram[27] = "0b10111110000011111101010000001111";
        ram[28] = "0b00111100010000011000110110001100";
        ram[29] = "0b10111101010110011100111100101011";
        ram[30] = "0b10111011110010011101000001110100";
        ram[31] = "0b10111110100101101101101001101011";
        ram[32] = "0b10111101011010110110101010110111";
        ram[33] = "0b10111100011010111111000110000100";
        ram[34] = "0b10111101001011001010100010110010";
        ram[35] = "0b00111101100101100000010101101110";
        ram[36] = "0b10111101001111101000001011011001";
        ram[37] = "0b00111101100111101111010100000001";
        ram[38] = "0b10111101110000101111000111011100";
        ram[39] = "0b10111100100010101001110010111110";
        ram[40] = "0b10111110100011011001001110111010";
        ram[41] = "0b00111110010110001000000010100001";
        ram[42] = "0b10111110010001010001010001101101";
        ram[43] = "0b00111110010110111100011101111010";
        ram[44] = "0b00111101000001111111101011001000";
        ram[45] = "0b10111100100001100101111011010000";
        ram[46] = "0b10111101000001101010011000001011";
        ram[47] = "0b10111101000011010111001011001001";
        ram[48] = "0b10111101100110100110100011000100";
        ram[49] = "0b10111101100001100110111010000111";
        ram[50] = "0b10111100101000010001101011110100";
        ram[51] = "0b00111101101000000001010011011111";
        ram[52] = "0b10111110011001011011000111110110";
        ram[53] = "0b00111101000101001011010111111001";
        ram[54] = "0b10111101011101010010100010001000";
        ram[55] = "0b10111101101110111100110010011001";
        ram[56] = "0b10111101101000100101010111001101";
        ram[57] = "0b10111110001101010100110101011101";
        ram[58] = "0b10111110000011110110101101110111";
        ram[59] = "0b00111100001101100011010011010100";
        ram[60] = "0b00111100000011110001011000011110";
        ram[61] = "0b00111101011010110101101001001001";
        ram[62] = "0b00111101110000001111010101101010";
        ram[63] = "0b00111101101000011011000000011011";
        ram[64] = "0b00111101011110000000001100100100";
        ram[65] = "0b10111101000000000010100010001111";
        ram[66] = "0b10111101011101100110000100001101";
        ram[67] = "0b10111011101010001011110011110101";
        ram[68] = "0b00111010110101011001001010000100";
        ram[69] = "0b10111100100000001001010101000101";
        ram[70] = "0b10111101101110001101000011111011";
        ram[71] = "0b10111100101001000010111111011010";
        ram[72] = "0b10111011100111110110010111010011";
        ram[73] = "0b10111101000000000110101011001010";
        ram[74] = "0b00111110001001001001010010001110";
        ram[75] = "0b10111101100001101010101101011001";
        ram[76] = "0b10111101110001110001001100110100";
        ram[77] = "0b00111101000010011111001000001000";
        ram[78] = "0b00111101100001111010101000001001";
        ram[79] = "0b00111010101110001010101011110110";
        ram[80] = "0b00111101101001011110010100101111";
        ram[81] = "0b00111100100000001011011111111001";
        ram[82] = "0b00111101101101001001011001110100";
        ram[83] = "0b00111101110110000100111010010011";
        ram[84] = "0b00111101011101100111010100101000";
        ram[85] = "0b10111101101101101011001101100001";
        ram[86] = "0b00111100110011000001110010001110";
        ram[87] = "0b10111100011010110111100110111011";
        ram[88] = "0b10111011101011010000000000110111";
        ram[89] = "0b00111011010100001001110011010000";
        ram[90] = "0b00111101001001010110000000010000";
        ram[91] = "0b10111101101000010001110000010100";
        ram[92] = "0b00111101110100010111101100000100";
        ram[93] = "0b10111100110100000111111111100111";
        ram[94] = "0b00111101101000011011110101000011";
        ram[95] = "0b10111100011111011001101010110011";
        ram[96] = "0b10111101000001001010000011100101";
        ram[97] = "0b10111101111011000101001000010000";
        ram[98] = "0b00111101011110001011001101011010";
        ram[99] = "0b10111101110011011001001110101101";
        ram[100] = "0b10111101101100111000010111000110";
        ram[101] = "0b10111100100000001010111110011100";
        ram[102] = "0b10111101101000010110010010001100";
        ram[103] = "0b10111101101000000101011011001000";
        ram[104] = "0b10111101110100001011011100110000";
        ram[105] = "0b10111101011010000101100110110111";
        ram[106] = "0b00111100111001001011100001010011";
        ram[107] = "0b00111100110011000110111000101101";
        ram[108] = "0b00111110000000110000101111111110";
        ram[109] = "0b00111100101101010010110001001000";
        ram[110] = "0b10111110000010011110000011011110";
        ram[111] = "0b10111100001011001000100100000000";
        ram[112] = "0b00111101001011001110010110000011";
        ram[113] = "0b10111100110101010110001111010000";
        ram[114] = "0b00111101001111001010100010010111";
        ram[115] = "0b00111101110011010011010000111001";
        ram[116] = "0b10111101100001101000010011100011";
        ram[117] = "0b10111101100010101000110110000011";
        ram[118] = "0b10111110010001010011101000100110";
        ram[119] = "0b10111110100011011100000100010110";
        ram[120] = "0b00111101011000000001110100011110";
        ram[121] = "0b00111101110101101010001111101100";
        ram[122] = "0b10111110101101110111001010111100";
        ram[123] = "0b00111101110011011001111100010110";
        ram[124] = "0b00111100100101000101111011001101";
        ram[125] = "0b00111101101001010000010101101011";
        ram[126] = "0b10111101000101000101010011011001";
        ram[127] = "0b00111101101011110000100101110001";
        ram[128] = "0b00111101100101011010000000111000";
        ram[129] = "0b00111110001010011110100111011001";
        ram[130] = "0b00111101101100011101110001101111";
        ram[131] = "0b00111100001111110101011000010101";
        ram[132] = "0b10111100110000111011001101101011";
        ram[133] = "0b00111010010100101101110101101101";
        ram[134] = "0b10111101101010001011001001000000";
        ram[135] = "0b10111100101011111110001000000001";
        ram[136] = "0b10111100111100100101011000110110";
        ram[137] = "0b10111101101101010101000010100101";
        ram[138] = "0b10111101011010111011001011111100";
        ram[139] = "0b10111110010000000001000111001010";
        ram[140] = "0b10111100101101110101000000101111";
        ram[141] = "0b00111101110011100000100100100101";
        ram[142] = "0b10111100101000101010111001101110";
        ram[143] = "0b00111100111100011111100011111010";
        ram[144] = "0b00111101000111100110010101000000";
        ram[145] = "0b00111101001100101011001100101101";
        ram[146] = "0b10111011001011111010001111101111";
        ram[147] = "0b10111101010100011110011010101101";
        ram[148] = "0b10111101101000000100101010001000";
        ram[149] = "0b00111100110001110000001100101101";
        ram[150] = "0b00111110000001011110010100010010";
        ram[151] = "0b10111110011110010010111011101111";
        ram[152] = "0b10111101011001000101001110010101";
        ram[153] = "0b10111101100111011110111000101101";
        ram[154] = "0b10111101010101011111101101101001";
        ram[155] = "0b00111101011110110110010101101010";
        ram[156] = "0b10111100101100010010001100110000";
        ram[157] = "0b00111101100110100111010100110000";
        ram[158] = "0b00111101010000101011110010101110";
        ram[159] = "0b00111100010000011001110101110010";
        ram[160] = "0b10111100110100111100001110101101";
        ram[161] = "0b00111100010110111010001110001111";
        ram[162] = "0b10111100100111010100010010010011";
        ram[163] = "0b10111110100011100110001101010000";
        ram[164] = "0b00111100001011010101100110001001";
        ram[165] = "0b10111110011000110001000000101100";
        ram[166] = "0b10111110001110100111001001000100";
        ram[167] = "0b00111110000010001010100110000000";
        ram[168] = "0b00111101110101101010101101111010";
        ram[169] = "0b10111101010000000011101110101010";
        ram[170] = "0b00111101011100011110011010010001";
        ram[171] = "0b00111101101100111111001010000001";
        ram[172] = "0b10111101110111001100011000101100";
        ram[173] = "0b10111100110010010101001000011010";
        ram[174] = "0b00111100110111100100011010100110";
        ram[175] = "0b10111101110101010011011011111100";
        ram[176] = "0b00111101100100010011101010111110";
        ram[177] = "0b00111101110110011000011101101011";
        ram[178] = "0b10111100101011001001101101011111";
        ram[179] = "0b10111101010001101110011100101111";
        ram[180] = "0b10111101100011111011111110011001";
        ram[181] = "0b00111100100001011011110001101101";
        ram[182] = "0b10111101100000000000101000111000";
        ram[183] = "0b00111101011111101101001010110000";
        ram[184] = "0b10111101001001001010011000010011";
        ram[185] = "0b10111110000000000100011110010010";
        ram[186] = "0b10111101011101010011110111111011";
        ram[187] = "0b10111100001110111110001110101111";
        ram[188] = "0b00111101100110100111000001110011";
        ram[189] = "0b10111110010111001100010001111110";
        ram[190] = "0b00111101010001110011010001001000";
        ram[191] = "0b00111101100100001101100111101110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibil) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibil_ram* meminst;


SC_CTOR(conv_2_conv_2_weibil) {
meminst = new conv_2_conv_2_weibil_ram("conv_2_conv_2_weibil_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibil() {
    delete meminst;
}


};//endmodule
#endif
