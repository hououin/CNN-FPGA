// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibgk_H__
#define __conv_2_conv_2_weibgk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibgk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibgk_ram) {
        ram[0] = "0b10111100110100011110001000100001";
        ram[1] = "0b10111101100001110001000011111001";
        ram[2] = "0b10111101110011101100000010011101";
        ram[3] = "0b00111100111111101000001000111110";
        ram[4] = "0b10111101110001101111001010010001";
        ram[5] = "0b10111100101000001101010000000010";
        ram[6] = "0b10111110011110110010001011111101";
        ram[7] = "0b10111101111011111010110101101100";
        ram[8] = "0b00111101100100111000010100101010";
        ram[9] = "0b00111100101101110011001010110001";
        ram[10] = "0b00111100101111011011010001001111";
        ram[11] = "0b00111100101110000011000001001000";
        ram[12] = "0b10111110101000101011100100111101";
        ram[13] = "0b10111110000001001100011000100011";
        ram[14] = "0b00111101111001110001000110001011";
        ram[15] = "0b00111101110001010111100100110111";
        ram[16] = "0b10111101110100111011011100000111";
        ram[17] = "0b10111101101110000101101011100110";
        ram[18] = "0b00111101100111101000001000111010";
        ram[19] = "0b00111100001000110101000101110111";
        ram[20] = "0b00111100011100010100010011010000";
        ram[21] = "0b10111110100010110001010010001001";
        ram[22] = "0b10111110100111110110110100100010";
        ram[23] = "0b00111101100011101101101100111101";
        ram[24] = "0b10111110001110100110101000111111";
        ram[25] = "0b00111110010001001111010000100111";
        ram[26] = "0b10111101100000110011101010010101";
        ram[27] = "0b00111101001010110100000110101111";
        ram[28] = "0b10111110011101100111110011100011";
        ram[29] = "0b10111101110001001111011110111111";
        ram[30] = "0b00111100001010000100000001000001";
        ram[31] = "0b10111110100011011011010100110010";
        ram[32] = "0b00111101100101110111111110101111";
        ram[33] = "0b00111101000010010001101010101001";
        ram[34] = "0b10111101011111000110000110011101";
        ram[35] = "0b00111101011101110111001100010011";
        ram[36] = "0b00111011101111111100110101111010";
        ram[37] = "0b00111100010001010010101100111100";
        ram[38] = "0b10111110001111110101100100101111";
        ram[39] = "0b10111101001110001110010111011100";
        ram[40] = "0b10111101010011011111100010000010";
        ram[41] = "0b00111110010000000110000101011111";
        ram[42] = "0b10111110100011100100100111100011";
        ram[43] = "0b00111110000100110111000101001110";
        ram[44] = "0b00111101111010000111110001000101";
        ram[45] = "0b10111101100010010100111111110011";
        ram[46] = "0b10111110000110001000110111010100";
        ram[47] = "0b10111110001010100100100100100000";
        ram[48] = "0b10111101101000011000011101101110";
        ram[49] = "0b10111101100010000011111010110000";
        ram[50] = "0b10111110100100011000101000110000";
        ram[51] = "0b00111101100111110110101111101011";
        ram[52] = "0b00111100101111110110110000110110";
        ram[53] = "0b10111110000110100010101011010001";
        ram[54] = "0b10111101010110101110011101110110";
        ram[55] = "0b10111100011000110110110101101110";
        ram[56] = "0b10111110001000001001100100011001";
        ram[57] = "0b10111100111111011000111111001101";
        ram[58] = "0b10111101111110101010111101000000";
        ram[59] = "0b10111110000001000000010111101011";
        ram[60] = "0b10111101000011110011000111000110";
        ram[61] = "0b00111101110100001010111111011110";
        ram[62] = "0b10111101010011101101000111000100";
        ram[63] = "0b00111110001000111101010001000110";
        ram[64] = "0b10111101111100100101110000101111";
        ram[65] = "0b10111101100000101100110110100101";
        ram[66] = "0b10111110001100101101011001011111";
        ram[67] = "0b10111110010001110110000101001101";
        ram[68] = "0b10111110000011001001100110110101";
        ram[69] = "0b10111101010110001110001101101111";
        ram[70] = "0b10111110100011110000001101111100";
        ram[71] = "0b10111110000100110010011100111000";
        ram[72] = "0b00111101001111010011101100111011";
        ram[73] = "0b00111100101111110001011011010111";
        ram[74] = "0b00111110000000010111111010100010";
        ram[75] = "0b10111101000110000111100001100000";
        ram[76] = "0b10111110011000100000101001010110";
        ram[77] = "0b10111101001010100100001001111010";
        ram[78] = "0b00111101001110001011101010011001";
        ram[79] = "0b00111101101110101111100010100000";
        ram[80] = "0b10111101100100100100110000010010";
        ram[81] = "0b10111011011010010110100011011001";
        ram[82] = "0b00111101010001011110011111000111";
        ram[83] = "0b00111101010001101001110110101000";
        ram[84] = "0b00111110001000111110001110001001";
        ram[85] = "0b10111110101111111011100001111011";
        ram[86] = "0b00111010001010011100000001000100";
        ram[87] = "0b10111101001011011100011100010101";
        ram[88] = "0b10111110000000100111110101111000";
        ram[89] = "0b10111110000110000001010011000110";
        ram[90] = "0b10111101100001101100110101101001";
        ram[91] = "0b10111110100010010101100111111001";
        ram[92] = "0b00111100110111010011000011001001";
        ram[93] = "0b00111101001101101111111110011010";
        ram[94] = "0b00111101100011001100001101001100";
        ram[95] = "0b00111101101100111001100110011010";
        ram[96] = "0b00111101010100010001010011010000";
        ram[97] = "0b00111110000010111000110011111101";
        ram[98] = "0b10111100001110101111010101000110";
        ram[99] = "0b10111100011000110111100101000100";
        ram[100] = "0b10111110101011010111111101000101";
        ram[101] = "0b10111001100001101111011010111111";
        ram[102] = "0b10111110011100001101010010111100";
        ram[103] = "0b10111110100100111000101101000100";
        ram[104] = "0b10111101100000011000000001110010";
        ram[105] = "0b10111110000001011111011001000100";
        ram[106] = "0b10111110010110111100011010110000";
        ram[107] = "0b10111110001000001110001001000110";
        ram[108] = "0b00111101001111111110101100110000";
        ram[109] = "0b00111110001010101111100001100001";
        ram[110] = "0b10111101100100000100010100101110";
        ram[111] = "0b10111101110000001101011000000100";
        ram[112] = "0b10111100010111010101101011100000";
        ram[113] = "0b10111110101000110001010101000011";
        ram[114] = "0b10111101000010011111000000001000";
        ram[115] = "0b00111101111000111100101100011001";
        ram[116] = "0b10111101100111001010000111101111";
        ram[117] = "0b10111101110001111100101111010011";
        ram[118] = "0b10111101101001011001001011110100";
        ram[119] = "0b10111101110000010000010111000011";
        ram[120] = "0b00111110010010001011111101011001";
        ram[121] = "0b00111110010001111100011011100000";
        ram[122] = "0b10111110101011000001011100110110";
        ram[123] = "0b00111101010011101100100011001010";
        ram[124] = "0b10111101110010100000011100111110";
        ram[125] = "0b00111101110101101010010101010011";
        ram[126] = "0b10111101101001011100011001111000";
        ram[127] = "0b10111110000000100100101000100110";
        ram[128] = "0b00111101100011001010110111010110";
        ram[129] = "0b00111110000010000001011010011110";
        ram[130] = "0b00111100001111001001100001101101";
        ram[131] = "0b00111110000001010100110000001110";
        ram[132] = "0b10111110010100100000101000010110";
        ram[133] = "0b00111110010000100110101100100001";
        ram[134] = "0b10111110000011101011010001000110";
        ram[135] = "0b10111101100011110110011101001011";
        ram[136] = "0b00111101011110011101001101000111";
        ram[137] = "0b10111101000110111000001000010001";
        ram[138] = "0b00111101111101111101011110011010";
        ram[139] = "0b10111101101001100000100111101110";
        ram[140] = "0b10111110000101100000100011101010";
        ram[141] = "0b10111101111000011100011110011010";
        ram[142] = "0b10111100110110101110011101000001";
        ram[143] = "0b00111101001001111111011101011110";
        ram[144] = "0b00111110001001111010100011100100";
        ram[145] = "0b00111101110101001110011001110010";
        ram[146] = "0b00111101111010000110100001110101";
        ram[147] = "0b00111000011100101110100010100000";
        ram[148] = "0b10111110100011111110110110001000";
        ram[149] = "0b10111110101111110001001011100101";
        ram[150] = "0b00111100100000000100111000010110";
        ram[151] = "0b10111101111001111001110110111101";
        ram[152] = "0b10111110000101101001001000010000";
        ram[153] = "0b10111011110101011111110101101100";
        ram[154] = "0b00111110010100111011101110001001";
        ram[155] = "0b00111101101010100111101100011101";
        ram[156] = "0b00111100101101000011000010111101";
        ram[157] = "0b00111101110100011110010001100111";
        ram[158] = "0b00111101100011111000110011010001";
        ram[159] = "0b10111101000000100011100100101110";
        ram[160] = "0b00111101001110111101110001100101";
        ram[161] = "0b00111100000110100111001111100111";
        ram[162] = "0b00111101011011010111100110011110";
        ram[163] = "0b10111110100010100110000100110000";
        ram[164] = "0b10111110100111001110111001001100";
        ram[165] = "0b10111110110001011110101001000111";
        ram[166] = "0b10111110010111000001110101000111";
        ram[167] = "0b00111110000000100000100101111111";
        ram[168] = "0b10111110100111001011101101111110";
        ram[169] = "0b00111101010010101011101101100010";
        ram[170] = "0b10111100101011010101001010011011";
        ram[171] = "0b10111101100110000001000000010011";
        ram[172] = "0b10111110011011001110101000111111";
        ram[173] = "0b00111110000101100001111000100111";
        ram[174] = "0b00111011100000111111011111010010";
        ram[175] = "0b10111101101110110000110001011011";
        ram[176] = "0b10111101000110101101111100001001";
        ram[177] = "0b00111101111001101100101001000001";
        ram[178] = "0b10111110010010111001010001101010";
        ram[179] = "0b10111100101100100110100010000100";
        ram[180] = "0b10111100110101011001001100101010";
        ram[181] = "0b10111101000101000001100110001100";
        ram[182] = "0b10111110010010101110111101110101";
        ram[183] = "0b10111100111100000011000111110110";
        ram[184] = "0b00111110010101100101000011100101";
        ram[185] = "0b00111101010111000000011010010100";
        ram[186] = "0b10111110101011000111001011101100";
        ram[187] = "0b00111101110000000010010101101000";
        ram[188] = "0b10111101100111100110101111110001";
        ram[189] = "0b10111110010011010101100110100100";
        ram[190] = "0b00111101100100011111001111011010";
        ram[191] = "0b00111101010101001000000100100010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibgk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibgk_ram* meminst;


SC_CTOR(conv_2_conv_2_weibgk) {
meminst = new conv_2_conv_2_weibgk_ram("conv_2_conv_2_weibgk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibgk() {
    delete meminst;
}


};//endmodule
#endif
