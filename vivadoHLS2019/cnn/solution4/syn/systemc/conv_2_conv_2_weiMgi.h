// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiMgi_H__
#define __conv_2_conv_2_weiMgi_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiMgi_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiMgi_ram) {
        ram[0] = "0b10111100100000100111001100001101";
        ram[1] = "0b10111101111110010010010110000110";
        ram[2] = "0b00111100001100101010011111010101";
        ram[3] = "0b10111100001110100011000111110101";
        ram[4] = "0b00111100000110000000111100101111";
        ram[5] = "0b00111100100100010100001111010000";
        ram[6] = "0b10111101101101100100101100000000";
        ram[7] = "0b10111101101000010000100100011011";
        ram[8] = "0b10111101011001001100011000101000";
        ram[9] = "0b10111101111011101101111111011011";
        ram[10] = "0b10111101110110001100011011111100";
        ram[11] = "0b00111101100000111100100011001110";
        ram[12] = "0b10111101011111010011110111010011";
        ram[13] = "0b10111110011100110001000011100111";
        ram[14] = "0b10111110010001010111000000010101";
        ram[15] = "0b10111101100010100011100000111000";
        ram[16] = "0b10111110010101010111101010101111";
        ram[17] = "0b10111101001001010100110001000011";
        ram[18] = "0b10111110001100101010010001110111";
        ram[19] = "0b00111101110011000000000000011111";
        ram[20] = "0b10111110001100100111010110100110";
        ram[21] = "0b10111110101110100001100010100111";
        ram[22] = "0b10111110010000001001101000111000";
        ram[23] = "0b10111101110010011000100001010010";
        ram[24] = "0b00111100010110010101000011101011";
        ram[25] = "0b00111110001010100111000011001111";
        ram[26] = "0b00111100001010000011001011000100";
        ram[27] = "0b00111101101011110011010010111000";
        ram[28] = "0b10111110001110011100110000000000";
        ram[29] = "0b00111110001001110101111111001110";
        ram[30] = "0b10111100101111100011001001001101";
        ram[31] = "0b10111110001000111011100111110110";
        ram[32] = "0b10111101110110000001101001101100";
        ram[33] = "0b10111110011101101111001001100000";
        ram[34] = "0b10111101101001110111011010011110";
        ram[35] = "0b00111110010001111100101100100000";
        ram[36] = "0b10111101011001100010001001101001";
        ram[37] = "0b00111101011001111111101111100101";
        ram[38] = "0b00111101100101101110000110011111";
        ram[39] = "0b00111101110001101110000100100010";
        ram[40] = "0b00111100110101110011000111100010";
        ram[41] = "0b00111101100010000111010110011010";
        ram[42] = "0b10111110000111100010010111010010";
        ram[43] = "0b00111110000010010010101101101100";
        ram[44] = "0b00111101101001101000100010011111";
        ram[45] = "0b10111101101010101110110101101100";
        ram[46] = "0b10111101100010100010011001101010";
        ram[47] = "0b00111101110101100111001010010111";
        ram[48] = "0b00111101101011011010100111110000";
        ram[49] = "0b10111110011100001001111010001110";
        ram[50] = "0b10111101100100001111100111101011";
        ram[51] = "0b10111101001111100101000100001011";
        ram[52] = "0b10111110100001111010000011101100";
        ram[53] = "0b00111101110100011110000000100000";
        ram[54] = "0b10111100110110011001010011010100";
        ram[55] = "0b10111110000110111011111000100100";
        ram[56] = "0b10111110010101100001001101100110";
        ram[57] = "0b00111101100110110100100101111001";
        ram[58] = "0b10111101110010000001000010010011";
        ram[59] = "0b00111011110000011111110110011000";
        ram[60] = "0b10111100110100011001000101001110";
        ram[61] = "0b10111101001010110101010011000111";
        ram[62] = "0b00111101011101000000000101100100";
        ram[63] = "0b00111011111101111100001101011100";
        ram[64] = "0b10111101010111101001100001000100";
        ram[65] = "0b10111101111010100011011000000010";
        ram[66] = "0b10111101110000111011001011101010";
        ram[67] = "0b00111011011000101110100011110010";
        ram[68] = "0b10111101000000110001011011011110";
        ram[69] = "0b10111101100100100001000011000000";
        ram[70] = "0b10111101100011110111011000111110";
        ram[71] = "0b10111101101010010011100100110110";
        ram[72] = "0b00111101000100100011101000100010";
        ram[73] = "0b00111101111001100001001001100001";
        ram[74] = "0b00111101100011001001000010000010";
        ram[75] = "0b00111101000001010010000100000101";
        ram[76] = "0b10111110010001001110000001101010";
        ram[77] = "0b10111110101001100011100001011110";
        ram[78] = "0b10111101011100001011011110111110";
        ram[79] = "0b10111101000110110000110111010111";
        ram[80] = "0b00111101000101111000101111001010";
        ram[81] = "0b10111101110011001010010010111001";
        ram[82] = "0b10111100100001100111111011010100";
        ram[83] = "0b00111101100010010110001101110000";
        ram[84] = "0b10111110001010000110010001111101";
        ram[85] = "0b10111110011110001100011100100010";
        ram[86] = "0b10111100111001000100010000011100";
        ram[87] = "0b10111100110010000000100110110111";
        ram[88] = "0b10111101100110011101110101000001";
        ram[89] = "0b00111100110011000110010011010010";
        ram[90] = "0b00111101010001111001001000110110";
        ram[91] = "0b10111110100001101110010011011111";
        ram[92] = "0b10111110000001100101001101110110";
        ram[93] = "0b00111101100110100111110101110100";
        ram[94] = "0b10111110010010110011101101000011";
        ram[95] = "0b00111110000001101000011100011101";
        ram[96] = "0b10111110001101000000000111111010";
        ram[97] = "0b10111110001001000100110001111011";
        ram[98] = "0b10111100111001011101011110100111";
        ram[99] = "0b00111100111000001101100101110110";
        ram[100] = "0b10111100011110011111100111101011";
        ram[101] = "0b00111101111101010011001111001101";
        ram[102] = "0b10111110000100100111101000111101";
        ram[103] = "0b10111101100110010100001100011010";
        ram[104] = "0b00111100111001110010110000011111";
        ram[105] = "0b00111100100010010101011001010011";
        ram[106] = "0b00111100100001001111010100000001";
        ram[107] = "0b10111110000001111011100000000101";
        ram[108] = "0b00111101100000010010011110001100";
        ram[109] = "0b00111011111100110011100001111110";
        ram[110] = "0b10111101011000011100110010001000";
        ram[111] = "0b00111101000111111010000100111111";
        ram[112] = "0b00111110001101001010000001000110";
        ram[113] = "0b10111101010010011011101011111100";
        ram[114] = "0b10111110001111100111100000101111";
        ram[115] = "0b10111101001001011001110001100100";
        ram[116] = "0b10111101000010100110111001110111";
        ram[117] = "0b10111100011100010110010100111111";
        ram[118] = "0b00111101101010001010011000100100";
        ram[119] = "0b10111110011001001111010010111011";
        ram[120] = "0b10111101010011001000000011011101";
        ram[121] = "0b00111101110110111011101011000010";
        ram[122] = "0b00111101001111010001001101110110";
        ram[123] = "0b10111100001000111001000111011000";
        ram[124] = "0b10111110100001101010011101111110";
        ram[125] = "0b00111101101000011011110111100010";
        ram[126] = "0b10111101101010001100001001011000";
        ram[127] = "0b10111100101000111111100101001001";
        ram[128] = "0b10111101110111010001110100111010";
        ram[129] = "0b00111110010011101010111000001100";
        ram[130] = "0b00111110000000001010001000001101";
        ram[131] = "0b00111101110101000110000101100010";
        ram[132] = "0b10111101101110111011110111001001";
        ram[133] = "0b10111110001000011010010100000111";
        ram[134] = "0b10111110010011111011100111000010";
        ram[135] = "0b00111101010100110001110111110001";
        ram[136] = "0b10111101100000110110100011110101";
        ram[137] = "0b00111011111001100001100011111000";
        ram[138] = "0b10111101110101110001101011011100";
        ram[139] = "0b10111110100001011011010100010001";
        ram[140] = "0b10111101101100101011100011000010";
        ram[141] = "0b00111101011111111000111100111000";
        ram[142] = "0b10111101010110011111110001101011";
        ram[143] = "0b10111100011001011111101101100001";
        ram[144] = "0b00111101110100101111001101001011";
        ram[145] = "0b10111101000100101000010111000111";
        ram[146] = "0b00111101111101100101000100001001";
        ram[147] = "0b10111100101010010010000010101101";
        ram[148] = "0b10111110010100011101100111001000";
        ram[149] = "0b10111110001011111100110101000000";
        ram[150] = "0b10111101000000110100011011010100";
        ram[151] = "0b10111110010111000010111000000101";
        ram[152] = "0b00111010001001110101100111001001";
        ram[153] = "0b10111101101110011101101100001110";
        ram[154] = "0b10111011011111111111011001111110";
        ram[155] = "0b10111110001001000110010000100000";
        ram[156] = "0b10111101010111110110001011000110";
        ram[157] = "0b00111110001010001010010110010111";
        ram[158] = "0b10111110011011111001010010100011";
        ram[159] = "0b10111010101000010011000010011101";
        ram[160] = "0b10111110010010000000001010110000";
        ram[161] = "0b00111101111001111000110010100010";
        ram[162] = "0b10111110000011111100011011010000";
        ram[163] = "0b10111101001101010110111110110110";
        ram[164] = "0b00111101110001000110110001101101";
        ram[165] = "0b10111101110110100111100001110101";
        ram[166] = "0b00111101101011010100011110001010";
        ram[167] = "0b00111100101101000010010101011010";
        ram[168] = "0b10111110011001010101001000010001";
        ram[169] = "0b10111101100000010011011110001111";
        ram[170] = "0b10111101001001010100111111001111";
        ram[171] = "0b00111100101110011110010101001110";
        ram[172] = "0b10111011100001001110000011010011";
        ram[173] = "0b10111110100011100100101110100101";
        ram[174] = "0b10111100000001010110111010010000";
        ram[175] = "0b10111110000100001010101111011000";
        ram[176] = "0b00111101101111110110000011001011";
        ram[177] = "0b10111110001011010001010100000111";
        ram[178] = "0b10111110100000110111010010101111";
        ram[179] = "0b10111101111111101000110110100100";
        ram[180] = "0b00111101100001100011011100111010";
        ram[181] = "0b10111110101010101100000110100110";
        ram[182] = "0b00111101011110111101001000011110";
        ram[183] = "0b10111101000011010100001000110000";
        ram[184] = "0b00111110000001111110001100101101";
        ram[185] = "0b00111101100000101111100110100010";
        ram[186] = "0b00111101010100110011100000011011";
        ram[187] = "0b10111101000001010111010011011110";
        ram[188] = "0b10111101100011101100110000101111";
        ram[189] = "0b00111100001011101001110000000100";
        ram[190] = "0b10111110000000110100000101001110";
        ram[191] = "0b10111110000010111011001001010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiMgi) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiMgi_ram* meminst;


SC_CTOR(conv_2_conv_2_weiMgi) {
meminst = new conv_2_conv_2_weiMgi_ram("conv_2_conv_2_weiMgi_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiMgi() {
    delete meminst;
}


};//endmodule
#endif
