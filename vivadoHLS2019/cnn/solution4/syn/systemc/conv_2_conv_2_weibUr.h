// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibUr_H__
#define __conv_2_conv_2_weibUr_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibUr_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibUr_ram) {
        ram[0] = "0b10111110000100101100000111101010";
        ram[1] = "0b10111101100101101101111100101001";
        ram[2] = "0b10111100111111011010100011011010";
        ram[3] = "0b10111101110000001100100001100011";
        ram[4] = "0b00111101111010111000110001010100";
        ram[5] = "0b10111010100011101011101111111010";
        ram[6] = "0b10111101100000011101001111110001";
        ram[7] = "0b00111110000001110111111000000111";
        ram[8] = "0b10111101011101101111101000010010";
        ram[9] = "0b00111100000110101011100111011110";
        ram[10] = "0b00111101011000001011100000111000";
        ram[11] = "0b00111100110100101100001000101011";
        ram[12] = "0b00111101000100011010001111100101";
        ram[13] = "0b10111101000000011111011100001011";
        ram[14] = "0b10111101101101001010011001011100";
        ram[15] = "0b10111101101010110100111010010000";
        ram[16] = "0b10111010110000001000001011111110";
        ram[17] = "0b10111101111110000011010111111001";
        ram[18] = "0b10111101001011001010101000000100";
        ram[19] = "0b00111100001111010101011001001111";
        ram[20] = "0b10111101110100110010110010010101";
        ram[21] = "0b00111100100011011000010010100111";
        ram[22] = "0b10111100111001001110001100001101";
        ram[23] = "0b10111100011100001110011111100001";
        ram[24] = "0b10111101100000011011101001001110";
        ram[25] = "0b10111101101101110100101100100011";
        ram[26] = "0b10111101111010011111010000101101";
        ram[27] = "0b10111110101101011000101011010001";
        ram[28] = "0b10111110000100110010110101100100";
        ram[29] = "0b00111101110110100100001100101011";
        ram[30] = "0b00111101100100110100101100010010";
        ram[31] = "0b10111110010101011110001110100000";
        ram[32] = "0b00111101010011111111101010000000";
        ram[33] = "0b00111100011100111001001101110001";
        ram[34] = "0b00111100110110100101111100101001";
        ram[35] = "0b10111101111100001110011110000100";
        ram[36] = "0b10111110011111011100100000000101";
        ram[37] = "0b10111101100011010011101011000011";
        ram[38] = "0b10111101110101100111000110000011";
        ram[39] = "0b10111101001001101110100101110010";
        ram[40] = "0b10111100101101010000001110011101";
        ram[41] = "0b10111110000010011011000010111001";
        ram[42] = "0b00111100100101100111001111000000";
        ram[43] = "0b00111100100000111111110101010111";
        ram[44] = "0b10111100001110011111000110100010";
        ram[45] = "0b10111110000001011000001001101011";
        ram[46] = "0b10111110001111000101001100000001";
        ram[47] = "0b10111101010001000101110111000001";
        ram[48] = "0b10111101101001011110110010100110";
        ram[49] = "0b10111110011111010110111010100011";
        ram[50] = "0b10111101101011001001110110111011";
        ram[51] = "0b00111101011101001110011000110000";
        ram[52] = "0b10111110010100010101010010111111";
        ram[53] = "0b10111101000111100100011011001100";
        ram[54] = "0b10111110001110110011000100110100";
        ram[55] = "0b00111100101010010011110000010001";
        ram[56] = "0b10111101101101000010000111100010";
        ram[57] = "0b00111100011010101011110011010110";
        ram[58] = "0b10111101110111110101001110111000";
        ram[59] = "0b00111101010101001011110101000001";
        ram[60] = "0b10111101000110101000000100011011";
        ram[61] = "0b00111101000100100000000111010000";
        ram[62] = "0b00111101110011111101101100111000";
        ram[63] = "0b00111100100100111010110000001011";
        ram[64] = "0b10111101001101000001100100011000";
        ram[65] = "0b00111101100101100011000010011010";
        ram[66] = "0b10111101100000110101011101000111";
        ram[67] = "0b00111110000000101110000110000110";
        ram[68] = "0b00111101110000101011010001001111";
        ram[69] = "0b10111101000110111101111111011001";
        ram[70] = "0b00111101100001101111101000001010";
        ram[71] = "0b00111010000110100111111100010001";
        ram[72] = "0b10111101101101011110111101001100";
        ram[73] = "0b10111101001110001111001010011000";
        ram[74] = "0b10111110001010010001100001000010";
        ram[75] = "0b10111100011111111110010000010111";
        ram[76] = "0b00111101101100101110100000000001";
        ram[77] = "0b10111101000101010110111110000101";
        ram[78] = "0b00111101110111010010011011001001";
        ram[79] = "0b10111101001001011001101010100000";
        ram[80] = "0b10111100100010100001101111101100";
        ram[81] = "0b10111110000001101110010011000000";
        ram[82] = "0b10111110000110101001110110000100";
        ram[83] = "0b00111101001100100101010010000101";
        ram[84] = "0b10111110010101101001010010011101";
        ram[85] = "0b00111100101001010110111000100001";
        ram[86] = "0b10111101100000100011001111111100";
        ram[87] = "0b10111101111011001101100111101101";
        ram[88] = "0b10111100101000011111001111101001";
        ram[89] = "0b10111100111100000111010011100011";
        ram[90] = "0b00111100000011101000000101101110";
        ram[91] = "0b00111101100110111101111001101110";
        ram[92] = "0b00111110001000110011011010111011";
        ram[93] = "0b10111110000000101011000010011111";
        ram[94] = "0b00111110000000011110000000001100";
        ram[95] = "0b00111101100100101100110100011000";
        ram[96] = "0b00111100010001111101110000010101";
        ram[97] = "0b00111100110100101001010110010001";
        ram[98] = "0b10111101100000110011000101010111";
        ram[99] = "0b10111110000100111111101110010010";
        ram[100] = "0b10111100111101001101011101111101";
        ram[101] = "0b10111101110011011100001111111101";
        ram[102] = "0b00111110000100010100100100001100";
        ram[103] = "0b10111101001111000111010000010011";
        ram[104] = "0b10111101111111011011100111000001";
        ram[105] = "0b00111101010110111100110100110111";
        ram[106] = "0b00111101100111111011001110101110";
        ram[107] = "0b10111101000001100111101101110000";
        ram[108] = "0b00111110001011001000011110000110";
        ram[109] = "0b00111100111010100010100100110101";
        ram[110] = "0b00111101010100010000010010001100";
        ram[111] = "0b00111101000000111011100111000010";
        ram[112] = "0b10111101010011000001000100100111";
        ram[113] = "0b00111101100010111110011110100010";
        ram[114] = "0b10111101000101110000100010111110";
        ram[115] = "0b10111100100011000111000011111111";
        ram[116] = "0b00111100111111001110001100000000";
        ram[117] = "0b00111011011111111010010101011110";
        ram[118] = "0b00111100111111011110101010100000";
        ram[119] = "0b10111101101110100111101011000110";
        ram[120] = "0b10111100101010100111010001010001";
        ram[121] = "0b00111011100000000000100101110110";
        ram[122] = "0b00111101011100000001100010001001";
        ram[123] = "0b10111101100010011000011100111010";
        ram[124] = "0b10111110000001110100100011010000";
        ram[125] = "0b10111110000101000111010110101011";
        ram[126] = "0b00111100011100000111010110001101";
        ram[127] = "0b10111101100100001101100111101010";
        ram[128] = "0b10111101100110100010111000000111";
        ram[129] = "0b10111101111101010100001100001000";
        ram[130] = "0b10111101010010110001100100100010";
        ram[131] = "0b10111101000011100001011101111100";
        ram[132] = "0b00111110000100100011101010010011";
        ram[133] = "0b10111110100100000111000111011101";
        ram[134] = "0b00111110001011000101101101110000";
        ram[135] = "0b10111011000001101110101000001000";
        ram[136] = "0b10111100110011101011001011100110";
        ram[137] = "0b10111110000111001010011000001000";
        ram[138] = "0b10111110011010110110100111110010";
        ram[139] = "0b10111110000111010100010011001000";
        ram[140] = "0b00111110001000001000100100011000";
        ram[141] = "0b00111110000100110011011001101001";
        ram[142] = "0b00111100101100001110101000011111";
        ram[143] = "0b10111101000001101110011100010011";
        ram[144] = "0b00111100100111101100111111101100";
        ram[145] = "0b10111101101111111101101011011001";
        ram[146] = "0b10111100110010110001011011010101";
        ram[147] = "0b00111101101000101001110001101100";
        ram[148] = "0b00111100101011110110111110001010";
        ram[149] = "0b00111100010010101001100010011010";
        ram[150] = "0b00111101011010001011111010001110";
        ram[151] = "0b00111101100011101011111001001110";
        ram[152] = "0b00111110000010101111100110001001";
        ram[153] = "0b00111101001101101001101101101100";
        ram[154] = "0b10111110010001100001000101000101";
        ram[155] = "0b10111101010011000111100101111000";
        ram[156] = "0b10111100100000011010000110010010";
        ram[157] = "0b10111110001010111110011000101000";
        ram[158] = "0b10111101100001001111011100110101";
        ram[159] = "0b00111101101010110101001101100001";
        ram[160] = "0b10111101010111101011010011010011";
        ram[161] = "0b00111100111111101010000000110100";
        ram[162] = "0b10111110010110101010010110010011";
        ram[163] = "0b10111110011000110000010000011110";
        ram[164] = "0b00111110001000010111101110000100";
        ram[165] = "0b00111101100011111000111010010100";
        ram[166] = "0b00111101111111111101110001011111";
        ram[167] = "0b00111011110000101101000111000110";
        ram[168] = "0b00111101101001110101110000000110";
        ram[169] = "0b00111110001101111000010001001011";
        ram[170] = "0b00111101101111000010100011010010";
        ram[171] = "0b00111101011000101001111101101100";
        ram[172] = "0b10111101011100001010010011110101";
        ram[173] = "0b10111101101001000001100101000001";
        ram[174] = "0b00111110010010111101100000110010";
        ram[175] = "0b00111101010100100110111111001111";
        ram[176] = "0b10111101100101000100000111001101";
        ram[177] = "0b00111100101111011101011100110100";
        ram[178] = "0b00111101110110100011111111111000";
        ram[179] = "0b10111101111010110010011001101001";
        ram[180] = "0b00111101101000001111000010001000";
        ram[181] = "0b10111011100001110001010101101000";
        ram[182] = "0b00111101001110010110010011101101";
        ram[183] = "0b00111101110101010100000111011000";
        ram[184] = "0b10111110001000001010110111110101";
        ram[185] = "0b00111101101010011011100111001110";
        ram[186] = "0b00111100000001000110001101111010";
        ram[187] = "0b10111100111011001010111001010100";
        ram[188] = "0b00111101101000000011011110100101";
        ram[189] = "0b00111101110011011011100001011111";
        ram[190] = "0b10111110001001000000011111110100";
        ram[191] = "0b10111101000111110111001111111000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibUr) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibUr_ram* meminst;


SC_CTOR(conv_2_conv_2_weibUr) {
meminst = new conv_2_conv_2_weibUr_ram("conv_2_conv_2_weibUr_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibUr() {
    delete meminst;
}


};//endmodule
#endif
