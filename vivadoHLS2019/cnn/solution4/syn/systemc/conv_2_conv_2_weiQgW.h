// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiQgW_H__
#define __conv_2_conv_2_weiQgW_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiQgW_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiQgW_ram) {
        ram[0] = "0b00111101100110111100101111111010";
        ram[1] = "0b00111101000001110011111111100100";
        ram[2] = "0b10111101101110001111110100101000";
        ram[3] = "0b00111110000010111001101011000000";
        ram[4] = "0b00111101110110110100100110101010";
        ram[5] = "0b10111110000001111101111101010101";
        ram[6] = "0b00111101111110001001100100010100";
        ram[7] = "0b10111110100010000000001000101100";
        ram[8] = "0b00111110011001000101011001101010";
        ram[9] = "0b10111101011111111001010001010000";
        ram[10] = "0b10111101110110001110110001010111";
        ram[11] = "0b10111110100010001100111011111001";
        ram[12] = "0b10111100001100110100010001100000";
        ram[13] = "0b00111110001001101010100100001101";
        ram[14] = "0b00111110000010010100100101000001";
        ram[15] = "0b00111110100010001000010111100001";
        ram[16] = "0b10111110001000001100100100110011";
        ram[17] = "0b10111011101011111000110111100010";
        ram[18] = "0b10111101101010011011011110110011";
        ram[19] = "0b10111110001011001010100101111111";
        ram[20] = "0b10111110100001011100000010111100";
        ram[21] = "0b00111101101101101111001001011110";
        ram[22] = "0b10111101101001000101100000110101";
        ram[23] = "0b10111110100101010111001100100010";
        ram[24] = "0b00111101111110010010000101000101";
        ram[25] = "0b00111101101010001111000111101101";
        ram[26] = "0b00111101011101100101000000010001";
        ram[27] = "0b00111110000100011110011100100111";
        ram[28] = "0b00111101111010000101010100011000";
        ram[29] = "0b10111101100101110000111011111111";
        ram[30] = "0b10111101101101001101011110010110";
        ram[31] = "0b00111100011010001000011111111000";
        ram[32] = "0b00111101101100110111110110011010";
        ram[33] = "0b10111110110001110011101001000110";
        ram[34] = "0b10111101001010100100110101001111";
        ram[35] = "0b00111101100000000101000110000110";
        ram[36] = "0b10111101101001010011011011111000";
        ram[37] = "0b10111100001010001010101010110001";
        ram[38] = "0b10111101001001010001001011101000";
        ram[39] = "0b00111110000000011101101011011000";
        ram[40] = "0b00111011101100011010110000110001";
        ram[41] = "0b10111101110011000010000111100001";
        ram[42] = "0b10111101000011010111111001100111";
        ram[43] = "0b00111101000111000100011101001010";
        ram[44] = "0b00111101100010011001101110100011";
        ram[45] = "0b10111101011010111000010001101101";
        ram[46] = "0b10111100100111111000101100110100";
        ram[47] = "0b00111100011010000001111110011111";
        ram[48] = "0b10111110010101011010111101011001";
        ram[49] = "0b10111110101000110100100010110100";
        ram[50] = "0b00111101110010000001110001110001";
        ram[51] = "0b10111110101100000100010000010101";
        ram[52] = "0b10111110100010111010010000100011";
        ram[53] = "0b00111110000101101101001110000000";
        ram[54] = "0b00111110000011001011010110101111";
        ram[55] = "0b10111110101001011101111111011101";
        ram[56] = "0b10111011110100101100011001100000";
        ram[57] = "0b10111100000111110100010001101110";
        ram[58] = "0b10111011000000100001011011001000";
        ram[59] = "0b00111100100001110001100110110001";
        ram[60] = "0b00111110001100011100100010010000";
        ram[61] = "0b00111110100100010100111010001101";
        ram[62] = "0b00111100101111100111001010010011";
        ram[63] = "0b00111101101101111011110011101000";
        ram[64] = "0b00111110000011010101010111110101";
        ram[65] = "0b00111110001101010101001111000101";
        ram[66] = "0b00111110010011100101010110111111";
        ram[67] = "0b10111101110110001011001001000011";
        ram[68] = "0b10111101011100001011010000101011";
        ram[69] = "0b10111110101001100011111111111010";
        ram[70] = "0b00111100100011010001000101001010";
        ram[71] = "0b10111110011101010110101000111111";
        ram[72] = "0b00111110100001001000000100101111";
        ram[73] = "0b10111110101000111010110011011001";
        ram[74] = "0b00111101100010010101000101111100";
        ram[75] = "0b10111110100101110110101001011000";
        ram[76] = "0b00111101001110100000001011100011";
        ram[77] = "0b00111100011101010101101111001000";
        ram[78] = "0b00111110101001111010110110011101";
        ram[79] = "0b00111110110001110100010010010010";
        ram[80] = "0b10111101011110001011111001111010";
        ram[81] = "0b10111110100100010011011111011101";
        ram[82] = "0b00111101111011010110000010000111";
        ram[83] = "0b10111101110110101101010101110000";
        ram[84] = "0b10111110110111011001111001010001";
        ram[85] = "0b00111101100000000101111010101110";
        ram[86] = "0b10111101101010001010011111001011";
        ram[87] = "0b10111110001111111110010110011010";
        ram[88] = "0b00111101111110010011110000101010";
        ram[89] = "0b00111101111001111011000100010100";
        ram[90] = "0b10111110000010011100011100011101";
        ram[91] = "0b00111110001001100111111011100101";
        ram[92] = "0b00111101110100000011011110101001";
        ram[93] = "0b00111101011111100000110011000100";
        ram[94] = "0b10111110000000100101010111110100";
        ram[95] = "0b10111110011000011010011011111011";
        ram[96] = "0b10111110001101001101100010000001";
        ram[97] = "0b10111110010001000100101110111100";
        ram[98] = "0b10111110100111100100101010101010";
        ram[99] = "0b10111101010010101010010101110010";
        ram[100] = "0b10111100110000101011101110110010";
        ram[101] = "0b00111110010110010011011111010001";
        ram[102] = "0b00111101011010110101110100111111";
        ram[103] = "0b10111101111001000011100111100111";
        ram[104] = "0b10111100111001000000111111000100";
        ram[105] = "0b10111110010010011111001010001001";
        ram[106] = "0b00111101000011001100101111101100";
        ram[107] = "0b10111110011110000111110110110100";
        ram[108] = "0b10111101010001111011001000101111";
        ram[109] = "0b10111110100001111010110101001011";
        ram[110] = "0b10111101011100011011110111100000";
        ram[111] = "0b00111110001110111100011110011011";
        ram[112] = "0b10111101001111001111111000011101";
        ram[113] = "0b10111101001100000101000111111001";
        ram[114] = "0b00111110100110100101011010101100";
        ram[115] = "0b00111101110110110101011110010100";
        ram[116] = "0b10111101011010000111001000101001";
        ram[117] = "0b00111110010110000001111111000000";
        ram[118] = "0b00111110000101111011011001010111";
        ram[119] = "0b10111110001001001111010001010001";
        ram[120] = "0b00111101010000101010010011001110";
        ram[121] = "0b10111110010011000110101100101100";
        ram[122] = "0b00111110011101101001110010100011";
        ram[123] = "0b10111101110011000110100010011101";
        ram[124] = "0b00111110001001111101010111001100";
        ram[125] = "0b00111101110001100110010100100101";
        ram[126] = "0b10111110000110111111100111000100";
        ram[127] = "0b10111110100000000011111111111110";
        ram[128] = "0b00111100110101010110110011001110";
        ram[129] = "0b00111101101000100100011010011101";
        ram[130] = "0b00111110000111011100110101011110";
        ram[131] = "0b10111110000111010011101010011100";
        ram[132] = "0b10111101100010110000101111010100";
        ram[133] = "0b10111110101011010101100000001111";
        ram[134] = "0b10111110010111111001001001100111";
        ram[135] = "0b10111011010001101000000111101101";
        ram[136] = "0b10111110000010101010111010111110";
        ram[137] = "0b10111110010000110010010101011011";
        ram[138] = "0b10111101110001110111111111101111";
        ram[139] = "0b10111110000010111011011100111001";
        ram[140] = "0b10111101111111100001010110001011";
        ram[141] = "0b10111100000101110000101100011110";
        ram[142] = "0b10111101001101101010101001001100";
        ram[143] = "0b10111101011000001111100111011101";
        ram[144] = "0b10111110101010011111011111110111";
        ram[145] = "0b00111101000000000100001110010010";
        ram[146] = "0b10111110000000000010101101100010";
        ram[147] = "0b00111110000001110001111000111001";
        ram[148] = "0b10111101010001001111111101111111";
        ram[149] = "0b00111110010101110000101110000100";
        ram[150] = "0b10111101011001111000010110111000";
        ram[151] = "0b10111110000101010111000011010111";
        ram[152] = "0b10111101011111100000000111010001";
        ram[153] = "0b00111010110111111000110011110000";
        ram[154] = "0b10111110011010111101011000111110";
        ram[155] = "0b00111110100100100001001000111101";
        ram[156] = "0b00111110011001111011110001001111";
        ram[157] = "0b00111110000100010000100100110010";
        ram[158] = "0b00111110010110110101011001110010";
        ram[159] = "0b00111100100100010100011110110010";
        ram[160] = "0b10111110101000010101010010000101";
        ram[161] = "0b00111101100001100101101111100000";
        ram[162] = "0b10111110100100001100001110011010";
        ram[163] = "0b10111110101011010100011100100101";
        ram[164] = "0b00111110110010010011001101001000";
        ram[165] = "0b00111101010000101010011001001001";
        ram[166] = "0b10111101110111011100100011111100";
        ram[167] = "0b10111110001010111010000011101100";
        ram[168] = "0b00111110001101000010001111100111";
        ram[169] = "0b10111110101000101110110110010011";
        ram[170] = "0b10111110011010011010111011001000";
        ram[171] = "0b10111110111100000011000100110101";
        ram[172] = "0b00111101100100001101100011111111";
        ram[173] = "0b10111110100110011001111100010011";
        ram[174] = "0b10111110001111101111000011001001";
        ram[175] = "0b00111101010000111110110110111110";
        ram[176] = "0b00111101010110011010000111110000";
        ram[177] = "0b00111101100001011011001100001100";
        ram[178] = "0b00111101011110111000111101001000";
        ram[179] = "0b10111101100001111000000001101010";
        ram[180] = "0b00111110010101000101011000001001";
        ram[181] = "0b00111110110000110011110010101111";
        ram[182] = "0b00111110100101110010011000001011";
        ram[183] = "0b00111110100000010011011110100100";
        ram[184] = "0b10111110011001110111111110100111";
        ram[185] = "0b10111011001011111101001101110100";
        ram[186] = "0b00111110011101010010010011000001";
        ram[187] = "0b00111101110111010011001000111001";
        ram[188] = "0b00111110101001101101101010101010";
        ram[189] = "0b00111101000110000001110001000101";
        ram[190] = "0b00111101110101000010101000010111";
        ram[191] = "0b10111110011110101000011110100000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiQgW) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiQgW_ram* meminst;


SC_CTOR(conv_2_conv_2_weiQgW) {
meminst = new conv_2_conv_2_weiQgW_ram("conv_2_conv_2_weiQgW_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiQgW() {
    delete meminst;
}


};//endmodule
#endif
