// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiOgC_H__
#define __conv_2_conv_2_weiOgC_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiOgC_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiOgC_ram) {
        ram[0] = "0b00111100100010101000101111010100";
        ram[1] = "0b00111101011000011111101011101010";
        ram[2] = "0b00111101101100010101010011011001";
        ram[3] = "0b00111101110000010000000111001010";
        ram[4] = "0b00111101001110111111001100000110";
        ram[5] = "0b00111110000100000100101111111010";
        ram[6] = "0b00111001100001010111010110101010";
        ram[7] = "0b10111100111101110000100010100001";
        ram[8] = "0b00111101000000001010100001110001";
        ram[9] = "0b00111110001101010000011001111111";
        ram[10] = "0b10111101101111110011110011111011";
        ram[11] = "0b00111100100101000100000001101111";
        ram[12] = "0b10111101101111101111011001110011";
        ram[13] = "0b10111110000000110000111101101101";
        ram[14] = "0b10111101111001001001010001101011";
        ram[15] = "0b00111100100100000100110110011000";
        ram[16] = "0b00111110001101100111010100001111";
        ram[17] = "0b10111101111011110001010001110010";
        ram[18] = "0b10111101110110010001000001000111";
        ram[19] = "0b00111101111101000111101100011000";
        ram[20] = "0b10111010100001000000000001111010";
        ram[21] = "0b10111110001010011110110111111011";
        ram[22] = "0b10111110000101010101110110111010";
        ram[23] = "0b00111110001011010110110101100000";
        ram[24] = "0b10111100001001111001011110110001";
        ram[25] = "0b00111101000000111011010011011100";
        ram[26] = "0b10111101111101011100011010010110";
        ram[27] = "0b00111101101000000101111110011011";
        ram[28] = "0b00111100110000011001110111110100";
        ram[29] = "0b00111010011110101110001011100110";
        ram[30] = "0b10111100111001101110100010011001";
        ram[31] = "0b10111101011111011001011000100101";
        ram[32] = "0b10111110000010100011110011011110";
        ram[33] = "0b10111110000011101010100011100001";
        ram[34] = "0b00111101110101010111001111001011";
        ram[35] = "0b00111101110100010011110101111010";
        ram[36] = "0b00111101110001110101011101111000";
        ram[37] = "0b00111100100101100111110100100100";
        ram[38] = "0b10111101111111101011110101010111";
        ram[39] = "0b10111101001000110111100100001001";
        ram[40] = "0b00111101011111101101011110100000";
        ram[41] = "0b00111100111010011000000111010100";
        ram[42] = "0b10111100110011111001100000110010";
        ram[43] = "0b10111110000101110001000000010001";
        ram[44] = "0b10111101011101000000111100111111";
        ram[45] = "0b00111101000101101110010110000100";
        ram[46] = "0b00111101101000011110001101011101";
        ram[47] = "0b10111101101000100111000001101111";
        ram[48] = "0b00111110001000110110000101100101";
        ram[49] = "0b10111101100110010101100111001011";
        ram[50] = "0b10111110000010101111010010101111";
        ram[51] = "0b10111101011100011001010010001001";
        ram[52] = "0b10111110100011100011111011010001";
        ram[53] = "0b00111100011110101011110001001101";
        ram[54] = "0b00111100100010110110001011111100";
        ram[55] = "0b10111110000000011100101001100010";
        ram[56] = "0b10111101011101001101000101111001";
        ram[57] = "0b00111101111111011000011111100001";
        ram[58] = "0b10111101100100110111111111001101";
        ram[59] = "0b10111101011000110110100011011101";
        ram[60] = "0b10111101111110001000011001111011";
        ram[61] = "0b10111101100101011101001010000000";
        ram[62] = "0b00111100011010001010100011010100";
        ram[63] = "0b10111101100000111100001111000111";
        ram[64] = "0b00111101011011001011010101001000";
        ram[65] = "0b10111101001100111011111111110101";
        ram[66] = "0b00111101000110101101100010011011";
        ram[67] = "0b00111101010001101110000111110000";
        ram[68] = "0b00111101000100001101011100010111";
        ram[69] = "0b00111011101000010001111100011011";
        ram[70] = "0b10111100011100001000100101110111";
        ram[71] = "0b10111101010100000100100000001111";
        ram[72] = "0b00111101001010101111000011000001";
        ram[73] = "0b00111100110000100000010001000111";
        ram[74] = "0b00111011011101001111011110101000";
        ram[75] = "0b10111110000111110111101100011110";
        ram[76] = "0b00111100101101001000110110011110";
        ram[77] = "0b00111100000111010100100011000101";
        ram[78] = "0b10111101000110011000011001111101";
        ram[79] = "0b10111101010011000110001101111001";
        ram[80] = "0b10111100111100011001101011010001";
        ram[81] = "0b00111101011110001110110000000011";
        ram[82] = "0b00111101010111101100101000011000";
        ram[83] = "0b00111100001100110111001001010100";
        ram[84] = "0b10111101101001100001101100101010";
        ram[85] = "0b10111110011111111000110001111110";
        ram[86] = "0b00111110000000001110011011011010";
        ram[87] = "0b10111101111100010001010001100101";
        ram[88] = "0b10111101101010000000000111000100";
        ram[89] = "0b10111101100111110111111111000100";
        ram[90] = "0b00111101000011000000100101000001";
        ram[91] = "0b10111110100010010101011101000010";
        ram[92] = "0b00111101000001110010110100110011";
        ram[93] = "0b00111101001111000111010000100000";
        ram[94] = "0b10111110010001001111110010111111";
        ram[95] = "0b00111100101001111101110110010001";
        ram[96] = "0b10111110001110100011100100000011";
        ram[97] = "0b00111110001110101100111111100110";
        ram[98] = "0b00111101100011011011101110100000";
        ram[99] = "0b10111100110111100101011010110110";
        ram[100] = "0b00111101010111110110111001111100";
        ram[101] = "0b00111101110100000000100000001101";
        ram[102] = "0b10111110001011100011010101010001";
        ram[103] = "0b00111101101100110010100110000110";
        ram[104] = "0b10111101110011101111101111111101";
        ram[105] = "0b00111100000111000011011100101000";
        ram[106] = "0b00111101101010111011010100100011";
        ram[107] = "0b10111101001001001100110111111000";
        ram[108] = "0b10111110001000011111100011111100";
        ram[109] = "0b10111101110001101110100111111100";
        ram[110] = "0b10111110011100011011010011010001";
        ram[111] = "0b10111110011100001100110101100011";
        ram[112] = "0b10111101100001100010000010100010";
        ram[113] = "0b10111110000011100011000110000100";
        ram[114] = "0b10111110001111011101100011100110";
        ram[115] = "0b00111100100000010011100011101001";
        ram[116] = "0b00111100100011011101100100101001";
        ram[117] = "0b10111110010101000111101111100100";
        ram[118] = "0b00111101010111010101101001001011";
        ram[119] = "0b00111101010100111000111100011010";
        ram[120] = "0b10111101011011011001011011010101";
        ram[121] = "0b00111100101100100111001011110011";
        ram[122] = "0b10111101010001110101010011111011";
        ram[123] = "0b00111101110100010010100110101101";
        ram[124] = "0b10111110010100011010100100000111";
        ram[125] = "0b00111101010010000010100111000110";
        ram[126] = "0b00111101010110110111111010000101";
        ram[127] = "0b00111101110000100001111110011000";
        ram[128] = "0b10111101100000010010000000111110";
        ram[129] = "0b10111101000001001000100011011100";
        ram[130] = "0b00111101001001001100000110111011";
        ram[131] = "0b10111100001110100100010111101011";
        ram[132] = "0b10111101101100000001111100111111";
        ram[133] = "0b10111110001111010111101100110110";
        ram[134] = "0b10111110011001010100101111010101";
        ram[135] = "0b00111100101110100101011000110001";
        ram[136] = "0b00111110001011110101001011101110";
        ram[137] = "0b00111101001111011011111001110011";
        ram[138] = "0b00111011111101111011101011101000";
        ram[139] = "0b10111110001000001111011000101001";
        ram[140] = "0b10111101000001100111001101100010";
        ram[141] = "0b10111100111001011001110100001101";
        ram[142] = "0b00111101101110001000101010010110";
        ram[143] = "0b00111101110111000011101101001010";
        ram[144] = "0b10111011111100110111011011011001";
        ram[145] = "0b10111101010011000001100001110010";
        ram[146] = "0b00111101000110000000100001110010";
        ram[147] = "0b00111011100111100100100111110000";
        ram[148] = "0b00111101001111101111100101100111";
        ram[149] = "0b10111101100101001110100100101100";
        ram[150] = "0b00111110000000111101001000001111";
        ram[151] = "0b10111110101010100001001101111100";
        ram[152] = "0b10111101100111000001110100011100";
        ram[153] = "0b10111101111010001010010001100011";
        ram[154] = "0b00111101110010111110101100001101";
        ram[155] = "0b10111101111001010110110001111011";
        ram[156] = "0b00111101000100110101100100101011";
        ram[157] = "0b00111101011100101000010101001110";
        ram[158] = "0b10111101100111010110011011100001";
        ram[159] = "0b10111101100001111101110100101011";
        ram[160] = "0b10111110010100111010111010000001";
        ram[161] = "0b00111101011010001100011100100001";
        ram[162] = "0b00111101011000001100111000011000";
        ram[163] = "0b10111011000100010001011001110010";
        ram[164] = "0b10111101111000001011010001000101";
        ram[165] = "0b10111110010111110110011110010000";
        ram[166] = "0b00111101111000100101101111010010";
        ram[167] = "0b00111110010001011001001011011110";
        ram[168] = "0b10111100110001010000000001001101";
        ram[169] = "0b10111110001100011000110000011001";
        ram[170] = "0b00111010101001101101100100001001";
        ram[171] = "0b00111100001001000010001101100000";
        ram[172] = "0b00111101011110110111011010100010";
        ram[173] = "0b00111100100011110111110111011110";
        ram[174] = "0b00111110010000100001010011011111";
        ram[175] = "0b10111101111010111110001101100010";
        ram[176] = "0b10111101101000110111101110110111";
        ram[177] = "0b00111101100110010000001001000101";
        ram[178] = "0b10111110011101000111011101011111";
        ram[179] = "0b10111110001011010000000010001101";
        ram[180] = "0b00111100000111011101100100101010";
        ram[181] = "0b10111101110111010001001110100000";
        ram[182] = "0b10111110001001010011100110011001";
        ram[183] = "0b00111101101110111111111010000101";
        ram[184] = "0b00111101000101001100111001101111";
        ram[185] = "0b10111101110110110111011111100111";
        ram[186] = "0b10111101111000101001111010001101";
        ram[187] = "0b10111110100101011110001101010000";
        ram[188] = "0b10111110000001011001110111101111";
        ram[189] = "0b00111101110010001001000011010011";
        ram[190] = "0b00111110001101000001100100010101";
        ram[191] = "0b00111110001100010110101111000100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiOgC) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiOgC_ram* meminst;


SC_CTOR(conv_2_conv_2_weiOgC) {
meminst = new conv_2_conv_2_weiOgC_ram("conv_2_conv_2_weiOgC_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiOgC() {
    delete meminst;
}


};//endmodule
#endif
