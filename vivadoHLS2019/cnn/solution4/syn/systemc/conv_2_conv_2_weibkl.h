// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibkl_H__
#define __conv_2_conv_2_weibkl_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibkl_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibkl_ram) {
        ram[0] = "0b00111101001010111001001111000001";
        ram[1] = "0b00111101000011110111011010110001";
        ram[2] = "0b00111011011000100111101111100011";
        ram[3] = "0b10111110001010101110110111111100";
        ram[4] = "0b00111101101100001100101110010011";
        ram[5] = "0b10111101101010110001110100001110";
        ram[6] = "0b00111110000000000011100101111000";
        ram[7] = "0b00111100001000101011010000101000";
        ram[8] = "0b10111101100111111100110101100101";
        ram[9] = "0b10111011110101001011000000110111";
        ram[10] = "0b00111101001100101010001001010110";
        ram[11] = "0b00111101110000100111110000110010";
        ram[12] = "0b00111101111000100001110111101010";
        ram[13] = "0b10111100111110000111101110000011";
        ram[14] = "0b00111101100101000000100101111100";
        ram[15] = "0b10111100000101000100110101100001";
        ram[16] = "0b00111101001101110101100000111111";
        ram[17] = "0b10111101101010100100110001110001";
        ram[18] = "0b10111101000010001101001000101100";
        ram[19] = "0b10111100100110001011000101001000";
        ram[20] = "0b10111001011101001110101101110000";
        ram[21] = "0b10111101111010000010111110011011";
        ram[22] = "0b10111110000001000001001000010101";
        ram[23] = "0b10111100100101010001110101011000";
        ram[24] = "0b00111010111000001000111111111110";
        ram[25] = "0b00111101100110111111101110110100";
        ram[26] = "0b00111101001010111000001101111101";
        ram[27] = "0b10111110011110100011110100100101";
        ram[28] = "0b10111011010010001011110110001011";
        ram[29] = "0b00111101110001110001011001110110";
        ram[30] = "0b00111011100000101100011101110000";
        ram[31] = "0b10111101001101101011001001011100";
        ram[32] = "0b00111100111010011000011011111110";
        ram[33] = "0b00111101000101010100100101101001";
        ram[34] = "0b00111101000101000010011010110111";
        ram[35] = "0b10111110000101110100010100111101";
        ram[36] = "0b10111101100101001111111001101100";
        ram[37] = "0b10111101101110000111101011001101";
        ram[38] = "0b00111100110011100111100100010111";
        ram[39] = "0b00111101101010000000001000111001";
        ram[40] = "0b00111011001100100101111101110111";
        ram[41] = "0b00111101111001110011110101010101";
        ram[42] = "0b00111101111101001001000000011110";
        ram[43] = "0b10111101111101000000110101010101";
        ram[44] = "0b00111101110001001100000010101100";
        ram[45] = "0b10111100100101011101110010001111";
        ram[46] = "0b00111100101011001100100001101000";
        ram[47] = "0b00111100110000011110101010011010";
        ram[48] = "0b00111110000011011100111101010000";
        ram[49] = "0b10111100111100011000001000011100";
        ram[50] = "0b00111101101110110000110101011101";
        ram[51] = "0b00111101111011011000010110000110";
        ram[52] = "0b10111110000000111110101001111010";
        ram[53] = "0b10111101111011100000001111101010";
        ram[54] = "0b10111101110001110111010101101100";
        ram[55] = "0b10111110000101110001111010111101";
        ram[56] = "0b10111101100110010011010101011110";
        ram[57] = "0b00111100101111111000001011001100";
        ram[58] = "0b10111101100001000010111101000100";
        ram[59] = "0b00111110000111111000111000101001";
        ram[60] = "0b10111101100101001010110111111000";
        ram[61] = "0b10111101111101000000000111111110";
        ram[62] = "0b10111100101001101101011110000100";
        ram[63] = "0b10111101101011011101000101011111";
        ram[64] = "0b00111100100011001010010001111110";
        ram[65] = "0b00111011010110010001101111010010";
        ram[66] = "0b00110111101010001001110010111110";
        ram[67] = "0b00111101110100010010010101110101";
        ram[68] = "0b00111100101110010101101010111101";
        ram[69] = "0b00111101100100101100000001101011";
        ram[70] = "0b00111100110001100111001010001100";
        ram[71] = "0b00111100001000001000010010100011";
        ram[72] = "0b00111101110000100101110001010010";
        ram[73] = "0b00111101111110001000111100100010";
        ram[74] = "0b10111100011011011000110100101001";
        ram[75] = "0b10111101110101011110111100011100";
        ram[76] = "0b00111011110011111000110011111101";
        ram[77] = "0b10111100101001000001100100111111";
        ram[78] = "0b00111011111011100110011011101001";
        ram[79] = "0b00111101000011100111110011011011";
        ram[80] = "0b00111100000100111010011101000101";
        ram[81] = "0b00111101011010101011001100110100";
        ram[82] = "0b10111101010010101010010110110001";
        ram[83] = "0b00111101100111100001011110111010";
        ram[84] = "0b10111110001111111100101100010000";
        ram[85] = "0b10111101000001001000101101011001";
        ram[86] = "0b00111101101001110011011000011100";
        ram[87] = "0b10111110001111001101010100001011";
        ram[88] = "0b10111101010001001000010011000000";
        ram[89] = "0b00111101100101110110111000000010";
        ram[90] = "0b00111110000000000111000001011001";
        ram[91] = "0b10111101101101010000001101110010";
        ram[92] = "0b10111101100000010001101001011100";
        ram[93] = "0b10111100000111110011100100010110";
        ram[94] = "0b10111110000110000110110101110110";
        ram[95] = "0b00111100111111000101110100111010";
        ram[96] = "0b00111101000011111101111010011101";
        ram[97] = "0b00111101100000100100111011100101";
        ram[98] = "0b00111101101001101101100101001110";
        ram[99] = "0b10111110000100101100000111011111";
        ram[100] = "0b00111110000111110110011111110001";
        ram[101] = "0b10111110010111111000011000111010";
        ram[102] = "0b10111110000000101101110100101001";
        ram[103] = "0b00111101000001011000111111111101";
        ram[104] = "0b00111101101001111110100000010001";
        ram[105] = "0b00111110001001111111011011001011";
        ram[106] = "0b00111100010010101100101100101110";
        ram[107] = "0b00111101110011000011011011010001";
        ram[108] = "0b10111101010011101000100000101110";
        ram[109] = "0b10111101000100101011011011100001";
        ram[110] = "0b00111100110101000010011110101110";
        ram[111] = "0b10111110001000000100011111010001";
        ram[112] = "0b00111101101011101100111101010010";
        ram[113] = "0b00111011100010111110110101010000";
        ram[114] = "0b00111101100110001111011111010000";
        ram[115] = "0b10111011100010100010100110101010";
        ram[116] = "0b00111011001101011111111110111001";
        ram[117] = "0b10111110010000100000000010011111";
        ram[118] = "0b10111101110111011111110111100011";
        ram[119] = "0b10111100111100100101101000101000";
        ram[120] = "0b10111101110000101100000000110100";
        ram[121] = "0b10111100110000111001110111110011";
        ram[122] = "0b10111101100000001110101010101011";
        ram[123] = "0b00111101001001001111001100011101";
        ram[124] = "0b10111101110010010011110011100011";
        ram[125] = "0b10111101110111100000111010100000";
        ram[126] = "0b00111101100100000011000001110011";
        ram[127] = "0b00111101001011001000100100010111";
        ram[128] = "0b10111110010001010110011000010001";
        ram[129] = "0b10111110000101010110111000111110";
        ram[130] = "0b10111110000000100101011101100110";
        ram[131] = "0b10111101011011100100100001000110";
        ram[132] = "0b00111100010111000000111110110100";
        ram[133] = "0b10111101111000011010111110001110";
        ram[134] = "0b10111100110000001000011010110100";
        ram[135] = "0b10111100100111110111100111100001";
        ram[136] = "0b00111110100000001101010000110101";
        ram[137] = "0b10111110100011001010001111111001";
        ram[138] = "0b10111110100110100110110001101110";
        ram[139] = "0b10111110100100101010111000011100";
        ram[140] = "0b00111101110010000001000111011000";
        ram[141] = "0b10111010111001101000101001100000";
        ram[142] = "0b00111110001011010011101101011101";
        ram[143] = "0b00111110010110010100110010110011";
        ram[144] = "0b10111100011100010110010010100000";
        ram[145] = "0b10111101010101000100100101001100";
        ram[146] = "0b10111101000111111110010011101010";
        ram[147] = "0b00111101110001001010010011100100";
        ram[148] = "0b10111101100001110110001001001110";
        ram[149] = "0b00111101100011111100110011110110";
        ram[150] = "0b00111101100001100000101111100001";
        ram[151] = "0b10111110011001110101100000101010";
        ram[152] = "0b00111101101101110001011011000011";
        ram[153] = "0b00111101101010110000100001110000";
        ram[154] = "0b00111100101010100110010101111100";
        ram[155] = "0b10111101010110010111101001011100";
        ram[156] = "0b00111101100101111001100011111001";
        ram[157] = "0b10111101010011001011010101001000";
        ram[158] = "0b10111101111001111101110110010100";
        ram[159] = "0b00111101010000000010011010010000";
        ram[160] = "0b10111110001100001000001000001000";
        ram[161] = "0b00111101100001101001111011011011";
        ram[162] = "0b10111110100010000100000001001101";
        ram[163] = "0b10111101010010111110010011001001";
        ram[164] = "0b00111101011001011011000000110101";
        ram[165] = "0b10111101101100110001010100101110";
        ram[166] = "0b10111110000000011001111100010011";
        ram[167] = "0b00111101111010101000010110010101";
        ram[168] = "0b00111100000001110011101010110000";
        ram[169] = "0b00111101010110010010000000100111";
        ram[170] = "0b10111011100001001000100011001101";
        ram[171] = "0b00111101100001100111010001000100";
        ram[172] = "0b10111100010001101110100001100000";
        ram[173] = "0b10111101101111001111000010110101";
        ram[174] = "0b10111101101011101001000011111011";
        ram[175] = "0b10111110010011000001110001110110";
        ram[176] = "0b10111101111010011110100101010001";
        ram[177] = "0b10111100100101100111010100100000";
        ram[178] = "0b00111110000101010111110000101011";
        ram[179] = "0b10111110000110100011001111011100";
        ram[180] = "0b00111101001110010111101101101111";
        ram[181] = "0b10111101010001101100111000110001";
        ram[182] = "0b10111101101000001000110100011011";
        ram[183] = "0b00111100110100000011001111001101";
        ram[184] = "0b10111100101011000111010001111111";
        ram[185] = "0b00111110000010101000000010100011";
        ram[186] = "0b10111110000111010000101111010000";
        ram[187] = "0b10111110001010011000100100010011";
        ram[188] = "0b00111101110101010010011001101100";
        ram[189] = "0b00111110010010011100001000000011";
        ram[190] = "0b00111100000110101100101101000110";
        ram[191] = "0b00111101000100010010011100100011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibkl) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibkl_ram* meminst;


SC_CTOR(conv_2_conv_2_weibkl) {
meminst = new conv_2_conv_2_weibkl_ram("conv_2_conv_2_weibkl_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibkl() {
    delete meminst;
}


};//endmodule
#endif
