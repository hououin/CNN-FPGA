// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibbk_H__
#define __conv_2_conv_2_weibbk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibbk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibbk_ram) {
        ram[0] = "0b00111101110010111010110100001001";
        ram[1] = "0b00111110000101110111000110100101";
        ram[2] = "0b00111101100011001001001010111010";
        ram[3] = "0b10111101111001001111100101101010";
        ram[4] = "0b10111110001110100000111001010100";
        ram[5] = "0b00111101010010000110010000010011";
        ram[6] = "0b00111110001100001011101101111001";
        ram[7] = "0b00111101101110011111010010110000";
        ram[8] = "0b00111110001111101111101101000000";
        ram[9] = "0b00111101011010011111100100100101";
        ram[10] = "0b10111100000101011101111110100000";
        ram[11] = "0b00111110000000100010110011111110";
        ram[12] = "0b00111110001111000001101011101100";
        ram[13] = "0b10111110101110101110110111100001";
        ram[14] = "0b10111101110001011000010001110001";
        ram[15] = "0b10111110011010100010000011010110";
        ram[16] = "0b00111101111100000000010101010110";
        ram[17] = "0b10111101100001001000011011100110";
        ram[18] = "0b10111101111001111011111111101010";
        ram[19] = "0b10111101000000010101000010001001";
        ram[20] = "0b00111110010100100011111000100101";
        ram[21] = "0b10111110011111111011001000110000";
        ram[22] = "0b10111110110100110111101100011100";
        ram[23] = "0b10111110100011101100000100011110";
        ram[24] = "0b00111110000011010100001111101011";
        ram[25] = "0b10111100100001001110011011011110";
        ram[26] = "0b10111101101011011010001000101100";
        ram[27] = "0b10111101110001010001111100101001";
        ram[28] = "0b10111101111010011101010111001001";
        ram[29] = "0b00111110010001000100110101000001";
        ram[30] = "0b10111101101110010101010111001001";
        ram[31] = "0b00111100111011011101100100011001";
        ram[32] = "0b00111101100100001101001100000010";
        ram[33] = "0b00111101001111010000110011000110";
        ram[34] = "0b00111010100011110000001110100101";
        ram[35] = "0b00111101101001010101101110000111";
        ram[36] = "0b00111100111101111101101100100110";
        ram[37] = "0b00111100111001111111101101101100";
        ram[38] = "0b00111110001100100001100110001110";
        ram[39] = "0b00111110001000011110111000111011";
        ram[40] = "0b00111101100011000101010010111011";
        ram[41] = "0b10111101001011010001000101011001";
        ram[42] = "0b10111101101101111100101001001000";
        ram[43] = "0b10111110100100100001000010010101";
        ram[44] = "0b10111101110001010111101111110011";
        ram[45] = "0b10111110000011111000001111000011";
        ram[46] = "0b00111101100000000101110010000100";
        ram[47] = "0b10111110011000111110110010001101";
        ram[48] = "0b00111110100110001010100110110000";
        ram[49] = "0b10111100000111111011010010100101";
        ram[50] = "0b00111110010011111101001010110111";
        ram[51] = "0b00111110001101110111101100000000";
        ram[52] = "0b10111101011101110110000111001101";
        ram[53] = "0b10111110111111110110100010101110";
        ram[54] = "0b10111011011110010010001110010011";
        ram[55] = "0b10111101100110100000110000001011";
        ram[56] = "0b10111101111110111100001001101111";
        ram[57] = "0b00111101000000001010001010110010";
        ram[58] = "0b00111101001000001100011101001000";
        ram[59] = "0b00111101111001101011001000001001";
        ram[60] = "0b10111101000001000110001110111101";
        ram[61] = "0b10111110101011000100011010111010";
        ram[62] = "0b00111101101101111100000111110100";
        ram[63] = "0b10111001011111101100110010111100";
        ram[64] = "0b00111101001111001101001010111111";
        ram[65] = "0b00111101111001011110011110010110";
        ram[66] = "0b00111110001011110011110110101101";
        ram[67] = "0b00111110000010000011011100100001";
        ram[68] = "0b10111110100100011111101011100000";
        ram[69] = "0b00111101000011011111001101011100";
        ram[70] = "0b10111101110010100100111010001111";
        ram[71] = "0b10111011011110000010101110000010";
        ram[72] = "0b00111110011011101100100001010101";
        ram[73] = "0b00111100110011010011010001111100";
        ram[74] = "0b00111101000111000110101110100100";
        ram[75] = "0b10111101101000001001110100111000";
        ram[76] = "0b00111101011010101101101011010011";
        ram[77] = "0b10111110010110011110100000111001";
        ram[78] = "0b00111110010000111100111100000100";
        ram[79] = "0b00111110001101000110101111101110";
        ram[80] = "0b10111110000001101011011000000010";
        ram[81] = "0b00111101100000011110111000101010";
        ram[82] = "0b10111110010011110100110001101100";
        ram[83] = "0b10111101010110110011000000100111";
        ram[84] = "0b10111110101001110010110101000110";
        ram[85] = "0b10111101111100000110111111111111";
        ram[86] = "0b10111110011111100111111011010000";
        ram[87] = "0b10111101101000001111001000001010";
        ram[88] = "0b00111101110010000001001010010100";
        ram[89] = "0b00111110100001101111011101100111";
        ram[90] = "0b00111101101110000001101001100010";
        ram[91] = "0b10111110011010001011010111000000";
        ram[92] = "0b00111101111011110010110100001101";
        ram[93] = "0b00111101111100111110111011000010";
        ram[94] = "0b10111101111000101000001011101101";
        ram[95] = "0b00111100111100111001001101100110";
        ram[96] = "0b00111110000011011110101101001101";
        ram[97] = "0b00111101011101110000111111010010";
        ram[98] = "0b10111100010001000010001010111010";
        ram[99] = "0b10111101001111011011001001000011";
        ram[100] = "0b00111110001010101010111000000110";
        ram[101] = "0b10111101011000010110010111001100";
        ram[102] = "0b00111101100000000100000001001001";
        ram[103] = "0b00111100101001100101011100011110";
        ram[104] = "0b10111100110011001111010101110001";
        ram[105] = "0b00111101101111110011101000010100";
        ram[106] = "0b10111110000000110001010010010011";
        ram[107] = "0b00111101111110010101010101100000";
        ram[108] = "0b10111110001110001111110000100100";
        ram[109] = "0b00111101010101110101111100010010";
        ram[110] = "0b00111101100110000011101100001000";
        ram[111] = "0b10111101111011100100011010001000";
        ram[112] = "0b00111100010010001010101010100000";
        ram[113] = "0b10111100110000111001100000110000";
        ram[114] = "0b00111101110111001100001000000100";
        ram[115] = "0b00111101110111111100111111111011";
        ram[116] = "0b10111101000001101110100110010001";
        ram[117] = "0b10111110100110010011111110011010";
        ram[118] = "0b00111101101010100000001000011111";
        ram[119] = "0b00111101101101000010000011000010";
        ram[120] = "0b10111110010001111000010100101111";
        ram[121] = "0b10111101110110010001101011110000";
        ram[122] = "0b10111110011000010110011111011011";
        ram[123] = "0b10111110110010010000100011100000";
        ram[124] = "0b00111101010001010010011010110011";
        ram[125] = "0b00111100110111101010001100000000";
        ram[126] = "0b10111100101101000010000001101011";
        ram[127] = "0b00111101110111111101010010011001";
        ram[128] = "0b10111110010010100011000110011100";
        ram[129] = "0b10111101111011000111110101011001";
        ram[130] = "0b00111110000001101011101101000001";
        ram[131] = "0b10111101101110001001001111101011";
        ram[132] = "0b10111110010100010000010101110001";
        ram[133] = "0b10111101101100110101110100100101";
        ram[134] = "0b10111010101100011111000100101000";
        ram[135] = "0b10111001101100010001110010000101";
        ram[136] = "0b00111110001011011011101101001100";
        ram[137] = "0b10111100011010100110111000001110";
        ram[138] = "0b10111110010111101110111011000000";
        ram[139] = "0b10111110100101110000101001000100";
        ram[140] = "0b00111101101001111010000110011100";
        ram[141] = "0b00111100100001000001000010011010";
        ram[142] = "0b00111110011000110111100011010000";
        ram[143] = "0b00111110000011111011100101111101";
        ram[144] = "0b10111101110101101100011110000100";
        ram[145] = "0b10111110001010000110110001001011";
        ram[146] = "0b00111101011100000111011000101001";
        ram[147] = "0b10111101010001010000111010011000";
        ram[148] = "0b10111101111000000001000110010110";
        ram[149] = "0b10111101101101100100100110010011";
        ram[150] = "0b10111101100010010000100000100000";
        ram[151] = "0b00111110100001101001101111001101";
        ram[152] = "0b00111110010111100000001111100000";
        ram[153] = "0b00111110001101001110111110101100";
        ram[154] = "0b10111110100000100110000101101010";
        ram[155] = "0b10111011111111010101010101110000";
        ram[156] = "0b00111110011111100000100000000110";
        ram[157] = "0b10111101100101011010011011101100";
        ram[158] = "0b00111101101010100000110110110100";
        ram[159] = "0b10111100111110011100101110111101";
        ram[160] = "0b10111110100110010110101000001011";
        ram[161] = "0b10111100100100010001010111010001";
        ram[162] = "0b10111110000001000000110000000001";
        ram[163] = "0b10111101000101011010011100101000";
        ram[164] = "0b00111101100011000110110110100000";
        ram[165] = "0b10111110101010111010100110111101";
        ram[166] = "0b00111101101001010011111001011100";
        ram[167] = "0b00111100010110110111001101101000";
        ram[168] = "0b10111110010011101100100010000101";
        ram[169] = "0b00111100111100010100000010110111";
        ram[170] = "0b10111110100011111000111101100010";
        ram[171] = "0b00111101000001100000110001101101";
        ram[172] = "0b10111101100111111010100001111100";
        ram[173] = "0b10111110000110001011000000100111";
        ram[174] = "0b00111011010001001101101111010110";
        ram[175] = "0b00111101001011110001100010010010";
        ram[176] = "0b10111101100101111011110111111110";
        ram[177] = "0b10111100110000010110010100000101";
        ram[178] = "0b00111101110111100100000001000011";
        ram[179] = "0b10111101100000001001000001000110";
        ram[180] = "0b10111100111101010010100000001000";
        ram[181] = "0b10111101100110110001010010001100";
        ram[182] = "0b00111101011111000001011011101100";
        ram[183] = "0b00111110100000101101110000100011";
        ram[184] = "0b00111011111100000111000101000111";
        ram[185] = "0b10111101100111110001000111001100";
        ram[186] = "0b10111110100001101110100111011011";
        ram[187] = "0b10111110010010101000010001010100";
        ram[188] = "0b00111110010001011011101100010100";
        ram[189] = "0b00111110100010111010101001000000";
        ram[190] = "0b10111110101001011011101001101101";
        ram[191] = "0b10111110100000100111010001101010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibbk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibbk_ram* meminst;


SC_CTOR(conv_2_conv_2_weibbk) {
meminst = new conv_2_conv_2_weibbk_ram("conv_2_conv_2_weibbk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibbk() {
    delete meminst;
}


};//endmodule
#endif
