// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiFfa_H__
#define __conv_2_conv_2_weiFfa_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiFfa_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiFfa_ram) {
        ram[0] = "0b10111101010111111111111101010111";
        ram[1] = "0b10111100100001100101110110101110";
        ram[2] = "0b00111110100010110101001111001000";
        ram[3] = "0b10111100110011111010111100001110";
        ram[4] = "0b10111110000100110100100011101001";
        ram[5] = "0b00111110000011011111111110110000";
        ram[6] = "0b10111101001111001100100001111000";
        ram[7] = "0b10111101100110111110101100111000";
        ram[8] = "0b00111101110010100110010011110100";
        ram[9] = "0b00111110010100001111001110000110";
        ram[10] = "0b10111010100111111110001101111010";
        ram[11] = "0b00111110100000000100001000010010";
        ram[12] = "0b00111101011001100011100001101000";
        ram[13] = "0b10111110100100101111100101111111";
        ram[14] = "0b10111101010101011010110100101100";
        ram[15] = "0b10111110100111000010101101000110";
        ram[16] = "0b00111110010000101010010000001100";
        ram[17] = "0b10111100111000100101111101101110";
        ram[18] = "0b00111101100101000110000101101011";
        ram[19] = "0b00111101100010110001111010101011";
        ram[20] = "0b00111101100011110111010011000100";
        ram[21] = "0b00111101101011000100100100100000";
        ram[22] = "0b00111100100101100000011111011010";
        ram[23] = "0b00111101011010110110001110010110";
        ram[24] = "0b00111100111001001101100111111110";
        ram[25] = "0b00111110000010100010100111011001";
        ram[26] = "0b10111110000010011111011001011100";
        ram[27] = "0b00111110000111111101010111111110";
        ram[28] = "0b00111101100111011001000001111001";
        ram[29] = "0b00111101101101110010100110000110";
        ram[30] = "0b10111110010000011110010011100101";
        ram[31] = "0b10111101000110111101010100111100";
        ram[32] = "0b10111101010011001001010110110010";
        ram[33] = "0b10111110000011100000001011100111";
        ram[34] = "0b00111110000010011100010101100011";
        ram[35] = "0b00111101001010000111101001100000";
        ram[36] = "0b00111110100100001101001000111111";
        ram[37] = "0b00111101111111101000001111110000";
        ram[38] = "0b10111101100101010100111010011000";
        ram[39] = "0b00111101100100000101110100010001";
        ram[40] = "0b00111101111010100011001010000010";
        ram[41] = "0b10111101101000001100000111011000";
        ram[42] = "0b10111101101110000100011001110010";
        ram[43] = "0b10111110101111010110100110001010";
        ram[44] = "0b10111110000010100100011000110010";
        ram[45] = "0b00111101010111011000010111111010";
        ram[46] = "0b00111101010110101011011011011011";
        ram[47] = "0b10111110011000111100011110011011";
        ram[48] = "0b00111101100110001111010110001111";
        ram[49] = "0b10111110010111100101100100001000";
        ram[50] = "0b10111101000100100001111010111101";
        ram[51] = "0b00111011110101111000101110111010";
        ram[52] = "0b10111110100010110011101110111010";
        ram[53] = "0b00111110001101010111101100011110";
        ram[54] = "0b00111101111101011000011101101001";
        ram[55] = "0b10111110100001010010001111100001";
        ram[56] = "0b10111100101010100110110100110000";
        ram[57] = "0b00111110001100000000110111111110";
        ram[58] = "0b00111110000100011011110010000101";
        ram[59] = "0b10111101110011110001000110110000";
        ram[60] = "0b10111110011111011010101010100011";
        ram[61] = "0b10111101001011110111100111111101";
        ram[62] = "0b10111011100010111010110100101001";
        ram[63] = "0b10111101101101010110100000110111";
        ram[64] = "0b00111100000000101111111000000101";
        ram[65] = "0b10111110100000001010101000111000";
        ram[66] = "0b00111110000110011101110111101001";
        ram[67] = "0b00111110001100100111000010001000";
        ram[68] = "0b10111110100110011110101100010001";
        ram[69] = "0b00111110000011001100101001100001";
        ram[70] = "0b10111101000111110010000000010110";
        ram[71] = "0b10111100101100000001000101010010";
        ram[72] = "0b10111100110100111011111100101001";
        ram[73] = "0b10111101100010111111000011010001";
        ram[74] = "0b00111100111010001011010000011001";
        ram[75] = "0b10111110010000010111011100010010";
        ram[76] = "0b00111110001100010001011011110100";
        ram[77] = "0b10111101111110001011000001010001";
        ram[78] = "0b10111110000001100100010011001010";
        ram[79] = "0b10111100101010110001000111010011";
        ram[80] = "0b10111101100010010100110001000000";
        ram[81] = "0b00111101110100110000011101100001";
        ram[82] = "0b10111110001111010110000101111110";
        ram[83] = "0b10111101001101101001000000010100";
        ram[84] = "0b10111110011000000010011011001001";
        ram[85] = "0b00111110010000001010000111111001";
        ram[86] = "0b00111101000111010011010101101111";
        ram[87] = "0b10111110110001101010110001111110";
        ram[88] = "0b10111101111111100010111001010111";
        ram[89] = "0b10111100000010110110000101010010";
        ram[90] = "0b00111101110010100000001000100111";
        ram[91] = "0b10111110101011100110001111100101";
        ram[92] = "0b10111110000110101100010110111101";
        ram[93] = "0b10111100110000111001101101101011";
        ram[94] = "0b10111110011101111010011010101001";
        ram[95] = "0b10111110011010110011101101100111";
        ram[96] = "0b10111110001110010011101101010000";
        ram[97] = "0b00111101100100001110100000110110";
        ram[98] = "0b00111101101101010010011010011001";
        ram[99] = "0b10111101001111011101111100011100";
        ram[100] = "0b00111101100001001001110000111011";
        ram[101] = "0b00111110001000001101000000100001";
        ram[102] = "0b00111100010110010010100010100110";
        ram[103] = "0b00111110001110001101101001010010";
        ram[104] = "0b10111100100100110110000000101010";
        ram[105] = "0b00111101101011110010010011111100";
        ram[106] = "0b10111110000110110000110101100111";
        ram[107] = "0b00111110000010100011000000001100";
        ram[108] = "0b10111100101110100110101001100010";
        ram[109] = "0b00111010100010100110011110100100";
        ram[110] = "0b00111100100111001111110101011000";
        ram[111] = "0b00111100110011101010011110000011";
        ram[112] = "0b10111100111111011011100010110011";
        ram[113] = "0b10111110011110011101011011100111";
        ram[114] = "0b10111110100011010011010011000111";
        ram[115] = "0b00111101001010100110001001000100";
        ram[116] = "0b10111110010110101000110110001100";
        ram[117] = "0b10111110001001100000010011011000";
        ram[118] = "0b00111110000100000001111000011011";
        ram[119] = "0b10111101100000010111110011100101";
        ram[120] = "0b10111110011010111110001100111110";
        ram[121] = "0b10111110101100111010001100011011";
        ram[122] = "0b00111101011010010001011110000111";
        ram[123] = "0b10111011110101110101001111101101";
        ram[124] = "0b10111110101010011011100000111010";
        ram[125] = "0b00111110001011101010001010111101";
        ram[126] = "0b00111101110111100010000111001010";
        ram[127] = "0b00111110010100101000110011011111";
        ram[128] = "0b00111101110111011100111000011010";
        ram[129] = "0b10111101111100001011101011010101";
        ram[130] = "0b00111101001101110010001100000010";
        ram[131] = "0b10111100100010110011000111010000";
        ram[132] = "0b10111101100011100100000010011101";
        ram[133] = "0b00111101101010010111111100010101";
        ram[134] = "0b10111110000011001100001000010110";
        ram[135] = "0b00111101101001011010111111010011";
        ram[136] = "0b00111110010011001110000010000001";
        ram[137] = "0b00111110010011000010110101001000";
        ram[138] = "0b00111101000001100110111000111011";
        ram[139] = "0b10111101110001101111101010000111";
        ram[140] = "0b00111101111100010110100011111101";
        ram[141] = "0b10111110100101001011101010111111";
        ram[142] = "0b00111110101011100011101101010111";
        ram[143] = "0b00111110101100101000111110110111";
        ram[144] = "0b10111100100111111010001000101000";
        ram[145] = "0b00111101110101111010100011001010";
        ram[146] = "0b10111110000101000100110110101010";
        ram[147] = "0b10111110001010100010010010000000";
        ram[148] = "0b00111100011111001001111001110101";
        ram[149] = "0b00111101000011010111100111000100";
        ram[150] = "0b10111110101001110111111010010001";
        ram[151] = "0b10111101101101100101010000111000";
        ram[152] = "0b10111110010101111011001011110111";
        ram[153] = "0b00111101110101111000100111000110";
        ram[154] = "0b10111101101100011011010001110100";
        ram[155] = "0b10111110010001110110001001000110";
        ram[156] = "0b00111110000000000001001011111100";
        ram[157] = "0b00111011101110111011010000010101";
        ram[158] = "0b10111110010000100111001010110011";
        ram[159] = "0b10111101111111111100001000000001";
        ram[160] = "0b00111010010010101111011110010110";
        ram[161] = "0b00111110010000110001111101110100";
        ram[162] = "0b00111110101100001010110100011000";
        ram[163] = "0b10111100010001011011011110000101";
        ram[164] = "0b00111100101101011000011001010010";
        ram[165] = "0b10111101110110111010011100010011";
        ram[166] = "0b00111110000101110010001111100100";
        ram[167] = "0b00111101111100110000111011100000";
        ram[168] = "0b10111101000011010001010010101000";
        ram[169] = "0b10111110110000111101100000010011";
        ram[170] = "0b10111110101101111000101101000011";
        ram[171] = "0b10111101110011000101001100001110";
        ram[172] = "0b00111110000100010001001111111110";
        ram[173] = "0b10111010111010110100011010001000";
        ram[174] = "0b00111110101100011111100111011001";
        ram[175] = "0b00111110010111100111010110001010";
        ram[176] = "0b10111110011010000000001111010010";
        ram[177] = "0b10111101000001000010101111010011";
        ram[178] = "0b00111101010110110100000100010110";
        ram[179] = "0b10111110100011010000101010011101";
        ram[180] = "0b00111101100010011001101011101010";
        ram[181] = "0b10111110101100111000111100101010";
        ram[182] = "0b00111101111100000111100010111001";
        ram[183] = "0b00111110001011111000101010101110";
        ram[184] = "0b10111011001110010011111010010100";
        ram[185] = "0b10111110010001100101010100100011";
        ram[186] = "0b00111101011111101100000110000100";
        ram[187] = "0b10111110100011001100111111001101";
        ram[188] = "0b10111110101010110110100101110010";
        ram[189] = "0b10111101000100010000000101010000";
        ram[190] = "0b00111100111010011111010101010110";
        ram[191] = "0b00111101000110000010001101101001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiFfa) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiFfa_ram* meminst;


SC_CTOR(conv_2_conv_2_weiFfa) {
meminst = new conv_2_conv_2_weiFfa_ram("conv_2_conv_2_weiFfa_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiFfa() {
    delete meminst;
}


};//endmodule
#endif
