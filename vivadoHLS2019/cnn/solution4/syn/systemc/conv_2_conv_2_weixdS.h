// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weixdS_H__
#define __conv_2_conv_2_weixdS_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weixdS_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weixdS_ram) {
        ram[0] = "0b00111101000010001001001110010100";
        ram[1] = "0b10111110000100100001110001111010";
        ram[2] = "0b00111100011010000010100011110100";
        ram[3] = "0b00111101111011001010100100010010";
        ram[4] = "0b10111101000010010111100110101111";
        ram[5] = "0b10111101110111001110001010111001";
        ram[6] = "0b10111101111100000000111110001101";
        ram[7] = "0b10111101101010000100000111110101";
        ram[8] = "0b00111101110101111001110100111011";
        ram[9] = "0b10111101111100110110110000111100";
        ram[10] = "0b10111101010111001001100000001100";
        ram[11] = "0b10111110000100000001100011110001";
        ram[12] = "0b10111110001111011101010001011111";
        ram[13] = "0b10111101001101101011101100010100";
        ram[14] = "0b00111100110100100100000010111100";
        ram[15] = "0b10111101100011111001000111011010";
        ram[16] = "0b10111110100010011101111100001001";
        ram[17] = "0b00111011000010011000101000110101";
        ram[18] = "0b00111101111011001101011010010011";
        ram[19] = "0b00111110000011000111100000110010";
        ram[20] = "0b10111101100100111101110011110010";
        ram[21] = "0b10111101100001100111001111001011";
        ram[22] = "0b10111101100011010001010111010101";
        ram[23] = "0b10111100111111011010101010001001";
        ram[24] = "0b10111110010111001100001010101010";
        ram[25] = "0b10111110001110110000101101110101";
        ram[26] = "0b10111101101011010101001010111100";
        ram[27] = "0b00111100110100010011111110111111";
        ram[28] = "0b10111100001100011001110111100111";
        ram[29] = "0b10111101101100111001010101000100";
        ram[30] = "0b10111101100001010101001101110110";
        ram[31] = "0b00111110000001000011100000001111";
        ram[32] = "0b10111101101011000001001101011101";
        ram[33] = "0b10111101111101111010001001000001";
        ram[34] = "0b10111101110001001011010111101011";
        ram[35] = "0b00111110100000001101111100100110";
        ram[36] = "0b10111110011000011100011101101010";
        ram[37] = "0b10111100011001101101100110111000";
        ram[38] = "0b00111100110101101010111110100010";
        ram[39] = "0b10111100011110001100001111111110";
        ram[40] = "0b10111100101001011000111100001011";
        ram[41] = "0b10111101110001101110110010001111";
        ram[42] = "0b10111100000011100111101101111111";
        ram[43] = "0b00111101010101111011011100111100";
        ram[44] = "0b00111011001001011000010010110111";
        ram[45] = "0b10111110000100101011001000101010";
        ram[46] = "0b10111100100010100100011111000000";
        ram[47] = "0b10111101100110100001010010111110";
        ram[48] = "0b10111011110110010101000100101101";
        ram[49] = "0b10111110100101000010111011100110";
        ram[50] = "0b10111110011011000100110011111101";
        ram[51] = "0b10111110000100000101011111101111";
        ram[52] = "0b10111110001100100000111101011010";
        ram[53] = "0b00111110000100110111110110000111";
        ram[54] = "0b10111100010011110011100101000101";
        ram[55] = "0b10111101100010110101011011011001";
        ram[56] = "0b00111101010000010000111001110001";
        ram[57] = "0b10111110000011001100010000011101";
        ram[58] = "0b00111101100111111000000010110000";
        ram[59] = "0b00111101000001111001111110010010";
        ram[60] = "0b00111101111011111101000111011110";
        ram[61] = "0b00111101100111001001000101001110";
        ram[62] = "0b10111101101111010101110111000000";
        ram[63] = "0b00111011101111101101110101010010";
        ram[64] = "0b10111110011010001110111001000101";
        ram[65] = "0b10111101001000011101010011010101";
        ram[66] = "0b10111101101101001101000100101000";
        ram[67] = "0b10111101111111011000000110110000";
        ram[68] = "0b10111101101001010100110010100001";
        ram[69] = "0b10111101000001011011011011110010";
        ram[70] = "0b10111110100101101011011111100100";
        ram[71] = "0b10111101101111011010001010100000";
        ram[72] = "0b10111101110010101111010111111000";
        ram[73] = "0b00111101100110010110001011100101";
        ram[74] = "0b10111101010000111111000101010110";
        ram[75] = "0b10111101001001000010011001101001";
        ram[76] = "0b10111110010100010000011101011001";
        ram[77] = "0b10111110011110111111111010101011";
        ram[78] = "0b10111101010010101111011111010111";
        ram[79] = "0b10111101011000011100101010001110";
        ram[80] = "0b10111110100000001011110010111100";
        ram[81] = "0b10111110000111100101101101000100";
        ram[82] = "0b10111110100111001001001001010001";
        ram[83] = "0b10111101001000100101010000001011";
        ram[84] = "0b10111110001000110010101011001010";
        ram[85] = "0b10111101110010101011011010011000";
        ram[86] = "0b10111110111110011101000000110001";
        ram[87] = "0b00111101100111011100101111010010";
        ram[88] = "0b10111110110000110111110110101001";
        ram[89] = "0b10111101001100101000110101000011";
        ram[90] = "0b10111101011100010000111010001000";
        ram[91] = "0b00111101010010101101111100100011";
        ram[92] = "0b10111101100001101110001110111100";
        ram[93] = "0b00111101000111110010111111011111";
        ram[94] = "0b10111101110101100110111110101111";
        ram[95] = "0b00111110001010010111111001011001";
        ram[96] = "0b10111101100000011000001110000000";
        ram[97] = "0b10111110101010101011000001010011";
        ram[98] = "0b10111100101011111110101100100011";
        ram[99] = "0b00111101000100110010100100001001";
        ram[100] = "0b10111110011100101001111110101110";
        ram[101] = "0b00111100110001101010011101110101";
        ram[102] = "0b00111100000110000100110100101001";
        ram[103] = "0b10111101001000001011001100001101";
        ram[104] = "0b00111100110010010100000101100110";
        ram[105] = "0b10111110000100110111001110111000";
        ram[106] = "0b10111110101100011100000100001010";
        ram[107] = "0b10111110000011110001011101110111";
        ram[108] = "0b10111100100111011010101110010101";
        ram[109] = "0b10111101100111111111001011110101";
        ram[110] = "0b00111101001100011011100111111010";
        ram[111] = "0b00111101001100001101011110110101";
        ram[112] = "0b00111101110010111101011001100110";
        ram[113] = "0b10111101010101000000000001101111";
        ram[114] = "0b10111110110011000100010101010011";
        ram[115] = "0b00111101000110101101100001101010";
        ram[116] = "0b10111110000010010000010000111001";
        ram[117] = "0b00111110011010101011000100101001";
        ram[118] = "0b00111101000110100111100001110111";
        ram[119] = "0b10111101110111000100111000110101";
        ram[120] = "0b10111101011101111000000111100111";
        ram[121] = "0b10111101001011010001011000010011";
        ram[122] = "0b00111101101000111101010010010101";
        ram[123] = "0b10111101100010101001000010101001";
        ram[124] = "0b10111110010010111101101000111000";
        ram[125] = "0b10111110001100010100000100111001";
        ram[126] = "0b10111110001010001101011011000111";
        ram[127] = "0b10111101110000101011111100011100";
        ram[128] = "0b00111100100000000001000101110001";
        ram[129] = "0b10111100100010000101001100011010";
        ram[130] = "0b00111101100000111101010000001011";
        ram[131] = "0b00111101100111001100101101111011";
        ram[132] = "0b10111110101100001011100110110011";
        ram[133] = "0b10111101000011110110101010011011";
        ram[134] = "0b10111101100001101001010101010110";
        ram[135] = "0b10111110011101100110110010000000";
        ram[136] = "0b10111101101010100010100010110011";
        ram[137] = "0b10111100100010010100010101101101";
        ram[138] = "0b10111011101000010111101001011010";
        ram[139] = "0b10111101110010011101110100000001";
        ram[140] = "0b10111101110000000111111101101101";
        ram[141] = "0b10111110000111011010111101011101";
        ram[142] = "0b10111101111101010110011111010000";
        ram[143] = "0b10111101111001111011110010111000";
        ram[144] = "0b00111101000111001100100001110001";
        ram[145] = "0b10111100110001101111011010100101";
        ram[146] = "0b10111101110001001101100001110101";
        ram[147] = "0b10111101010110011101101010100111";
        ram[148] = "0b10111110001100001100011001110100";
        ram[149] = "0b00111110001010110100010000100100";
        ram[150] = "0b10111101011100111101100110011011";
        ram[151] = "0b10111101110101011001110100111011";
        ram[152] = "0b10111110001011101000100110100111";
        ram[153] = "0b10111011010001001110000001100100";
        ram[154] = "0b10111100101011001111000000011011";
        ram[155] = "0b10111100001111100010001111011001";
        ram[156] = "0b00111101001001101011100100101100";
        ram[157] = "0b00111101110011100100110101101000";
        ram[158] = "0b10111101101100000110000100001000";
        ram[159] = "0b00111110000101000000001010011001";
        ram[160] = "0b10111110000111010011001100111100";
        ram[161] = "0b10111101110001011110011101011011";
        ram[162] = "0b10111110001001110001000000001101";
        ram[163] = "0b10111110010100000110011001110010";
        ram[164] = "0b00111100000100011111111101111100";
        ram[165] = "0b00111100100110111100000010111100";
        ram[166] = "0b00111101000101000101000110001101";
        ram[167] = "0b10111101111010010000101100100011";
        ram[168] = "0b10111100110101101101001000110100";
        ram[169] = "0b00111101011000101100011110000010";
        ram[170] = "0b10111101000111011000100000001110";
        ram[171] = "0b10111100101110010100000011001011";
        ram[172] = "0b10111101011011010011011110010011";
        ram[173] = "0b10111101111011010100101011110100";
        ram[174] = "0b00111101001101011101110010000100";
        ram[175] = "0b00111101101100000010001000100111";
        ram[176] = "0b10111011111001110110001101110011";
        ram[177] = "0b10111110001000001000010011101011";
        ram[178] = "0b10111110111011000111111001001001";
        ram[179] = "0b00111101100100001000000011000010";
        ram[180] = "0b00111110001011010111100010111100";
        ram[181] = "0b10111011111010101100101010011101";
        ram[182] = "0b00111101111101010000001010101001";
        ram[183] = "0b00111101011010001001011011111010";
        ram[184] = "0b10111100011101110001111001001111";
        ram[185] = "0b00111101100111110001010111011111";
        ram[186] = "0b00111101111010010011000001001011";
        ram[187] = "0b00111101101110010110001011010001";
        ram[188] = "0b10111110101110010100011000000111";
        ram[189] = "0b10111110001100001100000011000010";
        ram[190] = "0b10111101100100111111011001001110";
        ram[191] = "0b10111101101111000111000111000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weixdS) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weixdS_ram* meminst;


SC_CTOR(conv_2_conv_2_weixdS) {
meminst = new conv_2_conv_2_weixdS_ram("conv_2_conv_2_weixdS_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weixdS() {
    delete meminst;
}


};//endmodule
#endif
