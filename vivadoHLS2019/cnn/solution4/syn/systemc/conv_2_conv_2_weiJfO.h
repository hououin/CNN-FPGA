// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiJfO_H__
#define __conv_2_conv_2_weiJfO_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiJfO_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiJfO_ram) {
        ram[0] = "0b10111110001001010000111100111100";
        ram[1] = "0b00111110011100101110101001000101";
        ram[2] = "0b00111101111111000111010110010101";
        ram[3] = "0b10111110001001101010011011100001";
        ram[4] = "0b10111110000110001100111011010110";
        ram[5] = "0b10111101001000100000011011101111";
        ram[6] = "0b00111101100001010101101011001001";
        ram[7] = "0b00111101000011010010110100111100";
        ram[8] = "0b10111101110100110110100101010010";
        ram[9] = "0b00111101001011010110111111000001";
        ram[10] = "0b10111110010001110000111010001100";
        ram[11] = "0b00111110010011110001010110010111";
        ram[12] = "0b00111110001111111010011010000111";
        ram[13] = "0b10111100000001110010001001011100";
        ram[14] = "0b00111100110110101110100111010001";
        ram[15] = "0b10111110010111110000101111010100";
        ram[16] = "0b00111110010010110111000111110011";
        ram[17] = "0b10111101111110001111011101010100";
        ram[18] = "0b00111100110111011001000000011000";
        ram[19] = "0b10111110001010000101001100011101";
        ram[20] = "0b00111110001011100011001110110110";
        ram[21] = "0b10111110001111110010011110001011";
        ram[22] = "0b10111101101001110101110100111000";
        ram[23] = "0b10111100110010011010000101111101";
        ram[24] = "0b00111101011000001110110100000100";
        ram[25] = "0b10111110101010011001000100100000";
        ram[26] = "0b10111110100111101000001100011001";
        ram[27] = "0b00111110001101101100101101011000";
        ram[28] = "0b00111100110100000010111110100000";
        ram[29] = "0b10111100110011100111001000111011";
        ram[30] = "0b00111110010000111100001010101110";
        ram[31] = "0b10111110010111011110110011111000";
        ram[32] = "0b00111100100011001110010001010001";
        ram[33] = "0b00111110001000011110001101001111";
        ram[34] = "0b00111101111100110110010011000001";
        ram[35] = "0b00111110001010010110000000101111";
        ram[36] = "0b10111101111111000101010010010001";
        ram[37] = "0b00111100010110011101010101101001";
        ram[38] = "0b00111110001110001101111110000101";
        ram[39] = "0b10111110001010100001100011001010";
        ram[40] = "0b00111101010111110110001001110001";
        ram[41] = "0b10111110010101011001111101110000";
        ram[42] = "0b00111110000100101110010111100010";
        ram[43] = "0b10111110001010101101110011100101";
        ram[44] = "0b00111101001000100000110000111101";
        ram[45] = "0b10111010110001100110100011001001";
        ram[46] = "0b00111110001010001001101110001101";
        ram[47] = "0b10111100100001010100100100111011";
        ram[48] = "0b00111110100100110110000100010010";
        ram[49] = "0b10111110101100100011110100111100";
        ram[50] = "0b00111100011001110010010000111011";
        ram[51] = "0b10111011110010000011000110111100";
        ram[52] = "0b10111101110011011101000111111000";
        ram[53] = "0b10111101011100000100011000101011";
        ram[54] = "0b10111011101101111101011001001000";
        ram[55] = "0b00111101010110110111010101011001";
        ram[56] = "0b00111101011000010100011000001110";
        ram[57] = "0b00111101101110001011100011000110";
        ram[58] = "0b10111101110100110100011111100111";
        ram[59] = "0b00111110010101001000110001010001";
        ram[60] = "0b00111100010111010101101111011101";
        ram[61] = "0b10111110100101010000110001111001";
        ram[62] = "0b10111101100001101010011001011111";
        ram[63] = "0b10111110011100001101011000100000";
        ram[64] = "0b10111101111101001100110011000010";
        ram[65] = "0b10111101010111000011011001101111";
        ram[66] = "0b10111101011000111100011100110110";
        ram[67] = "0b10111100011010011110100011111101";
        ram[68] = "0b10111101101001110000101101001111";
        ram[69] = "0b00111101011001011000000011000111";
        ram[70] = "0b00111101110000111011100101100011";
        ram[71] = "0b00111101111000011011010011100111";
        ram[72] = "0b10111110000101111011011001100010";
        ram[73] = "0b00111101110111101000011000100111";
        ram[74] = "0b00111101111101001111010110100001";
        ram[75] = "0b00111100111010101010101100010000";
        ram[76] = "0b00111110000111000001111011000100";
        ram[77] = "0b10111110010111110001101110111000";
        ram[78] = "0b10111110001111111111101010111001";
        ram[79] = "0b10111110001001110010101011100111";
        ram[80] = "0b10111110001110000001111100101011";
        ram[81] = "0b00111101111101101001101110010111";
        ram[82] = "0b10111110100000101101111111001101";
        ram[83] = "0b00111101001111110100001000100110";
        ram[84] = "0b00111101011101010100011011001011";
        ram[85] = "0b10111110001001001101000111100011";
        ram[86] = "0b10111110100010110000011011000001";
        ram[87] = "0b00111110001100010000001110010010";
        ram[88] = "0b00111101000001100010101100111111";
        ram[89] = "0b00111101000111011111100011001011";
        ram[90] = "0b00111101100011000110011010101110";
        ram[91] = "0b10111101100011111010111110011101";
        ram[92] = "0b10111110100100100101010110011111";
        ram[93] = "0b10111101100100001100110010001111";
        ram[94] = "0b10111110000110100000100000111010";
        ram[95] = "0b00111101100111011110100100110000";
        ram[96] = "0b10111011101111000010100100000011";
        ram[97] = "0b10111110011010100100110011011011";
        ram[98] = "0b00111110000111010000000000100000";
        ram[99] = "0b00111110001101011010110101011111";
        ram[100] = "0b00111101110000101010000010100001";
        ram[101] = "0b00111110001000010001110010101111";
        ram[102] = "0b00111100100110000011110000001010";
        ram[103] = "0b10111101111000010110110100100101";
        ram[104] = "0b00111100010001011011101011100011";
        ram[105] = "0b00111101100001001100001101000001";
        ram[106] = "0b10111011001101110101110001101011";
        ram[107] = "0b00111101000001010111010100111000";
        ram[108] = "0b10111100001010111000110111000010";
        ram[109] = "0b00111101110100100010100101001000";
        ram[110] = "0b00111101110111010000111001000001";
        ram[111] = "0b10111100100100011110110000100101";
        ram[112] = "0b00111110000101111011111101101000";
        ram[113] = "0b10111110101010010111100110001101";
        ram[114] = "0b10111100110111101100101101101000";
        ram[115] = "0b00111101100000101110001000010010";
        ram[116] = "0b10111110101010111001111110100111";
        ram[117] = "0b00111101100101100111011000000000";
        ram[118] = "0b10111110001011110110101001010100";
        ram[119] = "0b10111110010010010100110001000011";
        ram[120] = "0b10111101111011110010000011010010";
        ram[121] = "0b00111100110001111111110110110001";
        ram[122] = "0b10111110000001010100001101110100";
        ram[123] = "0b10111101110010110111000101111110";
        ram[124] = "0b00111101011101110011010101000110";
        ram[125] = "0b10111110100000101101001111100100";
        ram[126] = "0b10111011111000011000111100010110";
        ram[127] = "0b00111101101010100011001001010001";
        ram[128] = "0b00111101101110001010111101001100";
        ram[129] = "0b10111110101110000100001111110000";
        ram[130] = "0b10111101010111110010001100011000";
        ram[131] = "0b10111101101000010010110111101110";
        ram[132] = "0b00111101110101101000000001011011";
        ram[133] = "0b00111110011010000111000100010000";
        ram[134] = "0b00111101011000110111001110010101";
        ram[135] = "0b00111101110111001110111101110101";
        ram[136] = "0b10111011011111000001111011111111";
        ram[137] = "0b00111110000000101000110110011100";
        ram[138] = "0b10111101000001100000100010101110";
        ram[139] = "0b10111101101011010110100100000111";
        ram[140] = "0b00111110000000101110110000011010";
        ram[141] = "0b10111110101101111011001101110011";
        ram[142] = "0b10111101000011000001000100101001";
        ram[143] = "0b00111101111110101011010111001101";
        ram[144] = "0b10111101100001011010100011011111";
        ram[145] = "0b00111110001000010011010111111001";
        ram[146] = "0b10111110000101101100111110110000";
        ram[147] = "0b00111101010000101000000001111010";
        ram[148] = "0b10111111000100110010111000001101";
        ram[149] = "0b10111101110000101111111010101100";
        ram[150] = "0b10111110001110001101011101111111";
        ram[151] = "0b10111011111011101100000110110110";
        ram[152] = "0b00111101000011110111011010111100";
        ram[153] = "0b00111110000011000011001101001110";
        ram[154] = "0b00111110000100101101110110001000";
        ram[155] = "0b10111110001010000100101100101010";
        ram[156] = "0b10111101010001100110001000100110";
        ram[157] = "0b10111110000111000010101000110011";
        ram[158] = "0b10111110010000000000011011000010";
        ram[159] = "0b00111110001100110000011010101000";
        ram[160] = "0b10111101100110101101100110100010";
        ram[161] = "0b10111100100111111010110011000010";
        ram[162] = "0b00111101001100001100011110010010";
        ram[163] = "0b10111110000000101100101110101111";
        ram[164] = "0b00111100101011010111010101001111";
        ram[165] = "0b10111100011011101001001011100101";
        ram[166] = "0b10111101110011010101011001100100";
        ram[167] = "0b00111110001001001000000111001100";
        ram[168] = "0b10111110000101110111000101111111";
        ram[169] = "0b00111101111000010101011001010011";
        ram[170] = "0b00111110001111010100000111011100";
        ram[171] = "0b00111101111110010110010000010111";
        ram[172] = "0b10111110010111110101111010110110";
        ram[173] = "0b10111110000001011110010100110010";
        ram[174] = "0b00111011110000110011101001110001";
        ram[175] = "0b00111100010111111101011000001000";
        ram[176] = "0b10111110001101001010101100110011";
        ram[177] = "0b10111110010010101100101011000011";
        ram[178] = "0b00111110000110010110011101000100";
        ram[179] = "0b00111110010110001001000100011010";
        ram[180] = "0b10111100001011111100010010110000";
        ram[181] = "0b10111101110111111100110011110101";
        ram[182] = "0b10111110100000001000010011011011";
        ram[183] = "0b00111011111100111010011000011001";
        ram[184] = "0b00111101010010011100111010010110";
        ram[185] = "0b10111011101100100101011011100110";
        ram[186] = "0b10111110001100011101010011010111";
        ram[187] = "0b00111110000010000000001000010000";
        ram[188] = "0b10111101010100100001010101110011";
        ram[189] = "0b00111110010101101011011001000010";
        ram[190] = "0b00111110000001010011001100011001";
        ram[191] = "0b00111110001011111010100100111110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiJfO) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiJfO_ram* meminst;


SC_CTOR(conv_2_conv_2_weiJfO) {
meminst = new conv_2_conv_2_weiJfO_ram("conv_2_conv_2_weiJfO_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiJfO() {
    delete meminst;
}


};//endmodule
#endif
