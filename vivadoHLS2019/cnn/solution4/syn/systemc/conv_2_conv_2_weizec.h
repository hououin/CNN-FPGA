// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weizec_H__
#define __conv_2_conv_2_weizec_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weizec_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weizec_ram) {
        ram[0] = "0b00111011010100000011001011110011";
        ram[1] = "0b00111101011100011111100111000100";
        ram[2] = "0b00111100111011010100000110010001";
        ram[3] = "0b10111100100100000101001111100100";
        ram[4] = "0b10111011011011001100011010101110";
        ram[5] = "0b00111100010000100000010111010000";
        ram[6] = "0b00111110001000110010100111110010";
        ram[7] = "0b10111101100101000101110000110011";
        ram[8] = "0b00111110000000110011101001000100";
        ram[9] = "0b00111101000100100010111101001010";
        ram[10] = "0b10111101100001100111101100110010";
        ram[11] = "0b00111101000101010111111110010011";
        ram[12] = "0b00111101111111100011110010111011";
        ram[13] = "0b00111100111100100011101001001000";
        ram[14] = "0b00111000110001111111111000110110";
        ram[15] = "0b00111010011011010100001001011001";
        ram[16] = "0b10111100110110011111011100100101";
        ram[17] = "0b10111101111111111001111000100111";
        ram[18] = "0b10111101100100111111110001101101";
        ram[19] = "0b10111110010110011100111100001101";
        ram[20] = "0b00111101001011101101110010110010";
        ram[21] = "0b10111101111000101111010110101101";
        ram[22] = "0b10111100101010101010001101000110";
        ram[23] = "0b10111110001000011101001101000100";
        ram[24] = "0b00111101101111101011101011101000";
        ram[25] = "0b10111101100101011001010001110011";
        ram[26] = "0b00111101011100100110011101000010";
        ram[27] = "0b00111101100111001100001010011110";
        ram[28] = "0b10111101101101100100010001110100";
        ram[29] = "0b00111110000011001110001010000000";
        ram[30] = "0b00111110000111010000001110010011";
        ram[31] = "0b10111110100111110111101111101000";
        ram[32] = "0b00111110000111111000000101011110";
        ram[33] = "0b10111101110010100000100000001110";
        ram[34] = "0b10111100000011001111111101001001";
        ram[35] = "0b00111101110010000000101001111111";
        ram[36] = "0b10111110010000100011011110101010";
        ram[37] = "0b00111101011101000101111011101101";
        ram[38] = "0b00111011101010111110001111011001";
        ram[39] = "0b00111101000001011101011111001101";
        ram[40] = "0b10111101101100011101010110111010";
        ram[41] = "0b10111100011010000110010101110100";
        ram[42] = "0b10111100100100000011111010101101";
        ram[43] = "0b10111011100000011011111100110100";
        ram[44] = "0b10111110001111001011010111111001";
        ram[45] = "0b00111011100011001111110110010011";
        ram[46] = "0b00111011110111101101100110010010";
        ram[47] = "0b00111100011011000011011101101000";
        ram[48] = "0b00111101100000001001111101011100";
        ram[49] = "0b10111110100000011010010111010010";
        ram[50] = "0b00111110000000000111011010010010";
        ram[51] = "0b00111110010110101111010010010100";
        ram[52] = "0b10111101101110110110101110111110";
        ram[53] = "0b10111110011011001110100010001010";
        ram[54] = "0b00111101111100111100100110010101";
        ram[55] = "0b10111101111000001100101101000000";
        ram[56] = "0b10111101110110111101001001110111";
        ram[57] = "0b10111101000101010010001101001100";
        ram[58] = "0b00111110000111001000001000001110";
        ram[59] = "0b00111110000011001110011110101001";
        ram[60] = "0b00111101011110111010000100000011";
        ram[61] = "0b10111101101001111100110001001000";
        ram[62] = "0b10111100101100010110001100000111";
        ram[63] = "0b10111101011010000110011000011000";
        ram[64] = "0b00111101101101011011000101011100";
        ram[65] = "0b00111110000011111010000110101000";
        ram[66] = "0b00111110100001110111100111110001";
        ram[67] = "0b00111101010000100000010001001100";
        ram[68] = "0b00111101101001011010100010100110";
        ram[69] = "0b10111101001111011111000011010101";
        ram[70] = "0b00111101101101101011000101111100";
        ram[71] = "0b00111101011110101111000101000010";
        ram[72] = "0b00111101100010110111010000101011";
        ram[73] = "0b00111101001101011000010111000101";
        ram[74] = "0b00111110000000011010000111001011";
        ram[75] = "0b00111101101011111001100001101011";
        ram[76] = "0b10111100110001011100111100011011";
        ram[77] = "0b00111100010101100111100011111001";
        ram[78] = "0b10111101010000101001010010000000";
        ram[79] = "0b00111100101111110010011110110100";
        ram[80] = "0b10111101100111010101100000111111";
        ram[81] = "0b10111100101101100001111100111101";
        ram[82] = "0b00111101100001001111111100010100";
        ram[83] = "0b10111101001010010010010001001110";
        ram[84] = "0b10111101000011100011010100011000";
        ram[85] = "0b10111110000000000101000010010010";
        ram[86] = "0b10111011001100110110010101001100";
        ram[87] = "0b10111110000101101101010011111110";
        ram[88] = "0b00111110000100010110111111100100";
        ram[89] = "0b10111100101110111111101001010101";
        ram[90] = "0b10111100101011111101110000101000";
        ram[91] = "0b10111110000101111000011100100011";
        ram[92] = "0b10111101101001000011110101111110";
        ram[93] = "0b00111101101001001001001110000111";
        ram[94] = "0b10111101101110100111110010000100";
        ram[95] = "0b10111101111101000111001100111001";
        ram[96] = "0b00111101001001010110111110001100";
        ram[97] = "0b10111101000101010100100000110010";
        ram[98] = "0b00111110001010100101001111101111";
        ram[99] = "0b00111101010000100011011101101001";
        ram[100] = "0b00111100110110010100010110011010";
        ram[101] = "0b10111100100100111000011011100001";
        ram[102] = "0b10111100011101001111110000001010";
        ram[103] = "0b10111101101011010111101101001100";
        ram[104] = "0b10111101111100010110110001100001";
        ram[105] = "0b10111101010010101111101001001000";
        ram[106] = "0b00111101111101111000111011011101";
        ram[107] = "0b10111101101001100000101100000001";
        ram[108] = "0b10111101101100101110101001010001";
        ram[109] = "0b00111101100101011111101011000000";
        ram[110] = "0b10111101000011110110100110000001";
        ram[111] = "0b10111101111011000000100101110111";
        ram[112] = "0b10111101010110100001110010111110";
        ram[113] = "0b10111100111000000101010011000001";
        ram[114] = "0b00111110010011100011100000111101";
        ram[115] = "0b00111101000000001000100011110101";
        ram[116] = "0b00111101010111011111001100000100";
        ram[117] = "0b10111101100001111010110100000011";
        ram[118] = "0b10111101001001100011000110110010";
        ram[119] = "0b10111101111001001010111010001011";
        ram[120] = "0b10111101011001001000110001110111";
        ram[121] = "0b10111011100001010101001101111100";
        ram[122] = "0b10111110001110011100100010011111";
        ram[123] = "0b00111101110111110011010101110011";
        ram[124] = "0b00111100101011010010011111100100";
        ram[125] = "0b10111101010111101011001101011100";
        ram[126] = "0b10111100111110101101001110111000";
        ram[127] = "0b00111011010101101001111111100000";
        ram[128] = "0b00111101101011110001011001110101";
        ram[129] = "0b00111100110101100001011101011111";
        ram[130] = "0b00111101011111111100110010010101";
        ram[131] = "0b10111101111010000000101101100000";
        ram[132] = "0b00111101011001110001111100001101";
        ram[133] = "0b00111101001010010101000010100000";
        ram[134] = "0b10111110001111101010110010001101";
        ram[135] = "0b00111101110001011101001101001010";
        ram[136] = "0b10111110000110011011010110000110";
        ram[137] = "0b00111010101011100001001011010010";
        ram[138] = "0b10111110010100001100110110111011";
        ram[139] = "0b10111110000100100001001110100101";
        ram[140] = "0b10111101100101011010010100101101";
        ram[141] = "0b00111100111100011000000010010001";
        ram[142] = "0b10111110001011111010010001111011";
        ram[143] = "0b00111101111001001101111110111111";
        ram[144] = "0b10111101110101011000101011100110";
        ram[145] = "0b00111100010000010010001100110001";
        ram[146] = "0b10111101101001100011011110101000";
        ram[147] = "0b00111101101001000100100000111110";
        ram[148] = "0b10111101001111011101101111111111";
        ram[149] = "0b00111110000001010001101110101000";
        ram[150] = "0b00111100101000001000000100100110";
        ram[151] = "0b10111110010100001111011110100001";
        ram[152] = "0b00111101101011000001010011111101";
        ram[153] = "0b00111100110110001011100100101000";
        ram[154] = "0b10111101101001101000101010100000";
        ram[155] = "0b00111101100001101100111101100010";
        ram[156] = "0b10111101111100011100011100010001";
        ram[157] = "0b10111101111011001011001111000110";
        ram[158] = "0b00111101110100011111011010000110";
        ram[159] = "0b00111101001010100001001001110000";
        ram[160] = "0b10111110101010110000010100100101";
        ram[161] = "0b00111101010011011101000010101110";
        ram[162] = "0b10111101011001110001101101010001";
        ram[163] = "0b10111101001101100010001100001010";
        ram[164] = "0b10111100111000010011111111010110";
        ram[165] = "0b10111110000111000011001010010111";
        ram[166] = "0b10111110000111100000100101111110";
        ram[167] = "0b10111100011110000011111101011110";
        ram[168] = "0b00111101110001010100101110010110";
        ram[169] = "0b10111101000100011011110001010010";
        ram[170] = "0b00111110001001110101110101001100";
        ram[171] = "0b10111101001111101010010111110110";
        ram[172] = "0b00111110000001011100001010100110";
        ram[173] = "0b10111101111100110001101011111101";
        ram[174] = "0b10111110100100000101101100001100";
        ram[175] = "0b10111101101001110101111110100111";
        ram[176] = "0b00111100100011100000000110100010";
        ram[177] = "0b00111100001000100001101110110010";
        ram[178] = "0b00111101111001100100010011011100";
        ram[179] = "0b00111101010111010111000010001001";
        ram[180] = "0b10111100100111100101011111001110";
        ram[181] = "0b10111100111010001111111100101001";
        ram[182] = "0b10111110001001001110000111011000";
        ram[183] = "0b00111110001010110101101111010110";
        ram[184] = "0b10111101111010001100011111101101";
        ram[185] = "0b10111101000010001001101011101101";
        ram[186] = "0b10111101100100011011010100100110";
        ram[187] = "0b00111101100010010101101011010000";
        ram[188] = "0b00111101110001101111111011100000";
        ram[189] = "0b00111101111010000110001011101011";
        ram[190] = "0b00111101010000000101001011101010";
        ram[191] = "0b10111100100000011001100011101100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weizec) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weizec_ram* meminst;


SC_CTOR(conv_2_conv_2_weizec) {
meminst = new conv_2_conv_2_weizec_ram("conv_2_conv_2_weizec_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weizec() {
    delete meminst;
}


};//endmodule
#endif
