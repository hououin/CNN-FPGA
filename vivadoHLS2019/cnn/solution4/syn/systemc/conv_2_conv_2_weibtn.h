// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibtn_H__
#define __conv_2_conv_2_weibtn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibtn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibtn_ram) {
        ram[0] = "0b10111101011111111111110011101110";
        ram[1] = "0b10111110010101100110001010101011";
        ram[2] = "0b10111110011010100100100100101011";
        ram[3] = "0b10111100101110101110010001100111";
        ram[4] = "0b00111101101010100010111100100001";
        ram[5] = "0b00111100110111010001110010100101";
        ram[6] = "0b10111101111110101010001111000010";
        ram[7] = "0b00111110001001110001001000111000";
        ram[8] = "0b00111110000011100001011010011010";
        ram[9] = "0b00111100111100010100111001101100";
        ram[10] = "0b00111100101000000010101111011000";
        ram[11] = "0b00111101100011111100010111011101";
        ram[12] = "0b10111100011010001100100110001100";
        ram[13] = "0b00111100111100101000000011011110";
        ram[14] = "0b10111101000000100101001011111111";
        ram[15] = "0b00111101101110110100010001111110";
        ram[16] = "0b00111101100101001101001001111000";
        ram[17] = "0b10111101110100110011111101001111";
        ram[18] = "0b10111100100110101011000001111011";
        ram[19] = "0b00111101010001010011010001101100";
        ram[20] = "0b10111110000100000111110110010101";
        ram[21] = "0b00111101010011010011011100100011";
        ram[22] = "0b10111100100011011011011011110010";
        ram[23] = "0b10111100100110000011001010001111";
        ram[24] = "0b10111101000010111110111001111000";
        ram[25] = "0b00111101110010001111010000001100";
        ram[26] = "0b00111001101000000100000000100110";
        ram[27] = "0b10111110000111010110110110001111";
        ram[28] = "0b10111011111100010101111000110111";
        ram[29] = "0b10111101100011010001110110011000";
        ram[30] = "0b00111101100001111011100100010110";
        ram[31] = "0b10111110010100111011001100110100";
        ram[32] = "0b00111011110011001110010000000001";
        ram[33] = "0b00111011101111111010100110101100";
        ram[34] = "0b10111101100100111101111110010010";
        ram[35] = "0b10111100101010000011001010101110";
        ram[36] = "0b10111110100010101110111000110100";
        ram[37] = "0b10111110000001010100110010011111";
        ram[38] = "0b10111100001101011101011010100101";
        ram[39] = "0b00111101100110011000001101011100";
        ram[40] = "0b10111110011100011111110100111110";
        ram[41] = "0b10111110010111100000001000110111";
        ram[42] = "0b00111100101000010100110001010110";
        ram[43] = "0b10111100100111011000000111100001";
        ram[44] = "0b00111101100010110101010100010110";
        ram[45] = "0b10111101100110001001001010001101";
        ram[46] = "0b10111101110111011000101011100101";
        ram[47] = "0b10111101100010000010000001011000";
        ram[48] = "0b10111110001001100100100100010010";
        ram[49] = "0b10111110000001101101111001010111";
        ram[50] = "0b10111101100011011011000011100010";
        ram[51] = "0b10111101110101010110011101010010";
        ram[52] = "0b10111110011000101011001011001101";
        ram[53] = "0b10111101110010011110111000111001";
        ram[54] = "0b10111110001101011010000110000100";
        ram[55] = "0b10111110001000000010110110100010";
        ram[56] = "0b00111100001000010011011101011010";
        ram[57] = "0b00111101001000000000010101011000";
        ram[58] = "0b10111101011001001000000111111010";
        ram[59] = "0b00111110000000011001000011000101";
        ram[60] = "0b10111101111001001011101001011011";
        ram[61] = "0b00111100000001001001101110000001";
        ram[62] = "0b00111101010000000111010001110000";
        ram[63] = "0b00111110001101011111010000000011";
        ram[64] = "0b10111101010110011010110010110111";
        ram[65] = "0b10111101110111011110111100011101";
        ram[66] = "0b10111110001111001001110100010010";
        ram[67] = "0b00111101111011010101111101001111";
        ram[68] = "0b00111101001111110100010011000110";
        ram[69] = "0b10111110000001010111011010011010";
        ram[70] = "0b10111101010001001110110010101100";
        ram[71] = "0b00111101110000101000110000101001";
        ram[72] = "0b00111101000111100110001101010000";
        ram[73] = "0b10111100001010010011001010001111";
        ram[74] = "0b10111101100000011110011010010010";
        ram[75] = "0b10111101111001011110100010100000";
        ram[76] = "0b00111101100111110101000110011100";
        ram[77] = "0b00111100011101101001110000001000";
        ram[78] = "0b10111100110001101100010111101010";
        ram[79] = "0b00111101110100111001100101011110";
        ram[80] = "0b00111101000001000100111001110000";
        ram[81] = "0b10111101010111011110110100001011";
        ram[82] = "0b10111101100011100001110110111100";
        ram[83] = "0b00111101010000011101000110001111";
        ram[84] = "0b10111101011010010101001100111010";
        ram[85] = "0b00111101110010101001001001111011";
        ram[86] = "0b00111100101001011010011010001111";
        ram[87] = "0b00111101111111000011010100101010";
        ram[88] = "0b00111101101101110000111000010001";
        ram[89] = "0b10111101010110111011011110100011";
        ram[90] = "0b10111101011000110111001110100100";
        ram[91] = "0b10111101000100010001100000010100";
        ram[92] = "0b10111100010101010101010101011010";
        ram[93] = "0b10111110011111000101001101000011";
        ram[94] = "0b00111101110110101000011001000110";
        ram[95] = "0b00111011111111001100010001010100";
        ram[96] = "0b00111101001001110011101001111110";
        ram[97] = "0b00111101011101111110110101101100";
        ram[98] = "0b10111101100000110011000111110111";
        ram[99] = "0b10111100011011101011010110101000";
        ram[100] = "0b10111101100010000010100101101101";
        ram[101] = "0b10111101111011011010011100010010";
        ram[102] = "0b00111110001110000010101101111100";
        ram[103] = "0b10111101100110101110111001010100";
        ram[104] = "0b10111001111010010001110010010110";
        ram[105] = "0b00111101010101010011101111001101";
        ram[106] = "0b00111110000001000101101101110100";
        ram[107] = "0b00111100001111010111010101101010";
        ram[108] = "0b00111101111101000100001110001101";
        ram[109] = "0b10111101101010111000100100111100";
        ram[110] = "0b00111100100011100100001100001001";
        ram[111] = "0b00111101101111111010000101111011";
        ram[112] = "0b00111110000011111110010001000010";
        ram[113] = "0b00111011111100010110110011011011";
        ram[114] = "0b10111101010110111011010000100011";
        ram[115] = "0b10111101111010010101010100110010";
        ram[116] = "0b00111101001100111011100001011001";
        ram[117] = "0b00111100010011100101011100000001";
        ram[118] = "0b10111100010010111110011110110101";
        ram[119] = "0b10111101110101011110100101001100";
        ram[120] = "0b10111101111000010001100000010111";
        ram[121] = "0b00111101110111010011010101100110";
        ram[122] = "0b00111101111110011011110111100010";
        ram[123] = "0b00111100000000100001000010011111";
        ram[124] = "0b00111010111000100000110101101011";
        ram[125] = "0b10111100100110011111111010100001";
        ram[126] = "0b10111101110001110111001111110101";
        ram[127] = "0b10111100101001011011010101111000";
        ram[128] = "0b10111110100100101101111111000111";
        ram[129] = "0b10111110100001001110111111101100";
        ram[130] = "0b10111110001001010000000011011110";
        ram[131] = "0b10111101110110010011111100111110";
        ram[132] = "0b00111101110010100010011101101100";
        ram[133] = "0b10111110100110101111111101011111";
        ram[134] = "0b00111110011010010110011100001110";
        ram[135] = "0b10111101111110101111011000100010";
        ram[136] = "0b00111100110110100100101000010000";
        ram[137] = "0b10111110011001111010000100110100";
        ram[138] = "0b10111110010010011000010111100010";
        ram[139] = "0b10111110000110001001101101000001";
        ram[140] = "0b00111110001001110001001100010100";
        ram[141] = "0b00111101101100101110001111001100";
        ram[142] = "0b00111100110110011100011010100010";
        ram[143] = "0b10111100011001100010010011011010";
        ram[144] = "0b10111100000101100001011101101100";
        ram[145] = "0b10111101101010011010010110110011";
        ram[146] = "0b00111101001100001100100110110110";
        ram[147] = "0b00111101010010101000111000000000";
        ram[148] = "0b00111100101111100011101010111111";
        ram[149] = "0b00111110000010010111110010001100";
        ram[150] = "0b00111101001101110100100011110101";
        ram[151] = "0b00111110100100000001110000111001";
        ram[152] = "0b00111110001001001110000001001100";
        ram[153] = "0b10111100001111101110011000111100";
        ram[154] = "0b10111110011110110101011011111001";
        ram[155] = "0b10111110001000011101011011001000";
        ram[156] = "0b00111101100001100001011011001111";
        ram[157] = "0b10111101100010111110110011010010";
        ram[158] = "0b10111101101011100101001000010011";
        ram[159] = "0b00111101110100010001010111100100";
        ram[160] = "0b10111101100111000000000001100111";
        ram[161] = "0b00111101101010110000001110000011";
        ram[162] = "0b10111110011110100111000111001110";
        ram[163] = "0b10111110000111101110010011101101";
        ram[164] = "0b00111101110001000010001110011011";
        ram[165] = "0b10111100011010100011010011110000";
        ram[166] = "0b00111101011000100111000100000101";
        ram[167] = "0b10111101010010010010100001100100";
        ram[168] = "0b00111100001100101011011111101111";
        ram[169] = "0b00111101001101011010101000001010";
        ram[170] = "0b00111101111001111101101001010100";
        ram[171] = "0b00111101000011011000001010000101";
        ram[172] = "0b10111110001111001001011000011111";
        ram[173] = "0b10111110001110001101010000001110";
        ram[174] = "0b00111110001001110000011101111101";
        ram[175] = "0b00111110000101001001010101011011";
        ram[176] = "0b00111101110001000010100100111001";
        ram[177] = "0b00111101100111110110110111101011";
        ram[178] = "0b10111100001010000011100011010101";
        ram[179] = "0b10111101000110100011111110000100";
        ram[180] = "0b00111100110001011010001001100111";
        ram[181] = "0b00111101101011000001110100011010";
        ram[182] = "0b10111101100010100101111010110101";
        ram[183] = "0b00111110001100110101010101001111";
        ram[184] = "0b10111101111000011110001011000010";
        ram[185] = "0b10111100100011011110110110101011";
        ram[186] = "0b00111101110011010111011110011110";
        ram[187] = "0b10111101100010111100101101010100";
        ram[188] = "0b00111101101100100000111111100111";
        ram[189] = "0b10111100011110111100011111011000";
        ram[190] = "0b10111101101000000111110010001000";
        ram[191] = "0b10111101110010001011101101110001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibtn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibtn_ram* meminst;


SC_CTOR(conv_2_conv_2_weibtn) {
meminst = new conv_2_conv_2_weibtn_ram("conv_2_conv_2_weibtn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibtn() {
    delete meminst;
}


};//endmodule
#endif
