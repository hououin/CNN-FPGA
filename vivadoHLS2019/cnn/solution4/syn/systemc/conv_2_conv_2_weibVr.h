// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibVr_H__
#define __conv_2_conv_2_weibVr_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibVr_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibVr_ram) {
        ram[0] = "0b10111110010010000110011010011010";
        ram[1] = "0b00111100001101010001110100000011";
        ram[2] = "0b00111110011001001000010011101100";
        ram[3] = "0b10111110100001001010110111100100";
        ram[4] = "0b00111101001100010100000100000111";
        ram[5] = "0b10111110001010101000001100111101";
        ram[6] = "0b10111110100000000111000011100010";
        ram[7] = "0b00111110001101011111000101101110";
        ram[8] = "0b10111101110111000000111001110111";
        ram[9] = "0b10111110011010111000000001011111";
        ram[10] = "0b10111101011101001101000110011000";
        ram[11] = "0b10111011101001111100111101000011";
        ram[12] = "0b10111110010001001100001100100110";
        ram[13] = "0b00111110010101101101110010000111";
        ram[14] = "0b10111110100001101101011100010001";
        ram[15] = "0b10111110000001100101101101000010";
        ram[16] = "0b00111101110110000010100010100111";
        ram[17] = "0b10111101011011000000000101011101";
        ram[18] = "0b00111110001001011001001000111110";
        ram[19] = "0b10111110101100100100011010000100";
        ram[20] = "0b10111110000011111101100110100001";
        ram[21] = "0b00111101111000001000010110101100";
        ram[22] = "0b10111100110011011101000011010001";
        ram[23] = "0b00111101001000111000100010011101";
        ram[24] = "0b10111101101010101011101111100000";
        ram[25] = "0b10111100000100010010010010101101";
        ram[26] = "0b10111110000001101100001011110100";
        ram[27] = "0b10111110100111110111000001001111";
        ram[28] = "0b00111100111100011000110011110011";
        ram[29] = "0b10111011110010010110110111000001";
        ram[30] = "0b10111101000010100101111010000110";
        ram[31] = "0b10111110011000110001011001101110";
        ram[32] = "0b10111101011011100011101001000000";
        ram[33] = "0b00111101111001011010100011110100";
        ram[34] = "0b10111110001110110101100100100010";
        ram[35] = "0b10111101101110011011011110111101";
        ram[36] = "0b00111101111101001001111011010110";
        ram[37] = "0b10111110011110101101110100110110";
        ram[38] = "0b10111101100111101111100111000010";
        ram[39] = "0b00111110100100010101111010100111";
        ram[40] = "0b10111101110101010101110010101100";
        ram[41] = "0b10111101101001000001001101011110";
        ram[42] = "0b10111101101101100111000011101000";
        ram[43] = "0b10111101010101010011000100011011";
        ram[44] = "0b10111110000100001011101101111101";
        ram[45] = "0b10111100110001010001001000100110";
        ram[46] = "0b00111101111010000011110101101101";
        ram[47] = "0b10111110010001111101101011110000";
        ram[48] = "0b10111110100001100101111000001010";
        ram[49] = "0b00111110000010110101110101111100";
        ram[50] = "0b10111110000011111010101111110000";
        ram[51] = "0b10111101010001010110011100100000";
        ram[52] = "0b10111110011000010010000111101110";
        ram[53] = "0b10111110000111000001101110000110";
        ram[54] = "0b10111101001111010110111010101110";
        ram[55] = "0b00111110000101010011100000101001";
        ram[56] = "0b10111110000110000000000001111000";
        ram[57] = "0b10111110011100001001000001111110";
        ram[58] = "0b00111101100101110110001111111100";
        ram[59] = "0b10111110001011000100000111010110";
        ram[60] = "0b10111110010110101101110101101111";
        ram[61] = "0b10111110101000101010010100011011";
        ram[62] = "0b10111100011100000000001001000110";
        ram[63] = "0b00111101111110101011111110101111";
        ram[64] = "0b00111100111001010101010010100010";
        ram[65] = "0b10111110011010100001110111100000";
        ram[66] = "0b00111110001110111110001000000010";
        ram[67] = "0b10111110110000100111101011100110";
        ram[68] = "0b00111110001011011101110011101000";
        ram[69] = "0b00111100110100010011001111001101";
        ram[70] = "0b10111101100110101101010100011100";
        ram[71] = "0b10111101101101110011100100011111";
        ram[72] = "0b00111110010110011001010100111011";
        ram[73] = "0b10111101100011111011101101010011";
        ram[74] = "0b10111100000111111101010000101010";
        ram[75] = "0b00111101100110010010010011100001";
        ram[76] = "0b10111110001110101100110000101001";
        ram[77] = "0b10111101100001011101110010111101";
        ram[78] = "0b10111100110010110111101101100101";
        ram[79] = "0b10111101000000111101000000100011";
        ram[80] = "0b10111101100100110110101101110111";
        ram[81] = "0b00111101000011101100111101100100";
        ram[82] = "0b10111110001001010110001100110110";
        ram[83] = "0b00111100111101110011101101000110";
        ram[84] = "0b10111110101010011011111001110110";
        ram[85] = "0b00111101110110011111011011110100";
        ram[86] = "0b10111101100011010001001100100111";
        ram[87] = "0b00111101111111100111011011000111";
        ram[88] = "0b00111101010100111100100101110011";
        ram[89] = "0b00111110001101111111011010100111";
        ram[90] = "0b10111101000001011010011111110000";
        ram[91] = "0b10111110010011001110011001100110";
        ram[92] = "0b10111101110100011101001000100111";
        ram[93] = "0b10111100110011011110001001111100";
        ram[94] = "0b00111011100101011110000011110110";
        ram[95] = "0b10111110000010000000000110001011";
        ram[96] = "0b00111110000001100100001101100010";
        ram[97] = "0b10111110000111111100110101001100";
        ram[98] = "0b10111101110001001010010101000000";
        ram[99] = "0b10111101101111000011011001111010";
        ram[100] = "0b10111101010110111001000001011000";
        ram[101] = "0b10111101111001101011100001101011";
        ram[102] = "0b00111101101110001110000001101100";
        ram[103] = "0b00111110000000101111001110011011";
        ram[104] = "0b10111101001111110100100101001101";
        ram[105] = "0b00111101000001001011001001010000";
        ram[106] = "0b10111110000000100111100100100001";
        ram[107] = "0b10111110101000010100111101001110";
        ram[108] = "0b00111100110000000111001011111001";
        ram[109] = "0b00111100010001000101011101101110";
        ram[110] = "0b00111110000000100011000001111001";
        ram[111] = "0b00111100010110011101010001010011";
        ram[112] = "0b10111101000101010100101010010001";
        ram[113] = "0b10111110100000100001111011010010";
        ram[114] = "0b00111101001000001101101100000111";
        ram[115] = "0b00111100101001010000101001111001";
        ram[116] = "0b00111100011011010111000110101101";
        ram[117] = "0b00111101100100000001100111101110";
        ram[118] = "0b00111101111000100000111001100100";
        ram[119] = "0b00111110010011011011100111101001";
        ram[120] = "0b10111110001100111011011001001111";
        ram[121] = "0b00111110001100010010010010000011";
        ram[122] = "0b00111101101100100000010010011000";
        ram[123] = "0b10111100011110100100001101011011";
        ram[124] = "0b00111011101101000010010010010100";
        ram[125] = "0b00111101010010100001010010110111";
        ram[126] = "0b10111110001010100010111000110100";
        ram[127] = "0b10111100011011000110101111001010";
        ram[128] = "0b00111101010000100010011011110110";
        ram[129] = "0b10111110011101000000011001010101";
        ram[130] = "0b00111101110111101010010010011110";
        ram[131] = "0b10111100110101000110001111110010";
        ram[132] = "0b00111101101100001010000000010101";
        ram[133] = "0b10111110011100100000110000101010";
        ram[134] = "0b00111110010110101000100001001000";
        ram[135] = "0b10111110001010111000101011001110";
        ram[136] = "0b10111101100111100110111000110010";
        ram[137] = "0b10111110000100000101101110010001";
        ram[138] = "0b10111101100100011100100000001011";
        ram[139] = "0b10111100001101111010101000101101";
        ram[140] = "0b00111110010110111000000001001111";
        ram[141] = "0b10111101011000111101101001110110";
        ram[142] = "0b10111110001110001011010110110110";
        ram[143] = "0b00111101101000001011101000101010";
        ram[144] = "0b00111101101111000000010100110000";
        ram[145] = "0b10111101001011100111010110011001";
        ram[146] = "0b10111110101001111010110100010110";
        ram[147] = "0b00111101100000010001000000100101";
        ram[148] = "0b10111101110010000110101100011110";
        ram[149] = "0b00111101100011111110000100001011";
        ram[150] = "0b10111110101011100010000111000001";
        ram[151] = "0b00111110100100111111110000110011";
        ram[152] = "0b10111101001000101100000111100010";
        ram[153] = "0b10111100100011011000001010000010";
        ram[154] = "0b10111110010010110100010000001001";
        ram[155] = "0b10111011100010000111011101111011";
        ram[156] = "0b00111101001011011100100101011001";
        ram[157] = "0b00111100111101100111000010100100";
        ram[158] = "0b10111101111100000111011000100110";
        ram[159] = "0b00111101100001100111001011101111";
        ram[160] = "0b10111110001001010011000111111111";
        ram[161] = "0b10111110010100010110001001101111";
        ram[162] = "0b10111110000100010111111011011111";
        ram[163] = "0b10111110000000001011001010011001";
        ram[164] = "0b00111110000000001100010001001001";
        ram[165] = "0b00111101101101000001000001110011";
        ram[166] = "0b00111110000010001101100100111001";
        ram[167] = "0b10111101111000001011100011111111";
        ram[168] = "0b10111101111011000100100000001010";
        ram[169] = "0b00111101101101000011000000111111";
        ram[170] = "0b10111100100000001101000010100101";
        ram[171] = "0b10111011000100000101011100001101";
        ram[172] = "0b00111101101010001000001010010110";
        ram[173] = "0b10111110001010100110101101001011";
        ram[174] = "0b10111011100001010000110110011100";
        ram[175] = "0b00111110000110110101111101110000";
        ram[176] = "0b00111101101010010011110101101111";
        ram[177] = "0b00111100101101011011111100110110";
        ram[178] = "0b00111100110110100011111100010000";
        ram[179] = "0b00111101101100001001100100110110";
        ram[180] = "0b00111101101110000000111000001100";
        ram[181] = "0b10111101011111111111000011101000";
        ram[182] = "0b00111110011000100010101011101010";
        ram[183] = "0b10111101100000110111010110010111";
        ram[184] = "0b00111011010111101001011000011110";
        ram[185] = "0b00111110000100100010111110000101";
        ram[186] = "0b00111110000110110100111011001000";
        ram[187] = "0b00111100100100010001010000000011";
        ram[188] = "0b00111101101001000001010010011001";
        ram[189] = "0b00111110011101001000001010001110";
        ram[190] = "0b10111101101100011111101001011110";
        ram[191] = "0b10111110001101001110110100000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibVr) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibVr_ram* meminst;


SC_CTOR(conv_2_conv_2_weibVr) {
meminst = new conv_2_conv_2_weibVr_ram("conv_2_conv_2_weibVr_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibVr() {
    delete meminst;
}


};//endmodule
#endif
