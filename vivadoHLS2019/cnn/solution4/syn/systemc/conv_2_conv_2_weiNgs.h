// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiNgs_H__
#define __conv_2_conv_2_weiNgs_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiNgs_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiNgs_ram) {
        ram[0] = "0b10111110010101100011001111111001";
        ram[1] = "0b10111011100011100001001101101110";
        ram[2] = "0b10111101111111101100011101000101";
        ram[3] = "0b00111100010000000001000110101011";
        ram[4] = "0b00111011100010010001101000101101";
        ram[5] = "0b10111101010100010111001100010000";
        ram[6] = "0b00111100100011001010100000010101";
        ram[7] = "0b00111101101000100000010011111100";
        ram[8] = "0b10111110010011010000111101010110";
        ram[9] = "0b00111101010001111001011010101000";
        ram[10] = "0b10111101100001000001010111010111";
        ram[11] = "0b00111101111011101110010000111001";
        ram[12] = "0b10111101101100111001110101100011";
        ram[13] = "0b00111101110101100001010110110110";
        ram[14] = "0b10111101111000011100110101111100";
        ram[15] = "0b10111101100101001001001010110000";
        ram[16] = "0b00111100110111101100001010000011";
        ram[17] = "0b00111100010101000001011011001101";
        ram[18] = "0b00111110010100101110111111111111";
        ram[19] = "0b00111110010111111010000011101000";
        ram[20] = "0b00111110000000001100000001101101";
        ram[21] = "0b10111110010010011100001100100111";
        ram[22] = "0b10111101111111010010000110000110";
        ram[23] = "0b00111101111001111000101011001010";
        ram[24] = "0b10111110000110110010010011100110";
        ram[25] = "0b10111110000001101110110001110010";
        ram[26] = "0b10111101001101010111100100111110";
        ram[27] = "0b00111110011100010001010010010100";
        ram[28] = "0b00111101101000010101001111111000";
        ram[29] = "0b10111110011101010111111010001111";
        ram[30] = "0b00111110000010110001010000001000";
        ram[31] = "0b10111101000011000110011001000011";
        ram[32] = "0b10111101101111101111111000000011";
        ram[33] = "0b00111110001110011110010101110001";
        ram[34] = "0b00111100101111100011100101100100";
        ram[35] = "0b00111110000111000110101101000101";
        ram[36] = "0b10111101110001000011011101011110";
        ram[37] = "0b10111101010110100110010100100100";
        ram[38] = "0b00111101101110100110111001111011";
        ram[39] = "0b10111101111010010100100010110100";
        ram[40] = "0b00111101101001101001000010110111";
        ram[41] = "0b10111110100000010010110001000101";
        ram[42] = "0b00111110010010001000001101110010";
        ram[43] = "0b00111101001000110000101101010101";
        ram[44] = "0b00111101101110011111110011110001";
        ram[45] = "0b10111101000110001100101001000001";
        ram[46] = "0b00111011010010001100000001010110";
        ram[47] = "0b00111101011111111110000110101100";
        ram[48] = "0b00111110011101100000110111111010";
        ram[49] = "0b10111110110010101100110001110011";
        ram[50] = "0b10111110001011000010010001011000";
        ram[51] = "0b10111110100001111110001010011000";
        ram[52] = "0b10111110001100011100110010011101";
        ram[53] = "0b00111110001001110011001000011111";
        ram[54] = "0b10111110011000110100010101011011";
        ram[55] = "0b00111101011110010111110000010001";
        ram[56] = "0b00111100101001110111000101100100";
        ram[57] = "0b00111101110001110101111011001011";
        ram[58] = "0b10111110000010010001101010011001";
        ram[59] = "0b00111101011110010100100011111001";
        ram[60] = "0b00111110000011101011000110001011";
        ram[61] = "0b10111110000100011110111100011001";
        ram[62] = "0b10111101110110110100111100011011";
        ram[63] = "0b10111100101000000100111010000100";
        ram[64] = "0b10111110001001010001000100100100";
        ram[65] = "0b10111110001000010110100001001111";
        ram[66] = "0b10111110101101110110100101110100";
        ram[67] = "0b00111100100111111011011111111000";
        ram[68] = "0b10111101100111011000101001001001";
        ram[69] = "0b00111101010101110101001010100100";
        ram[70] = "0b10111101011000111101001011000000";
        ram[71] = "0b10111101100100011101111001110011";
        ram[72] = "0b10111110111000111111110001111011";
        ram[73] = "0b00111110001111010001100011010001";
        ram[74] = "0b00111011101110001110010010100011";
        ram[75] = "0b00111100111011011001011011000101";
        ram[76] = "0b10111101001110100111101001001010";
        ram[77] = "0b10111110100010101110001111001111";
        ram[78] = "0b10111101101110011100101101000001";
        ram[79] = "0b10111101111100000110110000011101";
        ram[80] = "0b10111110011011110101010000100111";
        ram[81] = "0b00111101011111111011111000000011";
        ram[82] = "0b10111101101010011010100110111110";
        ram[83] = "0b00111110010110101010000100011010";
        ram[84] = "0b10111110010010111110111110111100";
        ram[85] = "0b10111100001101110001110100101000";
        ram[86] = "0b10111110110010101110001101110011";
        ram[87] = "0b00111110000101100000101010001111";
        ram[88] = "0b10111101101101100101011100100100";
        ram[89] = "0b10111101001011110000010000110101";
        ram[90] = "0b10111101001010111000010001101011";
        ram[91] = "0b10111110010010111100000111110100";
        ram[92] = "0b10111110010011000001111001101000";
        ram[93] = "0b10111110001110011001100110101100";
        ram[94] = "0b10111110100000110011000101001001";
        ram[95] = "0b00111110100111011010001010011111";
        ram[96] = "0b10111101001000011100101110111110";
        ram[97] = "0b10111110010101101110001000010110";
        ram[98] = "0b10111011111110011101011010100010";
        ram[99] = "0b00111100000101001101100011010000";
        ram[100] = "0b10111110000000010100101110001011";
        ram[101] = "0b00111100010001001010101110100001";
        ram[102] = "0b10111110011011010010101101000110";
        ram[103] = "0b10111110010111101011110011110111";
        ram[104] = "0b10111100101000110010101011011000";
        ram[105] = "0b00111101110101100000000100110011";
        ram[106] = "0b10111101010010110011100111100100";
        ram[107] = "0b00111101100010011011110110010100";
        ram[108] = "0b00111101010100000101100100011000";
        ram[109] = "0b00111110000010110010000110001000";
        ram[110] = "0b00111101101110001111010000110101";
        ram[111] = "0b10111110000000111111111110000111";
        ram[112] = "0b00111101100010110100110000111000";
        ram[113] = "0b10111110011000000100011000001001";
        ram[114] = "0b10111110011000101111000001111110";
        ram[115] = "0b00111101100000001011100000001101";
        ram[116] = "0b10111101101011101100110001000101";
        ram[117] = "0b00111110001001101000101101000110";
        ram[118] = "0b10111110001010100010101001110101";
        ram[119] = "0b10111101010001011001011010111011";
        ram[120] = "0b10111110000011101100111010111000";
        ram[121] = "0b00111101001111110011110001100100";
        ram[122] = "0b10111101101110110010011111011011";
        ram[123] = "0b10111101001001000111001110100001";
        ram[124] = "0b10111110110010110101111001011011";
        ram[125] = "0b10111111000011111000101101011001";
        ram[126] = "0b10111110011000100110100110100010";
        ram[127] = "0b00111101111011110111110000000110";
        ram[128] = "0b10111101110010100011001011010111";
        ram[129] = "0b10111101101100101111101001101010";
        ram[130] = "0b10111101110010110101010001101000";
        ram[131] = "0b00111100110101000010011100101110";
        ram[132] = "0b10111110100000100100110011010000";
        ram[133] = "0b00111110000111100101101100100111";
        ram[134] = "0b00111101001110111111010110111001";
        ram[135] = "0b10111101100000010110000001011000";
        ram[136] = "0b10111101011111000110010011100100";
        ram[137] = "0b10111101110001101001000001110010";
        ram[138] = "0b10111110000101011010010000001111";
        ram[139] = "0b10111110100101100010011010011101";
        ram[140] = "0b00111101100000101100010000000110";
        ram[141] = "0b10111110011011111010000100101101";
        ram[142] = "0b10111101001010011111110111011001";
        ram[143] = "0b10111101101010110100011110011001";
        ram[144] = "0b00111101001001111110011100001001";
        ram[145] = "0b00111100111001101001000000010000";
        ram[146] = "0b10111101101010000010111011001111";
        ram[147] = "0b10111100100010001000000111110100";
        ram[148] = "0b10111110101010110110100111011111";
        ram[149] = "0b10111100110100000111010000111010";
        ram[150] = "0b10111101110001110001111000010101";
        ram[151] = "0b00111110000010110000011000001101";
        ram[152] = "0b10111110000011101111000010101101";
        ram[153] = "0b10111100100111100101111010011001";
        ram[154] = "0b00111101110011001001100111010110";
        ram[155] = "0b10111100010000110001111001111011";
        ram[156] = "0b10111101001101111000000110111010";
        ram[157] = "0b10111101011001101100111000100101";
        ram[158] = "0b10111110100110110011110100000111";
        ram[159] = "0b00111101110000010001010011001101";
        ram[160] = "0b10111101101010111111001101110100";
        ram[161] = "0b00111011110010001101101010011100";
        ram[162] = "0b10111101001100110010010111011110";
        ram[163] = "0b10111110100110111101111101110111";
        ram[164] = "0b00111101000001000110110101000011";
        ram[165] = "0b10111101110100101111001110000110";
        ram[166] = "0b00111101000001000001101110111100";
        ram[167] = "0b00111110000101010111111111100001";
        ram[168] = "0b10111110100000010001100011010010";
        ram[169] = "0b00111101101100111110100101110111";
        ram[170] = "0b00111110000111101111110010101101";
        ram[171] = "0b00111110011100001011000010100000";
        ram[172] = "0b10111110000101001001001111010010";
        ram[173] = "0b10111110010111110000001100100101";
        ram[174] = "0b00111101110100101110101101001110";
        ram[175] = "0b00111101000100100011110001011000";
        ram[176] = "0b00111101101111111110100011110111";
        ram[177] = "0b10111110001000000001111001001101";
        ram[178] = "0b10111110000111100111101100010100";
        ram[179] = "0b00111110001110100111010000011101";
        ram[180] = "0b00111110100010111011101111111000";
        ram[181] = "0b10111101000110000101101110101000";
        ram[182] = "0b10111100101001101011000100110101";
        ram[183] = "0b00111100100100110001100001010101";
        ram[184] = "0b00111101111110101100001100001001";
        ram[185] = "0b00111101010011100001010001110001";
        ram[186] = "0b10111101111011110101000110100001";
        ram[187] = "0b00111110000010011110000010001010";
        ram[188] = "0b10111110100110111001100001110011";
        ram[189] = "0b00111110000100010001101100011000";
        ram[190] = "0b00111110001011010000100011100111";
        ram[191] = "0b00111110001110101010100111010111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiNgs) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiNgs_ram* meminst;


SC_CTOR(conv_2_conv_2_weiNgs) {
meminst = new conv_2_conv_2_weiNgs_ram("conv_2_conv_2_weiNgs_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiNgs() {
    delete meminst;
}


};//endmodule
#endif
