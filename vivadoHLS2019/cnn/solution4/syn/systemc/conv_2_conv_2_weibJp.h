// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibJp_H__
#define __conv_2_conv_2_weibJp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibJp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibJp_ram) {
        ram[0] = "0b00111101010001100001101101001101";
        ram[1] = "0b10111110010001101111100001111101";
        ram[2] = "0b10111101010001001000101001110101";
        ram[3] = "0b10111101101010010011111000101100";
        ram[4] = "0b00111100110111111111111011101000";
        ram[5] = "0b00111110000101000110101101000010";
        ram[6] = "0b00111110000011110011111101100001";
        ram[7] = "0b10111101100110011111100000110100";
        ram[8] = "0b00111011101001000011101110100111";
        ram[9] = "0b00111101110001010111000010100011";
        ram[10] = "0b00111011110101011011010101100110";
        ram[11] = "0b00111110011001100100010001001111";
        ram[12] = "0b10111101101010101011001111001011";
        ram[13] = "0b00111101100000100101011100001011";
        ram[14] = "0b00111011001100100011011111000011";
        ram[15] = "0b00111101101001100110010001101100";
        ram[16] = "0b10111100011001000011010110011010";
        ram[17] = "0b00111101110000100010010101010011";
        ram[18] = "0b00111100000110000100000110111101";
        ram[19] = "0b00111101111000111011010110101010";
        ram[20] = "0b10111110001011011101110000000110";
        ram[21] = "0b00111101100110011100010110000011";
        ram[22] = "0b00111101111001101100010001110001";
        ram[23] = "0b10111101011101110101100110111111";
        ram[24] = "0b00111110001010010000011100101100";
        ram[25] = "0b10111101100000001001011011001000";
        ram[26] = "0b10111101100101000101110000100001";
        ram[27] = "0b10111100100010110000111100100111";
        ram[28] = "0b10111101010000001010011101101100";
        ram[29] = "0b00111101001010011101011000011010";
        ram[30] = "0b10111101100000000001011011110100";
        ram[31] = "0b10111110100110001001001000100011";
        ram[32] = "0b00111101111001110110011010001101";
        ram[33] = "0b10111110010100101010001111001101";
        ram[34] = "0b00111101110110011110111100001111";
        ram[35] = "0b10111110001100000100111101010011";
        ram[36] = "0b10111110100011000001111011000000";
        ram[37] = "0b10111110000110110000011001110000";
        ram[38] = "0b00111100110101100110110110110101";
        ram[39] = "0b10111101000010110001011010001001";
        ram[40] = "0b00111101110001000111011110110111";
        ram[41] = "0b00111101100011110111101101011001";
        ram[42] = "0b10111100101110110010111100101010";
        ram[43] = "0b10111100100010010101111001110010";
        ram[44] = "0b00111101111111110110111101110001";
        ram[45] = "0b10111101101110101111110000011000";
        ram[46] = "0b00111101010101011100111000100011";
        ram[47] = "0b00111100100001111011100111010001";
        ram[48] = "0b00111101010111101101000111000100";
        ram[49] = "0b10111110100101101111010100010010";
        ram[50] = "0b00111101110101010000010011100000";
        ram[51] = "0b10111101111110111101110011010101";
        ram[52] = "0b10111101101100100011100011000100";
        ram[53] = "0b10111100110110100000111011111111";
        ram[54] = "0b00111101110100110101010111100100";
        ram[55] = "0b10111101110101001000001010000000";
        ram[56] = "0b00111101101001011101001100111110";
        ram[57] = "0b00111110000010101110111000111010";
        ram[58] = "0b00111101000111100000011101010110";
        ram[59] = "0b00111110000000101100100100110001";
        ram[60] = "0b00111100011111010101001001111001";
        ram[61] = "0b10111101101100100101101110101111";
        ram[62] = "0b00111100110011111101000001111100";
        ram[63] = "0b10111101111010111010000111111100";
        ram[64] = "0b00111101100010000110110100100111";
        ram[65] = "0b10111101101111001100000101110101";
        ram[66] = "0b10111110001110011101010011011000";
        ram[67] = "0b00111101111001010000000100011100";
        ram[68] = "0b10111101110011010110111010011001";
        ram[69] = "0b10111110001011010101011111010101";
        ram[70] = "0b00111101010111100010111011000110";
        ram[71] = "0b10111100000101111011101011001010";
        ram[72] = "0b00111101100011110010101111011111";
        ram[73] = "0b10111101010010000101101110000011";
        ram[74] = "0b10111110000001000100000111011010";
        ram[75] = "0b10111110000100001000011000010010";
        ram[76] = "0b00111011011011111110110000011001";
        ram[77] = "0b10111101110010101011100111011010";
        ram[78] = "0b00111110001010100000001001110100";
        ram[79] = "0b00111101100111011111110100010010";
        ram[80] = "0b10111101100110111110110010001011";
        ram[81] = "0b00111100101000100001110000011000";
        ram[82] = "0b10111110000100111000001000110100";
        ram[83] = "0b00111101001001011010111011110110";
        ram[84] = "0b10111011100010100100101001001010";
        ram[85] = "0b10111010111001111000000000101100";
        ram[86] = "0b00111101110111000001101101010011";
        ram[87] = "0b10111101111010011101110101000100";
        ram[88] = "0b00111101000011010101111010100100";
        ram[89] = "0b10111101010100110001011000000111";
        ram[90] = "0b10111101110000011000101100100101";
        ram[91] = "0b00111110010001001001010001000001";
        ram[92] = "0b00111100010011111000110101011100";
        ram[93] = "0b10111100001010110011001000100110";
        ram[94] = "0b10111101111111010101010011000110";
        ram[95] = "0b00111101011000010011101000100110";
        ram[96] = "0b10111100010101111001101001001010";
        ram[97] = "0b10111101100010100100001011011101";
        ram[98] = "0b00111100111010010000011100110111";
        ram[99] = "0b10111110011000010110011010011011";
        ram[100] = "0b10111110001000110010001001011110";
        ram[101] = "0b00111101101110010000111001111011";
        ram[102] = "0b00111101011011100101000011111010";
        ram[103] = "0b10111110000010001101010101101101";
        ram[104] = "0b00111110010000001101111000010011";
        ram[105] = "0b10111101100010100010110100001010";
        ram[106] = "0b00111101101111010111110011100001";
        ram[107] = "0b00111101001001101101111001010101";
        ram[108] = "0b00111110000011001010101110110011";
        ram[109] = "0b10111110000110000001111100000111";
        ram[110] = "0b10111100101101000111101110110010";
        ram[111] = "0b00111110000010011101010101011011";
        ram[112] = "0b00111101101001000100001101100001";
        ram[113] = "0b10111100010111010100010110011100";
        ram[114] = "0b00111010011011100010010000101100";
        ram[115] = "0b00111100100111110111000111111010";
        ram[116] = "0b00111101101100111101000011100011";
        ram[117] = "0b00111101110111111010111111101011";
        ram[118] = "0b00111101001010000100000000111001";
        ram[119] = "0b10111110110010110001000100010101";
        ram[120] = "0b10111100110001110001011110011101";
        ram[121] = "0b10111110000110100100011111111100";
        ram[122] = "0b00111100111100110011000101000001";
        ram[123] = "0b10111101100111011010011010000000";
        ram[124] = "0b10111101100000010011000010111101";
        ram[125] = "0b10111101010100000001001101001011";
        ram[126] = "0b00111101111011011110101110111000";
        ram[127] = "0b10111101001111000110000011101001";
        ram[128] = "0b10111101101111101000010011101100";
        ram[129] = "0b10111101101010111001001110111000";
        ram[130] = "0b10111110010101100000001011100110";
        ram[131] = "0b10111101101100001101101111000011";
        ram[132] = "0b10111101100111110101100000011100";
        ram[133] = "0b10111101111110100001100011000011";
        ram[134] = "0b00111110000010011101000111001110";
        ram[135] = "0b00111110000001010111001010011111";
        ram[136] = "0b00111110001001111100101111011010";
        ram[137] = "0b10111110010001100010110001000011";
        ram[138] = "0b10111100101100010011001110100001";
        ram[139] = "0b10111110001110000000010100001110";
        ram[140] = "0b00111101010100000110101111000100";
        ram[141] = "0b00111110000011011011000010010001";
        ram[142] = "0b00111110010001011101101101010001";
        ram[143] = "0b10111110000001110010000100010000";
        ram[144] = "0b10111101111001011100101000111011";
        ram[145] = "0b00111101011011100011010001011100";
        ram[146] = "0b10111101101101001010001111011011";
        ram[147] = "0b10111100000110101000001001000111";
        ram[148] = "0b10111011101101111101110101111000";
        ram[149] = "0b10111110000100001001110010000011";
        ram[150] = "0b10111101001011110010011011011100";
        ram[151] = "0b10111100111010100000011000010001";
        ram[152] = "0b00111110010100110101001111101010";
        ram[153] = "0b00111100111011011100100010101000";
        ram[154] = "0b10111110011011001000010100101101";
        ram[155] = "0b00111101101010010101101110001000";
        ram[156] = "0b00111101001001110110010000001011";
        ram[157] = "0b10111101001011001011111110001011";
        ram[158] = "0b10111110001010111111000101011001";
        ram[159] = "0b00111101011110110111101101101010";
        ram[160] = "0b10111101011100110110111010100001";
        ram[161] = "0b00111101001001011011000010111000";
        ram[162] = "0b10111110101111010011111110100110";
        ram[163] = "0b10111110101010111011110100001100";
        ram[164] = "0b10111101010011101001100011100010";
        ram[165] = "0b00111101111100000110010000001011";
        ram[166] = "0b00111100001101010111010011101101";
        ram[167] = "0b00111101110100001101101011010101";
        ram[168] = "0b00111100110010000101101001110010";
        ram[169] = "0b00111101001101110011000011110111";
        ram[170] = "0b10111100011001111011011100010011";
        ram[171] = "0b00111101101101010110011001111011";
        ram[172] = "0b10111101100101011011110010110010";
        ram[173] = "0b10111100000001111101011110011101";
        ram[174] = "0b00111110010111001001000100010001";
        ram[175] = "0b00111101111111111101011110010110";
        ram[176] = "0b10111101110101101101100001010000";
        ram[177] = "0b00111110001010100010101111000110";
        ram[178] = "0b00111110010011010000101011101001";
        ram[179] = "0b10111101110101010100000011100011";
        ram[180] = "0b00111110001010010100000010000100";
        ram[181] = "0b10111110000001110101011101110101";
        ram[182] = "0b10111100111111110010010000110010";
        ram[183] = "0b10111110000001011110100100111011";
        ram[184] = "0b10111001111110110010001001100100";
        ram[185] = "0b10111100011001111011100111110010";
        ram[186] = "0b10111101110011101100100110010101";
        ram[187] = "0b00111101011110001010101010000101";
        ram[188] = "0b00111011101000111001100011111010";
        ram[189] = "0b00111101100000010111101100111100";
        ram[190] = "0b10111110001010110100001100110101";
        ram[191] = "0b10111100100101111100111110101010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibJp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibJp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibJp) {
meminst = new conv_2_conv_2_weibJp_ram("conv_2_conv_2_weibJp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibJp() {
    delete meminst;
}


};//endmodule
#endif
