// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibwn_H__
#define __conv_2_conv_2_weibwn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibwn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibwn_ram) {
        ram[0] = "0b00111101111100111011110001111000";
        ram[1] = "0b00111110000100100111111110110100";
        ram[2] = "0b00111101101101001001001111101011";
        ram[3] = "0b10111110100011110101101101010101";
        ram[4] = "0b10111101010110001000100101000010";
        ram[5] = "0b10111101101100110011010100010101";
        ram[6] = "0b10111101101011100101100011110111";
        ram[7] = "0b10111101000111010000100111010111";
        ram[8] = "0b10111110100010000110011001111111";
        ram[9] = "0b10111110000010011010101110110010";
        ram[10] = "0b00111101101001110101110011011001";
        ram[11] = "0b00111110000101111011101001011101";
        ram[12] = "0b10111110010011000101001101011111";
        ram[13] = "0b10111111000010011010101001010001";
        ram[14] = "0b10111110110000111101101101000100";
        ram[15] = "0b10111110110111100000111111111011";
        ram[16] = "0b10111101110101101000111110101101";
        ram[17] = "0b10111110000010001000110010111111";
        ram[18] = "0b10111110100100000111000101111010";
        ram[19] = "0b00111101110100110001100011100001";
        ram[20] = "0b10111110010101101100001010110001";
        ram[21] = "0b10111101110000100111010111001000";
        ram[22] = "0b10111101001011100011100111000001";
        ram[23] = "0b10111110100110111110101011101100";
        ram[24] = "0b10111101010100010001010100101111";
        ram[25] = "0b10111110010001101100111101101011";
        ram[26] = "0b10111101111001100011100010010100";
        ram[27] = "0b00111100101011011011011111111010";
        ram[28] = "0b10111110011111001000101011100011";
        ram[29] = "0b00111101101011111110000110100111";
        ram[30] = "0b10111101110110101110101110101110";
        ram[31] = "0b00111110011000101101110111000011";
        ram[32] = "0b10111100000000100000010111111110";
        ram[33] = "0b10111110010001010100110011010110";
        ram[34] = "0b10111110000111011110101101000110";
        ram[35] = "0b10111101001001001110001111111101";
        ram[36] = "0b00111101001001011011011011100011";
        ram[37] = "0b10111110011100111100110100101110";
        ram[38] = "0b00111101100101010000100110000001";
        ram[39] = "0b10111110001111010011010111000101";
        ram[40] = "0b00111101101000111011001101000101";
        ram[41] = "0b10111110101011011110011010000000";
        ram[42] = "0b00111101001010000101011001110110";
        ram[43] = "0b10111110100010001100100111001111";
        ram[44] = "0b10111100110000110110010001011101";
        ram[45] = "0b10111110010101010010011110000100";
        ram[46] = "0b10111110101001001000100101010111";
        ram[47] = "0b10111110100110110000010101110101";
        ram[48] = "0b00111101101101010100110011011010";
        ram[49] = "0b10111101110000001101000000111111";
        ram[50] = "0b10111101110100111001000101111110";
        ram[51] = "0b00111101111100110000101010101011";
        ram[52] = "0b00111110000001100101001101000100";
        ram[53] = "0b10111110010011111010110001001010";
        ram[54] = "0b00111110001100010101101011011000";
        ram[55] = "0b00111100110001010111000111110110";
        ram[56] = "0b10111110010111100110100101110111";
        ram[57] = "0b00111101011000010100011110111100";
        ram[58] = "0b10111101001100111100011011111111";
        ram[59] = "0b10111110100101101010010111001111";
        ram[60] = "0b10111101100100000110001011011100";
        ram[61] = "0b10111110000111110010000100011011";
        ram[62] = "0b10111110000000010011010111100100";
        ram[63] = "0b10111110011001111011110111011111";
        ram[64] = "0b00111101010110111111101010111001";
        ram[65] = "0b10111110010111010111111101110011";
        ram[66] = "0b00111101100011101011000111100010";
        ram[67] = "0b00111101110100001110101100000101";
        ram[68] = "0b10111110001010100100000111001010";
        ram[69] = "0b10111110010110001111100011111100";
        ram[70] = "0b10111100110010010011100011000111";
        ram[71] = "0b10111100100110010110111011001011";
        ram[72] = "0b10111110000010111110001011111100";
        ram[73] = "0b00111011011110110011100101100001";
        ram[74] = "0b10111100111110001011110110011001";
        ram[75] = "0b10111110100000100100000000000110";
        ram[76] = "0b10111101001100101100000010111110";
        ram[77] = "0b10111110101000111110100101011001";
        ram[78] = "0b10111110101010110100001010010011";
        ram[79] = "0b10111110100111011001101101110101";
        ram[80] = "0b10111110000100011111110111111111";
        ram[81] = "0b10111101100110100100001111011111";
        ram[82] = "0b10111111000000110100000010110110";
        ram[83] = "0b00111100001101100111000010000101";
        ram[84] = "0b10111100010000111000011110110100";
        ram[85] = "0b10111110000000111010110000011101";
        ram[86] = "0b10111110101100001110110000001001";
        ram[87] = "0b10111110101001101001001100011101";
        ram[88] = "0b10111110011001100110111100110110";
        ram[89] = "0b10111101000111010110101000101001";
        ram[90] = "0b10111101010100101000001101110001";
        ram[91] = "0b00111101110001001100001101011100";
        ram[92] = "0b10111110100010110001101011110000";
        ram[93] = "0b10111101010111010100110100101010";
        ram[94] = "0b10111110010010110101000111110001";
        ram[95] = "0b00111110100001011000001011010011";
        ram[96] = "0b10111101000001100100001111001011";
        ram[97] = "0b00111110001100010101100010110001";
        ram[98] = "0b10111100010100100001110100101110";
        ram[99] = "0b00111101000101010000100111001001";
        ram[100] = "0b00111110000011101111011011100001";
        ram[101] = "0b10111101001000000011000011000000";
        ram[102] = "0b00111101010010100000101000001111";
        ram[103] = "0b10111110000101001100111011100000";
        ram[104] = "0b10111110000010000001000110011101";
        ram[105] = "0b10111101111001011001000101110100";
        ram[106] = "0b10111101101000011011101111110111";
        ram[107] = "0b10111101100010010100111101111011";
        ram[108] = "0b10111101100100011010000010000001";
        ram[109] = "0b10111101101110111100000111110110";
        ram[110] = "0b10111110100000101100100100010000";
        ram[111] = "0b00111110001001100100000011100010";
        ram[112] = "0b00111110000001001101011000110111";
        ram[113] = "0b00111110010100101110100010101110";
        ram[114] = "0b10111101101100001011110001110101";
        ram[115] = "0b10111110010101111100011100111111";
        ram[116] = "0b00111110001000100101100100000010";
        ram[117] = "0b10111110001001011101010011001001";
        ram[118] = "0b00111101101011010100011111101010";
        ram[119] = "0b00111101110011101101011110010001";
        ram[120] = "0b10111101100000110110010001101111";
        ram[121] = "0b10111101000011100111111000011000";
        ram[122] = "0b10111101011111000100000111111000";
        ram[123] = "0b10111110101111101110011110011001";
        ram[124] = "0b10111101101001111110000101010101";
        ram[125] = "0b10111110100000011101011000010000";
        ram[126] = "0b10111110000100010010001010101001";
        ram[127] = "0b00111100100100111000101001111000";
        ram[128] = "0b10111100001011001000110111110011";
        ram[129] = "0b10111110101010010101101101001000";
        ram[130] = "0b10111110100000110000100110011000";
        ram[131] = "0b00111110000000111000011101011110";
        ram[132] = "0b10111110000111101111001110000001";
        ram[133] = "0b00111100001010101011100100100000";
        ram[134] = "0b00111110000011001100011111110110";
        ram[135] = "0b10111110000101011001101011011101";
        ram[136] = "0b00111101000110111111010101011010";
        ram[137] = "0b10111110011101001100011001101101";
        ram[138] = "0b10111101000001111111111100011010";
        ram[139] = "0b10111100101010110010101101101001";
        ram[140] = "0b00111101000011000101011110100101";
        ram[141] = "0b10111101110111011001001111011001";
        ram[142] = "0b00111101101110101011011110010110";
        ram[143] = "0b10111101100000101110011001010111";
        ram[144] = "0b10111110010110010100110000101011";
        ram[145] = "0b00111110100100000000010001100110";
        ram[146] = "0b10111101000011001100011011110010";
        ram[147] = "0b10111110011000001101011101101000";
        ram[148] = "0b00111110000100001100110111011101";
        ram[149] = "0b10111110100000000000111011110010";
        ram[150] = "0b10111110101101010011101101011001";
        ram[151] = "0b10111110100110100000101101001111";
        ram[152] = "0b10111101101111100100010000001010";
        ram[153] = "0b00111110001100111101001111011010";
        ram[154] = "0b10111101100100100111110111100111";
        ram[155] = "0b00111101001100001110011001011000";
        ram[156] = "0b00111101010010000001010001111100";
        ram[157] = "0b10111011011000001010100101000111";
        ram[158] = "0b00111101010010010010010110001010";
        ram[159] = "0b00111101101010010111100110110010";
        ram[160] = "0b00111101100100111101010010101000";
        ram[161] = "0b00111110000001100010110111011111";
        ram[162] = "0b10111110000101000100100010010111";
        ram[163] = "0b10111110001011010100000000111011";
        ram[164] = "0b00111110010011111011000101001011";
        ram[165] = "0b10111101111111011011011111011101";
        ram[166] = "0b10111110011011110111110000001000";
        ram[167] = "0b10111100101010011000010011011001";
        ram[168] = "0b10111110001011001000011000111011";
        ram[169] = "0b00111110010000000010001110100000";
        ram[170] = "0b10111110100001000100011101100001";
        ram[171] = "0b00111110001001101101101001000100";
        ram[172] = "0b10111110011101101101000101101011";
        ram[173] = "0b00111110010100100100100011111111";
        ram[174] = "0b00111100100110110001101001101101";
        ram[175] = "0b00111110001001001101001001000011";
        ram[176] = "0b10111110010101111001001010101110";
        ram[177] = "0b00111101110101111011010010010010";
        ram[178] = "0b00111101011000001101101000010000";
        ram[179] = "0b10111110001001001001001101001111";
        ram[180] = "0b00111101100011100101011101000000";
        ram[181] = "0b10111110100011111100000110101111";
        ram[182] = "0b10111110010101010010010001001000";
        ram[183] = "0b00111110001000010111001111111001";
        ram[184] = "0b10111101000100100111000100010111";
        ram[185] = "0b10111101100001111011001110000110";
        ram[186] = "0b10111110000001000110010010111110";
        ram[187] = "0b10111110101011001011111111001000";
        ram[188] = "0b00111011011011011010111001001101";
        ram[189] = "0b00111101001101011011001111101111";
        ram[190] = "0b10111101110011010000001110001100";
        ram[191] = "0b10111101000100110010000000110010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibwn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibwn_ram* meminst;


SC_CTOR(conv_2_conv_2_weibwn) {
meminst = new conv_2_conv_2_weibwn_ram("conv_2_conv_2_weibwn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibwn() {
    delete meminst;
}


};//endmodule
#endif
