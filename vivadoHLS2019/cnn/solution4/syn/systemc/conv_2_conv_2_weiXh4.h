// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiXh4_H__
#define __conv_2_conv_2_weiXh4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiXh4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiXh4_ram) {
        ram[0] = "0b10111100111011110100100110111010";
        ram[1] = "0b00111101111101101100001110001101";
        ram[2] = "0b10111101100111010011111111110111";
        ram[3] = "0b10111101101011110011100011011110";
        ram[4] = "0b00111101001101110100111011100001";
        ram[5] = "0b10111100011000101000000011100000";
        ram[6] = "0b00111101100100101011001100001100";
        ram[7] = "0b10111101101111001110010101110101";
        ram[8] = "0b10111101011000100111010110111001";
        ram[9] = "0b00111101001110011111010100110110";
        ram[10] = "0b00111101111011010100100000101001";
        ram[11] = "0b10111100100110110100000100101011";
        ram[12] = "0b00111110000111000001001101111100";
        ram[13] = "0b00111100000011001011011110011001";
        ram[14] = "0b10111100011011011010111110100001";
        ram[15] = "0b10111101100011110101110001000110";
        ram[16] = "0b00111101101001100101111111111111";
        ram[17] = "0b00111100001101001111000010011110";
        ram[18] = "0b10111101000101111011010100001011";
        ram[19] = "0b10111100101101000101111111110011";
        ram[20] = "0b00111101110111010100001010011110";
        ram[21] = "0b10111110000111010111001100010010";
        ram[22] = "0b10111110000011000001000110110001";
        ram[23] = "0b10111101110111101001011110001010";
        ram[24] = "0b10111100100100010000011001010100";
        ram[25] = "0b10111101101011101011000001010100";
        ram[26] = "0b10111011100011000101111100000001";
        ram[27] = "0b10111110100100101100010101110111";
        ram[28] = "0b00111101001101011000101001111101";
        ram[29] = "0b00111100101001011001111011110110";
        ram[30] = "0b00111101011100101001001010010011";
        ram[31] = "0b10111100110010100011001010010010";
        ram[32] = "0b00111101110011100111111110100101";
        ram[33] = "0b00111101100101011011101011100001";
        ram[34] = "0b10111100101100110111010000101000";
        ram[35] = "0b10111101000100101001010010010101";
        ram[36] = "0b10111110010000000001011101000011";
        ram[37] = "0b00111101011110110100010111101111";
        ram[38] = "0b00111101100000100101001101011010";
        ram[39] = "0b00111101011100110110101001000001";
        ram[40] = "0b10111110000101010101100010100111";
        ram[41] = "0b10111011101011100001101011111010";
        ram[42] = "0b00111101001010100011101000110000";
        ram[43] = "0b10111101010010101110100101010110";
        ram[44] = "0b10111011000001011000101000010110";
        ram[45] = "0b10111100000011110101100110001101";
        ram[46] = "0b00111101101110111101101101011100";
        ram[47] = "0b00111101100011001100101001011011";
        ram[48] = "0b00111101000100011110000101100100";
        ram[49] = "0b10111110000111010101100100110000";
        ram[50] = "0b00111100111111101110011110000011";
        ram[51] = "0b00111110001111001001011001001011";
        ram[52] = "0b10111101110000011101110110000110";
        ram[53] = "0b10111110011010011010000101000000";
        ram[54] = "0b10111110001001000110010100011101";
        ram[55] = "0b10111101110010001110101101000010";
        ram[56] = "0b10111101101010000010100011011011";
        ram[57] = "0b00111101101100110110001101111010";
        ram[58] = "0b10111110010101001011111100001001";
        ram[59] = "0b00111110001000001111000010100111";
        ram[60] = "0b00111101110010110000010001110110";
        ram[61] = "0b10111101111011000101011101011011";
        ram[62] = "0b00111101010110101000101111101010";
        ram[63] = "0b10111100010010111001010000001001";
        ram[64] = "0b00111101011101100001110010001000";
        ram[65] = "0b00111101110110001001111110110101";
        ram[66] = "0b00111101001100011110001011000111";
        ram[67] = "0b00111110001000010101101100110111";
        ram[68] = "0b10111101001100110100110011100110";
        ram[69] = "0b00111101101011011101001011001100";
        ram[70] = "0b00111101110001110001100100100111";
        ram[71] = "0b10111101110001010101100000101100";
        ram[72] = "0b00111110000101011110101101100101";
        ram[73] = "0b00111101010000000101010001011001";
        ram[74] = "0b00111101000001110100111000110001";
        ram[75] = "0b10111101000011001110011100111011";
        ram[76] = "0b00111101111110011101000100011110";
        ram[77] = "0b10111100100111101101100010001101";
        ram[78] = "0b00111101011101000110111011000011";
        ram[79] = "0b00111011010010111110010011110111";
        ram[80] = "0b00111100001100101010001011100111";
        ram[81] = "0b10111101010000000011110011100100";
        ram[82] = "0b10111011100010111100101100000111";
        ram[83] = "0b00111100111010000000011101100010";
        ram[84] = "0b10111110011001101110111010010011";
        ram[85] = "0b10111100000010101010101010000110";
        ram[86] = "0b10111101101101111000011110010000";
        ram[87] = "0b10111101100100011101101000110110";
        ram[88] = "0b00111011111011010010011001101100";
        ram[89] = "0b00111101000101001001010111100100";
        ram[90] = "0b00111100100001001000111100111111";
        ram[91] = "0b10111110001111001111101010010110";
        ram[92] = "0b00111100011011001111001110111101";
        ram[93] = "0b10111011011110101101110111101011";
        ram[94] = "0b00111101110001011011011110001000";
        ram[95] = "0b00111011000111110000010011001010";
        ram[96] = "0b10111011111101000010101000000110";
        ram[97] = "0b10111101100111001000100100101110";
        ram[98] = "0b10111101010101100001011001000010";
        ram[99] = "0b10111110011010101010111000101001";
        ram[100] = "0b00111110000001100011110001110100";
        ram[101] = "0b10111110010111101111111010011110";
        ram[102] = "0b10111100010000110000010100100011";
        ram[103] = "0b10111101010000010001001010011100";
        ram[104] = "0b10111101110100100001111101011001";
        ram[105] = "0b00111101010111011010111100101001";
        ram[106] = "0b00111101111100101111010011010000";
        ram[107] = "0b00111100101111100101011100010000";
        ram[108] = "0b10111110000101000111111110100111";
        ram[109] = "0b00111110001111000010110011000111";
        ram[110] = "0b00111110001011000110010100100001";
        ram[111] = "0b00111100111101111100100011110000";
        ram[112] = "0b00111101101010101011101010100110";
        ram[113] = "0b00111100011111000101011010001000";
        ram[114] = "0b00111100110100101010101010110010";
        ram[115] = "0b10111100101111101010000000100111";
        ram[116] = "0b10111101010000111101001011011010";
        ram[117] = "0b10111100100001011100101100000010";
        ram[118] = "0b10111100011011101111110001011010";
        ram[119] = "0b10111101001101001001000010111001";
        ram[120] = "0b10111100111101100101000001111111";
        ram[121] = "0b00111100011001101110010000101100";
        ram[122] = "0b10111110001101010111100001011000";
        ram[123] = "0b00111101011111110111010011000010";
        ram[124] = "0b00111100101110011110110110101010";
        ram[125] = "0b00111101000010000111000101001100";
        ram[126] = "0b00111101101001110010001011101111";
        ram[127] = "0b00111101010100100111000001001011";
        ram[128] = "0b10111100110011001101101000111101";
        ram[129] = "0b10111101100001010001101101010111";
        ram[130] = "0b00111101010110001000010011011010";
        ram[131] = "0b10111011110100000001101100110101";
        ram[132] = "0b00111101101010110111110010001010";
        ram[133] = "0b10111110001001001010010101010010";
        ram[134] = "0b00111101101110011101010111000000";
        ram[135] = "0b10111110000000000011111000110100";
        ram[136] = "0b00111101110100101100110010111001";
        ram[137] = "0b10111110001010001001111101001111";
        ram[138] = "0b10111110101111100010111001010000";
        ram[139] = "0b10111110001001100011000100000000";
        ram[140] = "0b00111101100110010001010000101101";
        ram[141] = "0b00111100000001110111111111010110";
        ram[142] = "0b00111110000110111001100100011101";
        ram[143] = "0b00111101100100100110011010110110";
        ram[144] = "0b10111101010000001011000000001111";
        ram[145] = "0b00111100110101001010011111001010";
        ram[146] = "0b10111101010111101110100110101000";
        ram[147] = "0b00111110001010111000000101101100";
        ram[148] = "0b10111101101001111100110000011001";
        ram[149] = "0b00111011010101001000111000110010";
        ram[150] = "0b00111101001010100000111001011010";
        ram[151] = "0b10111101101001000111001011110101";
        ram[152] = "0b00111101111110001100111001000100";
        ram[153] = "0b00111101110010101010111010001100";
        ram[154] = "0b10111110001110101000000010110001";
        ram[155] = "0b00111101110100111111111101100101";
        ram[156] = "0b00111110000000110110101011111010";
        ram[157] = "0b10111101110010100011010111111011";
        ram[158] = "0b10111101010001100110001000101010";
        ram[159] = "0b00111101001111000000011011011010";
        ram[160] = "0b10111110011001001100010100000010";
        ram[161] = "0b10111101000110100001100010001001";
        ram[162] = "0b10111101000001000110000110111011";
        ram[163] = "0b10111110010111111000010011000110";
        ram[164] = "0b00111101100111011010001101011100";
        ram[165] = "0b10111110100001001011010000101100";
        ram[166] = "0b00111101110101110011011000101101";
        ram[167] = "0b10111101011011110010011000001001";
        ram[168] = "0b00111101010000010011000011010000";
        ram[169] = "0b00111101100000001101110000110001";
        ram[170] = "0b00111110000110100111100000001110";
        ram[171] = "0b00111100000110010111101010101001";
        ram[172] = "0b10111101101011101110100100101111";
        ram[173] = "0b10111110011101101110000011001001";
        ram[174] = "0b00111101111100101011110111000111";
        ram[175] = "0b10111100110100011010111001010110";
        ram[176] = "0b10111101101100001101001010011110";
        ram[177] = "0b10111101101011100100001010001100";
        ram[178] = "0b00111110011001110001000101001001";
        ram[179] = "0b10111110001011101011011110010100";
        ram[180] = "0b00111101100101011101101011100000";
        ram[181] = "0b00111110001011100111001101100000";
        ram[182] = "0b10111101101010000110000000011110";
        ram[183] = "0b00111110001100111111100101000111";
        ram[184] = "0b10111101110010101011010100001000";
        ram[185] = "0b10111100011000001101100000010110";
        ram[186] = "0b10111101010001101100011101001100";
        ram[187] = "0b10111101000010101101101110100110";
        ram[188] = "0b00111110010011100000010100001001";
        ram[189] = "0b00111110010111000100011101110111";
        ram[190] = "0b10111101111011000101111101001110";
        ram[191] = "0b10111110000110100000101110010100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiXh4) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiXh4_ram* meminst;


SC_CTOR(conv_2_conv_2_weiXh4) {
meminst = new conv_2_conv_2_weiXh4_ram("conv_2_conv_2_weiXh4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiXh4() {
    delete meminst;
}


};//endmodule
#endif
