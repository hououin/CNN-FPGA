// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiBew_H__
#define __conv_2_conv_2_weiBew_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiBew_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiBew_ram) {
        ram[0] = "0b00111101110010111000011000000001";
        ram[1] = "0b10111110010110010111101110100100";
        ram[2] = "0b10111101100011101101110100000110";
        ram[3] = "0b00111101000010010100001101010111";
        ram[4] = "0b10111100111101010010001011000000";
        ram[5] = "0b10111110001001100001110000110011";
        ram[6] = "0b10111101011101001010000100101010";
        ram[7] = "0b10111110000110111010011011110110";
        ram[8] = "0b00111110001111010101111101101111";
        ram[9] = "0b10111110010001101001000000011001";
        ram[10] = "0b10111101011011010011111011001000";
        ram[11] = "0b10111110010001011011100001000110";
        ram[12] = "0b10111101010101010010110011011011";
        ram[13] = "0b10111101000101000001011111010000";
        ram[14] = "0b00111110011001011010100001100111";
        ram[15] = "0b10111101010000011010001011010010";
        ram[16] = "0b10111110011001001111100110101100";
        ram[17] = "0b00111110000100000110000010001100";
        ram[18] = "0b00111101101111111010010101101000";
        ram[19] = "0b10111011100010011111011100001010";
        ram[20] = "0b10111110010011110111001100100111";
        ram[21] = "0b10111100100100011100100010101110";
        ram[22] = "0b10111110001101111000001110101011";
        ram[23] = "0b10111110000100000101010011001100";
        ram[24] = "0b10111101001110001011111111101110";
        ram[25] = "0b00111110000000101111010000110001";
        ram[26] = "0b00111100011001011010001110110011";
        ram[27] = "0b00111101110110001011110011010011";
        ram[28] = "0b00111100110010011010011000011100";
        ram[29] = "0b00111101101101100100011010000100";
        ram[30] = "0b10111101010011100110110111111100";
        ram[31] = "0b10111100101011001100101001101100";
        ram[32] = "0b10111101000101110001001010011111";
        ram[33] = "0b10111110011110111000101110110110";
        ram[34] = "0b10111101101101110000100001010110";
        ram[35] = "0b00111110001110010100110110111100";
        ram[36] = "0b10111110001001100110100001011110";
        ram[37] = "0b00111100000000110010000000000011";
        ram[38] = "0b00111101010010011010011000000101";
        ram[39] = "0b00111100111110110011000101001011";
        ram[40] = "0b00111100110101001111001110000000";
        ram[41] = "0b00111101100110111110011101001101";
        ram[42] = "0b10111110010100111000010101001000";
        ram[43] = "0b00111101111101001011001001101101";
        ram[44] = "0b00111100101101010010011011100100";
        ram[45] = "0b10111110001111100101100010000100";
        ram[46] = "0b10111100100000010100111111000101";
        ram[47] = "0b00111110000001111111101000000010";
        ram[48] = "0b10111110011001010101100100001111";
        ram[49] = "0b10111110111001110011111101110001";
        ram[50] = "0b10111110011111100001110100010101";
        ram[51] = "0b10111101010110110101011111011011";
        ram[52] = "0b10111110101000010100010001101110";
        ram[53] = "0b00111110000011001011001111101000";
        ram[54] = "0b00111101011001101000100000010101";
        ram[55] = "0b10111110010101010111000011111011";
        ram[56] = "0b00111101000110001010111100111011";
        ram[57] = "0b10111101111011101100011010100000";
        ram[58] = "0b00111101100100011101101110010111";
        ram[59] = "0b10111100101100011111001000001110";
        ram[60] = "0b00111101100001110000101101111000";
        ram[61] = "0b00111101101010000110001011000111";
        ram[62] = "0b00111101111011111001100001011110";
        ram[63] = "0b00111101100110111100000111101110";
        ram[64] = "0b10111110000001011110011110010011";
        ram[65] = "0b10111101111001111000001111010001";
        ram[66] = "0b00111101001100001111101000101011";
        ram[67] = "0b10111110001000010101100000010101";
        ram[68] = "0b10111110001000100101111111011110";
        ram[69] = "0b10111110001110010100001100000010";
        ram[70] = "0b10111110110000001101110001010001";
        ram[71] = "0b10111101101001000010001010110100";
        ram[72] = "0b00111101101010000111010111101110";
        ram[73] = "0b10111101010111010000100011011100";
        ram[74] = "0b00111011110001011110000100110110";
        ram[75] = "0b10111100001101111111100010111110";
        ram[76] = "0b10111110011011100010001011111110";
        ram[77] = "0b10111110110000011011101101101001";
        ram[78] = "0b00111110010110110000010101001101";
        ram[79] = "0b00111101100100101111010011110111";
        ram[80] = "0b10111110100101100011011000101101";
        ram[81] = "0b10111110000010001101101111111110";
        ram[82] = "0b10111110100011000110110000000101";
        ram[83] = "0b10111101011110001001000111101011";
        ram[84] = "0b10111110100001101001010111111001";
        ram[85] = "0b10111100011001001010110001011001";
        ram[86] = "0b10111110100101000010001001100011";
        ram[87] = "0b00111011101100101111111101110110";
        ram[88] = "0b10111110010101001000100010000010";
        ram[89] = "0b10111101111110100110111111100011";
        ram[90] = "0b10111101100100000101110000010000";
        ram[91] = "0b00111101111101111000010001000101";
        ram[92] = "0b10111011100011011111001100000111";
        ram[93] = "0b00111100110111100110101011011100";
        ram[94] = "0b10111110000000010110001110000001";
        ram[95] = "0b00111011100001100010111011101110";
        ram[96] = "0b10111110100001000100110100011011";
        ram[97] = "0b10111110100001001111101110001011";
        ram[98] = "0b10111101011100011011111101010001";
        ram[99] = "0b10111011010010111001011110010010";
        ram[100] = "0b10111110100101110001010011101110";
        ram[101] = "0b00111101100101011110111100110010";
        ram[102] = "0b10111101010101101010101111010001";
        ram[103] = "0b00111101011001101101011001111111";
        ram[104] = "0b00111101001100010111101001101111";
        ram[105] = "0b10111110000000101000000111001011";
        ram[106] = "0b10111110110100010010101001010010";
        ram[107] = "0b10111101001011100001010100110001";
        ram[108] = "0b10111100100111111101101110000101";
        ram[109] = "0b10111101101011101101010111100101";
        ram[110] = "0b00111101010011010100111000010110";
        ram[111] = "0b00111110001010011110100001100010";
        ram[112] = "0b10111110000100100110001100111110";
        ram[113] = "0b10111110100011001101000001001000";
        ram[114] = "0b10111110110010111011100101111000";
        ram[115] = "0b00111010100001010000100101000011";
        ram[116] = "0b10111110001011001000001001011110";
        ram[117] = "0b00111110000000101110000110011101";
        ram[118] = "0b00111110001010010010111110000100";
        ram[119] = "0b10111101111100100011110011000111";
        ram[120] = "0b10111101011100100010001001111010";
        ram[121] = "0b10111110001000110110110100100000";
        ram[122] = "0b00111110001010001111001110011011";
        ram[123] = "0b10111110001000101100000101101010";
        ram[124] = "0b10111101100111101011110001100001";
        ram[125] = "0b10111101010010001101010000011110";
        ram[126] = "0b10111110000101111111011111100011";
        ram[127] = "0b10111101100100110000101000110110";
        ram[128] = "0b10111101100000111000001111000010";
        ram[129] = "0b00111110001111101101100000101011";
        ram[130] = "0b00111110001010011001000011101000";
        ram[131] = "0b10111101001101000000101010101100";
        ram[132] = "0b10111111000011101000000110110011";
        ram[133] = "0b10111101001001000111100011100001";
        ram[134] = "0b10111110101000000110110101010010";
        ram[135] = "0b10111110000100011010001010100111";
        ram[136] = "0b10111110100000000101000010100111";
        ram[137] = "0b10111010001011101111111000110101";
        ram[138] = "0b00111011101010011001010001100001";
        ram[139] = "0b10111100110100110110100001111100";
        ram[140] = "0b10111110110010000001110111101000";
        ram[141] = "0b10111110010000111010110000000010";
        ram[142] = "0b10111101101010110000110000100001";
        ram[143] = "0b10111101011011110000111111111000";
        ram[144] = "0b00111101100110101000001010010000";
        ram[145] = "0b10111101110001001010011110100111";
        ram[146] = "0b10111100011010011011100000010000";
        ram[147] = "0b00111101101001001100000111010001";
        ram[148] = "0b10111110100101101111010010110111";
        ram[149] = "0b00111110000010110110110011010000";
        ram[150] = "0b10111101111011001110011111100001";
        ram[151] = "0b10111101100110011110011110000010";
        ram[152] = "0b10111110100001000100111011010000";
        ram[153] = "0b10111110010110101000011100000011";
        ram[154] = "0b10111011001101011000001000001110";
        ram[155] = "0b10111101111000101000011110000100";
        ram[156] = "0b00111100110011001110011110010010";
        ram[157] = "0b00111101111010110001110100110011";
        ram[158] = "0b10111110000011001011110011010100";
        ram[159] = "0b00111100001110111011010110011000";
        ram[160] = "0b10111110011001110010000000101100";
        ram[161] = "0b10111011010101111010100111100001";
        ram[162] = "0b10111110001011000110110101100001";
        ram[163] = "0b10111110011111101100110110001111";
        ram[164] = "0b00111110000101100010100100000110";
        ram[165] = "0b10111101010101101000011001000010";
        ram[166] = "0b10111100100001110111000110010100";
        ram[167] = "0b10111110010011111011010001100001";
        ram[168] = "0b10111101010011001001010001111010";
        ram[169] = "0b10111110001100011101110100100101";
        ram[170] = "0b10111101110011001100101110101101";
        ram[171] = "0b10111110010100000101010001010110";
        ram[172] = "0b00111101010001100010010110100011";
        ram[173] = "0b10111110010010101010101111001000";
        ram[174] = "0b00111101101011011011001110011110";
        ram[175] = "0b00111101011010110001001000001000";
        ram[176] = "0b00111101111011011111000101111100";
        ram[177] = "0b10111101111010010001010000101001";
        ram[178] = "0b10111110111010000011011100010010";
        ram[179] = "0b10111011001111101111000111001010";
        ram[180] = "0b00111110001111001101110011101110";
        ram[181] = "0b10111101100001010111000101011000";
        ram[182] = "0b00111110011101100111000000010100";
        ram[183] = "0b00111100011001101000000110000010";
        ram[184] = "0b00111100110000001110011111100000";
        ram[185] = "0b10111101001010010101110001101001";
        ram[186] = "0b00111110000010011101110100101101";
        ram[187] = "0b00111101110101001100100011010001";
        ram[188] = "0b10111110100001001100010001001111";
        ram[189] = "0b10111110011111110010110110110100";
        ram[190] = "0b10111110001100010001000010000010";
        ram[191] = "0b10111110100010100110000000011001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiBew) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiBew_ram* meminst;


SC_CTOR(conv_2_conv_2_weiBew) {
meminst = new conv_2_conv_2_weiBew_ram("conv_2_conv_2_weiBew_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiBew() {
    delete meminst;
}


};//endmodule
#endif
