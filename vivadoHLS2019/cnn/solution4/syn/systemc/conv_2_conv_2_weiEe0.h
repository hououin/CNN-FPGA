// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiEe0_H__
#define __conv_2_conv_2_weiEe0_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiEe0_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiEe0_ram) {
        ram[0] = "0b10111100111111100001000000111001";
        ram[1] = "0b10111100101001101111010010000011";
        ram[2] = "0b00111101101101110101111010001010";
        ram[3] = "0b00111101000110101100011000000011";
        ram[4] = "0b10111110000110011111001001101011";
        ram[5] = "0b00111110001000100001111000101000";
        ram[6] = "0b00111011100001000111010011110110";
        ram[7] = "0b10111110000100101111111000011001";
        ram[8] = "0b00111101101000001010011000001011";
        ram[9] = "0b00111100101001011110100110100010";
        ram[10] = "0b00111101011111101100000011101011";
        ram[11] = "0b00111101011010110110101010100000";
        ram[12] = "0b00111101101001111100100010011001";
        ram[13] = "0b10111110001101001010000010111110";
        ram[14] = "0b10111101000010001001111111101000";
        ram[15] = "0b10111110010100001101010110001111";
        ram[16] = "0b00111101110110011101111100101011";
        ram[17] = "0b00111110000000110010000011110110";
        ram[18] = "0b10111101100100101010001101001011";
        ram[19] = "0b10111101011000101011011001110010";
        ram[20] = "0b10111110000001011011011000110011";
        ram[21] = "0b00111100111000011111000010101001";
        ram[22] = "0b00111101000011011111111011001100";
        ram[23] = "0b10111110100110110110011010000010";
        ram[24] = "0b00111101010011101010000001101010";
        ram[25] = "0b00111110001100110101001011111011";
        ram[26] = "0b10111101101000010101101000000111";
        ram[27] = "0b00111101110111000100011010100100";
        ram[28] = "0b10111011110010110010101011101110";
        ram[29] = "0b00111110010010000001111011000000";
        ram[30] = "0b10111101100001010011010111100001";
        ram[31] = "0b10111110001001001010110010101001";
        ram[32] = "0b00111100011111111011010101010011";
        ram[33] = "0b10111110101011010110101000100011";
        ram[34] = "0b00111110000001000000110101110111";
        ram[35] = "0b00111110000010001010111100011100";
        ram[36] = "0b00111110001100011001101101000011";
        ram[37] = "0b00111110000001000010000011011111";
        ram[38] = "0b10111101000101011101110001111111";
        ram[39] = "0b00111101111101011001111011010010";
        ram[40] = "0b10111101000010100110101010010100";
        ram[41] = "0b00111110000010001100011000000011";
        ram[42] = "0b10111110011001010101011111000110";
        ram[43] = "0b10111110000001110010000010000111";
        ram[44] = "0b10111011010000111111100011100000";
        ram[45] = "0b00111100011110000100011000110101";
        ram[46] = "0b00111101010101011101011110101000";
        ram[47] = "0b10111101101011111000111101000011";
        ram[48] = "0b00111101100001011011000000010110";
        ram[49] = "0b10111110101100100011000100100000";
        ram[50] = "0b00111100101010010010100010000011";
        ram[51] = "0b00111110000110110101000000010101";
        ram[52] = "0b10111110101011010010001000011111";
        ram[53] = "0b10111101101100110001010100100001";
        ram[54] = "0b00111110000101010010010101000001";
        ram[55] = "0b10111110101010000101110010110000";
        ram[56] = "0b10111101101101010010001111011100";
        ram[57] = "0b00111101011100001011001101111001";
        ram[58] = "0b00111101100111101101001011000000";
        ram[59] = "0b00111101011000110010100110001110";
        ram[60] = "0b10111101110100110010011111001100";
        ram[61] = "0b00111101011000000010101101111000";
        ram[62] = "0b00111101111010100000001010111100";
        ram[63] = "0b10111100000110000101111111101011";
        ram[64] = "0b00111101111010100011111111010100";
        ram[65] = "0b10111101000000110110011100001100";
        ram[66] = "0b00111110000011010100110101000110";
        ram[67] = "0b10111100001001101011000001100011";
        ram[68] = "0b10111110011010101110101000001011";
        ram[69] = "0b00111101100101001010110001111000";
        ram[70] = "0b10111101110101101110100000111101";
        ram[71] = "0b00111011110110111100000011010110";
        ram[72] = "0b10111011111111011011100010110110";
        ram[73] = "0b00111101000000111000001011001111";
        ram[74] = "0b00111100110101000100101001010011";
        ram[75] = "0b10111101111010100011111100001101";
        ram[76] = "0b00111100111001001101111100011011";
        ram[77] = "0b10111110010100010011110001010011";
        ram[78] = "0b10111101000110100110101101100101";
        ram[79] = "0b00111110001101101111100000010110";
        ram[80] = "0b10111101110101001011001000011011";
        ram[81] = "0b00111110001001111111100010001010";
        ram[82] = "0b10111110011111000101110010111011";
        ram[83] = "0b10111110000000110010001000001001";
        ram[84] = "0b10111110101100001101101000011110";
        ram[85] = "0b10111101011010110011100011000011";
        ram[86] = "0b00111101010110010111010011010001";
        ram[87] = "0b10111110101011011100001110010111";
        ram[88] = "0b10111101101111000000000111001001";
        ram[89] = "0b00111101111110010101110110000110";
        ram[90] = "0b00111101111011111010101110010110";
        ram[91] = "0b10111110100011101011100011100000";
        ram[92] = "0b10111101110101101110011101101101";
        ram[93] = "0b00111110000101001111010100011100";
        ram[94] = "0b10111110000000000010011110010011";
        ram[95] = "0b10111101110001100100110100000110";
        ram[96] = "0b10111110100100010111100011000100";
        ram[97] = "0b10111100010001011100010110000010";
        ram[98] = "0b10111101011011111111011011010110";
        ram[99] = "0b10111110000000111001101100100110";
        ram[100] = "0b00111100110011010100000110111101";
        ram[101] = "0b00111101110101111011100011001011";
        ram[102] = "0b00111101000101011011101111100001";
        ram[103] = "0b00111101111100010111001001011100";
        ram[104] = "0b10111101100110000100010001011101";
        ram[105] = "0b00111110000010010110100111101011";
        ram[106] = "0b10111101010000110001000110011001";
        ram[107] = "0b00111101100010101110000101011000";
        ram[108] = "0b00111101011110010001011011111110";
        ram[109] = "0b10111110001011111001010111110101";
        ram[110] = "0b00111100011010101001011110000010";
        ram[111] = "0b00111101011011000111010000101110";
        ram[112] = "0b10111100101110100001100001011000";
        ram[113] = "0b10111110010101000110110101011010";
        ram[114] = "0b10111110001111101011000111110110";
        ram[115] = "0b00111101101110100001101010000000";
        ram[116] = "0b10111110010101000010110001011110";
        ram[117] = "0b10111101101111100100010101101110";
        ram[118] = "0b00111110001100000011011110101010";
        ram[119] = "0b10111101110000001000000001111001";
        ram[120] = "0b10111110000000011111001111011000";
        ram[121] = "0b10111110010101110110110100111110";
        ram[122] = "0b00111101101010100111000011101011";
        ram[123] = "0b10111101011000101010111001001110";
        ram[124] = "0b10111110010010010001011100101000";
        ram[125] = "0b00111110010101110010100010101111";
        ram[126] = "0b00111101111101110011100111011001";
        ram[127] = "0b00111110001010000000100000111010";
        ram[128] = "0b10111101011010001100001100010001";
        ram[129] = "0b00111110000010010101000000111000";
        ram[130] = "0b00111110001011011100000101111100";
        ram[131] = "0b00111100100111000000001110110011";
        ram[132] = "0b10111110000111001110010101110010";
        ram[133] = "0b10111101000111110001011010010111";
        ram[134] = "0b10111110010100001110110110011010";
        ram[135] = "0b00111100010110100111111111010100";
        ram[136] = "0b00111101110000000111111101101111";
        ram[137] = "0b10111100000101101001101110001000";
        ram[138] = "0b10111101101100101111101010100001";
        ram[139] = "0b10111110011000001011011001000111";
        ram[140] = "0b10111110100000111010100100010000";
        ram[141] = "0b10111101001111110011101011110111";
        ram[142] = "0b00111110010011001111010101100011";
        ram[143] = "0b00111101101011011000001110000111";
        ram[144] = "0b00111101111100001011101001101000";
        ram[145] = "0b00111100111101000011011010111110";
        ram[146] = "0b00111110000011101111100001100110";
        ram[147] = "0b10111101010100010001101011001110";
        ram[148] = "0b10111110001000100110000111101011";
        ram[149] = "0b00111100110111110110010010100001";
        ram[150] = "0b00111101110001110010110111110001";
        ram[151] = "0b10111110000011011001110010100000";
        ram[152] = "0b10111110010000011011000110000101";
        ram[153] = "0b00111100100101100001010011110101";
        ram[154] = "0b10111101010011010100000111101000";
        ram[155] = "0b10111110011011110100010011000111";
        ram[156] = "0b00111101101011100000000101011100";
        ram[157] = "0b00111101100101001000111000001010";
        ram[158] = "0b10111110011010001000000110000001";
        ram[159] = "0b00111100110011101001110100011101";
        ram[160] = "0b10111110101011000100011111000001";
        ram[161] = "0b00111101111100001011000111111011";
        ram[162] = "0b00111101101000000011011010011111";
        ram[163] = "0b00111011111111011011000011001110";
        ram[164] = "0b00111101110001100101011001111011";
        ram[165] = "0b00111000101111001010110000000010";
        ram[166] = "0b00111101001101001110111100001011";
        ram[167] = "0b10111101101001100001110000101100";
        ram[168] = "0b00111100011110011111100000101010";
        ram[169] = "0b10111110011000011010100010001100";
        ram[170] = "0b10111101110111111011000000011000";
        ram[171] = "0b10111011111110010101000111010110";
        ram[172] = "0b00111101111111000101111001010000";
        ram[173] = "0b10111110011111100000100111010011";
        ram[174] = "0b00111110010000001001111100100010";
        ram[175] = "0b00111101101011111110101110011110";
        ram[176] = "0b10111101010011101100111100100110";
        ram[177] = "0b10111011100110101010101111100000";
        ram[178] = "0b10111101100011100110000110010101";
        ram[179] = "0b10111110000000000011000000110111";
        ram[180] = "0b00111101101110111101001011111111";
        ram[181] = "0b10111110100010000110010101000001";
        ram[182] = "0b00111101100010010000110111100000";
        ram[183] = "0b00111110001110101001011111100111";
        ram[184] = "0b00111101100000111101101111010101";
        ram[185] = "0b10111110000110110001100100011000";
        ram[186] = "0b00111101010110101011000011100010";
        ram[187] = "0b10111101110000011110101010010111";
        ram[188] = "0b10111110000111100011101101111101";
        ram[189] = "0b10111101101011101000100001100111";
        ram[190] = "0b00111100100111110010111110010011";
        ram[191] = "0b00111101001001011101001000001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiEe0) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiEe0_ram* meminst;


SC_CTOR(conv_2_conv_2_weiEe0) {
meminst = new conv_2_conv_2_weiEe0_ram("conv_2_conv_2_weiEe0_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiEe0() {
    delete meminst;
}


};//endmodule
#endif
