// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibck_H__
#define __conv_2_conv_2_weibck_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibck_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibck_ram) {
        ram[0] = "0b00111100001001100101001110011100";
        ram[1] = "0b10111110001011100110100100010101";
        ram[2] = "0b00111100000000000001010110010001";
        ram[3] = "0b00111110001101111111110101000110";
        ram[4] = "0b10111110000001100110100010011111";
        ram[5] = "0b10111101011001010111001000011100";
        ram[6] = "0b00111101101110011011001110110110";
        ram[7] = "0b00111101001010110110101011000001";
        ram[8] = "0b00111101111110010010010000011111";
        ram[9] = "0b10111100101001101011111101111111";
        ram[10] = "0b00111100011101010100101010010000";
        ram[11] = "0b00111101111001101111000111011001";
        ram[12] = "0b10111110011110101000100000111000";
        ram[13] = "0b10111110000001011010001010011010";
        ram[14] = "0b00111110100010100100010101001111";
        ram[15] = "0b00111110101001110101100000101010";
        ram[16] = "0b00111101110100010110010001001110";
        ram[17] = "0b10111100001111011100011010001010";
        ram[18] = "0b00111101011010011001000011100011";
        ram[19] = "0b00111110010000101011011101010000";
        ram[20] = "0b00111101111010000111000100111111";
        ram[21] = "0b10111101111001100101111011110001";
        ram[22] = "0b10111101001101100110011111010001";
        ram[23] = "0b10111010111101000100101000101011";
        ram[24] = "0b00111110001001010100001010110001";
        ram[25] = "0b00111110010100011100101100000100";
        ram[26] = "0b10111101110011110110011010011001";
        ram[27] = "0b10111110001011100000100000010100";
        ram[28] = "0b00111110100111010001100101011010";
        ram[29] = "0b10111101110001110010101001010100";
        ram[30] = "0b00111100100110000100111110111011";
        ram[31] = "0b00111110000101100100010010101100";
        ram[32] = "0b00111101110001111100001001100110";
        ram[33] = "0b10111101111000100101111000000101";
        ram[34] = "0b00111101111011100110111110010000";
        ram[35] = "0b10111110001100000010100010111100";
        ram[36] = "0b00111101101100100000001100011110";
        ram[37] = "0b10111110001110110000001001100111";
        ram[38] = "0b10111101111011100111100001101000";
        ram[39] = "0b10111101111111111010100010101100";
        ram[40] = "0b10111101100100100111101011100010";
        ram[41] = "0b00111110000000100100010000001011";
        ram[42] = "0b10111101000011110100101100001010";
        ram[43] = "0b00111110010001001101011100010111";
        ram[44] = "0b00111101110011011110011011001101";
        ram[45] = "0b10111100110001101100111101100100";
        ram[46] = "0b10111100101000011100101001111100";
        ram[47] = "0b00111101000010111110010000000100";
        ram[48] = "0b00111100111101000111110100101100";
        ram[49] = "0b10111110001000000001000010000101";
        ram[50] = "0b00111100011101011000111111110110";
        ram[51] = "0b10111110110110001110000000111100";
        ram[52] = "0b10111100101001001110110001011111";
        ram[53] = "0b10111101111000000010001101101110";
        ram[54] = "0b10111110101011011001101110110100";
        ram[55] = "0b10111110101010000110011111010010";
        ram[56] = "0b00111110001001110111001010000110";
        ram[57] = "0b00111110010010111000110011110111";
        ram[58] = "0b10111100110001111010101001111101";
        ram[59] = "0b00111110000111010101111011000011";
        ram[60] = "0b10111110001011000111010011000000";
        ram[61] = "0b00111101111010100110111001110011";
        ram[62] = "0b10111101100011111000101001110110";
        ram[63] = "0b00111101100000011010011011100001";
        ram[64] = "0b00111101101011010011110110110001";
        ram[65] = "0b10111110001000100000000101011101";
        ram[66] = "0b10111110010011101001101101000010";
        ram[67] = "0b00111101101110011101100101011110";
        ram[68] = "0b10111101111000000000000000101100";
        ram[69] = "0b10111101100101100000100001101000";
        ram[70] = "0b10111110011011100010110101011101";
        ram[71] = "0b00111101001110010010110110001001";
        ram[72] = "0b00111101001001101011110111001000";
        ram[73] = "0b00111101000010101100001110010101";
        ram[74] = "0b10111110100100001001101111110000";
        ram[75] = "0b10111011011001101110101111010111";
        ram[76] = "0b10111110101110000011110000011100";
        ram[77] = "0b10111101011011110010111111110100";
        ram[78] = "0b10111110000101010010111000010101";
        ram[79] = "0b10111101100101101001000111110110";
        ram[80] = "0b00111101111010000000001000111110";
        ram[81] = "0b10111100110000000011000100000100";
        ram[82] = "0b00111110100101100110100000001100";
        ram[83] = "0b00111101111001011111001111110111";
        ram[84] = "0b00111110101101001011001000010110";
        ram[85] = "0b10111110001010100111001010010101";
        ram[86] = "0b00111101101100001011001110010110";
        ram[87] = "0b10111110011011011010111000111011";
        ram[88] = "0b10111101010000010111101100010000";
        ram[89] = "0b00111100111001111111100111100011";
        ram[90] = "0b00111101101011001111000110010001";
        ram[91] = "0b00111101110111010101000000111011";
        ram[92] = "0b00111101010000010011001100100111";
        ram[93] = "0b10111110000110100111011011100110";
        ram[94] = "0b10111101101000000101011011011011";
        ram[95] = "0b00111011001100001101111101010011";
        ram[96] = "0b00111101111100011101010101111101";
        ram[97] = "0b00111110000001101111110011000001";
        ram[98] = "0b00111101000101110000011111111111";
        ram[99] = "0b10111110100011011010100101110011";
        ram[100] = "0b00111101101000000100111010111001";
        ram[101] = "0b10111110010001101011011111101101";
        ram[102] = "0b10111110001110010111101110010000";
        ram[103] = "0b10111101100011110110110101110100";
        ram[104] = "0b00111101100111100100100011101111";
        ram[105] = "0b10111101011000101100100101101010";
        ram[106] = "0b10111101110110100010000111010001";
        ram[107] = "0b00111101011110001111110010001100";
        ram[108] = "0b10111110011001011010000101110111";
        ram[109] = "0b10111110000001010001111010110110";
        ram[110] = "0b10111110100100011011011001111000";
        ram[111] = "0b10111110010101110001101011111000";
        ram[112] = "0b10111110001001101010000011010011";
        ram[113] = "0b10111101100111010001011011011001";
        ram[114] = "0b10111100101100100000001100001110";
        ram[115] = "0b10111111000010010100101011000011";
        ram[116] = "0b00111101100001111000010010110111";
        ram[117] = "0b10111101011001110100111110000111";
        ram[118] = "0b10111011010001100111111011111000";
        ram[119] = "0b00111101010011110010000101100010";
        ram[120] = "0b00111110011001010100011101101001";
        ram[121] = "0b00111101001100100100111000111101";
        ram[122] = "0b00111101000101100110101010100011";
        ram[123] = "0b00111101000111111001000010011111";
        ram[124] = "0b10111101100001101100000101001111";
        ram[125] = "0b00111110100000101100011000010001";
        ram[126] = "0b00111110001001100100100000001101";
        ram[127] = "0b00111110001011000001111110001100";
        ram[128] = "0b00111011000001011101101100010101";
        ram[129] = "0b10111110011111000101110000011000";
        ram[130] = "0b10111110101001010001101101000101";
        ram[131] = "0b10111101010110100111101110100111";
        ram[132] = "0b10111110011110101100101001001100";
        ram[133] = "0b10111110110000011100000101111011";
        ram[134] = "0b10111110100110000111001111010110";
        ram[135] = "0b00111110010011011001100110011001";
        ram[136] = "0b00111110000110110011000100001011";
        ram[137] = "0b10111111000011001101001010111011";
        ram[138] = "0b00111100010001101111110010001000";
        ram[139] = "0b10111110011100010111010001101111";
        ram[140] = "0b10111110010101110010010001010101";
        ram[141] = "0b10111110101110100101110010010000";
        ram[142] = "0b00111110101010000111001100000111";
        ram[143] = "0b00111110011111001001100100011011";
        ram[144] = "0b10111110001000010101000001010110";
        ram[145] = "0b00111100100000100111110110001110";
        ram[146] = "0b10111101100100101110101000011100";
        ram[147] = "0b10111101010001010101010011010010";
        ram[148] = "0b00111110000111001011011111000101";
        ram[149] = "0b00111100100001011011111010011110";
        ram[150] = "0b10111101000000100110100000001010";
        ram[151] = "0b10111110101010100001110000100101";
        ram[152] = "0b10111110011100110100111010011110";
        ram[153] = "0b10111101101101101101011010010011";
        ram[154] = "0b00111100101000000001011110110011";
        ram[155] = "0b00111110010101011111101001010100";
        ram[156] = "0b00111101110100010001001111100101";
        ram[157] = "0b10111100101100000100001111111111";
        ram[158] = "0b00111110001001111000110111011010";
        ram[159] = "0b10111101101001101001100000000111";
        ram[160] = "0b10111110001101001100010111100101";
        ram[161] = "0b10111011001010101111110000011000";
        ram[162] = "0b10111110001011111110010100011100";
        ram[163] = "0b10111110010011001110010011110111";
        ram[164] = "0b10111110001111110000100101100111";
        ram[165] = "0b10111100100000101000000111100011";
        ram[166] = "0b10111110000111101011011000011001";
        ram[167] = "0b00111110001111001010101101111111";
        ram[168] = "0b00111110011101100000011110000000";
        ram[169] = "0b10111110011101001000000011111101";
        ram[170] = "0b10111110100010010100011000110111";
        ram[171] = "0b00111101000010001011001011110110";
        ram[172] = "0b00111101001101111010111110011000";
        ram[173] = "0b00111110100100101100101010101010";
        ram[174] = "0b10111101110011000001000010001001";
        ram[175] = "0b10111110010010011100101110100110";
        ram[176] = "0b00111110010100101100101001110001";
        ram[177] = "0b00111110001111010101101101100011";
        ram[178] = "0b10111110010010110101100000101000";
        ram[179] = "0b10111110000010001111111001011110";
        ram[180] = "0b00111101111000111011110101000001";
        ram[181] = "0b10111101001110111000010101110010";
        ram[182] = "0b00111100101111010011000011011011";
        ram[183] = "0b00111100110011010010101011000100";
        ram[184] = "0b00111110011111000101011001000011";
        ram[185] = "0b00111110011010101010010001110111";
        ram[186] = "0b10111101000100011101010110000100";
        ram[187] = "0b00111101100111101110010100001100";
        ram[188] = "0b10111110000011001110011000010110";
        ram[189] = "0b10111101011100100100010000101000";
        ram[190] = "0b00111110011100110111110100000000";
        ram[191] = "0b00111110000100010001011111101011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibck) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibck_ram* meminst;


SC_CTOR(conv_2_conv_2_weibck) {
meminst = new conv_2_conv_2_weibck_ram("conv_2_conv_2_weibck_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibck() {
    delete meminst;
}


};//endmodule
#endif
