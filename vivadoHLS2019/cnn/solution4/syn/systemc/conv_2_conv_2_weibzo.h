// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibzo_H__
#define __conv_2_conv_2_weibzo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibzo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibzo_ram) {
        ram[0] = "0b10111101111010111111101100010111";
        ram[1] = "0b10111101110011000110011000101101";
        ram[2] = "0b10111101110100100011010100010010";
        ram[3] = "0b00111101110111101000010111000101";
        ram[4] = "0b10111110000100011111111100100110";
        ram[5] = "0b10111110000100011001101011001010";
        ram[6] = "0b10111101011001100111111000111101";
        ram[7] = "0b10111101011001000101001100100010";
        ram[8] = "0b10111110010011001001101110000010";
        ram[9] = "0b00111101000010001000000010111010";
        ram[10] = "0b00111110010111010001110111110010";
        ram[11] = "0b10111110000001011110100000011000";
        ram[12] = "0b00111101001101001001101001110011";
        ram[13] = "0b00111101110100011010110100010000";
        ram[14] = "0b00111101101100011010110101011000";
        ram[15] = "0b00111110001110010110101011000011";
        ram[16] = "0b10111110100111111001001110111011";
        ram[17] = "0b00111101000101100001111011110101";
        ram[18] = "0b10111101011101001100001101111000";
        ram[19] = "0b10111110011101110110010001100100";
        ram[20] = "0b00111110101000110010011011010111";
        ram[21] = "0b00111101000101010110111001111111";
        ram[22] = "0b00111101111101111011100000100000";
        ram[23] = "0b10111110010001001101111101110011";
        ram[24] = "0b10111100100001110001001010100111";
        ram[25] = "0b00111101100101000100001110011010";
        ram[26] = "0b10111101111010000010110111100111";
        ram[27] = "0b00111101100100110011100011010111";
        ram[28] = "0b00111110011001100011010001000010";
        ram[29] = "0b00111101000111010001011011011010";
        ram[30] = "0b10111101101000010000101010101011";
        ram[31] = "0b10111110100110110100000010000111";
        ram[32] = "0b00111101111101100001011000000001";
        ram[33] = "0b00111110011010101000010011111010";
        ram[34] = "0b00111101100101100000101001001110";
        ram[35] = "0b10111100101000001110011111001101";
        ram[36] = "0b10111101011000110000011110111110";
        ram[37] = "0b00111110001110111000001101000101";
        ram[38] = "0b10111101101011011111110010011011";
        ram[39] = "0b10111100111001100000001000001001";
        ram[40] = "0b10111110011110101111111100001110";
        ram[41] = "0b00111110011100001110100101100011";
        ram[42] = "0b10111110110001110011100001100101";
        ram[43] = "0b00111110001010001010010010111000";
        ram[44] = "0b10111100100001101101110111111110";
        ram[45] = "0b00111101000111100100101011001000";
        ram[46] = "0b00111110000100111101100101001100";
        ram[47] = "0b00111110010010001110000111101011";
        ram[48] = "0b00111100010100100100010101110111";
        ram[49] = "0b00111100111010011110100100010111";
        ram[50] = "0b10111110000110010111010000100100";
        ram[51] = "0b10111101001011011101101011000101";
        ram[52] = "0b10111101111001111101101011100010";
        ram[53] = "0b00111101100100011101100101100001";
        ram[54] = "0b10111101111100101100010010000100";
        ram[55] = "0b10111100101000111000001111110010";
        ram[56] = "0b00111101101011000010011111111000";
        ram[57] = "0b10111110100101101010101000011010";
        ram[58] = "0b10111110000100010101111111111111";
        ram[59] = "0b10111110000001011101100111000000";
        ram[60] = "0b00111110001110110110111000001000";
        ram[61] = "0b00111101100001111110000110001010";
        ram[62] = "0b10111101101010110001001011011111";
        ram[63] = "0b10111110000110000100011000110001";
        ram[64] = "0b10111110000000000011101001111001";
        ram[65] = "0b00111110000010001011000111100110";
        ram[66] = "0b00111100010111101111110011100010";
        ram[67] = "0b10111110000011110101011110001110";
        ram[68] = "0b10111110001000110010011000100001";
        ram[69] = "0b00111110000101101010010101011000";
        ram[70] = "0b10111110010010010100000101111000";
        ram[71] = "0b10111010100111100010110110001111";
        ram[72] = "0b10111101111011110101101100101000";
        ram[73] = "0b00111101111001111001111001011011";
        ram[74] = "0b00111101100100111110100001000101";
        ram[75] = "0b00111101011010100101100011100100";
        ram[76] = "0b10111110010110011010011011110010";
        ram[77] = "0b00111001110000000000001100001111";
        ram[78] = "0b10111101000001010011100100000011";
        ram[79] = "0b10111101011001001100001101111101";
        ram[80] = "0b00111101011011000001111001111110";
        ram[81] = "0b10111011000110011011010100101011";
        ram[82] = "0b00111110010110101000010001000010";
        ram[83] = "0b10111110000010001000001001100001";
        ram[84] = "0b00111101101000111011100000011100";
        ram[85] = "0b00111101110010010110010010110101";
        ram[86] = "0b00111101100110000011100011111101";
        ram[87] = "0b10111101111101010010011010110110";
        ram[88] = "0b10111101110100100110101100100001";
        ram[89] = "0b10111101101010100101111101001000";
        ram[90] = "0b10111100100011110110010111111111";
        ram[91] = "0b10111101000010101011101111110111";
        ram[92] = "0b00111101110110110010010010101101";
        ram[93] = "0b00111100100001010111111000110110";
        ram[94] = "0b00111110000011001000110111101100";
        ram[95] = "0b10111110100100000111010001000010";
        ram[96] = "0b00111101011111110101111011010110";
        ram[97] = "0b10111101010100000111100011001011";
        ram[98] = "0b10111100110000101001110100101100";
        ram[99] = "0b10111101110101011000111111111000";
        ram[100] = "0b10111110011100100101001000100110";
        ram[101] = "0b10111110001010110111010010110001";
        ram[102] = "0b10111101101101000101111111001000";
        ram[103] = "0b00111101011110101001110000101010";
        ram[104] = "0b00111100111110110100010001010001";
        ram[105] = "0b10111101100010101110001101100001";
        ram[106] = "0b10111110010110111001011001111000";
        ram[107] = "0b10111101101111001011100100000001";
        ram[108] = "0b10111110011100101101000001100111";
        ram[109] = "0b00111110011010110100011010011001";
        ram[110] = "0b10111101010110000011000110011111";
        ram[111] = "0b10111101011010101111110001110101";
        ram[112] = "0b10111110110011010000000101110101";
        ram[113] = "0b10111101111110110001110101100010";
        ram[114] = "0b10111101100110011011010111000101";
        ram[115] = "0b00111101100100010001011101011001";
        ram[116] = "0b10111110010100000101101001100111";
        ram[117] = "0b00111101110101100001111100110000";
        ram[118] = "0b10111110100110111111001011111000";
        ram[119] = "0b10111101111001011110110011111110";
        ram[120] = "0b00111011001101001100010110010000";
        ram[121] = "0b10111110100010101001011001110010";
        ram[122] = "0b10111101101001100111110000000011";
        ram[123] = "0b10111101111110011100101101101010";
        ram[124] = "0b00111110010010101101100111001111";
        ram[125] = "0b10111100110001010100100011010001";
        ram[126] = "0b10111101110010101011000100000000";
        ram[127] = "0b00111101100011011100101000111010";
        ram[128] = "0b00111101101111000101101010000001";
        ram[129] = "0b10111100001100010110101101000101";
        ram[130] = "0b10111101011011110111101100000111";
        ram[131] = "0b10111100110011000111111000000011";
        ram[132] = "0b10111101100001111101010101100110";
        ram[133] = "0b00111110010110001110101110100111";
        ram[134] = "0b10111110000110100100010110100100";
        ram[135] = "0b00111101111111000000111000101010";
        ram[136] = "0b00111101110110000010010010000011";
        ram[137] = "0b00111110000111110110111010010101";
        ram[138] = "0b10111110010000100100100100000110";
        ram[139] = "0b00111101001000111000011101101011";
        ram[140] = "0b10111100001001001110011010100010";
        ram[141] = "0b00111110000010101101001000000111";
        ram[142] = "0b10111101101100100101111101011011";
        ram[143] = "0b00111100101001110010000100001001";
        ram[144] = "0b00111100110110001100011100011101";
        ram[145] = "0b00111110001000101000101110100000";
        ram[146] = "0b10111101011000101011001111100111";
        ram[147] = "0b10111101110010001000000001010101";
        ram[148] = "0b10111110010011001100011101101001";
        ram[149] = "0b00111101101011010001000001000101";
        ram[150] = "0b00111101001110100010101001000011";
        ram[151] = "0b10111100110100111001001010011110";
        ram[152] = "0b10111110010110001101110011110011";
        ram[153] = "0b10111110000100111110000101110111";
        ram[154] = "0b00111110000111100011111001101011";
        ram[155] = "0b00111101001011001111111101100101";
        ram[156] = "0b10111101011011000101100001101010";
        ram[157] = "0b00111100000110000101111101010111";
        ram[158] = "0b00111110000100111001001001110010";
        ram[159] = "0b10111101101111010111011110111100";
        ram[160] = "0b00111110100000000111010000111101";
        ram[161] = "0b10111110010001001101100101000100";
        ram[162] = "0b00111110011110101000011001110101";
        ram[163] = "0b10111101111110001111101101110001";
        ram[164] = "0b10111110001100000001001000001011";
        ram[165] = "0b10111110001110110010111010100100";
        ram[166] = "0b10111110010101001011100011101000";
        ram[167] = "0b10111101101100110101101100110100";
        ram[168] = "0b10111101011000000100111100101011";
        ram[169] = "0b10111110000000010111110001101100";
        ram[170] = "0b10111011100001000110101111110111";
        ram[171] = "0b10111110011100101101110010000011";
        ram[172] = "0b00111110000110110110100110100101";
        ram[173] = "0b10111110000001100111111111111011";
        ram[174] = "0b10111101010111100101100000110101";
        ram[175] = "0b10111100100011101011010011000100";
        ram[176] = "0b10111110000110101101010001001110";
        ram[177] = "0b10111110000001001101010111100110";
        ram[178] = "0b10111101101000110011110100110110";
        ram[179] = "0b00111100100101110111100100100001";
        ram[180] = "0b10111110010001010111110011101100";
        ram[181] = "0b00111101101011010100000000010000";
        ram[182] = "0b10111110000100010110101011100100";
        ram[183] = "0b10111101001101111100110011110011";
        ram[184] = "0b10111101111101011111101110111110";
        ram[185] = "0b10111110011001011110011000110000";
        ram[186] = "0b10111101011100111001111011110100";
        ram[187] = "0b10111101001110000011110000101001";
        ram[188] = "0b00111101110010011110001011001001";
        ram[189] = "0b10111101111111101110001101110100";
        ram[190] = "0b10111101001111010111000011001001";
        ram[191] = "0b00111101001101111111110100111011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibzo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibzo_ram* meminst;


SC_CTOR(conv_2_conv_2_weibzo) {
meminst = new conv_2_conv_2_weibzo_ram("conv_2_conv_2_weibzo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibzo() {
    delete meminst;
}


};//endmodule
#endif
