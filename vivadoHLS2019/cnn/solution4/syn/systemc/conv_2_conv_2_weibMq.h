// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibMq_H__
#define __conv_2_conv_2_weibMq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibMq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibMq_ram) {
        ram[0] = "0b10111110100100100100001100101010";
        ram[1] = "0b10111110000100101111010011001111";
        ram[2] = "0b00111100111000011110000000001010";
        ram[3] = "0b00111110001101100111010101101110";
        ram[4] = "0b10111101101011000001000101011101";
        ram[5] = "0b10111101100100001010110101011001";
        ram[6] = "0b10111101100010011101101000100100";
        ram[7] = "0b00111101001101111100111110100100";
        ram[8] = "0b10111101101010100111011101000001";
        ram[9] = "0b00111101100010001101111001011111";
        ram[10] = "0b00111101111111001010000110000110";
        ram[11] = "0b10111100100001001001110101100010";
        ram[12] = "0b10111110000000011001011110100000";
        ram[13] = "0b00111110010111011000111111100011";
        ram[14] = "0b00111101110000111110001011101010";
        ram[15] = "0b00111101110100100000101111010111";
        ram[16] = "0b10111110101001111111101000010000";
        ram[17] = "0b10111101001101111111011110000001";
        ram[18] = "0b00111100101110011011101011101000";
        ram[19] = "0b10111110001111010111101100100101";
        ram[20] = "0b00111110001101010010100111110100";
        ram[21] = "0b00111100010110011011100100001010";
        ram[22] = "0b00111101101101011011101100011010";
        ram[23] = "0b10111101111010101111111100111101";
        ram[24] = "0b10111101110000000100110010111011";
        ram[25] = "0b00111100010110100010101100110000";
        ram[26] = "0b10111100001100101011101111111000";
        ram[27] = "0b10111101110010100111110101010010";
        ram[28] = "0b00111110010000000000010000000010";
        ram[29] = "0b10111110000111011010010001001011";
        ram[30] = "0b10111101101101010011011010000110";
        ram[31] = "0b10111110010001100101100010010010";
        ram[32] = "0b10111011110100101100011111000011";
        ram[33] = "0b00111110000001110101000100110011";
        ram[34] = "0b00111100111010001000011010100110";
        ram[35] = "0b10111110000100101101011011011101";
        ram[36] = "0b00111101100010110010010010111101";
        ram[37] = "0b00111101000111110010000110100011";
        ram[38] = "0b10111101011101011111110011001011";
        ram[39] = "0b10111110010111000001000001000110";
        ram[40] = "0b10111110110111011000000011010110";
        ram[41] = "0b00111110000001110111001100111110";
        ram[42] = "0b10111110000010000010111000000011";
        ram[43] = "0b00111110011011101111100010000100";
        ram[44] = "0b00111101000101000010011100011100";
        ram[45] = "0b00111101100010001111111111101001";
        ram[46] = "0b00111110001010000000001000000100";
        ram[47] = "0b00111110000110100001000000010110";
        ram[48] = "0b10111101011001000101001000110000";
        ram[49] = "0b00111100111011111010101001101000";
        ram[50] = "0b10111110010001010011000100111001";
        ram[51] = "0b10111110000111001011101001001101";
        ram[52] = "0b10111101111111111110000111110110";
        ram[53] = "0b10111101110000101101100011110110";
        ram[54] = "0b10111110010100011110001000010010";
        ram[55] = "0b10111101110100101001110110001000";
        ram[56] = "0b00111101100010010011001000110100";
        ram[57] = "0b10111110010000100111001100010000";
        ram[58] = "0b10111110010010100101001000000111";
        ram[59] = "0b00111010101001101001010001100111";
        ram[60] = "0b00111110000011100001111010000110";
        ram[61] = "0b00111101011000000000011010001101";
        ram[62] = "0b10111110001001111110111010001011";
        ram[63] = "0b10111110010000101110111011000011";
        ram[64] = "0b10111101111100101101010010001110";
        ram[65] = "0b10111101100011100111011101111010";
        ram[66] = "0b10111110001011001101111011001101";
        ram[67] = "0b10111101101010011001110111111101";
        ram[68] = "0b10111110010010010010010011001111";
        ram[69] = "0b00111101100011101110000101011001";
        ram[70] = "0b10111110100001000010101000011011";
        ram[71] = "0b10111100110001000001001010101110";
        ram[72] = "0b00111100100011111101111111001011";
        ram[73] = "0b10111101001000001011001100100010";
        ram[74] = "0b00111101111001000011011000000111";
        ram[75] = "0b00111110001001101100110111001100";
        ram[76] = "0b10111110101100010001111001110010";
        ram[77] = "0b00111101011101001010011110110010";
        ram[78] = "0b10111101001101000001011111001001";
        ram[79] = "0b10111100101111000110001100111000";
        ram[80] = "0b10111100001011111010011101110111";
        ram[81] = "0b00111100011001011111010010100100";
        ram[82] = "0b00111101100000100000010000011100";
        ram[83] = "0b10111101101001100011010001100111";
        ram[84] = "0b00111100110110111000001100001010";
        ram[85] = "0b10111100110100011000011010110100";
        ram[86] = "0b00111101111011001001111010110001";
        ram[87] = "0b10111101101011111111010110010111";
        ram[88] = "0b10111100110100011101001001011100";
        ram[89] = "0b10111100111100101110011100101011";
        ram[90] = "0b00111110000001001111100011011000";
        ram[91] = "0b00111110100000001110100001101110";
        ram[92] = "0b00111101010111111000011100111001";
        ram[93] = "0b10111100101110111010110010000101";
        ram[94] = "0b00111101100000110000110001010111";
        ram[95] = "0b10111110001010001001010111110001";
        ram[96] = "0b00111101111000101110101000001100";
        ram[97] = "0b00111101110010011011010000011101";
        ram[98] = "0b00111110001100000000110110011111";
        ram[99] = "0b10111110010001001110011111111000";
        ram[100] = "0b10111110100010010010000001000011";
        ram[101] = "0b10111110100001111011101111100110";
        ram[102] = "0b10111101011100101010110000100101";
        ram[103] = "0b10111101101000101110101100100111";
        ram[104] = "0b00111100110101111000010010111101";
        ram[105] = "0b10111101110001111111100000110110";
        ram[106] = "0b10111101110101001101001000111111";
        ram[107] = "0b00111100111110001100110010111000";
        ram[108] = "0b00111100011011100000110000111011";
        ram[109] = "0b00111101111000111100110000101011";
        ram[110] = "0b10111110000000100101010000000110";
        ram[111] = "0b10111110001101010001001010100000";
        ram[112] = "0b10111110011100011101110101100110";
        ram[113] = "0b10111110000101000010110100011011";
        ram[114] = "0b00111101100000010110001011111000";
        ram[115] = "0b10111110010010110101100011101110";
        ram[116] = "0b10111101111001110101101010001001";
        ram[117] = "0b00111101101100000011011010000101";
        ram[118] = "0b10111110010110110110000001000001";
        ram[119] = "0b10111101111010000111000000100000";
        ram[120] = "0b00111101110111011011001000100000";
        ram[121] = "0b10111101001000100001000110000011";
        ram[122] = "0b00111101011000100001111000011110";
        ram[123] = "0b10111100100111001100001000000011";
        ram[124] = "0b00111011100001010000101111001011";
        ram[125] = "0b00111101110111001110110110110101";
        ram[126] = "0b10111101010110100010111101100111";
        ram[127] = "0b00111100100000111000100000000100";
        ram[128] = "0b00111101101101101110011010011101";
        ram[129] = "0b10111101100111001110000010011010";
        ram[130] = "0b10111110010111001010011000100001";
        ram[131] = "0b00111110000000000010101011111011";
        ram[132] = "0b10111101110101110011110101110000";
        ram[133] = "0b00111110000100001010011101001110";
        ram[134] = "0b10111101111001001100110110001100";
        ram[135] = "0b00111100100001001011011010100010";
        ram[136] = "0b00111110000010111000010111011111";
        ram[137] = "0b00111101111011011010111101100111";
        ram[138] = "0b10111110000111001011011110000111";
        ram[139] = "0b00111011000100110110101001011110";
        ram[140] = "0b10111100111100101101111000000010";
        ram[141] = "0b00111100101101011010101011111001";
        ram[142] = "0b00111101110010101001111110000100";
        ram[143] = "0b00111101101101001011111111000010";
        ram[144] = "0b00111101000111111010011010001010";
        ram[145] = "0b00111110010001000101011110111010";
        ram[146] = "0b00111100111111111110111110001001";
        ram[147] = "0b10111110001111000101110100110101";
        ram[148] = "0b00111011111000101011011001100110";
        ram[149] = "0b00111100000001001000101011011101";
        ram[150] = "0b00111101101101111100001010100000";
        ram[151] = "0b10111101100111100101101011000010";
        ram[152] = "0b10111110010110100110000010011111";
        ram[153] = "0b10111011100011000100101101111001";
        ram[154] = "0b00111110001010001011101011101010";
        ram[155] = "0b00111110100001010100000111110101";
        ram[156] = "0b10111101110010110101110111000010";
        ram[157] = "0b10111101001010011101101010010111";
        ram[158] = "0b00111110011101100110101000000101";
        ram[159] = "0b10111100110111001100100011110111";
        ram[160] = "0b00111110001001001011011111011100";
        ram[161] = "0b00111101101101001001111110101001";
        ram[162] = "0b00111110001110010111000010001000";
        ram[163] = "0b10111110001110100011010100110111";
        ram[164] = "0b10111111000001110110111111000100";
        ram[165] = "0b00111110000000011010010010010011";
        ram[166] = "0b10111110011100011101000000100111";
        ram[167] = "0b00111101000110111110100010100100";
        ram[168] = "0b10111101100000000100000010010111";
        ram[169] = "0b10111101001110010000000100100100";
        ram[170] = "0b00111101110100010111111000010100";
        ram[171] = "0b10111100110110101110000001000001";
        ram[172] = "0b00111110000100010110100110100101";
        ram[173] = "0b10111110001000010100110111101000";
        ram[174] = "0b00111101010100100111100001110001";
        ram[175] = "0b00111101111000100100110011000000";
        ram[176] = "0b10111011000010110100001110100000";
        ram[177] = "0b00111101011001000011010000000101";
        ram[178] = "0b10111100001001110011001001010110";
        ram[179] = "0b10111101111011111101011011001101";
        ram[180] = "0b00111100101000111001100101001111";
        ram[181] = "0b00111101010111010110100000101100";
        ram[182] = "0b10111110011010101001101001011001";
        ram[183] = "0b10111110100011000010100110101011";
        ram[184] = "0b10111101110001001110001101101110";
        ram[185] = "0b10111110010000010010110000001111";
        ram[186] = "0b10111101100101011111111111000110";
        ram[187] = "0b10111100100101010100010001000111";
        ram[188] = "0b10111100011010010100000111111010";
        ram[189] = "0b10111110001010101001011010101010";
        ram[190] = "0b00111110000000001111000110011101";
        ram[191] = "0b00111101101101100111111001010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibMq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibMq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibMq) {
meminst = new conv_2_conv_2_weibMq_ram("conv_2_conv_2_weibMq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibMq() {
    delete meminst;
}


};//endmodule
#endif
