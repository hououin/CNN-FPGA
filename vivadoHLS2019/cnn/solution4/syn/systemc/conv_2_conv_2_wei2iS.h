// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei2iS_H__
#define __conv_2_conv_2_wei2iS_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei2iS_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei2iS_ram) {
        ram[0] = "0b10111110000101001000001000011100";
        ram[1] = "0b00111101010100110001110010100101";
        ram[2] = "0b00111101101101100111010010011011";
        ram[3] = "0b10111110001111101001000001010001";
        ram[4] = "0b00111101010101110000000011111010";
        ram[5] = "0b10111110001001000110011011010010";
        ram[6] = "0b10111110010011001110111000000010";
        ram[7] = "0b00111110001000011100011011110000";
        ram[8] = "0b00111101001111100100000010100100";
        ram[9] = "0b00111001100101110000110011001001";
        ram[10] = "0b10111101100000011011010000111001";
        ram[11] = "0b00111110000110001110111011011010";
        ram[12] = "0b10111101110101001110001001011010";
        ram[13] = "0b10111110100001000110101001110000";
        ram[14] = "0b10111110101010101110100000101100";
        ram[15] = "0b10111110001010110001000011011000";
        ram[16] = "0b10111101001001100010101111001101";
        ram[17] = "0b10111110100101001101101000111010";
        ram[18] = "0b00111100011101001110100000110011";
        ram[19] = "0b10111101011001011000111110110001";
        ram[20] = "0b00111101101111010111011101111101";
        ram[21] = "0b10111110110100101110110110111011";
        ram[22] = "0b10111110101110100111111001111000";
        ram[23] = "0b10111010101011100010000001000110";
        ram[24] = "0b10111110010111111001001110011011";
        ram[25] = "0b00111101000100001001011011110010";
        ram[26] = "0b10111101110011010100110010110111";
        ram[27] = "0b00111101101110100111010111011101";
        ram[28] = "0b10111110101111001000101010011100";
        ram[29] = "0b10111110000011011111111100111111";
        ram[30] = "0b00111110000000101111010101000011";
        ram[31] = "0b10111110001111010011010110110010";
        ram[32] = "0b10111110001011000010110001110101";
        ram[33] = "0b00111110010101101000110111010000";
        ram[34] = "0b00111101011001011001011010111010";
        ram[35] = "0b10111011100100001010111111110100";
        ram[36] = "0b00111101000000000100110011100000";
        ram[37] = "0b00111101010000001111111010001100";
        ram[38] = "0b00111100111001100101101011001110";
        ram[39] = "0b10111101100110111100000111001000";
        ram[40] = "0b10111101101101011001101000100110";
        ram[41] = "0b10111110000100111011101100011110";
        ram[42] = "0b10111101100011111011101010010100";
        ram[43] = "0b00111101111000000011000111001000";
        ram[44] = "0b00111011100011110100010110101011";
        ram[45] = "0b10111110000010100000000011100111";
        ram[46] = "0b10111101111011100111100101010101";
        ram[47] = "0b00111100101101000010001000010000";
        ram[48] = "0b00111101100011000011101101100001";
        ram[49] = "0b10111101100110100000000100111000";
        ram[50] = "0b10111110110101101110110110111010";
        ram[51] = "0b10111100001101101110000101001110";
        ram[52] = "0b00111101010001011010001011110101";
        ram[53] = "0b10111110000110111000010110100010";
        ram[54] = "0b10111101110001010011010111101011";
        ram[55] = "0b00111110010110100110101010110110";
        ram[56] = "0b10111110000100010100011100100110";
        ram[57] = "0b00111101011100000010011000111110";
        ram[58] = "0b10111101110000100000000011101101";
        ram[59] = "0b00111101100000010100011001011000";
        ram[60] = "0b10111110100110011011100010100100";
        ram[61] = "0b10111101101010001001010101000000";
        ram[62] = "0b10111101000101111001000101100101";
        ram[63] = "0b00111101111010000010000110010000";
        ram[64] = "0b10111101001000101101010011000101";
        ram[65] = "0b10111110000101101101001010111010";
        ram[66] = "0b10111110010011101101010101010101";
        ram[67] = "0b00111110010011010101111111110110";
        ram[68] = "0b10111110000000010110101000110011";
        ram[69] = "0b10111101100100100001111111111100";
        ram[70] = "0b10111101001000101000010100111110";
        ram[71] = "0b10111101100001011100011001111010";
        ram[72] = "0b10111110100011001110011110000010";
        ram[73] = "0b00111101111010011000101101111110";
        ram[74] = "0b00111101100101001111110100110110";
        ram[75] = "0b00111101001111001010010100100001";
        ram[76] = "0b10111110000111101101010010000000";
        ram[77] = "0b10111110110010111111111101001100";
        ram[78] = "0b10111110000010110001111111111111";
        ram[79] = "0b10111011100011110100001001100011";
        ram[80] = "0b10111101111000100110111010001000";
        ram[81] = "0b00111101010100010110100110100000";
        ram[82] = "0b10111110000100111000001100101100";
        ram[83] = "0b00111110000010111001000111010100";
        ram[84] = "0b00111110100001100000100010111001";
        ram[85] = "0b10111110111101001011111001000101";
        ram[86] = "0b10111110111100110111111111100111";
        ram[87] = "0b00111100010111010110110010110100";
        ram[88] = "0b10111110011001111111001001011010";
        ram[89] = "0b10111101111001111111100001000111";
        ram[90] = "0b00111101100011010000011010101001";
        ram[91] = "0b10111110000001001110110010100111";
        ram[92] = "0b10111101011010101001110110101111";
        ram[93] = "0b00111101000100001100100010001100";
        ram[94] = "0b00111101101111101110111000101010";
        ram[95] = "0b00111110011101001001110001101011";
        ram[96] = "0b00111101110001010111000010001011";
        ram[97] = "0b10111100111000000011101010000111";
        ram[98] = "0b00111101101000010111011010011101";
        ram[99] = "0b00111101110101101110001011010000";
        ram[100] = "0b10111110010010101101101111101101";
        ram[101] = "0b00111101100110001010010010001110";
        ram[102] = "0b10111101101010000001000110000100";
        ram[103] = "0b10111110011011101111100101011111";
        ram[104] = "0b10111110000110011100011100111001";
        ram[105] = "0b00111101111010110110000001110110";
        ram[106] = "0b10111101111001000110000101010110";
        ram[107] = "0b00111100101110001010011101101110";
        ram[108] = "0b00111101100111000111101010001001";
        ram[109] = "0b00111110010000111000000100110010";
        ram[110] = "0b00111110000011011111100011001101";
        ram[111] = "0b10111101101011000001001110111101";
        ram[112] = "0b00111101101100101001111110011010";
        ram[113] = "0b10111101000000101000000111000011";
        ram[114] = "0b10111110011101001111110110111100";
        ram[115] = "0b10111110000111110001100001010101";
        ram[116] = "0b00111101110010101100111101001110";
        ram[117] = "0b10111101111000110101001100111111";
        ram[118] = "0b10111101111010111011010101000111";
        ram[119] = "0b10111101100001101000101110110100";
        ram[120] = "0b10111100101101010010101011011001";
        ram[121] = "0b00111101111011110010111101011010";
        ram[122] = "0b10111110100010101111011010010101";
        ram[123] = "0b10111101110000010111010010000011";
        ram[124] = "0b10111110101110010000111010000000";
        ram[125] = "0b10111011000010111011110110011010";
        ram[126] = "0b10111101010011000111010000101101";
        ram[127] = "0b00111101100100011011111101011100";
        ram[128] = "0b00111110000101011100100011100100";
        ram[129] = "0b10111101111001110011000010101000";
        ram[130] = "0b10111110100001001101011001011010";
        ram[131] = "0b00111110001001110110101101110110";
        ram[132] = "0b10111110101111101110101011010010";
        ram[133] = "0b00111110100011100100100001110011";
        ram[134] = "0b00111101111100001111100101110110";
        ram[135] = "0b10111101101110100011010000101001";
        ram[136] = "0b00111110011010001001000001000010";
        ram[137] = "0b00111101111010100010001010001111";
        ram[138] = "0b00111101100010110111111110010110";
        ram[139] = "0b10111101110110111110101100110110";
        ram[140] = "0b10111101001100000000110000101101";
        ram[141] = "0b10111110001010101110001110110111";
        ram[142] = "0b00111101100101111010111000000001";
        ram[143] = "0b00111110001101111000001010101101";
        ram[144] = "0b00111101100100001001101110001000";
        ram[145] = "0b00111110011111100011010010100000";
        ram[146] = "0b00111110001001000111111010100111";
        ram[147] = "0b10111101110001110001011000001100";
        ram[148] = "0b10111110100001000011001101000001";
        ram[149] = "0b10111111001011011101000010111000";
        ram[150] = "0b10111110001101011100110010111101";
        ram[151] = "0b10111101111000100100111011101110";
        ram[152] = "0b10111011101101001100000110101011";
        ram[153] = "0b00111110010101011011100010001011";
        ram[154] = "0b00111110010001101011001001000110";
        ram[155] = "0b10111011011010001001111110101010";
        ram[156] = "0b00111100111110110010011000111111";
        ram[157] = "0b10111101110010111101111001010111";
        ram[158] = "0b10111101101011110001011000011110";
        ram[159] = "0b00111100001001011001101010111010";
        ram[160] = "0b00111110000000110100111010101111";
        ram[161] = "0b00111101000010111111000011011101";
        ram[162] = "0b00111110011001001101111111011101";
        ram[163] = "0b10111110001000110101011011011001";
        ram[164] = "0b10111101000001010000100101100000";
        ram[165] = "0b10111111000000100001110100110010";
        ram[166] = "0b10111110011100101100011001111001";
        ram[167] = "0b00111110010100101111000101010111";
        ram[168] = "0b10111110110001111001000100010000";
        ram[169] = "0b00111110011011110000101001111001";
        ram[170] = "0b10111110000001101001101100101000";
        ram[171] = "0b00111110001100110011001011110010";
        ram[172] = "0b10111110101100000100101010100101";
        ram[173] = "0b00111101100001100000001000101010";
        ram[174] = "0b00111101110000000001110000110101";
        ram[175] = "0b00111101110101100001010110100001";
        ram[176] = "0b10111101001011000010101111000010";
        ram[177] = "0b00111100111111100001000111011111";
        ram[178] = "0b10111011010011101101001111000101";
        ram[179] = "0b10111101110111100010111011000111";
        ram[180] = "0b00111101100001101011001011100111";
        ram[181] = "0b10111110001100000101101011111111";
        ram[182] = "0b10111110001110000011110001111011";
        ram[183] = "0b00111100110011000101011100100101";
        ram[184] = "0b00111110001001101000111100111110";
        ram[185] = "0b00111001100110011000010100001111";
        ram[186] = "0b10111110100001111011000110101011";
        ram[187] = "0b10111011110110000000001011111000";
        ram[188] = "0b10111110010011100100010001110101";
        ram[189] = "0b10111011101100011010000110110011";
        ram[190] = "0b10111100111111000111110010011010";
        ram[191] = "0b00111100111000000100001000010111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei2iS) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei2iS_ram* meminst;


SC_CTOR(conv_2_conv_2_wei2iS) {
meminst = new conv_2_conv_2_wei2iS_ram("conv_2_conv_2_wei2iS_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei2iS() {
    delete meminst;
}


};//endmodule
#endif
