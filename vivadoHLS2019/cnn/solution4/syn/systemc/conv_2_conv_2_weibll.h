// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibll_H__
#define __conv_2_conv_2_weibll_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibll_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibll_ram) {
        ram[0] = "0b00111100100101010100110000010111";
        ram[1] = "0b10111101101111111111110011101010";
        ram[2] = "0b10111101111110001101101111100110";
        ram[3] = "0b00111100011010101011110111111110";
        ram[4] = "0b10111101100111010001011000111011";
        ram[5] = "0b10111101100101111110011110111111";
        ram[6] = "0b10111110010100110111100010001111";
        ram[7] = "0b10111110000111110110100001000010";
        ram[8] = "0b00111110001011101011110011000101";
        ram[9] = "0b00111100110111010110011110110101";
        ram[10] = "0b00111101101010101001100010011101";
        ram[11] = "0b10111100010000010010010110001100";
        ram[12] = "0b10111110000101011100111110010100";
        ram[13] = "0b10111110001111010010001010000000";
        ram[14] = "0b00111101010011101001111111010110";
        ram[15] = "0b00111110010011000001101001100111";
        ram[16] = "0b10111110100111001001101100100101";
        ram[17] = "0b10111101100000011100011100110010";
        ram[18] = "0b00111101010100110100110010101101";
        ram[19] = "0b10111011001011101110001011010000";
        ram[20] = "0b00111101010000101001110000111111";
        ram[21] = "0b10111110010010000111001000001111";
        ram[22] = "0b10111110100000101001101010111111";
        ram[23] = "0b00111101101001101000111001000000";
        ram[24] = "0b10111110010111100010001100010110";
        ram[25] = "0b00111110010110001111001111010010";
        ram[26] = "0b00111100110001011010001101101000";
        ram[27] = "0b00111101010010111011101001100010";
        ram[28] = "0b10111110000000111010000110010011";
        ram[29] = "0b10111101100111011011110001000110";
        ram[30] = "0b00111011100100101110100000001111";
        ram[31] = "0b10111110011010110010010000010000";
        ram[32] = "0b00111100001100010100100101101011";
        ram[33] = "0b10111101110000001000010100100110";
        ram[34] = "0b00111101011100000101000101000111";
        ram[35] = "0b00111011111001101100111010000100";
        ram[36] = "0b10111101100111111100011100101011";
        ram[37] = "0b00111101100000010000011110010111";
        ram[38] = "0b10111110000110000111001001010000";
        ram[39] = "0b00111011100001110000010011101000";
        ram[40] = "0b10111101100011101111010010111010";
        ram[41] = "0b00111110100011111011100010101000";
        ram[42] = "0b10111110001101110011100001101101";
        ram[43] = "0b00111101110000000001111110110000";
        ram[44] = "0b00111101111010001110011011011100";
        ram[45] = "0b00111101010011001010000010001010";
        ram[46] = "0b10111110000101010100110100100110";
        ram[47] = "0b10111101101100010001110011010011";
        ram[48] = "0b10111110000011011100100110010011";
        ram[49] = "0b10111110010110111100100110111001";
        ram[50] = "0b00111100001111100110110101111100";
        ram[51] = "0b10111101100000011001100100010001";
        ram[52] = "0b10111101101011000111000101110111";
        ram[53] = "0b00111101000001100011111110111110";
        ram[54] = "0b10111101100101001000100000110001";
        ram[55] = "0b10111101110110011010101100100011";
        ram[56] = "0b10111110000100111111101110011001";
        ram[57] = "0b00111100011010011010000110000011";
        ram[58] = "0b10111011100111011011100011010101";
        ram[59] = "0b00111011010101001000011010110100";
        ram[60] = "0b00111101000110110100011100110001";
        ram[61] = "0b00111110001110010000101111100001";
        ram[62] = "0b00111101110100011010000110010010";
        ram[63] = "0b00111110010010111001110000010001";
        ram[64] = "0b10111110000111001011010111110110";
        ram[65] = "0b10111100101010000100111001100000";
        ram[66] = "0b10111101011111001010110101101100";
        ram[67] = "0b10111101001001110110000010000001";
        ram[68] = "0b10111110000101111010001100111011";
        ram[69] = "0b10111101101001100010011110010100";
        ram[70] = "0b10111101011110100111100101001000";
        ram[71] = "0b10111101100101001000010100100010";
        ram[72] = "0b00111100100001100000111000111010";
        ram[73] = "0b10111011101110111101111011010101";
        ram[74] = "0b00111101011110100110000001001010";
        ram[75] = "0b00111101001111101000110111001001";
        ram[76] = "0b10111101111101110010001100111101";
        ram[77] = "0b10111101001001111111010100000011";
        ram[78] = "0b00111110001111101001011011110111";
        ram[79] = "0b00111101110100111110011100110100";
        ram[80] = "0b00111101100110111110111110000000";
        ram[81] = "0b10111101001010000001101011100001";
        ram[82] = "0b00111110001001100100100000001000";
        ram[83] = "0b00111110000000111000000100000100";
        ram[84] = "0b00111110001001011110010010010011";
        ram[85] = "0b10111110001011100100000110100000";
        ram[86] = "0b00111101110101011000000011100010";
        ram[87] = "0b10111011101010110001000011110100";
        ram[88] = "0b10111101111100101110110010000100";
        ram[89] = "0b10111101001110001001101001111001";
        ram[90] = "0b00111101000001111101000111111111";
        ram[91] = "0b10111110001001111110010101100001";
        ram[92] = "0b00111101011111010011011010101100";
        ram[93] = "0b00111101110101011000101000011100";
        ram[94] = "0b10111101010001110001110100011111";
        ram[95] = "0b10111100111010100001001011111010";
        ram[96] = "0b00111100100010000011000000011001";
        ram[97] = "0b10111100010100111011001101111001";
        ram[98] = "0b10111101001100111001111000000010";
        ram[99] = "0b00111101010000001111101111110110";
        ram[100] = "0b10111110000110101110010110010110";
        ram[101] = "0b00111101000100001110111110010011";
        ram[102] = "0b10111110000001000011101000111111";
        ram[103] = "0b10111110010001001111011010011110";
        ram[104] = "0b10111101101001100010011000011110";
        ram[105] = "0b10111110010000000101001010110101";
        ram[106] = "0b10111101111011011100101110101100";
        ram[107] = "0b10111100000111000100110101111101";
        ram[108] = "0b00111100110111011001010011010111";
        ram[109] = "0b00111110001000010011111111101001";
        ram[110] = "0b10111110010001011110100111101101";
        ram[111] = "0b00111100011000100110010110000000";
        ram[112] = "0b10111101110100111100101101010101";
        ram[113] = "0b10111110010101101111101110101011";
        ram[114] = "0b00111101011010001000000100011101";
        ram[115] = "0b00111101110000100010001110100010";
        ram[116] = "0b10111100110100101000110111101111";
        ram[117] = "0b10111101111001010101001111111111";
        ram[118] = "0b10111110000010010010111000100110";
        ram[119] = "0b10111110101011001010000000000111";
        ram[120] = "0b00111110100000001111100010001000";
        ram[121] = "0b00111101110011111101101100000111";
        ram[122] = "0b10111110100001110101010101011111";
        ram[123] = "0b00111101001111010110100001011110";
        ram[124] = "0b00111100101101010000011000010000";
        ram[125] = "0b00111101110101000101110111110101";
        ram[126] = "0b10111110000110100010110100110010";
        ram[127] = "0b10111101011101111101001110000110";
        ram[128] = "0b00111101101111011110101010000110";
        ram[129] = "0b00111100001110110101011010100011";
        ram[130] = "0b10111101100011010000110001010100";
        ram[131] = "0b00111100000101000001000101110111";
        ram[132] = "0b10111101111011101101011101010101";
        ram[133] = "0b00111101100100001001100110001001";
        ram[134] = "0b10111110010101010011001010000101";
        ram[135] = "0b00111101100110010110101001110110";
        ram[136] = "0b00111100101111111110011110000111";
        ram[137] = "0b00111100000111111011111101101100";
        ram[138] = "0b10111011011110011111011101101011";
        ram[139] = "0b10111101101110000100001011101101";
        ram[140] = "0b10111101111010100101111100001101";
        ram[141] = "0b10111100010110001110010100101100";
        ram[142] = "0b10111110000111001010000000001101";
        ram[143] = "0b10111101011101101110001101111111";
        ram[144] = "0b00111101101000000000001011100111";
        ram[145] = "0b00111110000100110110100011100010";
        ram[146] = "0b00111110001000001011100100100000";
        ram[147] = "0b00111101011111110101101111001110";
        ram[148] = "0b10111110011111100000000010011101";
        ram[149] = "0b10111110100110001001110011001010";
        ram[150] = "0b00111101111100011001100101000111";
        ram[151] = "0b10111110001001100000010101110010";
        ram[152] = "0b10111110011001100111110100100100";
        ram[153] = "0b00111101000100000110001101100011";
        ram[154] = "0b00111110001011110110000000110010";
        ram[155] = "0b10111100110000000111111100111001";
        ram[156] = "0b10111101101010011011101100000011";
        ram[157] = "0b00111101000010010001101001100011";
        ram[158] = "0b00111101110101100000011111110101";
        ram[159] = "0b10111101001001111001000111010111";
        ram[160] = "0b00111101000010010001001100101001";
        ram[161] = "0b10111100101111110001100110000111";
        ram[162] = "0b00111101100110110111001001110111";
        ram[163] = "0b10111110011010000010101110011101";
        ram[164] = "0b10111110000001111010111101010001";
        ram[165] = "0b10111110100010000101100101001110";
        ram[166] = "0b10111110001001110111000111100110";
        ram[167] = "0b00111101101011100110000010001111";
        ram[168] = "0b10111101101000101101100011101110";
        ram[169] = "0b10111100100110001101110001101100";
        ram[170] = "0b10111101001110100011110000011100";
        ram[171] = "0b10111101110010101000111011010000";
        ram[172] = "0b10111110000100110110000101100000";
        ram[173] = "0b10111101000100111100111110100110";
        ram[174] = "0b10111110000010111101000001101001";
        ram[175] = "0b10111101100000111110110001100010";
        ram[176] = "0b00111101110101011100101111000000";
        ram[177] = "0b00111100001011001011001010101100";
        ram[178] = "0b10111110000010010000110011010100";
        ram[179] = "0b10111101000110000111010011010111";
        ram[180] = "0b10111101100001011011101011111011";
        ram[181] = "0b00111101011000101000001110101111";
        ram[182] = "0b10111110011011110100011001010111";
        ram[183] = "0b00111101110000100011000000100100";
        ram[184] = "0b00111101100010001100011110010010";
        ram[185] = "0b10111101000101110000001000111111";
        ram[186] = "0b10111110100110010000111111001100";
        ram[187] = "0b00111101100010011100110111010110";
        ram[188] = "0b10111100100110111100011001010011";
        ram[189] = "0b10111110000111010000101001011010";
        ram[190] = "0b00111110000101110110010011000100";
        ram[191] = "0b00111101101111011010110011001101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibll) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibll_ram* meminst;


SC_CTOR(conv_2_conv_2_weibll) {
meminst = new conv_2_conv_2_weibll_ram("conv_2_conv_2_weibll_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibll() {
    delete meminst;
}


};//endmodule
#endif
