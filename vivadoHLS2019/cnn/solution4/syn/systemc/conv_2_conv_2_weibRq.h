// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibRq_H__
#define __conv_2_conv_2_weibRq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibRq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibRq_ram) {
        ram[0] = "0b10111101110111011110000001001101";
        ram[1] = "0b10111101011000110111101001110111";
        ram[2] = "0b10111010010111001100111001100010";
        ram[3] = "0b00111110010001110011010010011101";
        ram[4] = "0b10111101110001101111101101001000";
        ram[5] = "0b00111100101110001000110110010010";
        ram[6] = "0b00111011001111010001000101010100";
        ram[7] = "0b00111101100011000111110011010011";
        ram[8] = "0b00111101010010101100011100011110";
        ram[9] = "0b10111101010001101000010110100101";
        ram[10] = "0b00111110000011001101011101101011";
        ram[11] = "0b00111011110011110011011111110110";
        ram[12] = "0b00111011100010101101111101001010";
        ram[13] = "0b00111110011010000000111011001101";
        ram[14] = "0b00111110011100000110000000100110";
        ram[15] = "0b00111110000110110010000010100101";
        ram[16] = "0b10111110011010110010101101110011";
        ram[17] = "0b00111101110110111000001001101111";
        ram[18] = "0b10111100100111111001000011110100";
        ram[19] = "0b10111110010111101001101111101000";
        ram[20] = "0b00111110010111000111011011111010";
        ram[21] = "0b00111100110111110001110111110011";
        ram[22] = "0b00111110000010111010110110100100";
        ram[23] = "0b10111101010110000110011101010100";
        ram[24] = "0b00111101101100011010101100101001";
        ram[25] = "0b00111110000000101100011101100100";
        ram[26] = "0b00111011110000110001000011100111";
        ram[27] = "0b10111101010010001011111111101110";
        ram[28] = "0b00111110010110011100010111000110";
        ram[29] = "0b10111101110100001010001100101011";
        ram[30] = "0b10111110001000100111111100011100";
        ram[31] = "0b10111110101110011010000110010100";
        ram[32] = "0b00111101101010011101101111111110";
        ram[33] = "0b00111110010101100010010100111001";
        ram[34] = "0b00111100101010000010111111001011";
        ram[35] = "0b10111110001001001001001100101011";
        ram[36] = "0b00111101010000001101111001001010";
        ram[37] = "0b00111110001111011111101010100100";
        ram[38] = "0b10111101010011101100100110001001";
        ram[39] = "0b10111110000010111001110101101010";
        ram[40] = "0b10111110101011111010001111001010";
        ram[41] = "0b00111110100000011001111000010000";
        ram[42] = "0b10111110010000001100000101101000";
        ram[43] = "0b00111110010101000110111100101001";
        ram[44] = "0b10111101001110110110001000011010";
        ram[45] = "0b00111101011000001100011011111001";
        ram[46] = "0b00111110010101100100110001011100";
        ram[47] = "0b00111110001000011011110101011000";
        ram[48] = "0b10111101101011000101011000000000";
        ram[49] = "0b10111100001000111111000110101101";
        ram[50] = "0b10111110000010001001011010000110";
        ram[51] = "0b10111110000111100010100001111101";
        ram[52] = "0b10111101111111101100110111111010";
        ram[53] = "0b00111101000101110011111101110011";
        ram[54] = "0b10111110011000111101100100111010";
        ram[55] = "0b10111101101110010100100110101100";
        ram[56] = "0b00111110000100100000100010001010";
        ram[57] = "0b10111110001101000100011101010100";
        ram[58] = "0b10111110001011001011011010001111";
        ram[59] = "0b00111101001000010110111001011111";
        ram[60] = "0b00111101101111011011010010100100";
        ram[61] = "0b00111110000100011101010101010100";
        ram[62] = "0b10111101110111110100011011111000";
        ram[63] = "0b10111110000110101011010011101010";
        ram[64] = "0b10111101100001100101111100101111";
        ram[65] = "0b00111101011110100110000100110100";
        ram[66] = "0b10111101101110010110101101101011";
        ram[67] = "0b10111100000111100010000000111010";
        ram[68] = "0b00111011001011000001101010101101";
        ram[69] = "0b00111110001101001010010010101010";
        ram[70] = "0b10111110010001011100000000111010";
        ram[71] = "0b10111101011100101011011000000010";
        ram[72] = "0b10111100010011001011100001100001";
        ram[73] = "0b00111011100000001100011010000110";
        ram[74] = "0b00111110000000101010000111000101";
        ram[75] = "0b00111101100000100111001111011100";
        ram[76] = "0b10111110010010011111110110001110";
        ram[77] = "0b00111101010111011001101010010100";
        ram[78] = "0b00111101001000101010000000110110";
        ram[79] = "0b10111101000001100101011110010111";
        ram[80] = "0b00111101101110011100100110100100";
        ram[81] = "0b00111101001011000010011100001100";
        ram[82] = "0b00111110001000011000101001010111";
        ram[83] = "0b10111101110011100000100101010011";
        ram[84] = "0b10111101100000100101101000001111";
        ram[85] = "0b10111011100101010100111011001110";
        ram[86] = "0b00111101101000100001111011011111";
        ram[87] = "0b00111101001001001010011010101001";
        ram[88] = "0b00111101101110000111001001100110";
        ram[89] = "0b10111101110000110110111001101010";
        ram[90] = "0b00111101100010001011011111110111";
        ram[91] = "0b00111100110011100001011010000100";
        ram[92] = "0b10111101000000110011101100001101";
        ram[93] = "0b10111101111100100010010011101011";
        ram[94] = "0b00111100101110000010111011110001";
        ram[95] = "0b10111110000001111111001100010000";
        ram[96] = "0b00111101001001011110111111010011";
        ram[97] = "0b10111101111000100100000110111001";
        ram[98] = "0b00111110001011101111001101111010";
        ram[99] = "0b10111110001010001111111111011100";
        ram[100] = "0b10111110001010010011100000101101";
        ram[101] = "0b10111110001101000101001010111100";
        ram[102] = "0b00111100001000111010010011011011";
        ram[103] = "0b00111101000111010000110110110010";
        ram[104] = "0b00111100110001011000100001011111";
        ram[105] = "0b00111100111010110010111010100101";
        ram[106] = "0b10111100101100100001110000101001";
        ram[107] = "0b00111100101111011100110001011001";
        ram[108] = "0b10111101011101110010000001000111";
        ram[109] = "0b00111110011101101010100000010001";
        ram[110] = "0b10111100101001000111101001110011";
        ram[111] = "0b10111101101001000011111100011110";
        ram[112] = "0b10111110011010111101010101100101";
        ram[113] = "0b10111101101011111010011110111000";
        ram[114] = "0b10111100010010110000011001110010";
        ram[115] = "0b10111110000110100100100110110001";
        ram[116] = "0b10111101111111010010001001111011";
        ram[117] = "0b00111110000010000010100100000011";
        ram[118] = "0b10111110010101010100110000011010";
        ram[119] = "0b10111110001011101000000001101100";
        ram[120] = "0b00111100101110110110111101011001";
        ram[121] = "0b10111110000110011001101110010000";
        ram[122] = "0b10111101110010000111010001110011";
        ram[123] = "0b10111101000000111011011000010101";
        ram[124] = "0b00111101110001110001100011011000";
        ram[125] = "0b10111011001010001111100111000011";
        ram[126] = "0b10111101011110001001110001000100";
        ram[127] = "0b00111101101101001010010001111111";
        ram[128] = "0b00111100011011111001010101111110";
        ram[129] = "0b00111100001101101001011110011100";
        ram[130] = "0b10111101100011000100011011000101";
        ram[131] = "0b10111101101100100001010001010100";
        ram[132] = "0b10111100001111110010101100010111";
        ram[133] = "0b00111101110111000001100101111110";
        ram[134] = "0b10111101100100101011001111110011";
        ram[135] = "0b00111110000011111000101110010000";
        ram[136] = "0b00111101100111111100010101010011";
        ram[137] = "0b00111101001100010100101010100101";
        ram[138] = "0b10111110100110101110101101000101";
        ram[139] = "0b00111110000111011110110110011001";
        ram[140] = "0b00111101100011001010100111011001";
        ram[141] = "0b00111110001100110011011111010011";
        ram[142] = "0b00111100110001001111110001111001";
        ram[143] = "0b00111101011001000010110110010100";
        ram[144] = "0b10111011010010010111001100000001";
        ram[145] = "0b00111101110100001111000100000010";
        ram[146] = "0b10111101100100010011100010000010";
        ram[147] = "0b10111100110011000100111010010100";
        ram[148] = "0b10111110000100111011111010101110";
        ram[149] = "0b10111100111110011100001101011111";
        ram[150] = "0b00111101000111001010000111101100";
        ram[151] = "0b00111101000110011100011100110011";
        ram[152] = "0b10111101100111000011010000111100";
        ram[153] = "0b10111101101101111010101011000110";
        ram[154] = "0b00111110001100011101001110111100";
        ram[155] = "0b00111110001101010010110001101000";
        ram[156] = "0b10111110000010110101001011000000";
        ram[157] = "0b00111100111101101011000101101101";
        ram[158] = "0b00111101110001001001110001101010";
        ram[159] = "0b10111101011010101111100111110000";
        ram[160] = "0b00111101011000100001100011111010";
        ram[161] = "0b10111101100100000111111010001111";
        ram[162] = "0b00111101000010100111010100001100";
        ram[163] = "0b10111110010110001011010110110000";
        ram[164] = "0b10111110100001100000000110101001";
        ram[165] = "0b00111010111110110111001000110111";
        ram[166] = "0b10111011111001100010110101100100";
        ram[167] = "0b00111101111111010110111110110010";
        ram[168] = "0b00111101110101010110100100000011";
        ram[169] = "0b10111101111100001011110010110010";
        ram[170] = "0b00111101100111011101010010001001";
        ram[171] = "0b10111101000010001011010001001110";
        ram[172] = "0b00111101100001001001100110111001";
        ram[173] = "0b10111110000101000010000001100110";
        ram[174] = "0b10111101100001100110010001101111";
        ram[175] = "0b00111101111010010000111101100011";
        ram[176] = "0b10111101011111111101100011001001";
        ram[177] = "0b00111011100111001101100001101010";
        ram[178] = "0b10111101111100000110000101010000";
        ram[179] = "0b00111101010111011111100011100001";
        ram[180] = "0b00111101000101001100010000000010";
        ram[181] = "0b00111110000010011100101000110110";
        ram[182] = "0b10111110000111000111011100111101";
        ram[183] = "0b10111110100010100100000101001100";
        ram[184] = "0b10111110001101010000001100100001";
        ram[185] = "0b10111100010100100110111011010000";
        ram[186] = "0b10111100100110101110100111010010";
        ram[187] = "0b00111101010000110010011100100110";
        ram[188] = "0b00111101001001010111001101100000";
        ram[189] = "0b10111110010101110010111110011101";
        ram[190] = "0b00111101100110110101111010100000";
        ram[191] = "0b00111101111001111100110001110111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibRq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibRq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibRq) {
meminst = new conv_2_conv_2_weibRq_ram("conv_2_conv_2_weibRq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibRq() {
    delete meminst;
}


};//endmodule
#endif
