// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibhl_H__
#define __conv_2_conv_2_weibhl_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibhl_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibhl_ram) {
        ram[0] = "0b10111101101111110101000000101101";
        ram[1] = "0b00111101110001111100000100100001";
        ram[2] = "0b00111110001011011010111110010010";
        ram[3] = "0b00111100110101100111000100110011";
        ram[4] = "0b00111101101000011000010100101000";
        ram[5] = "0b10111100011110111010010001111110";
        ram[6] = "0b00111100100110101001000001010010";
        ram[7] = "0b00111101110000100000101001110110";
        ram[8] = "0b10111110000001110100100011000100";
        ram[9] = "0b00111100100110100110100100011110";
        ram[10] = "0b00111100000010110111100010010101";
        ram[11] = "0b00111101100100100101110111010011";
        ram[12] = "0b00111101110101101010000110010101";
        ram[13] = "0b00111101100011110100010111001110";
        ram[14] = "0b10111101101010110100010011101010";
        ram[15] = "0b10111110000011000001100111100010";
        ram[16] = "0b00111101110011011101101011001101";
        ram[17] = "0b10111101001001110000001101001001";
        ram[18] = "0b00111011000110000101111000111110";
        ram[19] = "0b10111110011100111101010011110101";
        ram[20] = "0b00111100110011111101110011010100";
        ram[21] = "0b10111101110101000010011011011011";
        ram[22] = "0b10111101110110100100010000111000";
        ram[23] = "0b00111101011000011000000100000011";
        ram[24] = "0b10111110000110100110110001011110";
        ram[25] = "0b10111101010001101100100100100110";
        ram[26] = "0b10111110001000101000100010100000";
        ram[27] = "0b10111101101110011110111110100101";
        ram[28] = "0b00111101111001111000111101110001";
        ram[29] = "0b10111101001000011101111110011101";
        ram[30] = "0b00111110011000001100010110011010";
        ram[31] = "0b10111110001010101001001000000001";
        ram[32] = "0b10111101101100110100110001100111";
        ram[33] = "0b10111101011010100111000101101101";
        ram[34] = "0b10111101100100100110000010111011";
        ram[35] = "0b10111101100000111101011010100110";
        ram[36] = "0b10111101111110101001011111000101";
        ram[37] = "0b00111101100110010110011101101100";
        ram[38] = "0b00111101101100100101100000111101";
        ram[39] = "0b00111100011010101101111100101100";
        ram[40] = "0b10111110100110010011000010110000";
        ram[41] = "0b10111110000010101001000100010101";
        ram[42] = "0b10111011101100100101010101100100";
        ram[43] = "0b10111101100001101011101011111101";
        ram[44] = "0b00111101001000001011100101000000";
        ram[45] = "0b00111100000001101101000000000101";
        ram[46] = "0b10111101110100101011011111101111";
        ram[47] = "0b10111101110100100000010100001100";
        ram[48] = "0b00111100100000100010101000001001";
        ram[49] = "0b10111101000111101010001011000100";
        ram[50] = "0b10111101001100000101111110110011";
        ram[51] = "0b00111101110001001000110001111110";
        ram[52] = "0b10111101101101001101010010001111";
        ram[53] = "0b10111110011000111001011011101011";
        ram[54] = "0b10111110100100111011000001010111";
        ram[55] = "0b10111101001001010111010101111100";
        ram[56] = "0b10111101010100000000011101111100";
        ram[57] = "0b00111100101011010100001100001010";
        ram[58] = "0b10111110000000110010100000001101";
        ram[59] = "0b10111100000111111010101101010011";
        ram[60] = "0b10111110010010110010111101010101";
        ram[61] = "0b10111101111110101110100001101010";
        ram[62] = "0b00111110010000010000111011111001";
        ram[63] = "0b10111101000110100000100011011000";
        ram[64] = "0b10111110000011101001010011110010";
        ram[65] = "0b00111101010111110011101111011110";
        ram[66] = "0b10111100011000010110001010110111";
        ram[67] = "0b00111110000101010011011001111011";
        ram[68] = "0b00111101010110100000000000001001";
        ram[69] = "0b00111101110001010101010010010110";
        ram[70] = "0b00111101000110111101000100110011";
        ram[71] = "0b00111101111101101100100111001111";
        ram[72] = "0b10111110010110101111111110101010";
        ram[73] = "0b00111101110101001001111110100110";
        ram[74] = "0b00111110000010110100110101110101";
        ram[75] = "0b00111101000111110001100011010110";
        ram[76] = "0b00111101110101010110000110000111";
        ram[77] = "0b10111101110111011110111111101001";
        ram[78] = "0b10111101101010100100111011001001";
        ram[79] = "0b10111101101000011000010110100101";
        ram[80] = "0b10111100101001100111011000111011";
        ram[81] = "0b10111100001111001000011010101010";
        ram[82] = "0b10111110000111010100000010010010";
        ram[83] = "0b00111110000010111000100101110011";
        ram[84] = "0b00111011011100101011001111011110";
        ram[85] = "0b00111100100011010101001000001010";
        ram[86] = "0b10111110000001100100111111000010";
        ram[87] = "0b10111100101100010111110000110010";
        ram[88] = "0b10111101001000011011110100110011";
        ram[89] = "0b00111100100000110011111100100101";
        ram[90] = "0b00111101110000101000111001000001";
        ram[91] = "0b10111110011011110101011100111000";
        ram[92] = "0b10111101110100101101010011011100";
        ram[93] = "0b10111101010000010000100101001110";
        ram[94] = "0b00111101111001011011100000101110";
        ram[95] = "0b00111101110101011000110100111011";
        ram[96] = "0b00111110000110010011100011001110";
        ram[97] = "0b00111101011010100100101110100110";
        ram[98] = "0b10111011111100110011011100111011";
        ram[99] = "0b10111110000000001100010000110110";
        ram[100] = "0b10111101000001101111010001011011";
        ram[101] = "0b10111100100100010111111100110000";
        ram[102] = "0b00111101111000101101110000111000";
        ram[103] = "0b10111110000101011111001010000110";
        ram[104] = "0b10111110000011001011000010000110";
        ram[105] = "0b00111101000001001101111001111011";
        ram[106] = "0b00111101111100000010000000100011";
        ram[107] = "0b10111100100010010110011000101110";
        ram[108] = "0b00111110000011100101110110001010";
        ram[109] = "0b00111110001000111110110100101011";
        ram[110] = "0b00111101111101100110010111011110";
        ram[111] = "0b00111110010000011011101001110001";
        ram[112] = "0b00111110010001000101001011000100";
        ram[113] = "0b10111110000111011001010101001010";
        ram[114] = "0b00111101011100001110111001100111";
        ram[115] = "0b10111100110001010010000011000110";
        ram[116] = "0b00111011000100010011100101011000";
        ram[117] = "0b00111101010000010111101101001100";
        ram[118] = "0b10111101001001010011011011110001";
        ram[119] = "0b00111101011101010000101111111100";
        ram[120] = "0b10111101011001000110111101111111";
        ram[121] = "0b00111101100001000001110100001101";
        ram[122] = "0b00111101001110000110110101101111";
        ram[123] = "0b10111011101010000100011000111100";
        ram[124] = "0b10111110000000101010100011111010";
        ram[125] = "0b10111101101010110110011110010111";
        ram[126] = "0b10111101010000000011101111001100";
        ram[127] = "0b00111101101001011111000001101100";
        ram[128] = "0b00111101101000101011000000010100";
        ram[129] = "0b10111110100000111001101110001010";
        ram[130] = "0b10111110100100101100110001111000";
        ram[131] = "0b00111100101110100000110011100110";
        ram[132] = "0b10111100000110010000100101101010";
        ram[133] = "0b00111100000101000010100010000100";
        ram[134] = "0b00111110001011110001001011100010";
        ram[135] = "0b10111101001101111011111011111000";
        ram[136] = "0b00111011010001100000111001001011";
        ram[137] = "0b10111100101001100100010111101000";
        ram[138] = "0b00111101000011111100000010011011";
        ram[139] = "0b10111100111110100100000001001100";
        ram[140] = "0b00111110001100000011010100101000";
        ram[141] = "0b10111101110001001100101011000101";
        ram[142] = "0b00111110000000100111011001000011";
        ram[143] = "0b00111101111000110011111110110111";
        ram[144] = "0b00111101000111110111110010110010";
        ram[145] = "0b10111100000110001110111110101010";
        ram[146] = "0b00111100010010000011101011110100";
        ram[147] = "0b00111101101101001010000010110001";
        ram[148] = "0b10111110010111010100001110110010";
        ram[149] = "0b10111110001111010011100011001011";
        ram[150] = "0b10111101100011111111110010111110";
        ram[151] = "0b00111101010011111000010000111001";
        ram[152] = "0b00111100110111100001010001110111";
        ram[153] = "0b00111110001100001100001111110100";
        ram[154] = "0b00111101101000101011101000011010";
        ram[155] = "0b10111100111011001110100011101101";
        ram[156] = "0b10111100100111000001101100000011";
        ram[157] = "0b10111101110111010110011000100110";
        ram[158] = "0b10111110000000110001101011110011";
        ram[159] = "0b00111101111010110111000100001011";
        ram[160] = "0b00111101101001000000100110010111";
        ram[161] = "0b00111101100101110010000001101110";
        ram[162] = "0b00111101111000101111000111000011";
        ram[163] = "0b10111101011000010011000110001011";
        ram[164] = "0b10111011101000000111000001110101";
        ram[165] = "0b10111110100011100011000110000011";
        ram[166] = "0b00111101010100000011010001010101";
        ram[167] = "0b00111011111110010010010001110110";
        ram[168] = "0b10111110001101011100111000100111";
        ram[169] = "0b00111110010000010011001001001000";
        ram[170] = "0b00111100111110111000100101111000";
        ram[171] = "0b00111110010110011001101011000000";
        ram[172] = "0b10111110010001111110011000010110";
        ram[173] = "0b00111100100011001000111000101101";
        ram[174] = "0b10111101000011011000011000010000";
        ram[175] = "0b10111100110000010000111101111000";
        ram[176] = "0b10111011110011001100011110001110";
        ram[177] = "0b10111101011011001001100010101111";
        ram[178] = "0b00111101100101100001111100100010";
        ram[179] = "0b10111110001111110001000011101111";
        ram[180] = "0b00111100011110110111101000110101";
        ram[181] = "0b10111101001110011010011000101100";
        ram[182] = "0b10111100001100000110100010000000";
        ram[183] = "0b00111110010010110001100010100101";
        ram[184] = "0b00111101100010101001111010011010";
        ram[185] = "0b10111110000111011100111100001110";
        ram[186] = "0b00111110001000001111000000100000";
        ram[187] = "0b10111101101111101001101000010101";
        ram[188] = "0b00111101100011100111011000100110";
        ram[189] = "0b00111110100001011100110101101101";
        ram[190] = "0b10111110001100000010010100001010";
        ram[191] = "0b10111101101010000110001000000100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibhl) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibhl_ram* meminst;


SC_CTOR(conv_2_conv_2_weibhl) {
meminst = new conv_2_conv_2_weibhl_ram("conv_2_conv_2_weibhl_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibhl() {
    delete meminst;
}


};//endmodule
#endif
