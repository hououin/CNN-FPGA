// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei5jm_H__
#define __conv_2_conv_2_wei5jm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei5jm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei5jm_ram) {
        ram[0] = "0b10111101101111110000100111111110";
        ram[1] = "0b00111110010011011011000110100101";
        ram[2] = "0b10111010110101001111111000100100";
        ram[3] = "0b00111100101000000001000000100101";
        ram[4] = "0b00111101111000001111000010101100";
        ram[5] = "0b00111101110101000100100111101001";
        ram[6] = "0b00111101100110000010111010110011";
        ram[7] = "0b10111100100001001010101001101100";
        ram[8] = "0b10111100100101111101101110001010";
        ram[9] = "0b10111100110001010110011000110000";
        ram[10] = "0b00111101100011011111111110111111";
        ram[11] = "0b00111100110101100110010111011111";
        ram[12] = "0b00111101000111101001111101101110";
        ram[13] = "0b00111101101010001001100100001010";
        ram[14] = "0b00111110000000100100010001001001";
        ram[15] = "0b10111101000111110100111011010101";
        ram[16] = "0b00111110000000100001001100110000";
        ram[17] = "0b10111101011001010111010010011000";
        ram[18] = "0b00111110001001101011011010110101";
        ram[19] = "0b10111110010011101011100100101100";
        ram[20] = "0b00111101111011110011010000110100";
        ram[21] = "0b00111100100010000011110110010110";
        ram[22] = "0b10111110000001010000001010001001";
        ram[23] = "0b10111100100100101011110111100000";
        ram[24] = "0b00111100111001101000111111100101";
        ram[25] = "0b10111101110011010111101101011100";
        ram[26] = "0b10111101100001000101111010110111";
        ram[27] = "0b10111110010000000110100110000101";
        ram[28] = "0b00111101110000001110010100101100";
        ram[29] = "0b10111110000100111100001110110010";
        ram[30] = "0b00111101111101011000000000000101";
        ram[31] = "0b10111110100001101111001101010110";
        ram[32] = "0b10111101011111001111011011010011";
        ram[33] = "0b10111101001011110001011101111110";
        ram[34] = "0b10111101100111101000011001101110";
        ram[35] = "0b10111101101011110110001111001011";
        ram[36] = "0b10111110101001110000011100101010";
        ram[37] = "0b00111101100010101001011100100101";
        ram[38] = "0b00111100101010011001110011101110";
        ram[39] = "0b10111100101111010000001111001110";
        ram[40] = "0b10111110100110101101000110111100";
        ram[41] = "0b10111101110101100100101000001001";
        ram[42] = "0b00111101111101111000000010111110";
        ram[43] = "0b10111101010110001100110000111010";
        ram[44] = "0b10111100110000110100110100010110";
        ram[45] = "0b10111101101010001010110110011001";
        ram[46] = "0b00111101110010100011101111100011";
        ram[47] = "0b00111101001001100101111000111111";
        ram[48] = "0b10111101101000001100010100111101";
        ram[49] = "0b10111101110010011000111010111110";
        ram[50] = "0b00111100010011010101011101111000";
        ram[51] = "0b00111110110000000011010000101110";
        ram[52] = "0b10111101110010100000100011111100";
        ram[53] = "0b10111101000110011000111110000100";
        ram[54] = "0b10111101101010011011111000011010";
        ram[55] = "0b10111100101010101010101100110100";
        ram[56] = "0b00111101000011100000010110000100";
        ram[57] = "0b10111101010000111010010101110000";
        ram[58] = "0b10111100100100001111010001001111";
        ram[59] = "0b00111101110101010001011001111100";
        ram[60] = "0b00111101001111101110101011100000";
        ram[61] = "0b10111101101111010011100100100000";
        ram[62] = "0b00111101101001000010101010100000";
        ram[63] = "0b10111101100110000001011001101101";
        ram[64] = "0b00111100001110010101100011100100";
        ram[65] = "0b00111101111100101110000101010100";
        ram[66] = "0b10111101000100011100000000110101";
        ram[67] = "0b10111101110101001111010000000111";
        ram[68] = "0b00111101111111001111100000100010";
        ram[69] = "0b00111101010011010000111110111110";
        ram[70] = "0b10111100011001000010101100000000";
        ram[71] = "0b00111100100000110000101110010001";
        ram[72] = "0b10111100110110000011001010100110";
        ram[73] = "0b10111000110001111001101010100110";
        ram[74] = "0b00111101101111100011111001011000";
        ram[75] = "0b10111100110110100001000000000101";
        ram[76] = "0b00111100110111010100010011010000";
        ram[77] = "0b00111110000111000111011010110001";
        ram[78] = "0b00111101000000010101111011110110";
        ram[79] = "0b00111100110110001100001010000000";
        ram[80] = "0b10111101100000100001001101001011";
        ram[81] = "0b10111100111000000111010110010011";
        ram[82] = "0b10111101010001001110110101111110";
        ram[83] = "0b00111101000000001011011000101111";
        ram[84] = "0b10111100100011010010000101110001";
        ram[85] = "0b00111110000110011001111000101001";
        ram[86] = "0b00111101010100101110011100011000";
        ram[87] = "0b00111101011111100110010110001000";
        ram[88] = "0b10111101100001000111010110101110";
        ram[89] = "0b00111101100110110101101000100100";
        ram[90] = "0b10111110000101000101101000100110";
        ram[91] = "0b10111101011000111111110011101101";
        ram[92] = "0b10111101011111000000111101111101";
        ram[93] = "0b10111110001100111000001010000110";
        ram[94] = "0b00111101110011000011101010011000";
        ram[95] = "0b00111100010010010111110001100110";
        ram[96] = "0b00111101011000100011101101011100";
        ram[97] = "0b10111101011110011110100111111010";
        ram[98] = "0b00111010110000010010001010010100";
        ram[99] = "0b10111110010001101100101011001001";
        ram[100] = "0b00111101001111100101101101000111";
        ram[101] = "0b10111101100111001110111010011101";
        ram[102] = "0b00111110000000101100110111010110";
        ram[103] = "0b00111100101100011110110000101001";
        ram[104] = "0b00111101101100011100011101101010";
        ram[105] = "0b00111101001111010010011001111001";
        ram[106] = "0b00111101010010110010010110110101";
        ram[107] = "0b10111101110000100101100011100111";
        ram[108] = "0b10111100000011010010100001111000";
        ram[109] = "0b00111101111100101010010110011101";
        ram[110] = "0b00111110010001001010101000010011";
        ram[111] = "0b00111101111100011010010111111011";
        ram[112] = "0b00111110010010000001001011010100";
        ram[113] = "0b10111101111101000100011001101000";
        ram[114] = "0b00111101001000000000001001000010";
        ram[115] = "0b00111101101011010110101101111101";
        ram[116] = "0b00111101001100101010001101010101";
        ram[117] = "0b00111101110010101100011010010011";
        ram[118] = "0b10111101100010001101000000101000";
        ram[119] = "0b10111110010100111001111111111110";
        ram[120] = "0b10111100101101110001011000010100";
        ram[121] = "0b00111101010000011101101101001010";
        ram[122] = "0b00111101011000101000100010100111";
        ram[123] = "0b10111101001001011000001100110100";
        ram[124] = "0b00111101110101000100000101100110";
        ram[125] = "0b10111110011000000011011110001110";
        ram[126] = "0b00111101000001110111011000010011";
        ram[127] = "0b00111110000101011111111100101100";
        ram[128] = "0b00111101110001101100111001101010";
        ram[129] = "0b10111110011001111110110101000010";
        ram[130] = "0b10111110100101100011011100100001";
        ram[131] = "0b10111100011000111111010010000000";
        ram[132] = "0b00111101010011001101101110011110";
        ram[133] = "0b10111101100101101001111011001110";
        ram[134] = "0b00111101110101100110010001111001";
        ram[135] = "0b00111101011001111100111111111011";
        ram[136] = "0b10111100100111010000001000100001";
        ram[137] = "0b10111101101011001110100011010000";
        ram[138] = "0b10111110001000011011001001101010";
        ram[139] = "0b10111101111111011000110100111110";
        ram[140] = "0b00111101101100011011010101111000";
        ram[141] = "0b00111100101000010011111001101110";
        ram[142] = "0b10111100011011110010101000011011";
        ram[143] = "0b00111101110011111011100111100011";
        ram[144] = "0b10111101001000001111000011010001";
        ram[145] = "0b00111101101110101000100100110110";
        ram[146] = "0b10111110001010100111011000110101";
        ram[147] = "0b00111101100010010010101011111101";
        ram[148] = "0b10111101100101111000011011010011";
        ram[149] = "0b00111101000101001110100000100111";
        ram[150] = "0b10111101101101100011101011011010";
        ram[151] = "0b00111101101000111100010100010001";
        ram[152] = "0b00111101110101111000100111100010";
        ram[153] = "0b00111101000011110001110111100010";
        ram[154] = "0b10111101101111001101001111100110";
        ram[155] = "0b00111101111111101000101001110010";
        ram[156] = "0b00111100010101100101000001110010";
        ram[157] = "0b10111110000111111101101001000010";
        ram[158] = "0b10111101110000011000011100100011";
        ram[159] = "0b00111100101110100010101111010010";
        ram[160] = "0b10111101010111110010100011001011";
        ram[161] = "0b00111100110000000100011101011000";
        ram[162] = "0b10111101100010110000110110010001";
        ram[163] = "0b10111110100011110101111101110011";
        ram[164] = "0b00111110100000011010000100110100";
        ram[165] = "0b10111101001001100000001010010010";
        ram[166] = "0b00111100101011000011100100100110";
        ram[167] = "0b10111110001000111100111000001000";
        ram[168] = "0b00111110001011001110001101100011";
        ram[169] = "0b00111101111010010100110101111001";
        ram[170] = "0b00111101111101011101000001010100";
        ram[171] = "0b00111101100011010001011010110111";
        ram[172] = "0b00111101100011100011000110111010";
        ram[173] = "0b10111101101000010111101011110110";
        ram[174] = "0b00111100111110111110010100101101";
        ram[175] = "0b00111100101110100010011001110110";
        ram[176] = "0b00111101000011100111011110010011";
        ram[177] = "0b10111101111000100111111001100011";
        ram[178] = "0b10111100101011001101101011100100";
        ram[179] = "0b10111110011000101001000101111101";
        ram[180] = "0b00111101110010000011000100111000";
        ram[181] = "0b00111110001101110110110100110000";
        ram[182] = "0b00111100111101010111100101010101";
        ram[183] = "0b00111101101010001111001010110111";
        ram[184] = "0b10111110010100111111011010010011";
        ram[185] = "0b00111011101100010010100101110010";
        ram[186] = "0b00111101110101101111000000100010";
        ram[187] = "0b10111100101000011110110101100011";
        ram[188] = "0b00111101101011010000111100011111";
        ram[189] = "0b00111110001110110000001010011001";
        ram[190] = "0b10111101111101100111011110111110";
        ram[191] = "0b10111101000110110111100110011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei5jm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei5jm_ram* meminst;


SC_CTOR(conv_2_conv_2_wei5jm) {
meminst = new conv_2_conv_2_wei5jm_ram("conv_2_conv_2_wei5jm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei5jm() {
    delete meminst;
}


};//endmodule
#endif
