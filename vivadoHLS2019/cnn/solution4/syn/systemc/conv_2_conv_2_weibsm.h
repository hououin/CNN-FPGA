// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibsm_H__
#define __conv_2_conv_2_weibsm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibsm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibsm_ram) {
        ram[0] = "0b00111101111000101100011001001110";
        ram[1] = "0b10111110101011010011011111011100";
        ram[2] = "0b00111110000000001001110110101001";
        ram[3] = "0b10111101110100010000000001100010";
        ram[4] = "0b10111101101110000111111001111010";
        ram[5] = "0b00111101111101001101110110011010";
        ram[6] = "0b00111100110101011001101001111011";
        ram[7] = "0b00111100011000101110100111111101";
        ram[8] = "0b10111100100110100010100010001110";
        ram[9] = "0b10111100001010001110111000010011";
        ram[10] = "0b00111110000011101011001110010111";
        ram[11] = "0b00111110100000110100001000110000";
        ram[12] = "0b10111110000110100110010001011011";
        ram[13] = "0b10111101111111000000011100001010";
        ram[14] = "0b00111110010000101000000001000011";
        ram[15] = "0b00111110011000011101111110010110";
        ram[16] = "0b00111101011001011011000001111101";
        ram[17] = "0b10111100101010001010010101100000";
        ram[18] = "0b00111110000000100000111000100000";
        ram[19] = "0b00111101011101011101000111111111";
        ram[20] = "0b00111101111010000100111000100011";
        ram[21] = "0b10111100101101101101110011110100";
        ram[22] = "0b00111101011110001111000101101111";
        ram[23] = "0b00111011011000110011111000001110";
        ram[24] = "0b00111101110110010100001000001111";
        ram[25] = "0b00111110000110011011000010011101";
        ram[26] = "0b10111110010011111011101001001100";
        ram[27] = "0b10111110001110111000011111100100";
        ram[28] = "0b00111110001100010100011000010000";
        ram[29] = "0b00111101100101100101100101011101";
        ram[30] = "0b10111110000001100010110100001011";
        ram[31] = "0b10111101100010011001110111100110";
        ram[32] = "0b00111101110011011111001000101010";
        ram[33] = "0b10111110011111110010110000010100";
        ram[34] = "0b00111101111111101010100010010110";
        ram[35] = "0b10111110100011000100101011110100";
        ram[36] = "0b10111101101000001000100011001011";
        ram[37] = "0b10111110011101111110011001010011";
        ram[38] = "0b00111100001010101111001000100101";
        ram[39] = "0b00111011011110001111101001111000";
        ram[40] = "0b00111110000101100011100110000101";
        ram[41] = "0b00111110101011000011000111001010";
        ram[42] = "0b00111100000010100100001110101111";
        ram[43] = "0b00111100111001111101010001100010";
        ram[44] = "0b00111101110111001100011001111000";
        ram[45] = "0b00111101010000111010001001101011";
        ram[46] = "0b00111110000110100010010011100001";
        ram[47] = "0b00111101010010001101111010011100";
        ram[48] = "0b00111101101110011111100000000100";
        ram[49] = "0b10111110101110010101010000000111";
        ram[50] = "0b00111101001011101001010100100001";
        ram[51] = "0b10111111000000110100100101011010";
        ram[52] = "0b10111110000010111110000000000110";
        ram[53] = "0b10111101010111111011010000011011";
        ram[54] = "0b00111101100110011111000011100000";
        ram[55] = "0b10111101100010111101101010010111";
        ram[56] = "0b10111101010100100101101010111111";
        ram[57] = "0b00111110011000111011100000110111";
        ram[58] = "0b00111100111101101000100001001110";
        ram[59] = "0b00111110001011010010001110000110";
        ram[60] = "0b00111101001001011000101101011111";
        ram[61] = "0b10111101001000001000000100010111";
        ram[62] = "0b10111110001001100011011101111010";
        ram[63] = "0b10111110001101000010111110000111";
        ram[64] = "0b00111110001011000010101001001011";
        ram[65] = "0b10111110110000110101000000000110";
        ram[66] = "0b10111110000101010101011001000101";
        ram[67] = "0b00111110000010001110111100101111";
        ram[68] = "0b10111110001110111110001010000010";
        ram[69] = "0b00111100110100001101101010001001";
        ram[70] = "0b00111101100010010011010000110010";
        ram[71] = "0b00111101001011000100101011000000";
        ram[72] = "0b00111101101000010110001110110010";
        ram[73] = "0b00111101000100100010100010101001";
        ram[74] = "0b10111110110001111011001010011110";
        ram[75] = "0b00111101100110111100101100011010";
        ram[76] = "0b00111100100001100010111111010111";
        ram[77] = "0b10111110010110110001100111000110";
        ram[78] = "0b10111100100011010001100100100110";
        ram[79] = "0b00111100010110001010110010000001";
        ram[80] = "0b10111110010100010111100101001001";
        ram[81] = "0b00111100000011110011010111010101";
        ram[82] = "0b00111100100000101010001100010100";
        ram[83] = "0b00111101011010000000111111000110";
        ram[84] = "0b00111110010110101100100101100010";
        ram[85] = "0b10111101111100001110010011101101";
        ram[86] = "0b00111101110011001111011110100110";
        ram[87] = "0b10111110101011111100111111011100";
        ram[88] = "0b10111100111011111101001000100101";
        ram[89] = "0b00111011110010110111010101011010";
        ram[90] = "0b00111110001000100111110001011000";
        ram[91] = "0b00111110100010000000001011111001";
        ram[92] = "0b10111101010111111001011011101110";
        ram[93] = "0b00111100100011111100010110100111";
        ram[94] = "0b10111110011000010011111000100010";
        ram[95] = "0b10111100111111111111011001000100";
        ram[96] = "0b00111110000101110001111001110111";
        ram[97] = "0b10111101010010001001011011100001";
        ram[98] = "0b00111110011000000100100001110110";
        ram[99] = "0b10111101010111001111100011010101";
        ram[100] = "0b00111100001111010100111101010000";
        ram[101] = "0b00111101000000100110001101101010";
        ram[102] = "0b10111101111110101110000100010001";
        ram[103] = "0b10111101111100000100110111000110";
        ram[104] = "0b00111110001100011110011010110111";
        ram[105] = "0b00111100010111110110001010001100";
        ram[106] = "0b10111101101011110111011001010000";
        ram[107] = "0b00111101001010111011101100010001";
        ram[108] = "0b10111110010111110001110010010100";
        ram[109] = "0b10111110010000111110110001111000";
        ram[110] = "0b10111110000100000111101000001111";
        ram[111] = "0b10111101110110010010111001010111";
        ram[112] = "0b00111100011000011000111001101000";
        ram[113] = "0b00111101001101100000010001101100";
        ram[114] = "0b00111100011010011110101011011010";
        ram[115] = "0b00111100101100011000110000001010";
        ram[116] = "0b00111101010000001101001101001111";
        ram[117] = "0b00111101111110101111111001111100";
        ram[118] = "0b00111110001001011111001110111100";
        ram[119] = "0b10111110010101101001001101001101";
        ram[120] = "0b10111100111111001010001100001011";
        ram[121] = "0b10111110001011000000110111110011";
        ram[122] = "0b00111101001101001111001000111101";
        ram[123] = "0b10111110011101010000010101100011";
        ram[124] = "0b10111011110011011111001101011110";
        ram[125] = "0b00111101000111101100010011111010";
        ram[126] = "0b00111110000111000001101010011000";
        ram[127] = "0b00111101100000001011000101100101";
        ram[128] = "0b10111110100000110101100001011011";
        ram[129] = "0b10111110010011100011101011111101";
        ram[130] = "0b10111101110010110110111111101001";
        ram[131] = "0b10111101011010100100100100000110";
        ram[132] = "0b10111110011010101100010100000100";
        ram[133] = "0b10111110100011101001100010110111";
        ram[134] = "0b10111101101110111010111000110100";
        ram[135] = "0b00111110001100011010010111001010";
        ram[136] = "0b00111110010101100001011101111010";
        ram[137] = "0b10111110110110010011111111000000";
        ram[138] = "0b00111110000011100111000111100010";
        ram[139] = "0b10111101100001111110100001001000";
        ram[140] = "0b10111101010110101011101001011000";
        ram[141] = "0b10111100110010000010011001011101";
        ram[142] = "0b00111110100001000001001001111100";
        ram[143] = "0b00111101101011111100011010111101";
        ram[144] = "0b10111101100000001011000010111010";
        ram[145] = "0b10111101010101111001011110011111";
        ram[146] = "0b10111101100101111100001001100111";
        ram[147] = "0b10111101110110010001001100001000";
        ram[148] = "0b00111110010010110010000000010100";
        ram[149] = "0b10111110011110100100010001000011";
        ram[150] = "0b10111101101001000111011100011111";
        ram[151] = "0b10111110110110010111010111010110";
        ram[152] = "0b10111101000010101000010101000011";
        ram[153] = "0b10111101100100011110010010111011";
        ram[154] = "0b00111010101101110001011011011010";
        ram[155] = "0b00111101101010001001011001101000";
        ram[156] = "0b00111100111101010100001010011101";
        ram[157] = "0b00111101011110010011010100010111";
        ram[158] = "0b00111101001001011100111101101110";
        ram[159] = "0b00111011011000100111111101111100";
        ram[160] = "0b10111110000110001101010001000001";
        ram[161] = "0b00111101110001101011000010010100";
        ram[162] = "0b10111111000000110100001001111101";
        ram[163] = "0b10111110101001000010010000111001";
        ram[164] = "0b10111110011001101110001111001101";
        ram[165] = "0b00111100110100100011001000000000";
        ram[166] = "0b10111110010110110101110111111110";
        ram[167] = "0b00111110100001110111101101001110";
        ram[168] = "0b00111101010101000010010100111010";
        ram[169] = "0b10111100000100111110011011101111";
        ram[170] = "0b10111110010100110110001111011001";
        ram[171] = "0b10111101101111001000111000111110";
        ram[172] = "0b00111101010010111000011110000101";
        ram[173] = "0b00111110010001001111010001001001";
        ram[174] = "0b00111101101110011010111100011001";
        ram[175] = "0b10111011010000011100111110111111";
        ram[176] = "0b10111110010010100100001100111101";
        ram[177] = "0b00111110001010100100010000111100";
        ram[178] = "0b00111101111111111110000101001000";
        ram[179] = "0b00111010011101111011111100010001";
        ram[180] = "0b00111110010011011000111101100110";
        ram[181] = "0b10111101110010011001100101101101";
        ram[182] = "0b10111101010000110111001101000000";
        ram[183] = "0b10111101110100000011000010011000";
        ram[184] = "0b10111101100000011111111011111110";
        ram[185] = "0b00111101111011101010100011001111";
        ram[186] = "0b10111101011011000110001000111000";
        ram[187] = "0b00111110001100110111111111000000";
        ram[188] = "0b10111101110010101001100100000111";
        ram[189] = "0b10111011110000011100011111011110";
        ram[190] = "0b00111101111000010011100010010010";
        ram[191] = "0b00111010000100001100000110101010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibsm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibsm_ram* meminst;


SC_CTOR(conv_2_conv_2_weibsm) {
meminst = new conv_2_conv_2_weibsm_ram("conv_2_conv_2_weibsm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibsm() {
    delete meminst;
}


};//endmodule
#endif
