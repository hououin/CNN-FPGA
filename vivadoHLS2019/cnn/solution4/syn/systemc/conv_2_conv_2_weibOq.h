// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibOq_H__
#define __conv_2_conv_2_weibOq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibOq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibOq_ram) {
        ram[0] = "0b10111110100010001100011010001111";
        ram[1] = "0b10111110001101010110001000100010";
        ram[2] = "0b10111110010011111001000001010011";
        ram[3] = "0b00111110001110000111101110110101";
        ram[4] = "0b00111101101100010011100011001101";
        ram[5] = "0b10111100010110001000111101100101";
        ram[6] = "0b00111110011010000110001000111011";
        ram[7] = "0b10111010101000100010110011011011";
        ram[8] = "0b10111101001101100101110000111111";
        ram[9] = "0b00111011100011101101111000001111";
        ram[10] = "0b00111100010111001111101101010010";
        ram[11] = "0b10111110001010010111010001101101";
        ram[12] = "0b00111110000111010011010000000000";
        ram[13] = "0b00111110000000010101110110001000";
        ram[14] = "0b00111110010000110110110000100100";
        ram[15] = "0b00111101100011111111100010001100";
        ram[16] = "0b00111101100100100010001111111100";
        ram[17] = "0b00111101011000001110111001111011";
        ram[18] = "0b00111100011011100110001010000011";
        ram[19] = "0b10111110010000110101110000000111";
        ram[20] = "0b00111101110110101011100011011011";
        ram[21] = "0b00111101111000111001111111010100";
        ram[22] = "0b00111110000100000110111011101101";
        ram[23] = "0b00111101110101111000111100111101";
        ram[24] = "0b00111101101111101111100001110010";
        ram[25] = "0b00111101110011110101011110110001";
        ram[26] = "0b00111101101101110110100010000000";
        ram[27] = "0b10111110011010100001111000001000";
        ram[28] = "0b00111110000001101001000100001000";
        ram[29] = "0b10111110011010111111111011000100";
        ram[30] = "0b00111100000101000110010000110000";
        ram[31] = "0b10111110110100000001100010000011";
        ram[32] = "0b00111100101111010111100010101011";
        ram[33] = "0b00111110000010111100100110100010";
        ram[34] = "0b10111100010010111110111000010111";
        ram[35] = "0b10111110000110010010100011001000";
        ram[36] = "0b10111101000011110010110010001000";
        ram[37] = "0b10111100101101000101001111011011";
        ram[38] = "0b00111101000001000111101010111001";
        ram[39] = "0b10111101111000110000011100110100";
        ram[40] = "0b10111110110100100011011101101010";
        ram[41] = "0b00111101110011111011101010100000";
        ram[42] = "0b10111100001010010110100101100100";
        ram[43] = "0b00111101111001100010000000000110";
        ram[44] = "0b00111011100010010101001110001101";
        ram[45] = "0b00111110001010011110011110111111";
        ram[46] = "0b00111101110000110110101011001010";
        ram[47] = "0b00111110001111101101101011100000";
        ram[48] = "0b10111110001110010101110101101001";
        ram[49] = "0b10111100110011010001001001101000";
        ram[50] = "0b00111101110011011000011001011101";
        ram[51] = "0b10111101110010111100011000011000";
        ram[52] = "0b10111110001110100101000111100000";
        ram[53] = "0b00111101110111101110111011101011";
        ram[54] = "0b10111110100100000000101001111110";
        ram[55] = "0b10111101100011010001011110001000";
        ram[56] = "0b00111101110100110010101000100101";
        ram[57] = "0b10111101011110110011000100000000";
        ram[58] = "0b10111101100100110011111101010110";
        ram[59] = "0b00111110000100011010101110011000";
        ram[60] = "0b00111101101000110001001000010010";
        ram[61] = "0b00111100110001011100101101010011";
        ram[62] = "0b10111101101110111110011001010100";
        ram[63] = "0b10111010110100110101111101111111";
        ram[64] = "0b00111100010100100111101000110110";
        ram[65] = "0b10111101110000111010011000101100";
        ram[66] = "0b10111110101010011101010100101100";
        ram[67] = "0b10111110001010011101110100000110";
        ram[68] = "0b00111011111111111101001111001000";
        ram[69] = "0b00111110001010110001101011010011";
        ram[70] = "0b10111101111011110011011011100101";
        ram[71] = "0b00111100100001111000100111001011";
        ram[72] = "0b10111011100001001001000000000111";
        ram[73] = "0b10111101010011100100111001010011";
        ram[74] = "0b10111101000000000101101100101101";
        ram[75] = "0b00111110000001101100101110110101";
        ram[76] = "0b10111101100101111010110000000101";
        ram[77] = "0b00111100101100010111001110011100";
        ram[78] = "0b10111101101110000110110111110101";
        ram[79] = "0b10111101111110001101010011101100";
        ram[80] = "0b00111100101000010101101101111010";
        ram[81] = "0b00111001001011100111011101101000";
        ram[82] = "0b10111100010010111011000010100011";
        ram[83] = "0b00111011110011110000011000111011";
        ram[84] = "0b00111101000010010101111100010100";
        ram[85] = "0b00111100100110111111001100001101";
        ram[86] = "0b00111110000001000111001001110000";
        ram[87] = "0b10111101010101101110110100111000";
        ram[88] = "0b00111110001011011001110110011000";
        ram[89] = "0b10111101100010010001110110101101";
        ram[90] = "0b10111101100010111110001101001110";
        ram[91] = "0b00111101101111101010011100011010";
        ram[92] = "0b10111110000110001101110110110110";
        ram[93] = "0b10111101110010011101001100111111";
        ram[94] = "0b10111101000000000111010011100011";
        ram[95] = "0b10111110001010110111010011010001";
        ram[96] = "0b00111101000111000111111011111000";
        ram[97] = "0b10111110000000001101111000100100";
        ram[98] = "0b00111101101101111001001000100101";
        ram[99] = "0b10111110000011110110100111100001";
        ram[100] = "0b10111110001001101010001110101010";
        ram[101] = "0b00111100110001001011011100001110";
        ram[102] = "0b10111101000101101101110111010000";
        ram[103] = "0b10111101101110001011110101101011";
        ram[104] = "0b00111110011010111010010100110011";
        ram[105] = "0b00111101011100001100011100011100";
        ram[106] = "0b10111101001000101100110011110011";
        ram[107] = "0b10111101110100100011001110110011";
        ram[108] = "0b10111100000111000110100111110011";
        ram[109] = "0b00111110000111000100010100111101";
        ram[110] = "0b00111101101001010000110100100100";
        ram[111] = "0b10111101111010001110111100101011";
        ram[112] = "0b10111110011101001000110100110011";
        ram[113] = "0b10111110100011010111011011001010";
        ram[114] = "0b00111110000101001101101100110001";
        ram[115] = "0b10111110000011110111000100000100";
        ram[116] = "0b10111101111111010110010011100110";
        ram[117] = "0b00111101111110100111110010011011";
        ram[118] = "0b00111101101101011101000011111111";
        ram[119] = "0b10111110001110010010110100011110";
        ram[120] = "0b00111101100010111100010101010000";
        ram[121] = "0b10111101000010011101101010001000";
        ram[122] = "0b00111101101010011010100111100100";
        ram[123] = "0b00111100000100100101110011010010";
        ram[124] = "0b00111101101111010100000101111000";
        ram[125] = "0b00111100011101011010001010010110";
        ram[126] = "0b00111101110111000101100110100101";
        ram[127] = "0b10111011100010101101111101010000";
        ram[128] = "0b00111101010000000101111110000110";
        ram[129] = "0b10111101111111011111000101100011";
        ram[130] = "0b10111110100011110101011011011111";
        ram[131] = "0b10111101011111011011101110000100";
        ram[132] = "0b00111101101110100001001110110110";
        ram[133] = "0b10111101001001000100001101010010";
        ram[134] = "0b10111100110010100100001110101111";
        ram[135] = "0b10111011110100111110111100011010";
        ram[136] = "0b00111100100001101010000011110101";
        ram[137] = "0b10111101010100101100100111011001";
        ram[138] = "0b10111110000001001110000110010001";
        ram[139] = "0b10111100011100101001111111001011";
        ram[140] = "0b10111101101001101101110010011110";
        ram[141] = "0b00111100000110100010000011010010";
        ram[142] = "0b00111110000000101010010111111110";
        ram[143] = "0b10111100011011001110000010010101";
        ram[144] = "0b10111101010010010111001000101001";
        ram[145] = "0b00111100111001101101101100011010";
        ram[146] = "0b10111110001101101011101100001001";
        ram[147] = "0b10111101101010100011110110101111";
        ram[148] = "0b10111101001100001101101101001000";
        ram[149] = "0b00111101110110110110000111010010";
        ram[150] = "0b10111101010100011110011101111100";
        ram[151] = "0b00111101001000100101001100001001";
        ram[152] = "0b10111101010100010111001011000011";
        ram[153] = "0b10111101100001101011100001011100";
        ram[154] = "0b10111101010000001001001010110100";
        ram[155] = "0b00111101110001011011110101111111";
        ram[156] = "0b10111101110000000101111111001000";
        ram[157] = "0b10111100110011001001000001011111";
        ram[158] = "0b00111101000000010010111010110101";
        ram[159] = "0b10111101100110110010110001000110";
        ram[160] = "0b00111101011111010100111001011101";
        ram[161] = "0b00111011111111100011001011110000";
        ram[162] = "0b10111101101010111100010011011010";
        ram[163] = "0b10111110001011010111110110000100";
        ram[164] = "0b10111101110101100100100101101010";
        ram[165] = "0b00111110001101001000100111011000";
        ram[166] = "0b10111101000000110010100100000010";
        ram[167] = "0b00111100111011011001100000101001";
        ram[168] = "0b00111110000001111110110000101010";
        ram[169] = "0b10111101111101100011110011001101";
        ram[170] = "0b00111101011010101101111000000001";
        ram[171] = "0b10111101111011000111000010011000";
        ram[172] = "0b00111101100101000111011000110011";
        ram[173] = "0b10111110001000010001001110100101";
        ram[174] = "0b10111101101111100000011110001011";
        ram[175] = "0b00111101110001010101011101011001";
        ram[176] = "0b10111100111010010111011001001000";
        ram[177] = "0b00111101100100101111000110011010";
        ram[178] = "0b10111101100111011100010101000011";
        ram[179] = "0b00111101100001000100111001000000";
        ram[180] = "0b00111110000111110110100101100001";
        ram[181] = "0b00111101000001110110010011110010";
        ram[182] = "0b10111100111100001000101000100100";
        ram[183] = "0b10111110101001101100001110101110";
        ram[184] = "0b10111101110011110111110001010011";
        ram[185] = "0b10111011110000101101110110000001";
        ram[186] = "0b00111101101101010110101001110101";
        ram[187] = "0b00111101110010111011101011000110";
        ram[188] = "0b10111101110100010101000000100111";
        ram[189] = "0b10111110001000101101110100111100";
        ram[190] = "0b00111101000110010110010000011011";
        ram[191] = "0b00111100110001000100100000101111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibOq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibOq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibOq) {
meminst = new conv_2_conv_2_weibOq_ram("conv_2_conv_2_weibOq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibOq() {
    delete meminst;
}


};//endmodule
#endif
