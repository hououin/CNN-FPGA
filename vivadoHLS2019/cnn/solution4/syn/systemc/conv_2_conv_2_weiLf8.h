// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiLf8_H__
#define __conv_2_conv_2_weiLf8_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiLf8_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiLf8_ram) {
        ram[0] = "0b10111101111011000000010100011010";
        ram[1] = "0b00111100011001111000100111011111";
        ram[2] = "0b00111011111010001111110101111111";
        ram[3] = "0b10111101010010010010101100101100";
        ram[4] = "0b00111110010010000010010110100110";
        ram[5] = "0b00111101100011001011101010011110";
        ram[6] = "0b00111110000101010011000101001101";
        ram[7] = "0b10111100101000110000000000011011";
        ram[8] = "0b00111101100001011011011101100101";
        ram[9] = "0b10111101100111001011100100111101";
        ram[10] = "0b10111101110000000111111110101101";
        ram[11] = "0b00111110000011011110101000111011";
        ram[12] = "0b00111110011110001010101100001011";
        ram[13] = "0b00111110000010000110011101010010";
        ram[14] = "0b00111011111000101110001101100001";
        ram[15] = "0b10111101101111000110001011101111";
        ram[16] = "0b00111101111111110001011000001001";
        ram[17] = "0b00111101000011100001101101110111";
        ram[18] = "0b00111101000111001010111000100101";
        ram[19] = "0b10111110001001101110000011111101";
        ram[20] = "0b00111101101110001011110001000100";
        ram[21] = "0b10111101010001100111000011011110";
        ram[22] = "0b00111101010011101100010001010100";
        ram[23] = "0b00111100111011110001110001001010";
        ram[24] = "0b10111101010101001110000100010101";
        ram[25] = "0b10111110100100101001111000000111";
        ram[26] = "0b10111110000101010000100000111110";
        ram[27] = "0b00111101001100101110100101110011";
        ram[28] = "0b10111101101110100011001001111100";
        ram[29] = "0b00111101010100000000001101111101";
        ram[30] = "0b00111101100011011101110001000101";
        ram[31] = "0b10111110100000110000010001111110";
        ram[32] = "0b00111000111010011001010000110100";
        ram[33] = "0b00111101010110100100111110010001";
        ram[34] = "0b00111101011011000000100001001011";
        ram[35] = "0b00111101000101101111000101010111";
        ram[36] = "0b10111110010001101001111001001100";
        ram[37] = "0b00111101110010101010110110000100";
        ram[38] = "0b00111101100001111111101000100011";
        ram[39] = "0b00111100111011011011111100011111";
        ram[40] = "0b10111010001110001110011011101000";
        ram[41] = "0b10111110100000000101010000001011";
        ram[42] = "0b00111011001100101010100101100010";
        ram[43] = "0b10111101110110011111111111001001";
        ram[44] = "0b10111101111101100011000000101101";
        ram[45] = "0b10111001110001111111001011011101";
        ram[46] = "0b00111101101000110011000111010100";
        ram[47] = "0b10111101100100011111000000000110";
        ram[48] = "0b00111101110110100011111001100110";
        ram[49] = "0b10111110101000000111000100010011";
        ram[50] = "0b00111110000000000111110011010011";
        ram[51] = "0b00111110001100101111111100000001";
        ram[52] = "0b00111100101001100001110001100100";
        ram[53] = "0b00111100001000111100011110100000";
        ram[54] = "0b00111011101000101011111100101000";
        ram[55] = "0b00111101101100110111011111011111";
        ram[56] = "0b00111100100000000000001101110101";
        ram[57] = "0b10111101110100100010010101111111";
        ram[58] = "0b10111110000100110101110100100100";
        ram[59] = "0b00111110000000110101000100000001";
        ram[60] = "0b00111100110111010011000111010100";
        ram[61] = "0b10111110010110001101100100110100";
        ram[62] = "0b10111101101110111100100010101100";
        ram[63] = "0b10111101111001000110111101001000";
        ram[64] = "0b10111110000100100111000001011100";
        ram[65] = "0b10111011011110100011010011100011";
        ram[66] = "0b00111100101111001111000000010100";
        ram[67] = "0b00111101010100110001010101110100";
        ram[68] = "0b00111101100000011000111000000110";
        ram[69] = "0b10111011011110001011011011111110";
        ram[70] = "0b00111110000110110010101001100011";
        ram[71] = "0b10111100100011000111000011111101";
        ram[72] = "0b00111010111100011011110100101001";
        ram[73] = "0b00111101110000010101100001111010";
        ram[74] = "0b00111100110111001011100111001101";
        ram[75] = "0b00111101101000010111110101001011";
        ram[76] = "0b00111110001011010110110000110010";
        ram[77] = "0b00111100001010101100010000110110";
        ram[78] = "0b10111011101100111001101000011000";
        ram[79] = "0b10111101010100100101100110100000";
        ram[80] = "0b10111101101110000100011111111101";
        ram[81] = "0b00111101011000100110000110110110";
        ram[82] = "0b10111110011101001000010101111001";
        ram[83] = "0b00111101101110010100111101011110";
        ram[84] = "0b00111101110011010011100100110010";
        ram[85] = "0b00111100011000101111101010001000";
        ram[86] = "0b10111101101110010111100101101100";
        ram[87] = "0b00111011110100001101100111011010";
        ram[88] = "0b00111101010111101000000110011000";
        ram[89] = "0b10111100010010001011000011010011";
        ram[90] = "0b00111101100110101000101111010011";
        ram[91] = "0b10111110001111101011100111110000";
        ram[92] = "0b10111110100010111001001010111001";
        ram[93] = "0b00111101100110111000000000111110";
        ram[94] = "0b00111100001011110100101101010000";
        ram[95] = "0b10111100101011100110011100001000";
        ram[96] = "0b00111011000100101000001111110001";
        ram[97] = "0b10111110010101110100011001110011";
        ram[98] = "0b00111110000110011000111111010111";
        ram[99] = "0b00111101110000100011101000111101";
        ram[100] = "0b10111101101100001111001111111011";
        ram[101] = "0b00111110000101111110111000101110";
        ram[102] = "0b00111101101001011011000001100001";
        ram[103] = "0b10111100111110111000010111010001";
        ram[104] = "0b00111001111010010110000011110000";
        ram[105] = "0b00111110000100000010011100010110";
        ram[106] = "0b00111100110001111010001101100010";
        ram[107] = "0b00111101100110110001001011011101";
        ram[108] = "0b10111101001011000101010111011000";
        ram[109] = "0b00111110010101110100110000010101";
        ram[110] = "0b00111101111110011011010100110100";
        ram[111] = "0b00111101000011000101000111110101";
        ram[112] = "0b00111101111100001001111001110111";
        ram[113] = "0b10111110100011101101001000111111";
        ram[114] = "0b00111110000100010100101110001101";
        ram[115] = "0b00111110000100011010111001111100";
        ram[116] = "0b10111110001111001110100100000011";
        ram[117] = "0b00111101101100100101101111010011";
        ram[118] = "0b10111101101111011101011011010011";
        ram[119] = "0b10111110010000001110011001101000";
        ram[120] = "0b10111101010101000111011101010111";
        ram[121] = "0b00111101110001010010110000011101";
        ram[122] = "0b10111110011100010100001010110011";
        ram[123] = "0b00111100110001111110010100000010";
        ram[124] = "0b00111101110111101110100000100101";
        ram[125] = "0b10111110001001010000111001011111";
        ram[126] = "0b00111101001111110001011111000011";
        ram[127] = "0b00111011000111000101011100101001";
        ram[128] = "0b00111101110010000000110011101101";
        ram[129] = "0b10111101111100000110100101110011";
        ram[130] = "0b10111101000011010010001110101011";
        ram[131] = "0b10111101100010101001100001011011";
        ram[132] = "0b00111101111011101001010110100100";
        ram[133] = "0b00111101100011111000100010101101";
        ram[134] = "0b00111101101000001011100100101011";
        ram[135] = "0b10111101101110100101101100101110";
        ram[136] = "0b10111010101001010000010010111001";
        ram[137] = "0b00111101100101010011010110010111";
        ram[138] = "0b00111101011100001110011110110111";
        ram[139] = "0b10111101110100001110010101111010";
        ram[140] = "0b00111110000000100110111101001010";
        ram[141] = "0b10111101001011111000101101111001";
        ram[142] = "0b10111101010110100101000100011111";
        ram[143] = "0b00111110000111101101101111110010";
        ram[144] = "0b10111110000101110110100101011101";
        ram[145] = "0b00111100101001101001011010011000";
        ram[146] = "0b10111101001111001000001000000001";
        ram[147] = "0b10111101000011100001110011101010";
        ram[148] = "0b10111110111001101101110110111011";
        ram[149] = "0b00111101011100001111010010000001";
        ram[150] = "0b10111110000111111111001001100000";
        ram[151] = "0b00111101001000010111001101000101";
        ram[152] = "0b00111110000011100001011001110000";
        ram[153] = "0b00111100111000110110011111100111";
        ram[154] = "0b00111110001010100010010010000101";
        ram[155] = "0b10111110011011100111000111001011";
        ram[156] = "0b10111101110110001010110001101001";
        ram[157] = "0b10111011001101000101111001000100";
        ram[158] = "0b10111110011011100010110111101101";
        ram[159] = "0b00111101001111111010100011010001";
        ram[160] = "0b10111101101001001011110000001100";
        ram[161] = "0b00111101100101000111001010110100";
        ram[162] = "0b00111101111110111101100011100100";
        ram[163] = "0b10111101111001110011001111011011";
        ram[164] = "0b10111101000011110111100100000111";
        ram[165] = "0b00111100001001001100101110000001";
        ram[166] = "0b10111101110100000010001011000010";
        ram[167] = "0b00111011110001101000000100111011";
        ram[168] = "0b10111110100010111001010010100100";
        ram[169] = "0b00111101011111110110011000100100";
        ram[170] = "0b00111101111010011001100011011110";
        ram[171] = "0b00111101101110100110101010110000";
        ram[172] = "0b10111110100001110011110110001111";
        ram[173] = "0b10111101111110011000101011100100";
        ram[174] = "0b10111100000110100010011110101111";
        ram[175] = "0b10111100011010110011110010100000";
        ram[176] = "0b10111110010001110110001100100111";
        ram[177] = "0b10111101101001001001010110001111";
        ram[178] = "0b00111110010010101001100101001110";
        ram[179] = "0b00111101110100101110110010010110";
        ram[180] = "0b10111101101110111100010010010010";
        ram[181] = "0b10111101100010001010101110011001";
        ram[182] = "0b10111110011000100101001101110011";
        ram[183] = "0b00111100001101001100000010110111";
        ram[184] = "0b10111100100111001000111101011000";
        ram[185] = "0b10111100010010110100111011010101";
        ram[186] = "0b10111110001000011110100000100110";
        ram[187] = "0b10111100001011001011001011011111";
        ram[188] = "0b00111101011010000001010100110100";
        ram[189] = "0b00111101010111111100001001101100";
        ram[190] = "0b00111100110011111101010000111001";
        ram[191] = "0b00111101100101100011011011000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiLf8) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiLf8_ram* meminst;


SC_CTOR(conv_2_conv_2_weiLf8) {
meminst = new conv_2_conv_2_weiLf8_ram("conv_2_conv_2_weiLf8_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiLf8() {
    delete meminst;
}


};//endmodule
#endif
