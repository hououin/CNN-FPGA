// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiIfE_H__
#define __conv_2_conv_2_weiIfE_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiIfE_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiIfE_ram) {
        ram[0] = "0b00111110001011110001010000001110";
        ram[1] = "0b10111011100001101100110111101011";
        ram[2] = "0b10111101000000111001111110100000";
        ram[3] = "0b00111101110101101101101100111000";
        ram[4] = "0b10111101000000001100011010100110";
        ram[5] = "0b00111101011011101010100001110010";
        ram[6] = "0b10111101110111010011001100001011";
        ram[7] = "0b10111100110111001010101111111100";
        ram[8] = "0b00111101110001010011011010100111";
        ram[9] = "0b00111101110111011010101111010001";
        ram[10] = "0b10111100001010010101000101011101";
        ram[11] = "0b00111011110111010101110010110011";
        ram[12] = "0b10111101110111000101010110111101";
        ram[13] = "0b10111110010110111101100111101000";
        ram[14] = "0b10111101110000101000010000000100";
        ram[15] = "0b00111011000000000011111100010001";
        ram[16] = "0b10111110010111000001011001111110";
        ram[17] = "0b00111110000100010111001110001010";
        ram[18] = "0b10111110010110010001110101101110";
        ram[19] = "0b00111110000110011100001010101000";
        ram[20] = "0b10111110010101100100101100010111";
        ram[21] = "0b10111110100011000010000111111001";
        ram[22] = "0b10111101110111011000010111001111";
        ram[23] = "0b10111100011111000101101100100111";
        ram[24] = "0b00111100010000110000000001101100";
        ram[25] = "0b00111110001010111101011111011000";
        ram[26] = "0b00111110001011011001010011010101";
        ram[27] = "0b00111100100010100001110110000011";
        ram[28] = "0b10111110011100101000001010001000";
        ram[29] = "0b00111110000100011111010110011100";
        ram[30] = "0b10111101110101101011111111001000";
        ram[31] = "0b10111110001000110011101101010000";
        ram[32] = "0b10111101100000010000011100011101";
        ram[33] = "0b10111110100010111010100111111100";
        ram[34] = "0b10111100101011110101100110111010";
        ram[35] = "0b00111101111010010001011011010101";
        ram[36] = "0b10111100110001101101011100001010";
        ram[37] = "0b10111101011001110100001111010000";
        ram[38] = "0b10111100101111101100110101011110";
        ram[39] = "0b00111110000010001010000100110111";
        ram[40] = "0b10111010111011101011010101000100";
        ram[41] = "0b00111110000000100101000100101000";
        ram[42] = "0b10111101000100000100110000000001";
        ram[43] = "0b00111110010011011011101011010011";
        ram[44] = "0b00111101100111110000010001111101";
        ram[45] = "0b10111100011000110000010110011011";
        ram[46] = "0b10111100010110101001100111001000";
        ram[47] = "0b00111110100101101100111010100010";
        ram[48] = "0b00111101110011001000101100101010";
        ram[49] = "0b10111110011100010010100100100000";
        ram[50] = "0b10111101100110101010100110111101";
        ram[51] = "0b10111100110000101100000001110010";
        ram[52] = "0b10111110010010010100010101001000";
        ram[53] = "0b00111100101011110101001000110000";
        ram[54] = "0b00111101000000000000101011011101";
        ram[55] = "0b10111110010001000101011010011010";
        ram[56] = "0b10111110011101100100011101101111";
        ram[57] = "0b00111101000110110111000101110111";
        ram[58] = "0b10111100110100000011011011000110";
        ram[59] = "0b00111101101111100000100011010011";
        ram[60] = "0b00111011110111101011001011110100";
        ram[61] = "0b00111101010000101010001011010100";
        ram[62] = "0b00111101101111110101000100001001";
        ram[63] = "0b00111101101000110010001010111101";
        ram[64] = "0b00111100000011100110111010111100";
        ram[65] = "0b10111100011011101110011101010001";
        ram[66] = "0b00111101110000011000100111010011";
        ram[67] = "0b00111100111010100000110110010100";
        ram[68] = "0b10111101101010100110100101111010";
        ram[69] = "0b10111101101110111000000111000110";
        ram[70] = "0b10111110011000110000110001010111";
        ram[71] = "0b00111101110100010001001100111011";
        ram[72] = "0b10111101000110001010000111110000";
        ram[73] = "0b00111110000001101001101110110010";
        ram[74] = "0b10111101000000010100101010111110";
        ram[75] = "0b10111100000111000111010000110001";
        ram[76] = "0b10111110100001010101111110001011";
        ram[77] = "0b10111101101110100010000001000101";
        ram[78] = "0b00111011111001011101011000110011";
        ram[79] = "0b00111110001000011000000011110011";
        ram[80] = "0b00111100110101110101101101100000";
        ram[81] = "0b10111100101010111110000101100001";
        ram[82] = "0b10111100000000111101010111101001";
        ram[83] = "0b00111101011111010111100010010010";
        ram[84] = "0b10111110110000011100111100000001";
        ram[85] = "0b10111110100010100010100011001110";
        ram[86] = "0b10111101011000100010101111001011";
        ram[87] = "0b10111101100101001101001100110110";
        ram[88] = "0b10111100110011100100010001011001";
        ram[89] = "0b00111100111111000010010000011001";
        ram[90] = "0b00111101001001100001001010010111";
        ram[91] = "0b10111110010110111010000100101111";
        ram[92] = "0b00111101010001111010111000100001";
        ram[93] = "0b00111101100001111101111001111000";
        ram[94] = "0b10111110011000010001011001100011";
        ram[95] = "0b00111100110001000110111110101011";
        ram[96] = "0b10111110100001011111001011000110";
        ram[97] = "0b00111100111001000000101100101110";
        ram[98] = "0b10111110010011000100000110010010";
        ram[99] = "0b10111101100001010001110000100011";
        ram[100] = "0b10111101100100011111011001101001";
        ram[101] = "0b00111010100000100011100000101010";
        ram[102] = "0b10111110101110101000001011110010";
        ram[103] = "0b00111100101000010000101000010011";
        ram[104] = "0b10111110000000100010001111101011";
        ram[105] = "0b00111101101010100010110110010000";
        ram[106] = "0b00111010101000110010111000001110";
        ram[107] = "0b10111101000110110000101111111110";
        ram[108] = "0b10111101100100000001011000100010";
        ram[109] = "0b10111110100001001101111010011101";
        ram[110] = "0b00111101001010101010011101111110";
        ram[111] = "0b10111011110001111100111000000110";
        ram[112] = "0b00111101100101111001100010111100";
        ram[113] = "0b10111100110010101011111110111110";
        ram[114] = "0b10111110101000101110111011001110";
        ram[115] = "0b10111101000010101000010111000100";
        ram[116] = "0b10111101110100010100100001011001";
        ram[117] = "0b10111101001000000100010100111010";
        ram[118] = "0b00111110000001111111011100110100";
        ram[119] = "0b10111100010101101110000111101010";
        ram[120] = "0b00111100001001010000010001011010";
        ram[121] = "0b10111100001100100011000111010011";
        ram[122] = "0b00111100111101010000011000110001";
        ram[123] = "0b00111101100000001000010101011001";
        ram[124] = "0b10111110101011111000000010110010";
        ram[125] = "0b00111101111110110110100100110001";
        ram[126] = "0b10111101101000110001011010101010";
        ram[127] = "0b10111101110000100000011111100001";
        ram[128] = "0b10111101101110100101110001011101";
        ram[129] = "0b00111110001101010010110110001010";
        ram[130] = "0b00111101111100100111000000010000";
        ram[131] = "0b00111101110010011001100110111111";
        ram[132] = "0b00111100010100101100010100011001";
        ram[133] = "0b10111110001110011011100011011010";
        ram[134] = "0b10111110010111000110010100010010";
        ram[135] = "0b00111101100011011011010110010010";
        ram[136] = "0b00111011111011111111001011011100";
        ram[137] = "0b10111110001100111111011111101101";
        ram[138] = "0b10111110001110110000100111001000";
        ram[139] = "0b10111110011000111101111011000011";
        ram[140] = "0b10111110011110000001110111001000";
        ram[141] = "0b00111101111100011011101101100001";
        ram[142] = "0b00111101001001110111110101111010";
        ram[143] = "0b10111101010010011111101000011000";
        ram[144] = "0b00111101111001010000010000011010";
        ram[145] = "0b10111110010110111100010101001101";
        ram[146] = "0b00111110000001011010111011010110";
        ram[147] = "0b00111101100001101111010101010100";
        ram[148] = "0b10111101001000000101011000111011";
        ram[149] = "0b10111110001011000110001000001101";
        ram[150] = "0b00111101101010000000000100100011";
        ram[151] = "0b10111110101111000011000101010100";
        ram[152] = "0b10111101001000010110111011011010";
        ram[153] = "0b10111101001101001011010011100000";
        ram[154] = "0b10111110000000001111110000100010";
        ram[155] = "0b10111101111001010101110011000100";
        ram[156] = "0b10111101010010001111111001000001";
        ram[157] = "0b00111101110011010011011000110111";
        ram[158] = "0b10111101000111111100111001011000";
        ram[159] = "0b00111100001101101100101001001000";
        ram[160] = "0b10111110101000110110110100111000";
        ram[161] = "0b00111011000010010011000101000100";
        ram[162] = "0b10111110010100001010100011100101";
        ram[163] = "0b00111101000110001011011000000110";
        ram[164] = "0b00111110000001011011000001010110";
        ram[165] = "0b10111110010000000010000111000001";
        ram[166] = "0b00111101100101110100011000101110";
        ram[167] = "0b10111100000110010000100000101111";
        ram[168] = "0b10111101111111100010001100110000";
        ram[169] = "0b10111101100111111100110001111101";
        ram[170] = "0b10111101101001110000000011100010";
        ram[171] = "0b00111100101100101100011100101110";
        ram[172] = "0b00111110000100111010001111011000";
        ram[173] = "0b10111110100101011110010001100001";
        ram[174] = "0b10111101110010011100101111110000";
        ram[175] = "0b10111110000111010100011011101010";
        ram[176] = "0b00111110011011110100100101101000";
        ram[177] = "0b10111100111000110010011100001111";
        ram[178] = "0b10111110010111010010100011001111";
        ram[179] = "0b10111110000111000110010001110100";
        ram[180] = "0b00111110001000100100000100110101";
        ram[181] = "0b10111110100000111101011111000011";
        ram[182] = "0b00111110000001100001011111011011";
        ram[183] = "0b00111101100101010110110111110011";
        ram[184] = "0b00111101100000010010011110111101";
        ram[185] = "0b00111101001100011100100001001001";
        ram[186] = "0b00111100100001110101010000110110";
        ram[187] = "0b00111101101101111101111001001000";
        ram[188] = "0b10111100100000011110111000100110";
        ram[189] = "0b10111101110001011011011101011101";
        ram[190] = "0b10111101110110101011111000110000";
        ram[191] = "0b10111101101101011101111101101000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiIfE) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiIfE_ram* meminst;


SC_CTOR(conv_2_conv_2_weiIfE) {
meminst = new conv_2_conv_2_weiIfE_ram("conv_2_conv_2_weiIfE_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiIfE() {
    delete meminst;
}


};//endmodule
#endif
