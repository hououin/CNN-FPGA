// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiKfY_H__
#define __conv_2_conv_2_weiKfY_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiKfY_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiKfY_ram) {
        ram[0] = "0b00111100000110001110100101000011";
        ram[1] = "0b10111100110100111101011001110011";
        ram[2] = "0b10111101100100001001111110000110";
        ram[3] = "0b00111101010011001111010001011100";
        ram[4] = "0b10111101101011101101011011110001";
        ram[5] = "0b10111011011001000101100100100100";
        ram[6] = "0b10111101110100000101011011011111";
        ram[7] = "0b10111101001110100000000000001101";
        ram[8] = "0b10111101100101111111001000111110";
        ram[9] = "0b10111110100000110010110100011000";
        ram[10] = "0b10111101101101110011101000010100";
        ram[11] = "0b10111101100000100011010100001000";
        ram[12] = "0b10111110010000101100111011001111";
        ram[13] = "0b00111101000110101001001111100011";
        ram[14] = "0b00111100101111010111100001100000";
        ram[15] = "0b00111100001000010010100101100110";
        ram[16] = "0b10111110011010111011011101001100";
        ram[17] = "0b00111101000011001100010000111011";
        ram[18] = "0b00111101101101111001100001010110";
        ram[19] = "0b00111110000110101011011111101001";
        ram[20] = "0b00111101010010000110001100100100";
        ram[21] = "0b10111110011010100111010001101101";
        ram[22] = "0b10111101111000011001100100000100";
        ram[23] = "0b00111101101100001101010111001110";
        ram[24] = "0b10111110001110001110011111000100";
        ram[25] = "0b00111011111011000110011010110000";
        ram[26] = "0b10111101111001010101010101011010";
        ram[27] = "0b00111101111100011011111010101011";
        ram[28] = "0b00111101011101110001001011101111";
        ram[29] = "0b10111101011010011111100001000011";
        ram[30] = "0b00111101101010101010100110110110";
        ram[31] = "0b00111101111010011001001011000001";
        ram[32] = "0b10111101111001000001011011001010";
        ram[33] = "0b10111110000011110010101101100010";
        ram[34] = "0b10111101100101011100010111010110";
        ram[35] = "0b00111110100001011111001111000001";
        ram[36] = "0b10111101111111010110110001001111";
        ram[37] = "0b10111100100001111101111110110000";
        ram[38] = "0b10111100100101111010100110010000";
        ram[39] = "0b10111100100010000100011100000011";
        ram[40] = "0b00111101010110000111111001110010";
        ram[41] = "0b10111101001010100010101101111010";
        ram[42] = "0b10111011011000111011011100101001";
        ram[43] = "0b00111101111001111111001101110001";
        ram[44] = "0b00111011111100000101101000101010";
        ram[45] = "0b10111100111101100100111000110000";
        ram[46] = "0b10111101000101111010110100101011";
        ram[47] = "0b00111011111110111100010111010101";
        ram[48] = "0b00111110010100110111000110010101";
        ram[49] = "0b10111110110011010000101001000011";
        ram[50] = "0b10111110010110001001110111010100";
        ram[51] = "0b10111110000101101110100110011111";
        ram[52] = "0b10111110010011110011010100001111";
        ram[53] = "0b00111110000111110010011101000101";
        ram[54] = "0b10111101100100000000010110011111";
        ram[55] = "0b10111101001100111000110110000010";
        ram[56] = "0b00111101101010010000000011011110";
        ram[57] = "0b00111100101001010101101101100010";
        ram[58] = "0b10111101011000011110001101001110";
        ram[59] = "0b10111011111100100001010100001101";
        ram[60] = "0b00111101110000000110101001110001";
        ram[61] = "0b00111100100001100110011110100011";
        ram[62] = "0b10111101011111100010010111111100";
        ram[63] = "0b10111101100011101000000000111111";
        ram[64] = "0b10111101011101011001000110011010";
        ram[65] = "0b10111101000001111111011000100111";
        ram[66] = "0b10111110011000010010101110001011";
        ram[67] = "0b10111110000111010010111011000100";
        ram[68] = "0b10111101110010111000110110100010";
        ram[69] = "0b00111101100010100000001000000010";
        ram[70] = "0b10111101011111011000110100110100";
        ram[71] = "0b10111110000111110101110000001010";
        ram[72] = "0b10111110001101010100000111100100";
        ram[73] = "0b00111110001010101011001000100111";
        ram[74] = "0b00111101000111001100011110001111";
        ram[75] = "0b10111100101010101010111011010010";
        ram[76] = "0b10111101111011111010010001110011";
        ram[77] = "0b10111110011100001010000000100111";
        ram[78] = "0b10111101111010001000011000100101";
        ram[79] = "0b10111101010101100111111000101000";
        ram[80] = "0b10111110000010100011100101010111";
        ram[81] = "0b10111100111110110010111001111010";
        ram[82] = "0b10111110010010100011101101101101";
        ram[83] = "0b00111110001110110011000101111100";
        ram[84] = "0b10111110001110100001111111011000";
        ram[85] = "0b10111110001101001011111101111100";
        ram[86] = "0b10111110111100011111010101110100";
        ram[87] = "0b00111101101011100111110001111110";
        ram[88] = "0b10111110100110011011100100011011";
        ram[89] = "0b10111100001100111111010111101110";
        ram[90] = "0b00111011101011110110011101100111";
        ram[91] = "0b00111101011101000011100010000011";
        ram[92] = "0b10111100010101101000111111111111";
        ram[93] = "0b10111101000000111101000110110001";
        ram[94] = "0b10111110001000110110100111101100";
        ram[95] = "0b00111101111101011101110100111000";
        ram[96] = "0b10111101111110101101101001000111";
        ram[97] = "0b10111110100001001011111110110000";
        ram[98] = "0b10111101000000010111100111111100";
        ram[99] = "0b00111101101100110111001110100101";
        ram[100] = "0b10111100101011101110001101011001";
        ram[101] = "0b00111110000100101101001110011111";
        ram[102] = "0b10111110001001010000101010110110";
        ram[103] = "0b10111110001101011000101101111011";
        ram[104] = "0b00111011100101101110111110110011";
        ram[105] = "0b10111101001101001000101101110011";
        ram[106] = "0b10111110100101000110011001011100";
        ram[107] = "0b10111101100001011011011100101010";
        ram[108] = "0b00111101010101101111100000001001";
        ram[109] = "0b00111101101010101110111010010000";
        ram[110] = "0b00111101010111011000001101110000";
        ram[111] = "0b00111101000000111011011000000001";
        ram[112] = "0b00111101100101100111000111001010";
        ram[113] = "0b10111110000100100000110000110011";
        ram[114] = "0b10111110101100000000011000001000";
        ram[115] = "0b10111100011111001011010011000100";
        ram[116] = "0b10111110100000100010101110110001";
        ram[117] = "0b00111110011110011010101010100110";
        ram[118] = "0b00111011110101111101101111001001";
        ram[119] = "0b10111101111001001011111110011101";
        ram[120] = "0b00111101000011000110100011101010";
        ram[121] = "0b00111101000010111010100101101011";
        ram[122] = "0b00111100110100101110001101010110";
        ram[123] = "0b00111101100111000100110011111100";
        ram[124] = "0b10111110110111101010011110101000";
        ram[125] = "0b10111110001101100101101011100111";
        ram[126] = "0b10111110010101100101011010010010";
        ram[127] = "0b10111101011010111110100011101010";
        ram[128] = "0b10111100010010100000110110111100";
        ram[129] = "0b00111101000101100011000011010110";
        ram[130] = "0b00111101010100011000100101011000";
        ram[131] = "0b00111101011101010111010100101110";
        ram[132] = "0b10111110000111000010001111110001";
        ram[133] = "0b10111101000010100011110000001100";
        ram[134] = "0b00111101101100110010101111100110";
        ram[135] = "0b10111110010010001101000011011110";
        ram[136] = "0b10111101000100011110010011001101";
        ram[137] = "0b10111101101010100011100100100101";
        ram[138] = "0b00111101100100111101001001100000";
        ram[139] = "0b10111110001110110110000010110000";
        ram[140] = "0b10111110000011000100000110010111";
        ram[141] = "0b10111110001111101011001101010110";
        ram[142] = "0b10111110000110100011001110111100";
        ram[143] = "0b10111101111010011101000011010100";
        ram[144] = "0b10111100100010110010111000111101";
        ram[145] = "0b00111101100001000101001111101110";
        ram[146] = "0b10111101101011001011100000111010";
        ram[147] = "0b00111101010011101001110110011000";
        ram[148] = "0b10111110011101100010110011110000";
        ram[149] = "0b00111110010110110111110110110010";
        ram[150] = "0b10111101111010000001000101111001";
        ram[151] = "0b00111101010010001011000000111000";
        ram[152] = "0b10111101101111011101010001100100";
        ram[153] = "0b00111101000011100111100111100001";
        ram[154] = "0b00111101101101001100101011011010";
        ram[155] = "0b10111101110010100110110110111011";
        ram[156] = "0b00111101011010010110010011011001";
        ram[157] = "0b00111101101010001011001001110010";
        ram[158] = "0b10111110010100001000001110001000";
        ram[159] = "0b00111101011011011011010101000100";
        ram[160] = "0b10111101111000100111010101001110";
        ram[161] = "0b10111101001000010001111111100111";
        ram[162] = "0b10111101100110110001111111110100";
        ram[163] = "0b10111110100111111001101100010010";
        ram[164] = "0b00111100000011101110011011010111";
        ram[165] = "0b00111101101011110001001101000111";
        ram[166] = "0b10111100111101010110111010100000";
        ram[167] = "0b00111100100001101101000001111110";
        ram[168] = "0b10111100100110001000011001011101";
        ram[169] = "0b00111101110010101110011101101010";
        ram[170] = "0b00111110000000100101011101000000";
        ram[171] = "0b00111011001111010111011101001110";
        ram[172] = "0b10111101101111010101001001111110";
        ram[173] = "0b10111101111000010000011001100110";
        ram[174] = "0b10111101100000101100001010011110";
        ram[175] = "0b00111101101110111100011111110111";
        ram[176] = "0b00111100101001001011100110000110";
        ram[177] = "0b10111110001011011111011010001010";
        ram[178] = "0b10111110100111101100010010110000";
        ram[179] = "0b00111110000110101100001011001100";
        ram[180] = "0b00111101101000101101100101000001";
        ram[181] = "0b10111101010000100011001000101100";
        ram[182] = "0b00111101000010000010010010110110";
        ram[183] = "0b10111101110000100101110110111001";
        ram[184] = "0b00111101011010011111000011111001";
        ram[185] = "0b10111101011101110100111101100111";
        ram[186] = "0b00111101100100100111000110001111";
        ram[187] = "0b00111101100110011111010100101101";
        ram[188] = "0b10111110111011111111000000011011";
        ram[189] = "0b10111101100011100101011000010100";
        ram[190] = "0b10111100111110011100001111111111";
        ram[191] = "0b00111101110100111110000110011100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiKfY) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiKfY_ram* meminst;


SC_CTOR(conv_2_conv_2_weiKfY) {
meminst = new conv_2_conv_2_weiKfY_ram("conv_2_conv_2_weiKfY_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiKfY() {
    delete meminst;
}


};//endmodule
#endif
