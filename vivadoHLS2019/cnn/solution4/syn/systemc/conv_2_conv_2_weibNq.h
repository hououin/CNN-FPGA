// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibNq_H__
#define __conv_2_conv_2_weibNq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibNq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibNq_ram) {
        ram[0] = "0b10111110010101101010000010100110";
        ram[1] = "0b10111110100001010010000011010100";
        ram[2] = "0b00111110000001010111001001000110";
        ram[3] = "0b10111101111010110101101011101110";
        ram[4] = "0b00111110000111110000000100100010";
        ram[5] = "0b10111110001101101111000011011000";
        ram[6] = "0b10111101101000000000000110001110";
        ram[7] = "0b00111110001101111010101101001011";
        ram[8] = "0b10111110000001111000101100001101";
        ram[9] = "0b10111110000010011000011110000110";
        ram[10] = "0b00111100111111001100100110101001";
        ram[11] = "0b00111101111110100011100110100000";
        ram[12] = "0b10111101000100011110110000110111";
        ram[13] = "0b10111011111110011110001111100101";
        ram[14] = "0b10111101111010111110000010111111";
        ram[15] = "0b10111101000100011000000000110101";
        ram[16] = "0b00111101001011010010110000011100";
        ram[17] = "0b10111110000000001100111001101100";
        ram[18] = "0b00111101010000101001000011100000";
        ram[19] = "0b10111110011101101111111100001111";
        ram[20] = "0b00111011010010010001101001100010";
        ram[21] = "0b10111101000001101110100000010000";
        ram[22] = "0b10111110011000011001000000011010";
        ram[23] = "0b00111101010010011110111011000000";
        ram[24] = "0b10111110000101011110001001011101";
        ram[25] = "0b10111101001010111000011011110010";
        ram[26] = "0b10111110001001000110111111110110";
        ram[27] = "0b10111110100110111010001011000001";
        ram[28] = "0b10111101110110001101001111010010";
        ram[29] = "0b10111110010010010100001000010110";
        ram[30] = "0b10111101110010000111100111101111";
        ram[31] = "0b10111101110110010000010110001001";
        ram[32] = "0b10111110000001100001001100101111";
        ram[33] = "0b00111101110110011011101111100101";
        ram[34] = "0b10111101101001001001100000110111";
        ram[35] = "0b10111101101110001111011001100001";
        ram[36] = "0b10111101001110001000010010110000";
        ram[37] = "0b10111110000110011110000110110110";
        ram[38] = "0b00111101100111001011101110001110";
        ram[39] = "0b00111110000000001011100101010110";
        ram[40] = "0b10111110111000000110111100000101";
        ram[41] = "0b10111101110100111100110000110110";
        ram[42] = "0b10111110001001101011101101010110";
        ram[43] = "0b00111101101110001111100011011000";
        ram[44] = "0b10111101101111111100011110111010";
        ram[45] = "0b10111100100000100101011011111100";
        ram[46] = "0b00111110000100101010000011110111";
        ram[47] = "0b00111100101000000010001101100011";
        ram[48] = "0b10111110010010000001110000001000";
        ram[49] = "0b00111101110110101101110100000011";
        ram[50] = "0b10111101111000001001100000100001";
        ram[51] = "0b10111110001001110100001101011111";
        ram[52] = "0b10111101011111001011001001001010";
        ram[53] = "0b10111110010110110001110100110010";
        ram[54] = "0b10111110001001010000100110100011";
        ram[55] = "0b00111110000101110011011110101100";
        ram[56] = "0b00111101000111001101010110111101";
        ram[57] = "0b10111110011001000110101111111100";
        ram[58] = "0b10111100111111000011011001001011";
        ram[59] = "0b00111011010100100101011000001001";
        ram[60] = "0b10111101101111001010000100000001";
        ram[61] = "0b10111110011100010010010001010100";
        ram[62] = "0b00111101100011010001010101110110";
        ram[63] = "0b00111101110110011110011000101111";
        ram[64] = "0b00111101010111100001101111011011";
        ram[65] = "0b10111110110010010000101000101010";
        ram[66] = "0b10111100101011110001100011101011";
        ram[67] = "0b10111110000010010100110010101001";
        ram[68] = "0b00111101111100101110000111100100";
        ram[69] = "0b00111110000110111110000000100100";
        ram[70] = "0b10111101000101001111001100011100";
        ram[71] = "0b00111011101001111010011111101010";
        ram[72] = "0b00111101101000101111001100001111";
        ram[73] = "0b00111100110100110010001110110001";
        ram[74] = "0b10111101110001111101011101000111";
        ram[75] = "0b10111010011110111111101110000001";
        ram[76] = "0b10111101101101010010000001110000";
        ram[77] = "0b10111101100000000110000000100110";
        ram[78] = "0b10111101101000011101011010001010";
        ram[79] = "0b00111100100110101000011001111101";
        ram[80] = "0b10111100101110110011110100001001";
        ram[81] = "0b00111110000101100101100001010110";
        ram[82] = "0b00111100011100000111101110101101";
        ram[83] = "0b00111101010010110110000011000001";
        ram[84] = "0b10111110011000110110110001000011";
        ram[85] = "0b10111101110011010110100011111101";
        ram[86] = "0b10111011110110110100110010110010";
        ram[87] = "0b00111101101111010111001001010111";
        ram[88] = "0b10111101000110100110111111001101";
        ram[89] = "0b10111101011111001010010010011010";
        ram[90] = "0b00111100111010101110100011011001";
        ram[91] = "0b10111101100111000111000101101111";
        ram[92] = "0b10111101001100110011100011110010";
        ram[93] = "0b10111110001011011111000111000000";
        ram[94] = "0b00111101000001111000000111000001";
        ram[95] = "0b10111110010001000100011000101100";
        ram[96] = "0b00111101101011011000111010111101";
        ram[97] = "0b00111101000011110110110001101011";
        ram[98] = "0b00111101100100011101000001001001";
        ram[99] = "0b10111101110001100011001111110101";
        ram[100] = "0b10111110100100000111111010001111";
        ram[101] = "0b10111110100110001011101101000101";
        ram[102] = "0b00111101101010000101111001001100";
        ram[103] = "0b10111010111000011100010110010110";
        ram[104] = "0b10111110100010010111011001101001";
        ram[105] = "0b10111101111111101011111001000100";
        ram[106] = "0b10111101000100010011010011011110";
        ram[107] = "0b10111101111010101100100001001010";
        ram[108] = "0b10111100011111001111001111111000";
        ram[109] = "0b00111101100010111011110010011101";
        ram[110] = "0b00111101001100011011111011100111";
        ram[111] = "0b00111110000011011101000000111101";
        ram[112] = "0b00111100011110011110111111101110";
        ram[113] = "0b00111101010001111111010011011111";
        ram[114] = "0b00111100100010010111001100010010";
        ram[115] = "0b10111101111001110100100101011111";
        ram[116] = "0b10111101110010001000010111011000";
        ram[117] = "0b10111110001001010010000001001100";
        ram[118] = "0b00111110000000100111100001101011";
        ram[119] = "0b00111110010011111001110111011011";
        ram[120] = "0b00111101001011101100100100010111";
        ram[121] = "0b00111101100011100010001001000001";
        ram[122] = "0b10111100110110011100011010010111";
        ram[123] = "0b00111110001100101111100001110100";
        ram[124] = "0b00111100101110100100111110011001";
        ram[125] = "0b00111100001100110000110010111111";
        ram[126] = "0b10111101110000110001101001111110";
        ram[127] = "0b10111101100111100010000100111000";
        ram[128] = "0b10111100100011110001110100110101";
        ram[129] = "0b10111110100101110100001101001001";
        ram[130] = "0b00111110000001001101111110000111";
        ram[131] = "0b00111101110110110101010010101001";
        ram[132] = "0b10111100101000101000100010000011";
        ram[133] = "0b10111110010010010000011011011111";
        ram[134] = "0b00111110001101101000111101111000";
        ram[135] = "0b10111110000000010000101000110010";
        ram[136] = "0b10111101000110111101100100111101";
        ram[137] = "0b00111101001100110001111110101111";
        ram[138] = "0b10111101110111000001011010011011";
        ram[139] = "0b10111101101111000111011001101000";
        ram[140] = "0b00111101111010111101101011101110";
        ram[141] = "0b00111100111001101110001101101001";
        ram[142] = "0b00111011111000100000010000110010";
        ram[143] = "0b00111110011000010000010101001101";
        ram[144] = "0b00111101000000001010100000101101";
        ram[145] = "0b00111101111000100001110111100101";
        ram[146] = "0b10111101111010111010011010011000";
        ram[147] = "0b10111101011001010100011000011011";
        ram[148] = "0b10111101010101110100111000101001";
        ram[149] = "0b10111110000011011100100011000010";
        ram[150] = "0b10111101110100100001111101110100";
        ram[151] = "0b00111101101010110000011010100100";
        ram[152] = "0b10111100111101100011111111110011";
        ram[153] = "0b00111101110000001011110001000100";
        ram[154] = "0b10111101000000000111001010101111";
        ram[155] = "0b00111110000101111100111010000110";
        ram[156] = "0b00111110001110100010100100100111";
        ram[157] = "0b10111101101110011110111111101100";
        ram[158] = "0b10111110000100011110110001000011";
        ram[159] = "0b00111101101111001101100100111111";
        ram[160] = "0b00111101101010010111111111111010";
        ram[161] = "0b10111100010001010011001000000001";
        ram[162] = "0b10111101101111111111111001101010";
        ram[163] = "0b10111101000100100001101111110000";
        ram[164] = "0b10111101110110001111100000001111";
        ram[165] = "0b00111100000001111101011011110011";
        ram[166] = "0b00111101100010111001100100101011";
        ram[167] = "0b10111110001000010001100101110011";
        ram[168] = "0b10111110000110011001000011010100";
        ram[169] = "0b00111110001110100101011011001010";
        ram[170] = "0b10111101101111110111001111100001";
        ram[171] = "0b00111101101001101001011000000100";
        ram[172] = "0b00111011011101010001101100011101";
        ram[173] = "0b10111110101000111110101010101101";
        ram[174] = "0b00111101111011111001001010111110";
        ram[175] = "0b00111110011001100101101110001101";
        ram[176] = "0b10111101100101000110000100010110";
        ram[177] = "0b00111110010101000110011100011100";
        ram[178] = "0b00111101000111001011010001011110";
        ram[179] = "0b10111110011000001111011000110100";
        ram[180] = "0b10111100101000010001111001000000";
        ram[181] = "0b10111110000110001111110001000101";
        ram[182] = "0b00111101111011100010100001100000";
        ram[183] = "0b10111101011110111010110011011001";
        ram[184] = "0b00111101111101010000100001010011";
        ram[185] = "0b00111011000100100111000110001000";
        ram[186] = "0b00111101110010001110001010101001";
        ram[187] = "0b10111001001100110111011100010010";
        ram[188] = "0b10111101111001110000000110010000";
        ram[189] = "0b10111101101101011101000110011010";
        ram[190] = "0b10111101010001101100110110100011";
        ram[191] = "0b10111100001100010001110111000110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibNq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibNq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibNq) {
meminst = new conv_2_conv_2_weibNq_ram("conv_2_conv_2_weibNq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibNq() {
    delete meminst;
}


};//endmodule
#endif
