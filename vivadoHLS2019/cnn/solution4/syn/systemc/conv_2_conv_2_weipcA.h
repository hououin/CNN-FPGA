// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weipcA_H__
#define __conv_2_conv_2_weipcA_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weipcA_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weipcA_ram) {
        ram[0] = "0b10111110001010111111111110000100";
        ram[1] = "0b10111011100110101110110111101001";
        ram[2] = "0b00111110100001100011100100001100";
        ram[3] = "0b10111101100010100011000111001011";
        ram[4] = "0b00111101011011101001000011001101";
        ram[5] = "0b00111101011010000101011100110100";
        ram[6] = "0b10111110001101011001111101000111";
        ram[7] = "0b00111110010100100011011010011101";
        ram[8] = "0b00111011011000111001010010110010";
        ram[9] = "0b00111101011110010000010101100011";
        ram[10] = "0b10111101100010001101110001000101";
        ram[11] = "0b00111101101010010011110100110111";
        ram[12] = "0b10111101100110101010011010100011";
        ram[13] = "0b10111110000010001100010110011110";
        ram[14] = "0b10111110000010011100101100110110";
        ram[15] = "0b10111101010011111101101111101011";
        ram[16] = "0b00111110000001001000000100010100";
        ram[17] = "0b10111100100101001011010010001000";
        ram[18] = "0b00111101001000010010001011100111";
        ram[19] = "0b00111110001000110010111011001110";
        ram[20] = "0b10111101001100001101011001011101";
        ram[21] = "0b10111101001010001010010010111110";
        ram[22] = "0b10111110010110010111110110111010";
        ram[23] = "0b00111110001111100001010101001001";
        ram[24] = "0b10111110001101111010110010101000";
        ram[25] = "0b00111110001110001110010010000111";
        ram[26] = "0b10111101100001101001010010011001";
        ram[27] = "0b00111011100100011011110101001000";
        ram[28] = "0b00111101110010101010000011000100";
        ram[29] = "0b00111101110001110011110100001110";
        ram[30] = "0b10111110010110000101110000010101";
        ram[31] = "0b00111101011100101101100101000100";
        ram[32] = "0b10111101111111011101000110001100";
        ram[33] = "0b10111100100100011010000110111010";
        ram[34] = "0b00111110001111010000110011101000";
        ram[35] = "0b00111100111001010110011001100110";
        ram[36] = "0b00111110100010011010000101010001";
        ram[37] = "0b00111101110101010001010000001111";
        ram[38] = "0b10111110100010110100001011010101";
        ram[39] = "0b10111011011001000000001100001010";
        ram[40] = "0b10111110000011010000100111010100";
        ram[41] = "0b00111100111101101100110010100010";
        ram[42] = "0b00111110001000100110000010011111";
        ram[43] = "0b10111101010011100100110101100000";
        ram[44] = "0b10111101111010100001111100001001";
        ram[45] = "0b10111101111000100101011011001001";
        ram[46] = "0b10111101101110110111110011001001";
        ram[47] = "0b10111110010101011111110111010110";
        ram[48] = "0b10111100100101011101111110011111";
        ram[49] = "0b10111110011010010000110000010000";
        ram[50] = "0b10111101101111100001101100110010";
        ram[51] = "0b10111100001000101111100001000110";
        ram[52] = "0b10111110100011000101111010110011";
        ram[53] = "0b00111110001010000100011010011101";
        ram[54] = "0b00111110010000000001110000011100";
        ram[55] = "0b10111101011111001101111010000101";
        ram[56] = "0b00111101100001001110101011000000";
        ram[57] = "0b00111101111110101011011100100110";
        ram[58] = "0b00111101011000111100001001100100";
        ram[59] = "0b10111110001000100001011110000010";
        ram[60] = "0b10111110100000110110100101010100";
        ram[61] = "0b10111101011010101001001001010100";
        ram[62] = "0b10111101010000111110011100001110";
        ram[63] = "0b10111101111111101110111111111110";
        ram[64] = "0b10111101001100101000001101000011";
        ram[65] = "0b10111101001010010101110101001111";
        ram[66] = "0b00111011000010101101000110101100";
        ram[67] = "0b00111101111110001100001110001000";
        ram[68] = "0b10111101000011100101100111010000";
        ram[69] = "0b10111101100110000110000000100010";
        ram[70] = "0b10111101100000001001111010011000";
        ram[71] = "0b00111101111110000100001100011100";
        ram[72] = "0b10111101111100110100101010100110";
        ram[73] = "0b10111110000110000011101110110111";
        ram[74] = "0b10111110110111100100001100001111";
        ram[75] = "0b10111110000101100010100110010001";
        ram[76] = "0b10111101111111110001000101001110";
        ram[77] = "0b00111011010000001011000010111000";
        ram[78] = "0b10111110000111011010111001111101";
        ram[79] = "0b10111110000010111001110011110011";
        ram[80] = "0b10111100011100101111110111011001";
        ram[81] = "0b00111101111101011110101100110100";
        ram[82] = "0b00111110001000000011000100110001";
        ram[83] = "0b00111011101001110100101111011110";
        ram[84] = "0b00111101100001101111101000001101";
        ram[85] = "0b10111101110100010110111110111111";
        ram[86] = "0b00111101111000010010010011010101";
        ram[87] = "0b10111100110110101111010111000010";
        ram[88] = "0b10111101111000100001110110111100";
        ram[89] = "0b10111110100001111110110101011101";
        ram[90] = "0b00111010010000000110111011001100";
        ram[91] = "0b10111110110010100001101110010111";
        ram[92] = "0b00111101110101001010100111100101";
        ram[93] = "0b10111101110101010111111111100010";
        ram[94] = "0b10111110001001110101111111101101";
        ram[95] = "0b00111101111001110001000111100101";
        ram[96] = "0b10111110001110110101001010101001";
        ram[97] = "0b00111101010101111011100101111000";
        ram[98] = "0b10111110000011110110000011101000";
        ram[99] = "0b10111110001001101011001110001011";
        ram[100] = "0b00111101110110000001011011101010";
        ram[101] = "0b00111011000010100111110100001101";
        ram[102] = "0b10111101010010110111101010110010";
        ram[103] = "0b00111101101110010011101100101110";
        ram[104] = "0b10111101001101010011001000110000";
        ram[105] = "0b10111101100000111110000000100010";
        ram[106] = "0b00111110000001111111100001100111";
        ram[107] = "0b00111101000110100000101110011010";
        ram[108] = "0b10111110010011011100001001111011";
        ram[109] = "0b10111110101000110111000110001001";
        ram[110] = "0b10111110001010110001000011000001";
        ram[111] = "0b10111110101000111001010010110010";
        ram[112] = "0b10111100011001110010101010000001";
        ram[113] = "0b10111101100010000110110100010111";
        ram[114] = "0b10111110100000100010000011111101";
        ram[115] = "0b00111101001111111000100101010111";
        ram[116] = "0b10111101000110001000011111100011";
        ram[117] = "0b10111110000000010100101001100101";
        ram[118] = "0b10111100011110000111110101110001";
        ram[119] = "0b00111110000001010110001000110010";
        ram[120] = "0b00111101010101010011010010111000";
        ram[121] = "0b00111100011110011001110100110110";
        ram[122] = "0b00111100011010100010010111000101";
        ram[123] = "0b00111101101111100000100100000001";
        ram[124] = "0b10111110111010111100011110011001";
        ram[125] = "0b00111101111000010111000111110111";
        ram[126] = "0b00111100101101011001001100100010";
        ram[127] = "0b00111100101100101000000100111101";
        ram[128] = "0b10111110000111011001111001100011";
        ram[129] = "0b10111101001011100001101110101000";
        ram[130] = "0b10111110001010011010001011011100";
        ram[131] = "0b00111101011101110110011001011110";
        ram[132] = "0b00111101000110101100010110110010";
        ram[133] = "0b10111101101000110011011110111010";
        ram[134] = "0b00111101010110111000110011000000";
        ram[135] = "0b00111101111010011010010001001011";
        ram[136] = "0b00111110001100000000010110101101";
        ram[137] = "0b00111110000011001111011100010101";
        ram[138] = "0b10111110000010001111011110011100";
        ram[139] = "0b10111110100011111011000101000101";
        ram[140] = "0b10111101101010111101011011101010";
        ram[141] = "0b00111101000011001000010001111010";
        ram[142] = "0b00111110000010011011100010000011";
        ram[143] = "0b00111110000101110001110010100011";
        ram[144] = "0b00111101000011001101100111000110";
        ram[145] = "0b10111101111110101100110010011100";
        ram[146] = "0b10111100011001010000010100010011";
        ram[147] = "0b10111110011001010110001110101110";
        ram[148] = "0b00111101101001110010100100001010";
        ram[149] = "0b00111101000011000100101110110101";
        ram[150] = "0b00111101100110110011111011011011";
        ram[151] = "0b00111100011101001111001111001011";
        ram[152] = "0b10111110010011100100111000001000";
        ram[153] = "0b10111101000110111010000010100100";
        ram[154] = "0b00111101100110111100010000011001";
        ram[155] = "0b10111101111001001100101111010110";
        ram[156] = "0b10111101110101000001100010110101";
        ram[157] = "0b10111110001011110100000111100001";
        ram[158] = "0b10111110000101101111110001111100";
        ram[159] = "0b00111101000011010111010110111100";
        ram[160] = "0b00111110001100011011101010101100";
        ram[161] = "0b10111100100111111001010011101111";
        ram[162] = "0b00111110001110110010111001100011";
        ram[163] = "0b00111110000001000011110111110000";
        ram[164] = "0b10111110001011010000111011001110";
        ram[165] = "0b10111110101001010100100101101101";
        ram[166] = "0b00111110100000010111010110001001";
        ram[167] = "0b00111110010011100010001100000110";
        ram[168] = "0b00111101101110001101101100110101";
        ram[169] = "0b10111110100111011110010010001100";
        ram[170] = "0b10111101111100101010000110001100";
        ram[171] = "0b00111110000111001000110100111111";
        ram[172] = "0b00111110011001111110111011011000";
        ram[173] = "0b00111110000101000110110000011000";
        ram[174] = "0b00111110010001001110011011111110";
        ram[175] = "0b10111101001001011010101111010111";
        ram[176] = "0b00111110000010011011101001000100";
        ram[177] = "0b00111110000100011110011000100001";
        ram[178] = "0b10111110010110001111100010010110";
        ram[179] = "0b10111110100110101000001101001101";
        ram[180] = "0b00111101101010110011001011001100";
        ram[181] = "0b10111110001010011000110111010001";
        ram[182] = "0b10111110001101010011110100110011";
        ram[183] = "0b00111101100111111100010110111001";
        ram[184] = "0b00111101000011011111011111010000";
        ram[185] = "0b10111110010101111011100001011011";
        ram[186] = "0b10111110100000101010101011011100";
        ram[187] = "0b10111110110110000000011111101110";
        ram[188] = "0b10111110000110101000111010010111";
        ram[189] = "0b10111101111110000000000110110100";
        ram[190] = "0b00111110001010011110000110110000";
        ram[191] = "0b00111110001111011011011100101100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weipcA) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weipcA_ram* meminst;


SC_CTOR(conv_2_conv_2_weipcA) {
meminst = new conv_2_conv_2_weipcA_ram("conv_2_conv_2_weipcA_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weipcA() {
    delete meminst;
}


};//endmodule
#endif
