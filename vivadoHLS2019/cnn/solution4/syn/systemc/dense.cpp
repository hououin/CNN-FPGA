// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> dense::ap_ST_fsm_state1 = "1";
const sc_lv<5> dense::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> dense::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<5> dense::ap_ST_fsm_state6 = "1000";
const sc_lv<5> dense::ap_ST_fsm_state7 = "10000";
const bool dense::ap_const_boolean_1 = true;
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const bool dense::ap_const_boolean_0 = false;
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<14> dense::ap_const_lv14_0 = "00000000000000";
const sc_lv<4> dense::ap_const_lv4_0 = "0000";
const sc_lv<11> dense::ap_const_lv11_0 = "00000000000";
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const sc_lv<14> dense::ap_const_lv14_3E80 = "11111010000000";
const sc_lv<14> dense::ap_const_lv14_1 = "1";
const sc_lv<4> dense::ap_const_lv4_1 = "1";
const sc_lv<11> dense::ap_const_lv11_640 = "11001000000";
const sc_lv<3> dense::ap_const_lv3_0 = "000";
const sc_lv<11> dense::ap_const_lv11_1 = "1";

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_weights_U = new dense_dense_weights("dense_weights_U");
    dense_weights_U->clk(ap_clk);
    dense_weights_U->reset(ap_rst);
    dense_weights_U->address0(dense_weights_address0);
    dense_weights_U->ce0(dense_weights_ce0);
    dense_weights_U->q0(dense_weights_q0);
    dense_array_U = new dense_dense_array("dense_array_U");
    dense_array_U->clk(ap_clk);
    dense_array_U->reset(ap_rst);
    dense_array_U->address0(dense_array_address0);
    dense_array_U->ce0(dense_array_ce0);
    dense_array_U->we0(dense_array_we0);
    dense_array_U->d0(grp_fu_168_p2);
    dense_array_U->q0(dense_array_q0);
    grp_soft_max_fu_161 = new soft_max("grp_soft_max_fu_161");
    grp_soft_max_fu_161->ap_clk(ap_clk);
    grp_soft_max_fu_161->ap_rst(ap_rst);
    grp_soft_max_fu_161->ap_start(grp_soft_max_fu_161_ap_start);
    grp_soft_max_fu_161->ap_done(grp_soft_max_fu_161_ap_done);
    grp_soft_max_fu_161->ap_idle(grp_soft_max_fu_161_ap_idle);
    grp_soft_max_fu_161->ap_ready(grp_soft_max_fu_161_ap_ready);
    grp_soft_max_fu_161->dense_array_address0(grp_soft_max_fu_161_dense_array_address0);
    grp_soft_max_fu_161->dense_array_ce0(grp_soft_max_fu_161_dense_array_ce0);
    grp_soft_max_fu_161->dense_array_q0(dense_array_q0);
    grp_soft_max_fu_161->prediction_Addr_A(grp_soft_max_fu_161_prediction_Addr_A);
    grp_soft_max_fu_161->prediction_EN_A(grp_soft_max_fu_161_prediction_EN_A);
    grp_soft_max_fu_161->prediction_WEN_A(grp_soft_max_fu_161_prediction_WEN_A);
    grp_soft_max_fu_161->prediction_Din_A(grp_soft_max_fu_161_prediction_Din_A);
    grp_soft_max_fu_161->prediction_Dout_A(ap_var_for_const0);
    cnn_fadd_32ns_32nkbM_U145 = new cnn_fadd_32ns_32nkbM<1,2,32,32,32>("cnn_fadd_32ns_32nkbM_U145");
    cnn_fadd_32ns_32nkbM_U145->clk(ap_clk);
    cnn_fadd_32ns_32nkbM_U145->reset(ap_rst);
    cnn_fadd_32ns_32nkbM_U145->din0(grp_fu_168_p0);
    cnn_fadd_32ns_32nkbM_U145->din1(grp_fu_173_p2);
    cnn_fadd_32ns_32nkbM_U145->ce(ap_var_for_const1);
    cnn_fadd_32ns_32nkbM_U145->dout(grp_fu_168_p2);
    cnn_fmul_32ns_32nlbW_U146 = new cnn_fmul_32ns_32nlbW<1,2,32,32,32>("cnn_fmul_32ns_32nlbW_U146");
    cnn_fmul_32ns_32nlbW_U146->clk(ap_clk);
    cnn_fmul_32ns_32nlbW_U146->reset(ap_rst);
    cnn_fmul_32ns_32nlbW_U146->din0(dense_weights_q0);
    cnn_fmul_32ns_32nlbW_U146->din1(flat_array_q0);
    cnn_fmul_32ns_32nlbW_U146->ce(ap_var_for_const1);
    cnn_fmul_32ns_32nlbW_U146->dout(grp_fu_173_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln29_fu_186_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_120_p4 );

    SC_METHOD(thread_add_ln35_4_fu_259_p2);
    sensitive << ( add_ln35_fu_253_p2 );
    sensitive << ( zext_ln34_fu_220_p1 );

    SC_METHOD(thread_add_ln35_fu_253_p2);
    sensitive << ( zext_ln35_8_fu_249_p1 );
    sensitive << ( zext_ln35_7_fu_237_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln29_fu_180_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_soft_max_fu_161_ap_done );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_d_0_phi_fu_131_p4);
    sensitive << ( d_0_reg_127 );
    sensitive << ( icmp_ln29_reg_292 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln35_2_reg_311 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_f_0_phi_fu_154_p4);
    sensitive << ( f_0_reg_150 );
    sensitive << ( icmp_ln29_reg_292 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( f_reg_337 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_120_p4);
    sensitive << ( indvar_flatten_reg_116 );
    sensitive << ( icmp_ln29_reg_292 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln29_reg_296 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_soft_max_fu_161_ap_done );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_d_fu_192_p2);
    sensitive << ( ap_phi_mux_d_0_phi_fu_131_p4 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_soft_max_fu_161_dense_array_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln35_fu_288_p1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( grp_soft_max_fu_161_dense_array_ce0 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_dense_array_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( icmp_ln33_1_reg_353 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_dense_weights_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln35_9_fu_265_p1 );

    SC_METHOD(thread_dense_weights_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_270_p2);
    sensitive << ( select_ln35_1_reg_306 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln35_3_fu_224_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_168_p0);
    sensitive << ( w_sum_0_reg_138 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln33_reg_301 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_soft_max_fu_161_ap_start);
    sensitive << ( grp_soft_max_fu_161_ap_start_reg );

    SC_METHOD(thread_icmp_ln29_fu_180_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_120_p4 );

    SC_METHOD(thread_icmp_ln33_1_fu_283_p2);
    sensitive << ( icmp_ln29_reg_292 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( f_reg_337 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_icmp_ln33_fu_198_p2);
    sensitive << ( icmp_ln29_fu_180_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_154_p4 );

    SC_METHOD(thread_prediction_Addr_A);
    sensitive << ( grp_soft_max_fu_161_prediction_Addr_A );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_prediction_Din_A);
    sensitive << ( grp_soft_max_fu_161_prediction_Din_A );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_prediction_EN_A);
    sensitive << ( grp_soft_max_fu_161_prediction_EN_A );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_prediction_WEN_A);
    sensitive << ( grp_soft_max_fu_161_prediction_WEN_A );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_select_ln35_1_fu_204_p3);
    sensitive << ( icmp_ln33_fu_198_p2 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_154_p4 );

    SC_METHOD(thread_select_ln35_2_fu_212_p3);
    sensitive << ( icmp_ln33_fu_198_p2 );
    sensitive << ( ap_phi_mux_d_0_phi_fu_131_p4 );
    sensitive << ( d_fu_192_p2 );

    SC_METHOD(thread_tmp_25_fu_229_p3);
    sensitive << ( select_ln35_1_fu_204_p3 );

    SC_METHOD(thread_tmp_26_fu_241_p3);
    sensitive << ( select_ln35_1_fu_204_p3 );

    SC_METHOD(thread_zext_ln34_fu_220_p1);
    sensitive << ( select_ln35_2_fu_212_p3 );

    SC_METHOD(thread_zext_ln35_3_fu_224_p1);
    sensitive << ( select_ln35_1_fu_204_p3 );

    SC_METHOD(thread_zext_ln35_7_fu_237_p1);
    sensitive << ( tmp_25_fu_229_p3 );

    SC_METHOD(thread_zext_ln35_8_fu_249_p1);
    sensitive << ( tmp_26_fu_241_p3 );

    SC_METHOD(thread_zext_ln35_9_fu_265_p1);
    sensitive << ( add_ln35_4_fu_259_p2 );

    SC_METHOD(thread_zext_ln35_fu_288_p1);
    sensitive << ( select_ln35_2_reg_311_pp0_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln29_fu_180_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( grp_soft_max_fu_161_ap_done );
    sensitive << ( ap_CS_fsm_state7 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    grp_soft_max_fu_161_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, prediction_Addr_A, "(port)prediction_Addr_A");
    sc_trace(mVcdFile, prediction_EN_A, "(port)prediction_EN_A");
    sc_trace(mVcdFile, prediction_WEN_A, "(port)prediction_WEN_A");
    sc_trace(mVcdFile, prediction_Din_A, "(port)prediction_Din_A");
    sc_trace(mVcdFile, prediction_Dout_A, "(port)prediction_Dout_A");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_q0, "(port)flat_array_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_weights_address0, "dense_weights_address0");
    sc_trace(mVcdFile, dense_weights_ce0, "dense_weights_ce0");
    sc_trace(mVcdFile, dense_weights_q0, "dense_weights_q0");
    sc_trace(mVcdFile, indvar_flatten_reg_116, "indvar_flatten_reg_116");
    sc_trace(mVcdFile, d_0_reg_127, "d_0_reg_127");
    sc_trace(mVcdFile, w_sum_0_reg_138, "w_sum_0_reg_138");
    sc_trace(mVcdFile, f_0_reg_150, "f_0_reg_150");
    sc_trace(mVcdFile, icmp_ln29_fu_180_p2, "icmp_ln29_fu_180_p2");
    sc_trace(mVcdFile, icmp_ln29_reg_292, "icmp_ln29_reg_292");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln29_reg_292_pp0_iter1_reg, "icmp_ln29_reg_292_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln29_fu_186_p2, "add_ln29_fu_186_p2");
    sc_trace(mVcdFile, add_ln29_reg_296, "add_ln29_reg_296");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln33_fu_198_p2, "icmp_ln33_fu_198_p2");
    sc_trace(mVcdFile, icmp_ln33_reg_301, "icmp_ln33_reg_301");
    sc_trace(mVcdFile, select_ln35_1_fu_204_p3, "select_ln35_1_fu_204_p3");
    sc_trace(mVcdFile, select_ln35_1_reg_306, "select_ln35_1_reg_306");
    sc_trace(mVcdFile, select_ln35_2_fu_212_p3, "select_ln35_2_fu_212_p3");
    sc_trace(mVcdFile, select_ln35_2_reg_311, "select_ln35_2_reg_311");
    sc_trace(mVcdFile, select_ln35_2_reg_311_pp0_iter1_reg, "select_ln35_2_reg_311_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter1, "ap_block_state5_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, f_fu_270_p2, "f_fu_270_p2");
    sc_trace(mVcdFile, f_reg_337, "f_reg_337");
    sc_trace(mVcdFile, grp_fu_173_p2, "grp_fu_173_p2");
    sc_trace(mVcdFile, icmp_ln33_1_fu_283_p2, "icmp_ln33_1_fu_283_p2");
    sc_trace(mVcdFile, icmp_ln33_1_reg_353, "icmp_ln33_1_reg_353");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, dense_array_address0, "dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "dense_array_ce0");
    sc_trace(mVcdFile, dense_array_we0, "dense_array_we0");
    sc_trace(mVcdFile, dense_array_q0, "dense_array_q0");
    sc_trace(mVcdFile, grp_soft_max_fu_161_ap_start, "grp_soft_max_fu_161_ap_start");
    sc_trace(mVcdFile, grp_soft_max_fu_161_ap_done, "grp_soft_max_fu_161_ap_done");
    sc_trace(mVcdFile, grp_soft_max_fu_161_ap_idle, "grp_soft_max_fu_161_ap_idle");
    sc_trace(mVcdFile, grp_soft_max_fu_161_ap_ready, "grp_soft_max_fu_161_ap_ready");
    sc_trace(mVcdFile, grp_soft_max_fu_161_dense_array_address0, "grp_soft_max_fu_161_dense_array_address0");
    sc_trace(mVcdFile, grp_soft_max_fu_161_dense_array_ce0, "grp_soft_max_fu_161_dense_array_ce0");
    sc_trace(mVcdFile, grp_soft_max_fu_161_prediction_Addr_A, "grp_soft_max_fu_161_prediction_Addr_A");
    sc_trace(mVcdFile, grp_soft_max_fu_161_prediction_EN_A, "grp_soft_max_fu_161_prediction_EN_A");
    sc_trace(mVcdFile, grp_soft_max_fu_161_prediction_WEN_A, "grp_soft_max_fu_161_prediction_WEN_A");
    sc_trace(mVcdFile, grp_soft_max_fu_161_prediction_Din_A, "grp_soft_max_fu_161_prediction_Din_A");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_120_p4, "ap_phi_mux_indvar_flatten_phi_fu_120_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_d_0_phi_fu_131_p4, "ap_phi_mux_d_0_phi_fu_131_p4");
    sc_trace(mVcdFile, ap_phi_mux_f_0_phi_fu_154_p4, "ap_phi_mux_f_0_phi_fu_154_p4");
    sc_trace(mVcdFile, grp_soft_max_fu_161_ap_start_reg, "grp_soft_max_fu_161_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln35_9_fu_265_p1, "zext_ln35_9_fu_265_p1");
    sc_trace(mVcdFile, zext_ln35_3_fu_224_p1, "zext_ln35_3_fu_224_p1");
    sc_trace(mVcdFile, zext_ln35_fu_288_p1, "zext_ln35_fu_288_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, grp_fu_168_p0, "grp_fu_168_p0");
    sc_trace(mVcdFile, d_fu_192_p2, "d_fu_192_p2");
    sc_trace(mVcdFile, tmp_25_fu_229_p3, "tmp_25_fu_229_p3");
    sc_trace(mVcdFile, tmp_26_fu_241_p3, "tmp_26_fu_241_p3");
    sc_trace(mVcdFile, zext_ln35_8_fu_249_p1, "zext_ln35_8_fu_249_p1");
    sc_trace(mVcdFile, zext_ln35_7_fu_237_p1, "zext_ln35_7_fu_237_p1");
    sc_trace(mVcdFile, add_ln35_fu_253_p2, "add_ln35_fu_253_p2");
    sc_trace(mVcdFile, zext_ln34_fu_220_p1, "zext_ln34_fu_220_p1");
    sc_trace(mVcdFile, add_ln35_4_fu_259_p2, "add_ln35_4_fu_259_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_weights_U;
    delete dense_array_U;
    delete grp_soft_max_fu_161;
    delete cnn_fadd_32ns_32nkbM_U145;
    delete cnn_fmul_32ns_32nlbW_U146;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        d_0_reg_127 = select_ln35_2_reg_311.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        d_0_reg_127 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        f_0_reg_150 = f_reg_337.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_150 = ap_const_lv11_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_soft_max_fu_161_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            grp_soft_max_fu_161_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_soft_max_fu_161_ap_ready.read())) {
            grp_soft_max_fu_161_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_116 = add_ln29_reg_296.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_116 = ap_const_lv14_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        w_sum_0_reg_138 = grp_fu_168_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        w_sum_0_reg_138 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln29_reg_296 = add_ln29_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0))) {
        f_reg_337 = f_fu_270_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln29_reg_292 = icmp_ln29_fu_180_p2.read();
        icmp_ln29_reg_292_pp0_iter1_reg = icmp_ln29_reg_292.read();
        select_ln35_2_reg_311_pp0_iter1_reg = select_ln35_2_reg_311.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0))) {
        icmp_ln33_1_reg_353 = icmp_ln33_1_fu_283_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_180_p2.read(), ap_const_lv1_0))) {
        icmp_ln33_reg_301 = icmp_ln33_fu_198_p2.read();
        select_ln35_1_reg_306 = select_ln35_1_fu_204_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_180_p2.read(), ap_const_lv1_0))) {
        select_ln35_2_reg_311 = select_ln35_2_fu_212_p3.read();
    }
}

void dense::thread_add_ln29_fu_186_p2() {
    add_ln29_fu_186_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_120_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar_flatten_phi_fu_120_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void dense::thread_add_ln35_4_fu_259_p2() {
    add_ln35_4_fu_259_p2 = (!add_ln35_fu_253_p2.read().is_01() || !zext_ln34_fu_220_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(add_ln35_fu_253_p2.read()) + sc_biguint<15>(zext_ln34_fu_220_p1.read()));
}

void dense::thread_add_ln35_fu_253_p2() {
    add_ln35_fu_253_p2 = (!zext_ln35_8_fu_249_p1.read().is_01() || !zext_ln35_7_fu_237_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln35_8_fu_249_p1.read()) + sc_biguint<15>(zext_ln35_7_fu_237_p1.read()));
}

void dense::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state5_pp0_stage1_iter1() {
    ap_block_state5_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln29_fu_180_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void dense::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(grp_soft_max_fu_161_ap_done.read(), ap_const_logic_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dense::thread_ap_phi_mux_d_0_phi_fu_131_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_d_0_phi_fu_131_p4 = select_ln35_2_reg_311.read();
    } else {
        ap_phi_mux_d_0_phi_fu_131_p4 = d_0_reg_127.read();
    }
}

void dense::thread_ap_phi_mux_f_0_phi_fu_154_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_f_0_phi_fu_154_p4 = f_reg_337.read();
    } else {
        ap_phi_mux_f_0_phi_fu_154_p4 = f_0_reg_150.read();
    }
}

void dense::thread_ap_phi_mux_indvar_flatten_phi_fu_120_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_292.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_120_p4 = add_ln29_reg_296.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_120_p4 = indvar_flatten_reg_116.read();
    }
}

void dense::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(grp_soft_max_fu_161_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_192_p2() {
    d_fu_192_p2 = (!ap_phi_mux_d_0_phi_fu_131_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_d_0_phi_fu_131_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_dense_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln35_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dense_array_address0 = grp_soft_max_fu_161_dense_array_address0.read();
    } else {
        dense_array_address0 = "XXXX";
    }
}

void dense::thread_dense_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        dense_array_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dense_array_ce0 = grp_soft_max_fu_161_dense_array_ce0.read();
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_1_reg_353.read(), ap_const_lv1_1))) {
        dense_array_we0 = ap_const_logic_1;
    } else {
        dense_array_we0 = ap_const_logic_0;
    }
}

void dense::thread_dense_weights_address0() {
    dense_weights_address0 =  (sc_lv<14>) (zext_ln35_9_fu_265_p1.read());
}

void dense::thread_dense_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_weights_ce0 = ap_const_logic_1;
    } else {
        dense_weights_ce0 = ap_const_logic_0;
    }
}

void dense::thread_f_fu_270_p2() {
    f_fu_270_p2 = (!select_ln35_1_reg_306.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln35_1_reg_306.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void dense::thread_flat_array_address0() {
    flat_array_address0 =  (sc_lv<11>) (zext_ln35_3_fu_224_p1.read());
}

void dense::thread_flat_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_grp_fu_168_p0() {
    grp_fu_168_p0 = (!icmp_ln33_reg_301.read()[0].is_01())? sc_lv<32>(): ((icmp_ln33_reg_301.read()[0].to_bool())? ap_const_lv32_0: w_sum_0_reg_138.read());
}

void dense::thread_grp_soft_max_fu_161_ap_start() {
    grp_soft_max_fu_161_ap_start = grp_soft_max_fu_161_ap_start_reg.read();
}

void dense::thread_icmp_ln29_fu_180_p2() {
    icmp_ln29_fu_180_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_120_p4.read().is_01() || !ap_const_lv14_3E80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_120_p4.read() == ap_const_lv14_3E80);
}

void dense::thread_icmp_ln33_1_fu_283_p2() {
    icmp_ln33_1_fu_283_p2 = (!f_reg_337.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(f_reg_337.read() == ap_const_lv11_640);
}

void dense::thread_icmp_ln33_fu_198_p2() {
    icmp_ln33_fu_198_p2 = (!ap_phi_mux_f_0_phi_fu_154_p4.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_f_0_phi_fu_154_p4.read() == ap_const_lv11_640);
}

void dense::thread_prediction_Addr_A() {
    prediction_Addr_A = grp_soft_max_fu_161_prediction_Addr_A.read();
}

void dense::thread_prediction_Din_A() {
    prediction_Din_A = grp_soft_max_fu_161_prediction_Din_A.read();
}

void dense::thread_prediction_EN_A() {
    prediction_EN_A = grp_soft_max_fu_161_prediction_EN_A.read();
}

void dense::thread_prediction_WEN_A() {
    prediction_WEN_A = grp_soft_max_fu_161_prediction_WEN_A.read();
}

void dense::thread_select_ln35_1_fu_204_p3() {
    select_ln35_1_fu_204_p3 = (!icmp_ln33_fu_198_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln33_fu_198_p2.read()[0].to_bool())? ap_const_lv11_0: ap_phi_mux_f_0_phi_fu_154_p4.read());
}

void dense::thread_select_ln35_2_fu_212_p3() {
    select_ln35_2_fu_212_p3 = (!icmp_ln33_fu_198_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln33_fu_198_p2.read()[0].to_bool())? d_fu_192_p2.read(): ap_phi_mux_d_0_phi_fu_131_p4.read());
}

void dense::thread_tmp_25_fu_229_p3() {
    tmp_25_fu_229_p3 = esl_concat<11,3>(select_ln35_1_fu_204_p3.read(), ap_const_lv3_0);
}

void dense::thread_tmp_26_fu_241_p3() {
    tmp_26_fu_241_p3 = esl_concat<11,1>(select_ln35_1_fu_204_p3.read(), ap_const_lv1_0);
}

void dense::thread_zext_ln34_fu_220_p1() {
    zext_ln34_fu_220_p1 = esl_zext<15,4>(select_ln35_2_fu_212_p3.read());
}

void dense::thread_zext_ln35_3_fu_224_p1() {
    zext_ln35_3_fu_224_p1 = esl_zext<64,11>(select_ln35_1_fu_204_p3.read());
}

void dense::thread_zext_ln35_7_fu_237_p1() {
    zext_ln35_7_fu_237_p1 = esl_zext<15,14>(tmp_25_fu_229_p3.read());
}

void dense::thread_zext_ln35_8_fu_249_p1() {
    zext_ln35_8_fu_249_p1 = esl_zext<15,12>(tmp_26_fu_241_p3.read());
}

void dense::thread_zext_ln35_9_fu_265_p1() {
    zext_ln35_9_fu_265_p1 = esl_zext<64,15>(add_ln35_4_fu_259_p2.read());
}

void dense::thread_zext_ln35_fu_288_p1() {
    zext_ln35_fu_288_p1 = esl_zext<64,4>(select_ln35_2_reg_311_pp0_iter1_reg.read());
}

void dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_180_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_180_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_soft_max_fu_161_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

