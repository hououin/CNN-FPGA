// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei1iI_H__
#define __conv_2_conv_2_wei1iI_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei1iI_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei1iI_ram) {
        ram[0] = "0b00111101010110001101110110111111";
        ram[1] = "0b00111101000001011011011100110011";
        ram[2] = "0b10111101001010001010010011101101";
        ram[3] = "0b00111101001000001011100111111110";
        ram[4] = "0b00111101101110010001110010001111";
        ram[5] = "0b10111101101101110010001100000010";
        ram[6] = "0b00111101010101000011111001101010";
        ram[7] = "0b10111101111011001110010011000001";
        ram[8] = "0b00111101111001011010100000100000";
        ram[9] = "0b10111101100011000001000011100011";
        ram[10] = "0b00111101100010000011110011101001";
        ram[11] = "0b00111100111101100000111000010101";
        ram[12] = "0b00111101010001011111110000101001";
        ram[13] = "0b10111101100110001110101011000101";
        ram[14] = "0b00111101000001100101000101011111";
        ram[15] = "0b00111101100100001011010001110010";
        ram[16] = "0b10111101000101111010110110101011";
        ram[17] = "0b10111101000111101110010100111101";
        ram[18] = "0b10111110001101111011101001000010";
        ram[19] = "0b10111101011000111000100011000101";
        ram[20] = "0b10111101001100111010101100000100";
        ram[21] = "0b10111101000111110101000000111011";
        ram[22] = "0b10111110000100100100100101000010";
        ram[23] = "0b00111100111011101111010001000010";
        ram[24] = "0b00111100010000010101101001101011";
        ram[25] = "0b10111101000001111100110100010010";
        ram[26] = "0b10111100100010101000001011010101";
        ram[27] = "0b10111110011001000011110011001010";
        ram[28] = "0b10111101000100010001001111110000";
        ram[29] = "0b00111101110011100001011010111001";
        ram[30] = "0b00111101111111101110101001101100";
        ram[31] = "0b10111101110000110111110110111101";
        ram[32] = "0b00111101001001000011001101001010";
        ram[33] = "0b10111101001000100000111011001110";
        ram[34] = "0b00111100110010010100110001000110";
        ram[35] = "0b00111100101111000011101111110011";
        ram[36] = "0b10111110001001011111011100010010";
        ram[37] = "0b00111101110001001110010000110001";
        ram[38] = "0b10111101100000100110010001110000";
        ram[39] = "0b00111100001100100100110100010100";
        ram[40] = "0b10111110000111100110101000001101";
        ram[41] = "0b00111101001110100101101101111111";
        ram[42] = "0b10111011010111000000000101001010";
        ram[43] = "0b00111100101101110100010011100111";
        ram[44] = "0b10111101001111110010111011111100";
        ram[45] = "0b00111011000000100111100110000000";
        ram[46] = "0b10111100001001000110110111110110";
        ram[47] = "0b00111100101001111101101011110001";
        ram[48] = "0b00111011111000111000011101001110";
        ram[49] = "0b10111110010111111100000111101100";
        ram[50] = "0b00111101111111010101001010100001";
        ram[51] = "0b00111110000010000111110011100101";
        ram[52] = "0b10111110100011110110001010000101";
        ram[53] = "0b10111110001001111110000101000111";
        ram[54] = "0b10111110000010010110111101010100";
        ram[55] = "0b00111100101001001011010101100011";
        ram[56] = "0b10111101110000111111010001001010";
        ram[57] = "0b10111101100010011101001011111010";
        ram[58] = "0b10111110000010000111100010101100";
        ram[59] = "0b00111110000001101111010010000100";
        ram[60] = "0b10111100110011000101101010111010";
        ram[61] = "0b10111100010100100011001100000111";
        ram[62] = "0b00111101101001100000001000111011";
        ram[63] = "0b10111101000100111100100100010010";
        ram[64] = "0b00111101101000000101100111011111";
        ram[65] = "0b00111100011100101011110000011111";
        ram[66] = "0b10111101101100101010101111101000";
        ram[67] = "0b00111101101100100011111010100001";
        ram[68] = "0b00111101110001011111100100110100";
        ram[69] = "0b00111101110100100011010010011101";
        ram[70] = "0b00111100001001101100011101001101";
        ram[71] = "0b10111101000111000110111110000100";
        ram[72] = "0b00111100110001111111000010001101";
        ram[73] = "0b00111101001000101001100111001100";
        ram[74] = "0b00111101101000000010101000110110";
        ram[75] = "0b00111101001101101100100000110100";
        ram[76] = "0b00111101000011111111111010101010";
        ram[77] = "0b00111100010011111001100000010110";
        ram[78] = "0b00111100111001000001100000011101";
        ram[79] = "0b00111100111100001010110111000010";
        ram[80] = "0b00111101010111010101011011011111";
        ram[81] = "0b00111101000001001011100100100110";
        ram[82] = "0b00111101011011100011100010101111";
        ram[83] = "0b10111101000100101100011100000001";
        ram[84] = "0b10111101011100110111011111011110";
        ram[85] = "0b10111101100101110101001111111011";
        ram[86] = "0b00111101000001001001100000111101";
        ram[87] = "0b10111101101101100001110111110111";
        ram[88] = "0b10111100010111011000100101001101";
        ram[89] = "0b10111101000101100011110101011100";
        ram[90] = "0b00111101101011100101001001001000";
        ram[91] = "0b10111110100110110111101101000011";
        ram[92] = "0b10111100111001000010001110110000";
        ram[93] = "0b10111100100010010011111011001100";
        ram[94] = "0b10111101100011010111110101011100";
        ram[95] = "0b10111011101001000001100000101001";
        ram[96] = "0b00111101100100111101110100000110";
        ram[97] = "0b10111100100110111101111011001010";
        ram[98] = "0b00111101111011101010100111011011";
        ram[99] = "0b10111100110101001010000100000100";
        ram[100] = "0b00111101010111111001100111111001";
        ram[101] = "0b10111110000001110010000011111010";
        ram[102] = "0b00111101001101110100001101000001";
        ram[103] = "0b10111011101111110101111100000001";
        ram[104] = "0b10111101110011100010111101010101";
        ram[105] = "0b00111100111110100101001110011100";
        ram[106] = "0b10111011101100110000001110111111";
        ram[107] = "0b00111100111001110110100100100000";
        ram[108] = "0b00111101001001101110101110111101";
        ram[109] = "0b00111100101000111000010111100110";
        ram[110] = "0b00111101111110111101110110111011";
        ram[111] = "0b00111101111001001010001011010010";
        ram[112] = "0b00111110001000011001100001011111";
        ram[113] = "0b10111100110000010000101110101100";
        ram[114] = "0b10111011011001010110101101110010";
        ram[115] = "0b00111101000011011100001001011000";
        ram[116] = "0b10111101010111101110100111111011";
        ram[117] = "0b10111101101110000010000111000001";
        ram[118] = "0b10111101000011011000011101001010";
        ram[119] = "0b10111101111001010001001010010000";
        ram[120] = "0b00111100000110000110111010100111";
        ram[121] = "0b10111101100010010100010100010101";
        ram[122] = "0b10111101111011000011000100100100";
        ram[123] = "0b10111101000001100000001101000101";
        ram[124] = "0b10111011110011001010111110101111";
        ram[125] = "0b10111001101111010010100101010010";
        ram[126] = "0b10111101001111101000111110111110";
        ram[127] = "0b00111100010101010100011101010011";
        ram[128] = "0b10111100010011110000000000011111";
        ram[129] = "0b00111100000110111001101011011101";
        ram[130] = "0b00111101100000110101010010001000";
        ram[131] = "0b10111101100111111010110010110110";
        ram[132] = "0b10111101010100100010000011100010";
        ram[133] = "0b00111100110110011011010000100011";
        ram[134] = "0b00111101111101111001000101111110";
        ram[135] = "0b10111011111110011000011101110011";
        ram[136] = "0b00111101101000101100001101010000";
        ram[137] = "0b10111101010111100001000101111110";
        ram[138] = "0b10111110100000111101011100111011";
        ram[139] = "0b10111110001011111101010111001010";
        ram[140] = "0b00111101111011010011110100101110";
        ram[141] = "0b00111101111010000001010001101101";
        ram[142] = "0b00111110000000110111011010111101";
        ram[143] = "0b00111101000010011010100100100011";
        ram[144] = "0b00111101110010111000011110000011";
        ram[145] = "0b10111101111100100100010111011000";
        ram[146] = "0b00111101110001000011111001011010";
        ram[147] = "0b10111101001101010101110111110110";
        ram[148] = "0b10111101110111101100110101101001";
        ram[149] = "0b10111101100011111001111101110000";
        ram[150] = "0b00111101100101000011110011110110";
        ram[151] = "0b10111101100000000000111010101101";
        ram[152] = "0b00111101011111110000100001000101";
        ram[153] = "0b00111101110001011110100100011000";
        ram[154] = "0b10111101101000101010100110011101";
        ram[155] = "0b00111101100011000100011010100111";
        ram[156] = "0b00111011101010100110011001100011";
        ram[157] = "0b10111101110000011111011001111111";
        ram[158] = "0b10111101010100011111111110000001";
        ram[159] = "0b00111101011100111011110010011001";
        ram[160] = "0b10111110000010010111000000001111";
        ram[161] = "0b00111101110011100100101110010010";
        ram[162] = "0b10111101101001000111101110001101";
        ram[163] = "0b10111101110100100110001010001111";
        ram[164] = "0b00111101111000101101101001100100";
        ram[165] = "0b10111110000001000100111101000011";
        ram[166] = "0b00111001100111101111111111100010";
        ram[167] = "0b00111100110100100100001011100010";
        ram[168] = "0b10111100111001011110001101100100";
        ram[169] = "0b00111101000000111010101100111110";
        ram[170] = "0b00111101001001111000010101101110";
        ram[171] = "0b00111101101011000001011101011110";
        ram[172] = "0b10111101100101101100001000000011";
        ram[173] = "0b10111101111011001100001111010010";
        ram[174] = "0b10111101001101110000001011011100";
        ram[175] = "0b00111011101111111011011101110010";
        ram[176] = "0b10111101101000111110100111110100";
        ram[177] = "0b10111101100110111010011101000110";
        ram[178] = "0b00111101000111010101100111000010";
        ram[179] = "0b10111101101010010110001010110101";
        ram[180] = "0b00111101101010000011100111011100";
        ram[181] = "0b00111101111011100010010001110101";
        ram[182] = "0b10111101111101001111000010011100";
        ram[183] = "0b00111110000011110101100011001010";
        ram[184] = "0b00111101000111100010111000011100";
        ram[185] = "0b10111101100010100000011010011000";
        ram[186] = "0b10111100111100101001010010110011";
        ram[187] = "0b10111101100101000110110111110111";
        ram[188] = "0b00111101110010000111111110110000";
        ram[189] = "0b00111101101011001101101100001110";
        ram[190] = "0b00111100000101000010111110011000";
        ram[191] = "0b10111101010101110011100010101100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei1iI) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei1iI_ram* meminst;


SC_CTOR(conv_2_conv_2_wei1iI) {
meminst = new conv_2_conv_2_wei1iI_ram("conv_2_conv_2_wei1iI_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei1iI() {
    delete meminst;
}


};//endmodule
#endif
