// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibCo_H__
#define __conv_2_conv_2_weibCo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibCo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibCo_ram) {
        ram[0] = "0b00111101101110011010011100110100";
        ram[1] = "0b10111101100101111000101010100101";
        ram[2] = "0b10111100101110110000100011111011";
        ram[3] = "0b10111101001000101101101110100101";
        ram[4] = "0b10111110000100001110001000011101";
        ram[5] = "0b10111101100111101000010110101010";
        ram[6] = "0b10111101101110010010101011001101";
        ram[7] = "0b00111100100000101010001101110001";
        ram[8] = "0b10111110010111110100001010011011";
        ram[9] = "0b00111101000001100010000001111100";
        ram[10] = "0b00111101101110100001101111110110";
        ram[11] = "0b10111101011001000000111001011001";
        ram[12] = "0b10111110001000011101000000110101";
        ram[13] = "0b10111100000000110001011111000001";
        ram[14] = "0b10111101011100101011000110000000";
        ram[15] = "0b10111101100000010011110010000100";
        ram[16] = "0b10111110100001100000111111101111";
        ram[17] = "0b10111101100111000000111111111111";
        ram[18] = "0b10111110010110001110100010101110";
        ram[19] = "0b10111110000101000110001011110001";
        ram[20] = "0b00111110100011000001011000101011";
        ram[21] = "0b00111101011100101101101000110100";
        ram[22] = "0b10111110001110001001001001011110";
        ram[23] = "0b10111110111011011000111011001101";
        ram[24] = "0b10111110010010001011101100001001";
        ram[25] = "0b10111101000110011110110110111001";
        ram[26] = "0b10111100001010101111011000010001";
        ram[27] = "0b00111101001101000111111011000101";
        ram[28] = "0b00111101110110001011110000001101";
        ram[29] = "0b00111101111110011101101101101111";
        ram[30] = "0b10111110010101000111011001110011";
        ram[31] = "0b00111100111011011001111011011000";
        ram[32] = "0b10111100000100110101001000001100";
        ram[33] = "0b00111110011010101010001110110111";
        ram[34] = "0b00111101111001101101110001110101";
        ram[35] = "0b00111101011000011000000101000110";
        ram[36] = "0b00111101011001111101010010000011";
        ram[37] = "0b00111101010111110010100001100000";
        ram[38] = "0b10111110000111001111110000111000";
        ram[39] = "0b10111110101000011100111001111101";
        ram[40] = "0b10111110001110100001101100101100";
        ram[41] = "0b00111100101110100001101100000011";
        ram[42] = "0b10111110101001010101101110101110";
        ram[43] = "0b10111100001011001010101001000101";
        ram[44] = "0b10111110010010001000100100001010";
        ram[45] = "0b10111100110000111100111111000111";
        ram[46] = "0b10111110000010101001100011110100";
        ram[47] = "0b10111100101110000011111010110110";
        ram[48] = "0b00111101100110011100100111011010";
        ram[49] = "0b00111110001100000010010001010000";
        ram[50] = "0b10111110011110101101011110110100";
        ram[51] = "0b10111101100110011000101000100010";
        ram[52] = "0b00111101100011010000101011011111";
        ram[53] = "0b10111101100001111010000001010100";
        ram[54] = "0b00111100110011101111100000000000";
        ram[55] = "0b10111101101110101100000111111010";
        ram[56] = "0b00111101010111111001100011100100";
        ram[57] = "0b10111110011011100010110011110111";
        ram[58] = "0b10111101111001110011011010010001";
        ram[59] = "0b10111101111111010000011011000111";
        ram[60] = "0b00111101100001010100000011011101";
        ram[61] = "0b10111100010111001010010011000001";
        ram[62] = "0b10111110000011011011100010110101";
        ram[63] = "0b10111110011000111111000011011111";
        ram[64] = "0b10111101000100100010001111010011";
        ram[65] = "0b10111101010001010111000011010100";
        ram[66] = "0b10111101011110010000001010011000";
        ram[67] = "0b10111100100000101000101111011111";
        ram[68] = "0b10111110100011111011001100111101";
        ram[69] = "0b00111101010010110101011100110101";
        ram[70] = "0b10111110111100010101111011110110";
        ram[71] = "0b10111110010011101001000001010011";
        ram[72] = "0b10111110100011010001110001101001";
        ram[73] = "0b10111101010011101001000001011001";
        ram[74] = "0b00111101101100010010000101000110";
        ram[75] = "0b00111100111010011000111100101101";
        ram[76] = "0b10111110110001101010100000000000";
        ram[77] = "0b10111101110101101110111000111110";
        ram[78] = "0b10111110100101110110100101001010";
        ram[79] = "0b10111110011111110100111010111100";
        ram[80] = "0b10111110000100111101100011100110";
        ram[81] = "0b10111010101011011100000011101111";
        ram[82] = "0b00111101111100001010001101001000";
        ram[83] = "0b10111110101011001110110011001010";
        ram[84] = "0b00111101000000111010100001100000";
        ram[85] = "0b10111101100010000110011100101011";
        ram[86] = "0b00111110001110100100100011011100";
        ram[87] = "0b10111111000010000111011110111010";
        ram[88] = "0b10111110100111010110101101111101";
        ram[89] = "0b10111100101110111100000001100010";
        ram[90] = "0b00111101011011001111100010000101";
        ram[91] = "0b10111100000111010010011010111111";
        ram[92] = "0b10111110100011000011000000011110";
        ram[93] = "0b00111101110101100001111111101010";
        ram[94] = "0b00111101010111011010000110111001";
        ram[95] = "0b10111110001100101011110110010000";
        ram[96] = "0b00111101110101100001101010111111";
        ram[97] = "0b00111101000011001011011011000010";
        ram[98] = "0b00111101100101001001011000010000";
        ram[99] = "0b10111101011100111111000101001111";
        ram[100] = "0b00111100100011011111010100111011";
        ram[101] = "0b10111101101111101010100100011000";
        ram[102] = "0b10111110110001110010101100100010";
        ram[103] = "0b10111100100100110110000110010101";
        ram[104] = "0b10111110001000101111011100100000";
        ram[105] = "0b10111101010100011100111000000011";
        ram[106] = "0b10111110100101011000000100101001";
        ram[107] = "0b00111100010000110011101010000100";
        ram[108] = "0b10111110100010100101011101011011";
        ram[109] = "0b00111110011101110100110110101000";
        ram[110] = "0b10111110111001100101011000010000";
        ram[111] = "0b10111110101000110101111011110101";
        ram[112] = "0b10111110110100101101110100011011";
        ram[113] = "0b00111101000001000111011101101001";
        ram[114] = "0b10111110011001100000000001010111";
        ram[115] = "0b10111100000111011000000100010011";
        ram[116] = "0b10111110001010101010111101011000";
        ram[117] = "0b00111110000101101010001101110010";
        ram[118] = "0b10111110000010010110101110110001";
        ram[119] = "0b10111101011011110110001001100110";
        ram[120] = "0b00111101110110100011101000110100";
        ram[121] = "0b10111110100111101011111100010001";
        ram[122] = "0b10111101101100100101000001000000";
        ram[123] = "0b10111101100011111001100010010100";
        ram[124] = "0b00111101110111011010000000011011";
        ram[125] = "0b10111101000111001001111110101001";
        ram[126] = "0b00111110000011000110010001010111";
        ram[127] = "0b00111110000101111100101011100010";
        ram[128] = "0b00111110010100100110000001011001";
        ram[129] = "0b00111110000101111101111000111111";
        ram[130] = "0b10111101111010101100010111100110";
        ram[131] = "0b00111100001001101010110001101101";
        ram[132] = "0b10111110101010011111101101001110";
        ram[133] = "0b00111110011001111011000110011010";
        ram[134] = "0b10111110011110100001000011110110";
        ram[135] = "0b00111110001111101101011010010101";
        ram[136] = "0b00111101001001100011111100011110";
        ram[137] = "0b00111110000001010111011100110000";
        ram[138] = "0b10111101110100000111100111001110";
        ram[139] = "0b00111101110101000100010001110100";
        ram[140] = "0b10111110100000001010101110011100";
        ram[141] = "0b10111110000111111011100111110010";
        ram[142] = "0b10111100110011010110101000101011";
        ram[143] = "0b00111010111101001111001001001000";
        ram[144] = "0b10111101001101011110000010001010";
        ram[145] = "0b00111100101110100101101010011000";
        ram[146] = "0b10111100100110110011111101110111";
        ram[147] = "0b10111110100111000101010010111001";
        ram[148] = "0b10111110000101000111100101001111";
        ram[149] = "0b10111101010100001100110110001000";
        ram[150] = "0b10111101001001110000001100010111";
        ram[151] = "0b10111110100110000100100001101100";
        ram[152] = "0b10111110110000011011111001010001";
        ram[153] = "0b10111110000110011100111100110001";
        ram[154] = "0b00111110001101111111000011010101";
        ram[155] = "0b00111101001010100001000011110110";
        ram[156] = "0b10111110100001001001000010001101";
        ram[157] = "0b00111101010001110101111000101000";
        ram[158] = "0b00111110100101001011001001101010";
        ram[159] = "0b00111100000000100100001101100111";
        ram[160] = "0b00111110101001011101111100000111";
        ram[161] = "0b10111101111101110101111001111100";
        ram[162] = "0b00111110001000100101010111100100";
        ram[163] = "0b00111101100000011111111101010000";
        ram[164] = "0b10111110110100010101111001001100";
        ram[165] = "0b10111110010100000001100000111101";
        ram[166] = "0b10111110111000100100100100011011";
        ram[167] = "0b10111101010101101000110011000010";
        ram[168] = "0b10111100000000110010111101110101";
        ram[169] = "0b10111110001010010011100111001111";
        ram[170] = "0b10111110011001110110011111110100";
        ram[171] = "0b10111110000111011101010100011010";
        ram[172] = "0b00111101101010001111110111011000";
        ram[173] = "0b00111101100011111100110100011111";
        ram[174] = "0b10111110001101110100001000110100";
        ram[175] = "0b10111101100100101101110101111010";
        ram[176] = "0b10111110000001001101001101111110";
        ram[177] = "0b00111100110101111111111010000111";
        ram[178] = "0b10111110001000110111101000110111";
        ram[179] = "0b10111100100010111110110101000000";
        ram[180] = "0b10111101001101011111101110100001";
        ram[181] = "0b00111101101011011100100001010001";
        ram[182] = "0b10111110001101101011000101110001";
        ram[183] = "0b10111101111111111010110001000111";
        ram[184] = "0b10111101101101001000010100111101";
        ram[185] = "0b10111110101001010000110111100101";
        ram[186] = "0b10111110001011100101111110110001";
        ram[187] = "0b10111101001000000001011010100100";
        ram[188] = "0b10111110001010011010111100011111";
        ram[189] = "0b10111110011000011101011000101111";
        ram[190] = "0b00111101101111110011010010101011";
        ram[191] = "0b00111101100111001010000011000111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibCo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibCo_ram* meminst;


SC_CTOR(conv_2_conv_2_weibCo) {
meminst = new conv_2_conv_2_weibCo_ram("conv_2_conv_2_weibCo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibCo() {
    delete meminst;
}


};//endmodule
#endif
