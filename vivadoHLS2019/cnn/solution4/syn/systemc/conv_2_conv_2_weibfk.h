// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibfk_H__
#define __conv_2_conv_2_weibfk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibfk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibfk_ram) {
        ram[0] = "0b10111110010000101110000111011111";
        ram[1] = "0b00111101101001100101010011111011";
        ram[2] = "0b00111101100010010111000110110011";
        ram[3] = "0b10111110000111000011001010000001";
        ram[4] = "0b00111101100010100011001010011000";
        ram[5] = "0b10111101100111000111110001101111";
        ram[6] = "0b10111110000001110010101010111101";
        ram[7] = "0b00111101100010011000010011011101";
        ram[8] = "0b10111101001010110110101000111010";
        ram[9] = "0b10111011001101101101010011100011";
        ram[10] = "0b10111101111010101100011111010100";
        ram[11] = "0b00111101100110010101100001000101";
        ram[12] = "0b00111100100010101010000110011100";
        ram[13] = "0b10111110000111111100110011110001";
        ram[14] = "0b10111110100010000001000100011110";
        ram[15] = "0b10111110000000001100000101010000";
        ram[16] = "0b00111101100001010001011011111000";
        ram[17] = "0b10111110001011110000100011010110";
        ram[18] = "0b00111101100111001010111000011001";
        ram[19] = "0b10111110001010001001110101110010";
        ram[20] = "0b00111110001010111000111110101001";
        ram[21] = "0b10111110100111111010011011000010";
        ram[22] = "0b10111110101100111001001010101010";
        ram[23] = "0b00111101101110011000101010101100";
        ram[24] = "0b10111110100111001000010110110100";
        ram[25] = "0b10111101110100011010001011111001";
        ram[26] = "0b10111101111110100101110110111001";
        ram[27] = "0b10111101100111010011010010110010";
        ram[28] = "0b10111110010010111011011011100001";
        ram[29] = "0b10111110000100110010100111011100";
        ram[30] = "0b00111110100011000111010101011101";
        ram[31] = "0b10111110000111100110110011011001";
        ram[32] = "0b10111110000101110100111000010000";
        ram[33] = "0b00111101110010010001100111010000";
        ram[34] = "0b10111101000101000011011000000000";
        ram[35] = "0b00111100110111110100110010000010";
        ram[36] = "0b00111100000011010100100000101111";
        ram[37] = "0b10111010001110001100101000000000";
        ram[38] = "0b00111110001100010111000110111010";
        ram[39] = "0b00111100001010100000011100111011";
        ram[40] = "0b10111110100011111001111000110001";
        ram[41] = "0b10111110010000011000100000111110";
        ram[42] = "0b10111110001000110101010111001000";
        ram[43] = "0b10111101110100011000110010101001";
        ram[44] = "0b00111110000111101000011010110111";
        ram[45] = "0b10111110011001010011100111111110";
        ram[46] = "0b00111101010111011101110000010100";
        ram[47] = "0b10111101101001000110001110100011";
        ram[48] = "0b00111101101111000100000100001001";
        ram[49] = "0b10111101110010110110001011101000";
        ram[50] = "0b10111110101001011110110000001000";
        ram[51] = "0b00111101000000110001110000110101";
        ram[52] = "0b00111101010110100111101001110111";
        ram[53] = "0b10111110010101101000000111101011";
        ram[54] = "0b10111110000110101001000011100111";
        ram[55] = "0b00111101110001011001100100110000";
        ram[56] = "0b10111101010111110010100100000100";
        ram[57] = "0b00111100011000110110010100110001";
        ram[58] = "0b10111110001111001000100101111001";
        ram[59] = "0b00111101101110001101110001110110";
        ram[60] = "0b10111110000100110111000100001100";
        ram[61] = "0b10111101100011111001110111110000";
        ram[62] = "0b00111110001101110000000010001110";
        ram[63] = "0b00111101110001001011100001001101";
        ram[64] = "0b10111101011100101110000100010111";
        ram[65] = "0b10111101110000101100001100011111";
        ram[66] = "0b10111110010111000010000011101111";
        ram[67] = "0b00111101010101110110001001111101";
        ram[68] = "0b00111100100110101001100001101110";
        ram[69] = "0b10111010111011101001111001100100";
        ram[70] = "0b00111101000110010110001010110111";
        ram[71] = "0b10111101000001110000010100010011";
        ram[72] = "0b10111110011100000111101010000111";
        ram[73] = "0b00111101111001000100110011111110";
        ram[74] = "0b00111101100100111100001100011011";
        ram[75] = "0b10111100111001001101010111000001";
        ram[76] = "0b10111101010100110110010001101101";
        ram[77] = "0b10111110100001010010111001100111";
        ram[78] = "0b10111101110100110011110101001011";
        ram[79] = "0b10111100110000011010010011010111";
        ram[80] = "0b10111101101011001011000011100011";
        ram[81] = "0b00111101100100111111110101001110";
        ram[82] = "0b10111110010100100111000000101111";
        ram[83] = "0b00111110000110001110111101101110";
        ram[84] = "0b00111110011100110111010011110101";
        ram[85] = "0b10111110001011000000111101011110";
        ram[86] = "0b10111110101111100111100010010011";
        ram[87] = "0b00111101100110001010110101011101";
        ram[88] = "0b10111101110010101111100001000101";
        ram[89] = "0b10111100101101101101001110101111";
        ram[90] = "0b10111100101110001100011010001101";
        ram[91] = "0b10111110010000011001011111011000";
        ram[92] = "0b10111110000101100111001101001110";
        ram[93] = "0b10111110000011001101101010111101";
        ram[94] = "0b00111110001101000001100001011001";
        ram[95] = "0b00111110011001111111000110000001";
        ram[96] = "0b00111101011010010100001110011010";
        ram[97] = "0b00111110000101001111101100111001";
        ram[98] = "0b00111101111001101110111000101001";
        ram[99] = "0b00111101100001000010110010101100";
        ram[100] = "0b10111100100011110001001101011101";
        ram[101] = "0b00111101010101101101100100111100";
        ram[102] = "0b00111101000001111100000000011100";
        ram[103] = "0b10111110100001010010010011100100";
        ram[104] = "0b10111110000010011100111110110101";
        ram[105] = "0b00111100110100101001100001001001";
        ram[106] = "0b10111101110001011000111110101010";
        ram[107] = "0b00111110000011110110000110000010";
        ram[108] = "0b00111110011001010110101110001101";
        ram[109] = "0b00111110010100110101100101010100";
        ram[110] = "0b00111110011001000110100000011100";
        ram[111] = "0b00111101111100000111000111110111";
        ram[112] = "0b00111110100010001011110010111011";
        ram[113] = "0b10111110010100000111010110111001";
        ram[114] = "0b10111101110011000101001010110100";
        ram[115] = "0b10111100001000010100101101011000";
        ram[116] = "0b10111101001011110011010100100100";
        ram[117] = "0b10111101100010111111110111110000";
        ram[118] = "0b10111101101010010110111010111010";
        ram[119] = "0b00111110000101011000111000100000";
        ram[120] = "0b00111101011001010010010110100101";
        ram[121] = "0b00111110001001100110110010000110";
        ram[122] = "0b10111101001000010101101111011101";
        ram[123] = "0b10111101011011101001101110000011";
        ram[124] = "0b10111110100101111000100111000101";
        ram[125] = "0b00111100000011111000111010111101";
        ram[126] = "0b10111011101101010001110111111000";
        ram[127] = "0b00111101100011101001111010110101";
        ram[128] = "0b00111110010011001001101000100111";
        ram[129] = "0b10111110000111001011011000110001";
        ram[130] = "0b10111110100010110010011000010111";
        ram[131] = "0b00111110000100100000111111010011";
        ram[132] = "0b10111101101000010111100111010001";
        ram[133] = "0b00111110011100110110001100111000";
        ram[134] = "0b00111110010001100110110110001000";
        ram[135] = "0b10111101110101110001110101101000";
        ram[136] = "0b00111110001111110000010011010100";
        ram[137] = "0b00111101001100001010000011101011";
        ram[138] = "0b00111010101100101011010000000100";
        ram[139] = "0b10111101001110010110110100010101";
        ram[140] = "0b00111101110101011001101111100100";
        ram[141] = "0b10111110010100010011101111011000";
        ram[142] = "0b00111101001011010000101110100000";
        ram[143] = "0b00111101101000011101111111011111";
        ram[144] = "0b00111110001101110001001001011000";
        ram[145] = "0b00111110000101110011100010010111";
        ram[146] = "0b00111101001111010110011011001100";
        ram[147] = "0b00111100110000101111011010101000";
        ram[148] = "0b10111110111101010101000100110010";
        ram[149] = "0b10111110111100110011101011101010";
        ram[150] = "0b10111110011100001100101110111001";
        ram[151] = "0b00111101110100011101010001111100";
        ram[152] = "0b00111100001011001001011101011011";
        ram[153] = "0b00111110100000110100011011110001";
        ram[154] = "0b00111110011011000101000001111010";
        ram[155] = "0b00111100011000101110011010110000";
        ram[156] = "0b00111101101110100001000010110011";
        ram[157] = "0b10111110000001110110110011111001";
        ram[158] = "0b10111110001111100000001001001110";
        ram[159] = "0b00111101110110001101110111100110";
        ram[160] = "0b00111110011010101111011000110000";
        ram[161] = "0b00111000111001010011111100000010";
        ram[162] = "0b00111101111101000111110010101110";
        ram[163] = "0b10111110000110100110011100100100";
        ram[164] = "0b10111100110000000100100110010100";
        ram[165] = "0b10111110101110011100001011011011";
        ram[166] = "0b10111101010111101101011111100110";
        ram[167] = "0b00111101111111011010010110010100";
        ram[168] = "0b10111110110010101111100010001011";
        ram[169] = "0b00111110010011010000000110001000";
        ram[170] = "0b10111100110001101110011010100110";
        ram[171] = "0b00111110001111110010001011000111";
        ram[172] = "0b10111110100110001011101110100011";
        ram[173] = "0b00111110011001011101111011101001";
        ram[174] = "0b00111101100010010011111110000111";
        ram[175] = "0b00111101111000100111011100100000";
        ram[176] = "0b10111101001101110001001101101001";
        ram[177] = "0b00111101101000111111101010101011";
        ram[178] = "0b00111101100010100000000100101000";
        ram[179] = "0b10111110010110010110000100000010";
        ram[180] = "0b10111100110101001000110111001100";
        ram[181] = "0b10111110000001111101101000111011";
        ram[182] = "0b10111110011110101001010001101100";
        ram[183] = "0b10111101000011010000010100100010";
        ram[184] = "0b00111110010011111100000001011110";
        ram[185] = "0b10111101110001000110000100001011";
        ram[186] = "0b10111100100010100111000000010010";
        ram[187] = "0b00111100101010000001111101011000";
        ram[188] = "0b10111100000011011110100111001110";
        ram[189] = "0b00111110000001011101110001100101";
        ram[190] = "0b10111100101111001100101010001010";
        ram[191] = "0b00111100101000011111011000111000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibfk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibfk_ram* meminst;


SC_CTOR(conv_2_conv_2_weibfk) {
meminst = new conv_2_conv_2_weibfk_ram("conv_2_conv_2_weibfk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibfk() {
    delete meminst;
}


};//endmodule
#endif
