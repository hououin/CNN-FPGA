// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibHp_H__
#define __conv_2_conv_2_weibHp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibHp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibHp_ram) {
        ram[0] = "0b00111101101100000011010001110010";
        ram[1] = "0b00111100101111100000111100010000";
        ram[2] = "0b10111110001100100001111100111110";
        ram[3] = "0b10111101010010011000001101110100";
        ram[4] = "0b00111101111101110110000000001101";
        ram[5] = "0b10111101110111001101000010010000";
        ram[6] = "0b10111110000001111111111111001110";
        ram[7] = "0b00111110011000100011111110011110";
        ram[8] = "0b10111110000000101001100000111001";
        ram[9] = "0b00111100100101110010000011101111";
        ram[10] = "0b10111110000101101110011100011000";
        ram[11] = "0b00111100000101101110110100000000";
        ram[12] = "0b10111101111001000101001110000101";
        ram[13] = "0b10111101110110111000111111111011";
        ram[14] = "0b10111100010011000001011101011000";
        ram[15] = "0b10111101010110111010111001100000";
        ram[16] = "0b10111011001111110111000000101001";
        ram[17] = "0b10111110000010001100010000101001";
        ram[18] = "0b10111101111010101011110010110110";
        ram[19] = "0b00111110000010111011010101100010";
        ram[20] = "0b10111110111010101010000100111010";
        ram[21] = "0b10111101110010110110101111110010";
        ram[22] = "0b10111110001000110001101110001011";
        ram[23] = "0b10111110100101000000110101101110";
        ram[24] = "0b10111101110001110100110011110110";
        ram[25] = "0b10111110001101110101001001101000";
        ram[26] = "0b10111101000000111001010011101111";
        ram[27] = "0b10111101000001100100011001011001";
        ram[28] = "0b10111011001111011011000101111011";
        ram[29] = "0b00111110011111001100100010000001";
        ram[30] = "0b00111101101110010101011110111001";
        ram[31] = "0b00111110000110010000010101110011";
        ram[32] = "0b10111101010110110101101001101100";
        ram[33] = "0b10111110100100000000100001001001";
        ram[34] = "0b10111110000011010000010110110101";
        ram[35] = "0b00111101100110000110110111101000";
        ram[36] = "0b10111110010101101100100010000011";
        ram[37] = "0b00111101000010100011000100010101";
        ram[38] = "0b00111110010101101011110100011101";
        ram[39] = "0b00111110101000001001000000110011";
        ram[40] = "0b10111110101101110001010110111010";
        ram[41] = "0b10111110000100001010111101011100";
        ram[42] = "0b10111101101001111101011011000101";
        ram[43] = "0b10111110000001010000011110011100";
        ram[44] = "0b00111110010010001001101010111100";
        ram[45] = "0b10111110110101000010010010111101";
        ram[46] = "0b10111110100000001100001001100010";
        ram[47] = "0b10111100101010001111001101010001";
        ram[48] = "0b00111110001101111010010111010010";
        ram[49] = "0b10111100101110001101011101001111";
        ram[50] = "0b10111110010101010101101001100110";
        ram[51] = "0b00111110010001011000110111100010";
        ram[52] = "0b00111101001101001000101100100001";
        ram[53] = "0b10111110111010000110111011001100";
        ram[54] = "0b00111101110000011001011010100010";
        ram[55] = "0b10111110000001010111111100000101";
        ram[56] = "0b10111101101001110111111001110110";
        ram[57] = "0b00111110000011000010001010001001";
        ram[58] = "0b10111110001100101100100000111000";
        ram[59] = "0b00111110000011010100011010010111";
        ram[60] = "0b10111101101010101001000111011010";
        ram[61] = "0b00111101100111111010011011110011";
        ram[62] = "0b00111101110110010101100111110100";
        ram[63] = "0b00111110100010001001101101010011";
        ram[64] = "0b10111101111101011001010111011011";
        ram[65] = "0b00111101111101000000000011100011";
        ram[66] = "0b00111100111001001001000001111010";
        ram[67] = "0b00111101111010000010101001011000";
        ram[68] = "0b00111101111101011000101110101010";
        ram[69] = "0b10111110100000011101011111001001";
        ram[70] = "0b00111110100000111010111000011001";
        ram[71] = "0b10111110000001011000101110101001";
        ram[72] = "0b10111100100111110000011100101010";
        ram[73] = "0b00111101000000011010011111001101";
        ram[74] = "0b00111101001001100000010111101001";
        ram[75] = "0b10111110101111011110111011010010";
        ram[76] = "0b00111110000100001010111100000100";
        ram[77] = "0b10111100010100110101001111000110";
        ram[78] = "0b00111101110000001010100111000110";
        ram[79] = "0b10111100100010000111001101000000";
        ram[80] = "0b00111100100101001110110100011010";
        ram[81] = "0b10111101100101100111001011011101";
        ram[82] = "0b10111100010001011000110111100000";
        ram[83] = "0b10111101101010110011010010100001";
        ram[84] = "0b10111110101001110001111010110001";
        ram[85] = "0b00111110000000010110010000100101";
        ram[86] = "0b10111101110110111001111101111110";
        ram[87] = "0b00111101001000001111111101111000";
        ram[88] = "0b10111101001001100100010110111001";
        ram[89] = "0b00111110001000000000100111000100";
        ram[90] = "0b10111101110111010010011010100000";
        ram[91] = "0b10111100110010001011110000101100";
        ram[92] = "0b00111110011110010101101101110001";
        ram[93] = "0b10111101111000010100001001101111";
        ram[94] = "0b10111101101010010100010000111001";
        ram[95] = "0b00111110100001101101001111010101";
        ram[96] = "0b00111011101000101000011100000101";
        ram[97] = "0b00111101100011001110111001010100";
        ram[98] = "0b10111110010111110010000100101100";
        ram[99] = "0b10111110000010001100101100011110";
        ram[100] = "0b00111110100001101011011011010101";
        ram[101] = "0b10111110100111100111100110000111";
        ram[102] = "0b00111110101000110100100110110010";
        ram[103] = "0b00111101111011101111011000000101";
        ram[104] = "0b10111110101000101000001100101110";
        ram[105] = "0b00111101110001000011100011010010";
        ram[106] = "0b00111101110001100110100001011101";
        ram[107] = "0b00111101100110100010111001000010";
        ram[108] = "0b10111100101000010010111110011101";
        ram[109] = "0b10111110011111110110000101101101";
        ram[110] = "0b00111110001111001010011011001010";
        ram[111] = "0b00111110100000110100101000011010";
        ram[112] = "0b00111110001110011000101011001110";
        ram[113] = "0b00111110010111100100100000000011";
        ram[114] = "0b10111101010000001100010100000100";
        ram[115] = "0b00111110001100110111010001010100";
        ram[116] = "0b00111101011101001111011000001110";
        ram[117] = "0b10111110100110111011011100110000";
        ram[118] = "0b10111101101111101000001101111111";
        ram[119] = "0b00111101101110101000101001001010";
        ram[120] = "0b00111101000100110010000010100010";
        ram[121] = "0b10111100100011011001111110011110";
        ram[122] = "0b10111101101110101100000111110010";
        ram[123] = "0b10111110101001110010101000000100";
        ram[124] = "0b00111011010010011100001001110000";
        ram[125] = "0b10111110010000001111000011010001";
        ram[126] = "0b10111101000010111001010010101110";
        ram[127] = "0b10111100000110101100110000110010";
        ram[128] = "0b10111110010110010010111011010101";
        ram[129] = "0b10111100010111100110000011010001";
        ram[130] = "0b10111101100110000000100010110001";
        ram[131] = "0b10111101111110010000100000101010";
        ram[132] = "0b00111110010011100110110101101100";
        ram[133] = "0b10111110101001110110111000110111";
        ram[134] = "0b00111110001010111111101000101000";
        ram[135] = "0b10111110010101010111101110001001";
        ram[136] = "0b10111100111111110011101000000111";
        ram[137] = "0b10111110011110100110010010100001";
        ram[138] = "0b10111110101001000101111011110110";
        ram[139] = "0b10111110001010111101000101110101";
        ram[140] = "0b00111110000010001010111010000100";
        ram[141] = "0b00111110100001101011100111010100";
        ram[142] = "0b10111100111101101000111001111101";
        ram[143] = "0b00111100100110010111000111100000";
        ram[144] = "0b00111101101110000111001011000001";
        ram[145] = "0b10111101101110000001101001010110";
        ram[146] = "0b00111101110101010011010101001111";
        ram[147] = "0b00111110010001100010101010010101";
        ram[148] = "0b00111100000011010011000111000011";
        ram[149] = "0b00111110100000011101111101110110";
        ram[150] = "0b00111110001001000100101011010111";
        ram[151] = "0b00111110010001011001010011001101";
        ram[152] = "0b00111110000110110100000000100100";
        ram[153] = "0b00111101011010001011001001110100";
        ram[154] = "0b10111110011011010000011010111001";
        ram[155] = "0b10111110000111100110100001110000";
        ram[156] = "0b00111101111011001011101100010100";
        ram[157] = "0b10111100110011010111101001000000";
        ram[158] = "0b10111110000110000010101010000110";
        ram[159] = "0b00111101111100001000011110101000";
        ram[160] = "0b10111110001111000011111000001110";
        ram[161] = "0b00111110010001111111001100111000";
        ram[162] = "0b10111110110110110001110000001001";
        ram[163] = "0b10111110011111100011001101100000";
        ram[164] = "0b00111110101111000011111011111111";
        ram[165] = "0b10111110000100111110111110111011";
        ram[166] = "0b00111110010011010010101111000111";
        ram[167] = "0b10111101011110000011010100011010";
        ram[168] = "0b10111101100111000010100100100110";
        ram[169] = "0b00111110100000101010101101110110";
        ram[170] = "0b10111110001010010100110001001100";
        ram[171] = "0b00111100111001001101101101001101";
        ram[172] = "0b10111110001001000110000010010100";
        ram[173] = "0b10111110001011010111100011011000";
        ram[174] = "0b00111101101100100101100110011000";
        ram[175] = "0b00111100110011011011101101000001";
        ram[176] = "0b10111011110101001100000001100001";
        ram[177] = "0b00111101000111101000100100110100";
        ram[178] = "0b00111110001101000100100111110000";
        ram[179] = "0b10111110001010100100010011101101";
        ram[180] = "0b10111110001110010101110001111110";
        ram[181] = "0b00111101011010110111011010001110";
        ram[182] = "0b10111101000000010110100001110101";
        ram[183] = "0b00111110110000000010001100111010";
        ram[184] = "0b10111101010100000011011110110010";
        ram[185] = "0b10111101110101111000011001010000";
        ram[186] = "0b00111101011000010110011000001111";
        ram[187] = "0b10111110111111100110100000100010";
        ram[188] = "0b00111110000011101011000000110001";
        ram[189] = "0b00111110001000000010110111011101";
        ram[190] = "0b10111110011010101010100111000110";
        ram[191] = "0b10111101110001011101010011001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibHp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibHp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibHp) {
meminst = new conv_2_conv_2_weibHp_ram("conv_2_conv_2_weibHp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibHp() {
    delete meminst;
}


};//endmodule
#endif
