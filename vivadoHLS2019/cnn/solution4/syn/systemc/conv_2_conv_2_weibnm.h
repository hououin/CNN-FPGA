// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibnm_H__
#define __conv_2_conv_2_weibnm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibnm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibnm_ram) {
        ram[0] = "0b10111110000010101110101100011000";
        ram[1] = "0b00111101000001111100011011011111";
        ram[2] = "0b10111101110011010111110111011110";
        ram[3] = "0b10111100000101001010001110101101";
        ram[4] = "0b00111110001111101001001001100101";
        ram[5] = "0b10111101011001111011111110111110";
        ram[6] = "0b00111101011100001010100000110111";
        ram[7] = "0b10111101100001101111011101011110";
        ram[8] = "0b10111101100011000010100101011000";
        ram[9] = "0b10111100011101111110100111110001";
        ram[10] = "0b00111011001101011110111000110101";
        ram[11] = "0b10111101011101111100101101100100";
        ram[12] = "0b00111101011001010011110010010110";
        ram[13] = "0b10111101000000000111110111110001";
        ram[14] = "0b00111101101011100001101101001000";
        ram[15] = "0b10111100110100010000110011110111";
        ram[16] = "0b00111100110100100100001100010001";
        ram[17] = "0b10111101110110110011010111111011";
        ram[18] = "0b10111101000110100011100111111111";
        ram[19] = "0b10111110011110100000000010100111";
        ram[20] = "0b00111110000101001010111000110101";
        ram[21] = "0b10111101111010100001101010000100";
        ram[22] = "0b10111110001100010010001100010000";
        ram[23] = "0b10111101011011011101001111011100";
        ram[24] = "0b10111101001010010101011000010100";
        ram[25] = "0b10111100011010010111111010000000";
        ram[26] = "0b00111100110101001111111111001011";
        ram[27] = "0b10111110001010011101110000110111";
        ram[28] = "0b00111100100111111100100111010101";
        ram[29] = "0b10111101010010101110000000101110";
        ram[30] = "0b00111110000010100011110011010100";
        ram[31] = "0b10111110100100111101011101000111";
        ram[32] = "0b00111100111010010111001110110000";
        ram[33] = "0b00111101011000010110111010111001";
        ram[34] = "0b10111101110001110010001000100111";
        ram[35] = "0b00111101010101111000101001111011";
        ram[36] = "0b10111110010000101001101001101101";
        ram[37] = "0b10111011000100010100111011010100";
        ram[38] = "0b10111011111100010011100101100110";
        ram[39] = "0b10111010001101111011100101001101";
        ram[40] = "0b10111110000100110110010011101101";
        ram[41] = "0b10111101100100011001110101111111";
        ram[42] = "0b10111100001010010111001110110001";
        ram[43] = "0b00111101000101100011111111010111";
        ram[44] = "0b00111101111110111110100010100000";
        ram[45] = "0b10111100111101001110010001000111";
        ram[46] = "0b10111011110101101100101101110011";
        ram[47] = "0b00111101101111000100000010101001";
        ram[48] = "0b10111001101001000101011010001000";
        ram[49] = "0b10111110011110010101101111100100";
        ram[50] = "0b00111110000011000110111100010000";
        ram[51] = "0b00111101100011011001011101100001";
        ram[52] = "0b10111110001110111010011100010000";
        ram[53] = "0b10111101100010101110001010011100";
        ram[54] = "0b10111101100100100101011101101000";
        ram[55] = "0b10111011101110100000000001010011";
        ram[56] = "0b10111101101110010111011001001110";
        ram[57] = "0b10111101101001101000101010110111";
        ram[58] = "0b10111110001011000011000111000001";
        ram[59] = "0b00111101010101011101010111011110";
        ram[60] = "0b00111101000101110001101001001000";
        ram[61] = "0b00111101010001011001101101000011";
        ram[62] = "0b10111100000110000111101100111011";
        ram[63] = "0b10111100001000111110011010111011";
        ram[64] = "0b00111101101100100000111001111110";
        ram[65] = "0b00111101011011101001111100100000";
        ram[66] = "0b10111101011110111100000010101111";
        ram[67] = "0b10111100000000010100010011000111";
        ram[68] = "0b00111011110000010101110011110001";
        ram[69] = "0b00111100010110011111000111000100";
        ram[70] = "0b00111101111010100001010101000000";
        ram[71] = "0b10111101111000000111100011011010";
        ram[72] = "0b00111101000011000000000010001011";
        ram[73] = "0b00111101101100111101001110011001";
        ram[74] = "0b00111101100101100010010011000000";
        ram[75] = "0b10111101100111111111100110001001";
        ram[76] = "0b10111011000110101010010111010000";
        ram[77] = "0b10111100110010111011000010000010";
        ram[78] = "0b00111010100111011110100000110101";
        ram[79] = "0b10111100101011011110010001000001";
        ram[80] = "0b00111101101111110100101110111100";
        ram[81] = "0b10111101000101100110011100110001";
        ram[82] = "0b00111101000001110110111010010111";
        ram[83] = "0b00111011111111101000001001110001";
        ram[84] = "0b10111101010101010011101010000100";
        ram[85] = "0b00111101111000010101010000110100";
        ram[86] = "0b10111101000000101001100000111001";
        ram[87] = "0b10111100101100101100010101101110";
        ram[88] = "0b00111101100001010010100111100111";
        ram[89] = "0b10111101101011111101100110110110";
        ram[90] = "0b10111101100100111100011100100010";
        ram[91] = "0b10111110011001011000101111111011";
        ram[92] = "0b10111101100000001100000100010100";
        ram[93] = "0b10111101000100011100000011111100";
        ram[94] = "0b00111110000011011101100101110010";
        ram[95] = "0b10111011000010110110111010101110";
        ram[96] = "0b00111110000011100000101100000111";
        ram[97] = "0b10111101111010011100111110100100";
        ram[98] = "0b10111100100111110111110010001000";
        ram[99] = "0b10111101111001011011010000000000";
        ram[100] = "0b10111101100010111101111111001000";
        ram[101] = "0b10111100110110100001110110110010";
        ram[102] = "0b10111100101011010001010011111000";
        ram[103] = "0b10111101110100011110101110011100";
        ram[104] = "0b10111101111010000000001011100010";
        ram[105] = "0b10111101100101100111010101101100";
        ram[106] = "0b00111101110100011011101100110101";
        ram[107] = "0b10111100110001011010111100110001";
        ram[108] = "0b10111011110110010111001101101110";
        ram[109] = "0b00111110001011000001001100011000";
        ram[110] = "0b10111101010010010011000011011101";
        ram[111] = "0b00111011111111101001011011001011";
        ram[112] = "0b00111101010100011001010110011111";
        ram[113] = "0b10111110000000010010101001001000";
        ram[114] = "0b00111100101101001110001110111101";
        ram[115] = "0b10111100110001001010101101001101";
        ram[116] = "0b10111101110101100110100101110111";
        ram[117] = "0b00111100111000111011011111100011";
        ram[118] = "0b10111100010010000011001100101111";
        ram[119] = "0b10111110100010000111111101010111";
        ram[120] = "0b10111101111011011110111110110000";
        ram[121] = "0b00111101011100101101010101011111";
        ram[122] = "0b10111011111111000100011101110100";
        ram[123] = "0b00111101101011011111100110010001";
        ram[124] = "0b00111101100000110101001110110001";
        ram[125] = "0b10111110000100110101110001111101";
        ram[126] = "0b10111101110111010001000110101101";
        ram[127] = "0b10111100111101001111010111111111";
        ram[128] = "0b00111100100001000011111100110001";
        ram[129] = "0b10111101010101101100000100110011";
        ram[130] = "0b10111100101000001110000101011111";
        ram[131] = "0b00111100100111010011010111100110";
        ram[132] = "0b00111101100000000001101001101100";
        ram[133] = "0b00111100110111011111001010010010";
        ram[134] = "0b00111101011111011000101111111011";
        ram[135] = "0b00111100010110101011000100100011";
        ram[136] = "0b00111010000101011110111101001111";
        ram[137] = "0b10111011110111011000100111000100";
        ram[138] = "0b10111110100101110001010000111011";
        ram[139] = "0b10111101111001100111011100101100";
        ram[140] = "0b00111101100001110110110011111001";
        ram[141] = "0b10111101001100111000100001010100";
        ram[142] = "0b10111101011001100110101011100011";
        ram[143] = "0b10111101001111010010010111011111";
        ram[144] = "0b00111100101101010001010000001011";
        ram[145] = "0b10111101000011001000111011111111";
        ram[146] = "0b10111101111101000101111001001110";
        ram[147] = "0b10111011111010100111011110101110";
        ram[148] = "0b10111101111010101000001011001010";
        ram[149] = "0b10111100010101100010011110111001";
        ram[150] = "0b00111101110010001010001110000000";
        ram[151] = "0b10111101110001101110110101011100";
        ram[152] = "0b00111101100011001110010001111100";
        ram[153] = "0b00111011101000111011000010110110";
        ram[154] = "0b00111101001011001110001011011000";
        ram[155] = "0b00111101101011100000001100000111";
        ram[156] = "0b10111101101111011010000000111011";
        ram[157] = "0b10111110001111111111100000010011";
        ram[158] = "0b10111100100100010111001000101100";
        ram[159] = "0b00111101010111110011100101010011";
        ram[160] = "0b10111101110000110110010110011011";
        ram[161] = "0b00111101100000100000101110001000";
        ram[162] = "0b10111101100111111100111100110000";
        ram[163] = "0b10111110011010000101001100101011";
        ram[164] = "0b00111011111111010110110110111111";
        ram[165] = "0b10111101101010111101100001000101";
        ram[166] = "0b10111101000010110110001001000100";
        ram[167] = "0b10111101110000111110001100101101";
        ram[168] = "0b00111101010111100101110001001001";
        ram[169] = "0b00111101011100011010000110100000";
        ram[170] = "0b00111110001010001000100111110111";
        ram[171] = "0b00111100101110000010110011000101";
        ram[172] = "0b10111101100001011110101101010010";
        ram[173] = "0b10111110010110111001000001110000";
        ram[174] = "0b10111101000101010010110011000001";
        ram[175] = "0b10111101111110101110110101010111";
        ram[176] = "0b10111101000111101100011011010110";
        ram[177] = "0b10111101110101010101011001110100";
        ram[178] = "0b00111101110001001011110011010000";
        ram[179] = "0b10111110000011101100101010001100";
        ram[180] = "0b00111101110000111111011001000000";
        ram[181] = "0b00111101111111111010111110011101";
        ram[182] = "0b10111101101001111100000010110010";
        ram[183] = "0b10111100010110110111110101010111";
        ram[184] = "0b10111110000100101000010101101000";
        ram[185] = "0b10111101100111100001110100110101";
        ram[186] = "0b00111101100011001101100101100010";
        ram[187] = "0b10111101001010000010110000000100";
        ram[188] = "0b10111100100001111001110011000010";
        ram[189] = "0b00111101001101001010101011111001";
        ram[190] = "0b10111101100111110111110101110010";
        ram[191] = "0b10111101100001110111110000110110";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibnm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibnm_ram* meminst;


SC_CTOR(conv_2_conv_2_weibnm) {
meminst = new conv_2_conv_2_weibnm_ram("conv_2_conv_2_weibnm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibnm() {
    delete meminst;
}


};//endmodule
#endif
