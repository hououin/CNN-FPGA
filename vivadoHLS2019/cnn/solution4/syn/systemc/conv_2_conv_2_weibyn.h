// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibyn_H__
#define __conv_2_conv_2_weibyn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibyn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibyn_ram) {
        ram[0] = "0b10111110101001001010111010100000";
        ram[1] = "0b10111110010011101110101010110110";
        ram[2] = "0b00111101111101111001001010000000";
        ram[3] = "0b10111101101111011010001000000011";
        ram[4] = "0b10111100100100000000100001001111";
        ram[5] = "0b10111110010000100110111111011100";
        ram[6] = "0b10111101100011101100100010001010";
        ram[7] = "0b00111110011001111101100110010011";
        ram[8] = "0b00111100011110111010000001011110";
        ram[9] = "0b10111101110000111010010000111111";
        ram[10] = "0b10111101100100001100110011001011";
        ram[11] = "0b00111101100000011011101100100111";
        ram[12] = "0b10111110010001101110001000110100";
        ram[13] = "0b10111101011111011100101000001000";
        ram[14] = "0b00111101010010000111100110111111";
        ram[15] = "0b00111101111100111111100100000001";
        ram[16] = "0b10111110010111001110110111010111";
        ram[17] = "0b10111110101000010001010001101110";
        ram[18] = "0b10111110000111111000110001000010";
        ram[19] = "0b10111110011000110111111100111001";
        ram[20] = "0b10111110000011100010100001010100";
        ram[21] = "0b10111110111011101110011110100100";
        ram[22] = "0b10111101001110000001001100111000";
        ram[23] = "0b10111100111110011000010111000100";
        ram[24] = "0b10111110000110101000110011110011";
        ram[25] = "0b00111110000111001110010010110100";
        ram[26] = "0b10111110000111000110010101001111";
        ram[27] = "0b10111110011110101000011100010000";
        ram[28] = "0b00111101001101011101100100110000";
        ram[29] = "0b10111110001100001010110111101011";
        ram[30] = "0b10111101110100100010100110000010";
        ram[31] = "0b10111101110100111110110001111011";
        ram[32] = "0b10111101101011100000001100101000";
        ram[33] = "0b00111110001101001110111010110001";
        ram[34] = "0b00111101000111100111111110101100";
        ram[35] = "0b10111101110110000100010010000000";
        ram[36] = "0b00111110001100110000011010001001";
        ram[37] = "0b10111101110001011111001101111101";
        ram[38] = "0b10111101011111101100010111011001";
        ram[39] = "0b10111110000111101010000110101110";
        ram[40] = "0b10111111001001111000111011011010";
        ram[41] = "0b00111110000001000111000110100001";
        ram[42] = "0b10111110101101001001010000111101";
        ram[43] = "0b00111110010101101101101001001111";
        ram[44] = "0b00111101010001111101110001100010";
        ram[45] = "0b10111101110111011000111000111101";
        ram[46] = "0b00111101110101100001110011110111";
        ram[47] = "0b10111011001001110001100100100111";
        ram[48] = "0b00111110000111110010100000101110";
        ram[49] = "0b00111101101110011010110000010100";
        ram[50] = "0b10111110000010111011011101100110";
        ram[51] = "0b10111110001000000101001001100000";
        ram[52] = "0b00111101000101010001101001000110";
        ram[53] = "0b10111110111111110011100010111101";
        ram[54] = "0b10111110100110101111000001001110";
        ram[55] = "0b10111101100011110101010001001100";
        ram[56] = "0b00111010111000000110001110111101";
        ram[57] = "0b00111100101101000101101110111110";
        ram[58] = "0b10111110101011111010111100110110";
        ram[59] = "0b10111101011011101001111010001000";
        ram[60] = "0b00111110001010100100100110110111";
        ram[61] = "0b10111100110001100110111100110101";
        ram[62] = "0b00111110000001010010101000100100";
        ram[63] = "0b00111101101010011111110000110110";
        ram[64] = "0b10111110000010111100000000001010";
        ram[65] = "0b10111110011110001101100010000011";
        ram[66] = "0b10111110000100111111000101101110";
        ram[67] = "0b00111011110010010100100100111101";
        ram[68] = "0b10111101110110000001111111111100";
        ram[69] = "0b10111100101001111000010111110100";
        ram[70] = "0b10111110101010011010011001000101";
        ram[71] = "0b10111100111001101011000101111100";
        ram[72] = "0b00111100100100111111011010100100";
        ram[73] = "0b10111011110010101110010001001001";
        ram[74] = "0b00111100110011001001011100110000";
        ram[75] = "0b00111101000010100001111110110101";
        ram[76] = "0b10111110100111011010100010011001";
        ram[77] = "0b10111110000010010101110011110000";
        ram[78] = "0b10111100110101011100100011100010";
        ram[79] = "0b10111011000110100000111111000100";
        ram[80] = "0b10111101110111010110010100110010";
        ram[81] = "0b00111100000011000001100010111010";
        ram[82] = "0b10111110000101001110000000010111";
        ram[83] = "0b10111101011010111001110100110011";
        ram[84] = "0b10111110001100011010100011010011";
        ram[85] = "0b10111110101001001100011010101111";
        ram[86] = "0b10111101011011001000110100011111";
        ram[87] = "0b10111110001000000010010111111100";
        ram[88] = "0b10111101111110100001001100010111";
        ram[89] = "0b00111100111100101110011101011010";
        ram[90] = "0b00111101101011001101100111101011";
        ram[91] = "0b00111110111010010011101010010101";
        ram[92] = "0b10111101000011000001100000110000";
        ram[93] = "0b10111110000001100111101111011111";
        ram[94] = "0b00111101110010110110010111011101";
        ram[95] = "0b00111101101010001110010000001100";
        ram[96] = "0b00111100101001111001100011011000";
        ram[97] = "0b00111110010111001100110000011010";
        ram[98] = "0b10111101000011011110111101110001";
        ram[99] = "0b10111101110101101011100010111111";
        ram[100] = "0b10111110101001101110011100100111";
        ram[101] = "0b10111110001110110011011001011101";
        ram[102] = "0b10111101101001000110110010011111";
        ram[103] = "0b10111110001101010101000111110010";
        ram[104] = "0b10111110100101000110110100010101";
        ram[105] = "0b10111101100010111101001111000010";
        ram[106] = "0b10111110100011110011111001110101";
        ram[107] = "0b00111101101010111100010001110010";
        ram[108] = "0b00111110100000110111100111111011";
        ram[109] = "0b00111010111110001011011100100000";
        ram[110] = "0b00111100110111100110101000101110";
        ram[111] = "0b10111101000001011111000010100111";
        ram[112] = "0b10111110000010011110101110011100";
        ram[113] = "0b00111101011010100001100010011101";
        ram[114] = "0b00111001101111111101011000101010";
        ram[115] = "0b10111101100110111000110010001001";
        ram[116] = "0b00111110000010000111100110010101";
        ram[117] = "0b10111110010111100010011111000100";
        ram[118] = "0b10111100000110001001010011111010";
        ram[119] = "0b00111110011001000001011100010001";
        ram[120] = "0b00111101111101010011010110011001";
        ram[121] = "0b00111110001101011101010000010001";
        ram[122] = "0b10111110100110000010001101101010";
        ram[123] = "0b00111101001100010100110101110010";
        ram[124] = "0b00111101111001000101000101010000";
        ram[125] = "0b00111100001001100101101101001110";
        ram[126] = "0b10111101010111001101011001101000";
        ram[127] = "0b00111100101000101001111101100101";
        ram[128] = "0b00111101111011011111111000100010";
        ram[129] = "0b10111110000010100000101101011010";
        ram[130] = "0b10111101111001001001111100010001";
        ram[131] = "0b00111110001111100111001100110001";
        ram[132] = "0b10111101111011101110110010001010";
        ram[133] = "0b10111101001011100111111000111011";
        ram[134] = "0b00111101110100001101000010110011";
        ram[135] = "0b00111110000001011101010110101001";
        ram[136] = "0b00111101100001011111010011000101";
        ram[137] = "0b00111101111100101001100100011010";
        ram[138] = "0b10111101111101010110011011111101";
        ram[139] = "0b10111110000100000100111111110111";
        ram[140] = "0b10111100111011011111001000100100";
        ram[141] = "0b00111110000110110010000101110100";
        ram[142] = "0b00111110000110111100101110101001";
        ram[143] = "0b00111101100000100001010000000101";
        ram[144] = "0b00111101100010100011101100000111";
        ram[145] = "0b00111110001000110000100100110011";
        ram[146] = "0b00111110000010110111111111110111";
        ram[147] = "0b10111110000000100101011100011000";
        ram[148] = "0b10111101100110011100110110110011";
        ram[149] = "0b10111110100010100011100101000001";
        ram[150] = "0b10111101111100000100110111001001";
        ram[151] = "0b10111110000110001010011010001101";
        ram[152] = "0b10111101111100010000101100100111";
        ram[153] = "0b00111101010110001011111011011010";
        ram[154] = "0b10111011101101011101000000011011";
        ram[155] = "0b00111110100010010010110001111101";
        ram[156] = "0b00111110000101011100101010111100";
        ram[157] = "0b10111110001111000100011011100000";
        ram[158] = "0b10111100100101000110111101111001";
        ram[159] = "0b00111110010011011111111010011011";
        ram[160] = "0b00111110101000111101000100000011";
        ram[161] = "0b00111110010011110011100110000111";
        ram[162] = "0b00111101111111111001010000010100";
        ram[163] = "0b10111110000110001100111010011110";
        ram[164] = "0b10111110110010111111001001100000";
        ram[165] = "0b00111110010111010011000011010010";
        ram[166] = "0b10111110001000111011101110011111";
        ram[167] = "0b00111100110100001101001110010100";
        ram[168] = "0b10111110011110110110000010101000";
        ram[169] = "0b00111110000011001110100010100001";
        ram[170] = "0b00111101001000111101001111111011";
        ram[171] = "0b00111110000111110000001010000111";
        ram[172] = "0b10111010001011000101110100101100";
        ram[173] = "0b10111110010001111101111111000111";
        ram[174] = "0b00111110100111001111001001111100";
        ram[175] = "0b00111110100001100000001101011101";
        ram[176] = "0b10111101111010111000110110000110";
        ram[177] = "0b00111110110000010111010111010100";
        ram[178] = "0b00111110000000000110000001111000";
        ram[179] = "0b10111110011110001100010111011101";
        ram[180] = "0b00111101001100111001000110111100";
        ram[181] = "0b10111110100111111001011101000011";
        ram[182] = "0b10111110011110001001011010011111";
        ram[183] = "0b10111110000100110100111001101011";
        ram[184] = "0b00111101111111100110010111001010";
        ram[185] = "0b10111110100011000001010000101111";
        ram[186] = "0b10111110010000111001001000101010";
        ram[187] = "0b10111101101010101110000011101010";
        ram[188] = "0b10111101011001101110010010011010";
        ram[189] = "0b10111101111011010000000110110000";
        ram[190] = "0b00111110000001111101110000101100";
        ram[191] = "0b00111101101011001010101001001011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibyn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibyn_ram* meminst;


SC_CTOR(conv_2_conv_2_weibyn) {
meminst = new conv_2_conv_2_weibyn_ram("conv_2_conv_2_weibyn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibyn() {
    delete meminst;
}


};//endmodule
#endif
