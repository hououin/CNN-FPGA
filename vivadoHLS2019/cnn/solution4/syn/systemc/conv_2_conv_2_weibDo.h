// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibDo_H__
#define __conv_2_conv_2_weibDo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibDo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibDo_ram) {
        ram[0] = "0b10111101101100000111100011000101";
        ram[1] = "0b00111101100101011000000111111100";
        ram[2] = "0b10111110001011101010010010101000";
        ram[3] = "0b00111110100000011101000100000110";
        ram[4] = "0b00111011010111000000101110011001";
        ram[5] = "0b10111110000100111101110011000000";
        ram[6] = "0b00111011000101001110101010000101";
        ram[7] = "0b00111011100101011000110110000000";
        ram[8] = "0b10111101100101010101101100010100";
        ram[9] = "0b00111101110000000001010011110001";
        ram[10] = "0b00111101111100010011110101101101";
        ram[11] = "0b10111101111011001011010010100000";
        ram[12] = "0b00111100110111100010000110110001";
        ram[13] = "0b00111110010000100110001111111111";
        ram[14] = "0b00111101110011000010000000011011";
        ram[15] = "0b00111110001100111011000100111101";
        ram[16] = "0b10111110010110001010010001010101";
        ram[17] = "0b00111101001011011011101101111100";
        ram[18] = "0b00111100100111001110011010001000";
        ram[19] = "0b10111101110111000111010110000011";
        ram[20] = "0b00111110100101110111010110001010";
        ram[21] = "0b00111101001010010011111000001001";
        ram[22] = "0b00111101110110000100001010101101";
        ram[23] = "0b00111100111000111000100000110111";
        ram[24] = "0b10111101011111000001101001011111";
        ram[25] = "0b00111101111101010101100111000111";
        ram[26] = "0b00111101010011010101011100101000";
        ram[27] = "0b10111101101101011110110010110001";
        ram[28] = "0b00111110011100011101010001110100";
        ram[29] = "0b00111100101101001101110000100001";
        ram[30] = "0b10111101001101101001100011111010";
        ram[31] = "0b10111110100110010001101111111000";
        ram[32] = "0b00111110010100000001011111110100";
        ram[33] = "0b00111101111101110010110111001100";
        ram[34] = "0b00111110010001001010101010101100";
        ram[35] = "0b00111101000010001010001001000000";
        ram[36] = "0b10111101010101110111101001111010";
        ram[37] = "0b00111110010000101101011110001010";
        ram[38] = "0b00111100010110110010000101001110";
        ram[39] = "0b10111101001111110011011010101001";
        ram[40] = "0b10111110010111000110001010000001";
        ram[41] = "0b00111101111111111111110111001100";
        ram[42] = "0b10111110100011101110011011011010";
        ram[43] = "0b00111100001110010100111000101101";
        ram[44] = "0b00111100100111011001101011001111";
        ram[45] = "0b00111101100001100111100111001010";
        ram[46] = "0b00111101100010000001000011111001";
        ram[47] = "0b00111110100100001101000100101111";
        ram[48] = "0b00111100100010111111010111010111";
        ram[49] = "0b00111011111010010111010011001010";
        ram[50] = "0b10111110001110001000001111011011";
        ram[51] = "0b10111101100000100111111111010010";
        ram[52] = "0b10111101111101111100001111011101";
        ram[53] = "0b10111100110010110101101001011000";
        ram[54] = "0b10111101010010001111010111011000";
        ram[55] = "0b10111101000110111010100011010101";
        ram[56] = "0b00111101101011011111010101111010";
        ram[57] = "0b10111110001010100001111011101001";
        ram[58] = "0b10111101010000110011100100100110";
        ram[59] = "0b10111101100100101001101010000101";
        ram[60] = "0b00111110000010111011111001110000";
        ram[61] = "0b00111110001111000110111001110100";
        ram[62] = "0b00111011100011001101111001101110";
        ram[63] = "0b10111101101001101001001110010001";
        ram[64] = "0b10111110000101011001111100011011";
        ram[65] = "0b00111101111001001000011010100101";
        ram[66] = "0b10111101000111100000101101011101";
        ram[67] = "0b10111101111011000101000011100001";
        ram[68] = "0b00111101011011010010011111101110";
        ram[69] = "0b00111110010000001101100110011011";
        ram[70] = "0b10111101110000111010000110111111";
        ram[71] = "0b10111101100011100011011111010101";
        ram[72] = "0b10111101101101100110010100010100";
        ram[73] = "0b10111101001000100101101010011000";
        ram[74] = "0b00111110100111010101000101100001";
        ram[75] = "0b00111101011110001111110001010100";
        ram[76] = "0b00111101000100011011101011110011";
        ram[77] = "0b00111110000001111001010010001110";
        ram[78] = "0b10111101101010000110110110101011";
        ram[79] = "0b10111011111101100101100101010001";
        ram[80] = "0b00111101101011101010000100101001";
        ram[81] = "0b10111101101001001011000010011000";
        ram[82] = "0b00111110100001010001110111100000";
        ram[83] = "0b10111101010111010100101010010001";
        ram[84] = "0b00111101001010011111010000010001";
        ram[85] = "0b00111101101000010010101011010001";
        ram[86] = "0b00111110001110110000110000100000";
        ram[87] = "0b00111011111110101111111001101111";
        ram[88] = "0b00111100101111100110000111100000";
        ram[89] = "0b10111101101001101100100100101101";
        ram[90] = "0b10111110000000101101001100110001";
        ram[91] = "0b10111110011010011000111101010100";
        ram[92] = "0b00111101011101000000011110100110";
        ram[93] = "0b10111100001011111001011011111000";
        ram[94] = "0b00111011100011111000001110000010";
        ram[95] = "0b10111110011100001011101110111010";
        ram[96] = "0b00111110000100010101100100011000";
        ram[97] = "0b10111101000010001010001000101110";
        ram[98] = "0b10111101101100100111010110100001";
        ram[99] = "0b10111101110101111101111101100100";
        ram[100] = "0b00111101100110111011111010010101";
        ram[101] = "0b10111110000110011001011111100011";
        ram[102] = "0b00111101100000111000101101111111";
        ram[103] = "0b00111101010100111001110101011001";
        ram[104] = "0b10111101001111001111000001011000";
        ram[105] = "0b00111100101000010110101111010110";
        ram[106] = "0b10111110010111000101010010100000";
        ram[107] = "0b10111010101111011010001001001001";
        ram[108] = "0b10111110101010100101010001001101";
        ram[109] = "0b00111110011011100001110001100101";
        ram[110] = "0b00111100101101001010101011100110";
        ram[111] = "0b00111100101000111000011011101010";
        ram[112] = "0b10111110011010011010100010100110";
        ram[113] = "0b10111110100110110010010000100000";
        ram[114] = "0b10111101111000110101001111010101";
        ram[115] = "0b00111101101011110000100101010100";
        ram[116] = "0b10111110000100111010100110001011";
        ram[117] = "0b00111110011000111000100000001011";
        ram[118] = "0b10111110110011100100010011100010";
        ram[119] = "0b10111110001011011100111101110000";
        ram[120] = "0b10111100110111010001010111100111";
        ram[121] = "0b10111110100001101001111000100000";
        ram[122] = "0b00111011001001011110010111111000";
        ram[123] = "0b10111101111101100010100110010000";
        ram[124] = "0b00111101110000011011011101100000";
        ram[125] = "0b00111101001000001111000101111110";
        ram[126] = "0b10111101011011110010000011110010";
        ram[127] = "0b10111101100001011011101000111001";
        ram[128] = "0b00111100111000010110100101010010";
        ram[129] = "0b00111101011111111011110010101100";
        ram[130] = "0b00111100110101010110010001110011";
        ram[131] = "0b10111110010000010110100011110011";
        ram[132] = "0b10111100011010111010010111010101";
        ram[133] = "0b00111110001111110101001000100101";
        ram[134] = "0b10111110001011100011000101011011";
        ram[135] = "0b00111101011101000100100011100011";
        ram[136] = "0b00111011100101111110001110110001";
        ram[137] = "0b00111101100100101010000110010010";
        ram[138] = "0b10111110011001010100111100000101";
        ram[139] = "0b00111110000010001010101000010001";
        ram[140] = "0b10111101100100111111000101100000";
        ram[141] = "0b00111101111001101000011101000100";
        ram[142] = "0b10111101110001111111010001111111";
        ram[143] = "0b00111101110101000000010100101101";
        ram[144] = "0b00111101011010011010001000100001";
        ram[145] = "0b10111101110110110010101001001110";
        ram[146] = "0b10111101111011100100100000101001";
        ram[147] = "0b10111101000010101100010100110110";
        ram[148] = "0b10111110010010111100110110011010";
        ram[149] = "0b00111101111101101001011001110100";
        ram[150] = "0b00111110000000100001011011010110";
        ram[151] = "0b10111100111000101101110111110101";
        ram[152] = "0b10111101111100101000001111001010";
        ram[153] = "0b10111101110111000010000100011111";
        ram[154] = "0b00111110011111101010000010011010";
        ram[155] = "0b10111101101010100000001101001001";
        ram[156] = "0b10111110001101001011110100001100";
        ram[157] = "0b10111010110111001100001010000110";
        ram[158] = "0b00111110000101011010001001101011";
        ram[159] = "0b10111110100001001010100001000101";
        ram[160] = "0b00111101000110000001111010101100";
        ram[161] = "0b10111110101110011011110101111010";
        ram[162] = "0b00111100101111001011011101011100";
        ram[163] = "0b10111110011101111111010010011101";
        ram[164] = "0b10111100100111010110100001011101";
        ram[165] = "0b10111110001100111101000011000110";
        ram[166] = "0b10111101010011111010111001100100";
        ram[167] = "0b10111110000001100100010111010110";
        ram[168] = "0b00111110001101011100011110010001";
        ram[169] = "0b10111110010011000100101000010011";
        ram[170] = "0b00111100110010100001001011111010";
        ram[171] = "0b10111110011101010000101001010010";
        ram[172] = "0b10111100000001101100011111001011";
        ram[173] = "0b10111101001101101001110011101011";
        ram[174] = "0b10111110011011101111111001011100";
        ram[175] = "0b10111101101010000100011111111001";
        ram[176] = "0b10111110000101100000000101000011";
        ram[177] = "0b10111110010111101001101001110100";
        ram[178] = "0b10111101101001000100111100001011";
        ram[179] = "0b00111101110100000110100011000010";
        ram[180] = "0b10111101111110111010010000010000";
        ram[181] = "0b00111110001000110010110001101011";
        ram[182] = "0b10111101011100011100101111111100";
        ram[183] = "0b00111100011011111111100110101110";
        ram[184] = "0b10111110101001110111011100001111";
        ram[185] = "0b10111101101000100100010111111100";
        ram[186] = "0b10111100010101000011000100000010";
        ram[187] = "0b10111110011011101011110110000110";
        ram[188] = "0b00111101010010001111100101111100";
        ram[189] = "0b00111101111001111111101111000111";
        ram[190] = "0b00111100100111111101111110100001";
        ram[191] = "0b10111100000011111111110111111111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibDo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibDo_ram* meminst;


SC_CTOR(conv_2_conv_2_weibDo) {
meminst = new conv_2_conv_2_weibDo_ram("conv_2_conv_2_weibDo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibDo() {
    delete meminst;
}


};//endmodule
#endif
