// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei6jw_H__
#define __conv_2_conv_2_wei6jw_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei6jw_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei6jw_ram) {
        ram[0] = "0b00111100101111101010000101010101";
        ram[1] = "0b10111110010001001101011110110010";
        ram[2] = "0b00111100111010100101010110001111";
        ram[3] = "0b10111100111010011000101011110100";
        ram[4] = "0b10111100100110000101100011100110";
        ram[5] = "0b10111010100110110001010011011000";
        ram[6] = "0b10111110001101110100000011010010";
        ram[7] = "0b10111101011101110011001001000011";
        ram[8] = "0b10111110001101101000010010110010";
        ram[9] = "0b10111101101101011101111001110010";
        ram[10] = "0b10111101111001100101100100000110";
        ram[11] = "0b00111101101000001011101000011001";
        ram[12] = "0b10111110100100101110000000110100";
        ram[13] = "0b10111101001001111110101011110000";
        ram[14] = "0b10111110100111000111110000110110";
        ram[15] = "0b00111101010001111001110110101011";
        ram[16] = "0b10111110011010100000001110010111";
        ram[17] = "0b00111101011011110000001101100010";
        ram[18] = "0b00111101010100101010110011110010";
        ram[19] = "0b00111100111010000000000100111010";
        ram[20] = "0b00111101110100010001101101111111";
        ram[21] = "0b00111101000101010011110101111001";
        ram[22] = "0b10111100110111101110111100000111";
        ram[23] = "0b10111110000101111111010000111110";
        ram[24] = "0b10111110011011111011010111101011";
        ram[25] = "0b00111011100001100110010111000010";
        ram[26] = "0b00111101101100000101110000001111";
        ram[27] = "0b00111110010011101010001110100001";
        ram[28] = "0b10111110010010001001100010111111";
        ram[29] = "0b10111101011011011011010011110110";
        ram[30] = "0b10111101110110101101111110100000";
        ram[31] = "0b10111110001011000101011011001001";
        ram[32] = "0b10111101100011011011011001000000";
        ram[33] = "0b00111101110100011111101111000110";
        ram[34] = "0b00111101111001100000000110000111";
        ram[35] = "0b00111110001011100110000101100001";
        ram[36] = "0b00111110000001000011110111111000";
        ram[37] = "0b10111100001011010000010100000011";
        ram[38] = "0b10111110100110011111101011110101";
        ram[39] = "0b10111110011000001101100011110001";
        ram[40] = "0b00111101101111110111001111010010";
        ram[41] = "0b00111100101001010111110010000001";
        ram[42] = "0b00111010111111101001010111111111";
        ram[43] = "0b10111100001100001111100011100000";
        ram[44] = "0b10111101100101001101001100110000";
        ram[45] = "0b10111101001000010011010011110110";
        ram[46] = "0b10111110100101110101001101001100";
        ram[47] = "0b10111101111000011100101110100010";
        ram[48] = "0b10111101101000010110010101110011";
        ram[49] = "0b10111101000000101110001100000010";
        ram[50] = "0b10111110100001111100100110101100";
        ram[51] = "0b10111101111011110001010100111010";
        ram[52] = "0b00111101100011001111110010110101";
        ram[53] = "0b00111100111111010100110011110110";
        ram[54] = "0b10111101110011111111110010110111";
        ram[55] = "0b00111100101001101000000001111110";
        ram[56] = "0b10111101111001001100001010101000";
        ram[57] = "0b00111101100010000001100111101101";
        ram[58] = "0b00111101011110011000011101110110";
        ram[59] = "0b10111101111101001110111000110001";
        ram[60] = "0b10111101111111111010110110011100";
        ram[61] = "0b00111101011111001110001100110110";
        ram[62] = "0b10111101101110100101001001011100";
        ram[63] = "0b10111110001000100000010001101010";
        ram[64] = "0b10111011111000110000110111110011";
        ram[65] = "0b10111101001010101111001000011001";
        ram[66] = "0b10111101111010101010000111001010";
        ram[67] = "0b10111101111011001100011010010000";
        ram[68] = "0b10111100010100001110111011010001";
        ram[69] = "0b10111100101100110011110101010010";
        ram[70] = "0b10111110101010001101110011100110";
        ram[71] = "0b10111101110011110001110101111000";
        ram[72] = "0b10111110110011010000011011110011";
        ram[73] = "0b00111101000101011011101000100101";
        ram[74] = "0b00111101001100100011101101110011";
        ram[75] = "0b00111101000101001010001010100111";
        ram[76] = "0b10111110101101111001001101001000";
        ram[77] = "0b10111110001001010101001110101011";
        ram[78] = "0b10111110010001000111000000011100";
        ram[79] = "0b10111110000101100010001010100010";
        ram[80] = "0b10111101110101011101100011001111";
        ram[81] = "0b00111101011111101111101100101101";
        ram[82] = "0b00111101101010111010111111101101";
        ram[83] = "0b10111110001001100010000010101100";
        ram[84] = "0b00111101101110010010111100111110";
        ram[85] = "0b00111101001100101110111001000110";
        ram[86] = "0b10111110001011011010110100001100";
        ram[87] = "0b10111101110110111010100101010110";
        ram[88] = "0b10111110110010100010011000011101";
        ram[89] = "0b10111111000110011111111010101101";
        ram[90] = "0b10111101001010100100011111110000";
        ram[91] = "0b10111101001011101100010010001010";
        ram[92] = "0b10111101110000111101110110011010";
        ram[93] = "0b00111101100100001111100001100000";
        ram[94] = "0b10111101101011100011110101100111";
        ram[95] = "0b00111101110010110101101011100101";
        ram[96] = "0b00111101100011000001110110110111";
        ram[97] = "0b10111101011000100111100011110001";
        ram[98] = "0b00111100110111001101010100100011";
        ram[99] = "0b00111101101011110101010010001011";
        ram[100] = "0b10111110100000101000001110101110";
        ram[101] = "0b10111100000011101101011110101100";
        ram[102] = "0b10111110101101001001010110010101";
        ram[103] = "0b10111110100110101100111111111111";
        ram[104] = "0b10111101001111010111101000000100";
        ram[105] = "0b10111110110101011110100110011000";
        ram[106] = "0b10111110011001101010010110000010";
        ram[107] = "0b10111110101000111000010101111011";
        ram[108] = "0b00111101000001011110100000010101";
        ram[109] = "0b00111110001100100000100110111011";
        ram[110] = "0b10111110110010111111010110010010";
        ram[111] = "0b10111110001101001101111111000011";
        ram[112] = "0b10111110100111111001001101101100";
        ram[113] = "0b10111100001110110000100110110101";
        ram[114] = "0b10111110111010100101101100111000";
        ram[115] = "0b00111101010001100000010001010011";
        ram[116] = "0b00111101010011010110111110101000";
        ram[117] = "0b10111101110011101111000111000010";
        ram[118] = "0b10111110000101000110110010000101";
        ram[119] = "0b10111100011101101001110111000011";
        ram[120] = "0b00111110000101010011010110010100";
        ram[121] = "0b10111101010001010110001000000001";
        ram[122] = "0b10111011111111110100111000110001";
        ram[123] = "0b10111100111100100111110010110100";
        ram[124] = "0b10111110001001110101110011100011";
        ram[125] = "0b00111010100111001101001011001100";
        ram[126] = "0b10111110001001011011010000000101";
        ram[127] = "0b10111101010011011101011010101001";
        ram[128] = "0b00111101101011010000000000100000";
        ram[129] = "0b00111110100001000101011100100101";
        ram[130] = "0b10111100111110111111110101001011";
        ram[131] = "0b00111101101011000001111110101101";
        ram[132] = "0b10111110011011000000100101110000";
        ram[133] = "0b00111110010011101100000001000110";
        ram[134] = "0b10111110011101011010100111101110";
        ram[135] = "0b00111101010001001100001000110100";
        ram[136] = "0b10111110010111100000111000111011";
        ram[137] = "0b00111010010001110001010111111100";
        ram[138] = "0b00111101111010100111001010101000";
        ram[139] = "0b00111100001111101010001001100000";
        ram[140] = "0b10111110101110000000110011100001";
        ram[141] = "0b10111101101111110011010000101111";
        ram[142] = "0b10111110101010100011110100011010";
        ram[143] = "0b10111110100000010011100100000011";
        ram[144] = "0b00111100111001011010010110101010";
        ram[145] = "0b00111101111011100111111100110011";
        ram[146] = "0b00111100101110011101110001000111";
        ram[147] = "0b10111110000110011000001000001011";
        ram[148] = "0b10111110001001001010011010000011";
        ram[149] = "0b10111110110010100110011100001101";
        ram[150] = "0b00111101000010111000111111111001";
        ram[151] = "0b10111100011110000000011000110011";
        ram[152] = "0b10111110101000101101100000000111";
        ram[153] = "0b10111110011100000000010110111000";
        ram[154] = "0b00111110000001010001111001101100";
        ram[155] = "0b00111100000010101011010100101110";
        ram[156] = "0b10111101100001010011001010001000";
        ram[157] = "0b00111101100011111000011110011100";
        ram[158] = "0b00111101001010010100011100011110";
        ram[159] = "0b10111101101100100101111110011100";
        ram[160] = "0b00111101101111000111100101101001";
        ram[161] = "0b10111101111100011001001010110111";
        ram[162] = "0b00111101000000111001001110100011";
        ram[163] = "0b00111100101010110101110110111110";
        ram[164] = "0b10111110111111101010001011100001";
        ram[165] = "0b10111011110010100101010110011000";
        ram[166] = "0b10111110011110001010101011100111";
        ram[167] = "0b10111101101010110111111001010100";
        ram[168] = "0b10111110001101111010011110111111";
        ram[169] = "0b10111011110011111001110001000111";
        ram[170] = "0b10111110011100110101100001110100";
        ram[171] = "0b10111101011011111001111101111111";
        ram[172] = "0b10111101111001101010111011011100";
        ram[173] = "0b00111110010101100110101100011010";
        ram[174] = "0b10111101111001010100000010100111";
        ram[175] = "0b10111101101000001000001000100001";
        ram[176] = "0b00111100100100010111001010101001";
        ram[177] = "0b10111101100001000110101111001101";
        ram[178] = "0b10111111000110011001000000000001";
        ram[179] = "0b00111101111100010110001000000100";
        ram[180] = "0b00111101010110110111101110000010";
        ram[181] = "0b10111110010001100001000011010111";
        ram[182] = "0b10111101111000101000001011010101";
        ram[183] = "0b10111101100110000111110001000001";
        ram[184] = "0b00111101111110110010111110010100";
        ram[185] = "0b10111110001011000110111011001110";
        ram[186] = "0b10111101101001100100101110101101";
        ram[187] = "0b10111101101001101010100111111001";
        ram[188] = "0b10111110110110110000010111010111";
        ram[189] = "0b10111110111001111100011010001011";
        ram[190] = "0b00111101110110101010100111101010";
        ram[191] = "0b00111100010010100111000100101111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei6jw) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei6jw_ram* meminst;


SC_CTOR(conv_2_conv_2_wei6jw) {
meminst = new conv_2_conv_2_wei6jw_ram("conv_2_conv_2_wei6jw_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei6jw() {
    delete meminst;
}


};//endmodule
#endif
