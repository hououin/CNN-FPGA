// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiRg6_H__
#define __conv_2_conv_2_weiRg6_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiRg6_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiRg6_ram) {
        ram[0] = "0b00111101010010010001100110100110";
        ram[1] = "0b10111101111010001010001111100011";
        ram[2] = "0b00111110000000011111100010111001";
        ram[3] = "0b10111101100000111110001100110011";
        ram[4] = "0b10111101000011101101101111000100";
        ram[5] = "0b10111101001011100100100101100010";
        ram[6] = "0b00111101000000110111111000111011";
        ram[7] = "0b10111101100001100011111110011001";
        ram[8] = "0b00111101100011001001110010000100";
        ram[9] = "0b10111100111110000101011001110001";
        ram[10] = "0b00111101101000110010110011101111";
        ram[11] = "0b00111011110001011110001001100000";
        ram[12] = "0b10111100110110000110011011010011";
        ram[13] = "0b10111110010111000011111111010101";
        ram[14] = "0b10111101010100001001000001010111";
        ram[15] = "0b00111100100110000001001001010111";
        ram[16] = "0b10111101010100101001110010111111";
        ram[17] = "0b10111110000101001001010010100010";
        ram[18] = "0b10111101110011110101110101101010";
        ram[19] = "0b10111101001011101011001101010101";
        ram[20] = "0b10111100100011101101001000011001";
        ram[21] = "0b10111110100111100101000110010011";
        ram[22] = "0b10111101100001100101110010000110";
        ram[23] = "0b10111101010011101000100101000000";
        ram[24] = "0b10111100100101111100110011010111";
        ram[25] = "0b10111011010011100001011110001011";
        ram[26] = "0b10111101101100011010111001011100";
        ram[27] = "0b00111101010010100110100110010011";
        ram[28] = "0b10111110011001110010111110101101";
        ram[29] = "0b00111110000001010011001011100111";
        ram[30] = "0b10111100000000101101011011100111";
        ram[31] = "0b10111110001111010001100001110011";
        ram[32] = "0b00111101001001111110101110000101";
        ram[33] = "0b10111110010010110011110110110010";
        ram[34] = "0b10111100101011011011101111011110";
        ram[35] = "0b00111110010001000010011111000111";
        ram[36] = "0b10111110000010010100110010011010";
        ram[37] = "0b00111100110011011100100010011101";
        ram[38] = "0b10111101101110011011011110010010";
        ram[39] = "0b00111101100010100000010000011110";
        ram[40] = "0b00111101101011100110110000010101";
        ram[41] = "0b00111101101111110111001110101101";
        ram[42] = "0b10111110000001111011101001001110";
        ram[43] = "0b10111101100011110101010111000010";
        ram[44] = "0b00111010001111000101000100001001";
        ram[45] = "0b00111101101100001000011011100001";
        ram[46] = "0b00111101101011111111011111101001";
        ram[47] = "0b00111101110010110000000010011000";
        ram[48] = "0b00111100100011011110000111100111";
        ram[49] = "0b10111110011001101001111101001101";
        ram[50] = "0b00111101101100100100110000111000";
        ram[51] = "0b00111110000000010010011110001000";
        ram[52] = "0b10111110011110110010100000010100";
        ram[53] = "0b00111100110010011011100100101001";
        ram[54] = "0b00111110000100110001101101001011";
        ram[55] = "0b10111101100001011111001101011010";
        ram[56] = "0b10111101111101011101100011010111";
        ram[57] = "0b00111011010101110101000111001110";
        ram[58] = "0b00111100001111101001011001110000";
        ram[59] = "0b00111101010011010001001111010001";
        ram[60] = "0b00111101110000101110010110110110";
        ram[61] = "0b10111101010010100010111111001100";
        ram[62] = "0b10111101110000000110010100111001";
        ram[63] = "0b00111011111110111001101000100011";
        ram[64] = "0b10111011010100001000001110111010";
        ram[65] = "0b10111100000101111100011000010110";
        ram[66] = "0b00111101111011100111100000010111";
        ram[67] = "0b10111101011011000011000000100111";
        ram[68] = "0b10111101101010001110001111010001";
        ram[69] = "0b00111100101000101100000010000110";
        ram[70] = "0b10111101101111110011011010011000";
        ram[71] = "0b10111100001011111000000101101100";
        ram[72] = "0b10111101001101110000100000000111";
        ram[73] = "0b00111100010011111100001001001111";
        ram[74] = "0b10111100111101000011111010101111";
        ram[75] = "0b10111100111101101010001101101100";
        ram[76] = "0b00111100000101000110000000011000";
        ram[77] = "0b10111110000110010001100010101011";
        ram[78] = "0b10111100101101001011000100000011";
        ram[79] = "0b10111101000011111100000101010010";
        ram[80] = "0b10111101110011010111101000100010";
        ram[81] = "0b00111101001101100111100101110101";
        ram[82] = "0b10111101011111101111011010110110";
        ram[83] = "0b00111101101101000100100011100111";
        ram[84] = "0b10111110001001000100010010000101";
        ram[85] = "0b10111110011100111000101101010010";
        ram[86] = "0b00111100001000100001100111100011";
        ram[87] = "0b10111100011010101101010010011010";
        ram[88] = "0b00111101000111110010011111100010";
        ram[89] = "0b00111100100110110100111001000001";
        ram[90] = "0b10111101100110011011101010111000";
        ram[91] = "0b10111110001101100100010000110011";
        ram[92] = "0b00111101001011101010001101010000";
        ram[93] = "0b00111101001111001010101010000101";
        ram[94] = "0b10111101110010000001110000100111";
        ram[95] = "0b00111100101000111110101001000111";
        ram[96] = "0b10111100011100000110011011101101";
        ram[97] = "0b10111101000110001101100001101111";
        ram[98] = "0b00111101011001101101010100101101";
        ram[99] = "0b00111101110000101001101100110110";
        ram[100] = "0b10111101010001010000001101000011";
        ram[101] = "0b10111011000001011101101111000100";
        ram[102] = "0b10111110000101111000000101101110";
        ram[103] = "0b00111101011001110010100010011011";
        ram[104] = "0b00111101101000011111010001111000";
        ram[105] = "0b00111011001111101001110000011011";
        ram[106] = "0b10111100011010010011001111100011";
        ram[107] = "0b10111101110000110011010101001000";
        ram[108] = "0b00111101100010001000000100001101";
        ram[109] = "0b10111011100100001110100001111111";
        ram[110] = "0b10111100010010000000111110110001";
        ram[111] = "0b10111101110000010001010100100000";
        ram[112] = "0b00111101101011001101111110100111";
        ram[113] = "0b10111110000001110010101000100101";
        ram[114] = "0b10111100101010100110110110111101";
        ram[115] = "0b00111101010110101111010011011110";
        ram[116] = "0b10111110010110011010110111111100";
        ram[117] = "0b10111110010010011101001110110000";
        ram[118] = "0b00111101110100001000101010010111";
        ram[119] = "0b10111110000100011100011001000001";
        ram[120] = "0b10111101101011101010000001111100";
        ram[121] = "0b00111110000000100000001011101010";
        ram[122] = "0b10111100101010110000011000101000";
        ram[123] = "0b00111101010111011111100111001000";
        ram[124] = "0b10111101101010110001001101111011";
        ram[125] = "0b00111100011010110011010011010100";
        ram[126] = "0b10111101110111001001011000001111";
        ram[127] = "0b10111101010101111011100010001011";
        ram[128] = "0b00111100101000100100010101011101";
        ram[129] = "0b00111101001100111101110111001111";
        ram[130] = "0b00111101111111001000001100000010";
        ram[131] = "0b00111101010010111100000100000010";
        ram[132] = "0b10111100101111110010001000010111";
        ram[133] = "0b10111101110111010101100010100000";
        ram[134] = "0b10111110001110010111010010110000";
        ram[135] = "0b00111101100010000011011010011101";
        ram[136] = "0b00111101010100001000010001011011";
        ram[137] = "0b00111100011110111111111010000111";
        ram[138] = "0b10111110000100010101001111011110";
        ram[139] = "0b10111110100011011100010010001010";
        ram[140] = "0b10111100101111110001101111011100";
        ram[141] = "0b00111101011011011111001000011111";
        ram[142] = "0b10111101100111000001101101001100";
        ram[143] = "0b00111101110000101000111110010001";
        ram[144] = "0b10111100011011101110100011110011";
        ram[145] = "0b00111100110000111011110101010110";
        ram[146] = "0b10111100111101011001110001111111";
        ram[147] = "0b10111101100010110101000000000001";
        ram[148] = "0b10111110100010001111000010101011";
        ram[149] = "0b10111101010100100011100100001111";
        ram[150] = "0b00111101110001010101000100010011";
        ram[151] = "0b10111110011101000001101101111000";
        ram[152] = "0b00111100011010001110000111011110";
        ram[153] = "0b10111101000111001110010011010100";
        ram[154] = "0b00111100011101110011100101000000";
        ram[155] = "0b10111110011111010011010001101011";
        ram[156] = "0b10111101000000011110000001101000";
        ram[157] = "0b00111101111001110001011111100010";
        ram[158] = "0b10111110001100101110010111000001";
        ram[159] = "0b00111101010001001100101110011010";
        ram[160] = "0b10111110100100111000001101111011";
        ram[161] = "0b00111110010011000010010010000110";
        ram[162] = "0b10111101101101111010001111100001";
        ram[163] = "0b10111101010011000010001010110100";
        ram[164] = "0b00111101001000001111000011100111";
        ram[165] = "0b10111101110100000000011110101001";
        ram[166] = "0b10111101110011101111110111010011";
        ram[167] = "0b00111100110001100111000110011100";
        ram[168] = "0b10111101110000110001001001000100";
        ram[169] = "0b00111100111010001001111101101010";
        ram[170] = "0b00111101111001100111011101110100";
        ram[171] = "0b00111101001000111000010001110011";
        ram[172] = "0b00111100000111111101010111110110";
        ram[173] = "0b10111110100000110000110110011100";
        ram[174] = "0b10111110001011111111000111010010";
        ram[175] = "0b10111110001110111010110101001001";
        ram[176] = "0b00111100001001100000001001110110";
        ram[177] = "0b00111101010101100110110100100011";
        ram[178] = "0b10111101100001110001100101010011";
        ram[179] = "0b10111100100101111110000110010011";
        ram[180] = "0b00111100110110101101110111111110";
        ram[181] = "0b10111110000100011111001111110100";
        ram[182] = "0b10111011111100100000101011010101";
        ram[183] = "0b00111101111000100100010001100010";
        ram[184] = "0b00111100111101101011010111010001";
        ram[185] = "0b00111100000111101111001000001111";
        ram[186] = "0b10111110001101110000110101011011";
        ram[187] = "0b00111101011001011000001001000101";
        ram[188] = "0b00111101001111101010110101011111";
        ram[189] = "0b00111101110001101110000101101101";
        ram[190] = "0b00111100100101000100101110101001";
        ram[191] = "0b10111100010011011101010000101111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiRg6) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiRg6_ram* meminst;


SC_CTOR(conv_2_conv_2_weiRg6) {
meminst = new conv_2_conv_2_weiRg6_ram("conv_2_conv_2_weiRg6_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiRg6() {
    delete meminst;
}


};//endmodule
#endif
