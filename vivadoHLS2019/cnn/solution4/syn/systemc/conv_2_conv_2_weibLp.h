// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibLp_H__
#define __conv_2_conv_2_weibLp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibLp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibLp_ram) {
        ram[0] = "0b10111110100001110001010001011101";
        ram[1] = "0b10111110101011011011101001100001";
        ram[2] = "0b00111101011010100101001011000010";
        ram[3] = "0b00111101010101010111100010010001";
        ram[4] = "0b00111100010101000000011111000010";
        ram[5] = "0b10111110100010000110000010110000";
        ram[6] = "0b10111110010101101011000000011000";
        ram[7] = "0b00111110100010010000101001011010";
        ram[8] = "0b10111101111011001101111101010101";
        ram[9] = "0b10111110000011110000011111000101";
        ram[10] = "0b10111101011110110000001001110101";
        ram[11] = "0b10111101011000110101111110110110";
        ram[12] = "0b10111110001010000110100011100110";
        ram[13] = "0b10111110001100111011100011101111";
        ram[14] = "0b00111101000010010000111011011001";
        ram[15] = "0b00111101101110110010111000101101";
        ram[16] = "0b10111101111010010000111100010001";
        ram[17] = "0b10111110100001101101011110001111";
        ram[18] = "0b10111101001011100101010001111111";
        ram[19] = "0b10111110100100000101110100001000";
        ram[20] = "0b10111101010111001100111101111100";
        ram[21] = "0b10111111000011111111100010011110";
        ram[22] = "0b10111110100001011010010110011011";
        ram[23] = "0b10111101101100010100011100011100";
        ram[24] = "0b10111110001110101110010100100000";
        ram[25] = "0b00111110000010011110001100110101";
        ram[26] = "0b10111110010101100110010111111110";
        ram[27] = "0b10111110011111000100110001001100";
        ram[28] = "0b10111110000110010100110111101001";
        ram[29] = "0b10111110000101110100001000010100";
        ram[30] = "0b00111100110010011010011100000111";
        ram[31] = "0b10111101111011010000010110001011";
        ram[32] = "0b10111101001110010110011000000010";
        ram[33] = "0b00111101011100101101010111110000";
        ram[34] = "0b10111110010000100000101010001110";
        ram[35] = "0b10111110010010100110111001101000";
        ram[36] = "0b00111101110111101100000011011100";
        ram[37] = "0b10111101000100000000001001010101";
        ram[38] = "0b10111101101101010010101110100000";
        ram[39] = "0b00111101001111001110100110100111";
        ram[40] = "0b10111111001100010110010111110001";
        ram[41] = "0b00111110000000000110111100110111";
        ram[42] = "0b10111110000111011010011011100011";
        ram[43] = "0b00111110010100010110101111110111";
        ram[44] = "0b10111100111010101100011111100000";
        ram[45] = "0b10111101111101110100010101100001";
        ram[46] = "0b00111101101111000010111110110001";
        ram[47] = "0b10111110100000011001100011000100";
        ram[48] = "0b10111100110000011101011110011010";
        ram[49] = "0b00111110000100001100110101111010";
        ram[50] = "0b10111101010111110010001000001110";
        ram[51] = "0b10111110001100111110001001110100";
        ram[52] = "0b10111101110101000110101100111010";
        ram[53] = "0b10111111000010000101110011001010";
        ram[54] = "0b10111110110000001011111100111111";
        ram[55] = "0b10111101001001101000110011011000";
        ram[56] = "0b10111100010101010101101101111110";
        ram[57] = "0b10111101111100010010010110101100";
        ram[58] = "0b10111110100010011100110011001101";
        ram[59] = "0b10111110000000000101101001000100";
        ram[60] = "0b00111101101110010110001000101101";
        ram[61] = "0b10111101100111000100010110010101";
        ram[62] = "0b00111101111100011001001010100010";
        ram[63] = "0b00111101111010001110100011010010";
        ram[64] = "0b00111101100101010000000100001011";
        ram[65] = "0b10111110100111001100110110000011";
        ram[66] = "0b10111101010101000010111000010111";
        ram[67] = "0b00111100110001101011111000010011";
        ram[68] = "0b00111011110000011010111101011001";
        ram[69] = "0b10111100111011010110100100011110";
        ram[70] = "0b10111110001111100100001100100000";
        ram[71] = "0b00111101010100101000111110110101";
        ram[72] = "0b00111101101011100111100100010001";
        ram[73] = "0b00111101100100010110000000111101";
        ram[74] = "0b10111011111110010001000011000111";
        ram[75] = "0b00111101101101110001101010000011";
        ram[76] = "0b10111101111110111010001111011100";
        ram[77] = "0b10111110000010001010000100100011";
        ram[78] = "0b00111101100100101101111000110110";
        ram[79] = "0b00111101000110001111000010100111";
        ram[80] = "0b00111101001001010000100111110111";
        ram[81] = "0b00111100110000110111111010111101";
        ram[82] = "0b10111110000010100100001110010101";
        ram[83] = "0b00111100101100111111101110111101";
        ram[84] = "0b10111110001011011000000101000001";
        ram[85] = "0b10111110100001111010001101000001";
        ram[86] = "0b10111101100100101111010011101010";
        ram[87] = "0b10111100101000111010101010101000";
        ram[88] = "0b10111101101110000110110010001101";
        ram[89] = "0b00111100000111001000001000010101";
        ram[90] = "0b00111100001110011010111001100000";
        ram[91] = "0b00111101101101010100011111100111";
        ram[92] = "0b10111011110000010011110001111101";
        ram[93] = "0b10111110011100110101010001101001";
        ram[94] = "0b00111110010000100100011110110100";
        ram[95] = "0b10111101100011001001101011010000";
        ram[96] = "0b00111110000010111000101101111100";
        ram[97] = "0b00111110011011111110001010010110";
        ram[98] = "0b00111101110101010111000000110010";
        ram[99] = "0b10111110000100011101011011111111";
        ram[100] = "0b10111110101000100110101010010110";
        ram[101] = "0b10111110101011000000100011001001";
        ram[102] = "0b10111100011010011110100100111011";
        ram[103] = "0b10111101100000100111001001011010";
        ram[104] = "0b10111111000000011011100110010011";
        ram[105] = "0b10111011111111110010001100100011";
        ram[106] = "0b10111110000001100011010111001010";
        ram[107] = "0b00111101100000010011110110010110";
        ram[108] = "0b00111110001111111111011001110011";
        ram[109] = "0b00111101001000111111001111110010";
        ram[110] = "0b10111100101111111101111000110100";
        ram[111] = "0b00111101011010001000100011110000";
        ram[112] = "0b00111011110111101000000110100111";
        ram[113] = "0b00111011101001010101010001111100";
        ram[114] = "0b00111011101001111110101100001001";
        ram[115] = "0b10111110011000100001001110101100";
        ram[116] = "0b00111100110101101001011011010111";
        ram[117] = "0b10111110101001011011010010100100";
        ram[118] = "0b10111101000100101000011110010001";
        ram[119] = "0b00111110101000010101001001100011";
        ram[120] = "0b00111011100010100010110110101111";
        ram[121] = "0b00111110100010010001011001010110";
        ram[122] = "0b10111110011010001110111001011100";
        ram[123] = "0b00111101110000011001000110000100";
        ram[124] = "0b00111101110000010010010100001110";
        ram[125] = "0b00111101111101110101010101111110";
        ram[126] = "0b10111110000001101000010101011101";
        ram[127] = "0b10111011110010000010101001100010";
        ram[128] = "0b00111101101010010000011010111010";
        ram[129] = "0b10111110011100011100101111010001";
        ram[130] = "0b10111101000111110000011000001000";
        ram[131] = "0b00111110011011011111111000111010";
        ram[132] = "0b10111101100111110110110011001000";
        ram[133] = "0b10111101010100100000110001101010";
        ram[134] = "0b00111101110101100011100111010101";
        ram[135] = "0b10111101100100011100100010100111";
        ram[136] = "0b00111101111011110001001101100000";
        ram[137] = "0b10111100100111111001111011001000";
        ram[138] = "0b10111101111010000010111011010000";
        ram[139] = "0b10111100100001001111001110010000";
        ram[140] = "0b00111110000010010111011010111011";
        ram[141] = "0b00111110000000100001011101000010";
        ram[142] = "0b00111110001001011000110011110100";
        ram[143] = "0b00111110000111101101001110010010";
        ram[144] = "0b00111110000111011111110100110111";
        ram[145] = "0b00111110010100001101101111101111";
        ram[146] = "0b00111101100101110001001110111101";
        ram[147] = "0b10111101010001000111000110000101";
        ram[148] = "0b10111110000110011010101011000010";
        ram[149] = "0b10111110011101001110111110011101";
        ram[150] = "0b10111101000000100011100011011011";
        ram[151] = "0b00111101100001011001001000010110";
        ram[152] = "0b10111100001010110010110001111100";
        ram[153] = "0b00111101110100101001110010000110";
        ram[154] = "0b10111101100011010110001100010001";
        ram[155] = "0b00111110010001000000011111011101";
        ram[156] = "0b00111101101000010110101100101101";
        ram[157] = "0b10111101010111111111110010000001";
        ram[158] = "0b10111100011100011110000110001000";
        ram[159] = "0b00111110001111110110000110000110";
        ram[160] = "0b00111101111110000000010001101100";
        ram[161] = "0b00111101011110111111101011010000";
        ram[162] = "0b00111101011111010011001101101000";
        ram[163] = "0b10111110001100001000101110000110";
        ram[164] = "0b10111110100011001010011001111001";
        ram[165] = "0b00111110000001001100000111110011";
        ram[166] = "0b10111101101110011101010011000110";
        ram[167] = "0b00111101000001100011010110101101";
        ram[168] = "0b10111110100010011000011110010011";
        ram[169] = "0b00111110010010110110010010110111";
        ram[170] = "0b00111101101010101110100110100110";
        ram[171] = "0b00111110000000100000001100001010";
        ram[172] = "0b10111101100110111001111011001010";
        ram[173] = "0b10111101011110101100101010000111";
        ram[174] = "0b00111110100100101011100110011010";
        ram[175] = "0b00111110100110100100010110000100";
        ram[176] = "0b00111101010010101100011011000100";
        ram[177] = "0b00111110011111101000100000010011";
        ram[178] = "0b00111100011001001000000011010011";
        ram[179] = "0b10111110100100011001000110000111";
        ram[180] = "0b10111101101011110110101100000100";
        ram[181] = "0b10111110000111111011110000000010";
        ram[182] = "0b10111101111100101100111011111101";
        ram[183] = "0b10111101101011000010000001100001";
        ram[184] = "0b00111101111011001000011001100001";
        ram[185] = "0b10111110001001000111010111110001";
        ram[186] = "0b10111101110001000010110001101100";
        ram[187] = "0b00111011101110110010100100101110";
        ram[188] = "0b10111101001010101111111101011010";
        ram[189] = "0b00111100110011110111101111100001";
        ram[190] = "0b00111101000110010010100000011000";
        ram[191] = "0b00111101001000010010111011111001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibLp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibLp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibLp) {
meminst = new conv_2_conv_2_weibLp_ram("conv_2_conv_2_weibLp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibLp() {
    delete meminst;
}


};//endmodule
#endif
