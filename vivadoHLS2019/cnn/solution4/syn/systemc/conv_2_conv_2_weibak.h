// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibak_H__
#define __conv_2_conv_2_weibak_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibak_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibak_ram) {
        ram[0] = "0b00111101111010000111011100111100";
        ram[1] = "0b00111101101000110110001111001100";
        ram[2] = "0b10111100100001111000100011101000";
        ram[3] = "0b10111101001010110101001011111011";
        ram[4] = "0b00111101100010010111101110111000";
        ram[5] = "0b10111101000100000111011000110010";
        ram[6] = "0b00111110000001100000110000010100";
        ram[7] = "0b10111110000000011010010111100100";
        ram[8] = "0b00111110000111000010111011011101";
        ram[9] = "0b00111110000001110010100011011010";
        ram[10] = "0b00111110000100101001000010001110";
        ram[11] = "0b10111101101110110111110100010010";
        ram[12] = "0b00111110001100111000011011101101";
        ram[13] = "0b10111100010101111110011101010001";
        ram[14] = "0b00111100100111011011100101000000";
        ram[15] = "0b10111100000011111110110110000010";
        ram[16] = "0b10111101110011101001010111100011";
        ram[17] = "0b10111101010010001010000111100010";
        ram[18] = "0b10111101110110001111000011110001";
        ram[19] = "0b10111100001010111001111000010100";
        ram[20] = "0b10111100010000111110010111001100";
        ram[21] = "0b10111101101101110101000011000010";
        ram[22] = "0b10111110100000111000100100111101";
        ram[23] = "0b10111110101010100011000001100001";
        ram[24] = "0b00111101101000111011011000001000";
        ram[25] = "0b00111100010000101100110011101011";
        ram[26] = "0b10111101010111101000101010101000";
        ram[27] = "0b10111101110010000111001110100101";
        ram[28] = "0b10111011101000100111111110000010";
        ram[29] = "0b00111100100001101111100000110101";
        ram[30] = "0b10111101000101111111001111101111";
        ram[31] = "0b10111100001011001000110011011101";
        ram[32] = "0b00111110000011000000011011001110";
        ram[33] = "0b10111110000101101111000110111000";
        ram[34] = "0b10111101010011010010100101011110";
        ram[35] = "0b00111100110110111001001001101001";
        ram[36] = "0b10111101101000011100010011000001";
        ram[37] = "0b10111101000111110010110000110110";
        ram[38] = "0b00111101110010101001011111101100";
        ram[39] = "0b00111110001001100111010110110110";
        ram[40] = "0b00111110000011001100100111000100";
        ram[41] = "0b00111100000110010110110010100110";
        ram[42] = "0b10111100000010000111010010011111";
        ram[43] = "0b10111101111100111000100101111000";
        ram[44] = "0b00111010111110110110100101011000";
        ram[45] = "0b10111100011001001101010001010110";
        ram[46] = "0b00111101000010100110111001000000";
        ram[47] = "0b00111100100001100100110110100100";
        ram[48] = "0b00111101111001101111001010111011";
        ram[49] = "0b10111101011110110001011100000001";
        ram[50] = "0b00111101111101101101010111000101";
        ram[51] = "0b00111110011110010011000111000010";
        ram[52] = "0b10111101011101110101001000010010";
        ram[53] = "0b10111110101010001110001001101101";
        ram[54] = "0b10111100101001111011110110110111";
        ram[55] = "0b10111101111010010110100111101010";
        ram[56] = "0b10111101111101000110101110100001";
        ram[57] = "0b10111101100101101110001000011110";
        ram[58] = "0b00111101101111010000100001000010";
        ram[59] = "0b00111101000011111101100000011011";
        ram[60] = "0b10111101010011100011111100111000";
        ram[61] = "0b10111110000001101101101110000111";
        ram[62] = "0b00111101000000100111000101100010";
        ram[63] = "0b10111101000110000100111111011000";
        ram[64] = "0b00111101001100010000100110011000";
        ram[65] = "0b00111101101001101000000101100001";
        ram[66] = "0b00111110001100011001001010000100";
        ram[67] = "0b00111101001011101011010101101011";
        ram[68] = "0b10111101011110011101101111111100";
        ram[69] = "0b00111101110110111100001110010111";
        ram[70] = "0b00111101111011010100011010111110";
        ram[71] = "0b10111110001101010001110100011010";
        ram[72] = "0b00111101101010010010011011100111";
        ram[73] = "0b00111100110100111000011101011101";
        ram[74] = "0b00111101101001110001111010001101";
        ram[75] = "0b00111100100011001100011011111110";
        ram[76] = "0b00111100111111001010110001110000";
        ram[77] = "0b00111101000100011100110010100101";
        ram[78] = "0b00111110000101110110011000101000";
        ram[79] = "0b10111100111110101001011111101110";
        ram[80] = "0b00111101000010110110011001000110";
        ram[81] = "0b10111101111100100011000011110001";
        ram[82] = "0b10111011101110000001111011100110";
        ram[83] = "0b10111101110001011001101000110100";
        ram[84] = "0b10111110101011011000001000000011";
        ram[85] = "0b00111011111111100010101101100101";
        ram[86] = "0b00111100101110111101010001101101";
        ram[87] = "0b10111100101101011011000001000011";
        ram[88] = "0b00111101001001111000100001100100";
        ram[89] = "0b00111101111101001010100010001011";
        ram[90] = "0b00111101001001100000000111111100";
        ram[91] = "0b10111110101111100110010101011000";
        ram[92] = "0b00111101100100011011000000000110";
        ram[93] = "0b10111100110000111011101100011000";
        ram[94] = "0b10111011101001111010001111000000";
        ram[95] = "0b10111100111111011100110010110100";
        ram[96] = "0b00111101100001100110110111100011";
        ram[97] = "0b10111101111000110001110001010001";
        ram[98] = "0b10111101011111111101110011001000";
        ram[99] = "0b10111101010101101010011010011110";
        ram[100] = "0b00111110001000110011001100001010";
        ram[101] = "0b10111101101010001001001111101101";
        ram[102] = "0b00111110000110101011101110001110";
        ram[103] = "0b00111101011101011001001100110000";
        ram[104] = "0b10111110001110100111101100110100";
        ram[105] = "0b00111110000111011110110001000101";
        ram[106] = "0b10111101101110000110001110111010";
        ram[107] = "0b00111100101100101110111000000000";
        ram[108] = "0b10111101100010111110111010001111";
        ram[109] = "0b00111101000010101111101111010000";
        ram[110] = "0b00111110011000010110011011010111";
        ram[111] = "0b10111101100100101011111111000011";
        ram[112] = "0b00111101000100111010111000010100";
        ram[113] = "0b10111110011011111011011010010100";
        ram[114] = "0b00111110000111011110100101000100";
        ram[115] = "0b00111110000111100100001110011010";
        ram[116] = "0b00111100110110001011101110010000";
        ram[117] = "0b10111101111000111000011101111111";
        ram[118] = "0b10111101000111100000011111111001";
        ram[119] = "0b10111101000010110001000001100110";
        ram[120] = "0b10111101100110010011010011000101";
        ram[121] = "0b10111110000010011111001111101000";
        ram[122] = "0b10111110000111000011011101011111";
        ram[123] = "0b10111101010100111011011001110110";
        ram[124] = "0b00111101000010111011111010110111";
        ram[125] = "0b10111101000100110110000111110111";
        ram[126] = "0b10111110001011111110001011110010";
        ram[127] = "0b10111101100000100110010011011001";
        ram[128] = "0b00111011111010010001001111000100";
        ram[129] = "0b00111101010101100011010100010001";
        ram[130] = "0b00111101100101001101010100110000";
        ram[131] = "0b10111101010111101111000110110001";
        ram[132] = "0b00111011111010010001011010110010";
        ram[133] = "0b10111101111001011110101101110010";
        ram[134] = "0b10111101100000010010110001010011";
        ram[135] = "0b10111101100110101111110100101100";
        ram[136] = "0b10111100110111110111100111101011";
        ram[137] = "0b10111110001001101100001010011100";
        ram[138] = "0b10111110100000111011010101100101";
        ram[139] = "0b10111110001101111001110111010111";
        ram[140] = "0b00111110000011010000000101111101";
        ram[141] = "0b00111101101111000110010001110010";
        ram[142] = "0b00111100101111011101001110011011";
        ram[143] = "0b10111101011100110100100010010110";
        ram[144] = "0b00111100101100101111011101101000";
        ram[145] = "0b10111110001110110101011011110101";
        ram[146] = "0b00111101101000000001000111011100";
        ram[147] = "0b00111101110011101011001111001010";
        ram[148] = "0b10111110001110000010101000001010";
        ram[149] = "0b10111100111111100011011100000101";
        ram[150] = "0b00111100001100110011010111110011";
        ram[151] = "0b00111110000000100000000111101010";
        ram[152] = "0b00111101101101000011100101111111";
        ram[153] = "0b10111101101101000000101110001110";
        ram[154] = "0b10111110001000010000010000110101";
        ram[155] = "0b00111101100110101010111100100011";
        ram[156] = "0b00111100111100000011111110110111";
        ram[157] = "0b10111101001000011111110011101010";
        ram[158] = "0b00111101111111010000111000001001";
        ram[159] = "0b00111101110101010111000110000010";
        ram[160] = "0b10111110111011001010000011110001";
        ram[161] = "0b10111101010101010101001001001111";
        ram[162] = "0b10111110001001111000010000100110";
        ram[163] = "0b10111100100011111001111001100000";
        ram[164] = "0b00111110001011001010101100010000";
        ram[165] = "0b10111110011110101101000011100110";
        ram[166] = "0b10111100000111001000101110101000";
        ram[167] = "0b10111101111000011001001010011011";
        ram[168] = "0b00111101011111111101100101001000";
        ram[169] = "0b00111101111000010011010101110110";
        ram[170] = "0b10111110000001101000001100011001";
        ram[171] = "0b10111010010110101001011101101000";
        ram[172] = "0b10111101111100101011000110010010";
        ram[173] = "0b10111110100111100101110100101110";
        ram[174] = "0b10111101010111110100101101100010";
        ram[175] = "0b10111100101011001111000010011110";
        ram[176] = "0b00111100100001101100001001000010";
        ram[177] = "0b10111010110101100010010011101000";
        ram[178] = "0b00111110001101000011101100110110";
        ram[179] = "0b10111110000100000110101000001110";
        ram[180] = "0b10111101111100111100100101111010";
        ram[181] = "0b00111110001010001111111010000001";
        ram[182] = "0b00111011101011100110110000101000";
        ram[183] = "0b00111110100010100001110111111110";
        ram[184] = "0b10111101101001100011011000101000";
        ram[185] = "0b10111101011011101101110000111101";
        ram[186] = "0b10111110011000111101011010000010";
        ram[187] = "0b10111101011010101000010011010110";
        ram[188] = "0b00111110010110111111001100000111";
        ram[189] = "0b00111110011111100110100101111111";
        ram[190] = "0b10111101000000110000000110000001";
        ram[191] = "0b10111110001000010100001011011100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibak) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibak_ram* meminst;


SC_CTOR(conv_2_conv_2_weibak) {
meminst = new conv_2_conv_2_weibak_ram("conv_2_conv_2_weibak_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibak() {
    delete meminst;
}


};//endmodule
#endif
