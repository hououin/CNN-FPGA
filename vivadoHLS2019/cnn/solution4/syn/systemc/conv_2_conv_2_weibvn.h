// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibvn_H__
#define __conv_2_conv_2_weibvn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibvn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibvn_ram) {
        ram[0] = "0b10111011111001100001010110101011";
        ram[1] = "0b10111110001110011000001001000011";
        ram[2] = "0b10111101001100011010011100100111";
        ram[3] = "0b10111101110011101100101000010001";
        ram[4] = "0b00111101010001100110010110100111";
        ram[5] = "0b00111100010110101011001001001001";
        ram[6] = "0b00111100101101001010000110111011";
        ram[7] = "0b10111101000000000101011001100101";
        ram[8] = "0b00111011011001100001101010010010";
        ram[9] = "0b10111100011010011110111000110010";
        ram[10] = "0b00111100111011011001011111000010";
        ram[11] = "0b10111001100111010100001000111011";
        ram[12] = "0b10111100100001000100011010110110";
        ram[13] = "0b00111110000101011110110101110111";
        ram[14] = "0b10111101101001001011101111010001";
        ram[15] = "0b00111101011000100001000110011111";
        ram[16] = "0b00111101100111111001101111101001";
        ram[17] = "0b00111101100011001011101111000111";
        ram[18] = "0b00111011100010011010111010000101";
        ram[19] = "0b10111110000010000110000011100110";
        ram[20] = "0b10111100111101100010111000100000";
        ram[21] = "0b00111011110110101101001110100111";
        ram[22] = "0b00111011111001110100111011100100";
        ram[23] = "0b10111100001111111010000010101011";
        ram[24] = "0b10111100100101010100110011001101";
        ram[25] = "0b10111101111111001000110000011100";
        ram[26] = "0b10111110000101001001111000000010";
        ram[27] = "0b10111110011101010111011011110100";
        ram[28] = "0b00111100110101100101111110000111";
        ram[29] = "0b10111110011000101110001001111110";
        ram[30] = "0b00111101101000000010001101110111";
        ram[31] = "0b10111110011000010010010110100101";
        ram[32] = "0b00111101000000101000101110101100";
        ram[33] = "0b00111100000110000011110011001000";
        ram[34] = "0b00111101100111001000000011010000";
        ram[35] = "0b10111101110111100011111011000010";
        ram[36] = "0b10111110000111011001110011101001";
        ram[37] = "0b10111101110111000010000100001100";
        ram[38] = "0b10111100110011111011010110101011";
        ram[39] = "0b00111100100110110010000010100101";
        ram[40] = "0b10111100010001101010010100001000";
        ram[41] = "0b00111101010110000110101001000011";
        ram[42] = "0b00111100101100010100011001000000";
        ram[43] = "0b10111101010111000110100101010001";
        ram[44] = "0b00111100111110111001011000011011";
        ram[45] = "0b00111110001000010011011100001000";
        ram[46] = "0b00111101101010100001111000010110";
        ram[47] = "0b00111010001110011100101101110001";
        ram[48] = "0b10111101100111000100111011111011";
        ram[49] = "0b10111101111111100010100001100011";
        ram[50] = "0b00111101001100000110010001101101";
        ram[51] = "0b10111110001111101100100110011111";
        ram[52] = "0b10111110000001010011001111100101";
        ram[53] = "0b00111101111010010010000010000101";
        ram[54] = "0b10111101000101011101010101110011";
        ram[55] = "0b00111101110000111010101001011000";
        ram[56] = "0b00111100100101000010100001001001";
        ram[57] = "0b00111101000111011010011110001110";
        ram[58] = "0b00111101100111101011101100011010";
        ram[59] = "0b00111101110000111001100101001010";
        ram[60] = "0b10111100100011100010011000111010";
        ram[61] = "0b00111100111001001001111001000000";
        ram[62] = "0b10111110000111111101110101111011";
        ram[63] = "0b10111101101001011111111101010001";
        ram[64] = "0b00111101001110100011001011001110";
        ram[65] = "0b10111101101011010101010100010011";
        ram[66] = "0b10111101101101111000000001100010";
        ram[67] = "0b00111100110000010100001110101000";
        ram[68] = "0b00111101111010011110110011010001";
        ram[69] = "0b10111101001111010101111100001010";
        ram[70] = "0b10111101011101001010001001100000";
        ram[71] = "0b10111101011011001010110100001110";
        ram[72] = "0b10111101011001010010010110101100";
        ram[73] = "0b00111101011011111011011000101101";
        ram[74] = "0b10111110010010100110111001001100";
        ram[75] = "0b00111100100011010010101011011001";
        ram[76] = "0b10111101110000011100010111000100";
        ram[77] = "0b10111100111101000011011110011011";
        ram[78] = "0b10111011111000111111001111101101";
        ram[79] = "0b10111101100111101111101010011100";
        ram[80] = "0b00111101101101110100111110111100";
        ram[81] = "0b10111101001010111010100110111100";
        ram[82] = "0b10111100011001011001100110011001";
        ram[83] = "0b00111100101110100110101111011100";
        ram[84] = "0b10111110000010010100111111110000";
        ram[85] = "0b00111011010101110001000111111010";
        ram[86] = "0b00111011101011110101100000000001";
        ram[87] = "0b00111100101000101001110101101111";
        ram[88] = "0b10111100110010011011010100011011";
        ram[89] = "0b10111101101011001100000100011101";
        ram[90] = "0b00111101111011000011100110010000";
        ram[91] = "0b00111101011010001100011100100000";
        ram[92] = "0b10111110010001110110110110111101";
        ram[93] = "0b10111101010111110100101100100101";
        ram[94] = "0b10111101010011111000001010100011";
        ram[95] = "0b10111101101110100111001001110011";
        ram[96] = "0b00111011100000101111110000000111";
        ram[97] = "0b10111101111110010111001100100011";
        ram[98] = "0b00111101100100111000010101100011";
        ram[99] = "0b10111101001110010001110110110110";
        ram[100] = "0b10111101100010100111110001101011";
        ram[101] = "0b10111110000001000001100001000111";
        ram[102] = "0b10111101101010010010001001100000";
        ram[103] = "0b10111100100010110000000110110001";
        ram[104] = "0b00111110000010101001000101011001";
        ram[105] = "0b10111101111011001101101110000000";
        ram[106] = "0b00111110001010000100011110110101";
        ram[107] = "0b10111101100100011100011101111111";
        ram[108] = "0b00111101101010101011010101000100";
        ram[109] = "0b00111101011000011010011001011010";
        ram[110] = "0b00111100110101010101010100010110";
        ram[111] = "0b10111101100000111011110010000110";
        ram[112] = "0b00111101000010000101110001010100";
        ram[113] = "0b00111100101100000001011001100011";
        ram[114] = "0b00111101010010010110100100000110";
        ram[115] = "0b10111101101001011110000111001010";
        ram[116] = "0b10111100111011000001101011001110";
        ram[117] = "0b00111101010001101001111011010110";
        ram[118] = "0b00111110000010111100111101111010";
        ram[119] = "0b10111101100011101001111010010110";
        ram[120] = "0b10111101101011101110000101000110";
        ram[121] = "0b00111101101010001000011111001110";
        ram[122] = "0b00111101101010110011101111110100";
        ram[123] = "0b00111100111001000000101000101011";
        ram[124] = "0b10111101111000010110011110101011";
        ram[125] = "0b10111101110010010100111111011100";
        ram[126] = "0b00111101011100011010101001010110";
        ram[127] = "0b10111101011001000000000001100011";
        ram[128] = "0b00111101010001010000011011100111";
        ram[129] = "0b10111110101000110101000111101010";
        ram[130] = "0b00111100101110111011001010001101";
        ram[131] = "0b10111011101101010000001110000011";
        ram[132] = "0b00111101111111100111100101001110";
        ram[133] = "0b10111110011100101110100010100111";
        ram[134] = "0b00111100110100001000111001000000";
        ram[135] = "0b00111101101001100000000111011000";
        ram[136] = "0b00111101111101011101111011111100";
        ram[137] = "0b10111110011110001001110111101001";
        ram[138] = "0b10111101101100110101100001111111";
        ram[139] = "0b10111101100100000010111010000000";
        ram[140] = "0b00111101010001001011110010000101";
        ram[141] = "0b10111100101100010011101100100010";
        ram[142] = "0b00111101100100011110111000011000";
        ram[143] = "0b10111101011111001100010001010001";
        ram[144] = "0b10111101101011010100110011111011";
        ram[145] = "0b10111101100110110110111101110101";
        ram[146] = "0b10111110100110001110111100000111";
        ram[147] = "0b00111101100001110000101111110110";
        ram[148] = "0b00111101001011101110010100010000";
        ram[149] = "0b00111101011000100111110001001101";
        ram[150] = "0b10111100101011010010001101001011";
        ram[151] = "0b00111011110010100110110001110010";
        ram[152] = "0b00111101001011111111101010000110";
        ram[153] = "0b10111011001100100110101010110001";
        ram[154] = "0b10111110010000101010000110101110";
        ram[155] = "0b00111101010110111010000111100011";
        ram[156] = "0b00111100111101110111101011000010";
        ram[157] = "0b10111100110000100100110111010110";
        ram[158] = "0b10111110010011110110101000101110";
        ram[159] = "0b10111101010000001010011101011001";
        ram[160] = "0b10111110011110000001100010101001";
        ram[161] = "0b10111101010111011011101111010111";
        ram[162] = "0b10111110001100000001010010011001";
        ram[163] = "0b10111110100011001000011101110101";
        ram[164] = "0b10111100111011111100001000000111";
        ram[165] = "0b00111110010000000110011110100010";
        ram[166] = "0b00111101101100110011101111101000";
        ram[167] = "0b00111100110101101000010111001111";
        ram[168] = "0b00111101010011000001001101000010";
        ram[169] = "0b00111100000001001000011011001011";
        ram[170] = "0b00111101011110010000000111010110";
        ram[171] = "0b10111100110111010101111111001110";
        ram[172] = "0b00111101010111010001100010110100";
        ram[173] = "0b10111110010000101000000111111110";
        ram[174] = "0b00111101101101011010001111111101";
        ram[175] = "0b10111101101010110100000100101101";
        ram[176] = "0b00111011111001000010100101111010";
        ram[177] = "0b00111101110010111011111111011000";
        ram[178] = "0b00111100100110101100111111101011";
        ram[179] = "0b10111101101010010110000001000111";
        ram[180] = "0b00111101101111011011011000101100";
        ram[181] = "0b00111101101110001000110000111001";
        ram[182] = "0b00111100111000010111101110110001";
        ram[183] = "0b10111110001001011111101001001100";
        ram[184] = "0b10111101000100000001000111110100";
        ram[185] = "0b00111100100011101111001011000010";
        ram[186] = "0b00111110001110110111010011011011";
        ram[187] = "0b00111101010111010011000010101001";
        ram[188] = "0b10111101100100011101100100010000";
        ram[189] = "0b10111101100100001100100100010110";
        ram[190] = "0b00111101011001101000101110110110";
        ram[191] = "0b10111100111011110001111111100100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibvn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibvn_ram* meminst;


SC_CTOR(conv_2_conv_2_weibvn) {
meminst = new conv_2_conv_2_weibvn_ram("conv_2_conv_2_weibvn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibvn() {
    delete meminst;
}


};//endmodule
#endif
