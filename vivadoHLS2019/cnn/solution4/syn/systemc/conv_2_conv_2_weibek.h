// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibek_H__
#define __conv_2_conv_2_weibek_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibek_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibek_ram) {
        ram[0] = "0b00111101011011110101010110100000";
        ram[1] = "0b10111100101001110100111110111111";
        ram[2] = "0b10111110010101010111001001101010";
        ram[3] = "0b00111110001101100010010001101100";
        ram[4] = "0b00111100110000001110101011010011";
        ram[5] = "0b00111101000100000101111010001010";
        ram[6] = "0b00111101000011010011110000011100";
        ram[7] = "0b10111110010101111001110101100110";
        ram[8] = "0b00111110001110000001010101100101";
        ram[9] = "0b00111101000001010011001000100111";
        ram[10] = "0b00111100110110100011100101010110";
        ram[11] = "0b10111101000001001100000011001010";
        ram[12] = "0b10111101000011000010011001110101";
        ram[13] = "0b00111100100111101110110101111110";
        ram[14] = "0b00111110001000110111001101010000";
        ram[15] = "0b00111110011101011010100111001111";
        ram[16] = "0b10111100111111110111100011111100";
        ram[17] = "0b10111100100100100110101110011110";
        ram[18] = "0b10111110000010000100011110101100";
        ram[19] = "0b10111101001111110111010111100000";
        ram[20] = "0b00111110000100010001100011101101";
        ram[21] = "0b10111101100111011110000001101111";
        ram[22] = "0b10111101100101111010010011011011";
        ram[23] = "0b00111101000111101101100011010111";
        ram[24] = "0b10111101111011000000010101001011";
        ram[25] = "0b00111101100000010010010001010001";
        ram[26] = "0b00111110001100101011010001011110";
        ram[27] = "0b10111101110000101011000110110101";
        ram[28] = "0b00111101001100111001101000010010";
        ram[29] = "0b10111101010011001110100101110000";
        ram[30] = "0b10111110000000100111010100001010";
        ram[31] = "0b10111101111100100101010001100101";
        ram[32] = "0b00111101110000100101000010100101";
        ram[33] = "0b10111110010010000101111011101010";
        ram[34] = "0b00111110001000000000110110101001";
        ram[35] = "0b00111110000011110001010000001011";
        ram[36] = "0b00111011100101110011001111010101";
        ram[37] = "0b00111101010111100101010000011100";
        ram[38] = "0b10111101110011100100100110011111";
        ram[39] = "0b00111100101010110111100011000110";
        ram[40] = "0b10111110100010101111011010000010";
        ram[41] = "0b00111110001001000010101110010100";
        ram[42] = "0b10111101110101001100011010101010";
        ram[43] = "0b00111110100010111111011000110011";
        ram[44] = "0b00111101101001000100001111101010";
        ram[45] = "0b00111101100010001111010100100011";
        ram[46] = "0b10111101101001000101000110100001";
        ram[47] = "0b10111100011001100000101101110100";
        ram[48] = "0b10111110000010110011000000110001";
        ram[49] = "0b10111110001010110010001111011000";
        ram[50] = "0b10111101010010110100110000010011";
        ram[51] = "0b10111011111111011010001011100000";
        ram[52] = "0b10111110010111001111100110110000";
        ram[53] = "0b00111101110010101100101000111100";
        ram[54] = "0b10111101100110011010111111010011";
        ram[55] = "0b10111110010101001010100010000101";
        ram[56] = "0b10111100100101010010100100100011";
        ram[57] = "0b10111101011000110000100000001011";
        ram[58] = "0b10111110000001000110110101011101";
        ram[59] = "0b10111101100000010000010001011110";
        ram[60] = "0b00111101000011111000100011111001";
        ram[61] = "0b00111101011100111101101110001000";
        ram[62] = "0b00111101101010111111101100111010";
        ram[63] = "0b00111110000111111101101000101010";
        ram[64] = "0b00111101111100101000101011100000";
        ram[65] = "0b10111100010011001000101111111011";
        ram[66] = "0b10111011110011001010101000000010";
        ram[67] = "0b10111100101011000100110011111001";
        ram[68] = "0b00111100110110011011011110101001";
        ram[69] = "0b00111101101001001111000000001110";
        ram[70] = "0b10111100010001111100101110110001";
        ram[71] = "0b00111100110111111101100000100110";
        ram[72] = "0b00111101100010111110011011001000";
        ram[73] = "0b10111110001000000011001101011111";
        ram[74] = "0b00111100110000001111110001001011";
        ram[75] = "0b10111110001001011100011101010010";
        ram[76] = "0b10111101100000010000110001000010";
        ram[77] = "0b00111101101001010001011001110010";
        ram[78] = "0b00111101110100011110111101000101";
        ram[79] = "0b00111100111001010011011101000001";
        ram[80] = "0b00111101010011001111010101000101";
        ram[81] = "0b00111100010011011110100100010001";
        ram[82] = "0b00111101010001110110100011010110";
        ram[83] = "0b00111100100100010011111001100010";
        ram[84] = "0b10111110000101101100000001101010";
        ram[85] = "0b10111110001000010100111000110101";
        ram[86] = "0b00111101111100100110011101010100";
        ram[87] = "0b10111101111101010011100111111100";
        ram[88] = "0b00111101111101000111100010001001";
        ram[89] = "0b10111101111111011101110011100011";
        ram[90] = "0b10111101011110010101111101110011";
        ram[91] = "0b00111100011011010100000111000000";
        ram[92] = "0b00111101101111000010000001110011";
        ram[93] = "0b10111101011110001111001100101100";
        ram[94] = "0b10111001101000111110110111100000";
        ram[95] = "0b00111100010010000001110000110000";
        ram[96] = "0b10111101100100101101000100001110";
        ram[97] = "0b10111101000101000000011001110111";
        ram[98] = "0b10111100000101101101011011100100";
        ram[99] = "0b10111110000000111011110000010001";
        ram[100] = "0b10111101001000100010010110000110";
        ram[101] = "0b00111100110011111001010001101000";
        ram[102] = "0b10111101100000111000111101110001";
        ram[103] = "0b10111100110100001010101100001010";
        ram[104] = "0b10111110000101011101001011010010";
        ram[105] = "0b10111101000111010111111000101110";
        ram[106] = "0b00111101011010101101101101000000";
        ram[107] = "0b00111101000001000011100101000110";
        ram[108] = "0b10111101100001111010100111110011";
        ram[109] = "0b10111100110001110101100100010110";
        ram[110] = "0b00111101001011110001011111111100";
        ram[111] = "0b10111101010111101010001011001011";
        ram[112] = "0b10111101000010010000111000110001";
        ram[113] = "0b10111101111010100101100111100001";
        ram[114] = "0b00111101100010110011011010000111";
        ram[115] = "0b00111011011010011101111111110110";
        ram[116] = "0b10111100111100001101111010000101";
        ram[117] = "0b10111011100000001100001110010011";
        ram[118] = "0b10111101110000010011100110011101";
        ram[119] = "0b10111101100110111001111000100101";
        ram[120] = "0b00111110010010000111001010001011";
        ram[121] = "0b00111100101001101100101101100101";
        ram[122] = "0b10111110100111101111000000111101";
        ram[123] = "0b00111101110011011110101101010010";
        ram[124] = "0b00111101111010100100111011010100";
        ram[125] = "0b10111100010001101010110010000100";
        ram[126] = "0b10111110000010000100100111110010";
        ram[127] = "0b00111101111000011001000111011111";
        ram[128] = "0b00111101011011011110001100001011";
        ram[129] = "0b00111110010011001010011000000000";
        ram[130] = "0b00111101010101011101001011010111";
        ram[131] = "0b10111100001101101000111001101111";
        ram[132] = "0b10111011110100001010011011010111";
        ram[133] = "0b10111110001010110100000000100000";
        ram[134] = "0b10111110011000001000111000110010";
        ram[135] = "0b00111100001101001011110111101000";
        ram[136] = "0b10111101101010010000100110011100";
        ram[137] = "0b10111110001001111001111100100011";
        ram[138] = "0b10111110011010111101011100000011";
        ram[139] = "0b10111110010100101010000100001010";
        ram[140] = "0b10111101110110010111000010010100";
        ram[141] = "0b00111101010000101011110101011100";
        ram[142] = "0b10111101010111001001111001101111";
        ram[143] = "0b10111101100010111011100110100001";
        ram[144] = "0b00111011111001111110100000010111";
        ram[145] = "0b10111101011101011011111111111111";
        ram[146] = "0b00111101110110000000000011000111";
        ram[147] = "0b00111101010011011010000010011001";
        ram[148] = "0b10111100010011000101000001010011";
        ram[149] = "0b00111101111100001010001101100101";
        ram[150] = "0b00111110000001001010111010010011";
        ram[151] = "0b10111110010100110111001000100110";
        ram[152] = "0b10111101011111011110111100110101";
        ram[153] = "0b10111101111111010101000010101100";
        ram[154] = "0b10111101111000101001001011011101";
        ram[155] = "0b00111100000111101101000110001101";
        ram[156] = "0b10111101011101111111000101000011";
        ram[157] = "0b00111101101110010000100110010001";
        ram[158] = "0b00111101111100000000011010011000";
        ram[159] = "0b10111101110011011000010100100110";
        ram[160] = "0b10111110011010111001010111000110";
        ram[161] = "0b00111101001000001100000011110011";
        ram[162] = "0b10111110100111100101001010011110";
        ram[163] = "0b10111101110101110010100111111001";
        ram[164] = "0b10111100101100100011101001010011";
        ram[165] = "0b10111110000100110100110001100110";
        ram[166] = "0b10111101010101111100011110110100";
        ram[167] = "0b00111011111101101101011001010001";
        ram[168] = "0b00111110010110000010001110001000";
        ram[169] = "0b10111110011011011101100101100011";
        ram[170] = "0b00111101011010001000010111000011";
        ram[171] = "0b10111101101100010001011110001101";
        ram[172] = "0b00111100001000011111110110001100";
        ram[173] = "0b10111110010110011110111101010001";
        ram[174] = "0b10111110001111001010010110100111";
        ram[175] = "0b10111101111001101010111101011000";
        ram[176] = "0b00111101101011010000001001111101";
        ram[177] = "0b00111101101100011000010110111100";
        ram[178] = "0b10111101000000111010111010101111";
        ram[179] = "0b00111011100011100111000001110001";
        ram[180] = "0b10111101000101000010101000000000";
        ram[181] = "0b00111101011011000111111000110001";
        ram[182] = "0b10111101111100011110100110011101";
        ram[183] = "0b00111101000001010110110011010011";
        ram[184] = "0b00111101011000110011111001010100";
        ram[185] = "0b10111101000011001001010001110011";
        ram[186] = "0b10111101110001101100010011111111";
        ram[187] = "0b10111101101011100010000001000011";
        ram[188] = "0b00111110001010000101000000100010";
        ram[189] = "0b10111101101010010111000111100101";
        ram[190] = "0b00111110001000110111110111001101";
        ram[191] = "0b00111101011100001001001100001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibek) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibek_ram* meminst;


SC_CTOR(conv_2_conv_2_weibek) {
meminst = new conv_2_conv_2_weibek_ram("conv_2_conv_2_weibek_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibek() {
    delete meminst;
}


};//endmodule
#endif
