// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibdk_H__
#define __conv_2_conv_2_weibdk_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibdk_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibdk_ram) {
        ram[0] = "0b00111101000010101100011110101110";
        ram[1] = "0b10111100111010011001001000000101";
        ram[2] = "0b00111101110010101100011010000101";
        ram[3] = "0b10111101100000101110010110010101";
        ram[4] = "0b10111101100101100010110010100110";
        ram[5] = "0b10111101100101111011110000101110";
        ram[6] = "0b00111101111101101001110001001011";
        ram[7] = "0b10111101100111010010010110000100";
        ram[8] = "0b00111101010110001100000000111010";
        ram[9] = "0b00111100111100111110100011101111";
        ram[10] = "0b00111101110111010100001110011110";
        ram[11] = "0b00111101011001110110000000100000";
        ram[12] = "0b00111100100110100100011000010001";
        ram[13] = "0b10111100110000111100001101110101";
        ram[14] = "0b00111100010100100000011110110001";
        ram[15] = "0b00111110000100100100011001111011";
        ram[16] = "0b00111101011001000111000000100110";
        ram[17] = "0b10111101010010001100000110000000";
        ram[18] = "0b00111101010011001111000010011110";
        ram[19] = "0b10111101011001110010100110111000";
        ram[20] = "0b00111101100110111001000110101000";
        ram[21] = "0b10111101110110100100010010010010";
        ram[22] = "0b10111101000111011001001001111110";
        ram[23] = "0b10111101100010111100001011111110";
        ram[24] = "0b00111101011111110000010110011110";
        ram[25] = "0b00111100110011001111110000011101";
        ram[26] = "0b10111100101101111110001110001101";
        ram[27] = "0b10111101110001001011010011000110";
        ram[28] = "0b10111011001001010111111111101001";
        ram[29] = "0b00111101100110011100010100110100";
        ram[30] = "0b00111110000000110101101101010100";
        ram[31] = "0b00111100011001111100000110010010";
        ram[32] = "0b00111100001001011101101000011001";
        ram[33] = "0b10111110001100000111010010001011";
        ram[34] = "0b10111100100100100111010110101100";
        ram[35] = "0b10111110011110110101001100101010";
        ram[36] = "0b00111101110000110111101101101010";
        ram[37] = "0b10111101100010100111101011101011";
        ram[38] = "0b00111101100010111100000111011000";
        ram[39] = "0b10111101000101101111111011111100";
        ram[40] = "0b10111101011010000111001010101101";
        ram[41] = "0b00111101110111110111010011111100";
        ram[42] = "0b00111110000000101000111110110011";
        ram[43] = "0b00111101111001101111000100101000";
        ram[44] = "0b00111101111010110011010111010010";
        ram[45] = "0b00111101010100101101010000010000";
        ram[46] = "0b00111101101101010101101011110111";
        ram[47] = "0b00111101001000110111110010110110";
        ram[48] = "0b00111101101100111111010001000110";
        ram[49] = "0b00111100100100110100111011100111";
        ram[50] = "0b00111110000010101111010011001000";
        ram[51] = "0b10111101101001101001101000101001";
        ram[52] = "0b10111110001001100110000110111011";
        ram[53] = "0b10111101101011001100100110100100";
        ram[54] = "0b10111110000000110000101000111010";
        ram[55] = "0b10111110000010101010010011100111";
        ram[56] = "0b00111101111011010010001001101000";
        ram[57] = "0b00111101100111101001101101011101";
        ram[58] = "0b10111101110100111010010110001011";
        ram[59] = "0b00111100110101110000101111101010";
        ram[60] = "0b10111100010010100111110110100111";
        ram[61] = "0b10111101101101001011101110100000";
        ram[62] = "0b00111100101000010010111011010010";
        ram[63] = "0b00111101011101111111111001011101";
        ram[64] = "0b00111101001001010000001101111101";
        ram[65] = "0b10111101110101111000010000000111";
        ram[66] = "0b10111101100001000001011110001001";
        ram[67] = "0b00111101101011011100100110110000";
        ram[68] = "0b10111100010110000010001111000000";
        ram[69] = "0b00111100001001000010001101101011";
        ram[70] = "0b10111100100110000101010110100101";
        ram[71] = "0b00111101010100101011111001101010";
        ram[72] = "0b00111101101001011011011010001000";
        ram[73] = "0b10111100111111001100001101100011";
        ram[74] = "0b10111110000110011001001111110111";
        ram[75] = "0b10111110000000101100111010100001";
        ram[76] = "0b10111101101110111100000000000110";
        ram[77] = "0b00111100100000101100010001000110";
        ram[78] = "0b10111110000001100000111101001111";
        ram[79] = "0b10111100101000000011110110110001";
        ram[80] = "0b00111101110001101001001010000010";
        ram[81] = "0b00111100011111001010100011000110";
        ram[82] = "0b00111101110101101001001100011111";
        ram[83] = "0b10111011010010000001110110110000";
        ram[84] = "0b00111101011010001001110000001110";
        ram[85] = "0b10111100100000100001011101100110";
        ram[86] = "0b00111101100001101100011010101010";
        ram[87] = "0b10111110011010001001110110101110";
        ram[88] = "0b10111100101011001010100111011000";
        ram[89] = "0b00111100110011100100010110111011";
        ram[90] = "0b00111110000101101111111000101011";
        ram[91] = "0b00111101010110000110111010100100";
        ram[92] = "0b10111110000101110001001001011001";
        ram[93] = "0b10111110000010101010111011110001";
        ram[94] = "0b10111101010000000101110001001100";
        ram[95] = "0b00111101111001011001111010110001";
        ram[96] = "0b00111101100010011010110001001100";
        ram[97] = "0b00111101111111000111011111011110";
        ram[98] = "0b00111101010101110111010011100001";
        ram[99] = "0b10111110000100010001000010100001";
        ram[100] = "0b00111100100000001010110101101101";
        ram[101] = "0b10111110000111110010000100000010";
        ram[102] = "0b10111110000110011110101110110001";
        ram[103] = "0b00111100101001011111000001110010";
        ram[104] = "0b10111100000001000010110110000000";
        ram[105] = "0b00111100110001111111000010010111";
        ram[106] = "0b00111110000000100101000111111101";
        ram[107] = "0b00111011011100111110001010100000";
        ram[108] = "0b10111110000101011110000101101010";
        ram[109] = "0b00111100100101100001011101100000";
        ram[110] = "0b10111110000001110000111110011100";
        ram[111] = "0b10111110001011001101010000101111";
        ram[112] = "0b00111101000000101100101001111001";
        ram[113] = "0b00111101010101011010001001110101";
        ram[114] = "0b00111101101111110010010000111110";
        ram[115] = "0b10111110001111000101010001011110";
        ram[116] = "0b10111101000010001001000101001011";
        ram[117] = "0b10111101110111110100000111011110";
        ram[118] = "0b10111101110101001100110101001010";
        ram[119] = "0b10111010000100101011011110000100";
        ram[120] = "0b10111100011010110110010000000100";
        ram[121] = "0b10111101100011000000100111111010";
        ram[122] = "0b10111100101011010011111111001111";
        ram[123] = "0b00111100100000011010001101110010";
        ram[124] = "0b10111101001100000010111000101011";
        ram[125] = "0b00111101001110110000010101001100";
        ram[126] = "0b00111110001100011011010100100011";
        ram[127] = "0b00111100010011001100001100101110";
        ram[128] = "0b10111110000001100010001101000111";
        ram[129] = "0b10111100110110000100010001010000";
        ram[130] = "0b10111101111001001000110110111001";
        ram[131] = "0b10111101100011001011001001100110";
        ram[132] = "0b10111101001000010100111011110110";
        ram[133] = "0b10111110010010010000001101010000";
        ram[134] = "0b10111101101011101110111101101011";
        ram[135] = "0b00111101111100001001101110111010";
        ram[136] = "0b00111110011000001101111000101011";
        ram[137] = "0b10111110100110000000011100000011";
        ram[138] = "0b10111110001011100110110110100101";
        ram[139] = "0b10111110010001011101001011011001";
        ram[140] = "0b10111101000100011101110011001000";
        ram[141] = "0b10111101101101100001111101001100";
        ram[142] = "0b00111110100101111001100011010011";
        ram[143] = "0b00111101011101010011001001011011";
        ram[144] = "0b00111011110001011001011000010001";
        ram[145] = "0b00111101001000100100001101011100";
        ram[146] = "0b00111101111001100001010101000100";
        ram[147] = "0b00111101001001000011101000001100";
        ram[148] = "0b00111011111011100110101110011001";
        ram[149] = "0b00111101100001010001111000110101";
        ram[150] = "0b00111101001011101010001000011101";
        ram[151] = "0b10111110100001110111011110000010";
        ram[152] = "0b00111011001000011111001101010010";
        ram[153] = "0b10111101000011010111001010010111";
        ram[154] = "0b00111101100101000001101001000100";
        ram[155] = "0b10111100101100100000111000101011";
        ram[156] = "0b00111101101001011100100111001110";
        ram[157] = "0b10111100110011100010110101000011";
        ram[158] = "0b10111100110110111010111011111100";
        ram[159] = "0b10111101010001111000110000110111";
        ram[160] = "0b10111101110100111100001111001101";
        ram[161] = "0b00111101001101110101001111110010";
        ram[162] = "0b10111110001000100001010010101000";
        ram[163] = "0b10111101000000101010010011010001";
        ram[164] = "0b10111101011001100001110011000101";
        ram[165] = "0b10111101100000001110111001000110";
        ram[166] = "0b10111101111101100000110010001000";
        ram[167] = "0b00111101100110101001011001010011";
        ram[168] = "0b00111110001001001111111011111010";
        ram[169] = "0b10111110000011011101000110000000";
        ram[170] = "0b10111100010010010101001011000111";
        ram[171] = "0b10111101010011100000001000110110";
        ram[172] = "0b00111100111111111110010101101011";
        ram[173] = "0b00111110000101100000100011010111";
        ram[174] = "0b10111101100111011011001101101100";
        ram[175] = "0b10111110010100010000011101001111";
        ram[176] = "0b10111101010101011110111111001000";
        ram[177] = "0b00111101111111010101101010101101";
        ram[178] = "0b00111101010010111011100011100010";
        ram[179] = "0b10111110000111000010111011010001";
        ram[180] = "0b00111101100101111010111001011011";
        ram[181] = "0b00111100110010011101111001011000";
        ram[182] = "0b10111101010000010100000110101110";
        ram[183] = "0b10111100110001000100110110001000";
        ram[184] = "0b10111100100010110010110110101010";
        ram[185] = "0b00111110001000011101101001000000";
        ram[186] = "0b00111100000110111101101101110001";
        ram[187] = "0b00111101000010000100000000010111";
        ram[188] = "0b00111101000001111110111100011100";
        ram[189] = "0b00111101100100110110001001101010";
        ram[190] = "0b00111101100010111010111010110111";
        ram[191] = "0b10111100110000101001100000100101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibdk) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibdk_ram* meminst;


SC_CTOR(conv_2_conv_2_weibdk) {
meminst = new conv_2_conv_2_weibdk_ram("conv_2_conv_2_weibdk_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibdk() {
    delete meminst;
}


};//endmodule
#endif
