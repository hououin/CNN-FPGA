// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiShg_H__
#define __conv_2_conv_2_weiShg_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiShg_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiShg_ram) {
        ram[0] = "0b10111101000001001100101011011100";
        ram[1] = "0b00111100001000110111101001111011";
        ram[2] = "0b00111110001000000000000000110100";
        ram[3] = "0b00111101110000001011001110110110";
        ram[4] = "0b10111110000010101101111101010010";
        ram[5] = "0b00111011110011011110101101010100";
        ram[6] = "0b10111101001000100101010000010010";
        ram[7] = "0b10111100100111001011000101000001";
        ram[8] = "0b00111101010110011110111001001010";
        ram[9] = "0b00111101111000011000100110001100";
        ram[10] = "0b00111101100011101111010100011000";
        ram[11] = "0b00111110001100110000101111100110";
        ram[12] = "0b00111101110000010100010010110100";
        ram[13] = "0b10111110010000100110011100000111";
        ram[14] = "0b10111100100111111011100010100000";
        ram[15] = "0b00111100111000110111111011111010";
        ram[16] = "0b00111101100110000010000101000011";
        ram[17] = "0b10111101101100100001011110001011";
        ram[18] = "0b10111101000001010100010011111000";
        ram[19] = "0b00111101100010111101000000000011";
        ram[20] = "0b00111100111000001000001011000101";
        ram[21] = "0b10111110011001100111010101011001";
        ram[22] = "0b10111110011000111101011001001000";
        ram[23] = "0b10111011110111110011001101101001";
        ram[24] = "0b10111101111010000100101000011010";
        ram[25] = "0b00111101001010001101110110110100";
        ram[26] = "0b10111100100001000000011100010001";
        ram[27] = "0b00111110001001100010010010110110";
        ram[28] = "0b00111101101110100100100010110001";
        ram[29] = "0b00111101010010010101101101001110";
        ram[30] = "0b10111101001101000101001011111001";
        ram[31] = "0b10111101001000011010101000100100";
        ram[32] = "0b10111110000000110101110000001110";
        ram[33] = "0b10111110011011101001001100000100";
        ram[34] = "0b00111101110101110011010001000010";
        ram[35] = "0b00111101101111000100011010101010";
        ram[36] = "0b00111101111001111000111010011001";
        ram[37] = "0b00111110000101111101110001001011";
        ram[38] = "0b10111100001001000100111000100011";
        ram[39] = "0b10111101010000010011001001001011";
        ram[40] = "0b00111101101110001111000100111000";
        ram[41] = "0b00111110001100001000110110101000";
        ram[42] = "0b10111110001101111001010110100100";
        ram[43] = "0b10111101101011100111110101101111";
        ram[44] = "0b10111101011011001101111010101110";
        ram[45] = "0b00111101100001111101010100010000";
        ram[46] = "0b00111101011110000101000100001110";
        ram[47] = "0b10111101100111010011010000001111";
        ram[48] = "0b00111101100110000010100101110011";
        ram[49] = "0b10111110011001000111011101101111";
        ram[50] = "0b10111101101000011000001000011011";
        ram[51] = "0b00111101100011010110000010110100";
        ram[52] = "0b10111110010010001111101010111111";
        ram[53] = "0b00111101011001111110110101100010";
        ram[54] = "0b00111101010110100011000001111000";
        ram[55] = "0b10111101111001111001101000110000";
        ram[56] = "0b10111101100101111111100001100100";
        ram[57] = "0b10111010100011110001110010011010";
        ram[58] = "0b00111101101011001111011101100000";
        ram[59] = "0b10111100011111001101101001011110";
        ram[60] = "0b10111101111110100011110101010111";
        ram[61] = "0b10111110000101111000110110001101";
        ram[62] = "0b10111101001101001111111111001011";
        ram[63] = "0b10111110000000111001100111101100";
        ram[64] = "0b00111100010001100111110010100000";
        ram[65] = "0b10111101011000000000110000111000";
        ram[66] = "0b00111110000001100110010010010110";
        ram[67] = "0b00111101111111010101101011010001";
        ram[68] = "0b10111101101111100101101101000110";
        ram[69] = "0b00111101011010110011100100101001";
        ram[70] = "0b10111110000101101000010000001010";
        ram[71] = "0b00111101011000100011111000001000";
        ram[72] = "0b10111101001100111100010111101000";
        ram[73] = "0b00111101001101011000111101001001";
        ram[74] = "0b10111101100010100111010011010111";
        ram[75] = "0b10111110000011000001010110010000";
        ram[76] = "0b00111101011100010111101110101001";
        ram[77] = "0b10111110010001010000011111100000";
        ram[78] = "0b10111101101111010110101101110001";
        ram[79] = "0b10111101000101001111010010101111";
        ram[80] = "0b10111100100101000100000010001110";
        ram[81] = "0b00111110000111100100000100011100";
        ram[82] = "0b00111101101110101110011111011001";
        ram[83] = "0b00111110000110000110100011111110";
        ram[84] = "0b10111110100010110101010100001010";
        ram[85] = "0b10111110010110011101000001001101";
        ram[86] = "0b10111100100111000001000110000110";
        ram[87] = "0b10111110010010010101010010111000";
        ram[88] = "0b10111100100110001100000110010100";
        ram[89] = "0b00111100000010001010111101001001";
        ram[90] = "0b10111100011011001110101010100100";
        ram[91] = "0b10111110101011100001011000110010";
        ram[92] = "0b00111011100101111110101110010011";
        ram[93] = "0b00111101111001101010011111110100";
        ram[94] = "0b10111101101110101101101101101000";
        ram[95] = "0b10111101101011010101001011000100";
        ram[96] = "0b10111101101111010111001010001101";
        ram[97] = "0b00111101011010111010001000100100";
        ram[98] = "0b10111101000010111000010100100000";
        ram[99] = "0b10111101010001010101001111111010";
        ram[100] = "0b00111100101101000011101100101010";
        ram[101] = "0b10111101011111010101000000111010";
        ram[102] = "0b10111101011000010100010111010000";
        ram[103] = "0b00111101110000101000000100111011";
        ram[104] = "0b10111100111101100101111110000001";
        ram[105] = "0b10111101001011110001100100000101";
        ram[106] = "0b00111101010011100110101100010111";
        ram[107] = "0b00111110000010110100110111110010";
        ram[108] = "0b10111101010110010011001101001101";
        ram[109] = "0b00111101101010010001010010111101";
        ram[110] = "0b10111101111000011001010001111011";
        ram[111] = "0b10111100100100000001110100010001";
        ram[112] = "0b10111011110000001101111000000111";
        ram[113] = "0b10111110000010101001101101001110";
        ram[114] = "0b10111110010100100100111111101010";
        ram[115] = "0b00111110001100110010011001000100";
        ram[116] = "0b10111101001111100101011100001000";
        ram[117] = "0b10111110011111110101110110011000";
        ram[118] = "0b10111011010100010101111111010100";
        ram[119] = "0b10111100011110000000101011100010";
        ram[120] = "0b10111100111010011011011000110001";
        ram[121] = "0b00111101010110110000000011000101";
        ram[122] = "0b00111101011101001010010010010000";
        ram[123] = "0b00111101111110001011011100110100";
        ram[124] = "0b10111110001010010111100000100111";
        ram[125] = "0b00111100110101101011110111101001";
        ram[126] = "0b00111101111001100001001100111001";
        ram[127] = "0b00111101100110000001101111011010";
        ram[128] = "0b10111101110011110010100101010111";
        ram[129] = "0b00111101010111001101100111110000";
        ram[130] = "0b10111100100100110000010000001110";
        ram[131] = "0b00111011010010010101110110000000";
        ram[132] = "0b10111011001110111011101110100011";
        ram[133] = "0b10111110001000110011001101011110";
        ram[134] = "0b10111110010100011100111101001000";
        ram[135] = "0b00111101100001011101001001011001";
        ram[136] = "0b00111101100001011000000000101000";
        ram[137] = "0b00111101111110000010100110110000";
        ram[138] = "0b10111011111000111010000001100100";
        ram[139] = "0b10111101110010001101000001011111";
        ram[140] = "0b10111110000101010111011000011100";
        ram[141] = "0b00111101011111001100111000101011";
        ram[142] = "0b00111101110010010000000011101010";
        ram[143] = "0b00111110011010111010000000001001";
        ram[144] = "0b00111100011001101101000111100111";
        ram[145] = "0b10111101110101101100110010000011";
        ram[146] = "0b00111011001101011011101110011111";
        ram[147] = "0b10111110000100001101100010100100";
        ram[148] = "0b10111101110001111111101000111000";
        ram[149] = "0b10111101111001101010111001011111";
        ram[150] = "0b00111110000011100100011111111101";
        ram[151] = "0b10111110100010010000001111001011";
        ram[152] = "0b10111101101010111101011100110001";
        ram[153] = "0b10111011001001100000111110101110";
        ram[154] = "0b10111101010111000011100100010010";
        ram[155] = "0b10111110100111111001101011000101";
        ram[156] = "0b00111101001111011111110000111011";
        ram[157] = "0b00111101100111110010010001110100";
        ram[158] = "0b10111110011001000000111110110000";
        ram[159] = "0b10111100100001110010111001001010";
        ram[160] = "0b10111110100011100011010101101111";
        ram[161] = "0b00111100000000011010001110001110";
        ram[162] = "0b10111100110110111001010111110111";
        ram[163] = "0b10111101100100010000100011000010";
        ram[164] = "0b10111101110110110000011000011110";
        ram[165] = "0b10111101100000001010111001010011";
        ram[166] = "0b10111101011010001100111110000000";
        ram[167] = "0b00111011111010010100010001010000";
        ram[168] = "0b10111110000001000010100010111011";
        ram[169] = "0b10111110011100110001100101011000";
        ram[170] = "0b10111101010001011010111111100110";
        ram[171] = "0b00111101101010011100001101101100";
        ram[172] = "0b00111110001000111011111010000000";
        ram[173] = "0b10111011101110000011100111111000";
        ram[174] = "0b00111101011011010111001110000110";
        ram[175] = "0b10111011110101100101011110001011";
        ram[176] = "0b10111100100000101110111100001000";
        ram[177] = "0b00111101100100011100111101100100";
        ram[178] = "0b10111110010101000111111010100111";
        ram[179] = "0b10111101110111010110001100000011";
        ram[180] = "0b10111101100000100000111110011000";
        ram[181] = "0b10111110110111111001100111011000";
        ram[182] = "0b10111101011111010001010100101010";
        ram[183] = "0b00111100000111000001110000100110";
        ram[184] = "0b10111101110101110111100100000100";
        ram[185] = "0b10111101110111111110101001010011";
        ram[186] = "0b10111110010000001011100001001001";
        ram[187] = "0b10111101011111101010000011101000";
        ram[188] = "0b10111110011101100011001110011010";
        ram[189] = "0b10111101100011101111110000101110";
        ram[190] = "0b00111110000000110011111101110111";
        ram[191] = "0b10111100010000010100101110110101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiShg) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiShg_ram* meminst;


SC_CTOR(conv_2_conv_2_weiShg) {
meminst = new conv_2_conv_2_weiShg_ram("conv_2_conv_2_weiShg_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiShg() {
    delete meminst;
}


};//endmodule
#endif
