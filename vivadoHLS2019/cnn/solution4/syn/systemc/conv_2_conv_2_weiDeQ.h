// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiDeQ_H__
#define __conv_2_conv_2_weiDeQ_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiDeQ_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiDeQ_ram) {
        ram[0] = "0b00111101001001111011011111001000";
        ram[1] = "0b10111110000011101110001110110001";
        ram[2] = "0b00111101010101001011001100101001";
        ram[3] = "0b00111101101100000011110011011111";
        ram[4] = "0b10111101100100011111111011011111";
        ram[5] = "0b00111011111010101011010010101001";
        ram[6] = "0b00111100110111000000010011011010";
        ram[7] = "0b10111110000000110010101101001010";
        ram[8] = "0b10111101001011110100000010011101";
        ram[9] = "0b00111101100100011001010010010010";
        ram[10] = "0b10111101000011100111010001100110";
        ram[11] = "0b10111010100111111001100011100101";
        ram[12] = "0b00111101010000011111111011000101";
        ram[13] = "0b10111101101001010100100100011010";
        ram[14] = "0b10111101011111010011001111000001";
        ram[15] = "0b10111101111000001111110101010010";
        ram[16] = "0b00111100111110101101010101111010";
        ram[17] = "0b10111011111010100100111101001111";
        ram[18] = "0b10111101100010011011101001101011";
        ram[19] = "0b10111101001100111101000101100110";
        ram[20] = "0b10111110000010110001011000011101";
        ram[21] = "0b10111110010011110011111000010101";
        ram[22] = "0b10111101111001001011110100101111";
        ram[23] = "0b10111101101100101011000001110000";
        ram[24] = "0b00111100100110101000010011111101";
        ram[25] = "0b00111101101111101001000100001111";
        ram[26] = "0b10111101101111001011000000101000";
        ram[27] = "0b00111101001111001100111001100111";
        ram[28] = "0b10111100000111100101101101100001";
        ram[29] = "0b00111101101110110111111100011011";
        ram[30] = "0b00111101110110111001110110100001";
        ram[31] = "0b00111100111100010100000011101100";
        ram[32] = "0b10111101101011100010110001000001";
        ram[33] = "0b10111110110010000110100111111111";
        ram[34] = "0b00111101111001011010000001101111";
        ram[35] = "0b10111100110100101000101010010110";
        ram[36] = "0b00111100100011111011100010100011";
        ram[37] = "0b00111101111100110011111000000001";
        ram[38] = "0b10111100101011111000101110100111";
        ram[39] = "0b00111101010001001011110111100010";
        ram[40] = "0b00111101010111101001110011000101";
        ram[41] = "0b00111110000110001001000010110110";
        ram[42] = "0b10111110010100101111011000111001";
        ram[43] = "0b10111110001010110100100000110000";
        ram[44] = "0b00111100100110011100011010101011";
        ram[45] = "0b10111101000100010000000101100101";
        ram[46] = "0b00111101010101110101001111101000";
        ram[47] = "0b00111101101111110100001101000111";
        ram[48] = "0b00111100101001100011000101110011";
        ram[49] = "0b10111110101010101010100001110000";
        ram[50] = "0b10111100110000110110010111101101";
        ram[51] = "0b00111101010001001101001010001000";
        ram[52] = "0b10111110011111101001011111111110";
        ram[53] = "0b00111101100111100001001101000100";
        ram[54] = "0b00111100110100010011011110111011";
        ram[55] = "0b10111101110110000110110010000011";
        ram[56] = "0b10111110000100001111010000111101";
        ram[57] = "0b00111101001001101001101101011011";
        ram[58] = "0b10111100101111101000010010111001";
        ram[59] = "0b00111101000100001001000010000010";
        ram[60] = "0b10111101011101100001110011100100";
        ram[61] = "0b00111100001000101000011101110010";
        ram[62] = "0b00111101100111001011100101010100";
        ram[63] = "0b00111101100010100100110101111010";
        ram[64] = "0b00111110011000000111111100011000";
        ram[65] = "0b10111101101110010001001111111011";
        ram[66] = "0b00111101001101010110011111111011";
        ram[67] = "0b00111101110001110110110101000101";
        ram[68] = "0b10111100110000100011000000101000";
        ram[69] = "0b00111101111111110110100001100001";
        ram[70] = "0b10111110001101110100110001011010";
        ram[71] = "0b10111101010101101000111110000001";
        ram[72] = "0b00111100111100000000001101001100";
        ram[73] = "0b00111011110001111101111110001001";
        ram[74] = "0b00111101100100110000000100100111";
        ram[75] = "0b10111101010011000011100001100010";
        ram[76] = "0b00111100101110110111010011011010";
        ram[77] = "0b10111110000110110000101010010001";
        ram[78] = "0b00111101111111111011000101110001";
        ram[79] = "0b00111100110100100011111000101001";
        ram[80] = "0b00111101101010001000000100001010";
        ram[81] = "0b00111101111111001101011001101100";
        ram[82] = "0b10111101110101101010110110000001";
        ram[83] = "0b10111101010000100011000000001011";
        ram[84] = "0b10111110101100101100010110101111";
        ram[85] = "0b10111110000011110101101000010100";
        ram[86] = "0b10111100101110010000100000101010";
        ram[87] = "0b10111110100110010110110101101000";
        ram[88] = "0b10111101101111101111011100001000";
        ram[89] = "0b10111101010100100000010010010101";
        ram[90] = "0b00111101100110110111101111110100";
        ram[91] = "0b10111110001101101011011010101110";
        ram[92] = "0b10111011011110010100000011001111";
        ram[93] = "0b00111101101100110111011010001001";
        ram[94] = "0b10111101101010000011110001001000";
        ram[95] = "0b10111101100010010101010001011100";
        ram[96] = "0b10111110001011000101000101110001";
        ram[97] = "0b10111101100111101001001001100101";
        ram[98] = "0b10111011100111110101000100111111";
        ram[99] = "0b10111101110111110001011111111100";
        ram[100] = "0b00111110000000110011000000010111";
        ram[101] = "0b00111101100011101011110101010111";
        ram[102] = "0b10111101111000111110000000100011";
        ram[103] = "0b00111101110110100111001100110010";
        ram[104] = "0b10111101101100011011000000111001";
        ram[105] = "0b10111101000111001000101010011100";
        ram[106] = "0b00111101011000111001000100011000";
        ram[107] = "0b10111101001010101100001011011010";
        ram[108] = "0b10111100110000001010110001001000";
        ram[109] = "0b10111101101011001011000011001101";
        ram[110] = "0b10111100011011111011101001100101";
        ram[111] = "0b00111101100101001101011100111011";
        ram[112] = "0b00111101100011011011100000000000";
        ram[113] = "0b10111110010000101010111011111011";
        ram[114] = "0b10111110011010011000101111111111";
        ram[115] = "0b00111101110000010110111001001010";
        ram[116] = "0b10111101011000001001010100000110";
        ram[117] = "0b10111101111101010010011001001000";
        ram[118] = "0b00111101111110010010010000101010";
        ram[119] = "0b10111110000111000111111000001010";
        ram[120] = "0b10111101001001100011011110000111";
        ram[121] = "0b00111101000101000111110000010110";
        ram[122] = "0b10111011110011110100110001010001";
        ram[123] = "0b00111100101110010001001111010100";
        ram[124] = "0b10111110010100000100001010000000";
        ram[125] = "0b00111101000011110101111110000001";
        ram[126] = "0b00111110001101010110000111000110";
        ram[127] = "0b00111101111011111110011001011011";
        ram[128] = "0b10111101111111110000101101011001";
        ram[129] = "0b00111101101000101011110111101001";
        ram[130] = "0b00111100110001001000000110000100";
        ram[131] = "0b00111110000000011110101111100011";
        ram[132] = "0b10111101111011010000100101001111";
        ram[133] = "0b10111110010101100100001010110100";
        ram[134] = "0b10111110010101000010100010010010";
        ram[135] = "0b00111101101110111001000100000000";
        ram[136] = "0b00111101100011110100100001100011";
        ram[137] = "0b00111101001101111101110101101001";
        ram[138] = "0b10111101111000010111000001101100";
        ram[139] = "0b10111101101110000001010011000001";
        ram[140] = "0b10111110010011000101110010100110";
        ram[141] = "0b10111101000011011001110100110011";
        ram[142] = "0b00111110000001010111100100011001";
        ram[143] = "0b00111101010110000011111011010001";
        ram[144] = "0b10111101000101110011111111010001";
        ram[145] = "0b00111100110001110010100100110111";
        ram[146] = "0b10111101101000101001100001111000";
        ram[147] = "0b00111101100101001010101101010000";
        ram[148] = "0b10111110000101100101001111111101";
        ram[149] = "0b00111100110110001010011001000100";
        ram[150] = "0b00111101010101110011111110101101";
        ram[151] = "0b10111110100101101111001010011100";
        ram[152] = "0b10111101100010101011101110001000";
        ram[153] = "0b00111100110101010111100111101111";
        ram[154] = "0b10111101100010000011111010011101";
        ram[155] = "0b10111110100110001100110100101110";
        ram[156] = "0b10111101001110010001001010000111";
        ram[157] = "0b00111110001111010011100001100011";
        ram[158] = "0b10111101101111000000110000010010";
        ram[159] = "0b10111100110100000001100110010010";
        ram[160] = "0b10111110100011010101000001111000";
        ram[161] = "0b00111101010111011010001011010010";
        ram[162] = "0b00111101100100010101011101101100";
        ram[163] = "0b10111110000111101101110101000011";
        ram[164] = "0b00111101111101101110011000001001";
        ram[165] = "0b10111011110010110010100110000001";
        ram[166] = "0b10111101001110010011000010001000";
        ram[167] = "0b00111101101101100101111111101011";
        ram[168] = "0b10111101010011110000011111010110";
        ram[169] = "0b10111101101100101011011000111011";
        ram[170] = "0b10111101001011111011101100110001";
        ram[171] = "0b10111101001110110110100011010010";
        ram[172] = "0b00111110000010100001000001111110";
        ram[173] = "0b10111110100100110000110100101011";
        ram[174] = "0b00111101110000010000011100011000";
        ram[175] = "0b10111011111011011111010111000100";
        ram[176] = "0b00111110001010100100100100000111";
        ram[177] = "0b10111101101010010110101100111000";
        ram[178] = "0b10111110000010110100101001001101";
        ram[179] = "0b10111110011111100000100001010001";
        ram[180] = "0b00111101011111001111001100011010";
        ram[181] = "0b10111110101100000111111101110011";
        ram[182] = "0b00111101111001110100000011100110";
        ram[183] = "0b00111100011100001110011100100101";
        ram[184] = "0b10111101011010100111100111110001";
        ram[185] = "0b10111100100010001111011101101000";
        ram[186] = "0b10111110000000010100011101010001";
        ram[187] = "0b10111101010010001101010011001110";
        ram[188] = "0b10111110100011011111100111010100";
        ram[189] = "0b10111101011011011110100101111011";
        ram[190] = "0b00111101101100011000010011100100";
        ram[191] = "0b00111011011010001011110011010011";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiDeQ) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiDeQ_ram* meminst;


SC_CTOR(conv_2_conv_2_weiDeQ) {
meminst = new conv_2_conv_2_weiDeQ_ram("conv_2_conv_2_weiDeQ_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiDeQ() {
    delete meminst;
}


};//endmodule
#endif
