// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiVhK_H__
#define __conv_2_conv_2_weiVhK_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiVhK_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiVhK_ram) {
        ram[0] = "0b10111101000011011010110101110100";
        ram[1] = "0b00111101100101011100111100010101";
        ram[2] = "0b00111110000010000001001100000101";
        ram[3] = "0b10111101110101110100111111110110";
        ram[4] = "0b10111101001100010011101111001001";
        ram[5] = "0b10111100101100010010101110000001";
        ram[6] = "0b00111110000000011011000101110011";
        ram[7] = "0b00111101000011110001011010101111";
        ram[8] = "0b10111101011101101100010001110010";
        ram[9] = "0b00111101100101111100011000011111";
        ram[10] = "0b10111010110000011100111111100001";
        ram[11] = "0b00111110000001110100000011001110";
        ram[12] = "0b10111100110001011000011000011001";
        ram[13] = "0b10111110000011101001101000100011";
        ram[14] = "0b10111100011001101100011000011001";
        ram[15] = "0b10111011101111000000101100010000";
        ram[16] = "0b00111100101001010011101010100011";
        ram[17] = "0b10111101011001101000001111011011";
        ram[18] = "0b10111100100001010001000100001100";
        ram[19] = "0b00111110001010100100110100000100";
        ram[20] = "0b00111110000101000111011101000101";
        ram[21] = "0b10111101011101000100011101001101";
        ram[22] = "0b10111110001111000011001101101101";
        ram[23] = "0b00111100111010011001101001100110";
        ram[24] = "0b00111101111001010010111101001000";
        ram[25] = "0b00111100000111010010011101111011";
        ram[26] = "0b10111101101011100000000110001011";
        ram[27] = "0b10111110101001100100000011010110";
        ram[28] = "0b00111110000000010111010101010010";
        ram[29] = "0b00111101110100101100111111100010";
        ram[30] = "0b00111101111101011110000110101101";
        ram[31] = "0b00111101100110010010010011101000";
        ram[32] = "0b10111101001100110001111011011101";
        ram[33] = "0b00111100010111101111001010010110";
        ram[34] = "0b00111011110000011010110010001001";
        ram[35] = "0b10111101110001111101111111100000";
        ram[36] = "0b00111101010111001011100001110101";
        ram[37] = "0b10111101010110001110001100110110";
        ram[38] = "0b00111101110000101011110000011001";
        ram[39] = "0b10111101110000011110010111110011";
        ram[40] = "0b10111001101001111111011000100110";
        ram[41] = "0b00111101101100000001100111101000";
        ram[42] = "0b00111101001111011100000001000010";
        ram[43] = "0b10111110011110111010101110000010";
        ram[44] = "0b00111101101011101110000101110011";
        ram[45] = "0b10111101011001101110110100111010";
        ram[46] = "0b00111101110000011011101100010010";
        ram[47] = "0b10111010001101011011111111001010";
        ram[48] = "0b00111101110111000011001101101110";
        ram[49] = "0b00111101111101010010001011001100";
        ram[50] = "0b00111100001110100111111100110000";
        ram[51] = "0b00111100010010010111101001000011";
        ram[52] = "0b10111110000011111000010110101010";
        ram[53] = "0b10111110011100011001110101000011";
        ram[54] = "0b10111101100111111101011100100000";
        ram[55] = "0b10111110000011000101001110100011";
        ram[56] = "0b00111100001000011001110100100010";
        ram[57] = "0b10111011100010010101111101111110";
        ram[58] = "0b10111110001100000110000011101000";
        ram[59] = "0b00111100001011101100111110000011";
        ram[60] = "0b10111101000100101000010011101000";
        ram[61] = "0b10111110011110001110110110010111";
        ram[62] = "0b10111101101100001001101101100110";
        ram[63] = "0b10111110000100010001000100111101";
        ram[64] = "0b00111101001000001110111110000011";
        ram[65] = "0b00111011100100001111010001001011";
        ram[66] = "0b00111101100101100010010010110101";
        ram[67] = "0b00111110000110100111101010100000";
        ram[68] = "0b10111101111100001100100001010101";
        ram[69] = "0b10111101000100111111111010000101";
        ram[70] = "0b10111101101001111011000001011101";
        ram[71] = "0b00111110000000000000001101111000";
        ram[72] = "0b00111101100100001111100111010000";
        ram[73] = "0b10111100000111100011000111111101";
        ram[74] = "0b10111110100100000011111001100101";
        ram[75] = "0b10111110000101011000100011100010";
        ram[76] = "0b00111101001000110011111111100011";
        ram[77] = "0b10111110000011111000111110000111";
        ram[78] = "0b10111101010111001111110000110111";
        ram[79] = "0b00111101001010110000011000010110";
        ram[80] = "0b10111110001101010011110000010011";
        ram[81] = "0b10111101100011010010110110000111";
        ram[82] = "0b10111011101001100010100101101101";
        ram[83] = "0b00111100010110001010100110101011";
        ram[84] = "0b00111101110101001011000000011000";
        ram[85] = "0b10111110000100001101001000011000";
        ram[86] = "0b00111101100111111110000100100100";
        ram[87] = "0b10111110010111101110000010111100";
        ram[88] = "0b00111101011011101011101111111010";
        ram[89] = "0b00111110000100001100111001100101";
        ram[90] = "0b00111011111011000011000111110111";
        ram[91] = "0b10111101110101010100101001100000";
        ram[92] = "0b10111110010110101011101101101010";
        ram[93] = "0b10111110001001110111101010101100";
        ram[94] = "0b10111101100101111110100111111100";
        ram[95] = "0b00111101001111001010011111101000";
        ram[96] = "0b00111100001101011101110010111110";
        ram[97] = "0b00111110000111101111011001010001";
        ram[98] = "0b00111101011110001101111100011001";
        ram[99] = "0b10111110011111011010100110111101";
        ram[100] = "0b00111110010101101110001001000110";
        ram[101] = "0b10111110010011110101110101010101";
        ram[102] = "0b10111101101100100101011010111101";
        ram[103] = "0b00111100100111000101010100100111";
        ram[104] = "0b00111110000001001101011110111010";
        ram[105] = "0b00111110000011001100010011110100";
        ram[106] = "0b10111100000001011100100100010111";
        ram[107] = "0b00111011010010101110110010111010";
        ram[108] = "0b10111110011110010101110100111001";
        ram[109] = "0b00111101100111101011000011111110";
        ram[110] = "0b10111110000111000000100000011111";
        ram[111] = "0b10111110011101101000010011011110";
        ram[112] = "0b10111101010110110110100100010110";
        ram[113] = "0b00111100111011000100010101110110";
        ram[114] = "0b00111101101100101000000100011000";
        ram[115] = "0b10111110000110111101011000101001";
        ram[116] = "0b00111101110101010011100110000000";
        ram[117] = "0b10111101100111001001010000010100";
        ram[118] = "0b10111101110010111111011100000000";
        ram[119] = "0b00111110001100010010110111101111";
        ram[120] = "0b10111101000111001111110100110100";
        ram[121] = "0b00111101110010000110011100110111";
        ram[122] = "0b10111110001010000110111101001001";
        ram[123] = "0b10111110001000100101011110000001";
        ram[124] = "0b00111101011000111101100011000110";
        ram[125] = "0b10111100110101010001110110000010";
        ram[126] = "0b00111100011000010000100101110011";
        ram[127] = "0b00111101110100001100111111111101";
        ram[128] = "0b10111110000011110000001101101111";
        ram[129] = "0b10111110001111010110111100110101";
        ram[130] = "0b10111110011111110000001101000001";
        ram[131] = "0b00111101010100101111011010011000";
        ram[132] = "0b10111101100101011110110101000111";
        ram[133] = "0b10111110000000110110000100110000";
        ram[134] = "0b10111110000000000111111100000110";
        ram[135] = "0b00111101101011101010011011111011";
        ram[136] = "0b00111110011111100000111010011111";
        ram[137] = "0b10111110100010110101000111101111";
        ram[138] = "0b10111101110110001111010101011000";
        ram[139] = "0b10111110100101100001110000110000";
        ram[140] = "0b10111101110011101110010010011001";
        ram[141] = "0b10111110011110100011111000101110";
        ram[142] = "0b00111110100000100000001100111001";
        ram[143] = "0b00111110100010111011100101011000";
        ram[144] = "0b10111101101110000101100111111100";
        ram[145] = "0b00111101111110111000000010001100";
        ram[146] = "0b10111101000011100010000100101100";
        ram[147] = "0b10111101010000101111011111010100";
        ram[148] = "0b00111110000101011110010111010101";
        ram[149] = "0b10111101101001110011010000000101";
        ram[150] = "0b10111101000000110011111000100110";
        ram[151] = "0b10111110010001110011000011111000";
        ram[152] = "0b10111100110100101101101101100101";
        ram[153] = "0b00111100100010100010100111100011";
        ram[154] = "0b00111100101001011110000011001110";
        ram[155] = "0b00111101010010000010100001111100";
        ram[156] = "0b00111101101100111101101110100110";
        ram[157] = "0b10111110000000100101111101001001";
        ram[158] = "0b00111101111011101101011101111010";
        ram[159] = "0b10111100111010000111110001100010";
        ram[160] = "0b10111101111000000001010110000000";
        ram[161] = "0b10111011001010011101100101110000";
        ram[162] = "0b10111101000100101011010101011111";
        ram[163] = "0b10111101110010001000100100111001";
        ram[164] = "0b10111101101001001001110101101111";
        ram[165] = "0b10111110000000100101001100100101";
        ram[166] = "0b10111101101001100010011000010011";
        ram[167] = "0b00111110000001001111110111110100";
        ram[168] = "0b00111101100111111010100001000001";
        ram[169] = "0b00111101101011101110011100111110";
        ram[170] = "0b10111110000000000000010110101001";
        ram[171] = "0b00111100100111100111111110000011";
        ram[172] = "0b10111011111000110011111011110100";
        ram[173] = "0b00111101101111001111010001001100";
        ram[174] = "0b00111101011001111110001011101000";
        ram[175] = "0b10111110001011001000100101111111";
        ram[176] = "0b10111101100110010010101011111100";
        ram[177] = "0b00111110000001100101101100110111";
        ram[178] = "0b00111101010000110100000101110011";
        ram[179] = "0b10111110100100000011010101000000";
        ram[180] = "0b00111110001010011111011010111101";
        ram[181] = "0b10111101011110110101011111100110";
        ram[182] = "0b10111110000100110111100010101110";
        ram[183] = "0b00111110010000000110000001110111";
        ram[184] = "0b00111101001000000111010111010110";
        ram[185] = "0b00111101110111111010111011001100";
        ram[186] = "0b10111110011101010101100101111101";
        ram[187] = "0b10111110010010000001111011001100";
        ram[188] = "0b00111101111110100101101001001111";
        ram[189] = "0b00111101111111101010101100000101";
        ram[190] = "0b10111101010100000011011011010000";
        ram[191] = "0b00111101101010111110011001111100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiVhK) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiVhK_ram* meminst;


SC_CTOR(conv_2_conv_2_weiVhK) {
meminst = new conv_2_conv_2_weiVhK_ram("conv_2_conv_2_weiVhK_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiVhK() {
    delete meminst;
}


};//endmodule
#endif
