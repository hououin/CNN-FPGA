// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibKp_H__
#define __conv_2_conv_2_weibKp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibKp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibKp_ram) {
        ram[0] = "0b10111101101011101100111011111111";
        ram[1] = "0b10111101111010000000101110111010";
        ram[2] = "0b10111110001111010101100011000110";
        ram[3] = "0b00111101101110001111101101101000";
        ram[4] = "0b10111101001100100010111101110010";
        ram[5] = "0b10111100101100111101101100110010";
        ram[6] = "0b00111110001001101011010111100101";
        ram[7] = "0b10111010001111101111100001101010";
        ram[8] = "0b00111101010111111001001000010110";
        ram[9] = "0b00111101111010111100000011001101";
        ram[10] = "0b00111110010001100001100011111110";
        ram[11] = "0b10111101011001100000100101001101";
        ram[12] = "0b00111101111100010011101011000000";
        ram[13] = "0b00111110010001010010000101101100";
        ram[14] = "0b00111110001010000101100000111010";
        ram[15] = "0b00111110000010100011000110010101";
        ram[16] = "0b00111101110010110000100110100010";
        ram[17] = "0b00111101101000100010010101110010";
        ram[18] = "0b00111101000000000111110000011100";
        ram[19] = "0b10111110001101000110111101111111";
        ram[20] = "0b00111101110011111111100101010011";
        ram[21] = "0b00111101100110000000001001000011";
        ram[22] = "0b00111101111111001101001010010011";
        ram[23] = "0b00111101111111001001011100000110";
        ram[24] = "0b10111100110111000000011001001000";
        ram[25] = "0b00111011101010110011001011010011";
        ram[26] = "0b00111101111010101011101110101001";
        ram[27] = "0b10111110100000111100111110011101";
        ram[28] = "0b00111110001000110110101011010010";
        ram[29] = "0b10111110000001110000111100110000";
        ram[30] = "0b00111101011100010100110000110011";
        ram[31] = "0b10111110011010001100000000100001";
        ram[32] = "0b00111100001100101111010100110001";
        ram[33] = "0b00111110001000010111101000001111";
        ram[34] = "0b00111110000110101101101101001001";
        ram[35] = "0b10111110000000010101011110011010";
        ram[36] = "0b10111101100011011111110011001000";
        ram[37] = "0b00111110000000101100110010100010";
        ram[38] = "0b10111100111010110011111100011100";
        ram[39] = "0b10111100111000011001010100010000";
        ram[40] = "0b10111110011011110110100011000101";
        ram[41] = "0b00111110010100111001110010101110";
        ram[42] = "0b10111101001100000001010111100111";
        ram[43] = "0b00111110010010111010000001101101";
        ram[44] = "0b10111100100101000011101100000101";
        ram[45] = "0b00111110001010111011111101101001";
        ram[46] = "0b00111110010100110001000111010000";
        ram[47] = "0b00111110011100010000000010111010";
        ram[48] = "0b00111011100101111001001101111110";
        ram[49] = "0b10111101111101110100000001011000";
        ram[50] = "0b10111101000010011001101000100111";
        ram[51] = "0b10111110011011000101000010101011";
        ram[52] = "0b10111101110111101111101111101111";
        ram[53] = "0b00111101010000110010000111001111";
        ram[54] = "0b10111101111110001001000100110100";
        ram[55] = "0b10111110010100011001101100101010";
        ram[56] = "0b00111101110111100001110011101110";
        ram[57] = "0b10111101101101100011011011000110";
        ram[58] = "0b00111101101111001000101100101001";
        ram[59] = "0b00111110011000000110110010011111";
        ram[60] = "0b10111011101110001111111111010111";
        ram[61] = "0b00111101110110101001101110101111";
        ram[62] = "0b00111100100101011001010110110100";
        ram[63] = "0b00111101110010010001001000011011";
        ram[64] = "0b00111101101011111101101100011001";
        ram[65] = "0b10111101110110001000001011001101";
        ram[66] = "0b10111110011111100100100110001100";
        ram[67] = "0b10111101010111010001010100010101";
        ram[68] = "0b00111101110101110110011001000010";
        ram[69] = "0b00111110010000100101100010101000";
        ram[70] = "0b00111101011001001110001001110100";
        ram[71] = "0b10111100010111010001101100110010";
        ram[72] = "0b10111100111100000101001010001011";
        ram[73] = "0b00111101010011000111001001011111";
        ram[74] = "0b00111101000100110011011110000001";
        ram[75] = "0b10111100100011000110111001001110";
        ram[76] = "0b10111101101110101010011100111100";
        ram[77] = "0b00111101100101000011100100110010";
        ram[78] = "0b10111101000101011111010000000100";
        ram[79] = "0b00111100000111010100100101010001";
        ram[80] = "0b00111101110001011111011101100000";
        ram[81] = "0b10111011000001001010001010110110";
        ram[82] = "0b00111101101101000101111010001000";
        ram[83] = "0b00111100101111100100010001100011";
        ram[84] = "0b10111100110110110100011111000010";
        ram[85] = "0b00111101111001010000010001001100";
        ram[86] = "0b00111101111001001000011101110000";
        ram[87] = "0b00111101100001101010010011001101";
        ram[88] = "0b00111110000011110110110101011100";
        ram[89] = "0b00111101110000110001111100101101";
        ram[90] = "0b10111011101000111100001111110100";
        ram[91] = "0b00111101001111011110101011110100";
        ram[92] = "0b10111101110100101011101110111011";
        ram[93] = "0b10111100000101100001101110100001";
        ram[94] = "0b10111101110100001101000110101011";
        ram[95] = "0b10111110010000110011001010001100";
        ram[96] = "0b00111100110100110101100010100010";
        ram[97] = "0b10111101101111001111110110111100";
        ram[98] = "0b00111101111101011010111100000001";
        ram[99] = "0b10111011000001000101101101110100";
        ram[100] = "0b00111101100110101000110000100101";
        ram[101] = "0b10111011010011100101110110010010";
        ram[102] = "0b00111101001010001110101110001001";
        ram[103] = "0b10111101011000111011100101000100";
        ram[104] = "0b00111110001101101011010110100100";
        ram[105] = "0b00111101110111101011101110000010";
        ram[106] = "0b00111101110110110101111110001001";
        ram[107] = "0b10111100100001001000000000011001";
        ram[108] = "0b10111101101011001010101000010110";
        ram[109] = "0b00111101011101001100001010011001";
        ram[110] = "0b00111100100100111000000101011010";
        ram[111] = "0b10111101010000011000000111000001";
        ram[112] = "0b10111101001001111011001111111101";
        ram[113] = "0b10111110000101110011101100001011";
        ram[114] = "0b00111101000001101101101001001001";
        ram[115] = "0b10111101000110000011100101010101";
        ram[116] = "0b10111110010000100110011110010001";
        ram[117] = "0b00111101110111101100001101110111";
        ram[118] = "0b10111100100100110011101100111001";
        ram[119] = "0b10111110101011000101011000100001";
        ram[120] = "0b10111101001000110101101000101110";
        ram[121] = "0b00111100101110101100000101110010";
        ram[122] = "0b00111101101101010010011110011000";
        ram[123] = "0b10111101000100101011001110001010";
        ram[124] = "0b00111101101010011111010111110001";
        ram[125] = "0b10111100001000110100011001011110";
        ram[126] = "0b00111110000110001001000100100110";
        ram[127] = "0b00111010001110011100100110010010";
        ram[128] = "0b10111101101101110011000000010001";
        ram[129] = "0b10111101110101010001000110001111";
        ram[130] = "0b10111110100001001010111111101001";
        ram[131] = "0b10111101011100011111110010001111";
        ram[132] = "0b00111101011011001010110110111001";
        ram[133] = "0b00111011100111111111111110110110";
        ram[134] = "0b00111011111010011000001111111011";
        ram[135] = "0b00111101000001000101111111011110";
        ram[136] = "0b00111101010010010100001010000101";
        ram[137] = "0b10111101101001000110010101100010";
        ram[138] = "0b10111100111100110110011011000010";
        ram[139] = "0b10111100011100010101001000000011";
        ram[140] = "0b00111101101000010000010111110101";
        ram[141] = "0b00111100111110110110100001100101";
        ram[142] = "0b00111101101100011001111001111100";
        ram[143] = "0b00111101000111000101101010011000";
        ram[144] = "0b10111101010110000000010110111111";
        ram[145] = "0b00111100100011001101110101001010";
        ram[146] = "0b10111110010000000010100111010111";
        ram[147] = "0b00111101111001001001100001110010";
        ram[148] = "0b10111110000001110011101001000001";
        ram[149] = "0b00111101100000101100100100011001";
        ram[150] = "0b00111100111100001100111100101000";
        ram[151] = "0b10111100110010001000101010010101";
        ram[152] = "0b00111101111100011011110010000000";
        ram[153] = "0b10111100101000101110100110001001";
        ram[154] = "0b00111101010000000010110110100100";
        ram[155] = "0b00111101010011101111100100000100";
        ram[156] = "0b10111100110011011011100000010001";
        ram[157] = "0b00111101100100000100011110110100";
        ram[158] = "0b00111100001111001011011001100110";
        ram[159] = "0b10111100101101110001111110000100";
        ram[160] = "0b10111110010100001100000001010111";
        ram[161] = "0b10111100110011001000000001110100";
        ram[162] = "0b10111110011010010010001000000100";
        ram[163] = "0b10111101101100010010111101001110";
        ram[164] = "0b10111101111100010111110011010110";
        ram[165] = "0b00111101001100110110110000110111";
        ram[166] = "0b10111101000010110011101101100010";
        ram[167] = "0b00111101110111010001110000010000";
        ram[168] = "0b00111110000011100000101001001111";
        ram[169] = "0b10111110000101011100110001000011";
        ram[170] = "0b00111101111110011100011011110101";
        ram[171] = "0b10111110000110111101010111000000";
        ram[172] = "0b00111101101010110101100110000100";
        ram[173] = "0b10111101110000101000100011010000";
        ram[174] = "0b10111101100000111010000000110001";
        ram[175] = "0b10111110000010100011000111100001";
        ram[176] = "0b00111100101110011110000011000111";
        ram[177] = "0b00111101111011101010111110000101";
        ram[178] = "0b10111101100001010010101011010000";
        ram[179] = "0b00111110001100110001011011101111";
        ram[180] = "0b00111101100110111001110010011001";
        ram[181] = "0b00111110010001111011101110100001";
        ram[182] = "0b10111101111011011101001100101110";
        ram[183] = "0b10111110010011111111111110100001";
        ram[184] = "0b10111101111100110011010010001011";
        ram[185] = "0b00111101101100011001111011011110";
        ram[186] = "0b00111101010011100110111111010100";
        ram[187] = "0b00111101110001111111010111001000";
        ram[188] = "0b10111101011000111001000000011000";
        ram[189] = "0b10111100110111011011010110011000";
        ram[190] = "0b00111101100110010111100110011110";
        ram[191] = "0b00111101010010101100011110011000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibKp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibKp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibKp) {
meminst = new conv_2_conv_2_weibKp_ram("conv_2_conv_2_weibKp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibKp() {
    delete meminst;
}


};//endmodule
#endif
