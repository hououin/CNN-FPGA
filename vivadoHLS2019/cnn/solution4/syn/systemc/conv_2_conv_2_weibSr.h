// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibSr_H__
#define __conv_2_conv_2_weibSr_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibSr_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibSr_ram) {
        ram[0] = "0b10111101001001010100010000001110";
        ram[1] = "0b10111011101010000010001011101101";
        ram[2] = "0b10111100100000011101011101110100";
        ram[3] = "0b10111101011110000100110100110111";
        ram[4] = "0b10111101111100111100111111101001";
        ram[5] = "0b10111101001111111100100101011000";
        ram[6] = "0b00111110100000110001001100000001";
        ram[7] = "0b10111111000100001011010111111001";
        ram[8] = "0b00111101111111000100101101111101";
        ram[9] = "0b00111100100010110111110100100001";
        ram[10] = "0b00111110010101100011101000001110";
        ram[11] = "0b10111101011011101000001000100001";
        ram[12] = "0b10111101100010100110011001010010";
        ram[13] = "0b00111110010100100101001100111100";
        ram[14] = "0b00111101011011100010011010000111";
        ram[15] = "0b00111101110000111101101101110011";
        ram[16] = "0b10111110000110111001000111000010";
        ram[17] = "0b10111101000010100000010101111111";
        ram[18] = "0b00111101100110001010000101010011";
        ram[19] = "0b10111110000011111001011101010110";
        ram[20] = "0b00111101010000111010110000011101";
        ram[21] = "0b00111110001101000000000010101001";
        ram[22] = "0b10111101101010000101000011111011";
        ram[23] = "0b10111101100101100111011101001010";
        ram[24] = "0b00111100110001000101000101110001";
        ram[25] = "0b00111101010110110000011000111110";
        ram[26] = "0b10111110001001100010111111000101";
        ram[27] = "0b10111110001101110100111110001100";
        ram[28] = "0b00111110111100111011111001011100";
        ram[29] = "0b00111101111110110010001100011101";
        ram[30] = "0b10111110000011000101010000100100";
        ram[31] = "0b10111110101110101001101001100100";
        ram[32] = "0b00111101010110001001011011100010";
        ram[33] = "0b10111110100101110101111110111111";
        ram[34] = "0b10111010111001011111100101111011";
        ram[35] = "0b00111100110111100100101110100110";
        ram[36] = "0b00111101000001101011110010011011";
        ram[37] = "0b00111110010000001101100000111111";
        ram[38] = "0b00111101111011110110100100110100";
        ram[39] = "0b00111110100100110000111101111110";
        ram[40] = "0b00111101110011100010101100010100";
        ram[41] = "0b00111110010011100001000111110101";
        ram[42] = "0b10111110011100110111101110100010";
        ram[43] = "0b10111110010000011010000111010010";
        ram[44] = "0b10111110001000111011111111000001";
        ram[45] = "0b00111100110111111010110000101010";
        ram[46] = "0b00111110000100110000101000110100";
        ram[47] = "0b10111100001000000000010011011111";
        ram[48] = "0b10111101011101000011000100000000";
        ram[49] = "0b10111110100010001001100101110001";
        ram[50] = "0b10111101001100001110011000010001";
        ram[51] = "0b00111110100010011110011011011000";
        ram[52] = "0b10111110000110111100101110100100";
        ram[53] = "0b00111110000011100101011110101010";
        ram[54] = "0b00111110000111000111101111111001";
        ram[55] = "0b00111101111011110000011010101010";
        ram[56] = "0b00111101111010101100111101111110";
        ram[57] = "0b10111101001001011111010100010100";
        ram[58] = "0b00111110000110100001110011101000";
        ram[59] = "0b10111110000000101010010001011000";
        ram[60] = "0b10111110000001101111010101011001";
        ram[61] = "0b00111110010011001000001000011001";
        ram[62] = "0b00111100011100100001000011110110";
        ram[63] = "0b10111110010000011111001111111101";
        ram[64] = "0b00111101110101101101100110110111";
        ram[65] = "0b00111110101010110010001111100110";
        ram[66] = "0b00111110010100101010000111000000";
        ram[67] = "0b10111110000101011000000111100100";
        ram[68] = "0b10111110001101001000000110111110";
        ram[69] = "0b10111100100010111110111011011110";
        ram[70] = "0b00111110001010001101101001111101";
        ram[71] = "0b10111110010011101100011000011110";
        ram[72] = "0b00111101111000000110000001111011";
        ram[73] = "0b10111101111010000111001001100011";
        ram[74] = "0b00111110100101101101011110010011";
        ram[75] = "0b10111110000111111110011010100011";
        ram[76] = "0b00111101011110000000111000111100";
        ram[77] = "0b00111110000010011001001011100101";
        ram[78] = "0b00111101100010101110101011000111";
        ram[79] = "0b10111101101011001101011010100111";
        ram[80] = "0b00111101000101000110111001101101";
        ram[81] = "0b10111101110001100100101101001111";
        ram[82] = "0b00111110011001110100101011001001";
        ram[83] = "0b10111101100010011011111010111000";
        ram[84] = "0b00111100100010101111111111001000";
        ram[85] = "0b00111101110101011001000001101010";
        ram[86] = "0b10111101100010101011011110001100";
        ram[87] = "0b00111110011110011100110101100111";
        ram[88] = "0b00111110011011101000110001101101";
        ram[89] = "0b00111110001001101101100101011010";
        ram[90] = "0b10111110010101010010010111110001";
        ram[91] = "0b10111101100110110001110110011111";
        ram[92] = "0b00111110010101110101100110011011";
        ram[93] = "0b00111100101100000010101100000011";
        ram[94] = "0b10111110100111010011111100010000";
        ram[95] = "0b10111110011100110000001110101000";
        ram[96] = "0b10111101100010011100111010011010";
        ram[97] = "0b10111110110101100111001101011001";
        ram[98] = "0b10111101111001111000001110111011";
        ram[99] = "0b10111101111001100111111100110011";
        ram[100] = "0b10111101100011010101101100101000";
        ram[101] = "0b00111101100111010101111111010011";
        ram[102] = "0b00111110011110110111010010111110";
        ram[103] = "0b00111110001100010000110001110100";
        ram[104] = "0b10111100100000011100011101100101";
        ram[105] = "0b10111011000100010111111101100011";
        ram[106] = "0b10111110111010011000101100000111";
        ram[107] = "0b10111110101100000110111000100000";
        ram[108] = "0b10111110011000100010000111110110";
        ram[109] = "0b10111101100100101010000100011000";
        ram[110] = "0b10111101001111000110001100011011";
        ram[111] = "0b10111101110101010001010001001001";
        ram[112] = "0b10111110101011001011010111110000";
        ram[113] = "0b10111110001011000110011001010100";
        ram[114] = "0b00111101000010011010110001000100";
        ram[115] = "0b00111110101010001010110000010110";
        ram[116] = "0b10111101010011110010100010111010";
        ram[117] = "0b00111110011101101110110011111100";
        ram[118] = "0b00111101110101111010001000010010";
        ram[119] = "0b10111110100110101100001010101110";
        ram[120] = "0b10111110000000101010101011100010";
        ram[121] = "0b10111110101110110001001011010111";
        ram[122] = "0b00111110000000010001000110001001";
        ram[123] = "0b10111110000111111000010010111000";
        ram[124] = "0b00111110001100010001100000101000";
        ram[125] = "0b00111110100000011001101111111100";
        ram[126] = "0b10111100010011101110011001110110";
        ram[127] = "0b00111101101110111110101110101110";
        ram[128] = "0b00111110001101011111000001000001";
        ram[129] = "0b00111110010011110101111010011100";
        ram[130] = "0b00111101100110000101111100111110";
        ram[131] = "0b10111110100110001000001100011011";
        ram[132] = "0b10111110010110101110100110110010";
        ram[133] = "0b00111101110110000010100001111001";
        ram[134] = "0b10111110110111100010011111111101";
        ram[135] = "0b00111101011101001000001111110010";
        ram[136] = "0b10111101110000100110000111111111";
        ram[137] = "0b10111110100110011100001000010010";
        ram[138] = "0b00111101111100001111101010001111";
        ram[139] = "0b10111101100100001001101111111110";
        ram[140] = "0b10111110011111011010010101010100";
        ram[141] = "0b10111110100011010011011100111011";
        ram[142] = "0b10111110011001001111010000011011";
        ram[143] = "0b10111110001010101000110110011111";
        ram[144] = "0b10111101100110100111111001100110";
        ram[145] = "0b10111101110001000111001110010000";
        ram[146] = "0b10111110010100100111101000110101";
        ram[147] = "0b00111101010110111100000101100100";
        ram[148] = "0b10111110110001111010010011000111";
        ram[149] = "0b00111101101011101111110010010110";
        ram[150] = "0b10111110001101101010101100011010";
        ram[151] = "0b00111101111000111001101101100010";
        ram[152] = "0b10111100000000111111001110001011";
        ram[153] = "0b10111101010010010011001001010111";
        ram[154] = "0b10111100101101101011100110101010";
        ram[155] = "0b10111110100110010101000011010101";
        ram[156] = "0b10111110101100010101010100011101";
        ram[157] = "0b00111101110100111111110010011101";
        ram[158] = "0b00111101101111110000000001011110";
        ram[159] = "0b10111110011011111100110000101100";
        ram[160] = "0b10111110100100001110111000110001";
        ram[161] = "0b10111110101101111000001111100001";
        ram[162] = "0b10111110100100101101011000011111";
        ram[163] = "0b10111110001110110101111111100101";
        ram[164] = "0b00111101110010001011001101001010";
        ram[165] = "0b00111101010000010011111010111011";
        ram[166] = "0b00111100101100011101001101011001";
        ram[167] = "0b00111101101101011011000000001100";
        ram[168] = "0b00111101110010011111001101010111";
        ram[169] = "0b10111110110010110011010100011010";
        ram[170] = "0b10111110110111010101010010010110";
        ram[171] = "0b10111110111011111000111110001101";
        ram[172] = "0b00111110001001000100000111111100";
        ram[173] = "0b10111101011100011000001100100101";
        ram[174] = "0b10111110100001010110111110010111";
        ram[175] = "0b10111110110110011001000100100111";
        ram[176] = "0b00111101001011011011001000010010";
        ram[177] = "0b10111110110001101100110011011111";
        ram[178] = "0b10111110000010100101100101011100";
        ram[179] = "0b00111100010100100000101011010111";
        ram[180] = "0b10111110100001101100111011100001";
        ram[181] = "0b00111110100111001110110110110110";
        ram[182] = "0b00111110000110011011010001011011";
        ram[183] = "0b10111110000001110000000001000011";
        ram[184] = "0b10111110111000100101101010100111";
        ram[185] = "0b00111101100100010101000110101000";
        ram[186] = "0b00111100110110111011111001101100";
        ram[187] = "0b10111110000011111101100011101110";
        ram[188] = "0b00111110011100000110101000010101";
        ram[189] = "0b00111101011110001110101100001011";
        ram[190] = "0b00111101010101011101000100111101";
        ram[191] = "0b00111110000000000111110111001000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibSr) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibSr_ram* meminst;


SC_CTOR(conv_2_conv_2_weibSr) {
meminst = new conv_2_conv_2_weibSr_ram("conv_2_conv_2_weibSr_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibSr() {
    delete meminst;
}


};//endmodule
#endif
