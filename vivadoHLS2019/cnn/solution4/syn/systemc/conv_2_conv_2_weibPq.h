// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibPq_H__
#define __conv_2_conv_2_weibPq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibPq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibPq_ram) {
        ram[0] = "0b10111110110100111110100111110011";
        ram[1] = "0b10111110100001100000110111011010";
        ram[2] = "0b10111100101000011101110010100110";
        ram[3] = "0b00111110001001011001010011110110";
        ram[4] = "0b10111100001100100110001100011000";
        ram[5] = "0b10111101111101100111001101101000";
        ram[6] = "0b00111101100011100101011101001111";
        ram[7] = "0b00111110011101001000010000101110";
        ram[8] = "0b00111100011011001100111011000001";
        ram[9] = "0b00111101001110010101010011011111";
        ram[10] = "0b00111101111111001001111100110010";
        ram[11] = "0b00111101110011100000001100101010";
        ram[12] = "0b10111101010000010000011100011000";
        ram[13] = "0b00111101011000001110101011000101";
        ram[14] = "0b00111101100000010001010011100110";
        ram[15] = "0b00111101111001110111011100011011";
        ram[16] = "0b10111110011110011011011101111100";
        ram[17] = "0b10111110100100010100000001100011";
        ram[18] = "0b10111101101110101000111110010111";
        ram[19] = "0b10111101100110100010010100010111";
        ram[20] = "0b00111110000001110000010010001010";
        ram[21] = "0b10111110011010000011000011011010";
        ram[22] = "0b00111110000000000101010001110101";
        ram[23] = "0b10111101101001110001110010101110";
        ram[24] = "0b10111101110011101101000101111010";
        ram[25] = "0b00111110010100110010011011100000";
        ram[26] = "0b10111110011010011011111000101100";
        ram[27] = "0b10111110000000110111001010000100";
        ram[28] = "0b00111110000010001111100111111111";
        ram[29] = "0b10111110001011011101111000001100";
        ram[30] = "0b10111101100010110100111001011001";
        ram[31] = "0b10111101011011111000011001001110";
        ram[32] = "0b00111101101001000111111000010011";
        ram[33] = "0b00111110101101011100110010000011";
        ram[34] = "0b00111110010101101110101011011010";
        ram[35] = "0b10111101101100011010001010010111";
        ram[36] = "0b00111101101011000110010000111001";
        ram[37] = "0b10111100100011011110100100010110";
        ram[38] = "0b00111101100011100011101100011001";
        ram[39] = "0b10111110011011001111010110000111";
        ram[40] = "0b10111111000011011010111000111110";
        ram[41] = "0b00111110010010010001011011000111";
        ram[42] = "0b10111110101011001111111111111100";
        ram[43] = "0b00111110100011011110001011010010";
        ram[44] = "0b00111101000111110000100100100110";
        ram[45] = "0b10111100101101011011110100001001";
        ram[46] = "0b00111110001010111100011101000111";
        ram[47] = "0b00111110001101010100110101101011";
        ram[48] = "0b00111101110000010111110001101010";
        ram[49] = "0b00111110001001110011001110001101";
        ram[50] = "0b10111110000001111011100010110011";
        ram[51] = "0b10111110001110100001101100000010";
        ram[52] = "0b10111100111011010101011011110101";
        ram[53] = "0b10111110010010111101110000001000";
        ram[54] = "0b10111110010100101010101011010001";
        ram[55] = "0b00111011111011100111111001100010";
        ram[56] = "0b00111110001110010101010101110100";
        ram[57] = "0b00111110010100001100101100110010";
        ram[58] = "0b10111111000101100000011011010100";
        ram[59] = "0b00111101100111111111111001010100";
        ram[60] = "0b00111110001001100100101110110111";
        ram[61] = "0b10111101110100111100110001100101";
        ram[62] = "0b00111101011100100100111010110000";
        ram[63] = "0b10111100011000000111001001010000";
        ram[64] = "0b00111101001111110101001100100000";
        ram[65] = "0b10111110001100011000111000100001";
        ram[66] = "0b10111110100100110110000001100011";
        ram[67] = "0b00111110001110111101111011111111";
        ram[68] = "0b10111110010101000010110100001100";
        ram[69] = "0b00111110000001100100010110010100";
        ram[70] = "0b10111110111101010010100001110001";
        ram[71] = "0b10111101100110011110001110011001";
        ram[72] = "0b10111101100100100110011001011101";
        ram[73] = "0b00111011001001101111000011011110";
        ram[74] = "0b10111101110011100100011001010111";
        ram[75] = "0b00111110000001011101100100010010";
        ram[76] = "0b10111111000000000001111011001110";
        ram[77] = "0b10111110001101111110100001010111";
        ram[78] = "0b10111100001000111001000101110101";
        ram[79] = "0b10111110000011011000110001011100";
        ram[80] = "0b00111101010111111101111010011110";
        ram[81] = "0b00111101100010111111011110010010";
        ram[82] = "0b00111101101000110011101101110100";
        ram[83] = "0b10111101100110001001010110110010";
        ram[84] = "0b10111101111001010100010100010001";
        ram[85] = "0b10111110011110000100011001001110";
        ram[86] = "0b00111101010001100111100100111001";
        ram[87] = "0b10111110101111011100011000110101";
        ram[88] = "0b10111101111101000111001010001111";
        ram[89] = "0b00111101010001001110001000110001";
        ram[90] = "0b00111101011010101100110000011110";
        ram[91] = "0b00111111000100110110100001100111";
        ram[92] = "0b10111101100101101010100111111010";
        ram[93] = "0b10111101101000110000011111011100";
        ram[94] = "0b00111011001011100000000010001001";
        ram[95] = "0b10111100010110010000001111101111";
        ram[96] = "0b00111101101110011100101101011000";
        ram[97] = "0b10111101110001111010110011101000";
        ram[98] = "0b00111101101111000110000011111001";
        ram[99] = "0b10111101111111111111011001110000";
        ram[100] = "0b10111110100101010000001110110101";
        ram[101] = "0b10111110001111100101111001111010";
        ram[102] = "0b10111101110001001100101101011101";
        ram[103] = "0b10111101101010101011001110000001";
        ram[104] = "0b00111101001101001100011010110011";
        ram[105] = "0b00111110000010100000011101100110";
        ram[106] = "0b10111110101101100010010110010110";
        ram[107] = "0b00111110010101100100010001110110";
        ram[108] = "0b10111100100000000001100110011111";
        ram[109] = "0b00111110100110001010000111100001";
        ram[110] = "0b10111110000001010000110000000111";
        ram[111] = "0b10111101000000101000000100001110";
        ram[112] = "0b10111110100110110000101111100001";
        ram[113] = "0b10111011100100110010101100100100";
        ram[114] = "0b00111101001100101101011100010011";
        ram[115] = "0b10111110100101010010100110101111";
        ram[116] = "0b00111101111010001100000011101101";
        ram[117] = "0b10111101000001100111000110011011";
        ram[118] = "0b10111101100110010011111111011000";
        ram[119] = "0b10111101100011010011100010001001";
        ram[120] = "0b00111100110000001110100101101101";
        ram[121] = "0b00111101001110000001110011101010";
        ram[122] = "0b10111110011010101100101101010011";
        ram[123] = "0b00111101010101101100001110101001";
        ram[124] = "0b00111101101100100111001010101001";
        ram[125] = "0b00111101101101100011110110101111";
        ram[126] = "0b00111100110001010010000000110001";
        ram[127] = "0b00111110010100011011001010000101";
        ram[128] = "0b00111110100100111001111111010011";
        ram[129] = "0b10111101010101110001111011010111";
        ram[130] = "0b10111101110011001110101011101010";
        ram[131] = "0b00111110100001001010011000000101";
        ram[132] = "0b10111110001011011001100001001111";
        ram[133] = "0b00111101100011111010000111001101";
        ram[134] = "0b00111101011101010100101100101110";
        ram[135] = "0b00111110011100011000111110110110";
        ram[136] = "0b00111110001110001100110011111001";
        ram[137] = "0b00111101010101100101101000100001";
        ram[138] = "0b10111101110000010001000011100110";
        ram[139] = "0b10111101101110100111100001110100";
        ram[140] = "0b00111101011100111111000010001010";
        ram[141] = "0b00111101111001111011011000000000";
        ram[142] = "0b00111110011101101111110101101001";
        ram[143] = "0b00111110011100001100101001000110";
        ram[144] = "0b10111011111100001101011001110101";
        ram[145] = "0b00111110101010110101000101011001";
        ram[146] = "0b00111101111001101010000010111111";
        ram[147] = "0b10111101111111100010100001011000";
        ram[148] = "0b10111101110100010101011101010100";
        ram[149] = "0b10111110001010010011100001010101";
        ram[150] = "0b10111101100001011100010000011011";
        ram[151] = "0b10111110000001011011110001000100";
        ram[152] = "0b00111101001100101011000110010001";
        ram[153] = "0b00111101110000001011001011010010";
        ram[154] = "0b00111101010101100011001110100100";
        ram[155] = "0b00111110100000000010110001011000";
        ram[156] = "0b00111101111001100111000000100111";
        ram[157] = "0b10111110100010111000000010101000";
        ram[158] = "0b00111110001001100110111000101101";
        ram[159] = "0b00111101100001000000010000111101";
        ram[160] = "0b00111110101101000111110110000111";
        ram[161] = "0b00111110001111110101000010010000";
        ram[162] = "0b00111110010011011111101000100001";
        ram[163] = "0b10111110010110011000010100111010";
        ram[164] = "0b10111111000011110100101111100000";
        ram[165] = "0b00111110100100100110101110011010";
        ram[166] = "0b10111101110110010111011001111101";
        ram[167] = "0b00111110011101001010110100101110";
        ram[168] = "0b10111110000101001010011110001111";
        ram[169] = "0b00111110001010111000111111010100";
        ram[170] = "0b10111100101100001100001100100011";
        ram[171] = "0b00111101110001111111100110010011";
        ram[172] = "0b00111101110010000010001100101100";
        ram[173] = "0b10111110100010110110011010100011";
        ram[174] = "0b00111110001011101001111010111101";
        ram[175] = "0b00111101111011011111110101001001";
        ram[176] = "0b10111101000111101101100110000011";
        ram[177] = "0b00111110110001000000000001010001";
        ram[178] = "0b00111110000001100011101111010110";
        ram[179] = "0b10111110000001000111011000000101";
        ram[180] = "0b00111100110100000101111111011000";
        ram[181] = "0b10111101111110010011011111000000";
        ram[182] = "0b10111110100111101000000110001101";
        ram[183] = "0b10111110011000110010101100010001";
        ram[184] = "0b00111110000100100110011011000100";
        ram[185] = "0b10111110100011111001000000100100";
        ram[186] = "0b10111110011110010000100100101111";
        ram[187] = "0b10111100110001011011110111000100";
        ram[188] = "0b10111110000001111011011011100000";
        ram[189] = "0b10111110100011101011101011110010";
        ram[190] = "0b00111110000110010010011111001010";
        ram[191] = "0b00111110001101101000111011010001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibPq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibPq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibPq) {
meminst = new conv_2_conv_2_weibPq_ram("conv_2_conv_2_weibPq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibPq() {
    delete meminst;
}


};//endmodule
#endif
