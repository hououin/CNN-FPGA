// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32nmb6.h"
#include "cnn_mac_muladd_5nocq.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<15> > conv_out_address1;
    sc_out< sc_logic > conv_out_ce1;
    sc_in< sc_lv<32> > conv_out_q1;
    sc_out< sc_lv<13> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32nmb6<1,1,32,32,1>* cnn_fcmp_32ns_32nmb6_U23;
    cnn_fcmp_32ns_32nmb6<1,1,32,32,1>* cnn_fcmp_32ns_32nmb6_U24;
    cnn_mac_muladd_5nocq<1,1,5,4,4,8>* cnn_mac_muladd_5nocq_U25;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten23_reg_146;
    sc_signal< sc_lv<6> > f_0_reg_157;
    sc_signal< sc_lv<8> > indvar_flatten_reg_168;
    sc_signal< sc_lv<4> > r_0_reg_179;
    sc_signal< sc_lv<4> > c_0_reg_190;
    sc_signal< sc_lv<1> > icmp_ln9_fu_226_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_937;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > add_ln9_fu_232_p2;
    sc_signal< sc_lv<13> > add_ln9_reg_941;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > select_ln28_9_fu_258_p3;
    sc_signal< sc_lv<6> > select_ln28_9_reg_946;
    sc_signal< sc_lv<16> > zext_ln28_10_fu_266_p1;
    sc_signal< sc_lv<16> > zext_ln28_10_reg_953;
    sc_signal< sc_lv<4> > select_ln12_fu_316_p3;
    sc_signal< sc_lv<4> > select_ln12_reg_958;
    sc_signal< sc_lv<4> > select_ln12_5_fu_332_p3;
    sc_signal< sc_lv<4> > select_ln12_5_reg_964;
    sc_signal< sc_lv<5> > select_ln12_7_fu_364_p3;
    sc_signal< sc_lv<5> > select_ln12_7_reg_970;
    sc_signal< sc_lv<10> > zext_ln28_13_fu_380_p1;
    sc_signal< sc_lv<10> > zext_ln28_13_reg_975;
    sc_signal< sc_lv<10> > zext_ln28_16_fu_437_p1;
    sc_signal< sc_lv<10> > zext_ln28_16_reg_985;
    sc_signal< sc_lv<8> > select_ln12_8_fu_476_p3;
    sc_signal< sc_lv<8> > select_ln12_8_reg_995;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > select_ln28_4_fu_700_p3;
    sc_signal< sc_lv<32> > select_ln28_4_reg_1010;
    sc_signal< sc_lv<4> > c_fu_708_p2;
    sc_signal< sc_lv<4> > c_reg_1017;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<13> > ap_phi_mux_indvar_flatten23_phi_fu_150_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<6> > ap_phi_mux_f_0_phi_fu_161_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_172_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_183_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_194_p4;
    sc_signal< sc_lv<64> > zext_ln28_14_fu_426_p1;
    sc_signal< sc_lv<64> > zext_ln28_18_fu_465_p1;
    sc_signal< sc_lv<64> > zext_ln28_15_fu_533_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_20_fu_611_p1;
    sc_signal< sc_lv<64> > zext_ln35_6_fu_923_p1;
    sc_signal< sc_lv<32> > grp_fu_201_p1;
    sc_signal< sc_lv<32> > grp_fu_207_p1;
    sc_signal< sc_lv<32> > select_ln28_fu_580_p3;
    sc_signal< sc_lv<32> > select_ln28_5_fu_802_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_212_p3;
    sc_signal< sc_lv<1> > icmp_ln12_fu_244_p2;
    sc_signal< sc_lv<6> > f_fu_238_p2;
    sc_signal< sc_lv<5> > or_ln25_fu_220_p2;
    sc_signal< sc_lv<1> > icmp_ln15_fu_292_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_286_p2;
    sc_signal< sc_lv<4> > select_ln28_8_fu_250_p3;
    sc_signal< sc_lv<1> > and_ln28_13_fu_298_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_310_p2;
    sc_signal< sc_lv<4> > r_fu_304_p2;
    sc_signal< sc_lv<5> > shl_ln25_mid1_fu_324_p3;
    sc_signal< sc_lv<5> > select_ln28_10_fu_270_p3;
    sc_signal< sc_lv<5> > select_ln12_6_fu_340_p3;
    sc_signal< sc_lv<5> > mul_ln28_fu_352_p1;
    sc_signal< sc_lv<5> > or_ln25_2_fu_358_p2;
    sc_signal< sc_lv<5> > select_ln28_11_fu_278_p3;
    sc_signal< sc_lv<5> > shl_ln2_fu_372_p3;
    sc_signal< sc_lv<10> > mul_ln28_fu_352_p2;
    sc_signal< sc_lv<10> > add_ln28_fu_384_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_390_p1;
    sc_signal< sc_lv<6> > tmp_12_fu_394_p3;
    sc_signal< sc_lv<9> > tmp_fu_408_p4;
    sc_signal< sc_lv<6> > or_ln28_13_fu_402_p2;
    sc_signal< sc_lv<15> > tmp_1_fu_418_p3;
    sc_signal< sc_lv<5> > or_ln26_fu_431_p2;
    sc_signal< sc_lv<10> > add_ln28_9_fu_441_p2;
    sc_signal< sc_lv<15> > tmp_4_fu_447_p3;
    sc_signal< sc_lv<16> > zext_ln28_17_fu_455_p1;
    sc_signal< sc_lv<16> > add_ln28_10_fu_459_p2;
    sc_signal< sc_lv<8> > add_ln12_fu_470_p2;
    sc_signal< sc_lv<5> > mul_ln28_2_fu_487_p1;
    sc_signal< sc_lv<10> > mul_ln28_2_fu_487_p2;
    sc_signal< sc_lv<10> > add_ln28_8_fu_493_p2;
    sc_signal< sc_lv<1> > trunc_ln28_7_fu_498_p1;
    sc_signal< sc_lv<6> > tmp_23_fu_502_p3;
    sc_signal< sc_lv<9> > tmp_2_fu_515_p4;
    sc_signal< sc_lv<6> > or_ln28_14_fu_510_p2;
    sc_signal< sc_lv<15> > tmp_3_fu_525_p3;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_538_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_542_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_552_p1;
    sc_signal< sc_lv<1> > icmp_ln28_14_fu_562_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_556_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_568_p2;
    sc_signal< sc_lv<1> > grp_fu_201_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_574_p2;
    sc_signal< sc_lv<10> > add_ln28_11_fu_589_p2;
    sc_signal< sc_lv<15> > tmp_5_fu_594_p3;
    sc_signal< sc_lv<16> > zext_ln28_19_fu_602_p1;
    sc_signal< sc_lv<16> > add_ln28_12_fu_606_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_7_fu_616_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_8_fu_634_p1;
    sc_signal< sc_lv<8> > tmp_14_fu_620_p4;
    sc_signal< sc_lv<23> > trunc_ln28_9_fu_630_p1;
    sc_signal< sc_lv<1> > icmp_ln28_16_fu_658_p2;
    sc_signal< sc_lv<1> > icmp_ln28_15_fu_652_p2;
    sc_signal< sc_lv<8> > tmp_15_fu_638_p4;
    sc_signal< sc_lv<23> > trunc_ln28_10_fu_648_p1;
    sc_signal< sc_lv<1> > icmp_ln28_18_fu_676_p2;
    sc_signal< sc_lv<1> > icmp_ln28_17_fu_670_p2;
    sc_signal< sc_lv<1> > or_ln28_7_fu_664_p2;
    sc_signal< sc_lv<1> > or_ln28_8_fu_682_p2;
    sc_signal< sc_lv<1> > and_ln28_7_fu_688_p2;
    sc_signal< sc_lv<1> > grp_fu_207_p2;
    sc_signal< sc_lv<1> > and_ln28_8_fu_694_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_9_fu_719_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_10_fu_737_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_723_p4;
    sc_signal< sc_lv<23> > trunc_ln28_11_fu_733_p1;
    sc_signal< sc_lv<1> > icmp_ln28_20_fu_760_p2;
    sc_signal< sc_lv<1> > icmp_ln28_19_fu_754_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_740_p4;
    sc_signal< sc_lv<23> > trunc_ln28_12_fu_750_p1;
    sc_signal< sc_lv<1> > icmp_ln28_22_fu_778_p2;
    sc_signal< sc_lv<1> > icmp_ln28_21_fu_772_p2;
    sc_signal< sc_lv<1> > or_ln28_9_fu_766_p2;
    sc_signal< sc_lv<1> > or_ln28_10_fu_784_p2;
    sc_signal< sc_lv<1> > and_ln28_9_fu_790_p2;
    sc_signal< sc_lv<1> > and_ln28_10_fu_796_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_11_fu_810_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_12_fu_828_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_814_p4;
    sc_signal< sc_lv<23> > trunc_ln28_13_fu_824_p1;
    sc_signal< sc_lv<1> > icmp_ln28_24_fu_852_p2;
    sc_signal< sc_lv<1> > icmp_ln28_23_fu_846_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_832_p4;
    sc_signal< sc_lv<23> > trunc_ln28_14_fu_842_p1;
    sc_signal< sc_lv<1> > icmp_ln28_26_fu_870_p2;
    sc_signal< sc_lv<1> > icmp_ln28_25_fu_864_p2;
    sc_signal< sc_lv<1> > or_ln28_11_fu_858_p2;
    sc_signal< sc_lv<1> > or_ln28_12_fu_876_p2;
    sc_signal< sc_lv<1> > and_ln28_11_fu_882_p2;
    sc_signal< sc_lv<1> > and_ln28_12_fu_888_p2;
    sc_signal< sc_lv<8> > grp_fu_928_p3;
    sc_signal< sc_lv<13> > tmp_6_fu_906_p3;
    sc_signal< sc_lv<14> > zext_ln28_fu_713_p1;
    sc_signal< sc_lv<14> > zext_ln35_5_fu_913_p1;
    sc_signal< sc_lv<14> > add_ln35_3_fu_917_p2;
    sc_signal< sc_lv<5> > grp_fu_928_p0;
    sc_signal< sc_lv<4> > grp_fu_928_p1;
    sc_signal< sc_lv<4> > grp_fu_928_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_928_p10;
    sc_signal< sc_lv<8> > grp_fu_928_p20;
    sc_signal< sc_lv<10> > mul_ln28_2_fu_487_p10;
    sc_signal< sc_lv<10> > mul_ln28_fu_352_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<13> ap_const_lv13_1520;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_470_p2();
    void thread_add_ln28_10_fu_459_p2();
    void thread_add_ln28_11_fu_589_p2();
    void thread_add_ln28_12_fu_606_p2();
    void thread_add_ln28_8_fu_493_p2();
    void thread_add_ln28_9_fu_441_p2();
    void thread_add_ln28_fu_384_p2();
    void thread_add_ln35_3_fu_917_p2();
    void thread_add_ln9_fu_232_p2();
    void thread_and_ln28_10_fu_796_p2();
    void thread_and_ln28_11_fu_882_p2();
    void thread_and_ln28_12_fu_888_p2();
    void thread_and_ln28_13_fu_298_p2();
    void thread_and_ln28_7_fu_688_p2();
    void thread_and_ln28_8_fu_694_p2();
    void thread_and_ln28_9_fu_790_p2();
    void thread_and_ln28_fu_574_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_194_p4();
    void thread_ap_phi_mux_f_0_phi_fu_161_p4();
    void thread_ap_phi_mux_indvar_flatten23_phi_fu_150_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_172_p4();
    void thread_ap_phi_mux_r_0_phi_fu_183_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_10_fu_737_p1();
    void thread_bitcast_ln28_11_fu_810_p1();
    void thread_bitcast_ln28_12_fu_828_p1();
    void thread_bitcast_ln28_7_fu_616_p1();
    void thread_bitcast_ln28_8_fu_634_p1();
    void thread_bitcast_ln28_9_fu_719_p1();
    void thread_bitcast_ln28_fu_538_p1();
    void thread_c_fu_708_p2();
    void thread_conv_out_address0();
    void thread_conv_out_address1();
    void thread_conv_out_ce0();
    void thread_conv_out_ce1();
    void thread_f_fu_238_p2();
    void thread_grp_fu_201_p1();
    void thread_grp_fu_207_p1();
    void thread_grp_fu_928_p0();
    void thread_grp_fu_928_p1();
    void thread_grp_fu_928_p10();
    void thread_grp_fu_928_p2();
    void thread_grp_fu_928_p20();
    void thread_icmp_ln12_fu_244_p2();
    void thread_icmp_ln15_fu_292_p2();
    void thread_icmp_ln28_14_fu_562_p2();
    void thread_icmp_ln28_15_fu_652_p2();
    void thread_icmp_ln28_16_fu_658_p2();
    void thread_icmp_ln28_17_fu_670_p2();
    void thread_icmp_ln28_18_fu_676_p2();
    void thread_icmp_ln28_19_fu_754_p2();
    void thread_icmp_ln28_20_fu_760_p2();
    void thread_icmp_ln28_21_fu_772_p2();
    void thread_icmp_ln28_22_fu_778_p2();
    void thread_icmp_ln28_23_fu_846_p2();
    void thread_icmp_ln28_24_fu_852_p2();
    void thread_icmp_ln28_25_fu_864_p2();
    void thread_icmp_ln28_26_fu_870_p2();
    void thread_icmp_ln28_fu_556_p2();
    void thread_icmp_ln9_fu_226_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mul_ln28_2_fu_487_p1();
    void thread_mul_ln28_2_fu_487_p10();
    void thread_mul_ln28_2_fu_487_p2();
    void thread_mul_ln28_fu_352_p1();
    void thread_mul_ln28_fu_352_p10();
    void thread_mul_ln28_fu_352_p2();
    void thread_or_ln12_fu_310_p2();
    void thread_or_ln25_2_fu_358_p2();
    void thread_or_ln25_fu_220_p2();
    void thread_or_ln26_fu_431_p2();
    void thread_or_ln28_10_fu_784_p2();
    void thread_or_ln28_11_fu_858_p2();
    void thread_or_ln28_12_fu_876_p2();
    void thread_or_ln28_13_fu_402_p2();
    void thread_or_ln28_14_fu_510_p2();
    void thread_or_ln28_7_fu_664_p2();
    void thread_or_ln28_8_fu_682_p2();
    void thread_or_ln28_9_fu_766_p2();
    void thread_or_ln28_fu_568_p2();
    void thread_r_fu_304_p2();
    void thread_select_ln12_5_fu_332_p3();
    void thread_select_ln12_6_fu_340_p3();
    void thread_select_ln12_7_fu_364_p3();
    void thread_select_ln12_8_fu_476_p3();
    void thread_select_ln12_fu_316_p3();
    void thread_select_ln28_10_fu_270_p3();
    void thread_select_ln28_11_fu_278_p3();
    void thread_select_ln28_4_fu_700_p3();
    void thread_select_ln28_5_fu_802_p3();
    void thread_select_ln28_8_fu_250_p3();
    void thread_select_ln28_9_fu_258_p3();
    void thread_select_ln28_fu_580_p3();
    void thread_shl_ln25_mid1_fu_324_p3();
    void thread_shl_ln2_fu_372_p3();
    void thread_shl_ln_fu_212_p3();
    void thread_tmp_12_fu_394_p3();
    void thread_tmp_14_fu_620_p4();
    void thread_tmp_15_fu_638_p4();
    void thread_tmp_17_fu_723_p4();
    void thread_tmp_18_fu_740_p4();
    void thread_tmp_1_fu_418_p3();
    void thread_tmp_20_fu_814_p4();
    void thread_tmp_21_fu_832_p4();
    void thread_tmp_23_fu_502_p3();
    void thread_tmp_2_fu_515_p4();
    void thread_tmp_3_fu_525_p3();
    void thread_tmp_4_fu_447_p3();
    void thread_tmp_5_fu_594_p3();
    void thread_tmp_6_fu_906_p3();
    void thread_tmp_fu_408_p4();
    void thread_tmp_s_fu_542_p4();
    void thread_trunc_ln28_10_fu_648_p1();
    void thread_trunc_ln28_11_fu_733_p1();
    void thread_trunc_ln28_12_fu_750_p1();
    void thread_trunc_ln28_13_fu_824_p1();
    void thread_trunc_ln28_14_fu_842_p1();
    void thread_trunc_ln28_7_fu_498_p1();
    void thread_trunc_ln28_8_fu_552_p1();
    void thread_trunc_ln28_9_fu_630_p1();
    void thread_trunc_ln28_fu_390_p1();
    void thread_xor_ln28_fu_286_p2();
    void thread_zext_ln28_10_fu_266_p1();
    void thread_zext_ln28_13_fu_380_p1();
    void thread_zext_ln28_14_fu_426_p1();
    void thread_zext_ln28_15_fu_533_p1();
    void thread_zext_ln28_16_fu_437_p1();
    void thread_zext_ln28_17_fu_455_p1();
    void thread_zext_ln28_18_fu_465_p1();
    void thread_zext_ln28_19_fu_602_p1();
    void thread_zext_ln28_20_fu_611_p1();
    void thread_zext_ln28_fu_713_p1();
    void thread_zext_ln35_5_fu_913_p1();
    void thread_zext_ln35_6_fu_923_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
