// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibGp_H__
#define __conv_2_conv_2_weibGp_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibGp_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibGp_ram) {
        ram[0] = "0b00111101001001110110010011111000";
        ram[1] = "0b00111101011011000000111000100100";
        ram[2] = "0b10111110010000111100001110111100";
        ram[3] = "0b10111010000101011110110111011111";
        ram[4] = "0b10111100100101000100110010010011";
        ram[5] = "0b10111110000001010010101010010100";
        ram[6] = "0b00111100101110010001011110011111";
        ram[7] = "0b00111100101001011101101011000011";
        ram[8] = "0b10111011010000101110000111010011";
        ram[9] = "0b00111101011010010111111000011011";
        ram[10] = "0b00111101010100101010111110101101";
        ram[11] = "0b10111101100111001011000011101110";
        ram[12] = "0b00111100100000110100000011010110";
        ram[13] = "0b10111101010000110100101010000101";
        ram[14] = "0b00111100110101010111101110010000";
        ram[15] = "0b00111011110100000100001000110111";
        ram[16] = "0b00111101100110000010111101111010";
        ram[17] = "0b10111101111111101000100101111001";
        ram[18] = "0b10111011100000000010010110111100";
        ram[19] = "0b00111101010101101110100101110001";
        ram[20] = "0b10111101101111110010110110110000";
        ram[21] = "0b00111101100001101010100011101110";
        ram[22] = "0b10111101000000101110100010101111";
        ram[23] = "0b10111110001011111011011011101001";
        ram[24] = "0b00111101101101010101101011110101";
        ram[25] = "0b10111100111111111011010001100001";
        ram[26] = "0b00111101010000110111001111101011";
        ram[27] = "0b10111110100101001000001110001100";
        ram[28] = "0b00111101110100010100001011110111";
        ram[29] = "0b10111100000001110111000010010000";
        ram[30] = "0b00111110000100110110011111110111";
        ram[31] = "0b00111101110100001011001100000111";
        ram[32] = "0b00111101001010010000011011001111";
        ram[33] = "0b10111101101111101011000010110011";
        ram[34] = "0b10111101011100101111101011010100";
        ram[35] = "0b00111011110110000011110001000001";
        ram[36] = "0b10111101100101011001011110101110";
        ram[37] = "0b10111101100100000001001001100110";
        ram[38] = "0b00111101111110010100000001110011";
        ram[39] = "0b00111110010111100100110011100000";
        ram[40] = "0b10111110100111111110000010101110";
        ram[41] = "0b10111100001110010000110110010000";
        ram[42] = "0b00111101100100100110011100110010";
        ram[43] = "0b10111101000000110101011010101100";
        ram[44] = "0b00111110001100100111010100101111";
        ram[45] = "0b10111101100101110101010100101011";
        ram[46] = "0b10111110001000101010010001001111";
        ram[47] = "0b00111101111010000011101101100011";
        ram[48] = "0b10111100111100111111010110011110";
        ram[49] = "0b10111101110010111001001000110101";
        ram[50] = "0b10111110001010110111101000100111";
        ram[51] = "0b00111101111111100000101110111100";
        ram[52] = "0b10111101111001111010010111101000";
        ram[53] = "0b10111101111100010100101110100111";
        ram[54] = "0b10111110001011010101010001000001";
        ram[55] = "0b10111101110101011010000011010101";
        ram[56] = "0b00111101001000110101001100110100";
        ram[57] = "0b00111110000010001101111100001001";
        ram[58] = "0b00111011010100011110101101010010";
        ram[59] = "0b10111101000101001010100010100101";
        ram[60] = "0b10111101000110110100100000000001";
        ram[61] = "0b10111011001010011101110000011000";
        ram[62] = "0b00111101101110111010010001001000";
        ram[63] = "0b00111110010101111011111011100010";
        ram[64] = "0b00111011110001111100111100011011";
        ram[65] = "0b00111100110000111101100011001000";
        ram[66] = "0b10111100001001101000101100111101";
        ram[67] = "0b00111001111111001110111100001010";
        ram[68] = "0b00111101010100111000110000100000";
        ram[69] = "0b10111101110101111000100011010001";
        ram[70] = "0b00111110001000001010110001110110";
        ram[71] = "0b10111110001100001100101110101101";
        ram[72] = "0b00111100101110110011001011110011";
        ram[73] = "0b00111100000100001110001110111111";
        ram[74] = "0b00111101110101010000101001011100";
        ram[75] = "0b10111110000011010110110011110110";
        ram[76] = "0b00111110000001111001000010111110";
        ram[77] = "0b00111110000100000000100101100110";
        ram[78] = "0b10111101010010100110000000101011";
        ram[79] = "0b10111100101010000100011110101000";
        ram[80] = "0b00111101110011111100111011100011";
        ram[81] = "0b10111101000010101110000001010001";
        ram[82] = "0b00111101101111011111100101111011";
        ram[83] = "0b00111101100100011100001110100100";
        ram[84] = "0b10111110000111100010111111100010";
        ram[85] = "0b00111110000100000100000111101011";
        ram[86] = "0b00111100101010010011101001011011";
        ram[87] = "0b00111101110010110111001010101111";
        ram[88] = "0b00111101001101110111111000101111";
        ram[89] = "0b00111101011111000010011000111001";
        ram[90] = "0b10111110000110001000001111110100";
        ram[91] = "0b10111110011111101100111110101100";
        ram[92] = "0b10111010101110000101001011000100";
        ram[93] = "0b10111110011000000010000010100001";
        ram[94] = "0b00111101011010101000110000110101";
        ram[95] = "0b00111100111011010100111011010000";
        ram[96] = "0b00111101000111000111010110110100";
        ram[97] = "0b00111101010010011001000001111010";
        ram[98] = "0b10111110000011101000011100110110";
        ram[99] = "0b10111110001110111100110000100001";
        ram[100] = "0b00111110011010101010111010101000";
        ram[101] = "0b10111110110010001001010111010010";
        ram[102] = "0b00111110000100011010011011010110";
        ram[103] = "0b00111101001010111011011000001000";
        ram[104] = "0b10111110000001001000101101101111";
        ram[105] = "0b00111100000101111100100001111000";
        ram[106] = "0b00111110000110011100001001010101";
        ram[107] = "0b00111101111100001010110100111011";
        ram[108] = "0b00111100000000111111101011001001";
        ram[109] = "0b10111101100011110100100011110111";
        ram[110] = "0b00111101011101111011010100010001";
        ram[111] = "0b00111101110110010111011010011010";
        ram[112] = "0b00111110000100111001001111101001";
        ram[113] = "0b00111101100001101001011100001010";
        ram[114] = "0b10111101111101110101110100111010";
        ram[115] = "0b00111101010100000010100101110010";
        ram[116] = "0b10111101100010000100010010111010";
        ram[117] = "0b00111011100001000001001010111010";
        ram[118] = "0b10111101100111111011010000011110";
        ram[119] = "0b10111101100100100010000001010010";
        ram[120] = "0b10111101100100001011000100001101";
        ram[121] = "0b00111100101111010001010000011100";
        ram[122] = "0b00111100110101011010100001010100";
        ram[123] = "0b10111110100000111100000100000011";
        ram[124] = "0b00111100011101011001001101010101";
        ram[125] = "0b10111110000000101000011010110011";
        ram[126] = "0b10111101111110111101101001010011";
        ram[127] = "0b10111101101011111110111011100100";
        ram[128] = "0b10111110011010110011011001011110";
        ram[129] = "0b10111101101010011111011101011000";
        ram[130] = "0b10111101101001111101001000001001";
        ram[131] = "0b10111101101110100001101010011111";
        ram[132] = "0b00111101011000100110010011001000";
        ram[133] = "0b10111110011000100101101000101011";
        ram[134] = "0b00111101110011001001100101110110";
        ram[135] = "0b00111100111011101110000001011010";
        ram[136] = "0b10111101100110011100101000100100";
        ram[137] = "0b10111110001111110110001010001001";
        ram[138] = "0b10111110100110011100010011001111";
        ram[139] = "0b10111101011101010101110001100001";
        ram[140] = "0b00111110001011011100111000101100";
        ram[141] = "0b00111110000001110010101000011011";
        ram[142] = "0b10111100111111011100001010011101";
        ram[143] = "0b00111101010110010001110100110001";
        ram[144] = "0b10111101010010100100010100000101";
        ram[145] = "0b10111101111110001110111000111101";
        ram[146] = "0b10111010111001010001001011010010";
        ram[147] = "0b00111110000111010010111010010001";
        ram[148] = "0b00111101100100010100110001011010";
        ram[149] = "0b00111110001010101001100110100100";
        ram[150] = "0b00111101101010011011110100010011";
        ram[151] = "0b00111110101010011111001111100110";
        ram[152] = "0b00111101110000001000100010010001";
        ram[153] = "0b00111101110000111110001000110110";
        ram[154] = "0b10111110001001011111001010010110";
        ram[155] = "0b10111101011111110011100000001000";
        ram[156] = "0b10111100101001011000101111001010";
        ram[157] = "0b10111101100111010111001110101111";
        ram[158] = "0b10111101100111111001101000100010";
        ram[159] = "0b10111100011010011101001010111100";
        ram[160] = "0b10111110100011000000111111110001";
        ram[161] = "0b10111101011010000110110000111101";
        ram[162] = "0b10111110011101001111101011011110";
        ram[163] = "0b10111101011111111010010100010101";
        ram[164] = "0b00111110101111101011111000011000";
        ram[165] = "0b10111110001111101010100000100111";
        ram[166] = "0b00111101101000100100101010101111";
        ram[167] = "0b10111101110111000100011100000011";
        ram[168] = "0b00111101000111110010010111001101";
        ram[169] = "0b00111101010101100001011001111001";
        ram[170] = "0b00111101101010100011110100000001";
        ram[171] = "0b00111100111111011011010010001100";
        ram[172] = "0b10111110001001011001001000101000";
        ram[173] = "0b10111101110111101001000011011001";
        ram[174] = "0b10111101010001100110011101000001";
        ram[175] = "0b00111101111000101100000000100111";
        ram[176] = "0b00111100111101110100100111100001";
        ram[177] = "0b10111100001010111101101110110100";
        ram[178] = "0b00111101101100101001110011101010";
        ram[179] = "0b10111100111101101111000011100000";
        ram[180] = "0b10111100101011010011000011010100";
        ram[181] = "0b00111110010010010111101100011001";
        ram[182] = "0b00111100000011011101100000110101";
        ram[183] = "0b00111110101011011011011001010110";
        ram[184] = "0b10111110000101001001000010100010";
        ram[185] = "0b10111100110111111111001111101011";
        ram[186] = "0b00111100110101010011000001000101";
        ram[187] = "0b10111110100000000101111111010011";
        ram[188] = "0b00111101101101101111111101100000";
        ram[189] = "0b00111110001001010001001010110010";
        ram[190] = "0b00111010011010001011110101110011";
        ram[191] = "0b10111101111001111100101110101001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibGp) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibGp_ram* meminst;


SC_CTOR(conv_2_conv_2_weibGp) {
meminst = new conv_2_conv_2_weibGp_ram("conv_2_conv_2_weibGp_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibGp() {
    delete meminst;
}


};//endmodule
#endif
