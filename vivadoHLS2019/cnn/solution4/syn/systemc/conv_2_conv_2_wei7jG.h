// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_wei7jG_H__
#define __conv_2_conv_2_wei7jG_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_wei7jG_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_wei7jG_ram) {
        ram[0] = "0b00111101010000101011110011110001";
        ram[1] = "0b10111101100001111010100000011100";
        ram[2] = "0b10111110010011001100001110111011";
        ram[3] = "0b00111110010001000000101000011100";
        ram[4] = "0b10111110101100101010011101111100";
        ram[5] = "0b00111101101011010101101101000011";
        ram[6] = "0b10111101010011001101000011100110";
        ram[7] = "0b10111110000001111000001011100100";
        ram[8] = "0b00111110001001011110101010001101";
        ram[9] = "0b10111011110000101000011001100110";
        ram[10] = "0b00111100110000001111100110111010";
        ram[11] = "0b10111110001000101000110011001101";
        ram[12] = "0b10111101111011100101001000011111";
        ram[13] = "0b10111110000010100100010000111010";
        ram[14] = "0b00111110010001101111100001011111";
        ram[15] = "0b00111110000100000001100101101100";
        ram[16] = "0b10111110100101111001111000111001";
        ram[17] = "0b00111101100101110111011111000101";
        ram[18] = "0b10111101000111111000010010001100";
        ram[19] = "0b00111100111110111110011110110011";
        ram[20] = "0b00111101110101001001011010110000";
        ram[21] = "0b00111101000000100010100110000101";
        ram[22] = "0b10111110100110100111101101000011";
        ram[23] = "0b10111110001111111010011001000110";
        ram[24] = "0b10111011110110001111010110100000";
        ram[25] = "0b00111110000100101100010011010110";
        ram[26] = "0b00111101110000110100110011100100";
        ram[27] = "0b00111110001010000101011101011010";
        ram[28] = "0b10111101001000100101111110111100";
        ram[29] = "0b00111101011001010100101000100001";
        ram[30] = "0b10111110000101000011011010110000";
        ram[31] = "0b10111110100101011001100100000010";
        ram[32] = "0b00111110010000110000110110100011";
        ram[33] = "0b10111110011111001111001000110000";
        ram[34] = "0b00111110000001110100110100001110";
        ram[35] = "0b00111101111110100000001010110011";
        ram[36] = "0b10111101101111110011111001000001";
        ram[37] = "0b10111100001001100110101101101000";
        ram[38] = "0b10111110000111111101011001110011";
        ram[39] = "0b00111101110111010001101001111001";
        ram[40] = "0b00111110000000000111010110100111";
        ram[41] = "0b00111110100100001010101111010010";
        ram[42] = "0b10111110110001110001101001010111";
        ram[43] = "0b00111101110010010000000100001111";
        ram[44] = "0b10111011110010010101010111010111";
        ram[45] = "0b00111101100010101111001010011011";
        ram[46] = "0b10111101110010000011110000000101";
        ram[47] = "0b10111101010101110111110111001000";
        ram[48] = "0b10111110000011001011001010010001";
        ram[49] = "0b10111110000101101011010001101010";
        ram[50] = "0b00111101110000110100111010100010";
        ram[51] = "0b00111110000101011011010001000010";
        ram[52] = "0b10111101110100010100011001011000";
        ram[53] = "0b10111101111011100010100010100111";
        ram[54] = "0b10111101001101101000101011000110";
        ram[55] = "0b10111110010101111011001011111001";
        ram[56] = "0b10111101001111001100111010001101";
        ram[57] = "0b10111101111000010000111101100110";
        ram[58] = "0b00111100001001001011100111011110";
        ram[59] = "0b10111110011100001111001001110100";
        ram[60] = "0b10111101110010111010110010100111";
        ram[61] = "0b00111110000000101001011001001101";
        ram[62] = "0b00111101110111000010001111101110";
        ram[63] = "0b00111110000011001101101101010010";
        ram[64] = "0b10111110011001101010011010101011";
        ram[65] = "0b00111110000001110000000110101011";
        ram[66] = "0b10111100110011111010000110000000";
        ram[67] = "0b10111110011110000110101000000001";
        ram[68] = "0b10111110101101001100100011010101";
        ram[69] = "0b10111101010001011111110100011101";
        ram[70] = "0b10111110000011111010101111011110";
        ram[71] = "0b10111110000110000110101010000100";
        ram[72] = "0b00111101101010101100011111000101";
        ram[73] = "0b10111101100100000101000000100001";
        ram[74] = "0b00111101011010011011001010110001";
        ram[75] = "0b00111101101101111100000010001000";
        ram[76] = "0b10111100100010100001111110101000";
        ram[77] = "0b10111100001011010110101110110100";
        ram[78] = "0b00111110100010001010100001011011";
        ram[79] = "0b00111101000110011011111110110100";
        ram[80] = "0b00111101101010100001000110001110";
        ram[81] = "0b10111101101100001100101010110011";
        ram[82] = "0b00111101100110110000101100110000";
        ram[83] = "0b10111101000101100001001000000000";
        ram[84] = "0b00111101110111101110001011010110";
        ram[85] = "0b10111101010101010010011000100110";
        ram[86] = "0b00111100111001101101110011011011";
        ram[87] = "0b10111101000111110101011000010100";
        ram[88] = "0b00111101011101111111101011011001";
        ram[89] = "0b10111101001100011011111110100011";
        ram[90] = "0b10111110000001101100000110111000";
        ram[91] = "0b10111100011011000100000011111000";
        ram[92] = "0b00111110011010100110010010000111";
        ram[93] = "0b00111100110100110100000010111110";
        ram[94] = "0b10111101111011000010100100100110";
        ram[95] = "0b10111101101110100010000010000000";
        ram[96] = "0b10111101000010011101010100111111";
        ram[97] = "0b10111110011011001100001001000110";
        ram[98] = "0b10111101011010001000011000001110";
        ram[99] = "0b00111100001110000101001011111101";
        ram[100] = "0b10111110100101011101100000110101";
        ram[101] = "0b00111101110001101011010001101001";
        ram[102] = "0b10111110010011000100110011111000";
        ram[103] = "0b10111101001100111101001111110100";
        ram[104] = "0b10111101110111010010001011111101";
        ram[105] = "0b10111110001001100100111011100111";
        ram[106] = "0b10111110100011011011110010101000";
        ram[107] = "0b10111110010001100110001100001111";
        ram[108] = "0b10111101101110011111011100000101";
        ram[109] = "0b10111100011000011000101101010011";
        ram[110] = "0b10111110011001011010011101111001";
        ram[111] = "0b10111101011010110110001000110011";
        ram[112] = "0b10111110011111000000010111010101";
        ram[113] = "0b10111110101011010000100010101101";
        ram[114] = "0b00111110001101000100010010100010";
        ram[115] = "0b00111110010111101100000001001011";
        ram[116] = "0b10111110001000111111110100110110";
        ram[117] = "0b10111110000101000011111110000110";
        ram[118] = "0b10111010010101011001010011001110";
        ram[119] = "0b10111110011110110011101111101101";
        ram[120] = "0b00111101000101111101100101100111";
        ram[121] = "0b10111101000110101110000110010110";
        ram[122] = "0b10111101101110111101111000010001";
        ram[123] = "0b00111010001101100101110101101000";
        ram[124] = "0b00111110010001100100001100010001";
        ram[125] = "0b00111101111000001011011010111111";
        ram[126] = "0b10111110100000010001011100010011";
        ram[127] = "0b10111101111001111001001100101110";
        ram[128] = "0b00111110000111010001100011101101";
        ram[129] = "0b00111110001000110110011000101111";
        ram[130] = "0b00111110010000001011011001101101";
        ram[131] = "0b10111101100010011001001011011111";
        ram[132] = "0b10111110000100100000011101110000";
        ram[133] = "0b00111100001011010101110111001100";
        ram[134] = "0b10111110100001000111111001010101";
        ram[135] = "0b10111110001111010101011010111010";
        ram[136] = "0b10111110010110111010111100011000";
        ram[137] = "0b10111101110111011001011110000011";
        ram[138] = "0b00111011101011011101000110111000";
        ram[139] = "0b10111010111001000111001001001010";
        ram[140] = "0b10111110001011011110001010100100";
        ram[141] = "0b00111100100010001010000101100110";
        ram[142] = "0b10111110100101010010011111111001";
        ram[143] = "0b10111110000100010000000101100110";
        ram[144] = "0b00111101011111000100101011010010";
        ram[145] = "0b00111101001110100101111111010010";
        ram[146] = "0b00111101101010100010001111000001";
        ram[147] = "0b00111100110110010111110000000011";
        ram[148] = "0b10111110100010001111100011110100";
        ram[149] = "0b10111110010110110010101111010111";
        ram[150] = "0b00111101010101101110001010110101";
        ram[151] = "0b00111101100001110000001000001100";
        ram[152] = "0b10111110011111111100100111010001";
        ram[153] = "0b10111110011110010110001101111011";
        ram[154] = "0b00111101101010101011010010011010";
        ram[155] = "0b10111101000111010101111101101101";
        ram[156] = "0b10111100111000101110110100110011";
        ram[157] = "0b00111110001100111101001011011001";
        ram[158] = "0b00111101101011000110010000000000";
        ram[159] = "0b10111011101001011001110110001110";
        ram[160] = "0b10111101001101011000101101011100";
        ram[161] = "0b10111110100001111001110010101100";
        ram[162] = "0b00111101001001101011100001000010";
        ram[163] = "0b10111110001011010100110011011110";
        ram[164] = "0b10111110000001111101101101110001";
        ram[165] = "0b10111110010000100100001111110101";
        ram[166] = "0b10111101111000110010011000011101";
        ram[167] = "0b10111110100101000001010010000111";
        ram[168] = "0b10111101110110010000100001111110";
        ram[169] = "0b10111110011111011010101100010010";
        ram[170] = "0b10111110001001101001101011100000";
        ram[171] = "0b10111110010111011011000001001000";
        ram[172] = "0b10111110010100000101010110010110";
        ram[173] = "0b00111101010100100100001011010000";
        ram[174] = "0b10111110101111100110011000111011";
        ram[175] = "0b10111110001010000001111000011010";
        ram[176] = "0b00111101110110111001100011110011";
        ram[177] = "0b10111101010011110100011001101000";
        ram[178] = "0b10111101110110111011111001010010";
        ram[179] = "0b00111110000010010110011000100110";
        ram[180] = "0b00111101000010111111000010101110";
        ram[181] = "0b00111101110001000001001011100010";
        ram[182] = "0b10111101010101110111001010011000";
        ram[183] = "0b00111110001001110110111110011011";
        ram[184] = "0b00111101010100010111100101000011";
        ram[185] = "0b10111110000011001001001001011000";
        ram[186] = "0b10111110100000011010000010111111";
        ram[187] = "0b00111001101111101000100111000100";
        ram[188] = "0b00111101111001110111100000000101";
        ram[189] = "0b10111110010000101110101111100010";
        ram[190] = "0b00111101101010110000001110000010";
        ram[191] = "0b10111101110101100110010001100101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_wei7jG) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_wei7jG_ram* meminst;


SC_CTOR(conv_2_conv_2_wei7jG) {
meminst = new conv_2_conv_2_wei7jG_ram("conv_2_conv_2_wei7jG_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_wei7jG() {
    delete meminst;
}


};//endmodule
#endif
