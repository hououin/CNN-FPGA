// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibQq_H__
#define __conv_2_conv_2_weibQq_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibQq_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibQq_ram) {
        ram[0] = "0b10111101000100101100111101001011";
        ram[1] = "0b10111110001011101010110100000001";
        ram[2] = "0b00111100010011110101011100001100";
        ram[3] = "0b10111110000101100011011001110100";
        ram[4] = "0b00111100011111000101100111000101";
        ram[5] = "0b10111101000011010000101000010111";
        ram[6] = "0b00111101101011001000001001010101";
        ram[7] = "0b10111100100001011011010111000000";
        ram[8] = "0b10111100111000001011000110011001";
        ram[9] = "0b00111101010101110011110101101110";
        ram[10] = "0b10111100110110110101101011011101";
        ram[11] = "0b00111101111011010100010111010100";
        ram[12] = "0b10111101000101000001000001011000";
        ram[13] = "0b10111101000011000001000110111100";
        ram[14] = "0b10111101011011011110000010000110";
        ram[15] = "0b10111110000011110111010010100000";
        ram[16] = "0b00111100100111100001101001100010";
        ram[17] = "0b00111101000110101101101001101100";
        ram[18] = "0b10111100101110100110001011010110";
        ram[19] = "0b00111110000010110110101110000010";
        ram[20] = "0b10111110011101101110101111101010";
        ram[21] = "0b10111101110000000001000010110011";
        ram[22] = "0b00111011010110010100110001111101";
        ram[23] = "0b10111101101010000010010001100000";
        ram[24] = "0b00111101100111110010010101101011";
        ram[25] = "0b10111100110011100001111111000111";
        ram[26] = "0b10111101111100011100110001111111";
        ram[27] = "0b10111110000101100111110011010100";
        ram[28] = "0b10111110001010011011010000100100";
        ram[29] = "0b00111101111100111001101000110110";
        ram[30] = "0b10111100001100010110100101000011";
        ram[31] = "0b10111110011101111101001001000011";
        ram[32] = "0b00111100110010111111010011001100";
        ram[33] = "0b10111110011100110010110001100111";
        ram[34] = "0b10111101101101011111010100111110";
        ram[35] = "0b10111101101100011101110111111101";
        ram[36] = "0b10111110101011010001100001101111";
        ram[37] = "0b10111110011001101011010111110011";
        ram[38] = "0b10111100110001100111101000010011";
        ram[39] = "0b10111100101001011011100101010100";
        ram[40] = "0b00111110000001111111010101101000";
        ram[41] = "0b10111011000001111011010100111000";
        ram[42] = "0b00111110000010001001111100101110";
        ram[43] = "0b10111010111011110010100010001111";
        ram[44] = "0b00111110000011100110110110111000";
        ram[45] = "0b10111110000000100001000010010101";
        ram[46] = "0b10111100101100101100101111010001";
        ram[47] = "0b10111101011111101010110000001100";
        ram[48] = "0b00111100000000011000001111110000";
        ram[49] = "0b10111110100011110100111110000010";
        ram[50] = "0b00111100111001110000111000110110";
        ram[51] = "0b00111101010001100110110000000100";
        ram[52] = "0b10111110010011011010001111110000";
        ram[53] = "0b10111100100111011010010100000101";
        ram[54] = "0b00111101101110010111101101011011";
        ram[55] = "0b10111110001010001100111000101111";
        ram[56] = "0b10111101110010100001001110100100";
        ram[57] = "0b00111110000000011111101110010110";
        ram[58] = "0b00111101010111101111011100011010";
        ram[59] = "0b00111110011010000110010100001100";
        ram[60] = "0b10111110000011111100110000011000";
        ram[61] = "0b10111110001101101100110001110111";
        ram[62] = "0b00111101100000010000000010110111";
        ram[63] = "0b10111101011100010001111110111101";
        ram[64] = "0b10111100100111001011100101101110";
        ram[65] = "0b10111101100110001010000010011010";
        ram[66] = "0b10111110001001100110000001001100";
        ram[67] = "0b00111110000001100001100011010111";
        ram[68] = "0b10111101000001100011110011101101";
        ram[69] = "0b10111101100111001001001011101001";
        ram[70] = "0b00111100110011111111000001010111";
        ram[71] = "0b00111101011111110100100001011010";
        ram[72] = "0b00111101001111110110100010101100";
        ram[73] = "0b10111100001100110100111001011011";
        ram[74] = "0b10111110001110001110011100010000";
        ram[75] = "0b10111110010010111010000110100111";
        ram[76] = "0b00111100110100011111110100000001";
        ram[77] = "0b10111101010001000001110000101101";
        ram[78] = "0b00111101110111010000010011000000";
        ram[79] = "0b00111100110010100101101111010000";
        ram[80] = "0b10111101101100010100111000101100";
        ram[81] = "0b10111100111000001111110101001011";
        ram[82] = "0b10111110100101010011001000101011";
        ram[83] = "0b00111100101101000101001011010110";
        ram[84] = "0b10111110011100110111000111010000";
        ram[85] = "0b10111101100110000111111100001001";
        ram[86] = "0b10111100100001011111100111110011";
        ram[87] = "0b10111101110001111111111010111010";
        ram[88] = "0b10111011001000000111001110011000";
        ram[89] = "0b10111101011000110010111110011000";
        ram[90] = "0b00111101011100110001100111011000";
        ram[91] = "0b00111110010110000111010010111010";
        ram[92] = "0b00111101110011010000010010110001";
        ram[93] = "0b10111110000011011010111011000101";
        ram[94] = "0b10111101101001101011110110000000";
        ram[95] = "0b00111101111010110101000101100110";
        ram[96] = "0b10111101001001011111011110100111";
        ram[97] = "0b10111100100101100111011101011111";
        ram[98] = "0b00111101101101010001100111010010";
        ram[99] = "0b10111101110100011101111001011111";
        ram[100] = "0b10111110000110111000111101001010";
        ram[101] = "0b00111101100011001110010010111001";
        ram[102] = "0b00111110001000000110101000000010";
        ram[103] = "0b10111101000001100111011110000000";
        ram[104] = "0b00111100111100000101000010011100";
        ram[105] = "0b00111101011110001111001111000000";
        ram[106] = "0b00111101111111110010101010001010";
        ram[107] = "0b00111101010101111000011011100010";
        ram[108] = "0b00111110001111101001001101101010";
        ram[109] = "0b10111110001111111001001001011111";
        ram[110] = "0b00111101100111010010011100010111";
        ram[111] = "0b00111110000011011111010100110001";
        ram[112] = "0b00111101011111000101000001010000";
        ram[113] = "0b00111101101010001010000100100111";
        ram[114] = "0b10111101111101101111010100001000";
        ram[115] = "0b10111101011110111010111101111111";
        ram[116] = "0b00111110000100010000001010001000";
        ram[117] = "0b10111110001101000001101100110111";
        ram[118] = "0b00111101011010010001000101110001";
        ram[119] = "0b10111110011011010100011110001100";
        ram[120] = "0b10111101100110101000111000010001";
        ram[121] = "0b10111101101011001001010000010001";
        ram[122] = "0b10111101011000111111010001010110";
        ram[123] = "0b00111101001111111010011000000011";
        ram[124] = "0b10111101101011100110001111011101";
        ram[125] = "0b10111110010001110010011010010110";
        ram[126] = "0b00111101101010100110010001011110";
        ram[127] = "0b00111100000111011000011100010001";
        ram[128] = "0b10111101001111010010001100001101";
        ram[129] = "0b10111101101111110110010001010000";
        ram[130] = "0b10111101100010010101000101110110";
        ram[131] = "0b10111101011101001101011001101101";
        ram[132] = "0b00111100001010101110100000111001";
        ram[133] = "0b10111110110001011111110000001000";
        ram[134] = "0b00111110000010100010011001011110";
        ram[135] = "0b10111101001010111110011001010001";
        ram[136] = "0b00111110000111000000000000001111";
        ram[137] = "0b10111110100111101101100011101110";
        ram[138] = "0b10111110000011001011101001110000";
        ram[139] = "0b10111110000111010010010001100011";
        ram[140] = "0b00111110000011011000000001010001";
        ram[141] = "0b00111110000010001100011000011011";
        ram[142] = "0b00111101001110111101001011011101";
        ram[143] = "0b10111101110001000000010110110011";
        ram[144] = "0b10111101101101110001110011101110";
        ram[145] = "0b10111101110011111011101010000000";
        ram[146] = "0b00111100001110110011100001010100";
        ram[147] = "0b10111101000001111100100100111000";
        ram[148] = "0b00111100110011111001101101100101";
        ram[149] = "0b10111101000110100010000010001111";
        ram[150] = "0b10111011111100001011110011100100";
        ram[151] = "0b00111100111111000011100000111001";
        ram[152] = "0b00111110100000101010101001001111";
        ram[153] = "0b00111101101101100001101110000101";
        ram[154] = "0b10111110100011111000110111101000";
        ram[155] = "0b00111101110101111011010000000010";
        ram[156] = "0b10111101000101110011000001100001";
        ram[157] = "0b10111101011110011100000101010001";
        ram[158] = "0b10111110011000110000101011000111";
        ram[159] = "0b00111101100001011010000100111101";
        ram[160] = "0b10111101110111001111111101011110";
        ram[161] = "0b00111101111010010110100110110001";
        ram[162] = "0b10111110101000101010111000101101";
        ram[163] = "0b10111110110010000001000001000110";
        ram[164] = "0b00111110000000100101111010111110";
        ram[165] = "0b00111110011000100000101110101001";
        ram[166] = "0b00111101101101101110100101111101";
        ram[167] = "0b00111011110011000100010110000111";
        ram[168] = "0b10111011100100001010100111110001";
        ram[169] = "0b00111110001100110001101101101111";
        ram[170] = "0b00111101100110111010011011101000";
        ram[171] = "0b00111110000000100010111110100110";
        ram[172] = "0b10111101011011011111101111001111";
        ram[173] = "0b10111100110111110100010000110111";
        ram[174] = "0b00111110100011111001101001011101";
        ram[175] = "0b00111110000000000100000011010111";
        ram[176] = "0b00111101000000010110110111100010";
        ram[177] = "0b00111110010100001010001101011011";
        ram[178] = "0b00111101111010000110110000100100";
        ram[179] = "0b10111110100101011111100111011011";
        ram[180] = "0b00111101101111100101110100111111";
        ram[181] = "0b10111110000100101111010011011110";
        ram[182] = "0b10111101010111000001111111000000";
        ram[183] = "0b00111100110110110000010001000010";
        ram[184] = "0b10111101100010110001000000111011";
        ram[185] = "0b10111010111101101000110100110010";
        ram[186] = "0b00111101011101111101000011101010";
        ram[187] = "0b10111101110110100010001100110111";
        ram[188] = "0b10111100110000110000101110010001";
        ram[189] = "0b00111101000111110000010011001101";
        ram[190] = "0b10111110000000110110110000011011";
        ram[191] = "0b10111101100110010001001000010000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibQq) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibQq_ram* meminst;


SC_CTOR(conv_2_conv_2_weibQq) {
meminst = new conv_2_conv_2_weibQq_ram("conv_2_conv_2_weibQq_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibQq() {
    delete meminst;
}


};//endmodule
#endif
