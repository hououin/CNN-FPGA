// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibpm_H__
#define __conv_2_conv_2_weibpm_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibpm_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibpm_ram) {
        ram[0] = "0b10111110011010110011101100110011";
        ram[1] = "0b00111101110110100101001110101101";
        ram[2] = "0b10111110010100010101110100111010";
        ram[3] = "0b00111101011010111101001110100110";
        ram[4] = "0b00111110000111000100101000001100";
        ram[5] = "0b10111011101011000100101000001100";
        ram[6] = "0b00111101011110010001110101110101";
        ram[7] = "0b10111011000100000010001100101001";
        ram[8] = "0b00111110000001101111000000010010";
        ram[9] = "0b10111101101100011110101101100100";
        ram[10] = "0b00111110000110010110010100110110";
        ram[11] = "0b00111100011000001100001011011000";
        ram[12] = "0b00111110011000101011111010101111";
        ram[13] = "0b00111110000110111011010101101100";
        ram[14] = "0b00111100001101001001100001010001";
        ram[15] = "0b00111100101011111100010011000010";
        ram[16] = "0b00111101001000010100000000001010";
        ram[17] = "0b10111101101110101010000111110000";
        ram[18] = "0b00111101011111110111100100110100";
        ram[19] = "0b10111110111001110010111101001001";
        ram[20] = "0b00111110000111011110111110111100";
        ram[21] = "0b00111101010110001000011111000001";
        ram[22] = "0b10111101010001101110110010001000";
        ram[23] = "0b00111101000011010011100111001100";
        ram[24] = "0b00111100111010110111100010100010";
        ram[25] = "0b10111100100100111101110010101011";
        ram[26] = "0b10111110000010101010111001010110";
        ram[27] = "0b10111101111111110010100000100111";
        ram[28] = "0b00111101111000001000001100001111";
        ram[29] = "0b10111110011101111110011100010001";
        ram[30] = "0b00111100101010010010010100001001";
        ram[31] = "0b10111110111010111111111000010011";
        ram[32] = "0b00111101100000011010001010010010";
        ram[33] = "0b10111011010100001100100000100000";
        ram[34] = "0b10111101101000100101000001110010";
        ram[35] = "0b00111101101100001010010100101000";
        ram[36] = "0b10111110010000011110000111100010";
        ram[37] = "0b00111110010110111101010011110000";
        ram[38] = "0b00111101101111010000101111101001";
        ram[39] = "0b00111101110010100001001001111010";
        ram[40] = "0b10111110100101111000111000100000";
        ram[41] = "0b10111110011001101011010000111111";
        ram[42] = "0b10111100101000110101010100010010";
        ram[43] = "0b10111101010010000100010010101100";
        ram[44] = "0b00111011000010011011101001110111";
        ram[45] = "0b10111101011010000000000001101011";
        ram[46] = "0b00111101010101010001011001000001";
        ram[47] = "0b10111101111011101010000100111111";
        ram[48] = "0b10111110101100111110010101011110";
        ram[49] = "0b10111110000000101011000110110011";
        ram[50] = "0b00111110001101101010110001000101";
        ram[51] = "0b00111110100101000000111111001010";
        ram[52] = "0b10111101110100110101110010111001";
        ram[53] = "0b10111101101001000001111010011101";
        ram[54] = "0b10111101101001011011110010010000";
        ram[55] = "0b10111101000111011100000011101111";
        ram[56] = "0b00111110001000101011001001011100";
        ram[57] = "0b10111110011101111011111001111101";
        ram[58] = "0b10111101000000111001110000111000";
        ram[59] = "0b00111100111000000000011111111001";
        ram[60] = "0b10111101010100101010110101010011";
        ram[61] = "0b10111100100011101000101100111110";
        ram[62] = "0b00111110001111100001101110111110";
        ram[63] = "0b10111101100011101010110111110101";
        ram[64] = "0b10111101111000101000011011001001";
        ram[65] = "0b00111110010100111010111001001110";
        ram[66] = "0b00111101000001001111010111010111";
        ram[67] = "0b10111100111111000000111101110100";
        ram[68] = "0b00111101100100010000111101101001";
        ram[69] = "0b00111100111110001011111110001010";
        ram[70] = "0b00111101000001000111010100001001";
        ram[71] = "0b10111101101011011010111111100111";
        ram[72] = "0b00111101100110000101010001000011";
        ram[73] = "0b10111101011101001010111110101010";
        ram[74] = "0b00111110001110110000101011110111";
        ram[75] = "0b00111101000011000100101110010110";
        ram[76] = "0b00111110000100101101001010011111";
        ram[77] = "0b00111101100000101000000001100111";
        ram[78] = "0b10111100011100010011000000101100";
        ram[79] = "0b10111100110010111101011011111111";
        ram[80] = "0b10111101100001101100111111001100";
        ram[81] = "0b00111101010101011000101000001101";
        ram[82] = "0b00111100111110000000010011111000";
        ram[83] = "0b10111101011011110111110110011111";
        ram[84] = "0b00111100101100011000111110110010";
        ram[85] = "0b00111101101100110011011100100101";
        ram[86] = "0b00111100101111101010110100011001";
        ram[87] = "0b00111101101001010101000111110110";
        ram[88] = "0b10111101011000110101111110001011";
        ram[89] = "0b10111100101000101001000010011001";
        ram[90] = "0b10111101011000001101101100010001";
        ram[91] = "0b10111110000000101000001011100110";
        ram[92] = "0b00111101010110110010101101001111";
        ram[93] = "0b10111101101101110110101110000101";
        ram[94] = "0b00111101100010110010011000000101";
        ram[95] = "0b00111101001101110111101000000101";
        ram[96] = "0b00111101001101001010001101001100";
        ram[97] = "0b10111101000000111010011000111101";
        ram[98] = "0b00111101000111000110001010100100";
        ram[99] = "0b10111110010111100101100011011101";
        ram[100] = "0b10111100000110000000011011000000";
        ram[101] = "0b00111101100000100001100001110000";
        ram[102] = "0b00111110011100110011111010100011";
        ram[103] = "0b10111010111110001111011110110010";
        ram[104] = "0b10111101010101001001110011111111";
        ram[105] = "0b10111100110111110000000100011001";
        ram[106] = "0b00111011110010110110001000100110";
        ram[107] = "0b10111110010001000101010011001011";
        ram[108] = "0b00111101111101111110001111011011";
        ram[109] = "0b00111101110011011101010011110111";
        ram[110] = "0b00111110001011101000001011101100";
        ram[111] = "0b00111101001101010101001001100001";
        ram[112] = "0b00111110010100110011100001000011";
        ram[113] = "0b10111110100000010010011011111100";
        ram[114] = "0b00111110000001100000010101000101";
        ram[115] = "0b00111101101101011001000110010001";
        ram[116] = "0b10111101011100111101001100101110";
        ram[117] = "0b00111101010101011100000010000011";
        ram[118] = "0b10111101011110001001111011000010";
        ram[119] = "0b10111100010001110101110110111001";
        ram[120] = "0b10111110010100011101111001110111";
        ram[121] = "0b10111101100000010111000111001111";
        ram[122] = "0b00111110001001001100110111010011";
        ram[123] = "0b10111101101011011100001101000101";
        ram[124] = "0b00111101110101001111000001111110";
        ram[125] = "0b10111110001100000110010100100101";
        ram[126] = "0b10111101010001011001010011011001";
        ram[127] = "0b10111101100000010101111100101110";
        ram[128] = "0b00111100100100001111010100010010";
        ram[129] = "0b10111110001011011111110111000110";
        ram[130] = "0b10111101110110101000111011011110";
        ram[131] = "0b00111100111111000110100000010010";
        ram[132] = "0b00111101001110001110011100111011";
        ram[133] = "0b10111011011101000100011010101000";
        ram[134] = "0b00111101111110100111110110100111";
        ram[135] = "0b10111100110001011001011101011101";
        ram[136] = "0b10111101101111110111011101100100";
        ram[137] = "0b00111100000111111100101001111111";
        ram[138] = "0b10111110010011001100011000110100";
        ram[139] = "0b00111101100101011000100001100000";
        ram[140] = "0b00111110011101100110111100111001";
        ram[141] = "0b00111100111111110000111010110110";
        ram[142] = "0b10111101100101010101110011100110";
        ram[143] = "0b00111101000100101001010110101000";
        ram[144] = "0b10111110010001000111011100000101";
        ram[145] = "0b10111101100100011001111111100111";
        ram[146] = "0b10111101000111011101001101010110";
        ram[147] = "0b00111101011110101111001100010100";
        ram[148] = "0b10111110001001001100001100110101";
        ram[149] = "0b00111110001111000010111110111011";
        ram[150] = "0b10111101111011010010110101011011";
        ram[151] = "0b00111110000100011010111011101011";
        ram[152] = "0b00111100100010111010000111100011";
        ram[153] = "0b00111110011110110000100000011001";
        ram[154] = "0b10111100100001110001101001101000";
        ram[155] = "0b00111101111100011111100000100100";
        ram[156] = "0b10111101000001000111101001001011";
        ram[157] = "0b10111101101110101010101011100011";
        ram[158] = "0b10111101011011011111101100000111";
        ram[159] = "0b00111101100011010011010000011111";
        ram[160] = "0b00111101110111111011001010001011";
        ram[161] = "0b10111101100001110001101010101011";
        ram[162] = "0b00111101100100001101011011000001";
        ram[163] = "0b10111110100110100000000011111000";
        ram[164] = "0b00111110001100001000100000110000";
        ram[165] = "0b10111100100100010000011100000111";
        ram[166] = "0b00111101101110100001101100111010";
        ram[167] = "0b10111110010010000100111111010110";
        ram[168] = "0b10111100100001011100001000010101";
        ram[169] = "0b00111110000010010110000010000101";
        ram[170] = "0b00111100000011000000010011111111";
        ram[171] = "0b00111101101011001010101111000010";
        ram[172] = "0b00111100100010110111010001111011";
        ram[173] = "0b00111101010100011100011011110000";
        ram[174] = "0b00111101100110111001010110100011";
        ram[175] = "0b00111110000100010001000110101011";
        ram[176] = "0b00111101111000100011111100111100";
        ram[177] = "0b10111110000110001101010100101100";
        ram[178] = "0b00111110000111010101011101100100";
        ram[179] = "0b10111110000101100110010100000011";
        ram[180] = "0b00111101111010000101100111001111";
        ram[181] = "0b00111110000001011000010101111100";
        ram[182] = "0b00111110000011001000010100111100";
        ram[183] = "0b00111110011011111100101001011111";
        ram[184] = "0b10111110010001110110101010100110";
        ram[185] = "0b10111101000011100111000110110011";
        ram[186] = "0b00111110000110011111011100100101";
        ram[187] = "0b10111101011011011111001100001100";
        ram[188] = "0b00111110010100010000111100100000";
        ram[189] = "0b00111110011001111100110111011101";
        ram[190] = "0b10111110010110111110111110110000";
        ram[191] = "0b10111110000001101110110100000001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibpm) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibpm_ram* meminst;


SC_CTOR(conv_2_conv_2_weibpm) {
meminst = new conv_2_conv_2_weibpm_ram("conv_2_conv_2_weibpm_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibpm() {
    delete meminst;
}


};//endmodule
#endif
