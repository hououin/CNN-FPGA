// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiyd2_H__
#define __conv_2_conv_2_weiyd2_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiyd2_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiyd2_ram) {
        ram[0] = "0b00111110000111100101111111000010";
        ram[1] = "0b10111101010011100110000000000101";
        ram[2] = "0b00111101101111100010000111000111";
        ram[3] = "0b10111100101001000100001111010011";
        ram[4] = "0b10111110001000111011110101011100";
        ram[5] = "0b00111101011110110111110011011001";
        ram[6] = "0b00111101110101110110000100011100";
        ram[7] = "0b10111101101111110101010111111010";
        ram[8] = "0b00111101111001010001010111111010";
        ram[9] = "0b00111101101110101110111111110111";
        ram[10] = "0b00111101111100111011101110010011";
        ram[11] = "0b10111101010011111011010000001001";
        ram[12] = "0b00111101100010000101001011010100";
        ram[13] = "0b10111110001001110000110110111101";
        ram[14] = "0b10111010011001001111100110000001";
        ram[15] = "0b10111101001011010100001001110111";
        ram[16] = "0b10111110011001111100101101010010";
        ram[17] = "0b00111100100011101111101111101100";
        ram[18] = "0b00111100000010011101011001010110";
        ram[19] = "0b00111101100000010010101100011001";
        ram[20] = "0b10111110100110011100001010001111";
        ram[21] = "0b10111110001111101110000010010011";
        ram[22] = "0b10111110001000111111010111001111";
        ram[23] = "0b10111110001100100010110110111011";
        ram[24] = "0b00111101000110010011000100111110";
        ram[25] = "0b00111110001001011111011111011000";
        ram[26] = "0b00111101101010000110011110101111";
        ram[27] = "0b00111101111011000101000110101110";
        ram[28] = "0b10111101010000011000011001101110";
        ram[29] = "0b00111110000010000100010001000100";
        ram[30] = "0b00111100111010110101111001111001";
        ram[31] = "0b10111101101010111111111011101101";
        ram[32] = "0b10111101000001100000000101010101";
        ram[33] = "0b10111110101111001111000000110000";
        ram[34] = "0b10111101001100110000110100010101";
        ram[35] = "0b00111110000001000100101000001110";
        ram[36] = "0b10111100000110110011000101110010";
        ram[37] = "0b00111101101001110100101000011000";
        ram[38] = "0b10111101100111010000101100100111";
        ram[39] = "0b00111101111001101111101010001110";
        ram[40] = "0b10111100010000100001111011111000";
        ram[41] = "0b00111110010010011011010111000000";
        ram[42] = "0b10111101110111010111100100011010";
        ram[43] = "0b00111101011100001101100111110111";
        ram[44] = "0b10111100111011010110101101001001";
        ram[45] = "0b00111100110011010001010001001100";
        ram[46] = "0b00111101101101111001010011010111";
        ram[47] = "0b00111110100001000101001011001111";
        ram[48] = "0b00111100100111101100110011000000";
        ram[49] = "0b10111110101101000100001101101000";
        ram[50] = "0b10111101111111100010101110000101";
        ram[51] = "0b00111101000110010111101000010111";
        ram[52] = "0b10111110101100001110110001001011";
        ram[53] = "0b00111101000011001000011100001110";
        ram[54] = "0b00111110000100101101111101001100";
        ram[55] = "0b10111110100011011011100001100101";
        ram[56] = "0b10111101101111011110000011100111";
        ram[57] = "0b00111100110101111111010111101111";
        ram[58] = "0b00111101010001100011110111101011";
        ram[59] = "0b10111100110010010100010111111000";
        ram[60] = "0b10111100111100000010101101011100";
        ram[61] = "0b10111101001100001101001101100111";
        ram[62] = "0b00111101010010111100001001101010";
        ram[63] = "0b00111100111100100000100111000100";
        ram[64] = "0b00111101101010001100100000011110";
        ram[65] = "0b10111101100110110010011101101001";
        ram[66] = "0b00111100100010001011010111011110";
        ram[67] = "0b10111101011110101100011100000010";
        ram[68] = "0b10111011010010100001101001000100";
        ram[69] = "0b00111100001011110111011001100001";
        ram[70] = "0b10111110011010011011001111000111";
        ram[71] = "0b10111100101011101110011101011111";
        ram[72] = "0b00111101100000010100101100011011";
        ram[73] = "0b10111100111001111110000101110010";
        ram[74] = "0b00111101000110000010110011001101";
        ram[75] = "0b10111101111110011110100010111110";
        ram[76] = "0b10111101100110000110000001100101";
        ram[77] = "0b10111110000001111110001001101110";
        ram[78] = "0b00111100111001010100010101000110";
        ram[79] = "0b10111100111001001011000010000011";
        ram[80] = "0b10111110000101001011011010111011";
        ram[81] = "0b10111100101111010111101111010000";
        ram[82] = "0b10111101101111011011010111011001";
        ram[83] = "0b00111101000010111111011110001001";
        ram[84] = "0b10111110110010011000010010100101";
        ram[85] = "0b10111110001011100111100001000010";
        ram[86] = "0b10111101011110111010100100011011";
        ram[87] = "0b10111101100000001101001010010001";
        ram[88] = "0b10111101000111010000100101001000";
        ram[89] = "0b00111101111001111101110110010100";
        ram[90] = "0b10111100101001001011111111100110";
        ram[91] = "0b10111101111101100010000011110101";
        ram[92] = "0b10111101011010000111011111000111";
        ram[93] = "0b00111101110111101111101010010111";
        ram[94] = "0b10111110011001111100011111110010";
        ram[95] = "0b00111101000111000100101110011010";
        ram[96] = "0b10111110100011111011010010101000";
        ram[97] = "0b10111110000001001011100110111011";
        ram[98] = "0b10111101001010000101110110101111";
        ram[99] = "0b10111100110101101100111010101101";
        ram[100] = "0b10111100010010001111000001110110";
        ram[101] = "0b00111101111111001101000111100001";
        ram[102] = "0b10111110011010101010000000101100";
        ram[103] = "0b00111100010111111001111100011010";
        ram[104] = "0b00111101001000100000001011011001";
        ram[105] = "0b00111101000011111010100100000100";
        ram[106] = "0b10111101110110010110110110101101";
        ram[107] = "0b10111101110010001110101001011000";
        ram[108] = "0b10111101101101101111001011000001";
        ram[109] = "0b10111110010001101000001011110011";
        ram[110] = "0b10111101010101001110010000010100";
        ram[111] = "0b00111101100000011010111001001101";
        ram[112] = "0b00111101100101100111000010000100";
        ram[113] = "0b10111110100011110000011010111011";
        ram[114] = "0b10111110011110001001101011111111";
        ram[115] = "0b00111100011111001111010110000000";
        ram[116] = "0b10111101001101011010101110001101";
        ram[117] = "0b10111011100101000000001011001111";
        ram[118] = "0b00111101110101101100110010011101";
        ram[119] = "0b10111101000011111111011010100011";
        ram[120] = "0b10111110010000001001101110110100";
        ram[121] = "0b00111101011101110010111110111110";
        ram[122] = "0b00111100110101011001011100011101";
        ram[123] = "0b10111101100011111001001010000011";
        ram[124] = "0b10111110001001110000101000010100";
        ram[125] = "0b10111100101111000001100101010011";
        ram[126] = "0b00111101001011011100001110110010";
        ram[127] = "0b00111101011000101101101001000000";
        ram[128] = "0b00111100101110100101011101001111";
        ram[129] = "0b00111110010001010100111010101101";
        ram[130] = "0b00111101101000100110001000111001";
        ram[131] = "0b00111101101001011100001100010011";
        ram[132] = "0b10111110010101000101011110001001";
        ram[133] = "0b10111101101111101100100000001110";
        ram[134] = "0b10111110011101101100100110011101";
        ram[135] = "0b10111100001000110001011100100101";
        ram[136] = "0b10111100110000000011101101010111";
        ram[137] = "0b00111100100100001101111011000000";
        ram[138] = "0b00111011110111111101001011011011";
        ram[139] = "0b10111110001100101110000101010000";
        ram[140] = "0b10111110110010000000100111100100";
        ram[141] = "0b00111110000001111010010011111110";
        ram[142] = "0b10111101100101010111001010001000";
        ram[143] = "0b00111101100110010110110000100111";
        ram[144] = "0b00111110000010110011011010011111";
        ram[145] = "0b10111101010110010101000001101110";
        ram[146] = "0b00111110000011100110001101100000";
        ram[147] = "0b00111101101101100000101110100000";
        ram[148] = "0b10111110001101101110111010110110";
        ram[149] = "0b10111110010000111101100001111011";
        ram[150] = "0b00111110000001001110000110011111";
        ram[151] = "0b10111110010101001001101011010000";
        ram[152] = "0b10111110000101100100001110100010";
        ram[153] = "0b00111100000101100111110000101100";
        ram[154] = "0b00111101000001010100101011011101";
        ram[155] = "0b10111101110110110111111001011011";
        ram[156] = "0b00111101101000111001101011100110";
        ram[157] = "0b00111101110011100110111101100111";
        ram[158] = "0b10111110100001011000010001001101";
        ram[159] = "0b00111101010110110010000011000110";
        ram[160] = "0b10111110111001110101001011101110";
        ram[161] = "0b00111110000001110100010111100100";
        ram[162] = "0b10111101111111100000101011110100";
        ram[163] = "0b10111110001100000010011110111110";
        ram[164] = "0b00111101110101111000000100001101";
        ram[165] = "0b00111100001000100010100111111100";
        ram[166] = "0b10111100110011001011100010000111";
        ram[167] = "0b10111101100001101111101010010111";
        ram[168] = "0b10111110001110001110110001001111";
        ram[169] = "0b10111101110000111100101010101100";
        ram[170] = "0b10111101101100110010101001000000";
        ram[171] = "0b00111101110011100001000011111100";
        ram[172] = "0b00111110001100001110101111001111";
        ram[173] = "0b10111110000100011110011110010011";
        ram[174] = "0b10111100111101001100010011110011";
        ram[175] = "0b10111100111101001001110111000011";
        ram[176] = "0b00111101100100111001100110100101";
        ram[177] = "0b10111101110111001101110111011100";
        ram[178] = "0b10111110100100011000000111010011";
        ram[179] = "0b10111101110000001011100110100001";
        ram[180] = "0b00111100101010011011100110110000";
        ram[181] = "0b10111110100010000100101110111001";
        ram[182] = "0b00111110010101101001111000001100";
        ram[183] = "0b00111110000110001011110100100111";
        ram[184] = "0b10111100001100000110001100000110";
        ram[185] = "0b10111100110101101110111000101110";
        ram[186] = "0b00111101101011101001001110010000";
        ram[187] = "0b10111100101011100000001011000101";
        ram[188] = "0b10111110001000101101110001100111";
        ram[189] = "0b10111101100001100111010101100101";
        ram[190] = "0b10111101010010111110010110100010";
        ram[191] = "0b10111101000101101101010000110000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiyd2) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiyd2_ram* meminst;


SC_CTOR(conv_2_conv_2_weiyd2) {
meminst = new conv_2_conv_2_weiyd2_ram("conv_2_conv_2_weiyd2_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiyd2() {
    delete meminst;
}


};//endmodule
#endif
