// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibxn_H__
#define __conv_2_conv_2_weibxn_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibxn_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibxn_ram) {
        ram[0] = "0b00111100000100010000010110111101";
        ram[1] = "0b10111110000010111111101110101100";
        ram[2] = "0b10111110000011010011110101111101";
        ram[3] = "0b10111101100101110100100011110001";
        ram[4] = "0b00111101101100000101000101111011";
        ram[5] = "0b10111101010000001010001111101111";
        ram[6] = "0b00111101110001001110101111101000";
        ram[7] = "0b00111101000011100110111111100111";
        ram[8] = "0b00111101101001100011011110101001";
        ram[9] = "0b10111101110010101001100001011111";
        ram[10] = "0b10111101011000100000110001100001";
        ram[11] = "0b00111101010000001001000000001011";
        ram[12] = "0b10111100110110101010111101101011";
        ram[13] = "0b00111011100110100010110011101011";
        ram[14] = "0b00111101101000001100001010100001";
        ram[15] = "0b00111101100001001000011010000100";
        ram[16] = "0b00111101100101101100111100101101";
        ram[17] = "0b10111011101100000010101110100000";
        ram[18] = "0b10111100000101110000000010101101";
        ram[19] = "0b10111101101110101010001010000011";
        ram[20] = "0b10111110001011000011010111111010";
        ram[21] = "0b00111100111101001100110010010110";
        ram[22] = "0b10111101101100110001101100110100";
        ram[23] = "0b00111101010110111101101010101010";
        ram[24] = "0b10111010100001111001000111111100";
        ram[25] = "0b00111101101000000110100011011101";
        ram[26] = "0b10111100001110100000011100110001";
        ram[27] = "0b10111110101011101010100101110111";
        ram[28] = "0b00111100100100100110001000000010";
        ram[29] = "0b10111101010011111101010101101011";
        ram[30] = "0b00111011101101100101100000001110";
        ram[31] = "0b10111110101111011001110010110001";
        ram[32] = "0b00111011010010110011100000001100";
        ram[33] = "0b10111101111111111110010100111000";
        ram[34] = "0b10111101101101101100001111100011";
        ram[35] = "0b10111101111000100011000111000011";
        ram[36] = "0b10111110001001001000000111111110";
        ram[37] = "0b10111101111010011010000111100001";
        ram[38] = "0b00111101000101100001001001110100";
        ram[39] = "0b00111101110101011000001011001100";
        ram[40] = "0b10111110010010010111100101100101";
        ram[41] = "0b10111101000101010000111110010011";
        ram[42] = "0b00111101111000010011111001111111";
        ram[43] = "0b10111011101001110011010001010001";
        ram[44] = "0b00111101100101111100100001111101";
        ram[45] = "0b00111101001101010010101101100101";
        ram[46] = "0b00111101100111000101101001101001";
        ram[47] = "0b10111101101110101111110000110001";
        ram[48] = "0b10111100101001110111110000010101";
        ram[49] = "0b10111110011011010000000001110000";
        ram[50] = "0b10111101000011011001011000110000";
        ram[51] = "0b10111100111110001110101000000001";
        ram[52] = "0b10111110010010011011110100111100";
        ram[53] = "0b10111101100110010100001101001011";
        ram[54] = "0b10111110000111110010001100100001";
        ram[55] = "0b10111101010010010000011100101110";
        ram[56] = "0b10111101110000000110011001101011";
        ram[57] = "0b00111101011110011011001010100110";
        ram[58] = "0b10111100111111010101101011011100";
        ram[59] = "0b00111101101110000110100000111101";
        ram[60] = "0b00111101001011001101000101100001";
        ram[61] = "0b10111101101010001111001001100100";
        ram[62] = "0b10111101011011000011101010000000";
        ram[63] = "0b00111101011011010110011110000100";
        ram[64] = "0b00111110000100011110000000110011";
        ram[65] = "0b10111101101001110011101111010101";
        ram[66] = "0b10111110010111011000000111101000";
        ram[67] = "0b00111101110010101101110011100110";
        ram[68] = "0b00111100110110001010001100000000";
        ram[69] = "0b00111101000011101100010100011011";
        ram[70] = "0b00111101000011010001011100101001";
        ram[71] = "0b10111101100101010000110111001110";
        ram[72] = "0b10111100110111100100111100101110";
        ram[73] = "0b00111011011001000010010010110010";
        ram[74] = "0b10111110000110111000100000100101";
        ram[75] = "0b10111101101110101110000111101110";
        ram[76] = "0b00111101101101101010110000111011";
        ram[77] = "0b00111101110010100001000010000100";
        ram[78] = "0b00111100111000001110101010001011";
        ram[79] = "0b10111100011011010001000111001111";
        ram[80] = "0b10111100101011000101001111000010";
        ram[81] = "0b00111101010110110010101111011111";
        ram[82] = "0b10111101001100110001000100001100";
        ram[83] = "0b00111011110110011011010000000011";
        ram[84] = "0b10111110000011101000101010001110";
        ram[85] = "0b00111110000001100001101110010010";
        ram[86] = "0b10111100100101001011101011101100";
        ram[87] = "0b10111100101001010000101110010100";
        ram[88] = "0b00111101101101010111100110011010";
        ram[89] = "0b10111100111101101101010110110110";
        ram[90] = "0b00111101100100000011001000000101";
        ram[91] = "0b00111101011100010101010111010000";
        ram[92] = "0b00111100001101100100101011111001";
        ram[93] = "0b10111110001100001000011011001000";
        ram[94] = "0b00111101110111001011111100110101";
        ram[95] = "0b00111101101110011101011110111011";
        ram[96] = "0b00111101110001011011010011001000";
        ram[97] = "0b10111110000100011101100000001010";
        ram[98] = "0b00111101000110000100001011111001";
        ram[99] = "0b10111101101001111011011101101001";
        ram[100] = "0b10111110001000010101110110110110";
        ram[101] = "0b10111110001110111100101100100010";
        ram[102] = "0b00111101101001101010100010111011";
        ram[103] = "0b10111101100100011100011011001111";
        ram[104] = "0b10111101010110010111100010011000";
        ram[105] = "0b10111101011010011001110111011000";
        ram[106] = "0b00111110000110000010000010010010";
        ram[107] = "0b10111100011110000111101100011110";
        ram[108] = "0b00111101000100010100001000011101";
        ram[109] = "0b10111101101001111101011111010001";
        ram[110] = "0b10111101010000010100110011011100";
        ram[111] = "0b10111011100001110000100001111010";
        ram[112] = "0b00111100110011010001110101111011";
        ram[113] = "0b10111110000010100111101001101010";
        ram[114] = "0b00111100011010101100100000100000";
        ram[115] = "0b10111101100100010100011101100001";
        ram[116] = "0b00111101011010000100111100111001";
        ram[117] = "0b00111101101011001110110010110001";
        ram[118] = "0b00111011101000100100111000101001";
        ram[119] = "0b10111110010101011010101101110010";
        ram[120] = "0b00111101110010101101110101001111";
        ram[121] = "0b00111101001010011101000011011110";
        ram[122] = "0b00111101110001100110111001010101";
        ram[123] = "0b00111010110011010011010010100111";
        ram[124] = "0b10111100100011110111100110101100";
        ram[125] = "0b10111101101111110101101111000111";
        ram[126] = "0b00111101101111000011100001100110";
        ram[127] = "0b10111011101011010001001110000110";
        ram[128] = "0b10111100111110111000101110010001";
        ram[129] = "0b10111101111110001110101000011101";
        ram[130] = "0b10111101001001101000101011101101";
        ram[131] = "0b00111101100010101101000101001011";
        ram[132] = "0b00111110000001011110010010110011";
        ram[133] = "0b10111110100100011001101011010000";
        ram[134] = "0b00111110001010000100100000001001";
        ram[135] = "0b00111100111100101111110011000101";
        ram[136] = "0b10111100101010101100011010000111";
        ram[137] = "0b10111110001111100101000011000001";
        ram[138] = "0b10111100000000111001010000010011";
        ram[139] = "0b10111110001010111000101001001101";
        ram[140] = "0b00111100111110111111001010001010";
        ram[141] = "0b10111100111011101010001010011101";
        ram[142] = "0b10111100010100011110001010011011";
        ram[143] = "0b10111101010111011010101011111001";
        ram[144] = "0b00111100100100011111100000111011";
        ram[145] = "0b10111101100100010011110000111101";
        ram[146] = "0b10111101001000101110111110111011";
        ram[147] = "0b10111101001101011010001000111111";
        ram[148] = "0b00111110011000111110010100011010";
        ram[149] = "0b00111100100010000011101110001000";
        ram[150] = "0b00111101100011100110000001001101";
        ram[151] = "0b00111101011100011010010001001111";
        ram[152] = "0b00111110000001101100000110111101";
        ram[153] = "0b10111101001101001110001110011011";
        ram[154] = "0b10111101110001110100101110101000";
        ram[155] = "0b10111010111000110111011000010101";
        ram[156] = "0b10111101100000000000111001001110";
        ram[157] = "0b10111100011111010110001100111111";
        ram[158] = "0b10111110001111010011010100001010";
        ram[159] = "0b10111101000011010110111000011000";
        ram[160] = "0b10111110001001101001111110011101";
        ram[161] = "0b00111101110010111011011110111000";
        ram[162] = "0b10111110001111011110000110011100";
        ram[163] = "0b10111110010110110100001101101000";
        ram[164] = "0b00111100100010110011011011011011";
        ram[165] = "0b00111011101000111010110100100001";
        ram[166] = "0b00111101110000100000100110101110";
        ram[167] = "0b00111100111101101111100110001101";
        ram[168] = "0b00111110000011111110101011100011";
        ram[169] = "0b00111100101001001110111101011001";
        ram[170] = "0b00111100100010100111000110000000";
        ram[171] = "0b00111100010000110000011011000011";
        ram[172] = "0b00111100011110011100010000100110";
        ram[173] = "0b10111101100101110011001100001001";
        ram[174] = "0b00111110001010111101010001001110";
        ram[175] = "0b00111101101000110000101100011110";
        ram[176] = "0b00111101000011010111000000001001";
        ram[177] = "0b00111101101010101010011111111101";
        ram[178] = "0b10111101000010001110110000101110";
        ram[179] = "0b10111110000001010111101100111110";
        ram[180] = "0b00111100100111111110110101010100";
        ram[181] = "0b10111010101000101010010111011011";
        ram[182] = "0b00111101000000011100010101101100";
        ram[183] = "0b10111110010010110100111001010000";
        ram[184] = "0b10111101100111100000111101110010";
        ram[185] = "0b10111101101010110001001000001011";
        ram[186] = "0b00111101111101101101010010111001";
        ram[187] = "0b10111101110100101110000110110110";
        ram[188] = "0b10111101110000000011100101001000";
        ram[189] = "0b10111110000111110010101011011000";
        ram[190] = "0b00111101010011110011011010010000";
        ram[191] = "0b00111101101000101100011100011100";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibxn) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibxn_ram* meminst;


SC_CTOR(conv_2_conv_2_weibxn) {
meminst = new conv_2_conv_2_weibxn_ram("conv_2_conv_2_weibxn_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibxn() {
    delete meminst;
}


};//endmodule
#endif
