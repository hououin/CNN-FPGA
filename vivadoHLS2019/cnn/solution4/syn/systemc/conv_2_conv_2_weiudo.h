// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weiudo_H__
#define __conv_2_conv_2_weiudo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weiudo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weiudo_ram) {
        ram[0] = "0b10111101100001100010111111011110";
        ram[1] = "0b00111101001110011000110011001010";
        ram[2] = "0b00111101101101111111101000101000";
        ram[3] = "0b10111110001000100101010100110110";
        ram[4] = "0b00111110000001101001000101101010";
        ram[5] = "0b10111100000110001100111011100111";
        ram[6] = "0b10111101111110001101101110000001";
        ram[7] = "0b00111110010111101101010111001010";
        ram[8] = "0b10111110100010101000110010011001";
        ram[9] = "0b00111101111001101110101100100111";
        ram[10] = "0b00111100111101011000101110111110";
        ram[11] = "0b10111101000111111111000010010001";
        ram[12] = "0b10111101110101011100110100001100";
        ram[13] = "0b00111011100101100011011011001000";
        ram[14] = "0b10111110000011011011010101110010";
        ram[15] = "0b10111110001100111101010010110110";
        ram[16] = "0b00111100101110010110000101001101";
        ram[17] = "0b10111110000011011010100110111111";
        ram[18] = "0b00111011010101110101100001000011";
        ram[19] = "0b10111100010010111111110010111110";
        ram[20] = "0b00111101111001110000110101111111";
        ram[21] = "0b00111101100100011101110111000100";
        ram[22] = "0b10111101111001101011100100110100";
        ram[23] = "0b00111110001110100110110110101010";
        ram[24] = "0b10111101111110010100110101111100";
        ram[25] = "0b10111110100000000000101011000101";
        ram[26] = "0b00111100001011011101100110001100";
        ram[27] = "0b10111101111000011100111100110111";
        ram[28] = "0b10111100001110101100110001010100";
        ram[29] = "0b10111100111010110110100010100011";
        ram[30] = "0b10111110100011001111001000100010";
        ram[31] = "0b10111100101100111000000110011010";
        ram[32] = "0b10111110001001011101000111001011";
        ram[33] = "0b00111110100010010110011100100011";
        ram[34] = "0b00111100100000111110101011011010";
        ram[35] = "0b00111110000101111001010000000100";
        ram[36] = "0b00111110011111111001110110111011";
        ram[37] = "0b00111000110011111011100110111000";
        ram[38] = "0b10111110001100011010110000011101";
        ram[39] = "0b00111100000001000011001011111111";
        ram[40] = "0b10111101110011010100100110000110";
        ram[41] = "0b10111110111000001100011011010000";
        ram[42] = "0b00111101101110110000011111101001";
        ram[43] = "0b10111110100010011110100110000111";
        ram[44] = "0b10111110001101101000001001100110";
        ram[45] = "0b10111110000100101100000101010100";
        ram[46] = "0b10111110001100111111101001100001";
        ram[47] = "0b10111110100101101100100010001111";
        ram[48] = "0b10111101110100110001101010011110";
        ram[49] = "0b00111100101101111111010101100100";
        ram[50] = "0b10111110011000000001011100110000";
        ram[51] = "0b10111101001010011011100111000010";
        ram[52] = "0b00111100100100100101111010010101";
        ram[53] = "0b00111101010101010101000111010100";
        ram[54] = "0b00111101000101111011010001011111";
        ram[55] = "0b00111100111111100100110011001001";
        ram[56] = "0b00111101000101011110111000100010";
        ram[57] = "0b00111101100010001010011110101000";
        ram[58] = "0b00111101001011010110010010010100";
        ram[59] = "0b10111110000011010010110010001000";
        ram[60] = "0b00111100010001000110100110010111";
        ram[61] = "0b00111101010011110011101001010011";
        ram[62] = "0b10111110001011110101010001011111";
        ram[63] = "0b10111110100000010000101111101111";
        ram[64] = "0b10111110001101001110100010101110";
        ram[65] = "0b00111011110001100010001111010000";
        ram[66] = "0b00111100000011110100100111001010";
        ram[67] = "0b10111100011011111011000101011001";
        ram[68] = "0b10111011101101100011001010010010";
        ram[69] = "0b10111100001001101001000101001100";
        ram[70] = "0b10111101111110101101110001011010";
        ram[71] = "0b00111101111101111101111011111110";
        ram[72] = "0b10111110110100101101010111101011";
        ram[73] = "0b10111110010011001111001110110100";
        ram[74] = "0b10111110001001010010011111111100";
        ram[75] = "0b10111101000100100011011110000010";
        ram[76] = "0b00111101000001101010000101010100";
        ram[77] = "0b00111101100011110100110100001101";
        ram[78] = "0b10111110110011011110100100011011";
        ram[79] = "0b10111110111001101110111111111011";
        ram[80] = "0b10111110011111010011011001100100";
        ram[81] = "0b00111101010100001010000100100100";
        ram[82] = "0b10111101101110001110100111011010";
        ram[83] = "0b10111101010000011001110111110110";
        ram[84] = "0b00111110011000101101000101010100";
        ram[85] = "0b00111110001111010001011111111111";
        ram[86] = "0b00111101111001110101011011110110";
        ram[87] = "0b10111101111001011100001101000110";
        ram[88] = "0b10111101001110000101000100101001";
        ram[89] = "0b10111110101110111011000111011011";
        ram[90] = "0b10111101101010110011000010110101";
        ram[91] = "0b10111110000010101110101110011100";
        ram[92] = "0b10111100000000011101001110010001";
        ram[93] = "0b10111101110111111011011000111110";
        ram[94] = "0b00111100100010111111101100101010";
        ram[95] = "0b00111101010010100110011100101101";
        ram[96] = "0b10111110001010011001100010110001";
        ram[97] = "0b00111110010101111001010111100101";
        ram[98] = "0b10111101111010011010001011000010";
        ram[99] = "0b10111011100000110101111110000111";
        ram[100] = "0b00111101100000010110110001101000";
        ram[101] = "0b00111101100011100100100000101101";
        ram[102] = "0b10111110000110010011111111110001";
        ram[103] = "0b10111110001110010001110010100100";
        ram[104] = "0b10111101100000111010110101011000";
        ram[105] = "0b10111110011011111110111100010111";
        ram[106] = "0b10111101001010111001101010110101";
        ram[107] = "0b10111110001011110111110111110001";
        ram[108] = "0b10111110000011011001011111001100";
        ram[109] = "0b10111110001001100000010011011110";
        ram[110] = "0b10111101011000110010110000010010";
        ram[111] = "0b10111110011010100110101001110110";
        ram[112] = "0b10111110100011011101010110001101";
        ram[113] = "0b10111110001101000101101111001000";
        ram[114] = "0b10111100010100011001111110000000";
        ram[115] = "0b00111101011010001100100101000100";
        ram[116] = "0b10111101000101100111011110111011";
        ram[117] = "0b00111101101011111000111111001010";
        ram[118] = "0b10111100101010010001010110001000";
        ram[119] = "0b00111110011000110010010110111000";
        ram[120] = "0b10111101110000100101111010011011";
        ram[121] = "0b10111110010010001110110001000100";
        ram[122] = "0b10111101001011110100001010010001";
        ram[123] = "0b10111110000001011001100011001110";
        ram[124] = "0b10111110010111101100011100001111";
        ram[125] = "0b10111101100001101000110010100000";
        ram[126] = "0b10111110011111101001001011010101";
        ram[127] = "0b10111101111110000010010110111000";
        ram[128] = "0b10111101101100010100110001100001";
        ram[129] = "0b10111110011010010100010011011100";
        ram[130] = "0b10111110100100101110001111001111";
        ram[131] = "0b10111110010000101110111011101011";
        ram[132] = "0b00111101110001101011000111010001";
        ram[133] = "0b00111110010110011101000111010001";
        ram[134] = "0b00111110001011101011110001111111";
        ram[135] = "0b00111100111110011100000000110101";
        ram[136] = "0b10111110100001111101110101000010";
        ram[137] = "0b00111101111110110110010001111101";
        ram[138] = "0b00111100110011001001010100110011";
        ram[139] = "0b10111101011010011111010100100010";
        ram[140] = "0b00111101111001011000110011111100";
        ram[141] = "0b10111101011011101111011000111011";
        ram[142] = "0b10111110011011011011100101100000";
        ram[143] = "0b10111110101100111011011001101011";
        ram[144] = "0b10111110001000011000001000000001";
        ram[145] = "0b00111100110010110110110100001101";
        ram[146] = "0b10111110011100110111000001110110";
        ram[147] = "0b10111111000000110111011000111001";
        ram[148] = "0b00111101101110111111100000000111";
        ram[149] = "0b00111110001011000010010000010010";
        ram[150] = "0b10111100111000101001001001100001";
        ram[151] = "0b00111101111110111001011100001000";
        ram[152] = "0b10111101100000111011011101000011";
        ram[153] = "0b10111110100001010001000011111100";
        ram[154] = "0b00111110010000010011110010111110";
        ram[155] = "0b10111101110010010101010000000110";
        ram[156] = "0b10111110100110000000001101111001";
        ram[157] = "0b10111110101101111011110000001001";
        ram[158] = "0b10111101010111111111110000110110";
        ram[159] = "0b10111101011111101110110010011111";
        ram[160] = "0b00111110011001110000001111000110";
        ram[161] = "0b10111101110011101111100100000100";
        ram[162] = "0b00111110010000001110001111111011";
        ram[163] = "0b00111110011101101001101010101111";
        ram[164] = "0b10111110101000110100000011100000";
        ram[165] = "0b10111110100011000110000111110010";
        ram[166] = "0b00111110010101110010100101010100";
        ram[167] = "0b10111100000010110010000110001001";
        ram[168] = "0b00111101010101111101111111011100";
        ram[169] = "0b10111110001100101101011111000000";
        ram[170] = "0b10111101110101001000110101111110";
        ram[171] = "0b00111101000110000000111111001111";
        ram[172] = "0b00111110100010100100111001010011";
        ram[173] = "0b00111110010011101111011101001011";
        ram[174] = "0b00111110001000001101111010100101";
        ram[175] = "0b10111100001011010110000001011100";
        ram[176] = "0b10111110101001100111001011111001";
        ram[177] = "0b00111110011101101011010110110101";
        ram[178] = "0b10111101111101100010101010100110";
        ram[179] = "0b10111100110001110000101000110110";
        ram[180] = "0b00111110000011101011101010111111";
        ram[181] = "0b10111101010000011000011001000011";
        ram[182] = "0b10111110100000000000011000010011";
        ram[183] = "0b00111101001000011100101101011011";
        ram[184] = "0b10111110000000101110000100010110";
        ram[185] = "0b10111101110110110101000111100000";
        ram[186] = "0b10111110000010001000111000100000";
        ram[187] = "0b10111110101111001011010010101000";
        ram[188] = "0b10111101110011000110111111110010";
        ram[189] = "0b10111110001011110101111111100100";
        ram[190] = "0b00111101011100100100001010010101";
        ram[191] = "0b00111110010000001100000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weiudo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weiudo_ram* meminst;


SC_CTOR(conv_2_conv_2_weiudo) {
meminst = new conv_2_conv_2_weiudo_ram("conv_2_conv_2_weiudo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weiudo() {
    delete meminst;
}


};//endmodule
#endif
