// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weibEo_H__
#define __conv_2_conv_2_weibEo_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weibEo_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 192;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weibEo_ram) {
        ram[0] = "0b10111100110101110111010110001000";
        ram[1] = "0b10111110001001011011110111001010";
        ram[2] = "0b10111101110111001010100110001110";
        ram[3] = "0b10111110010010101001010010010011";
        ram[4] = "0b00111101100110110110010001100110";
        ram[5] = "0b00111101100000010011010100111111";
        ram[6] = "0b10111101000100101001100000100011";
        ram[7] = "0b10111100001100110000101100100011";
        ram[8] = "0b10111101111010000010000000010000";
        ram[9] = "0b00111011000011001011110111001010";
        ram[10] = "0b00111010101010010001000110111110";
        ram[11] = "0b10111011101011000110101011011000";
        ram[12] = "0b10111101011001100011000011011001";
        ram[13] = "0b00111110000011011100000011000100";
        ram[14] = "0b10111101101010110101100110010011";
        ram[15] = "0b10111101010111010111110000111001";
        ram[16] = "0b00111101100011101100001110100100";
        ram[17] = "0b00111100111100001101101011101010";
        ram[18] = "0b10111100001001001100001010111111";
        ram[19] = "0b10111101010101101101101010101110";
        ram[20] = "0b00111100101001000010101000001011";
        ram[21] = "0b00111110010011100010101111110011";
        ram[22] = "0b00111100101001001000111101001000";
        ram[23] = "0b00111101111011101010011000100001";
        ram[24] = "0b00111011111001111100011010110100";
        ram[25] = "0b10111110000000101000110001000101";
        ram[26] = "0b10111101000000011110010010111101";
        ram[27] = "0b10111110100100101111100010110000";
        ram[28] = "0b10111101100111110000001001010010";
        ram[29] = "0b10111101110111000000010110101111";
        ram[30] = "0b00111100101011001101111000100011";
        ram[31] = "0b10111110110010101001101010100010";
        ram[32] = "0b10111101100110111101111111110010";
        ram[33] = "0b10111101100101110010101101101110";
        ram[34] = "0b10111100100000011001000000111100";
        ram[35] = "0b10111110001011101011011010011000";
        ram[36] = "0b10111110001000000001111111000110";
        ram[37] = "0b10111101011011111111001000111101";
        ram[38] = "0b10111011110101101000010001111100";
        ram[39] = "0b10111101100100100100010000101100";
        ram[40] = "0b00111100101111111101100011011111";
        ram[41] = "0b10111101100000101101110011010010";
        ram[42] = "0b00111110000000010011010011101010";
        ram[43] = "0b10111100110001001000001011011010";
        ram[44] = "0b10111100111111001101000111110011";
        ram[45] = "0b00111110010000101011110110111101";
        ram[46] = "0b00111101100110101100010001010111";
        ram[47] = "0b00111100111100001101011101111100";
        ram[48] = "0b10111110001011110001101111100000";
        ram[49] = "0b10111110000100101010101100100101";
        ram[50] = "0b00111101100001111001011001010011";
        ram[51] = "0b10111110010111111100100110011111";
        ram[52] = "0b10111110010001001101000111000010";
        ram[53] = "0b00111110000101100100011111110010";
        ram[54] = "0b00111101001001010100011011110001";
        ram[55] = "0b10111100010100110101011001110000";
        ram[56] = "0b00111011010001001011010111111001";
        ram[57] = "0b10111100101100001101011001010101";
        ram[58] = "0b00111110001011000010111111110111";
        ram[59] = "0b00111101101100001011101100110010";
        ram[60] = "0b00111100001101101001111110111100";
        ram[61] = "0b10111101010100011010101011001111";
        ram[62] = "0b10111110010000101110011000000011";
        ram[63] = "0b10111110000011000110110111011011";
        ram[64] = "0b00111101011101001000001110011000";
        ram[65] = "0b10111110100000000111001111100010";
        ram[66] = "0b10111110000110101111001000010111";
        ram[67] = "0b10111101111000001000100001010110";
        ram[68] = "0b00111110010001001011101001011110";
        ram[69] = "0b00111100101000001111000010101110";
        ram[70] = "0b10111101011001101001100110011000";
        ram[71] = "0b10111110001100000001001100100101";
        ram[72] = "0b10111100010110101101100000101101";
        ram[73] = "0b10111100110010001100000010111000";
        ram[74] = "0b10111110010110101011101001001001";
        ram[75] = "0b00111101101000111011010011010010";
        ram[76] = "0b10111101101010110011000010101101";
        ram[77] = "0b00111100101101001010111100101001";
        ram[78] = "0b10111101100100111010001001011110";
        ram[79] = "0b10111101100111110010111100011101";
        ram[80] = "0b10111011110101101010111101011011";
        ram[81] = "0b10111101001110000011110000111100";
        ram[82] = "0b10111101110001000011011000001001";
        ram[83] = "0b00111100100000010111111100100011";
        ram[84] = "0b10111110001111101100101100001010";
        ram[85] = "0b00111101100011010111001001010100";
        ram[86] = "0b00111101101010010011111001001101";
        ram[87] = "0b00111101111100110110010101011111";
        ram[88] = "0b00111101101100010101101000100110";
        ram[89] = "0b10111101111110101011111011111100";
        ram[90] = "0b10111101101010111110111101111101";
        ram[91] = "0b00111101100101111010001010101110";
        ram[92] = "0b10111110000000001111000110010011";
        ram[93] = "0b00111100011000111101110100010000";
        ram[94] = "0b00111101000111111011110000111011";
        ram[95] = "0b00111100001011100000110010010010";
        ram[96] = "0b10111100110010101011010011110000";
        ram[97] = "0b10111110000110011101111000111001";
        ram[98] = "0b00111100011110110011100001011100";
        ram[99] = "0b10111101100000110010100110110111";
        ram[100] = "0b10111110011000010100110010111000";
        ram[101] = "0b00111100011100100100111000011001";
        ram[102] = "0b00111100101000011111010110101000";
        ram[103] = "0b10111101010111001111010011110110";
        ram[104] = "0b00111100111110000100011100110000";
        ram[105] = "0b10111101111001100111100000011110";
        ram[106] = "0b00111101001010011110010010101101";
        ram[107] = "0b10111101100000110100001110110011";
        ram[108] = "0b10111101010000111000110000100000";
        ram[109] = "0b00111011101111111010010010111110";
        ram[110] = "0b10111101111011001000010101111010";
        ram[111] = "0b10111101100011001011001100101111";
        ram[112] = "0b10111101111001110101111110101001";
        ram[113] = "0b10111110000000100111111100110001";
        ram[114] = "0b10111101101001110110100110110011";
        ram[115] = "0b10111101000011011000010001100011";
        ram[116] = "0b10111100001001101000000100010100";
        ram[117] = "0b00111110001010110100111001111110";
        ram[118] = "0b00111110001010010100110010010001";
        ram[119] = "0b10111110001111110101110000101101";
        ram[120] = "0b00111100010000100010010110111001";
        ram[121] = "0b00111100100010001101111100101001";
        ram[122] = "0b00111110010100011110011101011100";
        ram[123] = "0b00111101110011110101100010001000";
        ram[124] = "0b10111101100001001011100110001110";
        ram[125] = "0b10111101111001000100000001000010";
        ram[126] = "0b10111100110001110111111000001011";
        ram[127] = "0b00111101010101001011111011010100";
        ram[128] = "0b10111110001000010001010011001010";
        ram[129] = "0b10111110101010010110010011101011";
        ram[130] = "0b10111101101111010010101010111111";
        ram[131] = "0b10111101011110111101001010111101";
        ram[132] = "0b00111101111101000111010100001010";
        ram[133] = "0b10111110101000010100000001101101";
        ram[134] = "0b00111101101100100001010100100000";
        ram[135] = "0b00111101010001011010010111100000";
        ram[136] = "0b00111101100111001010101111110001";
        ram[137] = "0b10111110001010001101001010000101";
        ram[138] = "0b00111100100010010101100111001111";
        ram[139] = "0b10111110001101001100101001100111";
        ram[140] = "0b00111101011011011100101011100010";
        ram[141] = "0b00111101101111010111100110001110";
        ram[142] = "0b00111101010000000110110111010111";
        ram[143] = "0b10111100111000111111011100001110";
        ram[144] = "0b10111101011010010010010110110001";
        ram[145] = "0b10111110001101101001010001000101";
        ram[146] = "0b10111110010000000000010001011010";
        ram[147] = "0b00111100110011110111010011011100";
        ram[148] = "0b10111100001100101000111011110101";
        ram[149] = "0b00111101101110000100111000011100";
        ram[150] = "0b00111011100011010000100111110000";
        ram[151] = "0b00111110001011101011011000001110";
        ram[152] = "0b00111101001011100010110011011000";
        ram[153] = "0b00111101101000010110001011101101";
        ram[154] = "0b10111110000000111011001000011100";
        ram[155] = "0b10111101111100010110110011111101";
        ram[156] = "0b00111100100110111010000000100110";
        ram[157] = "0b10111101100011110000000010001010";
        ram[158] = "0b10111110000011001101001101001110";
        ram[159] = "0b00111011000100011001100110010000";
        ram[160] = "0b10111110010010001101100010001001";
        ram[161] = "0b00111101110011000110001011011111";
        ram[162] = "0b10111110010111101110001010111011";
        ram[163] = "0b10111110100111101010111001011001";
        ram[164] = "0b10111101111011100111000110100101";
        ram[165] = "0b00111110000011001001001001101010";
        ram[166] = "0b00111101101000111101010011101000";
        ram[167] = "0b00111101110101000111011000011010";
        ram[168] = "0b00111101101011001010011100000111";
        ram[169] = "0b00111100011001101011001011111110";
        ram[170] = "0b00111101111110100100101101101010";
        ram[171] = "0b10111101101001100110101111001000";
        ram[172] = "0b10111101000101010110100111011000";
        ram[173] = "0b10111110000100101110110111100011";
        ram[174] = "0b00111011000011001110111101110100";
        ram[175] = "0b00111101001000101011100101101110";
        ram[176] = "0b00111100101010111111001101101110";
        ram[177] = "0b00111101110001110001001111100111";
        ram[178] = "0b00111100110111001010011001100110";
        ram[179] = "0b00111101001111001111110011100010";
        ram[180] = "0b00111110000101010110011100101011";
        ram[181] = "0b00111101100111011110101000101111";
        ram[182] = "0b00111101100111001100111110011010";
        ram[183] = "0b10111110011001110010001101011001";
        ram[184] = "0b10111101010110010110000111100001";
        ram[185] = "0b00111101101100001110111100000110";
        ram[186] = "0b00111110010011000100110100000101";
        ram[187] = "0b00111100111100111010001000101000";
        ram[188] = "0b10111110000001111111011101111111";
        ram[189] = "0b10111101101100011010111011110100";
        ram[190] = "0b10111101000010101111101010111001";
        ram[191] = "0b00111101101000100001100111111000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weibEo) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 192;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weibEo_ram* meminst;


SC_CTOR(conv_2_conv_2_weibEo) {
meminst = new conv_2_conv_2_weibEo_ram("conv_2_conv_2_weibEo_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weibEo() {
    delete meminst;
}


};//endmodule
#endif
