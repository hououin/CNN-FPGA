// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module max_pool_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_pool_out_0_address0,
        max_pool_out_0_ce0,
        max_pool_out_0_we0,
        max_pool_out_0_d0,
        max_pool_out_0_address1,
        max_pool_out_0_ce1,
        max_pool_out_0_we1,
        max_pool_out_0_d1,
        max_pool_out_1_address0,
        max_pool_out_1_ce0,
        max_pool_out_1_we0,
        max_pool_out_1_d0,
        max_pool_out_1_address1,
        max_pool_out_1_ce1,
        max_pool_out_1_we1,
        max_pool_out_1_d1,
        max_pool_out_2_0_address0,
        max_pool_out_2_0_ce0,
        max_pool_out_2_0_we0,
        max_pool_out_2_0_d0,
        conv_2_out_0_address0,
        conv_2_out_0_ce0,
        conv_2_out_0_q0,
        conv_2_out_0_address1,
        conv_2_out_0_ce1,
        conv_2_out_0_q1,
        conv_2_out_1_address0,
        conv_2_out_1_ce0,
        conv_2_out_1_q0,
        conv_2_out_1_address1,
        conv_2_out_1_ce1,
        conv_2_out_1_q1,
        conv_2_out_2_address0,
        conv_2_out_2_ce0,
        conv_2_out_2_q0,
        conv_2_out_2_address1,
        conv_2_out_2_ce1,
        conv_2_out_2_q1,
        conv_2_out_3_address0,
        conv_2_out_3_ce0,
        conv_2_out_3_q0,
        conv_2_out_3_address1,
        conv_2_out_3_ce1,
        conv_2_out_3_q1,
        conv_2_out_4_address0,
        conv_2_out_4_ce0,
        conv_2_out_4_q0,
        conv_2_out_4_address1,
        conv_2_out_4_ce1,
        conv_2_out_4_q1,
        conv_2_out_5_address0,
        conv_2_out_5_ce0,
        conv_2_out_5_q0,
        conv_2_out_5_address1,
        conv_2_out_5_ce1,
        conv_2_out_5_q1,
        conv_2_out_6_address0,
        conv_2_out_6_ce0,
        conv_2_out_6_q0,
        conv_2_out_6_address1,
        conv_2_out_6_ce1,
        conv_2_out_6_q1,
        conv_2_out_7_address0,
        conv_2_out_7_ce0,
        conv_2_out_7_q0,
        conv_2_out_7_address1,
        conv_2_out_7_ce1,
        conv_2_out_7_q1,
        conv_2_out_8_address0,
        conv_2_out_8_ce0,
        conv_2_out_8_q0,
        conv_2_out_8_address1,
        conv_2_out_8_ce1,
        conv_2_out_8_q1,
        conv_2_out_9_address0,
        conv_2_out_9_ce0,
        conv_2_out_9_q0,
        conv_2_out_9_address1,
        conv_2_out_9_ce1,
        conv_2_out_9_q1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] max_pool_out_0_address0;
output   max_pool_out_0_ce0;
output   max_pool_out_0_we0;
output  [31:0] max_pool_out_0_d0;
output  [7:0] max_pool_out_0_address1;
output   max_pool_out_0_ce1;
output   max_pool_out_0_we1;
output  [31:0] max_pool_out_0_d1;
output  [7:0] max_pool_out_1_address0;
output   max_pool_out_1_ce0;
output   max_pool_out_1_we0;
output  [31:0] max_pool_out_1_d0;
output  [7:0] max_pool_out_1_address1;
output   max_pool_out_1_ce1;
output   max_pool_out_1_we1;
output  [31:0] max_pool_out_1_d1;
output  [6:0] max_pool_out_2_0_address0;
output   max_pool_out_2_0_ce0;
output   max_pool_out_2_0_we0;
output  [31:0] max_pool_out_2_0_d0;
output  [7:0] conv_2_out_0_address0;
output   conv_2_out_0_ce0;
input  [31:0] conv_2_out_0_q0;
output  [7:0] conv_2_out_0_address1;
output   conv_2_out_0_ce1;
input  [31:0] conv_2_out_0_q1;
output  [7:0] conv_2_out_1_address0;
output   conv_2_out_1_ce0;
input  [31:0] conv_2_out_1_q0;
output  [7:0] conv_2_out_1_address1;
output   conv_2_out_1_ce1;
input  [31:0] conv_2_out_1_q1;
output  [7:0] conv_2_out_2_address0;
output   conv_2_out_2_ce0;
input  [31:0] conv_2_out_2_q0;
output  [7:0] conv_2_out_2_address1;
output   conv_2_out_2_ce1;
input  [31:0] conv_2_out_2_q1;
output  [7:0] conv_2_out_3_address0;
output   conv_2_out_3_ce0;
input  [31:0] conv_2_out_3_q0;
output  [7:0] conv_2_out_3_address1;
output   conv_2_out_3_ce1;
input  [31:0] conv_2_out_3_q1;
output  [7:0] conv_2_out_4_address0;
output   conv_2_out_4_ce0;
input  [31:0] conv_2_out_4_q0;
output  [7:0] conv_2_out_4_address1;
output   conv_2_out_4_ce1;
input  [31:0] conv_2_out_4_q1;
output  [7:0] conv_2_out_5_address0;
output   conv_2_out_5_ce0;
input  [31:0] conv_2_out_5_q0;
output  [7:0] conv_2_out_5_address1;
output   conv_2_out_5_ce1;
input  [31:0] conv_2_out_5_q1;
output  [7:0] conv_2_out_6_address0;
output   conv_2_out_6_ce0;
input  [31:0] conv_2_out_6_q0;
output  [7:0] conv_2_out_6_address1;
output   conv_2_out_6_ce1;
input  [31:0] conv_2_out_6_q1;
output  [7:0] conv_2_out_7_address0;
output   conv_2_out_7_ce0;
input  [31:0] conv_2_out_7_q0;
output  [7:0] conv_2_out_7_address1;
output   conv_2_out_7_ce1;
input  [31:0] conv_2_out_7_q1;
output  [7:0] conv_2_out_8_address0;
output   conv_2_out_8_ce0;
input  [31:0] conv_2_out_8_q0;
output  [7:0] conv_2_out_8_address1;
output   conv_2_out_8_ce1;
input  [31:0] conv_2_out_8_q1;
output  [7:0] conv_2_out_9_address0;
output   conv_2_out_9_ce0;
input  [31:0] conv_2_out_9_q0;
output  [7:0] conv_2_out_9_address1;
output   conv_2_out_9_ce1;
input  [31:0] conv_2_out_9_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg max_pool_out_0_ce0;
reg max_pool_out_0_we0;
reg max_pool_out_0_ce1;
reg max_pool_out_0_we1;
reg max_pool_out_1_ce0;
reg max_pool_out_1_we0;
reg max_pool_out_1_ce1;
reg max_pool_out_1_we1;
reg max_pool_out_2_0_ce0;
reg max_pool_out_2_0_we0;
reg conv_2_out_0_ce0;
reg conv_2_out_0_ce1;
reg conv_2_out_1_ce0;
reg conv_2_out_1_ce1;
reg conv_2_out_2_ce0;
reg conv_2_out_2_ce1;
reg conv_2_out_3_ce0;
reg conv_2_out_3_ce1;
reg conv_2_out_4_ce0;
reg conv_2_out_4_ce1;
reg conv_2_out_5_ce0;
reg conv_2_out_5_ce1;
reg conv_2_out_6_ce0;
reg conv_2_out_6_ce1;
reg conv_2_out_7_ce0;
reg conv_2_out_7_ce1;
reg conv_2_out_8_ce0;
reg conv_2_out_8_ce1;
reg conv_2_out_9_ce0;
reg conv_2_out_9_ce1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_411;
reg   [4:0] f_0_reg_422;
reg   [2:0] r_0_reg_433;
wire   [0:0] icmp_ln10_fu_549_p2;
reg   [0:0] icmp_ln10_reg_2292;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln10_reg_2292_pp0_iter1_reg;
reg   [0:0] icmp_ln10_reg_2292_pp0_iter2_reg;
reg   [0:0] icmp_ln10_reg_2292_pp0_iter3_reg;
reg   [0:0] icmp_ln10_reg_2292_pp0_iter4_reg;
wire   [6:0] add_ln10_fu_555_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln29_20_fu_573_p3;
reg   [2:0] select_ln29_20_reg_2301;
reg   [2:0] select_ln29_20_reg_2301_pp0_iter1_reg;
reg   [2:0] select_ln29_20_reg_2301_pp0_iter2_reg;
reg   [2:0] select_ln29_20_reg_2301_pp0_iter3_reg;
reg   [2:0] select_ln29_20_reg_2301_pp0_iter4_reg;
wire   [4:0] select_ln29_21_fu_581_p3;
reg   [4:0] select_ln29_21_reg_2308;
reg   [4:0] select_ln29_21_reg_2308_pp0_iter1_reg;
reg   [4:0] select_ln29_21_reg_2308_pp0_iter2_reg;
reg   [4:0] select_ln29_21_reg_2308_pp0_iter3_reg;
reg   [4:0] select_ln29_21_reg_2308_pp0_iter4_reg;
wire   [63:0] zext_ln36_fu_597_p1;
reg   [63:0] zext_ln36_reg_2315;
reg   [63:0] zext_ln36_reg_2315_pp0_iter1_reg;
reg   [63:0] zext_ln36_reg_2315_pp0_iter2_reg;
reg   [63:0] zext_ln36_reg_2315_pp0_iter3_reg;
reg   [63:0] zext_ln36_reg_2315_pp0_iter4_reg;
wire   [2:0] r_fu_606_p2;
reg   [31:0] conv_2_out_0_load_reg_2381;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] conv_2_out_2_load_reg_2388;
reg   [31:0] conv_2_out_4_load_reg_2395;
reg   [31:0] conv_2_out_6_load_reg_2402;
reg   [31:0] conv_2_out_8_load_reg_2409;
wire   [8:0] zext_ln14_1_fu_612_p1;
reg   [8:0] zext_ln14_1_reg_2416;
reg   [8:0] zext_ln14_1_reg_2416_pp0_iter3_reg;
reg   [8:0] zext_ln14_1_reg_2416_pp0_iter4_reg;
wire   [31:0] select_ln29_fu_663_p3;
reg   [31:0] select_ln29_reg_2421;
reg   [31:0] conv_2_out_1_load_reg_2428;
reg    ap_enable_reg_pp0_iter2;
wire   [63:0] zext_ln29_1_fu_695_p1;
reg   [63:0] zext_ln29_1_reg_2435;
wire   [31:0] select_ln29_4_fu_745_p3;
reg   [31:0] select_ln29_4_reg_2469;
reg   [31:0] conv_2_out_3_load_reg_2476;
wire   [31:0] select_ln29_8_fu_794_p3;
reg   [31:0] select_ln29_8_reg_2483;
reg   [31:0] conv_2_out_5_load_reg_2490;
wire   [31:0] select_ln29_12_fu_843_p3;
reg   [31:0] select_ln29_12_reg_2497;
reg   [31:0] conv_2_out_7_load_reg_2504;
wire   [31:0] select_ln29_16_fu_892_p3;
reg   [31:0] select_ln29_16_reg_2511;
reg   [31:0] conv_2_out_9_load_reg_2518;
wire   [31:0] select_ln29_1_fu_982_p3;
reg   [31:0] select_ln29_1_reg_2525;
reg   [31:0] conv_2_out_0_load_1_reg_2557;
reg    ap_enable_reg_pp0_iter3;
wire   [31:0] select_ln29_5_fu_1071_p3;
reg   [31:0] select_ln29_5_reg_2564;
reg   [31:0] conv_2_out_2_load_1_reg_2571;
wire   [31:0] select_ln29_9_fu_1160_p3;
reg   [31:0] select_ln29_9_reg_2578;
reg   [31:0] conv_2_out_4_load_1_reg_2585;
wire   [31:0] select_ln29_13_fu_1249_p3;
reg   [31:0] select_ln29_13_reg_2592;
reg   [31:0] conv_2_out_6_load_1_reg_2599;
wire   [31:0] select_ln29_17_fu_1338_p3;
reg   [31:0] select_ln29_17_reg_2606;
reg   [31:0] conv_2_out_8_load_1_reg_2613;
wire   [31:0] select_ln29_2_fu_1427_p3;
reg   [31:0] select_ln29_2_reg_2620;
reg   [31:0] conv_2_out_1_load_1_reg_2627;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] select_ln29_6_fu_1516_p3;
reg   [31:0] select_ln29_6_reg_2634;
reg   [31:0] conv_2_out_3_load_1_reg_2641;
wire   [31:0] select_ln29_10_fu_1605_p3;
reg   [31:0] select_ln29_10_reg_2648;
reg   [31:0] conv_2_out_5_load_1_reg_2655;
wire   [31:0] select_ln29_14_fu_1694_p3;
reg   [31:0] select_ln29_14_reg_2662;
reg   [31:0] conv_2_out_7_load_1_reg_2669;
wire   [31:0] select_ln29_18_fu_1783_p3;
reg   [31:0] select_ln29_18_reg_2676;
reg   [31:0] conv_2_out_9_load_1_reg_2683;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter5;
reg   [4:0] ap_phi_mux_f_0_phi_fu_426_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln36_1_fu_1819_p1;
wire   [63:0] zext_ln36_3_fu_1842_p1;
wire   [31:0] grp_fu_474_p1;
wire   [31:0] grp_fu_479_p1;
wire   [31:0] grp_fu_484_p1;
wire   [31:0] grp_fu_489_p1;
wire   [31:0] grp_fu_494_p1;
wire   [31:0] grp_fu_499_p1;
wire   [31:0] grp_fu_504_p1;
wire   [31:0] grp_fu_509_p1;
wire   [31:0] grp_fu_514_p1;
wire   [31:0] grp_fu_519_p1;
wire   [31:0] grp_fu_524_p1;
wire   [31:0] grp_fu_529_p1;
wire   [31:0] grp_fu_534_p1;
wire   [31:0] grp_fu_539_p1;
wire   [31:0] grp_fu_544_p1;
wire   [0:0] icmp_ln13_fu_567_p2;
wire   [4:0] f_fu_561_p2;
wire   [7:0] tmp_56_fu_589_p3;
wire   [31:0] bitcast_ln29_fu_622_p1;
wire   [7:0] tmp_2_fu_625_p4;
wire   [22:0] trunc_ln29_fu_635_p1;
wire   [0:0] icmp_ln29_1_fu_645_p2;
wire   [0:0] icmp_ln29_fu_639_p2;
wire   [0:0] or_ln29_fu_651_p2;
wire   [0:0] grp_fu_444_p2;
wire   [0:0] and_ln29_fu_657_p2;
wire   [3:0] shl_ln_fu_615_p3;
wire   [3:0] or_ln26_fu_671_p2;
wire   [7:0] tmp_58_fu_677_p3;
wire   [8:0] zext_ln29_fu_685_p1;
wire   [8:0] add_ln29_fu_689_p2;
wire   [31:0] bitcast_ln29_7_fu_704_p1;
wire   [7:0] tmp_12_fu_707_p4;
wire   [22:0] trunc_ln29_7_fu_717_p1;
wire   [0:0] icmp_ln29_15_fu_727_p2;
wire   [0:0] icmp_ln29_14_fu_721_p2;
wire   [0:0] or_ln29_7_fu_733_p2;
wire   [0:0] grp_fu_450_p2;
wire   [0:0] and_ln29_7_fu_739_p2;
wire   [31:0] bitcast_ln29_14_fu_753_p1;
wire   [7:0] tmp_23_fu_756_p4;
wire   [22:0] trunc_ln29_14_fu_766_p1;
wire   [0:0] icmp_ln29_29_fu_776_p2;
wire   [0:0] icmp_ln29_28_fu_770_p2;
wire   [0:0] or_ln29_14_fu_782_p2;
wire   [0:0] grp_fu_456_p2;
wire   [0:0] and_ln29_14_fu_788_p2;
wire   [31:0] bitcast_ln29_21_fu_802_p1;
wire   [7:0] tmp_34_fu_805_p4;
wire   [22:0] trunc_ln29_21_fu_815_p1;
wire   [0:0] icmp_ln29_43_fu_825_p2;
wire   [0:0] icmp_ln29_42_fu_819_p2;
wire   [0:0] or_ln29_21_fu_831_p2;
wire   [0:0] grp_fu_462_p2;
wire   [0:0] and_ln29_21_fu_837_p2;
wire   [31:0] bitcast_ln29_28_fu_851_p1;
wire   [7:0] tmp_45_fu_854_p4;
wire   [22:0] trunc_ln29_28_fu_864_p1;
wire   [0:0] icmp_ln29_57_fu_874_p2;
wire   [0:0] icmp_ln29_56_fu_868_p2;
wire   [0:0] or_ln29_28_fu_880_p2;
wire   [0:0] grp_fu_468_p2;
wire   [0:0] and_ln29_28_fu_886_p2;
wire   [31:0] bitcast_ln29_1_fu_900_p1;
wire   [31:0] bitcast_ln29_2_fu_917_p1;
wire   [7:0] tmp_4_fu_903_p4;
wire   [22:0] trunc_ln29_1_fu_913_p1;
wire   [0:0] icmp_ln29_3_fu_940_p2;
wire   [0:0] icmp_ln29_2_fu_934_p2;
wire   [7:0] tmp_5_fu_920_p4;
wire   [22:0] trunc_ln29_2_fu_930_p1;
wire   [0:0] icmp_ln29_5_fu_958_p2;
wire   [0:0] icmp_ln29_4_fu_952_p2;
wire   [0:0] or_ln29_1_fu_946_p2;
wire   [0:0] or_ln29_2_fu_964_p2;
wire   [0:0] and_ln29_1_fu_970_p2;
wire   [0:0] grp_fu_474_p2;
wire   [0:0] and_ln29_2_fu_976_p2;
wire   [31:0] bitcast_ln29_8_fu_989_p1;
wire   [31:0] bitcast_ln29_9_fu_1006_p1;
wire   [7:0] tmp_14_fu_992_p4;
wire   [22:0] trunc_ln29_8_fu_1002_p1;
wire   [0:0] icmp_ln29_17_fu_1029_p2;
wire   [0:0] icmp_ln29_16_fu_1023_p2;
wire   [7:0] tmp_15_fu_1009_p4;
wire   [22:0] trunc_ln29_9_fu_1019_p1;
wire   [0:0] icmp_ln29_19_fu_1047_p2;
wire   [0:0] icmp_ln29_18_fu_1041_p2;
wire   [0:0] or_ln29_8_fu_1035_p2;
wire   [0:0] or_ln29_9_fu_1053_p2;
wire   [0:0] and_ln29_8_fu_1059_p2;
wire   [0:0] grp_fu_479_p2;
wire   [0:0] and_ln29_9_fu_1065_p2;
wire   [31:0] bitcast_ln29_15_fu_1078_p1;
wire   [31:0] bitcast_ln29_16_fu_1095_p1;
wire   [7:0] tmp_25_fu_1081_p4;
wire   [22:0] trunc_ln29_15_fu_1091_p1;
wire   [0:0] icmp_ln29_31_fu_1118_p2;
wire   [0:0] icmp_ln29_30_fu_1112_p2;
wire   [7:0] tmp_26_fu_1098_p4;
wire   [22:0] trunc_ln29_16_fu_1108_p1;
wire   [0:0] icmp_ln29_33_fu_1136_p2;
wire   [0:0] icmp_ln29_32_fu_1130_p2;
wire   [0:0] or_ln29_15_fu_1124_p2;
wire   [0:0] or_ln29_16_fu_1142_p2;
wire   [0:0] and_ln29_15_fu_1148_p2;
wire   [0:0] grp_fu_484_p2;
wire   [0:0] and_ln29_16_fu_1154_p2;
wire   [31:0] bitcast_ln29_22_fu_1167_p1;
wire   [31:0] bitcast_ln29_23_fu_1184_p1;
wire   [7:0] tmp_36_fu_1170_p4;
wire   [22:0] trunc_ln29_22_fu_1180_p1;
wire   [0:0] icmp_ln29_45_fu_1207_p2;
wire   [0:0] icmp_ln29_44_fu_1201_p2;
wire   [7:0] tmp_37_fu_1187_p4;
wire   [22:0] trunc_ln29_23_fu_1197_p1;
wire   [0:0] icmp_ln29_47_fu_1225_p2;
wire   [0:0] icmp_ln29_46_fu_1219_p2;
wire   [0:0] or_ln29_22_fu_1213_p2;
wire   [0:0] or_ln29_23_fu_1231_p2;
wire   [0:0] and_ln29_22_fu_1237_p2;
wire   [0:0] grp_fu_489_p2;
wire   [0:0] and_ln29_23_fu_1243_p2;
wire   [31:0] bitcast_ln29_29_fu_1256_p1;
wire   [31:0] bitcast_ln29_30_fu_1273_p1;
wire   [7:0] tmp_47_fu_1259_p4;
wire   [22:0] trunc_ln29_29_fu_1269_p1;
wire   [0:0] icmp_ln29_59_fu_1296_p2;
wire   [0:0] icmp_ln29_58_fu_1290_p2;
wire   [7:0] tmp_48_fu_1276_p4;
wire   [22:0] trunc_ln29_30_fu_1286_p1;
wire   [0:0] icmp_ln29_61_fu_1314_p2;
wire   [0:0] icmp_ln29_60_fu_1308_p2;
wire   [0:0] or_ln29_29_fu_1302_p2;
wire   [0:0] or_ln29_30_fu_1320_p2;
wire   [0:0] and_ln29_29_fu_1326_p2;
wire   [0:0] grp_fu_494_p2;
wire   [0:0] and_ln29_30_fu_1332_p2;
wire   [31:0] bitcast_ln29_3_fu_1345_p1;
wire   [31:0] bitcast_ln29_4_fu_1362_p1;
wire   [7:0] tmp_7_fu_1348_p4;
wire   [22:0] trunc_ln29_3_fu_1358_p1;
wire   [0:0] icmp_ln29_7_fu_1385_p2;
wire   [0:0] icmp_ln29_6_fu_1379_p2;
wire   [7:0] tmp_8_fu_1365_p4;
wire   [22:0] trunc_ln29_4_fu_1375_p1;
wire   [0:0] icmp_ln29_9_fu_1403_p2;
wire   [0:0] icmp_ln29_8_fu_1397_p2;
wire   [0:0] or_ln29_3_fu_1391_p2;
wire   [0:0] or_ln29_4_fu_1409_p2;
wire   [0:0] and_ln29_3_fu_1415_p2;
wire   [0:0] grp_fu_499_p2;
wire   [0:0] and_ln29_4_fu_1421_p2;
wire   [31:0] bitcast_ln29_10_fu_1434_p1;
wire   [31:0] bitcast_ln29_11_fu_1451_p1;
wire   [7:0] tmp_17_fu_1437_p4;
wire   [22:0] trunc_ln29_10_fu_1447_p1;
wire   [0:0] icmp_ln29_21_fu_1474_p2;
wire   [0:0] icmp_ln29_20_fu_1468_p2;
wire   [7:0] tmp_18_fu_1454_p4;
wire   [22:0] trunc_ln29_11_fu_1464_p1;
wire   [0:0] icmp_ln29_23_fu_1492_p2;
wire   [0:0] icmp_ln29_22_fu_1486_p2;
wire   [0:0] or_ln29_10_fu_1480_p2;
wire   [0:0] or_ln29_11_fu_1498_p2;
wire   [0:0] and_ln29_10_fu_1504_p2;
wire   [0:0] grp_fu_504_p2;
wire   [0:0] and_ln29_11_fu_1510_p2;
wire   [31:0] bitcast_ln29_17_fu_1523_p1;
wire   [31:0] bitcast_ln29_18_fu_1540_p1;
wire   [7:0] tmp_28_fu_1526_p4;
wire   [22:0] trunc_ln29_17_fu_1536_p1;
wire   [0:0] icmp_ln29_35_fu_1563_p2;
wire   [0:0] icmp_ln29_34_fu_1557_p2;
wire   [7:0] tmp_29_fu_1543_p4;
wire   [22:0] trunc_ln29_18_fu_1553_p1;
wire   [0:0] icmp_ln29_37_fu_1581_p2;
wire   [0:0] icmp_ln29_36_fu_1575_p2;
wire   [0:0] or_ln29_17_fu_1569_p2;
wire   [0:0] or_ln29_18_fu_1587_p2;
wire   [0:0] and_ln29_17_fu_1593_p2;
wire   [0:0] grp_fu_509_p2;
wire   [0:0] and_ln29_18_fu_1599_p2;
wire   [31:0] bitcast_ln29_24_fu_1612_p1;
wire   [31:0] bitcast_ln29_25_fu_1629_p1;
wire   [7:0] tmp_39_fu_1615_p4;
wire   [22:0] trunc_ln29_24_fu_1625_p1;
wire   [0:0] icmp_ln29_49_fu_1652_p2;
wire   [0:0] icmp_ln29_48_fu_1646_p2;
wire   [7:0] tmp_40_fu_1632_p4;
wire   [22:0] trunc_ln29_25_fu_1642_p1;
wire   [0:0] icmp_ln29_51_fu_1670_p2;
wire   [0:0] icmp_ln29_50_fu_1664_p2;
wire   [0:0] or_ln29_24_fu_1658_p2;
wire   [0:0] or_ln29_25_fu_1676_p2;
wire   [0:0] and_ln29_24_fu_1682_p2;
wire   [0:0] grp_fu_514_p2;
wire   [0:0] and_ln29_25_fu_1688_p2;
wire   [31:0] bitcast_ln29_31_fu_1701_p1;
wire   [31:0] bitcast_ln29_32_fu_1718_p1;
wire   [7:0] tmp_50_fu_1704_p4;
wire   [22:0] trunc_ln29_31_fu_1714_p1;
wire   [0:0] icmp_ln29_63_fu_1741_p2;
wire   [0:0] icmp_ln29_62_fu_1735_p2;
wire   [7:0] tmp_51_fu_1721_p4;
wire   [22:0] trunc_ln29_32_fu_1731_p1;
wire   [0:0] icmp_ln29_65_fu_1759_p2;
wire   [0:0] icmp_ln29_64_fu_1753_p2;
wire   [0:0] or_ln29_31_fu_1747_p2;
wire   [0:0] or_ln29_32_fu_1765_p2;
wire   [0:0] and_ln29_31_fu_1771_p2;
wire   [0:0] grp_fu_519_p2;
wire   [0:0] and_ln29_32_fu_1777_p2;
wire   [7:0] tmp_fu_1793_p3;
wire   [7:0] or_ln36_fu_1800_p2;
wire   [8:0] tmp_58_cast_fu_1806_p3;
wire   [8:0] add_ln36_fu_1814_p2;
wire   [6:0] tmp_57_fu_1825_p3;
wire   [7:0] zext_ln36_2_fu_1832_p1;
wire   [7:0] zext_ln14_fu_1790_p1;
wire   [7:0] add_ln36_1_fu_1836_p2;
wire   [31:0] bitcast_ln29_5_fu_1847_p1;
wire   [31:0] bitcast_ln29_6_fu_1864_p1;
wire   [7:0] tmp_s_fu_1850_p4;
wire   [22:0] trunc_ln29_5_fu_1860_p1;
wire   [0:0] icmp_ln29_11_fu_1887_p2;
wire   [0:0] icmp_ln29_10_fu_1881_p2;
wire   [7:0] tmp_10_fu_1867_p4;
wire   [22:0] trunc_ln29_6_fu_1877_p1;
wire   [0:0] icmp_ln29_13_fu_1905_p2;
wire   [0:0] icmp_ln29_12_fu_1899_p2;
wire   [0:0] or_ln29_5_fu_1893_p2;
wire   [0:0] or_ln29_6_fu_1911_p2;
wire   [0:0] and_ln29_5_fu_1917_p2;
wire   [0:0] grp_fu_524_p2;
wire   [0:0] and_ln29_6_fu_1923_p2;
wire   [31:0] bitcast_ln29_12_fu_1936_p1;
wire   [31:0] bitcast_ln29_13_fu_1953_p1;
wire   [7:0] tmp_20_fu_1939_p4;
wire   [22:0] trunc_ln29_12_fu_1949_p1;
wire   [0:0] icmp_ln29_25_fu_1976_p2;
wire   [0:0] icmp_ln29_24_fu_1970_p2;
wire   [7:0] tmp_21_fu_1956_p4;
wire   [22:0] trunc_ln29_13_fu_1966_p1;
wire   [0:0] icmp_ln29_27_fu_1994_p2;
wire   [0:0] icmp_ln29_26_fu_1988_p2;
wire   [0:0] or_ln29_12_fu_1982_p2;
wire   [0:0] or_ln29_13_fu_2000_p2;
wire   [0:0] and_ln29_12_fu_2006_p2;
wire   [0:0] grp_fu_529_p2;
wire   [0:0] and_ln29_13_fu_2012_p2;
wire   [31:0] bitcast_ln29_19_fu_2025_p1;
wire   [31:0] bitcast_ln29_20_fu_2042_p1;
wire   [7:0] tmp_31_fu_2028_p4;
wire   [22:0] trunc_ln29_19_fu_2038_p1;
wire   [0:0] icmp_ln29_39_fu_2065_p2;
wire   [0:0] icmp_ln29_38_fu_2059_p2;
wire   [7:0] tmp_32_fu_2045_p4;
wire   [22:0] trunc_ln29_20_fu_2055_p1;
wire   [0:0] icmp_ln29_41_fu_2083_p2;
wire   [0:0] icmp_ln29_40_fu_2077_p2;
wire   [0:0] or_ln29_19_fu_2071_p2;
wire   [0:0] or_ln29_20_fu_2089_p2;
wire   [0:0] and_ln29_19_fu_2095_p2;
wire   [0:0] grp_fu_534_p2;
wire   [0:0] and_ln29_20_fu_2101_p2;
wire   [31:0] bitcast_ln29_26_fu_2114_p1;
wire   [31:0] bitcast_ln29_27_fu_2131_p1;
wire   [7:0] tmp_42_fu_2117_p4;
wire   [22:0] trunc_ln29_26_fu_2127_p1;
wire   [0:0] icmp_ln29_53_fu_2154_p2;
wire   [0:0] icmp_ln29_52_fu_2148_p2;
wire   [7:0] tmp_43_fu_2134_p4;
wire   [22:0] trunc_ln29_27_fu_2144_p1;
wire   [0:0] icmp_ln29_55_fu_2172_p2;
wire   [0:0] icmp_ln29_54_fu_2166_p2;
wire   [0:0] or_ln29_26_fu_2160_p2;
wire   [0:0] or_ln29_27_fu_2178_p2;
wire   [0:0] and_ln29_26_fu_2184_p2;
wire   [0:0] grp_fu_539_p2;
wire   [0:0] and_ln29_27_fu_2190_p2;
wire   [31:0] bitcast_ln29_33_fu_2203_p1;
wire   [31:0] bitcast_ln29_34_fu_2220_p1;
wire   [7:0] tmp_53_fu_2206_p4;
wire   [22:0] trunc_ln29_33_fu_2216_p1;
wire   [0:0] icmp_ln29_67_fu_2243_p2;
wire   [0:0] icmp_ln29_66_fu_2237_p2;
wire   [7:0] tmp_54_fu_2223_p4;
wire   [22:0] trunc_ln29_34_fu_2233_p1;
wire   [0:0] icmp_ln29_69_fu_2261_p2;
wire   [0:0] icmp_ln29_68_fu_2255_p2;
wire   [0:0] or_ln29_33_fu_2249_p2;
wire   [0:0] or_ln29_34_fu_2267_p2;
wire   [0:0] and_ln29_33_fu_2273_p2;
wire   [0:0] grp_fu_544_p2;
wire   [0:0] and_ln29_34_fu_2279_p2;
wire    ap_block_pp0_stage0_00001;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U113(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_0_q0),
    .din1(32'd8388608),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_444_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U114(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_2_q0),
    .din1(32'd8388608),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_450_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U115(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_4_q0),
    .din1(32'd8388608),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_456_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U116(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_6_q0),
    .din1(32'd8388608),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_462_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U117(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_8_q0),
    .din1(32'd8388608),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_468_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U118(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_1_q0),
    .din1(grp_fu_474_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_474_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U119(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_3_q0),
    .din1(grp_fu_479_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_479_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U120(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_5_q0),
    .din1(grp_fu_484_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_484_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U121(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_7_q0),
    .din1(grp_fu_489_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_489_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U122(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_9_q0),
    .din1(grp_fu_494_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_494_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U123(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_0_q1),
    .din1(grp_fu_499_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_499_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U124(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_2_q1),
    .din1(grp_fu_504_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_504_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U125(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_4_q1),
    .din1(grp_fu_509_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_509_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U126(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_6_q1),
    .din1(grp_fu_514_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_514_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U127(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_8_q1),
    .din1(grp_fu_519_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_519_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U128(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_1_q1),
    .din1(grp_fu_524_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_524_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U129(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_3_q1),
    .din1(grp_fu_529_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_529_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U130(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_5_q1),
    .din1(grp_fu_534_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_534_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U131(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_7_q1),
    .din1(grp_fu_539_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_539_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U132(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_2_out_9_q1),
    .din1(grp_fu_544_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_544_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_2292 == 1'd0))) begin
        f_0_reg_422 <= select_ln29_21_reg_2308;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_422 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_549_p2 == 1'd0))) begin
        indvar_flatten_reg_411 <= add_ln10_fu_555_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_411 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_549_p2 == 1'd0))) begin
        r_0_reg_433 <= r_fu_606_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_433 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_0_load_1_reg_2557 <= conv_2_out_0_q1;
        conv_2_out_2_load_1_reg_2571 <= conv_2_out_2_q1;
        conv_2_out_4_load_1_reg_2585 <= conv_2_out_4_q1;
        conv_2_out_6_load_1_reg_2599 <= conv_2_out_6_q1;
        conv_2_out_8_load_1_reg_2613 <= conv_2_out_8_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_reg_2292 == 1'd0))) begin
        conv_2_out_0_load_reg_2381 <= conv_2_out_0_q0;
        conv_2_out_2_load_reg_2388 <= conv_2_out_2_q0;
        conv_2_out_4_load_reg_2395 <= conv_2_out_4_q0;
        conv_2_out_6_load_reg_2402 <= conv_2_out_6_q0;
        conv_2_out_8_load_reg_2409 <= conv_2_out_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_1_load_1_reg_2627 <= conv_2_out_1_q1;
        conv_2_out_3_load_1_reg_2641 <= conv_2_out_3_q1;
        conv_2_out_5_load_1_reg_2655 <= conv_2_out_5_q1;
        conv_2_out_7_load_1_reg_2669 <= conv_2_out_7_q1;
        conv_2_out_9_load_1_reg_2683 <= conv_2_out_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_1_load_reg_2428 <= conv_2_out_1_q0;
        conv_2_out_3_load_reg_2476 <= conv_2_out_3_q0;
        conv_2_out_5_load_reg_2490 <= conv_2_out_5_q0;
        conv_2_out_7_load_reg_2504 <= conv_2_out_7_q0;
        conv_2_out_9_load_reg_2518 <= conv_2_out_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln10_reg_2292 <= icmp_ln10_fu_549_p2;
        icmp_ln10_reg_2292_pp0_iter1_reg <= icmp_ln10_reg_2292;
        select_ln29_20_reg_2301_pp0_iter1_reg <= select_ln29_20_reg_2301;
        select_ln29_21_reg_2308_pp0_iter1_reg <= select_ln29_21_reg_2308;
        zext_ln36_reg_2315_pp0_iter1_reg[7 : 0] <= zext_ln36_reg_2315[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln10_reg_2292_pp0_iter2_reg <= icmp_ln10_reg_2292_pp0_iter1_reg;
        icmp_ln10_reg_2292_pp0_iter3_reg <= icmp_ln10_reg_2292_pp0_iter2_reg;
        icmp_ln10_reg_2292_pp0_iter4_reg <= icmp_ln10_reg_2292_pp0_iter3_reg;
        select_ln29_20_reg_2301_pp0_iter2_reg <= select_ln29_20_reg_2301_pp0_iter1_reg;
        select_ln29_20_reg_2301_pp0_iter3_reg <= select_ln29_20_reg_2301_pp0_iter2_reg;
        select_ln29_20_reg_2301_pp0_iter4_reg <= select_ln29_20_reg_2301_pp0_iter3_reg;
        select_ln29_21_reg_2308_pp0_iter2_reg <= select_ln29_21_reg_2308_pp0_iter1_reg;
        select_ln29_21_reg_2308_pp0_iter3_reg <= select_ln29_21_reg_2308_pp0_iter2_reg;
        select_ln29_21_reg_2308_pp0_iter4_reg <= select_ln29_21_reg_2308_pp0_iter3_reg;
        zext_ln14_1_reg_2416_pp0_iter3_reg[4 : 0] <= zext_ln14_1_reg_2416[4 : 0];
        zext_ln14_1_reg_2416_pp0_iter4_reg[4 : 0] <= zext_ln14_1_reg_2416_pp0_iter3_reg[4 : 0];
        zext_ln36_reg_2315_pp0_iter2_reg[7 : 0] <= zext_ln36_reg_2315_pp0_iter1_reg[7 : 0];
        zext_ln36_reg_2315_pp0_iter3_reg[7 : 0] <= zext_ln36_reg_2315_pp0_iter2_reg[7 : 0];
        zext_ln36_reg_2315_pp0_iter4_reg[7 : 0] <= zext_ln36_reg_2315_pp0_iter3_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_2292_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln29_10_reg_2648 <= select_ln29_10_fu_1605_p3;
        select_ln29_14_reg_2662 <= select_ln29_14_fu_1694_p3;
        select_ln29_18_reg_2676 <= select_ln29_18_fu_1783_p3;
        select_ln29_2_reg_2620 <= select_ln29_2_fu_1427_p3;
        select_ln29_6_reg_2634 <= select_ln29_6_fu_1516_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_2292_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln29_12_reg_2497 <= select_ln29_12_fu_843_p3;
        select_ln29_16_reg_2511 <= select_ln29_16_fu_892_p3;
        select_ln29_4_reg_2469 <= select_ln29_4_fu_745_p3;
        select_ln29_8_reg_2483 <= select_ln29_8_fu_794_p3;
        select_ln29_reg_2421 <= select_ln29_fu_663_p3;
        zext_ln14_1_reg_2416[4 : 0] <= zext_ln14_1_fu_612_p1[4 : 0];
        zext_ln29_1_reg_2435[8 : 0] <= zext_ln29_1_fu_695_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_reg_2292_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln29_13_reg_2592 <= select_ln29_13_fu_1249_p3;
        select_ln29_17_reg_2606 <= select_ln29_17_fu_1338_p3;
        select_ln29_1_reg_2525 <= select_ln29_1_fu_982_p3;
        select_ln29_5_reg_2564 <= select_ln29_5_fu_1071_p3;
        select_ln29_9_reg_2578 <= select_ln29_9_fu_1160_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_549_p2 == 1'd0))) begin
        select_ln29_20_reg_2301 <= select_ln29_20_fu_573_p3;
        zext_ln36_reg_2315[7 : 0] <= zext_ln36_fu_597_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln10_fu_549_p2 == 1'd0))) begin
        select_ln29_21_reg_2308 <= select_ln29_21_fu_581_p3;
    end
end

always @ (*) begin
    if ((icmp_ln10_fu_549_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln10_reg_2292 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_426_p4 = select_ln29_21_reg_2308;
    end else begin
        ap_phi_mux_f_0_phi_fu_426_p4 = f_0_reg_422;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_0_ce0 = 1'b1;
    end else begin
        conv_2_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_0_ce1 = 1'b1;
    end else begin
        conv_2_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_1_ce0 = 1'b1;
    end else begin
        conv_2_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_1_ce1 = 1'b1;
    end else begin
        conv_2_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_2_ce0 = 1'b1;
    end else begin
        conv_2_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_2_ce1 = 1'b1;
    end else begin
        conv_2_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_3_ce0 = 1'b1;
    end else begin
        conv_2_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_3_ce1 = 1'b1;
    end else begin
        conv_2_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_4_ce0 = 1'b1;
    end else begin
        conv_2_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_4_ce1 = 1'b1;
    end else begin
        conv_2_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_5_ce0 = 1'b1;
    end else begin
        conv_2_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_5_ce1 = 1'b1;
    end else begin
        conv_2_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_6_ce0 = 1'b1;
    end else begin
        conv_2_out_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_6_ce1 = 1'b1;
    end else begin
        conv_2_out_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_7_ce0 = 1'b1;
    end else begin
        conv_2_out_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_7_ce1 = 1'b1;
    end else begin
        conv_2_out_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_8_ce0 = 1'b1;
    end else begin
        conv_2_out_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_8_ce1 = 1'b1;
    end else begin
        conv_2_out_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_9_ce0 = 1'b1;
    end else begin
        conv_2_out_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_2_out_9_ce1 = 1'b1;
    end else begin
        conv_2_out_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_ce0 = 1'b1;
    end else begin
        max_pool_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_ce1 = 1'b1;
    end else begin
        max_pool_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_we0 = 1'b1;
    end else begin
        max_pool_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_0_we1 = 1'b1;
    end else begin
        max_pool_out_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_ce0 = 1'b1;
    end else begin
        max_pool_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_ce1 = 1'b1;
    end else begin
        max_pool_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_we0 = 1'b1;
    end else begin
        max_pool_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_1_we1 = 1'b1;
    end else begin
        max_pool_out_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_2_0_ce0 = 1'b1;
    end else begin
        max_pool_out_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln10_reg_2292_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_pool_out_2_0_we0 = 1'b1;
    end else begin
        max_pool_out_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln10_fu_549_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln10_fu_549_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_555_p2 = (indvar_flatten_reg_411 + 7'd1);

assign add_ln29_fu_689_p2 = (zext_ln29_fu_685_p1 + zext_ln14_1_fu_612_p1);

assign add_ln36_1_fu_1836_p2 = (zext_ln36_2_fu_1832_p1 + zext_ln14_fu_1790_p1);

assign add_ln36_fu_1814_p2 = (tmp_58_cast_fu_1806_p3 + zext_ln14_1_reg_2416_pp0_iter4_reg);

assign and_ln29_10_fu_1504_p2 = (or_ln29_11_fu_1498_p2 & or_ln29_10_fu_1480_p2);

assign and_ln29_11_fu_1510_p2 = (grp_fu_504_p2 & and_ln29_10_fu_1504_p2);

assign and_ln29_12_fu_2006_p2 = (or_ln29_13_fu_2000_p2 & or_ln29_12_fu_1982_p2);

assign and_ln29_13_fu_2012_p2 = (grp_fu_529_p2 & and_ln29_12_fu_2006_p2);

assign and_ln29_14_fu_788_p2 = (or_ln29_14_fu_782_p2 & grp_fu_456_p2);

assign and_ln29_15_fu_1148_p2 = (or_ln29_16_fu_1142_p2 & or_ln29_15_fu_1124_p2);

assign and_ln29_16_fu_1154_p2 = (grp_fu_484_p2 & and_ln29_15_fu_1148_p2);

assign and_ln29_17_fu_1593_p2 = (or_ln29_18_fu_1587_p2 & or_ln29_17_fu_1569_p2);

assign and_ln29_18_fu_1599_p2 = (grp_fu_509_p2 & and_ln29_17_fu_1593_p2);

assign and_ln29_19_fu_2095_p2 = (or_ln29_20_fu_2089_p2 & or_ln29_19_fu_2071_p2);

assign and_ln29_1_fu_970_p2 = (or_ln29_2_fu_964_p2 & or_ln29_1_fu_946_p2);

assign and_ln29_20_fu_2101_p2 = (grp_fu_534_p2 & and_ln29_19_fu_2095_p2);

assign and_ln29_21_fu_837_p2 = (or_ln29_21_fu_831_p2 & grp_fu_462_p2);

assign and_ln29_22_fu_1237_p2 = (or_ln29_23_fu_1231_p2 & or_ln29_22_fu_1213_p2);

assign and_ln29_23_fu_1243_p2 = (grp_fu_489_p2 & and_ln29_22_fu_1237_p2);

assign and_ln29_24_fu_1682_p2 = (or_ln29_25_fu_1676_p2 & or_ln29_24_fu_1658_p2);

assign and_ln29_25_fu_1688_p2 = (grp_fu_514_p2 & and_ln29_24_fu_1682_p2);

assign and_ln29_26_fu_2184_p2 = (or_ln29_27_fu_2178_p2 & or_ln29_26_fu_2160_p2);

assign and_ln29_27_fu_2190_p2 = (grp_fu_539_p2 & and_ln29_26_fu_2184_p2);

assign and_ln29_28_fu_886_p2 = (or_ln29_28_fu_880_p2 & grp_fu_468_p2);

assign and_ln29_29_fu_1326_p2 = (or_ln29_30_fu_1320_p2 & or_ln29_29_fu_1302_p2);

assign and_ln29_2_fu_976_p2 = (grp_fu_474_p2 & and_ln29_1_fu_970_p2);

assign and_ln29_30_fu_1332_p2 = (grp_fu_494_p2 & and_ln29_29_fu_1326_p2);

assign and_ln29_31_fu_1771_p2 = (or_ln29_32_fu_1765_p2 & or_ln29_31_fu_1747_p2);

assign and_ln29_32_fu_1777_p2 = (grp_fu_519_p2 & and_ln29_31_fu_1771_p2);

assign and_ln29_33_fu_2273_p2 = (or_ln29_34_fu_2267_p2 & or_ln29_33_fu_2249_p2);

assign and_ln29_34_fu_2279_p2 = (grp_fu_544_p2 & and_ln29_33_fu_2273_p2);

assign and_ln29_3_fu_1415_p2 = (or_ln29_4_fu_1409_p2 & or_ln29_3_fu_1391_p2);

assign and_ln29_4_fu_1421_p2 = (grp_fu_499_p2 & and_ln29_3_fu_1415_p2);

assign and_ln29_5_fu_1917_p2 = (or_ln29_6_fu_1911_p2 & or_ln29_5_fu_1893_p2);

assign and_ln29_6_fu_1923_p2 = (grp_fu_524_p2 & and_ln29_5_fu_1917_p2);

assign and_ln29_7_fu_739_p2 = (or_ln29_7_fu_733_p2 & grp_fu_450_p2);

assign and_ln29_8_fu_1059_p2 = (or_ln29_9_fu_1053_p2 & or_ln29_8_fu_1035_p2);

assign and_ln29_9_fu_1065_p2 = (grp_fu_479_p2 & and_ln29_8_fu_1059_p2);

assign and_ln29_fu_657_p2 = (or_ln29_fu_651_p2 & grp_fu_444_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln29_10_fu_1434_p1 = conv_2_out_2_load_1_reg_2571;

assign bitcast_ln29_11_fu_1451_p1 = select_ln29_5_reg_2564;

assign bitcast_ln29_12_fu_1936_p1 = conv_2_out_3_load_1_reg_2641;

assign bitcast_ln29_13_fu_1953_p1 = select_ln29_6_reg_2634;

assign bitcast_ln29_14_fu_753_p1 = conv_2_out_4_load_reg_2395;

assign bitcast_ln29_15_fu_1078_p1 = conv_2_out_5_load_reg_2490;

assign bitcast_ln29_16_fu_1095_p1 = select_ln29_8_reg_2483;

assign bitcast_ln29_17_fu_1523_p1 = conv_2_out_4_load_1_reg_2585;

assign bitcast_ln29_18_fu_1540_p1 = select_ln29_9_reg_2578;

assign bitcast_ln29_19_fu_2025_p1 = conv_2_out_5_load_1_reg_2655;

assign bitcast_ln29_1_fu_900_p1 = conv_2_out_1_load_reg_2428;

assign bitcast_ln29_20_fu_2042_p1 = select_ln29_10_reg_2648;

assign bitcast_ln29_21_fu_802_p1 = conv_2_out_6_load_reg_2402;

assign bitcast_ln29_22_fu_1167_p1 = conv_2_out_7_load_reg_2504;

assign bitcast_ln29_23_fu_1184_p1 = select_ln29_12_reg_2497;

assign bitcast_ln29_24_fu_1612_p1 = conv_2_out_6_load_1_reg_2599;

assign bitcast_ln29_25_fu_1629_p1 = select_ln29_13_reg_2592;

assign bitcast_ln29_26_fu_2114_p1 = conv_2_out_7_load_1_reg_2669;

assign bitcast_ln29_27_fu_2131_p1 = select_ln29_14_reg_2662;

assign bitcast_ln29_28_fu_851_p1 = conv_2_out_8_load_reg_2409;

assign bitcast_ln29_29_fu_1256_p1 = conv_2_out_9_load_reg_2518;

assign bitcast_ln29_2_fu_917_p1 = select_ln29_reg_2421;

assign bitcast_ln29_30_fu_1273_p1 = select_ln29_16_reg_2511;

assign bitcast_ln29_31_fu_1701_p1 = conv_2_out_8_load_1_reg_2613;

assign bitcast_ln29_32_fu_1718_p1 = select_ln29_17_reg_2606;

assign bitcast_ln29_33_fu_2203_p1 = conv_2_out_9_load_1_reg_2683;

assign bitcast_ln29_34_fu_2220_p1 = select_ln29_18_reg_2676;

assign bitcast_ln29_3_fu_1345_p1 = conv_2_out_0_load_1_reg_2557;

assign bitcast_ln29_4_fu_1362_p1 = select_ln29_1_reg_2525;

assign bitcast_ln29_5_fu_1847_p1 = conv_2_out_1_load_1_reg_2627;

assign bitcast_ln29_6_fu_1864_p1 = select_ln29_2_reg_2620;

assign bitcast_ln29_7_fu_704_p1 = conv_2_out_2_load_reg_2388;

assign bitcast_ln29_8_fu_989_p1 = conv_2_out_3_load_reg_2476;

assign bitcast_ln29_9_fu_1006_p1 = select_ln29_4_reg_2469;

assign bitcast_ln29_fu_622_p1 = conv_2_out_0_load_reg_2381;

assign conv_2_out_0_address0 = zext_ln36_fu_597_p1;

assign conv_2_out_0_address1 = zext_ln29_1_fu_695_p1;

assign conv_2_out_1_address0 = zext_ln36_reg_2315;

assign conv_2_out_1_address1 = zext_ln29_1_reg_2435;

assign conv_2_out_2_address0 = zext_ln36_fu_597_p1;

assign conv_2_out_2_address1 = zext_ln29_1_fu_695_p1;

assign conv_2_out_3_address0 = zext_ln36_reg_2315;

assign conv_2_out_3_address1 = zext_ln29_1_reg_2435;

assign conv_2_out_4_address0 = zext_ln36_fu_597_p1;

assign conv_2_out_4_address1 = zext_ln29_1_fu_695_p1;

assign conv_2_out_5_address0 = zext_ln36_reg_2315;

assign conv_2_out_5_address1 = zext_ln29_1_reg_2435;

assign conv_2_out_6_address0 = zext_ln36_fu_597_p1;

assign conv_2_out_6_address1 = zext_ln29_1_fu_695_p1;

assign conv_2_out_7_address0 = zext_ln36_reg_2315;

assign conv_2_out_7_address1 = zext_ln29_1_reg_2435;

assign conv_2_out_8_address0 = zext_ln36_fu_597_p1;

assign conv_2_out_8_address1 = zext_ln29_1_fu_695_p1;

assign conv_2_out_9_address0 = zext_ln36_reg_2315;

assign conv_2_out_9_address1 = zext_ln29_1_reg_2435;

assign f_fu_561_p2 = (5'd1 + ap_phi_mux_f_0_phi_fu_426_p4);

assign grp_fu_474_p1 = ((and_ln29_fu_657_p2[0:0] === 1'b1) ? conv_2_out_0_load_reg_2381 : 32'd8388608);

assign grp_fu_479_p1 = ((and_ln29_7_fu_739_p2[0:0] === 1'b1) ? conv_2_out_2_load_reg_2388 : 32'd8388608);

assign grp_fu_484_p1 = ((and_ln29_14_fu_788_p2[0:0] === 1'b1) ? conv_2_out_4_load_reg_2395 : 32'd8388608);

assign grp_fu_489_p1 = ((and_ln29_21_fu_837_p2[0:0] === 1'b1) ? conv_2_out_6_load_reg_2402 : 32'd8388608);

assign grp_fu_494_p1 = ((and_ln29_28_fu_886_p2[0:0] === 1'b1) ? conv_2_out_8_load_reg_2409 : 32'd8388608);

assign grp_fu_499_p1 = ((and_ln29_2_fu_976_p2[0:0] === 1'b1) ? conv_2_out_1_load_reg_2428 : select_ln29_reg_2421);

assign grp_fu_504_p1 = ((and_ln29_9_fu_1065_p2[0:0] === 1'b1) ? conv_2_out_3_load_reg_2476 : select_ln29_4_reg_2469);

assign grp_fu_509_p1 = ((and_ln29_16_fu_1154_p2[0:0] === 1'b1) ? conv_2_out_5_load_reg_2490 : select_ln29_8_reg_2483);

assign grp_fu_514_p1 = ((and_ln29_23_fu_1243_p2[0:0] === 1'b1) ? conv_2_out_7_load_reg_2504 : select_ln29_12_reg_2497);

assign grp_fu_519_p1 = ((and_ln29_30_fu_1332_p2[0:0] === 1'b1) ? conv_2_out_9_load_reg_2518 : select_ln29_16_reg_2511);

assign grp_fu_524_p1 = ((and_ln29_4_fu_1421_p2[0:0] === 1'b1) ? conv_2_out_0_load_1_reg_2557 : select_ln29_1_reg_2525);

assign grp_fu_529_p1 = ((and_ln29_11_fu_1510_p2[0:0] === 1'b1) ? conv_2_out_2_load_1_reg_2571 : select_ln29_5_reg_2564);

assign grp_fu_534_p1 = ((and_ln29_18_fu_1599_p2[0:0] === 1'b1) ? conv_2_out_4_load_1_reg_2585 : select_ln29_9_reg_2578);

assign grp_fu_539_p1 = ((and_ln29_25_fu_1688_p2[0:0] === 1'b1) ? conv_2_out_6_load_1_reg_2599 : select_ln29_13_reg_2592);

assign grp_fu_544_p1 = ((and_ln29_32_fu_1777_p2[0:0] === 1'b1) ? conv_2_out_8_load_1_reg_2613 : select_ln29_17_reg_2606);

assign icmp_ln10_fu_549_p2 = ((indvar_flatten_reg_411 == 7'd80) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_567_p2 = ((r_0_reg_433 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln29_10_fu_1881_p2 = ((tmp_s_fu_1850_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_11_fu_1887_p2 = ((trunc_ln29_5_fu_1860_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_12_fu_1899_p2 = ((tmp_10_fu_1867_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_13_fu_1905_p2 = ((trunc_ln29_6_fu_1877_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_14_fu_721_p2 = ((tmp_12_fu_707_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_15_fu_727_p2 = ((trunc_ln29_7_fu_717_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_16_fu_1023_p2 = ((tmp_14_fu_992_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_17_fu_1029_p2 = ((trunc_ln29_8_fu_1002_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_18_fu_1041_p2 = ((tmp_15_fu_1009_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_19_fu_1047_p2 = ((trunc_ln29_9_fu_1019_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_1_fu_645_p2 = ((trunc_ln29_fu_635_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_20_fu_1468_p2 = ((tmp_17_fu_1437_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_21_fu_1474_p2 = ((trunc_ln29_10_fu_1447_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_22_fu_1486_p2 = ((tmp_18_fu_1454_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_23_fu_1492_p2 = ((trunc_ln29_11_fu_1464_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_24_fu_1970_p2 = ((tmp_20_fu_1939_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_25_fu_1976_p2 = ((trunc_ln29_12_fu_1949_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_26_fu_1988_p2 = ((tmp_21_fu_1956_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_27_fu_1994_p2 = ((trunc_ln29_13_fu_1966_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_28_fu_770_p2 = ((tmp_23_fu_756_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_29_fu_776_p2 = ((trunc_ln29_14_fu_766_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_2_fu_934_p2 = ((tmp_4_fu_903_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_30_fu_1112_p2 = ((tmp_25_fu_1081_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_31_fu_1118_p2 = ((trunc_ln29_15_fu_1091_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_32_fu_1130_p2 = ((tmp_26_fu_1098_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_33_fu_1136_p2 = ((trunc_ln29_16_fu_1108_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_34_fu_1557_p2 = ((tmp_28_fu_1526_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_35_fu_1563_p2 = ((trunc_ln29_17_fu_1536_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_36_fu_1575_p2 = ((tmp_29_fu_1543_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_37_fu_1581_p2 = ((trunc_ln29_18_fu_1553_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_38_fu_2059_p2 = ((tmp_31_fu_2028_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_39_fu_2065_p2 = ((trunc_ln29_19_fu_2038_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_3_fu_940_p2 = ((trunc_ln29_1_fu_913_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_40_fu_2077_p2 = ((tmp_32_fu_2045_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_41_fu_2083_p2 = ((trunc_ln29_20_fu_2055_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_42_fu_819_p2 = ((tmp_34_fu_805_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_43_fu_825_p2 = ((trunc_ln29_21_fu_815_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_44_fu_1201_p2 = ((tmp_36_fu_1170_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_45_fu_1207_p2 = ((trunc_ln29_22_fu_1180_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_46_fu_1219_p2 = ((tmp_37_fu_1187_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_47_fu_1225_p2 = ((trunc_ln29_23_fu_1197_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_48_fu_1646_p2 = ((tmp_39_fu_1615_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_49_fu_1652_p2 = ((trunc_ln29_24_fu_1625_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_4_fu_952_p2 = ((tmp_5_fu_920_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_50_fu_1664_p2 = ((tmp_40_fu_1632_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_51_fu_1670_p2 = ((trunc_ln29_25_fu_1642_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_52_fu_2148_p2 = ((tmp_42_fu_2117_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_53_fu_2154_p2 = ((trunc_ln29_26_fu_2127_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_54_fu_2166_p2 = ((tmp_43_fu_2134_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_55_fu_2172_p2 = ((trunc_ln29_27_fu_2144_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_56_fu_868_p2 = ((tmp_45_fu_854_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_57_fu_874_p2 = ((trunc_ln29_28_fu_864_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_58_fu_1290_p2 = ((tmp_47_fu_1259_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_59_fu_1296_p2 = ((trunc_ln29_29_fu_1269_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_5_fu_958_p2 = ((trunc_ln29_2_fu_930_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_60_fu_1308_p2 = ((tmp_48_fu_1276_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_61_fu_1314_p2 = ((trunc_ln29_30_fu_1286_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_62_fu_1735_p2 = ((tmp_50_fu_1704_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_63_fu_1741_p2 = ((trunc_ln29_31_fu_1714_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_64_fu_1753_p2 = ((tmp_51_fu_1721_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_65_fu_1759_p2 = ((trunc_ln29_32_fu_1731_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_66_fu_2237_p2 = ((tmp_53_fu_2206_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_67_fu_2243_p2 = ((trunc_ln29_33_fu_2216_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_68_fu_2255_p2 = ((tmp_54_fu_2223_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_69_fu_2261_p2 = ((trunc_ln29_34_fu_2233_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_6_fu_1379_p2 = ((tmp_7_fu_1348_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1385_p2 = ((trunc_ln29_3_fu_1358_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_1397_p2 = ((tmp_8_fu_1365_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_1403_p2 = ((trunc_ln29_4_fu_1375_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_639_p2 = ((tmp_2_fu_625_p4 != 8'd255) ? 1'b1 : 1'b0);

assign max_pool_out_0_address0 = zext_ln36_reg_2315_pp0_iter4_reg;

assign max_pool_out_0_address1 = zext_ln36_1_fu_1819_p1;

assign max_pool_out_0_d0 = ((and_ln29_6_fu_1923_p2[0:0] === 1'b1) ? conv_2_out_1_load_1_reg_2627 : select_ln29_2_reg_2620);

assign max_pool_out_0_d1 = ((and_ln29_27_fu_2190_p2[0:0] === 1'b1) ? conv_2_out_7_load_1_reg_2669 : select_ln29_14_reg_2662);

assign max_pool_out_1_address0 = zext_ln36_reg_2315_pp0_iter4_reg;

assign max_pool_out_1_address1 = zext_ln36_1_fu_1819_p1;

assign max_pool_out_1_d0 = ((and_ln29_13_fu_2012_p2[0:0] === 1'b1) ? conv_2_out_3_load_1_reg_2641 : select_ln29_6_reg_2634);

assign max_pool_out_1_d1 = ((and_ln29_34_fu_2279_p2[0:0] === 1'b1) ? conv_2_out_9_load_1_reg_2683 : select_ln29_18_reg_2676);

assign max_pool_out_2_0_address0 = zext_ln36_3_fu_1842_p1;

assign max_pool_out_2_0_d0 = ((and_ln29_20_fu_2101_p2[0:0] === 1'b1) ? conv_2_out_5_load_1_reg_2655 : select_ln29_10_reg_2648);

assign or_ln26_fu_671_p2 = (shl_ln_fu_615_p3 | 4'd1);

assign or_ln29_10_fu_1480_p2 = (icmp_ln29_21_fu_1474_p2 | icmp_ln29_20_fu_1468_p2);

assign or_ln29_11_fu_1498_p2 = (icmp_ln29_23_fu_1492_p2 | icmp_ln29_22_fu_1486_p2);

assign or_ln29_12_fu_1982_p2 = (icmp_ln29_25_fu_1976_p2 | icmp_ln29_24_fu_1970_p2);

assign or_ln29_13_fu_2000_p2 = (icmp_ln29_27_fu_1994_p2 | icmp_ln29_26_fu_1988_p2);

assign or_ln29_14_fu_782_p2 = (icmp_ln29_29_fu_776_p2 | icmp_ln29_28_fu_770_p2);

assign or_ln29_15_fu_1124_p2 = (icmp_ln29_31_fu_1118_p2 | icmp_ln29_30_fu_1112_p2);

assign or_ln29_16_fu_1142_p2 = (icmp_ln29_33_fu_1136_p2 | icmp_ln29_32_fu_1130_p2);

assign or_ln29_17_fu_1569_p2 = (icmp_ln29_35_fu_1563_p2 | icmp_ln29_34_fu_1557_p2);

assign or_ln29_18_fu_1587_p2 = (icmp_ln29_37_fu_1581_p2 | icmp_ln29_36_fu_1575_p2);

assign or_ln29_19_fu_2071_p2 = (icmp_ln29_39_fu_2065_p2 | icmp_ln29_38_fu_2059_p2);

assign or_ln29_1_fu_946_p2 = (icmp_ln29_3_fu_940_p2 | icmp_ln29_2_fu_934_p2);

assign or_ln29_20_fu_2089_p2 = (icmp_ln29_41_fu_2083_p2 | icmp_ln29_40_fu_2077_p2);

assign or_ln29_21_fu_831_p2 = (icmp_ln29_43_fu_825_p2 | icmp_ln29_42_fu_819_p2);

assign or_ln29_22_fu_1213_p2 = (icmp_ln29_45_fu_1207_p2 | icmp_ln29_44_fu_1201_p2);

assign or_ln29_23_fu_1231_p2 = (icmp_ln29_47_fu_1225_p2 | icmp_ln29_46_fu_1219_p2);

assign or_ln29_24_fu_1658_p2 = (icmp_ln29_49_fu_1652_p2 | icmp_ln29_48_fu_1646_p2);

assign or_ln29_25_fu_1676_p2 = (icmp_ln29_51_fu_1670_p2 | icmp_ln29_50_fu_1664_p2);

assign or_ln29_26_fu_2160_p2 = (icmp_ln29_53_fu_2154_p2 | icmp_ln29_52_fu_2148_p2);

assign or_ln29_27_fu_2178_p2 = (icmp_ln29_55_fu_2172_p2 | icmp_ln29_54_fu_2166_p2);

assign or_ln29_28_fu_880_p2 = (icmp_ln29_57_fu_874_p2 | icmp_ln29_56_fu_868_p2);

assign or_ln29_29_fu_1302_p2 = (icmp_ln29_59_fu_1296_p2 | icmp_ln29_58_fu_1290_p2);

assign or_ln29_2_fu_964_p2 = (icmp_ln29_5_fu_958_p2 | icmp_ln29_4_fu_952_p2);

assign or_ln29_30_fu_1320_p2 = (icmp_ln29_61_fu_1314_p2 | icmp_ln29_60_fu_1308_p2);

assign or_ln29_31_fu_1747_p2 = (icmp_ln29_63_fu_1741_p2 | icmp_ln29_62_fu_1735_p2);

assign or_ln29_32_fu_1765_p2 = (icmp_ln29_65_fu_1759_p2 | icmp_ln29_64_fu_1753_p2);

assign or_ln29_33_fu_2249_p2 = (icmp_ln29_67_fu_2243_p2 | icmp_ln29_66_fu_2237_p2);

assign or_ln29_34_fu_2267_p2 = (icmp_ln29_69_fu_2261_p2 | icmp_ln29_68_fu_2255_p2);

assign or_ln29_3_fu_1391_p2 = (icmp_ln29_7_fu_1385_p2 | icmp_ln29_6_fu_1379_p2);

assign or_ln29_4_fu_1409_p2 = (icmp_ln29_9_fu_1403_p2 | icmp_ln29_8_fu_1397_p2);

assign or_ln29_5_fu_1893_p2 = (icmp_ln29_11_fu_1887_p2 | icmp_ln29_10_fu_1881_p2);

assign or_ln29_6_fu_1911_p2 = (icmp_ln29_13_fu_1905_p2 | icmp_ln29_12_fu_1899_p2);

assign or_ln29_7_fu_733_p2 = (icmp_ln29_15_fu_727_p2 | icmp_ln29_14_fu_721_p2);

assign or_ln29_8_fu_1035_p2 = (icmp_ln29_17_fu_1029_p2 | icmp_ln29_16_fu_1023_p2);

assign or_ln29_9_fu_1053_p2 = (icmp_ln29_19_fu_1047_p2 | icmp_ln29_18_fu_1041_p2);

assign or_ln29_fu_651_p2 = (icmp_ln29_fu_639_p2 | icmp_ln29_1_fu_645_p2);

assign or_ln36_fu_1800_p2 = (tmp_fu_1793_p3 | 8'd16);

assign r_fu_606_p2 = (3'd1 + select_ln29_20_fu_573_p3);

assign select_ln29_10_fu_1605_p3 = ((and_ln29_18_fu_1599_p2[0:0] === 1'b1) ? conv_2_out_4_load_1_reg_2585 : select_ln29_9_reg_2578);

assign select_ln29_12_fu_843_p3 = ((and_ln29_21_fu_837_p2[0:0] === 1'b1) ? conv_2_out_6_load_reg_2402 : 32'd8388608);

assign select_ln29_13_fu_1249_p3 = ((and_ln29_23_fu_1243_p2[0:0] === 1'b1) ? conv_2_out_7_load_reg_2504 : select_ln29_12_reg_2497);

assign select_ln29_14_fu_1694_p3 = ((and_ln29_25_fu_1688_p2[0:0] === 1'b1) ? conv_2_out_6_load_1_reg_2599 : select_ln29_13_reg_2592);

assign select_ln29_16_fu_892_p3 = ((and_ln29_28_fu_886_p2[0:0] === 1'b1) ? conv_2_out_8_load_reg_2409 : 32'd8388608);

assign select_ln29_17_fu_1338_p3 = ((and_ln29_30_fu_1332_p2[0:0] === 1'b1) ? conv_2_out_9_load_reg_2518 : select_ln29_16_reg_2511);

assign select_ln29_18_fu_1783_p3 = ((and_ln29_32_fu_1777_p2[0:0] === 1'b1) ? conv_2_out_8_load_1_reg_2613 : select_ln29_17_reg_2606);

assign select_ln29_1_fu_982_p3 = ((and_ln29_2_fu_976_p2[0:0] === 1'b1) ? conv_2_out_1_load_reg_2428 : select_ln29_reg_2421);

assign select_ln29_20_fu_573_p3 = ((icmp_ln13_fu_567_p2[0:0] === 1'b1) ? 3'd0 : r_0_reg_433);

assign select_ln29_21_fu_581_p3 = ((icmp_ln13_fu_567_p2[0:0] === 1'b1) ? f_fu_561_p2 : ap_phi_mux_f_0_phi_fu_426_p4);

assign select_ln29_2_fu_1427_p3 = ((and_ln29_4_fu_1421_p2[0:0] === 1'b1) ? conv_2_out_0_load_1_reg_2557 : select_ln29_1_reg_2525);

assign select_ln29_4_fu_745_p3 = ((and_ln29_7_fu_739_p2[0:0] === 1'b1) ? conv_2_out_2_load_reg_2388 : 32'd8388608);

assign select_ln29_5_fu_1071_p3 = ((and_ln29_9_fu_1065_p2[0:0] === 1'b1) ? conv_2_out_3_load_reg_2476 : select_ln29_4_reg_2469);

assign select_ln29_6_fu_1516_p3 = ((and_ln29_11_fu_1510_p2[0:0] === 1'b1) ? conv_2_out_2_load_1_reg_2571 : select_ln29_5_reg_2564);

assign select_ln29_8_fu_794_p3 = ((and_ln29_14_fu_788_p2[0:0] === 1'b1) ? conv_2_out_4_load_reg_2395 : 32'd8388608);

assign select_ln29_9_fu_1160_p3 = ((and_ln29_16_fu_1154_p2[0:0] === 1'b1) ? conv_2_out_5_load_reg_2490 : select_ln29_8_reg_2483);

assign select_ln29_fu_663_p3 = ((and_ln29_fu_657_p2[0:0] === 1'b1) ? conv_2_out_0_load_reg_2381 : 32'd8388608);

assign shl_ln_fu_615_p3 = {{select_ln29_20_reg_2301_pp0_iter1_reg}, {1'd0}};

assign tmp_10_fu_1867_p4 = {{bitcast_ln29_6_fu_1864_p1[30:23]}};

assign tmp_12_fu_707_p4 = {{bitcast_ln29_7_fu_704_p1[30:23]}};

assign tmp_14_fu_992_p4 = {{bitcast_ln29_8_fu_989_p1[30:23]}};

assign tmp_15_fu_1009_p4 = {{bitcast_ln29_9_fu_1006_p1[30:23]}};

assign tmp_17_fu_1437_p4 = {{bitcast_ln29_10_fu_1434_p1[30:23]}};

assign tmp_18_fu_1454_p4 = {{bitcast_ln29_11_fu_1451_p1[30:23]}};

assign tmp_20_fu_1939_p4 = {{bitcast_ln29_12_fu_1936_p1[30:23]}};

assign tmp_21_fu_1956_p4 = {{bitcast_ln29_13_fu_1953_p1[30:23]}};

assign tmp_23_fu_756_p4 = {{bitcast_ln29_14_fu_753_p1[30:23]}};

assign tmp_25_fu_1081_p4 = {{bitcast_ln29_15_fu_1078_p1[30:23]}};

assign tmp_26_fu_1098_p4 = {{bitcast_ln29_16_fu_1095_p1[30:23]}};

assign tmp_28_fu_1526_p4 = {{bitcast_ln29_17_fu_1523_p1[30:23]}};

assign tmp_29_fu_1543_p4 = {{bitcast_ln29_18_fu_1540_p1[30:23]}};

assign tmp_2_fu_625_p4 = {{bitcast_ln29_fu_622_p1[30:23]}};

assign tmp_31_fu_2028_p4 = {{bitcast_ln29_19_fu_2025_p1[30:23]}};

assign tmp_32_fu_2045_p4 = {{bitcast_ln29_20_fu_2042_p1[30:23]}};

assign tmp_34_fu_805_p4 = {{bitcast_ln29_21_fu_802_p1[30:23]}};

assign tmp_36_fu_1170_p4 = {{bitcast_ln29_22_fu_1167_p1[30:23]}};

assign tmp_37_fu_1187_p4 = {{bitcast_ln29_23_fu_1184_p1[30:23]}};

assign tmp_39_fu_1615_p4 = {{bitcast_ln29_24_fu_1612_p1[30:23]}};

assign tmp_40_fu_1632_p4 = {{bitcast_ln29_25_fu_1629_p1[30:23]}};

assign tmp_42_fu_2117_p4 = {{bitcast_ln29_26_fu_2114_p1[30:23]}};

assign tmp_43_fu_2134_p4 = {{bitcast_ln29_27_fu_2131_p1[30:23]}};

assign tmp_45_fu_854_p4 = {{bitcast_ln29_28_fu_851_p1[30:23]}};

assign tmp_47_fu_1259_p4 = {{bitcast_ln29_29_fu_1256_p1[30:23]}};

assign tmp_48_fu_1276_p4 = {{bitcast_ln29_30_fu_1273_p1[30:23]}};

assign tmp_4_fu_903_p4 = {{bitcast_ln29_1_fu_900_p1[30:23]}};

assign tmp_50_fu_1704_p4 = {{bitcast_ln29_31_fu_1701_p1[30:23]}};

assign tmp_51_fu_1721_p4 = {{bitcast_ln29_32_fu_1718_p1[30:23]}};

assign tmp_53_fu_2206_p4 = {{bitcast_ln29_33_fu_2203_p1[30:23]}};

assign tmp_54_fu_2223_p4 = {{bitcast_ln29_34_fu_2220_p1[30:23]}};

assign tmp_56_fu_589_p3 = {{select_ln29_20_fu_573_p3}, {select_ln29_21_fu_581_p3}};

assign tmp_57_fu_1825_p3 = {{select_ln29_20_reg_2301_pp0_iter4_reg}, {4'd0}};

assign tmp_58_cast_fu_1806_p3 = {{1'd0}, {or_ln36_fu_1800_p2}};

assign tmp_58_fu_677_p3 = {{or_ln26_fu_671_p2}, {4'd0}};

assign tmp_5_fu_920_p4 = {{bitcast_ln29_2_fu_917_p1[30:23]}};

assign tmp_7_fu_1348_p4 = {{bitcast_ln29_3_fu_1345_p1[30:23]}};

assign tmp_8_fu_1365_p4 = {{bitcast_ln29_4_fu_1362_p1[30:23]}};

assign tmp_fu_1793_p3 = {{select_ln29_20_reg_2301_pp0_iter4_reg}, {5'd0}};

assign tmp_s_fu_1850_p4 = {{bitcast_ln29_5_fu_1847_p1[30:23]}};

assign trunc_ln29_10_fu_1447_p1 = bitcast_ln29_10_fu_1434_p1[22:0];

assign trunc_ln29_11_fu_1464_p1 = bitcast_ln29_11_fu_1451_p1[22:0];

assign trunc_ln29_12_fu_1949_p1 = bitcast_ln29_12_fu_1936_p1[22:0];

assign trunc_ln29_13_fu_1966_p1 = bitcast_ln29_13_fu_1953_p1[22:0];

assign trunc_ln29_14_fu_766_p1 = bitcast_ln29_14_fu_753_p1[22:0];

assign trunc_ln29_15_fu_1091_p1 = bitcast_ln29_15_fu_1078_p1[22:0];

assign trunc_ln29_16_fu_1108_p1 = bitcast_ln29_16_fu_1095_p1[22:0];

assign trunc_ln29_17_fu_1536_p1 = bitcast_ln29_17_fu_1523_p1[22:0];

assign trunc_ln29_18_fu_1553_p1 = bitcast_ln29_18_fu_1540_p1[22:0];

assign trunc_ln29_19_fu_2038_p1 = bitcast_ln29_19_fu_2025_p1[22:0];

assign trunc_ln29_1_fu_913_p1 = bitcast_ln29_1_fu_900_p1[22:0];

assign trunc_ln29_20_fu_2055_p1 = bitcast_ln29_20_fu_2042_p1[22:0];

assign trunc_ln29_21_fu_815_p1 = bitcast_ln29_21_fu_802_p1[22:0];

assign trunc_ln29_22_fu_1180_p1 = bitcast_ln29_22_fu_1167_p1[22:0];

assign trunc_ln29_23_fu_1197_p1 = bitcast_ln29_23_fu_1184_p1[22:0];

assign trunc_ln29_24_fu_1625_p1 = bitcast_ln29_24_fu_1612_p1[22:0];

assign trunc_ln29_25_fu_1642_p1 = bitcast_ln29_25_fu_1629_p1[22:0];

assign trunc_ln29_26_fu_2127_p1 = bitcast_ln29_26_fu_2114_p1[22:0];

assign trunc_ln29_27_fu_2144_p1 = bitcast_ln29_27_fu_2131_p1[22:0];

assign trunc_ln29_28_fu_864_p1 = bitcast_ln29_28_fu_851_p1[22:0];

assign trunc_ln29_29_fu_1269_p1 = bitcast_ln29_29_fu_1256_p1[22:0];

assign trunc_ln29_2_fu_930_p1 = bitcast_ln29_2_fu_917_p1[22:0];

assign trunc_ln29_30_fu_1286_p1 = bitcast_ln29_30_fu_1273_p1[22:0];

assign trunc_ln29_31_fu_1714_p1 = bitcast_ln29_31_fu_1701_p1[22:0];

assign trunc_ln29_32_fu_1731_p1 = bitcast_ln29_32_fu_1718_p1[22:0];

assign trunc_ln29_33_fu_2216_p1 = bitcast_ln29_33_fu_2203_p1[22:0];

assign trunc_ln29_34_fu_2233_p1 = bitcast_ln29_34_fu_2220_p1[22:0];

assign trunc_ln29_3_fu_1358_p1 = bitcast_ln29_3_fu_1345_p1[22:0];

assign trunc_ln29_4_fu_1375_p1 = bitcast_ln29_4_fu_1362_p1[22:0];

assign trunc_ln29_5_fu_1860_p1 = bitcast_ln29_5_fu_1847_p1[22:0];

assign trunc_ln29_6_fu_1877_p1 = bitcast_ln29_6_fu_1864_p1[22:0];

assign trunc_ln29_7_fu_717_p1 = bitcast_ln29_7_fu_704_p1[22:0];

assign trunc_ln29_8_fu_1002_p1 = bitcast_ln29_8_fu_989_p1[22:0];

assign trunc_ln29_9_fu_1019_p1 = bitcast_ln29_9_fu_1006_p1[22:0];

assign trunc_ln29_fu_635_p1 = bitcast_ln29_fu_622_p1[22:0];

assign zext_ln14_1_fu_612_p1 = select_ln29_21_reg_2308_pp0_iter1_reg;

assign zext_ln14_fu_1790_p1 = select_ln29_21_reg_2308_pp0_iter4_reg;

assign zext_ln29_1_fu_695_p1 = add_ln29_fu_689_p2;

assign zext_ln29_fu_685_p1 = tmp_58_fu_677_p3;

assign zext_ln36_1_fu_1819_p1 = add_ln36_fu_1814_p2;

assign zext_ln36_2_fu_1832_p1 = tmp_57_fu_1825_p3;

assign zext_ln36_3_fu_1842_p1 = add_ln36_1_fu_1836_p2;

assign zext_ln36_fu_597_p1 = tmp_56_fu_589_p3;

always @ (posedge ap_clk) begin
    zext_ln36_reg_2315[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln36_reg_2315_pp0_iter1_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln36_reg_2315_pp0_iter2_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln36_reg_2315_pp0_iter3_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln36_reg_2315_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln14_1_reg_2416[8:5] <= 4'b0000;
    zext_ln14_1_reg_2416_pp0_iter3_reg[8:5] <= 4'b0000;
    zext_ln14_1_reg_2416_pp0_iter4_reg[8:5] <= 4'b0000;
    zext_ln29_1_reg_2435[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //max_pool_2
