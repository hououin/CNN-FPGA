// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.393000,HLS_SYN_LAT=494124,HLS_SYN_TPT=none,HLS_SYN_MEM=110,HLS_SYN_DSP=79,HLS_SYN_FF=20464,HLS_SYN_LUT=27474,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] conv_1_out_address0;
reg    conv_1_out_ce0;
reg    conv_1_out_we0;
wire   [31:0] conv_1_out_q0;
reg   [7:0] max_pool_1_out_0_address0;
reg    max_pool_1_out_0_ce0;
reg    max_pool_1_out_0_we0;
wire   [31:0] max_pool_1_out_0_q0;
reg    max_pool_1_out_0_ce1;
wire   [31:0] max_pool_1_out_0_q1;
reg   [7:0] max_pool_1_out_1_address0;
reg    max_pool_1_out_1_ce0;
reg    max_pool_1_out_1_we0;
wire   [31:0] max_pool_1_out_1_q0;
reg    max_pool_1_out_1_ce1;
wire   [31:0] max_pool_1_out_1_q1;
reg   [7:0] max_pool_1_out_2_address0;
reg    max_pool_1_out_2_ce0;
reg    max_pool_1_out_2_we0;
wire   [31:0] max_pool_1_out_2_q0;
reg    max_pool_1_out_2_ce1;
wire   [31:0] max_pool_1_out_2_q1;
reg   [7:0] max_pool_1_out_3_address0;
reg    max_pool_1_out_3_ce0;
reg    max_pool_1_out_3_we0;
wire   [31:0] max_pool_1_out_3_q0;
reg    max_pool_1_out_3_ce1;
wire   [31:0] max_pool_1_out_3_q1;
reg   [7:0] max_pool_1_out_4_address0;
reg    max_pool_1_out_4_ce0;
reg    max_pool_1_out_4_we0;
wire   [31:0] max_pool_1_out_4_q0;
reg    max_pool_1_out_4_ce1;
wire   [31:0] max_pool_1_out_4_q1;
reg   [7:0] max_pool_1_out_5_address0;
reg    max_pool_1_out_5_ce0;
reg    max_pool_1_out_5_we0;
wire   [31:0] max_pool_1_out_5_q0;
reg    max_pool_1_out_5_ce1;
wire   [31:0] max_pool_1_out_5_q1;
reg   [9:0] conv_2_out_0_address0;
reg    conv_2_out_0_ce0;
reg    conv_2_out_0_we0;
wire   [31:0] conv_2_out_0_q0;
reg    conv_2_out_0_ce1;
wire   [31:0] conv_2_out_0_q1;
reg   [8:0] conv_2_out_1_address0;
reg    conv_2_out_1_ce0;
reg    conv_2_out_1_we0;
wire   [31:0] conv_2_out_1_q0;
reg    conv_2_out_1_ce1;
wire   [31:0] conv_2_out_1_q1;
reg   [8:0] conv_2_out_2_address0;
reg    conv_2_out_2_ce0;
reg    conv_2_out_2_we0;
wire   [31:0] conv_2_out_2_q0;
reg    conv_2_out_2_ce1;
wire   [31:0] conv_2_out_2_q1;
reg   [8:0] conv_2_out_3_address0;
reg    conv_2_out_3_ce0;
reg    conv_2_out_3_we0;
wire   [31:0] conv_2_out_3_q0;
reg    conv_2_out_3_ce1;
wire   [31:0] conv_2_out_3_q1;
reg   [8:0] conv_2_out_4_address0;
reg    conv_2_out_4_ce0;
reg    conv_2_out_4_we0;
wire   [31:0] conv_2_out_4_q0;
reg    conv_2_out_4_ce1;
wire   [31:0] conv_2_out_4_q1;
reg   [7:0] max_pool_2_out_0_address0;
reg    max_pool_2_out_0_ce0;
reg    max_pool_2_out_0_we0;
wire   [31:0] max_pool_2_out_0_q0;
reg    max_pool_2_out_0_ce1;
reg    max_pool_2_out_0_we1;
reg   [7:0] max_pool_2_out_1_address0;
reg    max_pool_2_out_1_ce0;
reg    max_pool_2_out_1_we0;
wire   [31:0] max_pool_2_out_1_q0;
reg    max_pool_2_out_1_ce1;
reg    max_pool_2_out_1_we1;
reg   [6:0] max_pool_2_out_2_0_address0;
reg    max_pool_2_out_2_0_ce0;
reg    max_pool_2_out_2_0_we0;
wire   [31:0] max_pool_2_out_2_0_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
wire   [14:0] dense_1_weights_address0;
reg    dense_1_weights_ce0;
wire   [31:0] dense_1_weights_q0;
wire   [5:0] dense_1_bias_address0;
reg    dense_1_bias_ce0;
wire   [31:0] dense_1_bias_q0;
reg   [5:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_d0;
wire   [31:0] dense_1_out_q0;
wire   [10:0] dense_2_weights_address0;
reg    dense_2_weights_ce0;
wire   [31:0] dense_2_weights_q0;
wire   [4:0] dense_2_bias_address0;
reg    dense_2_bias_ce0;
wire   [31:0] dense_2_bias_q0;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_d0;
wire   [31:0] dense_2_out_q0;
wire   [31:0] grp_fu_747_p2;
reg   [31:0] reg_761;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state30;
wire   [31:0] grp_fu_739_p2;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state34;
reg   [31:0] reg_772;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state38;
wire   [4:0] i_fu_783_p2;
reg   [4:0] i_reg_1096;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_789_p2;
reg   [9:0] ix_in_reg_1101;
wire   [0:0] icmp_ln23_fu_777_p2;
wire   [10:0] sub_ln27_fu_819_p2;
reg   [10:0] sub_ln27_reg_1106;
wire   [4:0] j_fu_831_p2;
reg   [4:0] j_reg_1114;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_825_p2;
wire   [10:0] add_ln27_fu_846_p2;
reg   [10:0] add_ln27_reg_1124;
wire   [9:0] add_ln28_fu_851_p2;
reg   [9:0] add_ln28_reg_1129;
wire   [5:0] i_1_fu_867_p2;
reg   [5:0] i_1_reg_1137;
wire    ap_CS_fsm_state14;
wire   [63:0] zext_ln14_fu_873_p1;
reg   [63:0] zext_ln14_reg_1142;
wire   [0:0] icmp_ln9_fu_861_p2;
wire   [14:0] zext_ln13_fu_877_p1;
reg   [14:0] zext_ln13_reg_1148;
wire   [8:0] j_1_fu_887_p2;
reg   [8:0] j_1_reg_1156;
wire    ap_CS_fsm_state15;
wire   [14:0] add_ln14_5_fu_898_p2;
reg   [14:0] add_ln14_5_reg_1161;
wire   [0:0] icmp_ln13_fu_881_p2;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state22;
wire   [4:0] i_2_fu_971_p2;
reg   [4:0] i_2_reg_1199;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln14_4_fu_977_p1;
reg   [63:0] zext_ln14_4_reg_1204;
wire   [0:0] icmp_ln9_1_fu_965_p2;
wire   [11:0] zext_ln13_1_fu_981_p1;
reg   [11:0] zext_ln13_1_reg_1210;
wire   [5:0] j_2_fu_991_p2;
reg   [5:0] j_2_reg_1218;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln13_1_fu_985_p2;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state35;
reg   [9:0] conv_1_input_address0;
reg    conv_1_input_ce0;
reg    conv_1_input_we0;
wire   [31:0] conv_1_input_q0;
wire    grp_conv_2_fu_530_ap_start;
wire    grp_conv_2_fu_530_ap_done;
wire    grp_conv_2_fu_530_ap_idle;
wire    grp_conv_2_fu_530_ap_ready;
wire   [9:0] grp_conv_2_fu_530_conv_out_0_address0;
wire    grp_conv_2_fu_530_conv_out_0_ce0;
wire    grp_conv_2_fu_530_conv_out_0_we0;
wire   [31:0] grp_conv_2_fu_530_conv_out_0_d0;
wire   [8:0] grp_conv_2_fu_530_conv_out_1_address0;
wire    grp_conv_2_fu_530_conv_out_1_ce0;
wire    grp_conv_2_fu_530_conv_out_1_we0;
wire   [31:0] grp_conv_2_fu_530_conv_out_1_d0;
wire   [8:0] grp_conv_2_fu_530_conv_out_2_address0;
wire    grp_conv_2_fu_530_conv_out_2_ce0;
wire    grp_conv_2_fu_530_conv_out_2_we0;
wire   [31:0] grp_conv_2_fu_530_conv_out_2_d0;
wire   [8:0] grp_conv_2_fu_530_conv_out_3_address0;
wire    grp_conv_2_fu_530_conv_out_3_ce0;
wire    grp_conv_2_fu_530_conv_out_3_we0;
wire   [31:0] grp_conv_2_fu_530_conv_out_3_d0;
wire   [8:0] grp_conv_2_fu_530_conv_out_4_address0;
wire    grp_conv_2_fu_530_conv_out_4_ce0;
wire    grp_conv_2_fu_530_conv_out_4_we0;
wire   [31:0] grp_conv_2_fu_530_conv_out_4_d0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_0_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_0_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_0_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_0_ce1;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_1_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_1_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_1_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_1_ce1;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_2_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_2_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_2_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_2_ce1;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_3_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_3_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_3_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_3_ce1;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_4_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_4_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_4_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_4_ce1;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_5_address0;
wire    grp_conv_2_fu_530_max_pool_1_out_5_ce0;
wire   [7:0] grp_conv_2_fu_530_max_pool_1_out_5_address1;
wire    grp_conv_2_fu_530_max_pool_1_out_5_ce1;
wire    grp_max_pool_2_fu_666_ap_start;
wire    grp_max_pool_2_fu_666_ap_done;
wire    grp_max_pool_2_fu_666_ap_idle;
wire    grp_max_pool_2_fu_666_ap_ready;
wire   [7:0] grp_max_pool_2_fu_666_max_pool_out_0_address0;
wire    grp_max_pool_2_fu_666_max_pool_out_0_ce0;
wire    grp_max_pool_2_fu_666_max_pool_out_0_we0;
wire   [31:0] grp_max_pool_2_fu_666_max_pool_out_0_d0;
wire   [7:0] grp_max_pool_2_fu_666_max_pool_out_0_address1;
wire    grp_max_pool_2_fu_666_max_pool_out_0_ce1;
wire    grp_max_pool_2_fu_666_max_pool_out_0_we1;
wire   [31:0] grp_max_pool_2_fu_666_max_pool_out_0_d1;
wire   [7:0] grp_max_pool_2_fu_666_max_pool_out_1_address0;
wire    grp_max_pool_2_fu_666_max_pool_out_1_ce0;
wire    grp_max_pool_2_fu_666_max_pool_out_1_we0;
wire   [31:0] grp_max_pool_2_fu_666_max_pool_out_1_d0;
wire   [7:0] grp_max_pool_2_fu_666_max_pool_out_1_address1;
wire    grp_max_pool_2_fu_666_max_pool_out_1_ce1;
wire    grp_max_pool_2_fu_666_max_pool_out_1_we1;
wire   [31:0] grp_max_pool_2_fu_666_max_pool_out_1_d1;
wire   [6:0] grp_max_pool_2_fu_666_max_pool_out_2_0_address0;
wire    grp_max_pool_2_fu_666_max_pool_out_2_0_ce0;
wire    grp_max_pool_2_fu_666_max_pool_out_2_0_we0;
wire   [31:0] grp_max_pool_2_fu_666_max_pool_out_2_0_d0;
wire   [9:0] grp_max_pool_2_fu_666_conv_2_out_0_address0;
wire    grp_max_pool_2_fu_666_conv_2_out_0_ce0;
wire   [9:0] grp_max_pool_2_fu_666_conv_2_out_0_address1;
wire    grp_max_pool_2_fu_666_conv_2_out_0_ce1;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_1_address0;
wire    grp_max_pool_2_fu_666_conv_2_out_1_ce0;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_1_address1;
wire    grp_max_pool_2_fu_666_conv_2_out_1_ce1;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_2_address0;
wire    grp_max_pool_2_fu_666_conv_2_out_2_ce0;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_2_address1;
wire    grp_max_pool_2_fu_666_conv_2_out_2_ce1;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_3_address0;
wire    grp_max_pool_2_fu_666_conv_2_out_3_ce0;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_3_address1;
wire    grp_max_pool_2_fu_666_conv_2_out_3_ce1;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_4_address0;
wire    grp_max_pool_2_fu_666_conv_2_out_4_ce0;
wire   [8:0] grp_max_pool_2_fu_666_conv_2_out_4_address1;
wire    grp_max_pool_2_fu_666_conv_2_out_4_ce1;
wire    grp_dense_out_fu_686_ap_start;
wire    grp_dense_out_fu_686_ap_done;
wire    grp_dense_out_fu_686_ap_idle;
wire    grp_dense_out_fu_686_ap_ready;
wire   [31:0] grp_dense_out_fu_686_prediction_Addr_A;
wire    grp_dense_out_fu_686_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_686_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_686_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_686_dense_2_out_address0;
wire    grp_dense_out_fu_686_dense_2_out_ce0;
wire    grp_conv_1_fu_698_ap_start;
wire    grp_conv_1_fu_698_ap_done;
wire    grp_conv_1_fu_698_ap_idle;
wire    grp_conv_1_fu_698_ap_ready;
wire   [9:0] grp_conv_1_fu_698_input_r_address0;
wire    grp_conv_1_fu_698_input_r_ce0;
wire   [11:0] grp_conv_1_fu_698_conv_1_out_address0;
wire    grp_conv_1_fu_698_conv_1_out_ce0;
wire    grp_conv_1_fu_698_conv_1_out_we0;
wire   [31:0] grp_conv_1_fu_698_conv_1_out_d0;
wire    grp_max_pool_1_fu_709_ap_start;
wire    grp_max_pool_1_fu_709_ap_done;
wire    grp_max_pool_1_fu_709_ap_idle;
wire    grp_max_pool_1_fu_709_ap_ready;
wire   [11:0] grp_max_pool_1_fu_709_conv_out_address0;
wire    grp_max_pool_1_fu_709_conv_out_ce0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_0_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_0_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_0_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_0_d0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_1_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_1_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_1_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_1_d0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_2_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_2_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_2_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_2_d0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_3_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_3_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_3_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_3_d0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_4_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_4_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_4_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_4_d0;
wire   [7:0] grp_max_pool_1_fu_709_max_pool_out_5_address0;
wire    grp_max_pool_1_fu_709_max_pool_out_5_ce0;
wire    grp_max_pool_1_fu_709_max_pool_out_5_we0;
wire   [31:0] grp_max_pool_1_fu_709_max_pool_out_5_d0;
wire    grp_flat_fu_727_ap_start;
wire    grp_flat_fu_727_ap_done;
wire    grp_flat_fu_727_ap_idle;
wire    grp_flat_fu_727_ap_ready;
wire   [8:0] grp_flat_fu_727_flat_array_address0;
wire    grp_flat_fu_727_flat_array_ce0;
wire    grp_flat_fu_727_flat_array_we0;
wire   [31:0] grp_flat_fu_727_flat_array_d0;
wire   [7:0] grp_flat_fu_727_max_pool_2_out_0_address0;
wire    grp_flat_fu_727_max_pool_2_out_0_ce0;
wire   [7:0] grp_flat_fu_727_max_pool_2_out_1_address0;
wire    grp_flat_fu_727_max_pool_2_out_1_ce0;
wire   [6:0] grp_flat_fu_727_max_pool_2_out_2_0_address0;
wire    grp_flat_fu_727_max_pool_2_out_2_0_ce0;
reg   [9:0] ix_in_0_reg_407;
reg   [4:0] i_0_reg_419;
reg   [9:0] ix_in_1_reg_430;
wire    ap_CS_fsm_state4;
reg   [4:0] j_0_reg_440;
reg   [5:0] i_0_i_reg_451;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state26;
reg   [31:0] sum_0_i_reg_462;
reg   [8:0] j_0_i_reg_474;
reg   [14:0] phi_mul_reg_485;
reg   [4:0] i_0_i9_reg_496;
wire    ap_CS_fsm_state39;
reg   [31:0] sum_0_i12_reg_507;
reg   [5:0] j_0_i13_reg_519;
reg    grp_conv_2_fu_530_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_max_pool_2_fu_666_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_dense_out_fu_686_ap_start_reg;
wire    ap_CS_fsm_state40;
reg    grp_conv_1_fu_698_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_max_pool_1_fu_709_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_flat_fu_727_ap_start_reg;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln27_1_fu_837_p1;
wire  signed [63:0] sext_ln27_fu_857_p1;
wire   [63:0] zext_ln14_9_fu_909_p1;
wire   [63:0] zext_ln14_5_fu_893_p1;
wire  signed [63:0] sext_ln14_fu_1037_p1;
wire   [63:0] zext_ln14_6_fu_997_p1;
wire   [31:0] cnn_input_Addr_A_orig;
reg   [31:0] grp_fu_739_p0;
reg   [31:0] grp_fu_739_p1;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state31;
reg   [31:0] grp_fu_747_p0;
reg   [31:0] grp_fu_747_p1;
wire   [9:0] tmp_72_fu_795_p3;
wire   [6:0] tmp_73_fu_807_p3;
wire   [10:0] zext_ln27_fu_803_p1;
wire   [10:0] zext_ln27_2_fu_815_p1;
wire   [10:0] zext_ln27_3_fu_842_p1;
wire   [14:0] add_ln14_fu_904_p2;
wire   [31:0] bitcast_ln19_fu_914_p1;
wire   [7:0] tmp_fu_918_p4;
wire   [22:0] trunc_ln19_fu_928_p1;
wire   [0:0] icmp_ln19_1_fu_938_p2;
wire   [0:0] icmp_ln19_fu_932_p2;
wire   [0:0] or_ln19_fu_944_p2;
wire   [0:0] grp_fu_755_p2;
wire   [0:0] and_ln19_fu_950_p2;
wire   [10:0] tmp_74_fu_1002_p3;
wire   [6:0] tmp_75_fu_1014_p3;
wire   [11:0] zext_ln14_10_fu_1010_p1;
wire   [11:0] zext_ln14_11_fu_1022_p1;
wire   [11:0] sub_ln14_fu_1026_p2;
wire   [11:0] add_ln14_4_fu_1032_p2;
wire   [31:0] bitcast_ln19_1_fu_1042_p1;
wire   [7:0] tmp_58_fu_1046_p4;
wire   [22:0] trunc_ln19_1_fu_1056_p1;
wire   [0:0] icmp_ln19_3_fu_1066_p2;
wire   [0:0] icmp_ln19_2_fu_1060_p2;
wire   [0:0] or_ln19_1_fu_1072_p2;
wire   [0:0] and_ln19_1_fu_1078_p2;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_conv_2_fu_530_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_666_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_686_ap_start_reg = 1'b0;
#0 grp_conv_1_fu_698_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_709_ap_start_reg = 1'b0;
#0 grp_flat_fu_727_ap_start_reg = 1'b0;
end

cnn_conv_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_address0),
    .ce0(conv_1_out_ce0),
    .we0(conv_1_out_we0),
    .d0(grp_conv_1_fu_698_conv_1_out_d0),
    .q0(conv_1_out_q0)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_0_address0),
    .ce0(max_pool_1_out_0_ce0),
    .we0(max_pool_1_out_0_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_0_d0),
    .q0(max_pool_1_out_0_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_0_address1),
    .ce1(max_pool_1_out_0_ce1),
    .q1(max_pool_1_out_0_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_1_address0),
    .ce0(max_pool_1_out_1_ce0),
    .we0(max_pool_1_out_1_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_1_d0),
    .q0(max_pool_1_out_1_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_1_address1),
    .ce1(max_pool_1_out_1_ce1),
    .q1(max_pool_1_out_1_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_2_address0),
    .ce0(max_pool_1_out_2_ce0),
    .we0(max_pool_1_out_2_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_2_d0),
    .q0(max_pool_1_out_2_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_2_address1),
    .ce1(max_pool_1_out_2_ce1),
    .q1(max_pool_1_out_2_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_3_address0),
    .ce0(max_pool_1_out_3_ce0),
    .we0(max_pool_1_out_3_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_3_d0),
    .q0(max_pool_1_out_3_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_3_address1),
    .ce1(max_pool_1_out_3_ce1),
    .q1(max_pool_1_out_3_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_4_address0),
    .ce0(max_pool_1_out_4_ce0),
    .we0(max_pool_1_out_4_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_4_d0),
    .q0(max_pool_1_out_4_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_4_address1),
    .ce1(max_pool_1_out_4_ce1),
    .q1(max_pool_1_out_4_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_5_address0),
    .ce0(max_pool_1_out_5_ce0),
    .we0(max_pool_1_out_5_we0),
    .d0(grp_max_pool_1_fu_709_max_pool_out_5_d0),
    .q0(max_pool_1_out_5_q0),
    .address1(grp_conv_2_fu_530_max_pool_1_out_5_address1),
    .ce1(max_pool_1_out_5_ce1),
    .q1(max_pool_1_out_5_q1)
);

cnn_conv_2_out_0 #(
    .DataWidth( 32 ),
    .AddressRange( 528 ),
    .AddressWidth( 10 ))
conv_2_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_0_address0),
    .ce0(conv_2_out_0_ce0),
    .we0(conv_2_out_0_we0),
    .d0(grp_conv_2_fu_530_conv_out_0_d0),
    .q0(conv_2_out_0_q0),
    .address1(grp_max_pool_2_fu_666_conv_2_out_0_address1),
    .ce1(conv_2_out_0_ce1),
    .q1(conv_2_out_0_q1)
);

cnn_conv_2_out_1 #(
    .DataWidth( 32 ),
    .AddressRange( 352 ),
    .AddressWidth( 9 ))
conv_2_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_1_address0),
    .ce0(conv_2_out_1_ce0),
    .we0(conv_2_out_1_we0),
    .d0(grp_conv_2_fu_530_conv_out_1_d0),
    .q0(conv_2_out_1_q0),
    .address1(grp_max_pool_2_fu_666_conv_2_out_1_address1),
    .ce1(conv_2_out_1_ce1),
    .q1(conv_2_out_1_q1)
);

cnn_conv_2_out_1 #(
    .DataWidth( 32 ),
    .AddressRange( 352 ),
    .AddressWidth( 9 ))
conv_2_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_2_address0),
    .ce0(conv_2_out_2_ce0),
    .we0(conv_2_out_2_we0),
    .d0(grp_conv_2_fu_530_conv_out_2_d0),
    .q0(conv_2_out_2_q0),
    .address1(grp_max_pool_2_fu_666_conv_2_out_2_address1),
    .ce1(conv_2_out_2_ce1),
    .q1(conv_2_out_2_q1)
);

cnn_conv_2_out_1 #(
    .DataWidth( 32 ),
    .AddressRange( 352 ),
    .AddressWidth( 9 ))
conv_2_out_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_3_address0),
    .ce0(conv_2_out_3_ce0),
    .we0(conv_2_out_3_we0),
    .d0(grp_conv_2_fu_530_conv_out_3_d0),
    .q0(conv_2_out_3_q0),
    .address1(grp_max_pool_2_fu_666_conv_2_out_3_address1),
    .ce1(conv_2_out_3_ce1),
    .q1(conv_2_out_3_q1)
);

cnn_conv_2_out_1 #(
    .DataWidth( 32 ),
    .AddressRange( 352 ),
    .AddressWidth( 9 ))
conv_2_out_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_4_address0),
    .ce0(conv_2_out_4_ce0),
    .we0(conv_2_out_4_we0),
    .d0(grp_conv_2_fu_530_conv_out_4_d0),
    .q0(conv_2_out_4_q0),
    .address1(grp_max_pool_2_fu_666_conv_2_out_4_address1),
    .ce1(conv_2_out_4_ce1),
    .q1(conv_2_out_4_q1)
);

cnn_max_pool_2_oubjl #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
max_pool_2_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_0_address0),
    .ce0(max_pool_2_out_0_ce0),
    .we0(max_pool_2_out_0_we0),
    .d0(grp_max_pool_2_fu_666_max_pool_out_0_d0),
    .q0(max_pool_2_out_0_q0),
    .address1(grp_max_pool_2_fu_666_max_pool_out_0_address1),
    .ce1(max_pool_2_out_0_ce1),
    .we1(max_pool_2_out_0_we1),
    .d1(grp_max_pool_2_fu_666_max_pool_out_0_d1)
);

cnn_max_pool_2_oubjl #(
    .DataWidth( 32 ),
    .AddressRange( 160 ),
    .AddressWidth( 8 ))
max_pool_2_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_1_address0),
    .ce0(max_pool_2_out_1_ce0),
    .we0(max_pool_2_out_1_we0),
    .d0(grp_max_pool_2_fu_666_max_pool_out_1_d0),
    .q0(max_pool_2_out_1_q0),
    .address1(grp_max_pool_2_fu_666_max_pool_out_1_address1),
    .ce1(max_pool_2_out_1_ce1),
    .we1(max_pool_2_out_1_we1),
    .d1(grp_max_pool_2_fu_666_max_pool_out_1_d1)
);

cnn_max_pool_2_oubll #(
    .DataWidth( 32 ),
    .AddressRange( 80 ),
    .AddressWidth( 7 ))
max_pool_2_out_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_2_0_address0),
    .ce0(max_pool_2_out_2_0_ce0),
    .we0(max_pool_2_out_2_0_we0),
    .d0(grp_max_pool_2_fu_666_max_pool_out_2_0_d0),
    .q0(max_pool_2_out_2_0_q0)
);

cnn_flat_array #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_727_flat_array_d0),
    .q0(flat_array_q0)
);

cnn_dense_1_weights #(
    .DataWidth( 32 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_weights_address0),
    .ce0(dense_1_weights_ce0),
    .q0(dense_1_weights_q0)
);

cnn_dense_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_bias_address0),
    .ce0(dense_1_bias_ce0),
    .q0(dense_1_bias_q0)
);

cnn_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_address0),
    .ce0(dense_1_out_ce0),
    .we0(dense_1_out_we0),
    .d0(dense_1_out_d0),
    .q0(dense_1_out_q0)
);

cnn_dense_2_weights #(
    .DataWidth( 32 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_address0),
    .ce0(dense_2_weights_ce0),
    .q0(dense_2_weights_q0)
);

cnn_dense_2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_address0),
    .ce0(dense_2_bias_ce0),
    .q0(dense_2_bias_q0)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_1_input_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_address0),
    .ce0(conv_1_input_ce0),
    .we0(conv_1_input_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_q0)
);

conv_2 grp_conv_2_fu_530(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_530_ap_start),
    .ap_done(grp_conv_2_fu_530_ap_done),
    .ap_idle(grp_conv_2_fu_530_ap_idle),
    .ap_ready(grp_conv_2_fu_530_ap_ready),
    .conv_out_0_address0(grp_conv_2_fu_530_conv_out_0_address0),
    .conv_out_0_ce0(grp_conv_2_fu_530_conv_out_0_ce0),
    .conv_out_0_we0(grp_conv_2_fu_530_conv_out_0_we0),
    .conv_out_0_d0(grp_conv_2_fu_530_conv_out_0_d0),
    .conv_out_1_address0(grp_conv_2_fu_530_conv_out_1_address0),
    .conv_out_1_ce0(grp_conv_2_fu_530_conv_out_1_ce0),
    .conv_out_1_we0(grp_conv_2_fu_530_conv_out_1_we0),
    .conv_out_1_d0(grp_conv_2_fu_530_conv_out_1_d0),
    .conv_out_2_address0(grp_conv_2_fu_530_conv_out_2_address0),
    .conv_out_2_ce0(grp_conv_2_fu_530_conv_out_2_ce0),
    .conv_out_2_we0(grp_conv_2_fu_530_conv_out_2_we0),
    .conv_out_2_d0(grp_conv_2_fu_530_conv_out_2_d0),
    .conv_out_3_address0(grp_conv_2_fu_530_conv_out_3_address0),
    .conv_out_3_ce0(grp_conv_2_fu_530_conv_out_3_ce0),
    .conv_out_3_we0(grp_conv_2_fu_530_conv_out_3_we0),
    .conv_out_3_d0(grp_conv_2_fu_530_conv_out_3_d0),
    .conv_out_4_address0(grp_conv_2_fu_530_conv_out_4_address0),
    .conv_out_4_ce0(grp_conv_2_fu_530_conv_out_4_ce0),
    .conv_out_4_we0(grp_conv_2_fu_530_conv_out_4_we0),
    .conv_out_4_d0(grp_conv_2_fu_530_conv_out_4_d0),
    .max_pool_1_out_0_address0(grp_conv_2_fu_530_max_pool_1_out_0_address0),
    .max_pool_1_out_0_ce0(grp_conv_2_fu_530_max_pool_1_out_0_ce0),
    .max_pool_1_out_0_q0(max_pool_1_out_0_q0),
    .max_pool_1_out_0_address1(grp_conv_2_fu_530_max_pool_1_out_0_address1),
    .max_pool_1_out_0_ce1(grp_conv_2_fu_530_max_pool_1_out_0_ce1),
    .max_pool_1_out_0_q1(max_pool_1_out_0_q1),
    .max_pool_1_out_1_address0(grp_conv_2_fu_530_max_pool_1_out_1_address0),
    .max_pool_1_out_1_ce0(grp_conv_2_fu_530_max_pool_1_out_1_ce0),
    .max_pool_1_out_1_q0(max_pool_1_out_1_q0),
    .max_pool_1_out_1_address1(grp_conv_2_fu_530_max_pool_1_out_1_address1),
    .max_pool_1_out_1_ce1(grp_conv_2_fu_530_max_pool_1_out_1_ce1),
    .max_pool_1_out_1_q1(max_pool_1_out_1_q1),
    .max_pool_1_out_2_address0(grp_conv_2_fu_530_max_pool_1_out_2_address0),
    .max_pool_1_out_2_ce0(grp_conv_2_fu_530_max_pool_1_out_2_ce0),
    .max_pool_1_out_2_q0(max_pool_1_out_2_q0),
    .max_pool_1_out_2_address1(grp_conv_2_fu_530_max_pool_1_out_2_address1),
    .max_pool_1_out_2_ce1(grp_conv_2_fu_530_max_pool_1_out_2_ce1),
    .max_pool_1_out_2_q1(max_pool_1_out_2_q1),
    .max_pool_1_out_3_address0(grp_conv_2_fu_530_max_pool_1_out_3_address0),
    .max_pool_1_out_3_ce0(grp_conv_2_fu_530_max_pool_1_out_3_ce0),
    .max_pool_1_out_3_q0(max_pool_1_out_3_q0),
    .max_pool_1_out_3_address1(grp_conv_2_fu_530_max_pool_1_out_3_address1),
    .max_pool_1_out_3_ce1(grp_conv_2_fu_530_max_pool_1_out_3_ce1),
    .max_pool_1_out_3_q1(max_pool_1_out_3_q1),
    .max_pool_1_out_4_address0(grp_conv_2_fu_530_max_pool_1_out_4_address0),
    .max_pool_1_out_4_ce0(grp_conv_2_fu_530_max_pool_1_out_4_ce0),
    .max_pool_1_out_4_q0(max_pool_1_out_4_q0),
    .max_pool_1_out_4_address1(grp_conv_2_fu_530_max_pool_1_out_4_address1),
    .max_pool_1_out_4_ce1(grp_conv_2_fu_530_max_pool_1_out_4_ce1),
    .max_pool_1_out_4_q1(max_pool_1_out_4_q1),
    .max_pool_1_out_5_address0(grp_conv_2_fu_530_max_pool_1_out_5_address0),
    .max_pool_1_out_5_ce0(grp_conv_2_fu_530_max_pool_1_out_5_ce0),
    .max_pool_1_out_5_q0(max_pool_1_out_5_q0),
    .max_pool_1_out_5_address1(grp_conv_2_fu_530_max_pool_1_out_5_address1),
    .max_pool_1_out_5_ce1(grp_conv_2_fu_530_max_pool_1_out_5_ce1),
    .max_pool_1_out_5_q1(max_pool_1_out_5_q1)
);

max_pool_2 grp_max_pool_2_fu_666(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_666_ap_start),
    .ap_done(grp_max_pool_2_fu_666_ap_done),
    .ap_idle(grp_max_pool_2_fu_666_ap_idle),
    .ap_ready(grp_max_pool_2_fu_666_ap_ready),
    .max_pool_out_0_address0(grp_max_pool_2_fu_666_max_pool_out_0_address0),
    .max_pool_out_0_ce0(grp_max_pool_2_fu_666_max_pool_out_0_ce0),
    .max_pool_out_0_we0(grp_max_pool_2_fu_666_max_pool_out_0_we0),
    .max_pool_out_0_d0(grp_max_pool_2_fu_666_max_pool_out_0_d0),
    .max_pool_out_0_address1(grp_max_pool_2_fu_666_max_pool_out_0_address1),
    .max_pool_out_0_ce1(grp_max_pool_2_fu_666_max_pool_out_0_ce1),
    .max_pool_out_0_we1(grp_max_pool_2_fu_666_max_pool_out_0_we1),
    .max_pool_out_0_d1(grp_max_pool_2_fu_666_max_pool_out_0_d1),
    .max_pool_out_1_address0(grp_max_pool_2_fu_666_max_pool_out_1_address0),
    .max_pool_out_1_ce0(grp_max_pool_2_fu_666_max_pool_out_1_ce0),
    .max_pool_out_1_we0(grp_max_pool_2_fu_666_max_pool_out_1_we0),
    .max_pool_out_1_d0(grp_max_pool_2_fu_666_max_pool_out_1_d0),
    .max_pool_out_1_address1(grp_max_pool_2_fu_666_max_pool_out_1_address1),
    .max_pool_out_1_ce1(grp_max_pool_2_fu_666_max_pool_out_1_ce1),
    .max_pool_out_1_we1(grp_max_pool_2_fu_666_max_pool_out_1_we1),
    .max_pool_out_1_d1(grp_max_pool_2_fu_666_max_pool_out_1_d1),
    .max_pool_out_2_0_address0(grp_max_pool_2_fu_666_max_pool_out_2_0_address0),
    .max_pool_out_2_0_ce0(grp_max_pool_2_fu_666_max_pool_out_2_0_ce0),
    .max_pool_out_2_0_we0(grp_max_pool_2_fu_666_max_pool_out_2_0_we0),
    .max_pool_out_2_0_d0(grp_max_pool_2_fu_666_max_pool_out_2_0_d0),
    .conv_2_out_0_address0(grp_max_pool_2_fu_666_conv_2_out_0_address0),
    .conv_2_out_0_ce0(grp_max_pool_2_fu_666_conv_2_out_0_ce0),
    .conv_2_out_0_q0(conv_2_out_0_q0),
    .conv_2_out_0_address1(grp_max_pool_2_fu_666_conv_2_out_0_address1),
    .conv_2_out_0_ce1(grp_max_pool_2_fu_666_conv_2_out_0_ce1),
    .conv_2_out_0_q1(conv_2_out_0_q1),
    .conv_2_out_1_address0(grp_max_pool_2_fu_666_conv_2_out_1_address0),
    .conv_2_out_1_ce0(grp_max_pool_2_fu_666_conv_2_out_1_ce0),
    .conv_2_out_1_q0(conv_2_out_1_q0),
    .conv_2_out_1_address1(grp_max_pool_2_fu_666_conv_2_out_1_address1),
    .conv_2_out_1_ce1(grp_max_pool_2_fu_666_conv_2_out_1_ce1),
    .conv_2_out_1_q1(conv_2_out_1_q1),
    .conv_2_out_2_address0(grp_max_pool_2_fu_666_conv_2_out_2_address0),
    .conv_2_out_2_ce0(grp_max_pool_2_fu_666_conv_2_out_2_ce0),
    .conv_2_out_2_q0(conv_2_out_2_q0),
    .conv_2_out_2_address1(grp_max_pool_2_fu_666_conv_2_out_2_address1),
    .conv_2_out_2_ce1(grp_max_pool_2_fu_666_conv_2_out_2_ce1),
    .conv_2_out_2_q1(conv_2_out_2_q1),
    .conv_2_out_3_address0(grp_max_pool_2_fu_666_conv_2_out_3_address0),
    .conv_2_out_3_ce0(grp_max_pool_2_fu_666_conv_2_out_3_ce0),
    .conv_2_out_3_q0(conv_2_out_3_q0),
    .conv_2_out_3_address1(grp_max_pool_2_fu_666_conv_2_out_3_address1),
    .conv_2_out_3_ce1(grp_max_pool_2_fu_666_conv_2_out_3_ce1),
    .conv_2_out_3_q1(conv_2_out_3_q1),
    .conv_2_out_4_address0(grp_max_pool_2_fu_666_conv_2_out_4_address0),
    .conv_2_out_4_ce0(grp_max_pool_2_fu_666_conv_2_out_4_ce0),
    .conv_2_out_4_q0(conv_2_out_4_q0),
    .conv_2_out_4_address1(grp_max_pool_2_fu_666_conv_2_out_4_address1),
    .conv_2_out_4_ce1(grp_max_pool_2_fu_666_conv_2_out_4_ce1),
    .conv_2_out_4_q1(conv_2_out_4_q1)
);

dense_out grp_dense_out_fu_686(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_686_ap_start),
    .ap_done(grp_dense_out_fu_686_ap_done),
    .ap_idle(grp_dense_out_fu_686_ap_idle),
    .ap_ready(grp_dense_out_fu_686_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_686_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_686_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_686_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_686_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_686_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_686_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

conv_1 grp_conv_1_fu_698(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_698_ap_start),
    .ap_done(grp_conv_1_fu_698_ap_done),
    .ap_idle(grp_conv_1_fu_698_ap_idle),
    .ap_ready(grp_conv_1_fu_698_ap_ready),
    .input_r_address0(grp_conv_1_fu_698_input_r_address0),
    .input_r_ce0(grp_conv_1_fu_698_input_r_ce0),
    .input_r_q0(conv_1_input_q0),
    .conv_1_out_address0(grp_conv_1_fu_698_conv_1_out_address0),
    .conv_1_out_ce0(grp_conv_1_fu_698_conv_1_out_ce0),
    .conv_1_out_we0(grp_conv_1_fu_698_conv_1_out_we0),
    .conv_1_out_d0(grp_conv_1_fu_698_conv_1_out_d0)
);

max_pool_1 grp_max_pool_1_fu_709(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_709_ap_start),
    .ap_done(grp_max_pool_1_fu_709_ap_done),
    .ap_idle(grp_max_pool_1_fu_709_ap_idle),
    .ap_ready(grp_max_pool_1_fu_709_ap_ready),
    .conv_out_address0(grp_max_pool_1_fu_709_conv_out_address0),
    .conv_out_ce0(grp_max_pool_1_fu_709_conv_out_ce0),
    .conv_out_q0(conv_1_out_q0),
    .max_pool_out_0_address0(grp_max_pool_1_fu_709_max_pool_out_0_address0),
    .max_pool_out_0_ce0(grp_max_pool_1_fu_709_max_pool_out_0_ce0),
    .max_pool_out_0_we0(grp_max_pool_1_fu_709_max_pool_out_0_we0),
    .max_pool_out_0_d0(grp_max_pool_1_fu_709_max_pool_out_0_d0),
    .max_pool_out_1_address0(grp_max_pool_1_fu_709_max_pool_out_1_address0),
    .max_pool_out_1_ce0(grp_max_pool_1_fu_709_max_pool_out_1_ce0),
    .max_pool_out_1_we0(grp_max_pool_1_fu_709_max_pool_out_1_we0),
    .max_pool_out_1_d0(grp_max_pool_1_fu_709_max_pool_out_1_d0),
    .max_pool_out_2_address0(grp_max_pool_1_fu_709_max_pool_out_2_address0),
    .max_pool_out_2_ce0(grp_max_pool_1_fu_709_max_pool_out_2_ce0),
    .max_pool_out_2_we0(grp_max_pool_1_fu_709_max_pool_out_2_we0),
    .max_pool_out_2_d0(grp_max_pool_1_fu_709_max_pool_out_2_d0),
    .max_pool_out_3_address0(grp_max_pool_1_fu_709_max_pool_out_3_address0),
    .max_pool_out_3_ce0(grp_max_pool_1_fu_709_max_pool_out_3_ce0),
    .max_pool_out_3_we0(grp_max_pool_1_fu_709_max_pool_out_3_we0),
    .max_pool_out_3_d0(grp_max_pool_1_fu_709_max_pool_out_3_d0),
    .max_pool_out_4_address0(grp_max_pool_1_fu_709_max_pool_out_4_address0),
    .max_pool_out_4_ce0(grp_max_pool_1_fu_709_max_pool_out_4_ce0),
    .max_pool_out_4_we0(grp_max_pool_1_fu_709_max_pool_out_4_we0),
    .max_pool_out_4_d0(grp_max_pool_1_fu_709_max_pool_out_4_d0),
    .max_pool_out_5_address0(grp_max_pool_1_fu_709_max_pool_out_5_address0),
    .max_pool_out_5_ce0(grp_max_pool_1_fu_709_max_pool_out_5_ce0),
    .max_pool_out_5_we0(grp_max_pool_1_fu_709_max_pool_out_5_we0),
    .max_pool_out_5_d0(grp_max_pool_1_fu_709_max_pool_out_5_d0)
);

flat grp_flat_fu_727(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_727_ap_start),
    .ap_done(grp_flat_fu_727_ap_done),
    .ap_idle(grp_flat_fu_727_ap_idle),
    .ap_ready(grp_flat_fu_727_ap_ready),
    .flat_array_address0(grp_flat_fu_727_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_727_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_727_flat_array_we0),
    .flat_array_d0(grp_flat_fu_727_flat_array_d0),
    .max_pool_2_out_0_address0(grp_flat_fu_727_max_pool_2_out_0_address0),
    .max_pool_2_out_0_ce0(grp_flat_fu_727_max_pool_2_out_0_ce0),
    .max_pool_2_out_0_q0(max_pool_2_out_0_q0),
    .max_pool_2_out_1_address0(grp_flat_fu_727_max_pool_2_out_1_address0),
    .max_pool_2_out_1_ce0(grp_flat_fu_727_max_pool_2_out_1_ce0),
    .max_pool_2_out_1_q0(max_pool_2_out_1_q0),
    .max_pool_2_out_2_0_address0(grp_flat_fu_727_max_pool_2_out_2_0_address0),
    .max_pool_2_out_2_0_ce0(grp_flat_fu_727_max_pool_2_out_2_0_ce0),
    .max_pool_2_out_2_0_q0(max_pool_2_out_2_0_q0)
);

cnn_fadd_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32ncud_U145(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .ce(1'b1),
    .dout(grp_fu_739_p2)
);

cnn_fmul_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ndEe_U146(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_747_p0),
    .din1(grp_fu_747_p1),
    .ce(1'b1),
    .dout(grp_fu_747_p2)
);

cnn_fcmp_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32neOg_U147(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_739_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_755_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_698_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_1_fu_698_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_698_ap_ready == 1'b1)) begin
            grp_conv_1_fu_698_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_530_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_conv_2_fu_530_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_530_ap_ready == 1'b1)) begin
            grp_conv_2_fu_530_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_686_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln9_1_fu_965_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
            grp_dense_out_fu_686_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_686_ap_ready == 1'b1)) begin
            grp_dense_out_fu_686_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_727_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_flat_fu_727_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_727_ap_ready == 1'b1)) begin
            grp_flat_fu_727_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_709_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_max_pool_1_fu_709_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_709_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_709_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_666_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_max_pool_2_fu_666_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_666_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_666_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_861_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_0_i9_reg_496 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        i_0_i9_reg_496 <= i_2_reg_1199;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_0_i_reg_451 <= i_1_reg_1137;
    end else if (((grp_flat_fu_727_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        i_0_i_reg_451 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_825_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_419 <= i_reg_1096;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_419 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_825_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_407 <= ix_in_reg_1101;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_407 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ix_in_1_reg_430 <= add_ln28_reg_1129;
    end else if (((icmp_ln23_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_430 <= ix_in_0_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        j_0_i13_reg_519 <= j_2_reg_1218;
    end else if (((icmp_ln9_1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        j_0_i13_reg_519 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_0_i_reg_474 <= j_1_reg_1156;
    end else if (((icmp_ln9_fu_861_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        j_0_i_reg_474 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_440 <= j_reg_1114;
    end else if (((icmp_ln23_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_440 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        phi_mul_reg_485 <= add_ln14_5_reg_1161;
    end else if (((icmp_ln9_fu_861_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_mul_reg_485 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        sum_0_i12_reg_507 <= grp_fu_739_p2;
    end else if (((icmp_ln9_1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        sum_0_i12_reg_507 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        sum_0_i_reg_462 <= grp_fu_739_p2;
    end else if (((icmp_ln9_fu_861_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        sum_0_i_reg_462 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_881_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln14_5_reg_1161 <= add_ln14_5_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_825_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln27_reg_1124 <= add_ln27_fu_846_p2;
        add_ln28_reg_1129 <= add_ln28_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_1_reg_1137 <= i_1_fu_867_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_2_reg_1199 <= i_2_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1096 <= i_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_reg_1101 <= ix_in_fu_789_p2;
        sub_ln27_reg_1106[10 : 2] <= sub_ln27_fu_819_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_1_reg_1156 <= j_1_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        j_2_reg_1218 <= j_2_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1114 <= j_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_761 <= grp_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state25))) begin
        reg_772 <= grp_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        zext_ln13_1_reg_1210[4 : 0] <= zext_ln13_1_fu_981_p1[4 : 0];
        zext_ln14_4_reg_1204[4 : 0] <= zext_ln14_4_fu_977_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_861_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        zext_ln13_reg_1148[5 : 0] <= zext_ln13_fu_877_p1[5 : 0];
        zext_ln14_reg_1142[5 : 0] <= zext_ln14_fu_873_p1[5 : 0];
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_dense_out_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_address0 = sext_ln27_fu_857_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_address0 = grp_conv_1_fu_698_input_r_address0;
    end else begin
        conv_1_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_input_ce0 = grp_conv_1_fu_698_input_r_ce0;
    end else begin
        conv_1_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_we0 = 1'b1;
    end else begin
        conv_1_input_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_address0 = grp_max_pool_1_fu_709_conv_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_address0 = grp_conv_1_fu_698_conv_1_out_address0;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        conv_1_out_ce0 = grp_max_pool_1_fu_709_conv_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_ce0 = grp_conv_1_fu_698_conv_1_out_ce0;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_we0 = grp_conv_1_fu_698_conv_1_out_we0;
    end else begin
        conv_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_0_address0 = grp_max_pool_2_fu_666_conv_2_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_0_address0 = grp_conv_2_fu_530_conv_out_0_address0;
    end else begin
        conv_2_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_0_ce0 = grp_max_pool_2_fu_666_conv_2_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_0_ce0 = grp_conv_2_fu_530_conv_out_0_ce0;
    end else begin
        conv_2_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_0_ce1 = grp_max_pool_2_fu_666_conv_2_out_0_ce1;
    end else begin
        conv_2_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_0_we0 = grp_conv_2_fu_530_conv_out_0_we0;
    end else begin
        conv_2_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_1_address0 = grp_max_pool_2_fu_666_conv_2_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_1_address0 = grp_conv_2_fu_530_conv_out_1_address0;
    end else begin
        conv_2_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_1_ce0 = grp_max_pool_2_fu_666_conv_2_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_1_ce0 = grp_conv_2_fu_530_conv_out_1_ce0;
    end else begin
        conv_2_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_1_ce1 = grp_max_pool_2_fu_666_conv_2_out_1_ce1;
    end else begin
        conv_2_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_1_we0 = grp_conv_2_fu_530_conv_out_1_we0;
    end else begin
        conv_2_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_2_address0 = grp_max_pool_2_fu_666_conv_2_out_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_2_address0 = grp_conv_2_fu_530_conv_out_2_address0;
    end else begin
        conv_2_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_2_ce0 = grp_max_pool_2_fu_666_conv_2_out_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_2_ce0 = grp_conv_2_fu_530_conv_out_2_ce0;
    end else begin
        conv_2_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_2_ce1 = grp_max_pool_2_fu_666_conv_2_out_2_ce1;
    end else begin
        conv_2_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_2_we0 = grp_conv_2_fu_530_conv_out_2_we0;
    end else begin
        conv_2_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_3_address0 = grp_max_pool_2_fu_666_conv_2_out_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_3_address0 = grp_conv_2_fu_530_conv_out_3_address0;
    end else begin
        conv_2_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_3_ce0 = grp_max_pool_2_fu_666_conv_2_out_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_3_ce0 = grp_conv_2_fu_530_conv_out_3_ce0;
    end else begin
        conv_2_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_3_ce1 = grp_max_pool_2_fu_666_conv_2_out_3_ce1;
    end else begin
        conv_2_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_3_we0 = grp_conv_2_fu_530_conv_out_3_we0;
    end else begin
        conv_2_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_4_address0 = grp_max_pool_2_fu_666_conv_2_out_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_4_address0 = grp_conv_2_fu_530_conv_out_4_address0;
    end else begin
        conv_2_out_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_4_ce0 = grp_max_pool_2_fu_666_conv_2_out_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_4_ce0 = grp_conv_2_fu_530_conv_out_4_ce0;
    end else begin
        conv_2_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_2_out_4_ce1 = grp_max_pool_2_fu_666_conv_2_out_4_ce1;
    end else begin
        conv_2_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_2_out_4_we0 = grp_conv_2_fu_530_conv_out_4_we0;
    end else begin
        conv_2_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_bias_ce0 = 1'b1;
    end else begin
        dense_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_1_out_address0 = zext_ln14_6_fu_997_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_1_out_address0 = zext_ln14_reg_1142;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state28))) begin
        dense_1_out_ce0 = 1'b1;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        dense_1_out_we0 = 1'b1;
    end else begin
        dense_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        dense_1_weights_ce0 = 1'b1;
    end else begin
        dense_1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_2_bias_ce0 = 1'b1;
    end else begin
        dense_2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_address0 = zext_ln14_4_reg_1204;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dense_2_out_address0 = grp_dense_out_fu_686_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        dense_2_out_ce0 = grp_dense_out_fu_686_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dense_2_out_we0 = 1'b1;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        dense_2_weights_ce0 = 1'b1;
    end else begin
        dense_2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_address0 = zext_ln14_5_fu_893_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_address0 = grp_flat_fu_727_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        flat_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_ce0 = grp_flat_fu_727_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        flat_array_we0 = grp_flat_fu_727_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_739_p0 = sum_0_i12_reg_507;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_739_p0 = sum_0_i_reg_462;
    end else begin
        grp_fu_739_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        grp_fu_739_p1 = dense_2_bias_q0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_739_p1 = dense_1_bias_q0;
    end else if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state18))) begin
        grp_fu_739_p1 = reg_761;
    end else begin
        grp_fu_739_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_747_p0 = dense_1_out_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_747_p0 = flat_array_q0;
    end else begin
        grp_fu_747_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_747_p1 = dense_2_weights_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_747_p1 = dense_1_weights_q0;
    end else begin
        grp_fu_747_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_address0 = grp_max_pool_1_fu_709_max_pool_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_address0 = grp_conv_2_fu_530_max_pool_1_out_0_address0;
    end else begin
        max_pool_1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_ce0 = grp_max_pool_1_fu_709_max_pool_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_ce0 = grp_conv_2_fu_530_max_pool_1_out_0_ce0;
    end else begin
        max_pool_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_0_ce1 = grp_conv_2_fu_530_max_pool_1_out_0_ce1;
    end else begin
        max_pool_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_0_we0 = grp_max_pool_1_fu_709_max_pool_out_0_we0;
    end else begin
        max_pool_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_address0 = grp_max_pool_1_fu_709_max_pool_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_address0 = grp_conv_2_fu_530_max_pool_1_out_1_address0;
    end else begin
        max_pool_1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_ce0 = grp_max_pool_1_fu_709_max_pool_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_ce0 = grp_conv_2_fu_530_max_pool_1_out_1_ce0;
    end else begin
        max_pool_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_1_ce1 = grp_conv_2_fu_530_max_pool_1_out_1_ce1;
    end else begin
        max_pool_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_1_we0 = grp_max_pool_1_fu_709_max_pool_out_1_we0;
    end else begin
        max_pool_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_address0 = grp_max_pool_1_fu_709_max_pool_out_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_address0 = grp_conv_2_fu_530_max_pool_1_out_2_address0;
    end else begin
        max_pool_1_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_ce0 = grp_max_pool_1_fu_709_max_pool_out_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_ce0 = grp_conv_2_fu_530_max_pool_1_out_2_ce0;
    end else begin
        max_pool_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_2_ce1 = grp_conv_2_fu_530_max_pool_1_out_2_ce1;
    end else begin
        max_pool_1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_2_we0 = grp_max_pool_1_fu_709_max_pool_out_2_we0;
    end else begin
        max_pool_1_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_address0 = grp_max_pool_1_fu_709_max_pool_out_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_address0 = grp_conv_2_fu_530_max_pool_1_out_3_address0;
    end else begin
        max_pool_1_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_ce0 = grp_max_pool_1_fu_709_max_pool_out_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_ce0 = grp_conv_2_fu_530_max_pool_1_out_3_ce0;
    end else begin
        max_pool_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_3_ce1 = grp_conv_2_fu_530_max_pool_1_out_3_ce1;
    end else begin
        max_pool_1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_3_we0 = grp_max_pool_1_fu_709_max_pool_out_3_we0;
    end else begin
        max_pool_1_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_address0 = grp_max_pool_1_fu_709_max_pool_out_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_address0 = grp_conv_2_fu_530_max_pool_1_out_4_address0;
    end else begin
        max_pool_1_out_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_ce0 = grp_max_pool_1_fu_709_max_pool_out_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_ce0 = grp_conv_2_fu_530_max_pool_1_out_4_ce0;
    end else begin
        max_pool_1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_4_ce1 = grp_conv_2_fu_530_max_pool_1_out_4_ce1;
    end else begin
        max_pool_1_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_4_we0 = grp_max_pool_1_fu_709_max_pool_out_4_we0;
    end else begin
        max_pool_1_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_address0 = grp_max_pool_1_fu_709_max_pool_out_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_address0 = grp_conv_2_fu_530_max_pool_1_out_5_address0;
    end else begin
        max_pool_1_out_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_ce0 = grp_max_pool_1_fu_709_max_pool_out_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_ce0 = grp_conv_2_fu_530_max_pool_1_out_5_ce0;
    end else begin
        max_pool_1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_pool_1_out_5_ce1 = grp_conv_2_fu_530_max_pool_1_out_5_ce1;
    end else begin
        max_pool_1_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_5_we0 = grp_max_pool_1_fu_709_max_pool_out_5_we0;
    end else begin
        max_pool_1_out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_0_address0 = grp_flat_fu_727_max_pool_2_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_0_address0 = grp_max_pool_2_fu_666_max_pool_out_0_address0;
    end else begin
        max_pool_2_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_0_ce0 = grp_flat_fu_727_max_pool_2_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_0_ce0 = grp_max_pool_2_fu_666_max_pool_out_0_ce0;
    end else begin
        max_pool_2_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_0_ce1 = grp_max_pool_2_fu_666_max_pool_out_0_ce1;
    end else begin
        max_pool_2_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_0_we0 = grp_max_pool_2_fu_666_max_pool_out_0_we0;
    end else begin
        max_pool_2_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_0_we1 = grp_max_pool_2_fu_666_max_pool_out_0_we1;
    end else begin
        max_pool_2_out_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_1_address0 = grp_flat_fu_727_max_pool_2_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_1_address0 = grp_max_pool_2_fu_666_max_pool_out_1_address0;
    end else begin
        max_pool_2_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_1_ce0 = grp_flat_fu_727_max_pool_2_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_1_ce0 = grp_max_pool_2_fu_666_max_pool_out_1_ce0;
    end else begin
        max_pool_2_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_1_ce1 = grp_max_pool_2_fu_666_max_pool_out_1_ce1;
    end else begin
        max_pool_2_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_1_we0 = grp_max_pool_2_fu_666_max_pool_out_1_we0;
    end else begin
        max_pool_2_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_1_we1 = grp_max_pool_2_fu_666_max_pool_out_1_we1;
    end else begin
        max_pool_2_out_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_2_0_address0 = grp_flat_fu_727_max_pool_2_out_2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_2_0_address0 = grp_max_pool_2_fu_666_max_pool_out_2_0_address0;
    end else begin
        max_pool_2_out_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_2_out_2_0_ce0 = grp_flat_fu_727_max_pool_2_out_2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_2_0_ce0 = grp_max_pool_2_fu_666_max_pool_out_2_0_ce0;
    end else begin
        max_pool_2_out_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_pool_2_out_2_0_we0 = grp_max_pool_2_fu_666_max_pool_out_2_0_we0;
    end else begin
        max_pool_2_out_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_825_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_conv_1_fu_698_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_max_pool_1_fu_709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_conv_2_fu_530_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_max_pool_2_fu_666_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_flat_fu_727_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln9_fu_861_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln13_fu_881_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln9_1_fu_965_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln13_1_fu_985_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state40 : begin
            if (((grp_dense_out_fu_686_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_4_fu_1032_p2 = (sub_ln14_fu_1026_p2 + zext_ln13_1_reg_1210);

assign add_ln14_5_fu_898_p2 = (phi_mul_reg_485 + 15'd50);

assign add_ln14_fu_904_p2 = (zext_ln13_reg_1148 + phi_mul_reg_485);

assign add_ln27_fu_846_p2 = (sub_ln27_reg_1106 + zext_ln27_3_fu_842_p1);

assign add_ln28_fu_851_p2 = (ix_in_1_reg_430 + 10'd1);

assign and_ln19_1_fu_1078_p2 = (or_ln19_1_fu_1072_p2 & grp_fu_755_p2);

assign and_ln19_fu_950_p2 = (or_ln19_fu_944_p2 & grp_fu_755_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln19_1_fu_1042_p1 = reg_772;

assign bitcast_ln19_fu_914_p1 = reg_772;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_837_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign dense_1_bias_address0 = zext_ln14_reg_1142;

assign dense_1_out_d0 = ((and_ln19_fu_950_p2[0:0] === 1'b1) ? 32'd0 : reg_772);

assign dense_1_weights_address0 = zext_ln14_9_fu_909_p1;

assign dense_2_bias_address0 = zext_ln14_4_reg_1204;

assign dense_2_out_d0 = ((and_ln19_1_fu_1078_p2[0:0] === 1'b1) ? 32'd0 : reg_772);

assign dense_2_weights_address0 = sext_ln14_fu_1037_p1;

assign grp_conv_1_fu_698_ap_start = grp_conv_1_fu_698_ap_start_reg;

assign grp_conv_2_fu_530_ap_start = grp_conv_2_fu_530_ap_start_reg;

assign grp_dense_out_fu_686_ap_start = grp_dense_out_fu_686_ap_start_reg;

assign grp_flat_fu_727_ap_start = grp_flat_fu_727_ap_start_reg;

assign grp_max_pool_1_fu_709_ap_start = grp_max_pool_1_fu_709_ap_start_reg;

assign grp_max_pool_2_fu_666_ap_start = grp_max_pool_2_fu_666_ap_start_reg;

assign i_1_fu_867_p2 = (i_0_i_reg_451 + 6'd1);

assign i_2_fu_971_p2 = (i_0_i9_reg_496 + 5'd1);

assign i_fu_783_p2 = (i_0_reg_419 + 5'd1);

assign icmp_ln13_1_fu_985_p2 = ((j_0_i13_reg_519 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_881_p2 = ((j_0_i_reg_474 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_938_p2 = ((trunc_ln19_fu_928_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_1060_p2 = ((tmp_58_fu_1046_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_1066_p2 = ((trunc_ln19_1_fu_1056_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_932_p2 = ((tmp_fu_918_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_777_p2 = ((i_0_reg_419 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_825_p2 = ((j_0_reg_440 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_965_p2 = ((i_0_i9_reg_496 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_861_p2 = ((i_0_i_reg_451 == 6'd50) ? 1'b1 : 1'b0);

assign ix_in_fu_789_p2 = (ix_in_0_reg_407 + 10'd28);

assign j_1_fu_887_p2 = (j_0_i_reg_474 + 9'd1);

assign j_2_fu_991_p2 = (j_0_i13_reg_519 + 6'd1);

assign j_fu_831_p2 = (j_0_reg_440 + 5'd1);

assign or_ln19_1_fu_1072_p2 = (icmp_ln19_3_fu_1066_p2 | icmp_ln19_2_fu_1060_p2);

assign or_ln19_fu_944_p2 = (icmp_ln19_fu_932_p2 | icmp_ln19_1_fu_938_p2);

assign prediction_Addr_A = grp_dense_out_fu_686_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_686_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_686_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_686_prediction_WEN_A;

assign sext_ln14_fu_1037_p1 = $signed(add_ln14_4_fu_1032_p2);

assign sext_ln27_fu_857_p1 = $signed(add_ln27_reg_1124);

assign sub_ln14_fu_1026_p2 = (zext_ln14_10_fu_1010_p1 - zext_ln14_11_fu_1022_p1);

assign sub_ln27_fu_819_p2 = (zext_ln27_fu_803_p1 - zext_ln27_2_fu_815_p1);

assign tmp_58_fu_1046_p4 = {{bitcast_ln19_1_fu_1042_p1[30:23]}};

assign tmp_72_fu_795_p3 = {{i_0_reg_419}, {5'd0}};

assign tmp_73_fu_807_p3 = {{i_0_reg_419}, {2'd0}};

assign tmp_74_fu_1002_p3 = {{j_0_i13_reg_519}, {5'd0}};

assign tmp_75_fu_1014_p3 = {{j_0_i13_reg_519}, {1'd0}};

assign tmp_fu_918_p4 = {{bitcast_ln19_fu_914_p1[30:23]}};

assign trunc_ln19_1_fu_1056_p1 = bitcast_ln19_1_fu_1042_p1[22:0];

assign trunc_ln19_fu_928_p1 = bitcast_ln19_fu_914_p1[22:0];

assign zext_ln13_1_fu_981_p1 = i_0_i9_reg_496;

assign zext_ln13_fu_877_p1 = i_0_i_reg_451;

assign zext_ln14_10_fu_1010_p1 = tmp_74_fu_1002_p3;

assign zext_ln14_11_fu_1022_p1 = tmp_75_fu_1014_p3;

assign zext_ln14_4_fu_977_p1 = i_0_i9_reg_496;

assign zext_ln14_5_fu_893_p1 = j_0_i_reg_474;

assign zext_ln14_6_fu_997_p1 = j_0_i13_reg_519;

assign zext_ln14_9_fu_909_p1 = add_ln14_fu_904_p2;

assign zext_ln14_fu_873_p1 = i_0_i_reg_451;

assign zext_ln27_1_fu_837_p1 = ix_in_1_reg_430;

assign zext_ln27_2_fu_815_p1 = tmp_73_fu_807_p3;

assign zext_ln27_3_fu_842_p1 = j_0_reg_440;

assign zext_ln27_fu_803_p1 = tmp_72_fu_795_p3;

always @ (posedge ap_clk) begin
    sub_ln27_reg_1106[1:0] <= 2'b00;
    zext_ln14_reg_1142[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln13_reg_1148[14:6] <= 9'b000000000;
    zext_ln14_4_reg_1204[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln13_1_reg_1210[11:5] <= 7'b0000000;
end

endmodule //cnn
