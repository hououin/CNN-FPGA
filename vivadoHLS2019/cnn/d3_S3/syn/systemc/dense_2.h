// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_2_HH_
#define _dense_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "cnn_fcmp_32ns_32neOg.h"
#include "dense_2_dense_2_wibs.h"
#include "dense_2_dense_2_bjbC.h"

namespace ap_rtl {

struct dense_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > dense_2_out_address0;
    sc_out< sc_logic > dense_2_out_ce0;
    sc_out< sc_logic > dense_2_out_we0;
    sc_out< sc_lv<32> > dense_2_out_d0;
    sc_out< sc_lv<6> > dense_1_out_address0;
    sc_out< sc_logic > dense_1_out_ce0;
    sc_in< sc_lv<32> > dense_1_out_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    dense_2(sc_module_name name);
    SC_HAS_PROCESS(dense_2);

    ~dense_2();

    sc_trace_file* mVcdFile;

    dense_2_dense_2_wibs* dense_2_weights_U;
    dense_2_dense_2_bjbC* dense_2_bias_U;
    cnn_fadd_32ns_32ncud<1,4,32,32,32>* cnn_fadd_32ns_32ncud_U33;
    cnn_fmul_32ns_32ndEe<1,2,32,32,32>* cnn_fmul_32ns_32ndEe_U34;
    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U35;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > dense_2_weights_address0;
    sc_signal< sc_logic > dense_2_weights_ce0;
    sc_signal< sc_lv<32> > dense_2_weights_q0;
    sc_signal< sc_lv<5> > dense_2_bias_address0;
    sc_signal< sc_logic > dense_2_bias_ce0;
    sc_signal< sc_lv<32> > dense_2_bias_q0;
    sc_signal< sc_lv<5> > i_fu_166_p2;
    sc_signal< sc_lv<5> > i_reg_289;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln14_fu_172_p1;
    sc_signal< sc_lv<64> > zext_ln14_reg_294;
    sc_signal< sc_lv<1> > icmp_ln9_fu_160_p2;
    sc_signal< sc_lv<12> > zext_ln13_fu_176_p1;
    sc_signal< sc_lv<12> > zext_ln13_reg_300;
    sc_signal< sc_lv<6> > j_fu_186_p2;
    sc_signal< sc_lv<6> > j_reg_308;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_180_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_148_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_142_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_reg_353;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<5> > i_0_reg_108;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > sum_0_reg_119;
    sc_signal< sc_lv<6> > j_0_reg_131;
    sc_signal< sc_lv<64> > sext_ln14_fu_232_p1;
    sc_signal< sc_lv<64> > zext_ln14_4_fu_192_p1;
    sc_signal< sc_lv<32> > grp_fu_142_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > tmp_24_fu_197_p3;
    sc_signal< sc_lv<7> > tmp_25_fu_209_p3;
    sc_signal< sc_lv<12> > zext_ln14_6_fu_205_p1;
    sc_signal< sc_lv<12> > zext_ln14_7_fu_217_p1;
    sc_signal< sc_lv<12> > sub_ln14_fu_221_p2;
    sc_signal< sc_lv<12> > add_ln14_fu_227_p2;
    sc_signal< sc_lv<32> > bitcast_ln19_fu_237_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_240_p4;
    sc_signal< sc_lv<23> > trunc_ln19_fu_250_p1;
    sc_signal< sc_lv<1> > icmp_ln19_1_fu_260_p2;
    sc_signal< sc_lv<1> > icmp_ln19_fu_254_p2;
    sc_signal< sc_lv<1> > or_ln19_fu_266_p2;
    sc_signal< sc_lv<1> > grp_fu_154_p2;
    sc_signal< sc_lv<1> > and_ln19_fu_272_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln14_fu_227_p2();
    void thread_and_ln19_fu_272_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln19_fu_237_p1();
    void thread_dense_1_out_address0();
    void thread_dense_1_out_ce0();
    void thread_dense_2_bias_address0();
    void thread_dense_2_bias_ce0();
    void thread_dense_2_out_address0();
    void thread_dense_2_out_ce0();
    void thread_dense_2_out_d0();
    void thread_dense_2_out_we0();
    void thread_dense_2_weights_address0();
    void thread_dense_2_weights_ce0();
    void thread_grp_fu_142_p1();
    void thread_i_fu_166_p2();
    void thread_icmp_ln13_fu_180_p2();
    void thread_icmp_ln19_1_fu_260_p2();
    void thread_icmp_ln19_fu_254_p2();
    void thread_icmp_ln9_fu_160_p2();
    void thread_j_fu_186_p2();
    void thread_or_ln19_fu_266_p2();
    void thread_sext_ln14_fu_232_p1();
    void thread_sub_ln14_fu_221_p2();
    void thread_tmp_24_fu_197_p3();
    void thread_tmp_25_fu_209_p3();
    void thread_tmp_5_fu_240_p4();
    void thread_trunc_ln19_fu_250_p1();
    void thread_zext_ln13_fu_176_p1();
    void thread_zext_ln14_4_fu_192_p1();
    void thread_zext_ln14_6_fu_205_p1();
    void thread_zext_ln14_7_fu_217_p1();
    void thread_zext_ln14_fu_172_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
