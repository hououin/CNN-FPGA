// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"
#include "cnn_mac_muladd_5nibs.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_out< sc_lv<13> > conv_2_out_address0;
    sc_out< sc_logic > conv_2_out_ce0;
    sc_in< sc_lv<32> > conv_2_out_q0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,1,32,32,1>* cnn_fcmp_32ns_32neOg_U26;
    cnn_mac_muladd_5nibs<1,1,5,4,4,8>* cnn_mac_muladd_5nibs_U27;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_178;
    sc_signal< sc_lv<2> > mpr_0_reg_189;
    sc_signal< sc_lv<32> > max_1_reg_200;
    sc_signal< sc_lv<2> > mpc_0_reg_213;
    sc_signal< sc_lv<1> > icmp_ln9_fu_230_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > add_ln9_fu_236_p2;
    sc_signal< sc_lv<11> > add_ln9_reg_624;
    sc_signal< sc_lv<1> > icmp_ln12_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln12_reg_629;
    sc_signal< sc_lv<7> > select_ln28_1_fu_262_p3;
    sc_signal< sc_lv<7> > select_ln28_1_reg_634;
    sc_signal< sc_lv<14> > zext_ln25_fu_270_p1;
    sc_signal< sc_lv<14> > zext_ln25_reg_639;
    sc_signal< sc_lv<12> > zext_ln25_1_fu_274_p1;
    sc_signal< sc_lv<12> > zext_ln25_1_reg_644;
    sc_signal< sc_lv<3> > select_ln12_fu_324_p3;
    sc_signal< sc_lv<3> > select_ln12_reg_649;
    sc_signal< sc_lv<4> > select_ln12_1_fu_340_p3;
    sc_signal< sc_lv<4> > select_ln12_1_reg_655;
    sc_signal< sc_lv<3> > select_ln12_2_fu_348_p3;
    sc_signal< sc_lv<3> > select_ln12_2_reg_660;
    sc_signal< sc_lv<6> > add_ln35_fu_372_p2;
    sc_signal< sc_lv<6> > add_ln35_reg_665;
    sc_signal< sc_lv<4> > shl_ln1_fu_378_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_670;
    sc_signal< sc_lv<1> > icmp_ln19_fu_386_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_675;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > add_ln19_1_fu_392_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln19_1_fu_418_p3;
    sc_signal< sc_lv<2> > select_ln19_1_reg_684;
    sc_signal< sc_lv<2> > mpc_fu_469_p2;
    sc_signal< sc_lv<32> > max_2_fu_559_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<3> > c_fu_593_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<6> > select_ln12_3_fu_604_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<11> > indvar_flatten25_reg_122;
    sc_signal< sc_lv<7> > f_0_reg_133;
    sc_signal< sc_lv<6> > indvar_flatten7_reg_144;
    sc_signal< sc_lv<3> > r_0_reg_156;
    sc_signal< sc_lv<3> > c_0_reg_167;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_193_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_464_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_588_p1;
    sc_signal< sc_lv<7> > f_fu_242_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_278_p3;
    sc_signal< sc_lv<1> > icmp_ln15_fu_300_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_294_p2;
    sc_signal< sc_lv<3> > select_ln28_fu_254_p3;
    sc_signal< sc_lv<1> > and_ln28_2_fu_306_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_318_p2;
    sc_signal< sc_lv<3> > r_fu_312_p2;
    sc_signal< sc_lv<4> > shl_ln25_mid1_fu_332_p3;
    sc_signal< sc_lv<4> > select_ln28_2_fu_286_p3;
    sc_signal< sc_lv<5> > tmp_3_fu_360_p3;
    sc_signal< sc_lv<6> > zext_ln35_2_fu_368_p1;
    sc_signal< sc_lv<6> > zext_ln35_fu_356_p1;
    sc_signal< sc_lv<1> > icmp_ln22_fu_404_p2;
    sc_signal< sc_lv<2> > mpr_fu_398_p2;
    sc_signal< sc_lv<4> > zext_ln19_fu_426_p1;
    sc_signal< sc_lv<4> > add_ln19_fu_430_p2;
    sc_signal< sc_lv<2> > select_ln19_fu_410_p3;
    sc_signal< sc_lv<4> > zext_ln22_fu_439_p1;
    sc_signal< sc_lv<4> > j_fu_443_p2;
    sc_signal< sc_lv<8> > grp_fu_611_p3;
    sc_signal< sc_lv<14> > tmp_8_cast_fu_452_p3;
    sc_signal< sc_lv<14> > add_ln28_1_fu_459_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_475_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_493_p1;
    sc_signal< sc_lv<8> > tmp_fu_479_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_489_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_517_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_511_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_497_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_507_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_535_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_529_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_523_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_541_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_547_p2;
    sc_signal< sc_lv<1> > tmp_2_fu_224_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_553_p2;
    sc_signal< sc_lv<6> > zext_ln35_1_fu_567_p1;
    sc_signal< sc_lv<6> > add_ln35_1_fu_570_p2;
    sc_signal< sc_lv<12> > tmp_5_cast_fu_575_p3;
    sc_signal< sc_lv<12> > add_ln35_2_fu_583_p2;
    sc_signal< sc_lv<6> > add_ln12_1_fu_598_p2;
    sc_signal< sc_lv<5> > grp_fu_611_p0;
    sc_signal< sc_lv<4> > grp_fu_611_p1;
    sc_signal< sc_lv<4> > grp_fu_611_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_611_p10;
    sc_signal< sc_lv<8> > grp_fu_611_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_1_fu_598_p2();
    void thread_add_ln19_1_fu_392_p2();
    void thread_add_ln19_fu_430_p2();
    void thread_add_ln28_1_fu_459_p2();
    void thread_add_ln35_1_fu_570_p2();
    void thread_add_ln35_2_fu_583_p2();
    void thread_add_ln35_fu_372_p2();
    void thread_add_ln9_fu_236_p2();
    void thread_and_ln28_1_fu_553_p2();
    void thread_and_ln28_2_fu_306_p2();
    void thread_and_ln28_fu_547_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_mpr_0_phi_fu_193_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_493_p1();
    void thread_bitcast_ln28_fu_475_p1();
    void thread_c_fu_593_p2();
    void thread_conv_2_out_address0();
    void thread_conv_2_out_ce0();
    void thread_f_fu_242_p2();
    void thread_grp_fu_611_p0();
    void thread_grp_fu_611_p1();
    void thread_grp_fu_611_p10();
    void thread_grp_fu_611_p2();
    void thread_grp_fu_611_p20();
    void thread_icmp_ln12_fu_248_p2();
    void thread_icmp_ln15_fu_300_p2();
    void thread_icmp_ln19_fu_386_p2();
    void thread_icmp_ln22_fu_404_p2();
    void thread_icmp_ln28_1_fu_517_p2();
    void thread_icmp_ln28_2_fu_529_p2();
    void thread_icmp_ln28_3_fu_535_p2();
    void thread_icmp_ln28_fu_511_p2();
    void thread_icmp_ln9_fu_230_p2();
    void thread_j_fu_443_p2();
    void thread_max_2_fu_559_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_469_p2();
    void thread_mpr_fu_398_p2();
    void thread_or_ln12_fu_318_p2();
    void thread_or_ln28_1_fu_541_p2();
    void thread_or_ln28_fu_523_p2();
    void thread_r_fu_312_p2();
    void thread_select_ln12_1_fu_340_p3();
    void thread_select_ln12_2_fu_348_p3();
    void thread_select_ln12_3_fu_604_p3();
    void thread_select_ln12_fu_324_p3();
    void thread_select_ln19_1_fu_418_p3();
    void thread_select_ln19_fu_410_p3();
    void thread_select_ln28_1_fu_262_p3();
    void thread_select_ln28_2_fu_286_p3();
    void thread_select_ln28_fu_254_p3();
    void thread_shl_ln1_fu_378_p3();
    void thread_shl_ln25_mid1_fu_332_p3();
    void thread_shl_ln_fu_278_p3();
    void thread_tmp_1_fu_497_p4();
    void thread_tmp_3_fu_360_p3();
    void thread_tmp_5_cast_fu_575_p3();
    void thread_tmp_8_cast_fu_452_p3();
    void thread_tmp_fu_479_p4();
    void thread_trunc_ln28_1_fu_507_p1();
    void thread_trunc_ln28_fu_489_p1();
    void thread_xor_ln28_fu_294_p2();
    void thread_zext_ln19_fu_426_p1();
    void thread_zext_ln22_fu_439_p1();
    void thread_zext_ln25_1_fu_274_p1();
    void thread_zext_ln25_fu_270_p1();
    void thread_zext_ln28_2_fu_464_p1();
    void thread_zext_ln35_1_fu_567_p1();
    void thread_zext_ln35_2_fu_368_p1();
    void thread_zext_ln35_3_fu_588_p1();
    void thread_zext_ln35_fu_356_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
