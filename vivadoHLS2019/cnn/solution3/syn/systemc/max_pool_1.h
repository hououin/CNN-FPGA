// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"
#include "cnn_mac_muladd_6nfYi.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<13> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,1,32,32,1>* cnn_fcmp_32ns_32neOg_U11;
    cnn_mac_muladd_6nfYi<1,1,6,5,5,10>* cnn_mac_muladd_6nfYi_U12;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_182;
    sc_signal< sc_lv<2> > mpr_0_reg_193;
    sc_signal< sc_lv<32> > max_1_reg_204;
    sc_signal< sc_lv<2> > mpc_0_reg_217;
    sc_signal< sc_lv<1> > icmp_ln9_fu_234_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > add_ln9_fu_240_p2;
    sc_signal< sc_lv<13> > add_ln9_reg_624;
    sc_signal< sc_lv<1> > icmp_ln12_fu_252_p2;
    sc_signal< sc_lv<1> > icmp_ln12_reg_629;
    sc_signal< sc_lv<6> > select_ln28_4_fu_266_p3;
    sc_signal< sc_lv<6> > select_ln28_4_reg_634;
    sc_signal< sc_lv<16> > zext_ln25_fu_274_p1;
    sc_signal< sc_lv<16> > zext_ln25_reg_639;
    sc_signal< sc_lv<14> > zext_ln25_2_fu_278_p1;
    sc_signal< sc_lv<14> > zext_ln25_2_reg_644;
    sc_signal< sc_lv<4> > select_ln12_fu_328_p3;
    sc_signal< sc_lv<4> > select_ln12_reg_649;
    sc_signal< sc_lv<5> > select_ln12_4_fu_344_p3;
    sc_signal< sc_lv<5> > select_ln12_4_reg_655;
    sc_signal< sc_lv<4> > select_ln12_5_fu_352_p3;
    sc_signal< sc_lv<4> > select_ln12_5_reg_660;
    sc_signal< sc_lv<8> > mul_ln35_fu_364_p2;
    sc_signal< sc_lv<8> > mul_ln35_reg_665;
    sc_signal< sc_lv<5> > shl_ln2_fu_370_p3;
    sc_signal< sc_lv<5> > shl_ln2_reg_670;
    sc_signal< sc_lv<1> > icmp_ln19_fu_378_p2;
    sc_signal< sc_lv<1> > icmp_ln19_reg_675;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > add_ln19_2_fu_384_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln19_2_fu_410_p3;
    sc_signal< sc_lv<2> > select_ln19_2_reg_684;
    sc_signal< sc_lv<2> > mpc_fu_465_p2;
    sc_signal< sc_lv<32> > max_3_fu_555_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<4> > c_fu_593_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > select_ln12_6_fu_604_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<13> > indvar_flatten25_reg_126;
    sc_signal< sc_lv<6> > f_0_reg_137;
    sc_signal< sc_lv<8> > indvar_flatten7_reg_148;
    sc_signal< sc_lv<4> > r_0_reg_160;
    sc_signal< sc_lv<4> > c_0_reg_171;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_197_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_460_p1;
    sc_signal< sc_lv<64> > zext_ln35_6_fu_588_p1;
    sc_signal< sc_lv<6> > f_fu_246_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_282_p3;
    sc_signal< sc_lv<1> > icmp_ln15_fu_304_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_298_p2;
    sc_signal< sc_lv<4> > select_ln28_fu_258_p3;
    sc_signal< sc_lv<1> > and_ln28_3_fu_310_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_322_p2;
    sc_signal< sc_lv<4> > r_fu_316_p2;
    sc_signal< sc_lv<5> > shl_ln25_mid1_fu_336_p3;
    sc_signal< sc_lv<5> > select_ln28_5_fu_290_p3;
    sc_signal< sc_lv<4> > mul_ln35_fu_364_p0;
    sc_signal< sc_lv<1> > icmp_ln22_fu_396_p2;
    sc_signal< sc_lv<2> > mpr_fu_390_p2;
    sc_signal< sc_lv<5> > zext_ln19_fu_418_p1;
    sc_signal< sc_lv<5> > add_ln19_fu_422_p2;
    sc_signal< sc_lv<2> > select_ln19_fu_402_p3;
    sc_signal< sc_lv<5> > zext_ln22_fu_431_p1;
    sc_signal< sc_lv<5> > j_fu_435_p2;
    sc_signal< sc_lv<10> > grp_fu_611_p3;
    sc_signal< sc_lv<15> > tmp_8_fu_444_p3;
    sc_signal< sc_lv<16> > zext_ln28_4_fu_451_p1;
    sc_signal< sc_lv<16> > add_ln28_2_fu_455_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_471_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_489_p1;
    sc_signal< sc_lv<8> > tmp_fu_475_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_485_p1;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_513_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_507_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_493_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_503_p1;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_531_p2;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_525_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_519_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_537_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_543_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_228_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_549_p2;
    sc_signal< sc_lv<8> > zext_ln35_4_fu_563_p1;
    sc_signal< sc_lv<8> > add_ln35_fu_566_p2;
    sc_signal< sc_lv<13> > tmp_7_fu_571_p3;
    sc_signal< sc_lv<14> > zext_ln35_5_fu_579_p1;
    sc_signal< sc_lv<14> > add_ln35_3_fu_583_p2;
    sc_signal< sc_lv<8> > add_ln12_2_fu_598_p2;
    sc_signal< sc_lv<6> > grp_fu_611_p0;
    sc_signal< sc_lv<5> > grp_fu_611_p1;
    sc_signal< sc_lv<5> > grp_fu_611_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > grp_fu_611_p10;
    sc_signal< sc_lv<10> > grp_fu_611_p20;
    sc_signal< sc_lv<8> > mul_ln35_fu_364_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<13> ap_const_lv13_1520;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_2_fu_598_p2();
    void thread_add_ln19_2_fu_384_p2();
    void thread_add_ln19_fu_422_p2();
    void thread_add_ln28_2_fu_455_p2();
    void thread_add_ln35_3_fu_583_p2();
    void thread_add_ln35_fu_566_p2();
    void thread_add_ln9_fu_240_p2();
    void thread_and_ln28_2_fu_549_p2();
    void thread_and_ln28_3_fu_310_p2();
    void thread_and_ln28_fu_543_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_mpr_0_phi_fu_197_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_2_fu_489_p1();
    void thread_bitcast_ln28_fu_471_p1();
    void thread_c_fu_593_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_246_p2();
    void thread_grp_fu_611_p0();
    void thread_grp_fu_611_p1();
    void thread_grp_fu_611_p10();
    void thread_grp_fu_611_p2();
    void thread_grp_fu_611_p20();
    void thread_icmp_ln12_fu_252_p2();
    void thread_icmp_ln15_fu_304_p2();
    void thread_icmp_ln19_fu_378_p2();
    void thread_icmp_ln22_fu_396_p2();
    void thread_icmp_ln28_4_fu_513_p2();
    void thread_icmp_ln28_5_fu_525_p2();
    void thread_icmp_ln28_6_fu_531_p2();
    void thread_icmp_ln28_fu_507_p2();
    void thread_icmp_ln9_fu_234_p2();
    void thread_j_fu_435_p2();
    void thread_max_3_fu_555_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_465_p2();
    void thread_mpr_fu_390_p2();
    void thread_mul_ln35_fu_364_p0();
    void thread_mul_ln35_fu_364_p00();
    void thread_mul_ln35_fu_364_p2();
    void thread_or_ln12_fu_322_p2();
    void thread_or_ln28_2_fu_537_p2();
    void thread_or_ln28_fu_519_p2();
    void thread_r_fu_316_p2();
    void thread_select_ln12_4_fu_344_p3();
    void thread_select_ln12_5_fu_352_p3();
    void thread_select_ln12_6_fu_604_p3();
    void thread_select_ln12_fu_328_p3();
    void thread_select_ln19_2_fu_410_p3();
    void thread_select_ln19_fu_402_p3();
    void thread_select_ln28_4_fu_266_p3();
    void thread_select_ln28_5_fu_290_p3();
    void thread_select_ln28_fu_258_p3();
    void thread_shl_ln25_mid1_fu_336_p3();
    void thread_shl_ln2_fu_370_p3();
    void thread_shl_ln_fu_282_p3();
    void thread_tmp_5_fu_493_p4();
    void thread_tmp_7_fu_571_p3();
    void thread_tmp_8_fu_444_p3();
    void thread_tmp_fu_475_p4();
    void thread_trunc_ln28_2_fu_503_p1();
    void thread_trunc_ln28_fu_485_p1();
    void thread_xor_ln28_fu_298_p2();
    void thread_zext_ln19_fu_418_p1();
    void thread_zext_ln22_fu_431_p1();
    void thread_zext_ln25_2_fu_278_p1();
    void thread_zext_ln25_fu_274_p1();
    void thread_zext_ln28_4_fu_451_p1();
    void thread_zext_ln28_5_fu_460_p1();
    void thread_zext_ln35_4_fu_563_p1();
    void thread_zext_ln35_5_fu_579_p1();
    void thread_zext_ln35_6_fu_588_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
