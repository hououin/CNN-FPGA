// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_1_HH_
#define _dense_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "cnn_fcmp_32ns_32neOg.h"
#include "cnn_mac_muladd_9nibs.h"
#include "dense_1_dense_1_bg8j.h"
#include "dense_1_dense_1_whbi.h"

namespace ap_rtl {

struct dense_1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > dense_1_out_address0;
    sc_out< sc_logic > dense_1_out_ce0;
    sc_out< sc_logic > dense_1_out_we0;
    sc_out< sc_lv<32> > dense_1_out_d0;
    sc_out< sc_lv<9> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    dense_1(sc_module_name name);
    SC_HAS_PROCESS(dense_1);

    ~dense_1();

    sc_trace_file* mVcdFile;

    dense_1_dense_1_bg8j* dense_1_bias_U;
    dense_1_dense_1_whbi* dense_1_weights_U;
    cnn_fadd_32ns_32ncud<1,4,32,32,32>* cnn_fadd_32ns_32ncud_U26;
    cnn_fmul_32ns_32ndEe<1,2,32,32,32>* cnn_fmul_32ns_32ndEe_U27;
    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U28;
    cnn_mac_muladd_9nibs<1,1,9,7,6,15>* cnn_mac_muladd_9nibs_U29;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > dense_1_bias_address0;
    sc_signal< sc_logic > dense_1_bias_ce0;
    sc_signal< sc_lv<32> > dense_1_bias_q0;
    sc_signal< sc_lv<15> > dense_1_weights_address0;
    sc_signal< sc_logic > dense_1_weights_ce0;
    sc_signal< sc_lv<32> > dense_1_weights_q0;
    sc_signal< sc_lv<15> > indvar_flatten_reg_116;
    sc_signal< sc_lv<6> > i_0_reg_127;
    sc_signal< sc_lv<32> > sum_0_reg_138;
    sc_signal< sc_lv<9> > j_0_reg_150;
    sc_signal< sc_lv<1> > icmp_ln9_fu_178_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_315;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln9_reg_315_pp0_iter1_reg;
    sc_signal< sc_lv<15> > add_ln9_fu_184_p2;
    sc_signal< sc_lv<15> > add_ln9_reg_319;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_196_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_324;
    sc_signal< sc_lv<9> > select_ln14_1_fu_202_p3;
    sc_signal< sc_lv<9> > select_ln14_1_reg_329;
    sc_signal< sc_lv<6> > select_ln14_2_fu_210_p3;
    sc_signal< sc_lv<6> > select_ln14_2_reg_334;
    sc_signal< sc_lv<6> > select_ln14_2_reg_334_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state9_pp0_stage1_iter2;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter3;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > grp_fu_166_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_360;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter1;
    sc_signal< bool > ap_block_state10_pp0_stage2_iter2;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter3;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<9> > j_fu_235_p2;
    sc_signal< sc_lv<9> > j_reg_365;
    sc_signal< sc_lv<32> > select_ln14_fu_240_p3;
    sc_signal< sc_lv<1> > icmp_ln13_1_fu_248_p2;
    sc_signal< sc_lv<1> > icmp_ln13_1_reg_376;
    sc_signal< sc_lv<1> > icmp_ln13_1_reg_376_pp0_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln13_1_reg_376_pp0_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln14_fu_253_p1;
    sc_signal< sc_lv<64> > zext_ln14_reg_380;
    sc_signal< sc_lv<64> > zext_ln14_reg_380_pp0_iter3_reg;
    sc_signal< sc_lv<32> > grp_fu_161_p2;
    sc_signal< sc_lv<32> > sum_reg_385;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<32> > tmp_reg_401;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_lv<15> > ap_phi_mux_indvar_flatten_phi_fu_120_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<6> > ap_phi_mux_i_0_phi_fu_131_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_sum_0_phi_fu_142_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_j_0_phi_fu_154_p4;
    sc_signal< sc_lv<64> > zext_ln14_7_fu_231_p1;
    sc_signal< sc_lv<64> > zext_ln14_4_fu_222_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<32> > grp_fu_161_p0;
    sc_signal< sc_lv<32> > grp_fu_161_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<6> > i_fu_190_p2;
    sc_signal< sc_lv<15> > grp_fu_306_p3;
    sc_signal< sc_lv<32> > bitcast_ln19_fu_257_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_260_p4;
    sc_signal< sc_lv<23> > trunc_ln19_fu_270_p1;
    sc_signal< sc_lv<1> > icmp_ln19_1_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln19_fu_274_p2;
    sc_signal< sc_lv<1> > or_ln19_fu_286_p2;
    sc_signal< sc_lv<1> > grp_fu_172_p2;
    sc_signal< sc_lv<1> > and_ln19_fu_292_p2;
    sc_signal< sc_lv<9> > grp_fu_306_p0;
    sc_signal< sc_lv<7> > grp_fu_306_p1;
    sc_signal< sc_lv<6> > grp_fu_306_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<15> > grp_fu_306_p00;
    sc_signal< sc_lv<15> > grp_fu_306_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_pp0_stage1;
    static const sc_lv<5> ap_ST_fsm_pp0_stage2;
    static const sc_lv<5> ap_ST_fsm_state14;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<15> ap_const_lv15_4E20;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<15> ap_const_lv15_32;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln9_fu_184_p2();
    void thread_and_ln19_fu_292_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state14();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_state10_pp0_stage2_iter2();
    void thread_ap_block_state11_pp0_stage0_iter3();
    void thread_ap_block_state12_pp0_stage1_iter3();
    void thread_ap_block_state13_pp0_stage2_iter3();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state7_pp0_stage2_iter1();
    void thread_ap_block_state8_pp0_stage0_iter2();
    void thread_ap_block_state9_pp0_stage1_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_0_phi_fu_131_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_120_p4();
    void thread_ap_phi_mux_j_0_phi_fu_154_p4();
    void thread_ap_phi_mux_sum_0_phi_fu_142_p4();
    void thread_ap_ready();
    void thread_bitcast_ln19_fu_257_p1();
    void thread_dense_1_bias_address0();
    void thread_dense_1_bias_ce0();
    void thread_dense_1_out_address0();
    void thread_dense_1_out_ce0();
    void thread_dense_1_out_d0();
    void thread_dense_1_out_we0();
    void thread_dense_1_weights_address0();
    void thread_dense_1_weights_ce0();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_161_p0();
    void thread_grp_fu_161_p1();
    void thread_grp_fu_306_p0();
    void thread_grp_fu_306_p00();
    void thread_grp_fu_306_p1();
    void thread_grp_fu_306_p2();
    void thread_grp_fu_306_p20();
    void thread_i_fu_190_p2();
    void thread_icmp_ln13_1_fu_248_p2();
    void thread_icmp_ln13_fu_196_p2();
    void thread_icmp_ln19_1_fu_280_p2();
    void thread_icmp_ln19_fu_274_p2();
    void thread_icmp_ln9_fu_178_p2();
    void thread_j_fu_235_p2();
    void thread_or_ln19_fu_286_p2();
    void thread_select_ln14_1_fu_202_p3();
    void thread_select_ln14_2_fu_210_p3();
    void thread_select_ln14_fu_240_p3();
    void thread_tmp_1_fu_260_p4();
    void thread_trunc_ln19_fu_270_p1();
    void thread_zext_ln14_4_fu_222_p1();
    void thread_zext_ln14_7_fu_231_p1();
    void thread_zext_ln14_fu_253_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
