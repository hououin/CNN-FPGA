// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32ndEe.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 36
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > max_pool_out_0_address0;
    sc_out< sc_logic > max_pool_out_0_ce0;
    sc_out< sc_logic > max_pool_out_0_we0;
    sc_out< sc_lv<32> > max_pool_out_0_d0;
    sc_out< sc_lv<8> > max_pool_out_1_address0;
    sc_out< sc_logic > max_pool_out_1_ce0;
    sc_out< sc_logic > max_pool_out_1_we0;
    sc_out< sc_lv<32> > max_pool_out_1_d0;
    sc_out< sc_lv<8> > max_pool_out_2_address0;
    sc_out< sc_logic > max_pool_out_2_ce0;
    sc_out< sc_logic > max_pool_out_2_we0;
    sc_out< sc_lv<32> > max_pool_out_2_d0;
    sc_out< sc_lv<8> > max_pool_out_3_address0;
    sc_out< sc_logic > max_pool_out_3_ce0;
    sc_out< sc_logic > max_pool_out_3_we0;
    sc_out< sc_lv<32> > max_pool_out_3_d0;
    sc_out< sc_lv<8> > max_pool_out_4_address0;
    sc_out< sc_logic > max_pool_out_4_ce0;
    sc_out< sc_logic > max_pool_out_4_we0;
    sc_out< sc_lv<32> > max_pool_out_4_d0;
    sc_out< sc_lv<8> > max_pool_out_5_address0;
    sc_out< sc_logic > max_pool_out_5_ce0;
    sc_out< sc_logic > max_pool_out_5_we0;
    sc_out< sc_lv<32> > max_pool_out_5_d0;
    sc_out< sc_lv<12> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<12> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32ndEe<1,2,32,32,1>* cnn_fcmp_32ns_32ndEe_U49;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > max_0_reg_269;
    sc_signal< sc_lv<2> > mpr_0_reg_287;
    sc_signal< sc_lv<1> > icmp_ln10_fu_304_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > add_ln10_fu_310_p2;
    sc_signal< sc_lv<10> > add_ln10_reg_790;
    sc_signal< sc_lv<1> > icmp_ln13_fu_322_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_795;
    sc_signal< sc_lv<3> > select_ln29_6_fu_336_p3;
    sc_signal< sc_lv<3> > select_ln29_6_reg_800;
    sc_signal< sc_lv<13> > zext_ln26_fu_344_p1;
    sc_signal< sc_lv<13> > zext_ln26_reg_805;
    sc_signal< sc_lv<4> > select_ln13_fu_394_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_811;
    sc_signal< sc_lv<5> > select_ln13_6_fu_410_p3;
    sc_signal< sc_lv<5> > select_ln13_6_reg_817;
    sc_signal< sc_lv<4> > select_ln13_7_fu_418_p3;
    sc_signal< sc_lv<4> > select_ln13_7_reg_822;
    sc_signal< sc_lv<8> > mul_ln36_fu_430_p2;
    sc_signal< sc_lv<8> > mul_ln36_reg_827;
    sc_signal< sc_lv<10> > zext_ln27_fu_444_p1;
    sc_signal< sc_lv<10> > zext_ln27_reg_832;
    sc_signal< sc_lv<10> > zext_ln20_1_fu_454_p1;
    sc_signal< sc_lv<10> > zext_ln20_1_reg_837;
    sc_signal< sc_lv<1> > icmp_ln20_fu_458_p2;
    sc_signal< sc_lv<1> > icmp_ln20_reg_842;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln20_reg_842_pp0_iter1_reg;
    sc_signal< sc_lv<2> > mpr_fu_464_p2;
    sc_signal< sc_lv<2> > mpr_reg_846;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > conv_1_out_load_reg_861;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > conv_1_out_load_1_reg_868;
    sc_signal< sc_lv<32> > select_ln29_fu_654_p3;
    sc_signal< sc_lv<32> > select_ln29_reg_875;
    sc_signal< sc_lv<32> > select_ln29_2_fu_744_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<4> > c_fu_768_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > select_ln13_8_fu_779_p3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<10> > indvar_flatten17_reg_213;
    sc_signal< sc_lv<3> > f_0_reg_224;
    sc_signal< sc_lv<8> > indvar_flatten_reg_235;
    sc_signal< sc_lv<4> > r_0_reg_247;
    sc_signal< sc_lv<4> > c_0_reg_258;
    sc_signal< sc_lv<32> > ap_phi_mux_max_0_phi_fu_279_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_291_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln29_4_fu_525_p1;
    sc_signal< sc_lv<64> > zext_ln29_6_fu_566_p1;
    sc_signal< sc_lv<64> > zext_ln36_5_fu_758_p1;
    sc_signal< sc_lv<32> > grp_fu_298_p0;
    sc_signal< sc_lv<32> > grp_fu_298_p1;
    sc_signal< sc_lv<3> > f_fu_316_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_348_p3;
    sc_signal< sc_lv<1> > icmp_ln16_fu_370_p2;
    sc_signal< sc_lv<1> > xor_ln29_fu_364_p2;
    sc_signal< sc_lv<4> > select_ln29_5_fu_328_p3;
    sc_signal< sc_lv<1> > and_ln29_7_fu_376_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_388_p2;
    sc_signal< sc_lv<4> > r_fu_382_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_402_p3;
    sc_signal< sc_lv<5> > select_ln29_7_fu_356_p3;
    sc_signal< sc_lv<4> > mul_ln36_fu_430_p0;
    sc_signal< sc_lv<5> > shl_ln2_fu_436_p3;
    sc_signal< sc_lv<5> > or_ln27_fu_448_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_470_p1;
    sc_signal< sc_lv<5> > i_fu_474_p2;
    sc_signal< sc_lv<5> > mul_ln29_fu_483_p1;
    sc_signal< sc_lv<10> > mul_ln29_fu_483_p2;
    sc_signal< sc_lv<10> > add_ln29_fu_489_p2;
    sc_signal< sc_lv<11> > tmp_fu_502_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_494_p3;
    sc_signal< sc_lv<13> > zext_ln29_3_fu_510_p1;
    sc_signal< sc_lv<13> > sub_ln29_fu_514_p2;
    sc_signal< sc_lv<13> > add_ln29_4_fu_520_p2;
    sc_signal< sc_lv<10> > add_ln29_5_fu_530_p2;
    sc_signal< sc_lv<11> > tmp_6_fu_543_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_535_p3;
    sc_signal< sc_lv<13> > zext_ln29_5_fu_551_p1;
    sc_signal< sc_lv<13> > sub_ln29_1_fu_555_p2;
    sc_signal< sc_lv<13> > add_ln29_6_fu_561_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_571_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_4_fu_588_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_574_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_584_p1;
    sc_signal< sc_lv<1> > icmp_ln29_8_fu_612_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_606_p2;
    sc_signal< sc_lv<8> > tmp_1_fu_592_p4;
    sc_signal< sc_lv<23> > trunc_ln29_4_fu_602_p1;
    sc_signal< sc_lv<1> > icmp_ln29_10_fu_630_p2;
    sc_signal< sc_lv<1> > icmp_ln29_9_fu_624_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_618_p2;
    sc_signal< sc_lv<1> > or_ln29_4_fu_636_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_642_p2;
    sc_signal< sc_lv<1> > grp_fu_298_p2;
    sc_signal< sc_lv<1> > and_ln29_4_fu_648_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_5_fu_662_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_6_fu_679_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_665_p4;
    sc_signal< sc_lv<23> > trunc_ln29_5_fu_675_p1;
    sc_signal< sc_lv<1> > icmp_ln29_12_fu_702_p2;
    sc_signal< sc_lv<1> > icmp_ln29_11_fu_696_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_682_p4;
    sc_signal< sc_lv<23> > trunc_ln29_6_fu_692_p1;
    sc_signal< sc_lv<1> > icmp_ln29_14_fu_720_p2;
    sc_signal< sc_lv<1> > icmp_ln29_13_fu_714_p2;
    sc_signal< sc_lv<1> > or_ln29_5_fu_708_p2;
    sc_signal< sc_lv<1> > or_ln29_6_fu_726_p2;
    sc_signal< sc_lv<1> > and_ln29_5_fu_732_p2;
    sc_signal< sc_lv<1> > and_ln29_6_fu_738_p2;
    sc_signal< sc_lv<8> > zext_ln36_4_fu_750_p1;
    sc_signal< sc_lv<8> > add_ln36_fu_753_p2;
    sc_signal< sc_lv<8> > add_ln13_2_fu_773_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln29_fu_483_p10;
    sc_signal< sc_lv<8> > mul_ln36_fu_430_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_pp0_stage1;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<10> ap_const_lv10_3F6;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_310_p2();
    void thread_add_ln13_2_fu_773_p2();
    void thread_add_ln29_4_fu_520_p2();
    void thread_add_ln29_5_fu_530_p2();
    void thread_add_ln29_6_fu_561_p2();
    void thread_add_ln29_fu_489_p2();
    void thread_add_ln36_fu_753_p2();
    void thread_and_ln29_4_fu_648_p2();
    void thread_and_ln29_5_fu_732_p2();
    void thread_and_ln29_6_fu_738_p2();
    void thread_and_ln29_7_fu_376_p2();
    void thread_and_ln29_fu_642_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_max_0_phi_fu_279_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_291_p4();
    void thread_ap_ready();
    void thread_bitcast_ln29_4_fu_588_p1();
    void thread_bitcast_ln29_5_fu_662_p1();
    void thread_bitcast_ln29_6_fu_679_p1();
    void thread_bitcast_ln29_fu_571_p1();
    void thread_c_fu_768_p2();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_316_p2();
    void thread_grp_fu_298_p0();
    void thread_grp_fu_298_p1();
    void thread_i_fu_474_p2();
    void thread_icmp_ln10_fu_304_p2();
    void thread_icmp_ln13_fu_322_p2();
    void thread_icmp_ln16_fu_370_p2();
    void thread_icmp_ln20_fu_458_p2();
    void thread_icmp_ln29_10_fu_630_p2();
    void thread_icmp_ln29_11_fu_696_p2();
    void thread_icmp_ln29_12_fu_702_p2();
    void thread_icmp_ln29_13_fu_714_p2();
    void thread_icmp_ln29_14_fu_720_p2();
    void thread_icmp_ln29_8_fu_612_p2();
    void thread_icmp_ln29_9_fu_624_p2();
    void thread_icmp_ln29_fu_606_p2();
    void thread_max_pool_out_0_address0();
    void thread_max_pool_out_0_ce0();
    void thread_max_pool_out_0_d0();
    void thread_max_pool_out_0_we0();
    void thread_max_pool_out_1_address0();
    void thread_max_pool_out_1_ce0();
    void thread_max_pool_out_1_d0();
    void thread_max_pool_out_1_we0();
    void thread_max_pool_out_2_address0();
    void thread_max_pool_out_2_ce0();
    void thread_max_pool_out_2_d0();
    void thread_max_pool_out_2_we0();
    void thread_max_pool_out_3_address0();
    void thread_max_pool_out_3_ce0();
    void thread_max_pool_out_3_d0();
    void thread_max_pool_out_3_we0();
    void thread_max_pool_out_4_address0();
    void thread_max_pool_out_4_ce0();
    void thread_max_pool_out_4_d0();
    void thread_max_pool_out_4_we0();
    void thread_max_pool_out_5_address0();
    void thread_max_pool_out_5_ce0();
    void thread_max_pool_out_5_d0();
    void thread_max_pool_out_5_we0();
    void thread_mpr_fu_464_p2();
    void thread_mul_ln29_fu_483_p1();
    void thread_mul_ln29_fu_483_p10();
    void thread_mul_ln29_fu_483_p2();
    void thread_mul_ln36_fu_430_p0();
    void thread_mul_ln36_fu_430_p00();
    void thread_mul_ln36_fu_430_p2();
    void thread_or_ln13_fu_388_p2();
    void thread_or_ln27_fu_448_p2();
    void thread_or_ln29_4_fu_636_p2();
    void thread_or_ln29_5_fu_708_p2();
    void thread_or_ln29_6_fu_726_p2();
    void thread_or_ln29_fu_618_p2();
    void thread_p_shl2_cast_fu_494_p3();
    void thread_p_shl_cast_fu_535_p3();
    void thread_r_fu_382_p2();
    void thread_select_ln13_6_fu_410_p3();
    void thread_select_ln13_7_fu_418_p3();
    void thread_select_ln13_8_fu_779_p3();
    void thread_select_ln13_fu_394_p3();
    void thread_select_ln29_2_fu_744_p3();
    void thread_select_ln29_5_fu_328_p3();
    void thread_select_ln29_6_fu_336_p3();
    void thread_select_ln29_7_fu_356_p3();
    void thread_select_ln29_fu_654_p3();
    void thread_shl_ln26_mid1_fu_402_p3();
    void thread_shl_ln2_fu_436_p3();
    void thread_shl_ln_fu_348_p3();
    void thread_sub_ln29_1_fu_555_p2();
    void thread_sub_ln29_fu_514_p2();
    void thread_tmp_1_fu_592_p4();
    void thread_tmp_3_fu_665_p4();
    void thread_tmp_4_fu_682_p4();
    void thread_tmp_6_fu_543_p3();
    void thread_tmp_fu_502_p3();
    void thread_tmp_s_fu_574_p4();
    void thread_trunc_ln29_4_fu_602_p1();
    void thread_trunc_ln29_5_fu_675_p1();
    void thread_trunc_ln29_6_fu_692_p1();
    void thread_trunc_ln29_fu_584_p1();
    void thread_xor_ln29_fu_364_p2();
    void thread_zext_ln20_1_fu_454_p1();
    void thread_zext_ln20_fu_470_p1();
    void thread_zext_ln26_fu_344_p1();
    void thread_zext_ln27_fu_444_p1();
    void thread_zext_ln29_3_fu_510_p1();
    void thread_zext_ln29_4_fu_525_p1();
    void thread_zext_ln29_5_fu_551_p1();
    void thread_zext_ln29_6_fu_566_p1();
    void thread_zext_ln36_4_fu_750_p1();
    void thread_zext_ln36_5_fu_758_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
