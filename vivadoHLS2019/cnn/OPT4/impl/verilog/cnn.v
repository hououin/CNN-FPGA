// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="cnn,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=21.764000,HLS_SYN_LAT=94626,HLS_SYN_TPT=none,HLS_SYN_MEM=97,HLS_SYN_DSP=109,HLS_SYN_FF=27268,HLS_SYN_LUT=44842,HLS_VERSION=2019_1}" *)

module cnn (
        ap_clk,
        ap_rst_n,
        cnn_input_Addr_A,
        cnn_input_EN_A,
        cnn_input_WEN_A,
        cnn_input_Din_A,
        cnn_input_Dout_A,
        cnn_input_Clk_A,
        cnn_input_Rst_A,
        prediction_Addr_A,
        prediction_EN_A,
        prediction_WEN_A,
        prediction_Din_A,
        prediction_Dout_A,
        prediction_Clk_A,
        prediction_Rst_A,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 23'd16384;
parameter    ap_ST_fsm_pp0_stage1 = 23'd32768;
parameter    ap_ST_fsm_pp0_stage2 = 23'd65536;
parameter    ap_ST_fsm_state27 = 23'd131072;
parameter    ap_ST_fsm_pp1_stage0 = 23'd262144;
parameter    ap_ST_fsm_pp1_stage1 = 23'd524288;
parameter    ap_ST_fsm_pp1_stage2 = 23'd1048576;
parameter    ap_ST_fsm_state40 = 23'd2097152;
parameter    ap_ST_fsm_state41 = 23'd4194304;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] cnn_input_Addr_A;
output   cnn_input_EN_A;
output  [3:0] cnn_input_WEN_A;
output  [31:0] cnn_input_Din_A;
input  [31:0] cnn_input_Dout_A;
output   cnn_input_Clk_A;
output   cnn_input_Rst_A;
output  [31:0] prediction_Addr_A;
output   prediction_EN_A;
output  [3:0] prediction_WEN_A;
output  [31:0] prediction_Din_A;
input  [31:0] prediction_Dout_A;
output   prediction_Clk_A;
output   prediction_Rst_A;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

reg cnn_input_EN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg   [11:0] conv_1_out_address0;
reg    conv_1_out_ce0;
reg    conv_1_out_we0;
wire   [31:0] conv_1_out_q0;
reg    conv_1_out_ce1;
wire   [31:0] conv_1_out_q1;
reg   [7:0] max_pool_1_out_0_address0;
reg    max_pool_1_out_0_ce0;
reg    max_pool_1_out_0_we0;
wire   [31:0] max_pool_1_out_0_q0;
reg    max_pool_1_out_0_ce1;
wire   [31:0] max_pool_1_out_0_q1;
reg   [7:0] max_pool_1_out_1_address0;
reg    max_pool_1_out_1_ce0;
reg    max_pool_1_out_1_we0;
wire   [31:0] max_pool_1_out_1_q0;
reg    max_pool_1_out_1_ce1;
wire   [31:0] max_pool_1_out_1_q1;
reg   [7:0] max_pool_1_out_2_address0;
reg    max_pool_1_out_2_ce0;
reg    max_pool_1_out_2_we0;
wire   [31:0] max_pool_1_out_2_q0;
reg    max_pool_1_out_2_ce1;
wire   [31:0] max_pool_1_out_2_q1;
reg   [7:0] max_pool_1_out_3_address0;
reg    max_pool_1_out_3_ce0;
reg    max_pool_1_out_3_we0;
wire   [31:0] max_pool_1_out_3_q0;
reg    max_pool_1_out_3_ce1;
wire   [31:0] max_pool_1_out_3_q1;
reg   [7:0] max_pool_1_out_4_address0;
reg    max_pool_1_out_4_ce0;
reg    max_pool_1_out_4_we0;
wire   [31:0] max_pool_1_out_4_q0;
reg    max_pool_1_out_4_ce1;
wire   [31:0] max_pool_1_out_4_q1;
reg   [7:0] max_pool_1_out_5_address0;
reg    max_pool_1_out_5_ce0;
reg    max_pool_1_out_5_we0;
wire   [31:0] max_pool_1_out_5_q0;
reg    max_pool_1_out_5_ce1;
wire   [31:0] max_pool_1_out_5_q1;
reg   [10:0] conv_2_out_address0;
reg    conv_2_out_ce0;
reg    conv_2_out_we0;
wire   [31:0] conv_2_out_q0;
reg    conv_2_out_ce1;
wire   [31:0] conv_2_out_q1;
reg   [8:0] max_pool_2_out_address0;
reg    max_pool_2_out_ce0;
reg    max_pool_2_out_we0;
wire   [31:0] max_pool_2_out_q0;
reg   [8:0] flat_array_address0;
reg    flat_array_ce0;
reg    flat_array_we0;
wire   [31:0] flat_array_q0;
wire   [5:0] dense_1_bias_address0;
reg    dense_1_bias_ce0;
wire   [31:0] dense_1_bias_q0;
reg   [5:0] dense_1_out_address0;
reg    dense_1_out_ce0;
reg    dense_1_out_we0;
wire   [31:0] dense_1_out_d0;
wire   [31:0] dense_1_out_q0;
wire   [14:0] dense_1_weights_address0;
reg    dense_1_weights_ce0;
wire   [31:0] dense_1_weights_q0;
wire   [4:0] dense_2_bias_address0;
reg    dense_2_bias_ce0;
wire   [31:0] dense_2_bias_q0;
reg   [4:0] dense_2_out_address0;
reg    dense_2_out_ce0;
reg    dense_2_out_we0;
wire   [31:0] dense_2_out_d0;
wire   [31:0] dense_2_out_q0;
wire   [10:0] dense_2_weights_address0;
reg    dense_2_weights_ce0;
wire   [31:0] dense_2_weights_q0;
reg   [14:0] indvar_flatten_reg_926;
reg   [5:0] i_0_i_reg_937;
reg   [31:0] sum_0_i_reg_948;
reg   [8:0] j_0_i_reg_960;
reg   [10:0] indvar_flatten11_reg_971;
reg   [4:0] i_0_i32_reg_982;
reg   [31:0] sum_0_i35_reg_993;
reg   [5:0] j_0_i36_reg_1005;
wire   [31:0] grp_fu_1230_p2;
reg   [31:0] reg_1244;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state17_pp0_stage2_iter0;
wire    ap_block_state20_pp0_stage2_iter1;
wire    ap_block_state23_pp0_stage2_iter2;
wire    ap_block_state26_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln9_reg_1807;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state30_pp1_stage2_iter0;
wire    ap_block_state33_pp1_stage2_iter1;
wire    ap_block_state36_pp1_stage2_iter2;
wire    ap_block_state39_pp1_stage2_iter3;
wire    ap_block_pp1_stage2_11001;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] icmp_ln9_1_reg_1882;
wire   [31:0] grp_fu_1224_p2;
reg   [31:0] reg_1249;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state21_pp0_stage0_iter2;
wire    ap_block_state24_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln9_reg_1807_pp0_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state28_pp1_stage0_iter0;
wire    ap_block_state31_pp1_stage0_iter1;
wire    ap_block_state34_pp1_stage0_iter2;
wire    ap_block_state37_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] icmp_ln9_1_reg_1882_pp1_iter1_reg;
reg   [31:0] reg_1256;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state16_pp0_stage1_iter0;
wire    ap_block_state19_pp0_stage1_iter1;
wire    ap_block_state22_pp0_stage1_iter2;
wire    ap_block_state25_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln13_1_reg_1863;
reg   [0:0] icmp_ln13_1_reg_1863_pp0_iter3_reg;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_state29_pp1_stage1_iter0;
wire    ap_block_state32_pp1_stage1_iter1;
wire    ap_block_state35_pp1_stage1_iter2;
wire    ap_block_state38_pp1_stage1_iter3;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln13_3_reg_1938;
reg   [0:0] icmp_ln13_3_reg_1938_pp1_iter3_reg;
wire   [4:0] i_fu_1267_p2;
reg   [4:0] i_reg_1639;
wire    ap_CS_fsm_state2;
wire   [9:0] ix_in_fu_1273_p2;
reg   [9:0] ix_in_reg_1644;
wire   [0:0] icmp_ln23_fu_1261_p2;
reg   [4:0] conv_1_input_0_addr_reg_1649;
reg   [4:0] conv_1_input_1_addr_reg_1654;
reg   [4:0] conv_1_input_2_addr_reg_1659;
reg   [4:0] conv_1_input_3_addr_reg_1664;
reg   [4:0] conv_1_input_4_addr_reg_1669;
reg   [4:0] conv_1_input_5_addr_reg_1674;
reg   [4:0] conv_1_input_6_addr_reg_1679;
reg   [4:0] conv_1_input_7_addr_reg_1684;
reg   [4:0] conv_1_input_8_addr_reg_1689;
reg   [4:0] conv_1_input_9_addr_reg_1694;
reg   [4:0] conv_1_input_10_add_reg_1699;
reg   [4:0] conv_1_input_11_add_reg_1704;
reg   [4:0] conv_1_input_12_add_reg_1709;
reg   [4:0] conv_1_input_13_add_reg_1714;
reg   [4:0] conv_1_input_14_add_reg_1719;
reg   [4:0] conv_1_input_15_add_reg_1724;
reg   [4:0] conv_1_input_16_add_reg_1729;
reg   [4:0] conv_1_input_17_add_reg_1734;
reg   [4:0] conv_1_input_18_add_reg_1739;
reg   [4:0] conv_1_input_19_add_reg_1744;
reg   [4:0] conv_1_input_20_add_reg_1749;
reg   [4:0] conv_1_input_21_add_reg_1754;
reg   [4:0] conv_1_input_22_add_reg_1759;
reg   [4:0] conv_1_input_23_add_reg_1764;
reg   [4:0] conv_1_input_24_add_reg_1769;
reg   [4:0] conv_1_input_25_add_reg_1774;
reg   [4:0] conv_1_input_26_add_reg_1779;
reg   [4:0] conv_1_input_27_add_reg_1784;
wire   [4:0] j_2_fu_1317_p2;
reg   [4:0] j_2_reg_1792;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln25_fu_1311_p2;
wire   [9:0] add_ln28_fu_1328_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln9_fu_1334_p2;
wire   [14:0] add_ln9_fu_1340_p2;
reg   [14:0] add_ln9_reg_1811;
wire   [0:0] icmp_ln13_fu_1352_p2;
reg   [0:0] icmp_ln13_reg_1816;
wire   [8:0] select_ln14_1_fu_1358_p3;
reg   [8:0] select_ln14_1_reg_1821;
wire   [5:0] select_ln14_2_fu_1366_p3;
reg   [5:0] select_ln14_2_reg_1826;
reg   [5:0] select_ln14_2_reg_1826_pp0_iter1_reg;
wire   [8:0] j_fu_1391_p2;
reg   [8:0] j_reg_1852;
wire   [31:0] select_ln14_fu_1396_p3;
wire   [0:0] icmp_ln13_1_fu_1404_p2;
reg   [0:0] icmp_ln13_1_reg_1863_pp0_iter2_reg;
wire   [63:0] zext_ln14_fu_1409_p1;
reg   [63:0] zext_ln14_reg_1867;
reg   [63:0] zext_ln14_reg_1867_pp0_iter3_reg;
wire   [0:0] icmp_ln9_1_fu_1464_p2;
wire   [10:0] add_ln9_2_fu_1470_p2;
reg   [10:0] add_ln9_2_reg_1886;
wire   [0:0] icmp_ln13_2_fu_1482_p2;
reg   [0:0] icmp_ln13_2_reg_1891;
wire   [5:0] select_ln14_4_fu_1488_p3;
reg   [5:0] select_ln14_4_reg_1896;
wire   [4:0] select_ln14_5_fu_1496_p3;
reg   [4:0] select_ln14_5_reg_1901;
reg   [4:0] select_ln14_5_reg_1901_pp1_iter1_reg;
wire   [5:0] j_1_fu_1554_p2;
reg   [5:0] j_1_reg_1927;
wire   [31:0] select_ln14_3_fu_1559_p3;
wire   [0:0] icmp_ln13_3_fu_1567_p2;
reg   [0:0] icmp_ln13_3_reg_1938_pp1_iter2_reg;
wire   [63:0] zext_ln14_7_fu_1572_p1;
reg   [63:0] zext_ln14_7_reg_1942;
reg   [63:0] zext_ln14_7_reg_1942_pp1_iter3_reg;
wire    ap_CS_fsm_state14;
wire    grp_flat_fu_1216_ap_ready;
wire    grp_flat_fu_1216_ap_done;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_CS_fsm_state27;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state28;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage2_subdone;
reg   [4:0] conv_1_input_0_address0;
reg    conv_1_input_0_ce0;
reg    conv_1_input_0_we0;
wire   [31:0] conv_1_input_0_q0;
reg    conv_1_input_0_ce1;
wire   [31:0] conv_1_input_0_q1;
reg   [4:0] conv_1_input_1_address0;
reg    conv_1_input_1_ce0;
reg    conv_1_input_1_we0;
wire   [31:0] conv_1_input_1_q0;
reg    conv_1_input_1_ce1;
wire   [31:0] conv_1_input_1_q1;
reg   [4:0] conv_1_input_2_address0;
reg    conv_1_input_2_ce0;
reg    conv_1_input_2_we0;
wire   [31:0] conv_1_input_2_q0;
reg    conv_1_input_2_ce1;
wire   [31:0] conv_1_input_2_q1;
reg   [4:0] conv_1_input_3_address0;
reg    conv_1_input_3_ce0;
reg    conv_1_input_3_we0;
wire   [31:0] conv_1_input_3_q0;
reg    conv_1_input_3_ce1;
wire   [31:0] conv_1_input_3_q1;
reg   [4:0] conv_1_input_4_address0;
reg    conv_1_input_4_ce0;
reg    conv_1_input_4_we0;
wire   [31:0] conv_1_input_4_q0;
reg    conv_1_input_4_ce1;
wire   [31:0] conv_1_input_4_q1;
reg   [4:0] conv_1_input_5_address0;
reg    conv_1_input_5_ce0;
reg    conv_1_input_5_we0;
wire   [31:0] conv_1_input_5_q0;
reg    conv_1_input_5_ce1;
wire   [31:0] conv_1_input_5_q1;
reg   [4:0] conv_1_input_6_address0;
reg    conv_1_input_6_ce0;
reg    conv_1_input_6_we0;
wire   [31:0] conv_1_input_6_q0;
reg    conv_1_input_6_ce1;
wire   [31:0] conv_1_input_6_q1;
reg   [4:0] conv_1_input_7_address0;
reg    conv_1_input_7_ce0;
reg    conv_1_input_7_we0;
wire   [31:0] conv_1_input_7_q0;
reg    conv_1_input_7_ce1;
wire   [31:0] conv_1_input_7_q1;
reg   [4:0] conv_1_input_8_address0;
reg    conv_1_input_8_ce0;
reg    conv_1_input_8_we0;
wire   [31:0] conv_1_input_8_q0;
reg    conv_1_input_8_ce1;
wire   [31:0] conv_1_input_8_q1;
reg   [4:0] conv_1_input_9_address0;
reg    conv_1_input_9_ce0;
reg    conv_1_input_9_we0;
wire   [31:0] conv_1_input_9_q0;
reg    conv_1_input_9_ce1;
wire   [31:0] conv_1_input_9_q1;
reg   [4:0] conv_1_input_10_address0;
reg    conv_1_input_10_ce0;
reg    conv_1_input_10_we0;
wire   [31:0] conv_1_input_10_q0;
reg    conv_1_input_10_ce1;
wire   [31:0] conv_1_input_10_q1;
reg   [4:0] conv_1_input_11_address0;
reg    conv_1_input_11_ce0;
reg    conv_1_input_11_we0;
wire   [31:0] conv_1_input_11_q0;
reg    conv_1_input_11_ce1;
wire   [31:0] conv_1_input_11_q1;
reg   [4:0] conv_1_input_12_address0;
reg    conv_1_input_12_ce0;
reg    conv_1_input_12_we0;
wire   [31:0] conv_1_input_12_q0;
reg    conv_1_input_12_ce1;
wire   [31:0] conv_1_input_12_q1;
reg   [4:0] conv_1_input_13_address0;
reg    conv_1_input_13_ce0;
reg    conv_1_input_13_we0;
wire   [31:0] conv_1_input_13_q0;
reg    conv_1_input_13_ce1;
wire   [31:0] conv_1_input_13_q1;
reg   [4:0] conv_1_input_14_address0;
reg    conv_1_input_14_ce0;
reg    conv_1_input_14_we0;
wire   [31:0] conv_1_input_14_q0;
reg    conv_1_input_14_ce1;
wire   [31:0] conv_1_input_14_q1;
reg   [4:0] conv_1_input_15_address0;
reg    conv_1_input_15_ce0;
reg    conv_1_input_15_we0;
wire   [31:0] conv_1_input_15_q0;
reg    conv_1_input_15_ce1;
wire   [31:0] conv_1_input_15_q1;
reg   [4:0] conv_1_input_16_address0;
reg    conv_1_input_16_ce0;
reg    conv_1_input_16_we0;
wire   [31:0] conv_1_input_16_q0;
reg    conv_1_input_16_ce1;
wire   [31:0] conv_1_input_16_q1;
reg   [4:0] conv_1_input_17_address0;
reg    conv_1_input_17_ce0;
reg    conv_1_input_17_we0;
wire   [31:0] conv_1_input_17_q0;
reg    conv_1_input_17_ce1;
wire   [31:0] conv_1_input_17_q1;
reg   [4:0] conv_1_input_18_address0;
reg    conv_1_input_18_ce0;
reg    conv_1_input_18_we0;
wire   [31:0] conv_1_input_18_q0;
reg    conv_1_input_18_ce1;
wire   [31:0] conv_1_input_18_q1;
reg   [4:0] conv_1_input_19_address0;
reg    conv_1_input_19_ce0;
reg    conv_1_input_19_we0;
wire   [31:0] conv_1_input_19_q0;
reg    conv_1_input_19_ce1;
wire   [31:0] conv_1_input_19_q1;
reg   [4:0] conv_1_input_20_address0;
reg    conv_1_input_20_ce0;
reg    conv_1_input_20_we0;
wire   [31:0] conv_1_input_20_q0;
reg    conv_1_input_20_ce1;
wire   [31:0] conv_1_input_20_q1;
reg   [4:0] conv_1_input_21_address0;
reg    conv_1_input_21_ce0;
reg    conv_1_input_21_we0;
wire   [31:0] conv_1_input_21_q0;
reg    conv_1_input_21_ce1;
wire   [31:0] conv_1_input_21_q1;
reg   [4:0] conv_1_input_22_address0;
reg    conv_1_input_22_ce0;
reg    conv_1_input_22_we0;
wire   [31:0] conv_1_input_22_q0;
reg    conv_1_input_22_ce1;
wire   [31:0] conv_1_input_22_q1;
reg   [4:0] conv_1_input_23_address0;
reg    conv_1_input_23_ce0;
reg    conv_1_input_23_we0;
wire   [31:0] conv_1_input_23_q0;
reg    conv_1_input_23_ce1;
wire   [31:0] conv_1_input_23_q1;
reg   [4:0] conv_1_input_24_address0;
reg    conv_1_input_24_ce0;
reg    conv_1_input_24_we0;
wire   [31:0] conv_1_input_24_q0;
reg    conv_1_input_24_ce1;
wire   [31:0] conv_1_input_24_q1;
reg   [4:0] conv_1_input_25_address0;
reg    conv_1_input_25_ce0;
reg    conv_1_input_25_we0;
wire   [31:0] conv_1_input_25_q0;
reg    conv_1_input_25_ce1;
wire   [31:0] conv_1_input_25_q1;
reg   [4:0] conv_1_input_26_address0;
reg    conv_1_input_26_ce0;
reg    conv_1_input_26_we0;
wire   [31:0] conv_1_input_26_q0;
reg    conv_1_input_26_ce1;
wire   [31:0] conv_1_input_26_q1;
reg   [4:0] conv_1_input_27_address0;
reg    conv_1_input_27_ce0;
reg    conv_1_input_27_we0;
wire   [31:0] conv_1_input_27_q0;
reg    conv_1_input_27_ce1;
wire   [31:0] conv_1_input_27_q1;
wire    grp_conv_1_fu_1016_ap_start;
wire    grp_conv_1_fu_1016_ap_done;
wire    grp_conv_1_fu_1016_ap_idle;
wire    grp_conv_1_fu_1016_ap_ready;
wire   [4:0] grp_conv_1_fu_1016_input_0_address0;
wire    grp_conv_1_fu_1016_input_0_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_0_address1;
wire    grp_conv_1_fu_1016_input_0_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_1_address0;
wire    grp_conv_1_fu_1016_input_1_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_1_address1;
wire    grp_conv_1_fu_1016_input_1_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_2_address0;
wire    grp_conv_1_fu_1016_input_2_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_2_address1;
wire    grp_conv_1_fu_1016_input_2_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_3_address0;
wire    grp_conv_1_fu_1016_input_3_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_3_address1;
wire    grp_conv_1_fu_1016_input_3_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_4_address0;
wire    grp_conv_1_fu_1016_input_4_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_4_address1;
wire    grp_conv_1_fu_1016_input_4_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_5_address0;
wire    grp_conv_1_fu_1016_input_5_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_5_address1;
wire    grp_conv_1_fu_1016_input_5_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_6_address0;
wire    grp_conv_1_fu_1016_input_6_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_6_address1;
wire    grp_conv_1_fu_1016_input_6_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_7_address0;
wire    grp_conv_1_fu_1016_input_7_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_7_address1;
wire    grp_conv_1_fu_1016_input_7_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_8_address0;
wire    grp_conv_1_fu_1016_input_8_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_8_address1;
wire    grp_conv_1_fu_1016_input_8_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_9_address0;
wire    grp_conv_1_fu_1016_input_9_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_9_address1;
wire    grp_conv_1_fu_1016_input_9_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_10_address0;
wire    grp_conv_1_fu_1016_input_10_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_10_address1;
wire    grp_conv_1_fu_1016_input_10_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_11_address0;
wire    grp_conv_1_fu_1016_input_11_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_11_address1;
wire    grp_conv_1_fu_1016_input_11_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_12_address0;
wire    grp_conv_1_fu_1016_input_12_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_12_address1;
wire    grp_conv_1_fu_1016_input_12_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_13_address0;
wire    grp_conv_1_fu_1016_input_13_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_13_address1;
wire    grp_conv_1_fu_1016_input_13_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_14_address0;
wire    grp_conv_1_fu_1016_input_14_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_14_address1;
wire    grp_conv_1_fu_1016_input_14_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_15_address0;
wire    grp_conv_1_fu_1016_input_15_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_15_address1;
wire    grp_conv_1_fu_1016_input_15_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_16_address0;
wire    grp_conv_1_fu_1016_input_16_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_16_address1;
wire    grp_conv_1_fu_1016_input_16_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_17_address0;
wire    grp_conv_1_fu_1016_input_17_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_17_address1;
wire    grp_conv_1_fu_1016_input_17_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_18_address0;
wire    grp_conv_1_fu_1016_input_18_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_18_address1;
wire    grp_conv_1_fu_1016_input_18_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_19_address0;
wire    grp_conv_1_fu_1016_input_19_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_19_address1;
wire    grp_conv_1_fu_1016_input_19_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_20_address0;
wire    grp_conv_1_fu_1016_input_20_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_20_address1;
wire    grp_conv_1_fu_1016_input_20_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_21_address0;
wire    grp_conv_1_fu_1016_input_21_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_21_address1;
wire    grp_conv_1_fu_1016_input_21_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_22_address0;
wire    grp_conv_1_fu_1016_input_22_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_22_address1;
wire    grp_conv_1_fu_1016_input_22_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_23_address0;
wire    grp_conv_1_fu_1016_input_23_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_23_address1;
wire    grp_conv_1_fu_1016_input_23_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_24_address0;
wire    grp_conv_1_fu_1016_input_24_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_24_address1;
wire    grp_conv_1_fu_1016_input_24_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_25_address0;
wire    grp_conv_1_fu_1016_input_25_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_25_address1;
wire    grp_conv_1_fu_1016_input_25_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_26_address0;
wire    grp_conv_1_fu_1016_input_26_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_26_address1;
wire    grp_conv_1_fu_1016_input_26_ce1;
wire   [4:0] grp_conv_1_fu_1016_input_27_address0;
wire    grp_conv_1_fu_1016_input_27_ce0;
wire   [4:0] grp_conv_1_fu_1016_input_27_address1;
wire    grp_conv_1_fu_1016_input_27_ce1;
wire   [11:0] grp_conv_1_fu_1016_conv_out_address0;
wire    grp_conv_1_fu_1016_conv_out_ce0;
wire    grp_conv_1_fu_1016_conv_out_we0;
wire   [31:0] grp_conv_1_fu_1016_conv_out_d0;
wire    grp_conv_2_fu_1050_ap_start;
wire    grp_conv_2_fu_1050_ap_done;
wire    grp_conv_2_fu_1050_ap_idle;
wire    grp_conv_2_fu_1050_ap_ready;
wire   [10:0] grp_conv_2_fu_1050_conv_out_address0;
wire    grp_conv_2_fu_1050_conv_out_ce0;
wire    grp_conv_2_fu_1050_conv_out_we0;
wire   [31:0] grp_conv_2_fu_1050_conv_out_d0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_0_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_0_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_0_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_0_ce1;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_1_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_1_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_1_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_1_ce1;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_2_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_2_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_2_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_2_ce1;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_3_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_3_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_3_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_3_ce1;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_4_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_4_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_4_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_4_ce1;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_5_address0;
wire    grp_conv_2_fu_1050_max_pool_1_out_5_ce0;
wire   [7:0] grp_conv_2_fu_1050_max_pool_1_out_5_address1;
wire    grp_conv_2_fu_1050_max_pool_1_out_5_ce1;
wire    grp_dense_out_fu_1178_ap_start;
wire    grp_dense_out_fu_1178_ap_done;
wire    grp_dense_out_fu_1178_ap_idle;
wire    grp_dense_out_fu_1178_ap_ready;
wire   [31:0] grp_dense_out_fu_1178_prediction_Addr_A;
wire    grp_dense_out_fu_1178_prediction_EN_A;
wire   [3:0] grp_dense_out_fu_1178_prediction_WEN_A;
wire   [31:0] grp_dense_out_fu_1178_prediction_Din_A;
wire   [4:0] grp_dense_out_fu_1178_dense_2_out_address0;
wire    grp_dense_out_fu_1178_dense_2_out_ce0;
wire    grp_max_pool_2_fu_1190_ap_start;
wire    grp_max_pool_2_fu_1190_ap_done;
wire    grp_max_pool_2_fu_1190_ap_idle;
wire    grp_max_pool_2_fu_1190_ap_ready;
wire   [8:0] grp_max_pool_2_fu_1190_max_pool_out_address0;
wire    grp_max_pool_2_fu_1190_max_pool_out_ce0;
wire    grp_max_pool_2_fu_1190_max_pool_out_we0;
wire   [31:0] grp_max_pool_2_fu_1190_max_pool_out_d0;
wire   [10:0] grp_max_pool_2_fu_1190_conv_2_out_address0;
wire    grp_max_pool_2_fu_1190_conv_2_out_ce0;
wire   [10:0] grp_max_pool_2_fu_1190_conv_2_out_address1;
wire    grp_max_pool_2_fu_1190_conv_2_out_ce1;
wire    grp_max_pool_1_fu_1198_ap_start;
wire    grp_max_pool_1_fu_1198_ap_done;
wire    grp_max_pool_1_fu_1198_ap_idle;
wire    grp_max_pool_1_fu_1198_ap_ready;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_0_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_0_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_0_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_0_d0;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_1_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_1_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_1_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_1_d0;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_2_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_2_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_2_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_2_d0;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_3_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_3_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_3_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_3_d0;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_4_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_4_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_4_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_4_d0;
wire   [7:0] grp_max_pool_1_fu_1198_max_pool_out_5_address0;
wire    grp_max_pool_1_fu_1198_max_pool_out_5_ce0;
wire    grp_max_pool_1_fu_1198_max_pool_out_5_we0;
wire   [31:0] grp_max_pool_1_fu_1198_max_pool_out_5_d0;
wire   [11:0] grp_max_pool_1_fu_1198_conv_1_out_address0;
wire    grp_max_pool_1_fu_1198_conv_1_out_ce0;
wire   [11:0] grp_max_pool_1_fu_1198_conv_1_out_address1;
wire    grp_max_pool_1_fu_1198_conv_1_out_ce1;
wire    grp_flat_fu_1216_ap_start;
wire    grp_flat_fu_1216_ap_idle;
wire   [8:0] grp_flat_fu_1216_flat_array_address0;
wire    grp_flat_fu_1216_flat_array_ce0;
wire    grp_flat_fu_1216_flat_array_we0;
wire   [31:0] grp_flat_fu_1216_flat_array_d0;
wire   [8:0] grp_flat_fu_1216_max_pool_2_out_address0;
wire    grp_flat_fu_1216_max_pool_2_out_ce0;
reg   [9:0] ix_in_0_reg_880;
reg   [4:0] i_0_reg_892;
reg   [9:0] ix_in_1_reg_903;
reg   [4:0] j_0_reg_914;
reg   [14:0] ap_phi_mux_indvar_flatten_phi_fu_930_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_i_0_i_phi_fu_941_p4;
reg   [31:0] ap_phi_mux_sum_0_i_phi_fu_952_p4;
reg   [8:0] ap_phi_mux_j_0_i_phi_fu_964_p4;
reg   [10:0] ap_phi_mux_indvar_flatten11_phi_fu_975_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_i_0_i32_phi_fu_986_p4;
reg   [31:0] ap_phi_mux_sum_0_i35_phi_fu_997_p4;
reg   [5:0] ap_phi_mux_j_0_i36_phi_fu_1009_p4;
reg    grp_conv_1_fu_1016_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_conv_2_fu_1050_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_dense_out_fu_1178_ap_start_reg;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg    grp_max_pool_2_fu_1190_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_max_pool_1_fu_1198_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_flat_fu_1216_ap_start_reg;
wire    ap_CS_fsm_state13;
wire   [63:0] zext_ln27_fu_1279_p1;
wire   [63:0] zext_ln27_1_fu_1323_p1;
wire   [63:0] zext_ln14_9_fu_1387_p1;
wire   [63:0] zext_ln14_5_fu_1378_p1;
wire    ap_block_pp0_stage2;
wire  signed [63:0] sext_ln14_fu_1549_p1;
wire   [63:0] zext_ln14_6_fu_1508_p1;
wire    ap_block_pp1_stage2;
wire   [31:0] cnn_input_Addr_A_orig;
wire    ap_CS_fsm_state4;
reg   [31:0] grp_fu_1224_p0;
reg   [31:0] grp_fu_1224_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp1_stage1;
reg   [31:0] grp_fu_1230_p0;
reg   [31:0] grp_fu_1230_p1;
wire   [5:0] i_1_fu_1346_p2;
wire   [14:0] grp_fu_1627_p3;
wire   [31:0] bitcast_ln19_fu_1413_p1;
wire   [7:0] tmp_fu_1417_p4;
wire   [22:0] trunc_ln19_fu_1427_p1;
wire   [0:0] icmp_ln19_1_fu_1437_p2;
wire   [0:0] icmp_ln19_fu_1431_p2;
wire   [0:0] or_ln19_fu_1443_p2;
wire   [0:0] grp_fu_1238_p2;
wire   [0:0] and_ln19_fu_1449_p2;
wire   [4:0] i_2_fu_1476_p2;
wire   [10:0] tmp_16_fu_1513_p3;
wire   [6:0] tmp_17_fu_1525_p3;
wire   [11:0] zext_ln14_10_fu_1521_p1;
wire   [11:0] zext_ln14_11_fu_1533_p1;
wire   [11:0] sub_ln14_fu_1537_p2;
wire   [11:0] zext_ln13_1_fu_1504_p1;
wire   [11:0] add_ln14_3_fu_1543_p2;
wire   [31:0] bitcast_ln19_1_fu_1576_p1;
wire   [7:0] tmp_18_fu_1580_p4;
wire   [22:0] trunc_ln19_1_fu_1590_p1;
wire   [0:0] icmp_ln19_3_fu_1600_p2;
wire   [0:0] icmp_ln19_2_fu_1594_p2;
wire   [0:0] or_ln19_1_fu_1606_p2;
wire   [0:0] and_ln19_1_fu_1612_p2;
wire   [8:0] grp_fu_1627_p0;
wire   [6:0] grp_fu_1627_p1;
wire   [5:0] grp_fu_1627_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp1_stage1_00001;
reg   [22:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [14:0] grp_fu_1627_p00;
wire   [14:0] grp_fu_1627_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_conv_1_fu_1016_ap_start_reg = 1'b0;
#0 grp_conv_2_fu_1050_ap_start_reg = 1'b0;
#0 grp_dense_out_fu_1178_ap_start_reg = 1'b0;
#0 grp_max_pool_2_fu_1190_ap_start_reg = 1'b0;
#0 grp_max_pool_1_fu_1198_ap_start_reg = 1'b0;
#0 grp_flat_fu_1216_ap_start_reg = 1'b0;
end

cnn_conv_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 4056 ),
    .AddressWidth( 12 ))
conv_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_out_address0),
    .ce0(conv_1_out_ce0),
    .we0(conv_1_out_we0),
    .d0(grp_conv_1_fu_1016_conv_out_d0),
    .q0(conv_1_out_q0),
    .address1(grp_max_pool_1_fu_1198_conv_1_out_address1),
    .ce1(conv_1_out_ce1),
    .q1(conv_1_out_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_0_address0),
    .ce0(max_pool_1_out_0_ce0),
    .we0(max_pool_1_out_0_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_0_d0),
    .q0(max_pool_1_out_0_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_0_address1),
    .ce1(max_pool_1_out_0_ce1),
    .q1(max_pool_1_out_0_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_1_address0),
    .ce0(max_pool_1_out_1_ce0),
    .we0(max_pool_1_out_1_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_1_d0),
    .q0(max_pool_1_out_1_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_1_address1),
    .ce1(max_pool_1_out_1_ce1),
    .q1(max_pool_1_out_1_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_2_address0),
    .ce0(max_pool_1_out_2_ce0),
    .we0(max_pool_1_out_2_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_2_d0),
    .q0(max_pool_1_out_2_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_2_address1),
    .ce1(max_pool_1_out_2_ce1),
    .q1(max_pool_1_out_2_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_3_address0),
    .ce0(max_pool_1_out_3_ce0),
    .we0(max_pool_1_out_3_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_3_d0),
    .q0(max_pool_1_out_3_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_3_address1),
    .ce1(max_pool_1_out_3_ce1),
    .q1(max_pool_1_out_3_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_4_address0),
    .ce0(max_pool_1_out_4_ce0),
    .we0(max_pool_1_out_4_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_4_d0),
    .q0(max_pool_1_out_4_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_4_address1),
    .ce1(max_pool_1_out_4_ce1),
    .q1(max_pool_1_out_4_q1)
);

cnn_max_pool_1_oubdk #(
    .DataWidth( 32 ),
    .AddressRange( 169 ),
    .AddressWidth( 8 ))
max_pool_1_out_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_1_out_5_address0),
    .ce0(max_pool_1_out_5_ce0),
    .we0(max_pool_1_out_5_we0),
    .d0(grp_max_pool_1_fu_1198_max_pool_out_5_d0),
    .q0(max_pool_1_out_5_q0),
    .address1(grp_conv_2_fu_1050_max_pool_1_out_5_address1),
    .ce1(max_pool_1_out_5_ce1),
    .q1(max_pool_1_out_5_q1)
);

cnn_conv_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 1936 ),
    .AddressWidth( 11 ))
conv_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_2_out_address0),
    .ce0(conv_2_out_ce0),
    .we0(conv_2_out_we0),
    .d0(grp_conv_2_fu_1050_conv_out_d0),
    .q0(conv_2_out_q0),
    .address1(grp_max_pool_2_fu_1190_conv_2_out_address1),
    .ce1(conv_2_out_ce1),
    .q1(conv_2_out_q1)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
max_pool_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(max_pool_2_out_address0),
    .ce0(max_pool_2_out_ce0),
    .we0(max_pool_2_out_we0),
    .d0(grp_max_pool_2_fu_1190_max_pool_out_d0),
    .q0(max_pool_2_out_q0)
);

cnn_max_pool_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 400 ),
    .AddressWidth( 9 ))
flat_array_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(flat_array_address0),
    .ce0(flat_array_ce0),
    .we0(flat_array_we0),
    .d0(grp_flat_fu_1216_flat_array_d0),
    .q0(flat_array_q0)
);

cnn_dense_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_bias_address0),
    .ce0(dense_1_bias_ce0),
    .q0(dense_1_bias_q0)
);

cnn_dense_1_out #(
    .DataWidth( 32 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
dense_1_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_out_address0),
    .ce0(dense_1_out_ce0),
    .we0(dense_1_out_we0),
    .d0(dense_1_out_d0),
    .q0(dense_1_out_q0)
);

cnn_dense_1_weights #(
    .DataWidth( 32 ),
    .AddressRange( 20000 ),
    .AddressWidth( 15 ))
dense_1_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_1_weights_address0),
    .ce0(dense_1_weights_ce0),
    .q0(dense_1_weights_q0)
);

cnn_dense_2_bias #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_bias_address0),
    .ce0(dense_2_bias_ce0),
    .q0(dense_2_bias_q0)
);

cnn_dense_2_out #(
    .DataWidth( 32 ),
    .AddressRange( 30 ),
    .AddressWidth( 5 ))
dense_2_out_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_out_address0),
    .ce0(dense_2_out_ce0),
    .we0(dense_2_out_we0),
    .d0(dense_2_out_d0),
    .q0(dense_2_out_q0)
);

cnn_dense_2_weights #(
    .DataWidth( 32 ),
    .AddressRange( 1500 ),
    .AddressWidth( 11 ))
dense_2_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(dense_2_weights_address0),
    .ce0(dense_2_weights_ce0),
    .q0(dense_2_weights_q0)
);

cnn_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
cnn_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_0_address0),
    .ce0(conv_1_input_0_ce0),
    .we0(conv_1_input_0_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_0_q0),
    .address1(grp_conv_1_fu_1016_input_0_address1),
    .ce1(conv_1_input_0_ce1),
    .q1(conv_1_input_0_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_1_address0),
    .ce0(conv_1_input_1_ce0),
    .we0(conv_1_input_1_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_1_q0),
    .address1(grp_conv_1_fu_1016_input_1_address1),
    .ce1(conv_1_input_1_ce1),
    .q1(conv_1_input_1_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_2_address0),
    .ce0(conv_1_input_2_ce0),
    .we0(conv_1_input_2_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_2_q0),
    .address1(grp_conv_1_fu_1016_input_2_address1),
    .ce1(conv_1_input_2_ce1),
    .q1(conv_1_input_2_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_3_address0),
    .ce0(conv_1_input_3_ce0),
    .we0(conv_1_input_3_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_3_q0),
    .address1(grp_conv_1_fu_1016_input_3_address1),
    .ce1(conv_1_input_3_ce1),
    .q1(conv_1_input_3_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_4_address0),
    .ce0(conv_1_input_4_ce0),
    .we0(conv_1_input_4_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_4_q0),
    .address1(grp_conv_1_fu_1016_input_4_address1),
    .ce1(conv_1_input_4_ce1),
    .q1(conv_1_input_4_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_5_address0),
    .ce0(conv_1_input_5_ce0),
    .we0(conv_1_input_5_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_5_q0),
    .address1(grp_conv_1_fu_1016_input_5_address1),
    .ce1(conv_1_input_5_ce1),
    .q1(conv_1_input_5_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_6_address0),
    .ce0(conv_1_input_6_ce0),
    .we0(conv_1_input_6_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_6_q0),
    .address1(grp_conv_1_fu_1016_input_6_address1),
    .ce1(conv_1_input_6_ce1),
    .q1(conv_1_input_6_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_7_address0),
    .ce0(conv_1_input_7_ce0),
    .we0(conv_1_input_7_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_7_q0),
    .address1(grp_conv_1_fu_1016_input_7_address1),
    .ce1(conv_1_input_7_ce1),
    .q1(conv_1_input_7_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_8_address0),
    .ce0(conv_1_input_8_ce0),
    .we0(conv_1_input_8_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_8_q0),
    .address1(grp_conv_1_fu_1016_input_8_address1),
    .ce1(conv_1_input_8_ce1),
    .q1(conv_1_input_8_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_9_address0),
    .ce0(conv_1_input_9_ce0),
    .we0(conv_1_input_9_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_9_q0),
    .address1(grp_conv_1_fu_1016_input_9_address1),
    .ce1(conv_1_input_9_ce1),
    .q1(conv_1_input_9_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_10_address0),
    .ce0(conv_1_input_10_ce0),
    .we0(conv_1_input_10_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_10_q0),
    .address1(grp_conv_1_fu_1016_input_10_address1),
    .ce1(conv_1_input_10_ce1),
    .q1(conv_1_input_10_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_11_address0),
    .ce0(conv_1_input_11_ce0),
    .we0(conv_1_input_11_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_11_q0),
    .address1(grp_conv_1_fu_1016_input_11_address1),
    .ce1(conv_1_input_11_ce1),
    .q1(conv_1_input_11_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_12_address0),
    .ce0(conv_1_input_12_ce0),
    .we0(conv_1_input_12_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_12_q0),
    .address1(grp_conv_1_fu_1016_input_12_address1),
    .ce1(conv_1_input_12_ce1),
    .q1(conv_1_input_12_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_13_address0),
    .ce0(conv_1_input_13_ce0),
    .we0(conv_1_input_13_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_13_q0),
    .address1(grp_conv_1_fu_1016_input_13_address1),
    .ce1(conv_1_input_13_ce1),
    .q1(conv_1_input_13_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_14_address0),
    .ce0(conv_1_input_14_ce0),
    .we0(conv_1_input_14_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_14_q0),
    .address1(grp_conv_1_fu_1016_input_14_address1),
    .ce1(conv_1_input_14_ce1),
    .q1(conv_1_input_14_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_15_address0),
    .ce0(conv_1_input_15_ce0),
    .we0(conv_1_input_15_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_15_q0),
    .address1(grp_conv_1_fu_1016_input_15_address1),
    .ce1(conv_1_input_15_ce1),
    .q1(conv_1_input_15_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_16_address0),
    .ce0(conv_1_input_16_ce0),
    .we0(conv_1_input_16_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_16_q0),
    .address1(grp_conv_1_fu_1016_input_16_address1),
    .ce1(conv_1_input_16_ce1),
    .q1(conv_1_input_16_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_17_address0),
    .ce0(conv_1_input_17_ce0),
    .we0(conv_1_input_17_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_17_q0),
    .address1(grp_conv_1_fu_1016_input_17_address1),
    .ce1(conv_1_input_17_ce1),
    .q1(conv_1_input_17_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_18_address0),
    .ce0(conv_1_input_18_ce0),
    .we0(conv_1_input_18_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_18_q0),
    .address1(grp_conv_1_fu_1016_input_18_address1),
    .ce1(conv_1_input_18_ce1),
    .q1(conv_1_input_18_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_19_address0),
    .ce0(conv_1_input_19_ce0),
    .we0(conv_1_input_19_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_19_q0),
    .address1(grp_conv_1_fu_1016_input_19_address1),
    .ce1(conv_1_input_19_ce1),
    .q1(conv_1_input_19_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_20_address0),
    .ce0(conv_1_input_20_ce0),
    .we0(conv_1_input_20_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_20_q0),
    .address1(grp_conv_1_fu_1016_input_20_address1),
    .ce1(conv_1_input_20_ce1),
    .q1(conv_1_input_20_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_21_address0),
    .ce0(conv_1_input_21_ce0),
    .we0(conv_1_input_21_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_21_q0),
    .address1(grp_conv_1_fu_1016_input_21_address1),
    .ce1(conv_1_input_21_ce1),
    .q1(conv_1_input_21_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_22_address0),
    .ce0(conv_1_input_22_ce0),
    .we0(conv_1_input_22_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_22_q0),
    .address1(grp_conv_1_fu_1016_input_22_address1),
    .ce1(conv_1_input_22_ce1),
    .q1(conv_1_input_22_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_23_address0),
    .ce0(conv_1_input_23_ce0),
    .we0(conv_1_input_23_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_23_q0),
    .address1(grp_conv_1_fu_1016_input_23_address1),
    .ce1(conv_1_input_23_ce1),
    .q1(conv_1_input_23_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_24_address0),
    .ce0(conv_1_input_24_ce0),
    .we0(conv_1_input_24_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_24_q0),
    .address1(grp_conv_1_fu_1016_input_24_address1),
    .ce1(conv_1_input_24_ce1),
    .q1(conv_1_input_24_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_25_address0),
    .ce0(conv_1_input_25_ce0),
    .we0(conv_1_input_25_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_25_q0),
    .address1(grp_conv_1_fu_1016_input_25_address1),
    .ce1(conv_1_input_25_ce1),
    .q1(conv_1_input_25_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_26_address0),
    .ce0(conv_1_input_26_ce0),
    .we0(conv_1_input_26_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_26_q0),
    .address1(grp_conv_1_fu_1016_input_26_address1),
    .ce1(conv_1_input_26_ce1),
    .q1(conv_1_input_26_q1)
);

cnn_conv_1_input_0 #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
conv_1_input_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_1_input_27_address0),
    .ce0(conv_1_input_27_ce0),
    .we0(conv_1_input_27_we0),
    .d0(cnn_input_Dout_A),
    .q0(conv_1_input_27_q0),
    .address1(grp_conv_1_fu_1016_input_27_address1),
    .ce1(conv_1_input_27_ce1),
    .q1(conv_1_input_27_q1)
);

conv_1 grp_conv_1_fu_1016(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_1_fu_1016_ap_start),
    .ap_done(grp_conv_1_fu_1016_ap_done),
    .ap_idle(grp_conv_1_fu_1016_ap_idle),
    .ap_ready(grp_conv_1_fu_1016_ap_ready),
    .input_0_address0(grp_conv_1_fu_1016_input_0_address0),
    .input_0_ce0(grp_conv_1_fu_1016_input_0_ce0),
    .input_0_q0(conv_1_input_0_q0),
    .input_0_address1(grp_conv_1_fu_1016_input_0_address1),
    .input_0_ce1(grp_conv_1_fu_1016_input_0_ce1),
    .input_0_q1(conv_1_input_0_q1),
    .input_1_address0(grp_conv_1_fu_1016_input_1_address0),
    .input_1_ce0(grp_conv_1_fu_1016_input_1_ce0),
    .input_1_q0(conv_1_input_1_q0),
    .input_1_address1(grp_conv_1_fu_1016_input_1_address1),
    .input_1_ce1(grp_conv_1_fu_1016_input_1_ce1),
    .input_1_q1(conv_1_input_1_q1),
    .input_2_address0(grp_conv_1_fu_1016_input_2_address0),
    .input_2_ce0(grp_conv_1_fu_1016_input_2_ce0),
    .input_2_q0(conv_1_input_2_q0),
    .input_2_address1(grp_conv_1_fu_1016_input_2_address1),
    .input_2_ce1(grp_conv_1_fu_1016_input_2_ce1),
    .input_2_q1(conv_1_input_2_q1),
    .input_3_address0(grp_conv_1_fu_1016_input_3_address0),
    .input_3_ce0(grp_conv_1_fu_1016_input_3_ce0),
    .input_3_q0(conv_1_input_3_q0),
    .input_3_address1(grp_conv_1_fu_1016_input_3_address1),
    .input_3_ce1(grp_conv_1_fu_1016_input_3_ce1),
    .input_3_q1(conv_1_input_3_q1),
    .input_4_address0(grp_conv_1_fu_1016_input_4_address0),
    .input_4_ce0(grp_conv_1_fu_1016_input_4_ce0),
    .input_4_q0(conv_1_input_4_q0),
    .input_4_address1(grp_conv_1_fu_1016_input_4_address1),
    .input_4_ce1(grp_conv_1_fu_1016_input_4_ce1),
    .input_4_q1(conv_1_input_4_q1),
    .input_5_address0(grp_conv_1_fu_1016_input_5_address0),
    .input_5_ce0(grp_conv_1_fu_1016_input_5_ce0),
    .input_5_q0(conv_1_input_5_q0),
    .input_5_address1(grp_conv_1_fu_1016_input_5_address1),
    .input_5_ce1(grp_conv_1_fu_1016_input_5_ce1),
    .input_5_q1(conv_1_input_5_q1),
    .input_6_address0(grp_conv_1_fu_1016_input_6_address0),
    .input_6_ce0(grp_conv_1_fu_1016_input_6_ce0),
    .input_6_q0(conv_1_input_6_q0),
    .input_6_address1(grp_conv_1_fu_1016_input_6_address1),
    .input_6_ce1(grp_conv_1_fu_1016_input_6_ce1),
    .input_6_q1(conv_1_input_6_q1),
    .input_7_address0(grp_conv_1_fu_1016_input_7_address0),
    .input_7_ce0(grp_conv_1_fu_1016_input_7_ce0),
    .input_7_q0(conv_1_input_7_q0),
    .input_7_address1(grp_conv_1_fu_1016_input_7_address1),
    .input_7_ce1(grp_conv_1_fu_1016_input_7_ce1),
    .input_7_q1(conv_1_input_7_q1),
    .input_8_address0(grp_conv_1_fu_1016_input_8_address0),
    .input_8_ce0(grp_conv_1_fu_1016_input_8_ce0),
    .input_8_q0(conv_1_input_8_q0),
    .input_8_address1(grp_conv_1_fu_1016_input_8_address1),
    .input_8_ce1(grp_conv_1_fu_1016_input_8_ce1),
    .input_8_q1(conv_1_input_8_q1),
    .input_9_address0(grp_conv_1_fu_1016_input_9_address0),
    .input_9_ce0(grp_conv_1_fu_1016_input_9_ce0),
    .input_9_q0(conv_1_input_9_q0),
    .input_9_address1(grp_conv_1_fu_1016_input_9_address1),
    .input_9_ce1(grp_conv_1_fu_1016_input_9_ce1),
    .input_9_q1(conv_1_input_9_q1),
    .input_10_address0(grp_conv_1_fu_1016_input_10_address0),
    .input_10_ce0(grp_conv_1_fu_1016_input_10_ce0),
    .input_10_q0(conv_1_input_10_q0),
    .input_10_address1(grp_conv_1_fu_1016_input_10_address1),
    .input_10_ce1(grp_conv_1_fu_1016_input_10_ce1),
    .input_10_q1(conv_1_input_10_q1),
    .input_11_address0(grp_conv_1_fu_1016_input_11_address0),
    .input_11_ce0(grp_conv_1_fu_1016_input_11_ce0),
    .input_11_q0(conv_1_input_11_q0),
    .input_11_address1(grp_conv_1_fu_1016_input_11_address1),
    .input_11_ce1(grp_conv_1_fu_1016_input_11_ce1),
    .input_11_q1(conv_1_input_11_q1),
    .input_12_address0(grp_conv_1_fu_1016_input_12_address0),
    .input_12_ce0(grp_conv_1_fu_1016_input_12_ce0),
    .input_12_q0(conv_1_input_12_q0),
    .input_12_address1(grp_conv_1_fu_1016_input_12_address1),
    .input_12_ce1(grp_conv_1_fu_1016_input_12_ce1),
    .input_12_q1(conv_1_input_12_q1),
    .input_13_address0(grp_conv_1_fu_1016_input_13_address0),
    .input_13_ce0(grp_conv_1_fu_1016_input_13_ce0),
    .input_13_q0(conv_1_input_13_q0),
    .input_13_address1(grp_conv_1_fu_1016_input_13_address1),
    .input_13_ce1(grp_conv_1_fu_1016_input_13_ce1),
    .input_13_q1(conv_1_input_13_q1),
    .input_14_address0(grp_conv_1_fu_1016_input_14_address0),
    .input_14_ce0(grp_conv_1_fu_1016_input_14_ce0),
    .input_14_q0(conv_1_input_14_q0),
    .input_14_address1(grp_conv_1_fu_1016_input_14_address1),
    .input_14_ce1(grp_conv_1_fu_1016_input_14_ce1),
    .input_14_q1(conv_1_input_14_q1),
    .input_15_address0(grp_conv_1_fu_1016_input_15_address0),
    .input_15_ce0(grp_conv_1_fu_1016_input_15_ce0),
    .input_15_q0(conv_1_input_15_q0),
    .input_15_address1(grp_conv_1_fu_1016_input_15_address1),
    .input_15_ce1(grp_conv_1_fu_1016_input_15_ce1),
    .input_15_q1(conv_1_input_15_q1),
    .input_16_address0(grp_conv_1_fu_1016_input_16_address0),
    .input_16_ce0(grp_conv_1_fu_1016_input_16_ce0),
    .input_16_q0(conv_1_input_16_q0),
    .input_16_address1(grp_conv_1_fu_1016_input_16_address1),
    .input_16_ce1(grp_conv_1_fu_1016_input_16_ce1),
    .input_16_q1(conv_1_input_16_q1),
    .input_17_address0(grp_conv_1_fu_1016_input_17_address0),
    .input_17_ce0(grp_conv_1_fu_1016_input_17_ce0),
    .input_17_q0(conv_1_input_17_q0),
    .input_17_address1(grp_conv_1_fu_1016_input_17_address1),
    .input_17_ce1(grp_conv_1_fu_1016_input_17_ce1),
    .input_17_q1(conv_1_input_17_q1),
    .input_18_address0(grp_conv_1_fu_1016_input_18_address0),
    .input_18_ce0(grp_conv_1_fu_1016_input_18_ce0),
    .input_18_q0(conv_1_input_18_q0),
    .input_18_address1(grp_conv_1_fu_1016_input_18_address1),
    .input_18_ce1(grp_conv_1_fu_1016_input_18_ce1),
    .input_18_q1(conv_1_input_18_q1),
    .input_19_address0(grp_conv_1_fu_1016_input_19_address0),
    .input_19_ce0(grp_conv_1_fu_1016_input_19_ce0),
    .input_19_q0(conv_1_input_19_q0),
    .input_19_address1(grp_conv_1_fu_1016_input_19_address1),
    .input_19_ce1(grp_conv_1_fu_1016_input_19_ce1),
    .input_19_q1(conv_1_input_19_q1),
    .input_20_address0(grp_conv_1_fu_1016_input_20_address0),
    .input_20_ce0(grp_conv_1_fu_1016_input_20_ce0),
    .input_20_q0(conv_1_input_20_q0),
    .input_20_address1(grp_conv_1_fu_1016_input_20_address1),
    .input_20_ce1(grp_conv_1_fu_1016_input_20_ce1),
    .input_20_q1(conv_1_input_20_q1),
    .input_21_address0(grp_conv_1_fu_1016_input_21_address0),
    .input_21_ce0(grp_conv_1_fu_1016_input_21_ce0),
    .input_21_q0(conv_1_input_21_q0),
    .input_21_address1(grp_conv_1_fu_1016_input_21_address1),
    .input_21_ce1(grp_conv_1_fu_1016_input_21_ce1),
    .input_21_q1(conv_1_input_21_q1),
    .input_22_address0(grp_conv_1_fu_1016_input_22_address0),
    .input_22_ce0(grp_conv_1_fu_1016_input_22_ce0),
    .input_22_q0(conv_1_input_22_q0),
    .input_22_address1(grp_conv_1_fu_1016_input_22_address1),
    .input_22_ce1(grp_conv_1_fu_1016_input_22_ce1),
    .input_22_q1(conv_1_input_22_q1),
    .input_23_address0(grp_conv_1_fu_1016_input_23_address0),
    .input_23_ce0(grp_conv_1_fu_1016_input_23_ce0),
    .input_23_q0(conv_1_input_23_q0),
    .input_23_address1(grp_conv_1_fu_1016_input_23_address1),
    .input_23_ce1(grp_conv_1_fu_1016_input_23_ce1),
    .input_23_q1(conv_1_input_23_q1),
    .input_24_address0(grp_conv_1_fu_1016_input_24_address0),
    .input_24_ce0(grp_conv_1_fu_1016_input_24_ce0),
    .input_24_q0(conv_1_input_24_q0),
    .input_24_address1(grp_conv_1_fu_1016_input_24_address1),
    .input_24_ce1(grp_conv_1_fu_1016_input_24_ce1),
    .input_24_q1(conv_1_input_24_q1),
    .input_25_address0(grp_conv_1_fu_1016_input_25_address0),
    .input_25_ce0(grp_conv_1_fu_1016_input_25_ce0),
    .input_25_q0(conv_1_input_25_q0),
    .input_25_address1(grp_conv_1_fu_1016_input_25_address1),
    .input_25_ce1(grp_conv_1_fu_1016_input_25_ce1),
    .input_25_q1(conv_1_input_25_q1),
    .input_26_address0(grp_conv_1_fu_1016_input_26_address0),
    .input_26_ce0(grp_conv_1_fu_1016_input_26_ce0),
    .input_26_q0(conv_1_input_26_q0),
    .input_26_address1(grp_conv_1_fu_1016_input_26_address1),
    .input_26_ce1(grp_conv_1_fu_1016_input_26_ce1),
    .input_26_q1(conv_1_input_26_q1),
    .input_27_address0(grp_conv_1_fu_1016_input_27_address0),
    .input_27_ce0(grp_conv_1_fu_1016_input_27_ce0),
    .input_27_q0(conv_1_input_27_q0),
    .input_27_address1(grp_conv_1_fu_1016_input_27_address1),
    .input_27_ce1(grp_conv_1_fu_1016_input_27_ce1),
    .input_27_q1(conv_1_input_27_q1),
    .conv_out_address0(grp_conv_1_fu_1016_conv_out_address0),
    .conv_out_ce0(grp_conv_1_fu_1016_conv_out_ce0),
    .conv_out_we0(grp_conv_1_fu_1016_conv_out_we0),
    .conv_out_d0(grp_conv_1_fu_1016_conv_out_d0)
);

conv_2 grp_conv_2_fu_1050(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_2_fu_1050_ap_start),
    .ap_done(grp_conv_2_fu_1050_ap_done),
    .ap_idle(grp_conv_2_fu_1050_ap_idle),
    .ap_ready(grp_conv_2_fu_1050_ap_ready),
    .conv_out_address0(grp_conv_2_fu_1050_conv_out_address0),
    .conv_out_ce0(grp_conv_2_fu_1050_conv_out_ce0),
    .conv_out_we0(grp_conv_2_fu_1050_conv_out_we0),
    .conv_out_d0(grp_conv_2_fu_1050_conv_out_d0),
    .max_pool_1_out_0_address0(grp_conv_2_fu_1050_max_pool_1_out_0_address0),
    .max_pool_1_out_0_ce0(grp_conv_2_fu_1050_max_pool_1_out_0_ce0),
    .max_pool_1_out_0_q0(max_pool_1_out_0_q0),
    .max_pool_1_out_0_address1(grp_conv_2_fu_1050_max_pool_1_out_0_address1),
    .max_pool_1_out_0_ce1(grp_conv_2_fu_1050_max_pool_1_out_0_ce1),
    .max_pool_1_out_0_q1(max_pool_1_out_0_q1),
    .max_pool_1_out_1_address0(grp_conv_2_fu_1050_max_pool_1_out_1_address0),
    .max_pool_1_out_1_ce0(grp_conv_2_fu_1050_max_pool_1_out_1_ce0),
    .max_pool_1_out_1_q0(max_pool_1_out_1_q0),
    .max_pool_1_out_1_address1(grp_conv_2_fu_1050_max_pool_1_out_1_address1),
    .max_pool_1_out_1_ce1(grp_conv_2_fu_1050_max_pool_1_out_1_ce1),
    .max_pool_1_out_1_q1(max_pool_1_out_1_q1),
    .max_pool_1_out_2_address0(grp_conv_2_fu_1050_max_pool_1_out_2_address0),
    .max_pool_1_out_2_ce0(grp_conv_2_fu_1050_max_pool_1_out_2_ce0),
    .max_pool_1_out_2_q0(max_pool_1_out_2_q0),
    .max_pool_1_out_2_address1(grp_conv_2_fu_1050_max_pool_1_out_2_address1),
    .max_pool_1_out_2_ce1(grp_conv_2_fu_1050_max_pool_1_out_2_ce1),
    .max_pool_1_out_2_q1(max_pool_1_out_2_q1),
    .max_pool_1_out_3_address0(grp_conv_2_fu_1050_max_pool_1_out_3_address0),
    .max_pool_1_out_3_ce0(grp_conv_2_fu_1050_max_pool_1_out_3_ce0),
    .max_pool_1_out_3_q0(max_pool_1_out_3_q0),
    .max_pool_1_out_3_address1(grp_conv_2_fu_1050_max_pool_1_out_3_address1),
    .max_pool_1_out_3_ce1(grp_conv_2_fu_1050_max_pool_1_out_3_ce1),
    .max_pool_1_out_3_q1(max_pool_1_out_3_q1),
    .max_pool_1_out_4_address0(grp_conv_2_fu_1050_max_pool_1_out_4_address0),
    .max_pool_1_out_4_ce0(grp_conv_2_fu_1050_max_pool_1_out_4_ce0),
    .max_pool_1_out_4_q0(max_pool_1_out_4_q0),
    .max_pool_1_out_4_address1(grp_conv_2_fu_1050_max_pool_1_out_4_address1),
    .max_pool_1_out_4_ce1(grp_conv_2_fu_1050_max_pool_1_out_4_ce1),
    .max_pool_1_out_4_q1(max_pool_1_out_4_q1),
    .max_pool_1_out_5_address0(grp_conv_2_fu_1050_max_pool_1_out_5_address0),
    .max_pool_1_out_5_ce0(grp_conv_2_fu_1050_max_pool_1_out_5_ce0),
    .max_pool_1_out_5_q0(max_pool_1_out_5_q0),
    .max_pool_1_out_5_address1(grp_conv_2_fu_1050_max_pool_1_out_5_address1),
    .max_pool_1_out_5_ce1(grp_conv_2_fu_1050_max_pool_1_out_5_ce1),
    .max_pool_1_out_5_q1(max_pool_1_out_5_q1)
);

dense_out grp_dense_out_fu_1178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dense_out_fu_1178_ap_start),
    .ap_done(grp_dense_out_fu_1178_ap_done),
    .ap_idle(grp_dense_out_fu_1178_ap_idle),
    .ap_ready(grp_dense_out_fu_1178_ap_ready),
    .prediction_Addr_A(grp_dense_out_fu_1178_prediction_Addr_A),
    .prediction_EN_A(grp_dense_out_fu_1178_prediction_EN_A),
    .prediction_WEN_A(grp_dense_out_fu_1178_prediction_WEN_A),
    .prediction_Din_A(grp_dense_out_fu_1178_prediction_Din_A),
    .prediction_Dout_A(32'd0),
    .dense_2_out_address0(grp_dense_out_fu_1178_dense_2_out_address0),
    .dense_2_out_ce0(grp_dense_out_fu_1178_dense_2_out_ce0),
    .dense_2_out_q0(dense_2_out_q0)
);

max_pool_2 grp_max_pool_2_fu_1190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_2_fu_1190_ap_start),
    .ap_done(grp_max_pool_2_fu_1190_ap_done),
    .ap_idle(grp_max_pool_2_fu_1190_ap_idle),
    .ap_ready(grp_max_pool_2_fu_1190_ap_ready),
    .max_pool_out_address0(grp_max_pool_2_fu_1190_max_pool_out_address0),
    .max_pool_out_ce0(grp_max_pool_2_fu_1190_max_pool_out_ce0),
    .max_pool_out_we0(grp_max_pool_2_fu_1190_max_pool_out_we0),
    .max_pool_out_d0(grp_max_pool_2_fu_1190_max_pool_out_d0),
    .conv_2_out_address0(grp_max_pool_2_fu_1190_conv_2_out_address0),
    .conv_2_out_ce0(grp_max_pool_2_fu_1190_conv_2_out_ce0),
    .conv_2_out_q0(conv_2_out_q0),
    .conv_2_out_address1(grp_max_pool_2_fu_1190_conv_2_out_address1),
    .conv_2_out_ce1(grp_max_pool_2_fu_1190_conv_2_out_ce1),
    .conv_2_out_q1(conv_2_out_q1)
);

max_pool_1 grp_max_pool_1_fu_1198(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_max_pool_1_fu_1198_ap_start),
    .ap_done(grp_max_pool_1_fu_1198_ap_done),
    .ap_idle(grp_max_pool_1_fu_1198_ap_idle),
    .ap_ready(grp_max_pool_1_fu_1198_ap_ready),
    .max_pool_out_0_address0(grp_max_pool_1_fu_1198_max_pool_out_0_address0),
    .max_pool_out_0_ce0(grp_max_pool_1_fu_1198_max_pool_out_0_ce0),
    .max_pool_out_0_we0(grp_max_pool_1_fu_1198_max_pool_out_0_we0),
    .max_pool_out_0_d0(grp_max_pool_1_fu_1198_max_pool_out_0_d0),
    .max_pool_out_1_address0(grp_max_pool_1_fu_1198_max_pool_out_1_address0),
    .max_pool_out_1_ce0(grp_max_pool_1_fu_1198_max_pool_out_1_ce0),
    .max_pool_out_1_we0(grp_max_pool_1_fu_1198_max_pool_out_1_we0),
    .max_pool_out_1_d0(grp_max_pool_1_fu_1198_max_pool_out_1_d0),
    .max_pool_out_2_address0(grp_max_pool_1_fu_1198_max_pool_out_2_address0),
    .max_pool_out_2_ce0(grp_max_pool_1_fu_1198_max_pool_out_2_ce0),
    .max_pool_out_2_we0(grp_max_pool_1_fu_1198_max_pool_out_2_we0),
    .max_pool_out_2_d0(grp_max_pool_1_fu_1198_max_pool_out_2_d0),
    .max_pool_out_3_address0(grp_max_pool_1_fu_1198_max_pool_out_3_address0),
    .max_pool_out_3_ce0(grp_max_pool_1_fu_1198_max_pool_out_3_ce0),
    .max_pool_out_3_we0(grp_max_pool_1_fu_1198_max_pool_out_3_we0),
    .max_pool_out_3_d0(grp_max_pool_1_fu_1198_max_pool_out_3_d0),
    .max_pool_out_4_address0(grp_max_pool_1_fu_1198_max_pool_out_4_address0),
    .max_pool_out_4_ce0(grp_max_pool_1_fu_1198_max_pool_out_4_ce0),
    .max_pool_out_4_we0(grp_max_pool_1_fu_1198_max_pool_out_4_we0),
    .max_pool_out_4_d0(grp_max_pool_1_fu_1198_max_pool_out_4_d0),
    .max_pool_out_5_address0(grp_max_pool_1_fu_1198_max_pool_out_5_address0),
    .max_pool_out_5_ce0(grp_max_pool_1_fu_1198_max_pool_out_5_ce0),
    .max_pool_out_5_we0(grp_max_pool_1_fu_1198_max_pool_out_5_we0),
    .max_pool_out_5_d0(grp_max_pool_1_fu_1198_max_pool_out_5_d0),
    .conv_1_out_address0(grp_max_pool_1_fu_1198_conv_1_out_address0),
    .conv_1_out_ce0(grp_max_pool_1_fu_1198_conv_1_out_ce0),
    .conv_1_out_q0(conv_1_out_q0),
    .conv_1_out_address1(grp_max_pool_1_fu_1198_conv_1_out_address1),
    .conv_1_out_ce1(grp_max_pool_1_fu_1198_conv_1_out_ce1),
    .conv_1_out_q1(conv_1_out_q1)
);

flat grp_flat_fu_1216(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_flat_fu_1216_ap_start),
    .ap_done(grp_flat_fu_1216_ap_done),
    .ap_idle(grp_flat_fu_1216_ap_idle),
    .ap_ready(grp_flat_fu_1216_ap_ready),
    .flat_array_address0(grp_flat_fu_1216_flat_array_address0),
    .flat_array_ce0(grp_flat_fu_1216_flat_array_ce0),
    .flat_array_we0(grp_flat_fu_1216_flat_array_we0),
    .flat_array_d0(grp_flat_fu_1216_flat_array_d0),
    .max_pool_2_out_address0(grp_flat_fu_1216_max_pool_2_out_address0),
    .max_pool_2_out_ce0(grp_flat_fu_1216_max_pool_2_out_ce0),
    .max_pool_2_out_q0(max_pool_2_out_q0)
);

cnn_fadd_32ns_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fadd_32ns_32nbkb_U161(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1224_p0),
    .din1(grp_fu_1224_p1),
    .ce(1'b1),
    .dout(grp_fu_1224_p2)
);

cnn_fmul_32ns_32ncud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_fmul_32ns_32ncud_U162(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1230_p0),
    .din1(grp_fu_1230_p1),
    .ce(1'b1),
    .dout(grp_fu_1230_p2)
);

cnn_fcmp_32ns_32ndEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
cnn_fcmp_32ns_32ndEe_U163(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1224_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd4),
    .dout(grp_fu_1238_p2)
);

cnn_mac_muladd_9nbjl #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 15 ))
cnn_mac_muladd_9nbjl_U164(
    .din0(grp_fu_1627_p0),
    .din1(grp_fu_1627_p1),
    .din2(grp_fu_1627_p2),
    .dout(grp_fu_1627_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_1_fu_1016_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln23_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_conv_1_fu_1016_ap_start_reg <= 1'b1;
        end else if ((grp_conv_1_fu_1016_ap_ready == 1'b1)) begin
            grp_conv_1_fu_1016_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_2_fu_1050_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_conv_2_fu_1050_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2_fu_1050_ap_ready == 1'b1)) begin
            grp_conv_2_fu_1050_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dense_out_fu_1178_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_dense_out_fu_1178_ap_start_reg <= 1'b1;
        end else if ((grp_dense_out_fu_1178_ap_ready == 1'b1)) begin
            grp_dense_out_fu_1178_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_flat_fu_1216_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_flat_fu_1216_ap_start_reg <= 1'b1;
        end else if ((grp_flat_fu_1216_ap_ready == 1'b1)) begin
            grp_flat_fu_1216_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_1_fu_1198_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_max_pool_1_fu_1198_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_1_fu_1198_ap_ready == 1'b1)) begin
            grp_max_pool_1_fu_1198_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_max_pool_2_fu_1190_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_max_pool_2_fu_1190_ap_start_reg <= 1'b1;
        end else if ((grp_max_pool_2_fu_1190_ap_ready == 1'b1)) begin
            grp_max_pool_2_fu_1190_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i_0_i32_reg_982 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_0_i32_reg_982 <= select_ln14_5_reg_1901;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_reg_937 <= select_ln14_2_reg_1826;
    end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_0_i_reg_937 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1311_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_892 <= i_reg_1639;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_892 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten11_reg_971 <= 11'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten11_reg_971 <= add_ln9_2_reg_1886;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_926 <= add_ln9_reg_1811;
    end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        indvar_flatten_reg_926 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_1311_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ix_in_0_reg_880 <= ix_in_reg_1644;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ix_in_0_reg_880 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ix_in_1_reg_903 <= add_ln28_fu_1328_p2;
    end else if (((icmp_ln23_fu_1261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ix_in_1_reg_903 <= ix_in_0_reg_880;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        j_0_i36_reg_1005 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j_0_i36_reg_1005 <= j_1_reg_1927;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_0_i_reg_960 <= j_reg_1852;
    end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        j_0_i_reg_960 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_reg_914 <= j_2_reg_1792;
    end else if (((icmp_ln23_fu_1261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_914 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        sum_0_i35_reg_993 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        sum_0_i35_reg_993 <= grp_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_0_i_reg_948 <= grp_fu_1224_p2;
    end else if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        sum_0_i_reg_948 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        add_ln9_2_reg_1886 <= add_ln9_2_fu_1470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln9_reg_1811 <= add_ln9_fu_1340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_1_input_0_addr_reg_1649 <= zext_ln27_fu_1279_p1;
        conv_1_input_10_add_reg_1699 <= zext_ln27_fu_1279_p1;
        conv_1_input_11_add_reg_1704 <= zext_ln27_fu_1279_p1;
        conv_1_input_12_add_reg_1709 <= zext_ln27_fu_1279_p1;
        conv_1_input_13_add_reg_1714 <= zext_ln27_fu_1279_p1;
        conv_1_input_14_add_reg_1719 <= zext_ln27_fu_1279_p1;
        conv_1_input_15_add_reg_1724 <= zext_ln27_fu_1279_p1;
        conv_1_input_16_add_reg_1729 <= zext_ln27_fu_1279_p1;
        conv_1_input_17_add_reg_1734 <= zext_ln27_fu_1279_p1;
        conv_1_input_18_add_reg_1739 <= zext_ln27_fu_1279_p1;
        conv_1_input_19_add_reg_1744 <= zext_ln27_fu_1279_p1;
        conv_1_input_1_addr_reg_1654 <= zext_ln27_fu_1279_p1;
        conv_1_input_20_add_reg_1749 <= zext_ln27_fu_1279_p1;
        conv_1_input_21_add_reg_1754 <= zext_ln27_fu_1279_p1;
        conv_1_input_22_add_reg_1759 <= zext_ln27_fu_1279_p1;
        conv_1_input_23_add_reg_1764 <= zext_ln27_fu_1279_p1;
        conv_1_input_24_add_reg_1769 <= zext_ln27_fu_1279_p1;
        conv_1_input_25_add_reg_1774 <= zext_ln27_fu_1279_p1;
        conv_1_input_26_add_reg_1779 <= zext_ln27_fu_1279_p1;
        conv_1_input_27_add_reg_1784 <= zext_ln27_fu_1279_p1;
        conv_1_input_2_addr_reg_1659 <= zext_ln27_fu_1279_p1;
        conv_1_input_3_addr_reg_1664 <= zext_ln27_fu_1279_p1;
        conv_1_input_4_addr_reg_1669 <= zext_ln27_fu_1279_p1;
        conv_1_input_5_addr_reg_1674 <= zext_ln27_fu_1279_p1;
        conv_1_input_6_addr_reg_1679 <= zext_ln27_fu_1279_p1;
        conv_1_input_7_addr_reg_1684 <= zext_ln27_fu_1279_p1;
        conv_1_input_8_addr_reg_1689 <= zext_ln27_fu_1279_p1;
        conv_1_input_9_addr_reg_1694 <= zext_ln27_fu_1279_p1;
        ix_in_reg_1644 <= ix_in_fu_1273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1639 <= i_fu_1267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_1_reg_1863 <= icmp_ln13_1_fu_1404_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_1_reg_1863_pp0_iter2_reg <= icmp_ln13_1_reg_1863;
        icmp_ln13_1_reg_1863_pp0_iter3_reg <= icmp_ln13_1_reg_1863_pp0_iter2_reg;
        icmp_ln9_reg_1807 <= icmp_ln9_fu_1334_p2;
        icmp_ln9_reg_1807_pp0_iter1_reg <= icmp_ln9_reg_1807;
        select_ln14_2_reg_1826_pp0_iter1_reg <= select_ln14_2_reg_1826;
        zext_ln14_reg_1867_pp0_iter3_reg[5 : 0] <= zext_ln14_reg_1867[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_fu_1464_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln13_2_reg_1891 <= icmp_ln13_2_fu_1482_p2;
        select_ln14_4_reg_1896 <= select_ln14_4_fu_1488_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln13_3_reg_1938 <= icmp_ln13_3_fu_1567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln13_3_reg_1938_pp1_iter2_reg <= icmp_ln13_3_reg_1938;
        icmp_ln13_3_reg_1938_pp1_iter3_reg <= icmp_ln13_3_reg_1938_pp1_iter2_reg;
        icmp_ln9_1_reg_1882 <= icmp_ln9_1_fu_1464_p2;
        icmp_ln9_1_reg_1882_pp1_iter1_reg <= icmp_ln9_1_reg_1882;
        select_ln14_5_reg_1901_pp1_iter1_reg <= select_ln14_5_reg_1901;
        zext_ln14_7_reg_1942_pp1_iter3_reg[4 : 0] <= zext_ln14_7_reg_1942[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_1334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_1816 <= icmp_ln13_fu_1352_p2;
        select_ln14_1_reg_1821 <= select_ln14_1_fu_1358_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        j_1_reg_1927 <= j_1_fu_1554_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_2_reg_1792 <= j_2_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_1807 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_reg_1852 <= j_fu_1391_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((icmp_ln9_reg_1807 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_1244 <= grp_fu_1230_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_1249 <= grp_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (icmp_ln13_3_reg_1938_pp1_iter3_reg == 1'd1) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((icmp_ln13_1_reg_1863_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_1256 <= grp_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_fu_1334_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln14_2_reg_1826 <= select_ln14_2_fu_1366_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_fu_1464_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        select_ln14_5_reg_1901 <= select_ln14_5_fu_1496_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln9_1_reg_1882_pp1_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        zext_ln14_7_reg_1942[4 : 0] <= zext_ln14_7_fu_1572_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln9_reg_1807_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln14_reg_1867[5 : 0] <= zext_ln14_fu_1409_p1[5 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln9_fu_1334_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln9_1_fu_1464_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_dense_out_fu_1178_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_i_0_i32_phi_fu_986_p4 = select_ln14_5_reg_1901;
    end else begin
        ap_phi_mux_i_0_i32_phi_fu_986_p4 = i_0_i32_reg_982;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_i_phi_fu_941_p4 = select_ln14_2_reg_1826;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_941_p4 = i_0_i_reg_937;
    end
end

always @ (*) begin
    if (((icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten11_phi_fu_975_p4 = add_ln9_2_reg_1886;
    end else begin
        ap_phi_mux_indvar_flatten11_phi_fu_975_p4 = indvar_flatten11_reg_971;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_930_p4 = add_ln9_reg_1811;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_930_p4 = indvar_flatten_reg_926;
    end
end

always @ (*) begin
    if (((icmp_ln9_1_reg_1882 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_j_0_i36_phi_fu_1009_p4 = j_1_reg_1927;
    end else begin
        ap_phi_mux_j_0_i36_phi_fu_1009_p4 = j_0_i36_reg_1005;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1807 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_j_0_i_phi_fu_964_p4 = j_reg_1852;
    end else begin
        ap_phi_mux_j_0_i_phi_fu_964_p4 = j_0_i_reg_960;
    end
end

always @ (*) begin
    if (((icmp_ln9_1_reg_1882_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_sum_0_i35_phi_fu_997_p4 = grp_fu_1224_p2;
    end else begin
        ap_phi_mux_sum_0_i35_phi_fu_997_p4 = sum_0_i35_reg_993;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_1807_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_sum_0_i_phi_fu_952_p4 = grp_fu_1224_p2;
    end else begin
        ap_phi_mux_sum_0_i_phi_fu_952_p4 = sum_0_i_reg_948;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_dense_out_fu_1178_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cnn_input_EN_A = 1'b1;
    end else begin
        cnn_input_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_0_address0 = conv_1_input_0_addr_reg_1649;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_address0 = grp_conv_1_fu_1016_input_0_address0;
    end else begin
        conv_1_input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_ce0 = grp_conv_1_fu_1016_input_0_ce0;
    end else begin
        conv_1_input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_0_ce1 = grp_conv_1_fu_1016_input_0_ce1;
    end else begin
        conv_1_input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd0))) begin
        conv_1_input_0_we0 = 1'b1;
    end else begin
        conv_1_input_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_10_address0 = conv_1_input_10_add_reg_1699;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_10_address0 = grp_conv_1_fu_1016_input_10_address0;
    end else begin
        conv_1_input_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_10_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_10_ce0 = grp_conv_1_fu_1016_input_10_ce0;
    end else begin
        conv_1_input_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_10_ce1 = grp_conv_1_fu_1016_input_10_ce1;
    end else begin
        conv_1_input_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd10))) begin
        conv_1_input_10_we0 = 1'b1;
    end else begin
        conv_1_input_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_11_address0 = conv_1_input_11_add_reg_1704;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_11_address0 = grp_conv_1_fu_1016_input_11_address0;
    end else begin
        conv_1_input_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_11_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_11_ce0 = grp_conv_1_fu_1016_input_11_ce0;
    end else begin
        conv_1_input_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_11_ce1 = grp_conv_1_fu_1016_input_11_ce1;
    end else begin
        conv_1_input_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd11))) begin
        conv_1_input_11_we0 = 1'b1;
    end else begin
        conv_1_input_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_12_address0 = conv_1_input_12_add_reg_1709;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_12_address0 = grp_conv_1_fu_1016_input_12_address0;
    end else begin
        conv_1_input_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_12_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_12_ce0 = grp_conv_1_fu_1016_input_12_ce0;
    end else begin
        conv_1_input_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_12_ce1 = grp_conv_1_fu_1016_input_12_ce1;
    end else begin
        conv_1_input_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd12))) begin
        conv_1_input_12_we0 = 1'b1;
    end else begin
        conv_1_input_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_13_address0 = conv_1_input_13_add_reg_1714;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_13_address0 = grp_conv_1_fu_1016_input_13_address0;
    end else begin
        conv_1_input_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_13_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_13_ce0 = grp_conv_1_fu_1016_input_13_ce0;
    end else begin
        conv_1_input_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_13_ce1 = grp_conv_1_fu_1016_input_13_ce1;
    end else begin
        conv_1_input_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd13))) begin
        conv_1_input_13_we0 = 1'b1;
    end else begin
        conv_1_input_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_14_address0 = conv_1_input_14_add_reg_1719;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_14_address0 = grp_conv_1_fu_1016_input_14_address0;
    end else begin
        conv_1_input_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_14_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_14_ce0 = grp_conv_1_fu_1016_input_14_ce0;
    end else begin
        conv_1_input_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_14_ce1 = grp_conv_1_fu_1016_input_14_ce1;
    end else begin
        conv_1_input_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd14))) begin
        conv_1_input_14_we0 = 1'b1;
    end else begin
        conv_1_input_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_15_address0 = conv_1_input_15_add_reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_15_address0 = grp_conv_1_fu_1016_input_15_address0;
    end else begin
        conv_1_input_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_15_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_15_ce0 = grp_conv_1_fu_1016_input_15_ce0;
    end else begin
        conv_1_input_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_15_ce1 = grp_conv_1_fu_1016_input_15_ce1;
    end else begin
        conv_1_input_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd15))) begin
        conv_1_input_15_we0 = 1'b1;
    end else begin
        conv_1_input_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_16_address0 = conv_1_input_16_add_reg_1729;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_16_address0 = grp_conv_1_fu_1016_input_16_address0;
    end else begin
        conv_1_input_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_16_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_16_ce0 = grp_conv_1_fu_1016_input_16_ce0;
    end else begin
        conv_1_input_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_16_ce1 = grp_conv_1_fu_1016_input_16_ce1;
    end else begin
        conv_1_input_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd16))) begin
        conv_1_input_16_we0 = 1'b1;
    end else begin
        conv_1_input_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_17_address0 = conv_1_input_17_add_reg_1734;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_17_address0 = grp_conv_1_fu_1016_input_17_address0;
    end else begin
        conv_1_input_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_17_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_17_ce0 = grp_conv_1_fu_1016_input_17_ce0;
    end else begin
        conv_1_input_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_17_ce1 = grp_conv_1_fu_1016_input_17_ce1;
    end else begin
        conv_1_input_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd17))) begin
        conv_1_input_17_we0 = 1'b1;
    end else begin
        conv_1_input_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_18_address0 = conv_1_input_18_add_reg_1739;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_18_address0 = grp_conv_1_fu_1016_input_18_address0;
    end else begin
        conv_1_input_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_18_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_18_ce0 = grp_conv_1_fu_1016_input_18_ce0;
    end else begin
        conv_1_input_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_18_ce1 = grp_conv_1_fu_1016_input_18_ce1;
    end else begin
        conv_1_input_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd18))) begin
        conv_1_input_18_we0 = 1'b1;
    end else begin
        conv_1_input_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_19_address0 = conv_1_input_19_add_reg_1744;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_19_address0 = grp_conv_1_fu_1016_input_19_address0;
    end else begin
        conv_1_input_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_19_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_19_ce0 = grp_conv_1_fu_1016_input_19_ce0;
    end else begin
        conv_1_input_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_19_ce1 = grp_conv_1_fu_1016_input_19_ce1;
    end else begin
        conv_1_input_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd19))) begin
        conv_1_input_19_we0 = 1'b1;
    end else begin
        conv_1_input_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_1_address0 = conv_1_input_1_addr_reg_1654;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_address0 = grp_conv_1_fu_1016_input_1_address0;
    end else begin
        conv_1_input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_ce0 = grp_conv_1_fu_1016_input_1_ce0;
    end else begin
        conv_1_input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_1_ce1 = grp_conv_1_fu_1016_input_1_ce1;
    end else begin
        conv_1_input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd1))) begin
        conv_1_input_1_we0 = 1'b1;
    end else begin
        conv_1_input_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_20_address0 = conv_1_input_20_add_reg_1749;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_20_address0 = grp_conv_1_fu_1016_input_20_address0;
    end else begin
        conv_1_input_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_20_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_20_ce0 = grp_conv_1_fu_1016_input_20_ce0;
    end else begin
        conv_1_input_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_20_ce1 = grp_conv_1_fu_1016_input_20_ce1;
    end else begin
        conv_1_input_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd20))) begin
        conv_1_input_20_we0 = 1'b1;
    end else begin
        conv_1_input_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_21_address0 = conv_1_input_21_add_reg_1754;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_21_address0 = grp_conv_1_fu_1016_input_21_address0;
    end else begin
        conv_1_input_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_21_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_21_ce0 = grp_conv_1_fu_1016_input_21_ce0;
    end else begin
        conv_1_input_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_21_ce1 = grp_conv_1_fu_1016_input_21_ce1;
    end else begin
        conv_1_input_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd21))) begin
        conv_1_input_21_we0 = 1'b1;
    end else begin
        conv_1_input_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_22_address0 = conv_1_input_22_add_reg_1759;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_22_address0 = grp_conv_1_fu_1016_input_22_address0;
    end else begin
        conv_1_input_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_22_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_22_ce0 = grp_conv_1_fu_1016_input_22_ce0;
    end else begin
        conv_1_input_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_22_ce1 = grp_conv_1_fu_1016_input_22_ce1;
    end else begin
        conv_1_input_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd22))) begin
        conv_1_input_22_we0 = 1'b1;
    end else begin
        conv_1_input_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_23_address0 = conv_1_input_23_add_reg_1764;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_23_address0 = grp_conv_1_fu_1016_input_23_address0;
    end else begin
        conv_1_input_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_23_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_23_ce0 = grp_conv_1_fu_1016_input_23_ce0;
    end else begin
        conv_1_input_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_23_ce1 = grp_conv_1_fu_1016_input_23_ce1;
    end else begin
        conv_1_input_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd23))) begin
        conv_1_input_23_we0 = 1'b1;
    end else begin
        conv_1_input_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_24_address0 = conv_1_input_24_add_reg_1769;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_24_address0 = grp_conv_1_fu_1016_input_24_address0;
    end else begin
        conv_1_input_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_24_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_24_ce0 = grp_conv_1_fu_1016_input_24_ce0;
    end else begin
        conv_1_input_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_24_ce1 = grp_conv_1_fu_1016_input_24_ce1;
    end else begin
        conv_1_input_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd24))) begin
        conv_1_input_24_we0 = 1'b1;
    end else begin
        conv_1_input_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_25_address0 = conv_1_input_25_add_reg_1774;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_25_address0 = grp_conv_1_fu_1016_input_25_address0;
    end else begin
        conv_1_input_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_25_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_25_ce0 = grp_conv_1_fu_1016_input_25_ce0;
    end else begin
        conv_1_input_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_25_ce1 = grp_conv_1_fu_1016_input_25_ce1;
    end else begin
        conv_1_input_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd25))) begin
        conv_1_input_25_we0 = 1'b1;
    end else begin
        conv_1_input_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_26_address0 = conv_1_input_26_add_reg_1779;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_26_address0 = grp_conv_1_fu_1016_input_26_address0;
    end else begin
        conv_1_input_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_26_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_26_ce0 = grp_conv_1_fu_1016_input_26_ce0;
    end else begin
        conv_1_input_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_26_ce1 = grp_conv_1_fu_1016_input_26_ce1;
    end else begin
        conv_1_input_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd26))) begin
        conv_1_input_26_we0 = 1'b1;
    end else begin
        conv_1_input_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_27_address0 = conv_1_input_27_add_reg_1784;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_27_address0 = grp_conv_1_fu_1016_input_27_address0;
    end else begin
        conv_1_input_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_27_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_27_ce0 = grp_conv_1_fu_1016_input_27_ce0;
    end else begin
        conv_1_input_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_27_ce1 = grp_conv_1_fu_1016_input_27_ce1;
    end else begin
        conv_1_input_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((j_0_reg_914 == 5'd27) | ((j_0_reg_914 == 5'd28) | ((j_0_reg_914 == 5'd29) | ((j_0_reg_914 == 5'd30) | (j_0_reg_914 == 5'd31))))))) begin
        conv_1_input_27_we0 = 1'b1;
    end else begin
        conv_1_input_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_2_address0 = conv_1_input_2_addr_reg_1659;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_address0 = grp_conv_1_fu_1016_input_2_address0;
    end else begin
        conv_1_input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_ce0 = grp_conv_1_fu_1016_input_2_ce0;
    end else begin
        conv_1_input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_2_ce1 = grp_conv_1_fu_1016_input_2_ce1;
    end else begin
        conv_1_input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd2))) begin
        conv_1_input_2_we0 = 1'b1;
    end else begin
        conv_1_input_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_3_address0 = conv_1_input_3_addr_reg_1664;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_3_address0 = grp_conv_1_fu_1016_input_3_address0;
    end else begin
        conv_1_input_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_3_ce0 = grp_conv_1_fu_1016_input_3_ce0;
    end else begin
        conv_1_input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_3_ce1 = grp_conv_1_fu_1016_input_3_ce1;
    end else begin
        conv_1_input_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd3))) begin
        conv_1_input_3_we0 = 1'b1;
    end else begin
        conv_1_input_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_4_address0 = conv_1_input_4_addr_reg_1669;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_4_address0 = grp_conv_1_fu_1016_input_4_address0;
    end else begin
        conv_1_input_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_4_ce0 = grp_conv_1_fu_1016_input_4_ce0;
    end else begin
        conv_1_input_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_4_ce1 = grp_conv_1_fu_1016_input_4_ce1;
    end else begin
        conv_1_input_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd4))) begin
        conv_1_input_4_we0 = 1'b1;
    end else begin
        conv_1_input_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_5_address0 = conv_1_input_5_addr_reg_1674;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_5_address0 = grp_conv_1_fu_1016_input_5_address0;
    end else begin
        conv_1_input_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_5_ce0 = grp_conv_1_fu_1016_input_5_ce0;
    end else begin
        conv_1_input_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_5_ce1 = grp_conv_1_fu_1016_input_5_ce1;
    end else begin
        conv_1_input_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd5))) begin
        conv_1_input_5_we0 = 1'b1;
    end else begin
        conv_1_input_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_6_address0 = conv_1_input_6_addr_reg_1679;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_6_address0 = grp_conv_1_fu_1016_input_6_address0;
    end else begin
        conv_1_input_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_6_ce0 = grp_conv_1_fu_1016_input_6_ce0;
    end else begin
        conv_1_input_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_6_ce1 = grp_conv_1_fu_1016_input_6_ce1;
    end else begin
        conv_1_input_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd6))) begin
        conv_1_input_6_we0 = 1'b1;
    end else begin
        conv_1_input_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_7_address0 = conv_1_input_7_addr_reg_1684;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_7_address0 = grp_conv_1_fu_1016_input_7_address0;
    end else begin
        conv_1_input_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_7_ce0 = grp_conv_1_fu_1016_input_7_ce0;
    end else begin
        conv_1_input_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_7_ce1 = grp_conv_1_fu_1016_input_7_ce1;
    end else begin
        conv_1_input_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd7))) begin
        conv_1_input_7_we0 = 1'b1;
    end else begin
        conv_1_input_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_8_address0 = conv_1_input_8_addr_reg_1689;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_8_address0 = grp_conv_1_fu_1016_input_8_address0;
    end else begin
        conv_1_input_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_8_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_8_ce0 = grp_conv_1_fu_1016_input_8_ce0;
    end else begin
        conv_1_input_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_8_ce1 = grp_conv_1_fu_1016_input_8_ce1;
    end else begin
        conv_1_input_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd8))) begin
        conv_1_input_8_we0 = 1'b1;
    end else begin
        conv_1_input_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_9_address0 = conv_1_input_9_addr_reg_1694;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_9_address0 = grp_conv_1_fu_1016_input_9_address0;
    end else begin
        conv_1_input_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_1_input_9_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_9_ce0 = grp_conv_1_fu_1016_input_9_ce0;
    end else begin
        conv_1_input_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_input_9_ce1 = grp_conv_1_fu_1016_input_9_ce1;
    end else begin
        conv_1_input_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (j_0_reg_914 == 5'd9))) begin
        conv_1_input_9_we0 = 1'b1;
    end else begin
        conv_1_input_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_address0 = grp_max_pool_1_fu_1198_conv_1_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_out_address0 = grp_conv_1_fu_1016_conv_out_address0;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_ce0 = grp_max_pool_1_fu_1198_conv_1_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_out_ce0 = grp_conv_1_fu_1016_conv_out_ce0;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_ce1 = grp_max_pool_1_fu_1198_conv_1_out_ce1;
    end else begin
        conv_1_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_1_out_we0 = grp_conv_1_fu_1016_conv_out_we0;
    end else begin
        conv_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_address0 = grp_max_pool_2_fu_1190_conv_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_2_out_address0 = grp_conv_2_fu_1050_conv_out_address0;
    end else begin
        conv_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_ce0 = grp_max_pool_2_fu_1190_conv_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_2_out_ce0 = grp_conv_2_fu_1050_conv_out_ce0;
    end else begin
        conv_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_2_out_ce1 = grp_max_pool_2_fu_1190_conv_2_out_ce1;
    end else begin
        conv_2_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        conv_2_out_we0 = grp_conv_2_fu_1050_conv_out_we0;
    end else begin
        conv_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dense_1_bias_ce0 = 1'b1;
    end else begin
        dense_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        dense_1_out_address0 = zext_ln14_6_fu_1508_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        dense_1_out_address0 = zext_ln14_reg_1867_pp0_iter3_reg;
    end else begin
        dense_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        dense_1_out_ce0 = 1'b1;
    end else begin
        dense_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_1_reg_1863_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        dense_1_out_we0 = 1'b1;
    end else begin
        dense_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        dense_1_weights_ce0 = 1'b1;
    end else begin
        dense_1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dense_2_bias_ce0 = 1'b1;
    end else begin
        dense_2_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        dense_2_out_address0 = zext_ln14_7_reg_1942_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dense_2_out_address0 = grp_dense_out_fu_1178_dense_2_out_address0;
    end else begin
        dense_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        dense_2_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        dense_2_out_ce0 = grp_dense_out_fu_1178_dense_2_out_ce0;
    end else begin
        dense_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_3_reg_1938_pp1_iter3_reg == 1'd1) & (1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        dense_2_out_we0 = 1'b1;
    end else begin
        dense_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        dense_2_weights_ce0 = 1'b1;
    end else begin
        dense_2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        flat_array_address0 = zext_ln14_5_fu_1378_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_address0 = grp_flat_fu_1216_flat_array_address0;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        flat_array_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_ce0 = grp_flat_fu_1216_flat_array_ce0;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        flat_array_we0 = grp_flat_fu_1216_flat_array_we0;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_1224_p0 = select_ln14_3_fu_1559_p3;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1)))) begin
        grp_fu_1224_p0 = reg_1249;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_1224_p0 = select_ln14_fu_1396_p3;
    end else begin
        grp_fu_1224_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_1224_p1 = dense_2_bias_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_1224_p1 = dense_1_bias_q0;
    end else if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_1224_p1 = reg_1244;
    end else begin
        grp_fu_1224_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_1230_p0 = dense_1_out_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_1230_p0 = flat_array_q0;
    end else begin
        grp_fu_1230_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        grp_fu_1230_p1 = dense_2_weights_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_1230_p1 = dense_1_weights_q0;
    end else begin
        grp_fu_1230_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_0_address0 = grp_max_pool_1_fu_1198_max_pool_out_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_0_address0 = grp_conv_2_fu_1050_max_pool_1_out_0_address0;
    end else begin
        max_pool_1_out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_0_ce0 = grp_max_pool_1_fu_1198_max_pool_out_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_0_ce0 = grp_conv_2_fu_1050_max_pool_1_out_0_ce0;
    end else begin
        max_pool_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_0_ce1 = grp_conv_2_fu_1050_max_pool_1_out_0_ce1;
    end else begin
        max_pool_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_0_we0 = grp_max_pool_1_fu_1198_max_pool_out_0_we0;
    end else begin
        max_pool_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_1_address0 = grp_max_pool_1_fu_1198_max_pool_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_1_address0 = grp_conv_2_fu_1050_max_pool_1_out_1_address0;
    end else begin
        max_pool_1_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_1_ce0 = grp_max_pool_1_fu_1198_max_pool_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_1_ce0 = grp_conv_2_fu_1050_max_pool_1_out_1_ce0;
    end else begin
        max_pool_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_1_ce1 = grp_conv_2_fu_1050_max_pool_1_out_1_ce1;
    end else begin
        max_pool_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_1_we0 = grp_max_pool_1_fu_1198_max_pool_out_1_we0;
    end else begin
        max_pool_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_2_address0 = grp_max_pool_1_fu_1198_max_pool_out_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_2_address0 = grp_conv_2_fu_1050_max_pool_1_out_2_address0;
    end else begin
        max_pool_1_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_2_ce0 = grp_max_pool_1_fu_1198_max_pool_out_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_2_ce0 = grp_conv_2_fu_1050_max_pool_1_out_2_ce0;
    end else begin
        max_pool_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_2_ce1 = grp_conv_2_fu_1050_max_pool_1_out_2_ce1;
    end else begin
        max_pool_1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_2_we0 = grp_max_pool_1_fu_1198_max_pool_out_2_we0;
    end else begin
        max_pool_1_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_3_address0 = grp_max_pool_1_fu_1198_max_pool_out_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_3_address0 = grp_conv_2_fu_1050_max_pool_1_out_3_address0;
    end else begin
        max_pool_1_out_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_3_ce0 = grp_max_pool_1_fu_1198_max_pool_out_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_3_ce0 = grp_conv_2_fu_1050_max_pool_1_out_3_ce0;
    end else begin
        max_pool_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_3_ce1 = grp_conv_2_fu_1050_max_pool_1_out_3_ce1;
    end else begin
        max_pool_1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_3_we0 = grp_max_pool_1_fu_1198_max_pool_out_3_we0;
    end else begin
        max_pool_1_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_4_address0 = grp_max_pool_1_fu_1198_max_pool_out_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_4_address0 = grp_conv_2_fu_1050_max_pool_1_out_4_address0;
    end else begin
        max_pool_1_out_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_4_ce0 = grp_max_pool_1_fu_1198_max_pool_out_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_4_ce0 = grp_conv_2_fu_1050_max_pool_1_out_4_ce0;
    end else begin
        max_pool_1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_4_ce1 = grp_conv_2_fu_1050_max_pool_1_out_4_ce1;
    end else begin
        max_pool_1_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_4_we0 = grp_max_pool_1_fu_1198_max_pool_out_4_we0;
    end else begin
        max_pool_1_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_5_address0 = grp_max_pool_1_fu_1198_max_pool_out_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_5_address0 = grp_conv_2_fu_1050_max_pool_1_out_5_address0;
    end else begin
        max_pool_1_out_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_5_ce0 = grp_max_pool_1_fu_1198_max_pool_out_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_5_ce0 = grp_conv_2_fu_1050_max_pool_1_out_5_ce0;
    end else begin
        max_pool_1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_5_ce1 = grp_conv_2_fu_1050_max_pool_1_out_5_ce1;
    end else begin
        max_pool_1_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_1_out_5_we0 = grp_max_pool_1_fu_1198_max_pool_out_5_we0;
    end else begin
        max_pool_1_out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_address0 = grp_flat_fu_1216_max_pool_2_out_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_2_out_address0 = grp_max_pool_2_fu_1190_max_pool_out_address0;
    end else begin
        max_pool_2_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        max_pool_2_out_ce0 = grp_flat_fu_1216_max_pool_2_out_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_2_out_ce0 = grp_max_pool_2_fu_1190_max_pool_out_ce0;
    end else begin
        max_pool_2_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_2_out_we0 = grp_max_pool_2_fu_1190_max_pool_out_we0;
    end else begin
        max_pool_2_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln23_fu_1261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_1311_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_conv_1_fu_1016_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_max_pool_1_fu_1198_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_conv_2_fu_1050_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_max_pool_2_fu_1190_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_flat_fu_1216_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1334_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln9_fu_1334_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln9_1_fu_1464_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln9_1_fu_1464_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((~((1'b0 == ap_block_pp1_stage2_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage2_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (grp_dense_out_fu_1178_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_3_fu_1543_p2 = (sub_ln14_fu_1537_p2 + zext_ln13_1_fu_1504_p1);

assign add_ln28_fu_1328_p2 = (ix_in_1_reg_903 + 10'd1);

assign add_ln9_2_fu_1470_p2 = (ap_phi_mux_indvar_flatten11_phi_fu_975_p4 + 11'd1);

assign add_ln9_fu_1340_p2 = (ap_phi_mux_indvar_flatten_phi_fu_930_p4 + 15'd1);

assign and_ln19_1_fu_1612_p2 = (or_ln19_1_fu_1606_p2 & grp_fu_1238_p2);

assign and_ln19_fu_1449_p2 = (or_ln19_fu_1443_p2 & grp_fu_1238_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln19_1_fu_1576_p1 = reg_1256;

assign bitcast_ln19_fu_1413_p1 = reg_1256;

assign cnn_input_Addr_A = cnn_input_Addr_A_orig << 32'd2;

assign cnn_input_Addr_A_orig = zext_ln27_1_fu_1323_p1;

assign cnn_input_Clk_A = ap_clk;

assign cnn_input_Din_A = 32'd0;

assign cnn_input_Rst_A = ap_rst_n_inv;

assign cnn_input_WEN_A = 4'd0;

assign dense_1_bias_address0 = zext_ln14_fu_1409_p1;

assign dense_1_out_d0 = ((and_ln19_fu_1449_p2[0:0] === 1'b1) ? 32'd0 : reg_1256);

assign dense_1_weights_address0 = zext_ln14_9_fu_1387_p1;

assign dense_2_bias_address0 = zext_ln14_7_fu_1572_p1;

assign dense_2_out_d0 = ((and_ln19_1_fu_1612_p2[0:0] === 1'b1) ? 32'd0 : reg_1256);

assign dense_2_weights_address0 = sext_ln14_fu_1549_p1;

assign grp_conv_1_fu_1016_ap_start = grp_conv_1_fu_1016_ap_start_reg;

assign grp_conv_2_fu_1050_ap_start = grp_conv_2_fu_1050_ap_start_reg;

assign grp_dense_out_fu_1178_ap_start = grp_dense_out_fu_1178_ap_start_reg;

assign grp_flat_fu_1216_ap_start = grp_flat_fu_1216_ap_start_reg;

assign grp_fu_1627_p0 = grp_fu_1627_p00;

assign grp_fu_1627_p00 = select_ln14_1_fu_1358_p3;

assign grp_fu_1627_p1 = 15'd50;

assign grp_fu_1627_p2 = grp_fu_1627_p20;

assign grp_fu_1627_p20 = select_ln14_2_fu_1366_p3;

assign grp_max_pool_1_fu_1198_ap_start = grp_max_pool_1_fu_1198_ap_start_reg;

assign grp_max_pool_2_fu_1190_ap_start = grp_max_pool_2_fu_1190_ap_start_reg;

assign i_1_fu_1346_p2 = (ap_phi_mux_i_0_i_phi_fu_941_p4 + 6'd1);

assign i_2_fu_1476_p2 = (ap_phi_mux_i_0_i32_phi_fu_986_p4 + 5'd1);

assign i_fu_1267_p2 = (i_0_reg_892 + 5'd1);

assign icmp_ln13_1_fu_1404_p2 = ((j_reg_1852 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_1482_p2 = ((ap_phi_mux_j_0_i36_phi_fu_1009_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_3_fu_1567_p2 = ((j_1_reg_1927 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1352_p2 = ((ap_phi_mux_j_0_i_phi_fu_964_p4 == 9'd400) ? 1'b1 : 1'b0);

assign icmp_ln19_1_fu_1437_p2 = ((trunc_ln19_fu_1427_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_2_fu_1594_p2 = ((tmp_18_fu_1580_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln19_3_fu_1600_p2 = ((trunc_ln19_1_fu_1590_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln19_fu_1431_p2 = ((tmp_fu_1417_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1261_p2 = ((i_0_reg_892 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1311_p2 = ((j_0_reg_914 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1464_p2 = ((ap_phi_mux_indvar_flatten11_phi_fu_975_p4 == 11'd1500) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_1334_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_930_p4 == 15'd20000) ? 1'b1 : 1'b0);

assign ix_in_fu_1273_p2 = (ix_in_0_reg_880 + 10'd28);

assign j_1_fu_1554_p2 = (select_ln14_4_reg_1896 + 6'd1);

assign j_2_fu_1317_p2 = (j_0_reg_914 + 5'd1);

assign j_fu_1391_p2 = (select_ln14_1_reg_1821 + 9'd1);

assign or_ln19_1_fu_1606_p2 = (icmp_ln19_3_fu_1600_p2 | icmp_ln19_2_fu_1594_p2);

assign or_ln19_fu_1443_p2 = (icmp_ln19_fu_1431_p2 | icmp_ln19_1_fu_1437_p2);

assign prediction_Addr_A = grp_dense_out_fu_1178_prediction_Addr_A;

assign prediction_Clk_A = ap_clk;

assign prediction_Din_A = grp_dense_out_fu_1178_prediction_Din_A;

assign prediction_EN_A = grp_dense_out_fu_1178_prediction_EN_A;

assign prediction_Rst_A = ap_rst_n_inv;

assign prediction_WEN_A = grp_dense_out_fu_1178_prediction_WEN_A;

assign select_ln14_1_fu_1358_p3 = ((icmp_ln13_fu_1352_p2[0:0] === 1'b1) ? 9'd0 : ap_phi_mux_j_0_i_phi_fu_964_p4);

assign select_ln14_2_fu_1366_p3 = ((icmp_ln13_fu_1352_p2[0:0] === 1'b1) ? i_1_fu_1346_p2 : ap_phi_mux_i_0_i_phi_fu_941_p4);

assign select_ln14_3_fu_1559_p3 = ((icmp_ln13_2_reg_1891[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_sum_0_i35_phi_fu_997_p4);

assign select_ln14_4_fu_1488_p3 = ((icmp_ln13_2_fu_1482_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_j_0_i36_phi_fu_1009_p4);

assign select_ln14_5_fu_1496_p3 = ((icmp_ln13_2_fu_1482_p2[0:0] === 1'b1) ? i_2_fu_1476_p2 : ap_phi_mux_i_0_i32_phi_fu_986_p4);

assign select_ln14_fu_1396_p3 = ((icmp_ln13_reg_1816[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_sum_0_i_phi_fu_952_p4);

assign sext_ln14_fu_1549_p1 = $signed(add_ln14_3_fu_1543_p2);

assign sub_ln14_fu_1537_p2 = (zext_ln14_10_fu_1521_p1 - zext_ln14_11_fu_1533_p1);

assign tmp_16_fu_1513_p3 = {{select_ln14_4_fu_1488_p3}, {5'd0}};

assign tmp_17_fu_1525_p3 = {{select_ln14_4_fu_1488_p3}, {1'd0}};

assign tmp_18_fu_1580_p4 = {{bitcast_ln19_1_fu_1576_p1[30:23]}};

assign tmp_fu_1417_p4 = {{bitcast_ln19_fu_1413_p1[30:23]}};

assign trunc_ln19_1_fu_1590_p1 = bitcast_ln19_1_fu_1576_p1[22:0];

assign trunc_ln19_fu_1427_p1 = bitcast_ln19_fu_1413_p1[22:0];

assign zext_ln13_1_fu_1504_p1 = select_ln14_5_fu_1496_p3;

assign zext_ln14_10_fu_1521_p1 = tmp_16_fu_1513_p3;

assign zext_ln14_11_fu_1533_p1 = tmp_17_fu_1525_p3;

assign zext_ln14_5_fu_1378_p1 = select_ln14_1_fu_1358_p3;

assign zext_ln14_6_fu_1508_p1 = select_ln14_4_fu_1488_p3;

assign zext_ln14_7_fu_1572_p1 = select_ln14_5_reg_1901_pp1_iter1_reg;

assign zext_ln14_9_fu_1387_p1 = grp_fu_1627_p3;

assign zext_ln14_fu_1409_p1 = select_ln14_2_reg_1826_pp0_iter1_reg;

assign zext_ln27_1_fu_1323_p1 = ix_in_1_reg_903;

assign zext_ln27_fu_1279_p1 = i_0_reg_892;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1867[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln14_reg_1867_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln14_7_reg_1942[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln14_7_reg_1942_pp1_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //cnn
