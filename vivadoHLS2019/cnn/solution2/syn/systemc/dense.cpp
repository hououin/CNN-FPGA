// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> dense::ap_ST_fsm_state1 = "1";
const sc_lv<24> dense::ap_ST_fsm_state2 = "10";
const sc_lv<24> dense::ap_ST_fsm_state3 = "100";
const sc_lv<24> dense::ap_ST_fsm_state4 = "1000";
const sc_lv<24> dense::ap_ST_fsm_state5 = "10000";
const sc_lv<24> dense::ap_ST_fsm_state6 = "100000";
const sc_lv<24> dense::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> dense::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> dense::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> dense::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> dense::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> dense::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> dense::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> dense::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> dense::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> dense::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<24> dense::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_7 = "111";
const sc_lv<32> dense::ap_const_lv32_E = "1110";
const sc_lv<32> dense::ap_const_lv32_A = "1010";
const sc_lv<32> dense::ap_const_lv32_11 = "10001";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const sc_lv<32> dense::ap_const_lv32_5 = "101";
const sc_lv<32> dense::ap_const_lv32_6 = "110";
const sc_lv<32> dense::ap_const_lv32_C = "1100";
const sc_lv<32> dense::ap_const_lv32_D = "1101";
const sc_lv<4> dense::ap_const_lv4_0 = "0000";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<11> dense::ap_const_lv11_0 = "00000000000";
const sc_lv<32> dense::ap_const_lv32_17 = "10111";
const sc_lv<32> dense::ap_const_lv32_B = "1011";
const sc_lv<32> dense::ap_const_lv32_12 = "10010";
const sc_lv<4> dense::ap_const_lv4_A = "1010";
const sc_lv<4> dense::ap_const_lv4_1 = "1";
const sc_lv<11> dense::ap_const_lv11_640 = "11001000000";
const sc_lv<11> dense::ap_const_lv11_1 = "1";
const sc_lv<3> dense::ap_const_lv3_0 = "000";
const bool dense::ap_const_boolean_1 = true;

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_weights_U = new dense_dense_weights("dense_weights_U");
    dense_weights_U->clk(ap_clk);
    dense_weights_U->reset(ap_rst);
    dense_weights_U->address0(dense_weights_address0);
    dense_weights_U->ce0(dense_weights_ce0);
    dense_weights_U->q0(dense_weights_q0);
    dense_array_U = new dense_dense_array("dense_array_U");
    dense_array_U->clk(ap_clk);
    dense_array_U->reset(ap_rst);
    dense_array_U->address0(dense_array_address0);
    dense_array_U->ce0(dense_array_ce0);
    dense_array_U->we0(dense_array_we0);
    dense_array_U->d0(w_sum_0_reg_134);
    dense_array_U->q0(dense_array_q0);
    cnn_fadd_32ns_32ncud_U26 = new cnn_fadd_32ns_32ncud<1,2,32,32,32>("cnn_fadd_32ns_32ncud_U26");
    cnn_fadd_32ns_32ncud_U26->clk(ap_clk);
    cnn_fadd_32ns_32ncud_U26->reset(ap_rst);
    cnn_fadd_32ns_32ncud_U26->din0(grp_fu_192_p0);
    cnn_fadd_32ns_32ncud_U26->din1(grp_fu_192_p1);
    cnn_fadd_32ns_32ncud_U26->ce(ap_var_for_const0);
    cnn_fadd_32ns_32ncud_U26->dout(grp_fu_192_p2);
    cnn_fmul_32ns_32ndEe_U27 = new cnn_fmul_32ns_32ndEe<1,2,32,32,32>("cnn_fmul_32ns_32ndEe_U27");
    cnn_fmul_32ns_32ndEe_U27->clk(ap_clk);
    cnn_fmul_32ns_32ndEe_U27->reset(ap_rst);
    cnn_fmul_32ns_32ndEe_U27->din0(dense_weights_q0);
    cnn_fmul_32ns_32ndEe_U27->din1(flat_array_q0);
    cnn_fmul_32ns_32ndEe_U27->ce(ap_var_for_const0);
    cnn_fmul_32ns_32ndEe_U27->dout(grp_fu_198_p2);
    cnn_fdiv_32ns_32ng8j_U28 = new cnn_fdiv_32ns_32ng8j<1,6,32,32,32>("cnn_fdiv_32ns_32ng8j_U28");
    cnn_fdiv_32ns_32ng8j_U28->clk(ap_clk);
    cnn_fdiv_32ns_32ng8j_U28->reset(ap_rst);
    cnn_fdiv_32ns_32ng8j_U28->din0(reg_222);
    cnn_fdiv_32ns_32ng8j_U28->din1(sum_0_i_reg_158);
    cnn_fdiv_32ns_32ng8j_U28->ce(ap_var_for_const0);
    cnn_fdiv_32ns_32ng8j_U28->dout(grp_fu_205_p2);
    cnn_fexp_32ns_32nhbi_U29 = new cnn_fexp_32ns_32nhbi<1,4,32,32,32>("cnn_fexp_32ns_32nhbi_U29");
    cnn_fexp_32ns_32nhbi_U29->clk(ap_clk);
    cnn_fexp_32ns_32nhbi_U29->reset(ap_rst);
    cnn_fexp_32ns_32nhbi_U29->din0(ap_var_for_const1);
    cnn_fexp_32ns_32nhbi_U29->din1(dense_array_q0);
    cnn_fexp_32ns_32nhbi_U29->ce(ap_var_for_const0);
    cnn_fexp_32ns_32nhbi_U29->dout(grp_fu_211_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln35_4_fu_295_p2);
    sensitive << ( zext_ln33_reg_352 );
    sensitive << ( add_ln35_fu_289_p2 );

    SC_METHOD(thread_add_ln35_fu_289_p2);
    sensitive << ( zext_ln35_7_fu_285_p1 );
    sensitive << ( zext_ln35_6_fu_273_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln16_fu_322_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln16_fu_322_p2 );

    SC_METHOD(thread_d_fu_234_p2);
    sensitive << ( d_0_reg_123 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( zext_ln35_reg_347 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln18_fu_334_p1 );
    sensitive << ( zext_ln12_fu_317_p1 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dense_array_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln33_fu_248_p2 );

    SC_METHOD(thread_dense_weights_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln35_8_fu_300_p1 );

    SC_METHOD(thread_dense_weights_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_f_fu_254_p2);
    sensitive << ( f_0_reg_147 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln35_3_fu_260_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_192_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( w_sum_0_reg_134 );
    sensitive << ( sum_0_i_reg_158 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_192_p1);
    sensitive << ( reg_222 );
    sensitive << ( grp_fu_198_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_fu_311_p2);
    sensitive << ( i_0_i_reg_170 );

    SC_METHOD(thread_icmp_ln10_fu_305_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_0_i_reg_170 );

    SC_METHOD(thread_icmp_ln16_fu_322_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_0_i_reg_181 );

    SC_METHOD(thread_icmp_ln29_fu_228_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( d_0_reg_123 );

    SC_METHOD(thread_icmp_ln33_fu_248_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( f_0_reg_147 );

    SC_METHOD(thread_j_fu_328_p2);
    sensitive << ( j_0_i_reg_181 );

    SC_METHOD(thread_prediction_address0);
    sensitive << ( zext_ln18_reg_421 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_prediction_ce0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_prediction_d0);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( grp_fu_205_p2 );

    SC_METHOD(thread_prediction_we0);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp_1_fu_265_p3);
    sensitive << ( f_0_reg_147 );

    SC_METHOD(thread_tmp_2_fu_277_p3);
    sensitive << ( f_0_reg_147 );

    SC_METHOD(thread_zext_ln12_fu_317_p1);
    sensitive << ( i_0_i_reg_170 );

    SC_METHOD(thread_zext_ln18_fu_334_p1);
    sensitive << ( j_0_i_reg_181 );

    SC_METHOD(thread_zext_ln33_fu_244_p1);
    sensitive << ( d_0_reg_123 );

    SC_METHOD(thread_zext_ln35_3_fu_260_p1);
    sensitive << ( f_0_reg_147 );

    SC_METHOD(thread_zext_ln35_6_fu_273_p1);
    sensitive << ( tmp_1_fu_265_p3 );

    SC_METHOD(thread_zext_ln35_7_fu_285_p1);
    sensitive << ( tmp_2_fu_277_p3 );

    SC_METHOD(thread_zext_ln35_8_fu_300_p1);
    sensitive << ( add_ln35_4_fu_295_p2 );

    SC_METHOD(thread_zext_ln35_fu_240_p1);
    sensitive << ( d_0_reg_123 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln29_fu_228_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln33_fu_248_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln10_fu_305_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln16_fu_322_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, prediction_address0, "(port)prediction_address0");
    sc_trace(mVcdFile, prediction_ce0, "(port)prediction_ce0");
    sc_trace(mVcdFile, prediction_we0, "(port)prediction_we0");
    sc_trace(mVcdFile, prediction_d0, "(port)prediction_d0");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_q0, "(port)flat_array_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_weights_address0, "dense_weights_address0");
    sc_trace(mVcdFile, dense_weights_ce0, "dense_weights_ce0");
    sc_trace(mVcdFile, dense_weights_q0, "dense_weights_q0");
    sc_trace(mVcdFile, dense_array_q0, "dense_array_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, grp_fu_211_p2, "grp_fu_211_p2");
    sc_trace(mVcdFile, reg_222, "reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, d_fu_234_p2, "d_fu_234_p2");
    sc_trace(mVcdFile, d_reg_342, "d_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln35_fu_240_p1, "zext_ln35_fu_240_p1");
    sc_trace(mVcdFile, zext_ln35_reg_347, "zext_ln35_reg_347");
    sc_trace(mVcdFile, icmp_ln29_fu_228_p2, "icmp_ln29_fu_228_p2");
    sc_trace(mVcdFile, zext_ln33_fu_244_p1, "zext_ln33_fu_244_p1");
    sc_trace(mVcdFile, zext_ln33_reg_352, "zext_ln33_reg_352");
    sc_trace(mVcdFile, f_fu_254_p2, "f_fu_254_p2");
    sc_trace(mVcdFile, f_reg_360, "f_reg_360");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln33_fu_248_p2, "icmp_ln33_fu_248_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_198_p2, "grp_fu_198_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i_fu_311_p2, "i_fu_311_p2");
    sc_trace(mVcdFile, i_reg_398, "i_reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln10_fu_305_p2, "icmp_ln10_fu_305_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, j_fu_328_p2, "j_fu_328_p2");
    sc_trace(mVcdFile, j_reg_416, "j_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, zext_ln18_fu_334_p1, "zext_ln18_fu_334_p1");
    sc_trace(mVcdFile, zext_ln18_reg_421, "zext_ln18_reg_421");
    sc_trace(mVcdFile, icmp_ln16_fu_322_p2, "icmp_ln16_fu_322_p2");
    sc_trace(mVcdFile, dense_array_address0, "dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "dense_array_ce0");
    sc_trace(mVcdFile, dense_array_we0, "dense_array_we0");
    sc_trace(mVcdFile, d_0_reg_123, "d_0_reg_123");
    sc_trace(mVcdFile, w_sum_0_reg_134, "w_sum_0_reg_134");
    sc_trace(mVcdFile, f_0_reg_147, "f_0_reg_147");
    sc_trace(mVcdFile, sum_0_i_reg_158, "sum_0_i_reg_158");
    sc_trace(mVcdFile, i_0_i_reg_170, "i_0_i_reg_170");
    sc_trace(mVcdFile, j_0_i_reg_181, "j_0_i_reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, zext_ln35_8_fu_300_p1, "zext_ln35_8_fu_300_p1");
    sc_trace(mVcdFile, zext_ln35_3_fu_260_p1, "zext_ln35_3_fu_260_p1");
    sc_trace(mVcdFile, zext_ln12_fu_317_p1, "zext_ln12_fu_317_p1");
    sc_trace(mVcdFile, grp_fu_205_p2, "grp_fu_205_p2");
    sc_trace(mVcdFile, grp_fu_192_p0, "grp_fu_192_p0");
    sc_trace(mVcdFile, grp_fu_192_p1, "grp_fu_192_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tmp_1_fu_265_p3, "tmp_1_fu_265_p3");
    sc_trace(mVcdFile, tmp_2_fu_277_p3, "tmp_2_fu_277_p3");
    sc_trace(mVcdFile, zext_ln35_7_fu_285_p1, "zext_ln35_7_fu_285_p1");
    sc_trace(mVcdFile, zext_ln35_6_fu_273_p1, "zext_ln35_6_fu_273_p1");
    sc_trace(mVcdFile, add_ln35_fu_289_p2, "add_ln35_fu_289_p2");
    sc_trace(mVcdFile, add_ln35_4_fu_295_p2, "add_ln35_4_fu_295_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_weights_U;
    delete dense_array_U;
    delete cnn_fadd_32ns_32ncud_U26;
    delete cnn_fmul_32ns_32ndEe_U27;
    delete cnn_fdiv_32ns_32ng8j_U28;
    delete cnn_fexp_32ns_32nhbi_U29;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_248_p2.read(), ap_const_lv1_1))) {
        d_0_reg_123 = d_reg_342.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        d_0_reg_123 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        f_0_reg_147 = f_reg_360.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_0))) {
        f_0_reg_147 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_1))) {
        i_0_i_reg_170 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        i_0_i_reg_170 = i_reg_398.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_305_p2.read(), ap_const_lv1_1))) {
        j_0_i_reg_181 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        j_0_i_reg_181 = j_reg_416.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_1))) {
        sum_0_i_reg_158 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        sum_0_i_reg_158 = grp_fu_192_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        w_sum_0_reg_134 = grp_fu_192_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_0))) {
        w_sum_0_reg_134 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        d_reg_342 = d_fu_234_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        f_reg_360 = f_fu_254_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_reg_398 = i_fu_311_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_reg_416 = j_fu_328_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        reg_222 = grp_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_322_p2.read()))) {
        zext_ln18_reg_421 = zext_ln18_fu_334_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_0))) {
        zext_ln33_reg_352 = zext_ln33_fu_244_p1.read();
        zext_ln35_reg_347 = zext_ln35_fu_240_p1.read();
    }
}

void dense::thread_add_ln35_4_fu_295_p2() {
    add_ln35_4_fu_295_p2 = (!add_ln35_fu_289_p2.read().is_01() || !zext_ln33_reg_352.read().is_01())? sc_lv<15>(): (sc_biguint<15>(add_ln35_fu_289_p2.read()) + sc_biguint<15>(zext_ln33_reg_352.read()));
}

void dense::thread_add_ln35_fu_289_p2() {
    add_ln35_fu_289_p2 = (!zext_ln35_7_fu_285_p1.read().is_01() || !zext_ln35_6_fu_273_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln35_7_fu_285_p1.read()) + sc_biguint<15>(zext_ln35_6_fu_273_p1.read()));
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void dense::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void dense::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void dense::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void dense::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void dense::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void dense::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void dense::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void dense::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void dense::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void dense::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void dense::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
          esl_seteq<1,1,1>(icmp_ln16_fu_322_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_322_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_234_p2() {
    d_fu_234_p2 = (!d_0_reg_123.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(d_0_reg_123.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_dense_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln18_fu_334_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln12_fu_317_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln35_reg_347.read());
    } else {
        dense_array_address0 = "XXXX";
    }
}

void dense::thread_dense_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        dense_array_ce0 = ap_const_logic_1;
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln33_fu_248_p2.read(), ap_const_lv1_1))) {
        dense_array_we0 = ap_const_logic_1;
    } else {
        dense_array_we0 = ap_const_logic_0;
    }
}

void dense::thread_dense_weights_address0() {
    dense_weights_address0 =  (sc_lv<14>) (zext_ln35_8_fu_300_p1.read());
}

void dense::thread_dense_weights_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        dense_weights_ce0 = ap_const_logic_1;
    } else {
        dense_weights_ce0 = ap_const_logic_0;
    }
}

void dense::thread_f_fu_254_p2() {
    f_fu_254_p2 = (!f_0_reg_147.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(f_0_reg_147.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void dense::thread_flat_array_address0() {
    flat_array_address0 =  (sc_lv<11>) (zext_ln35_3_fu_260_p1.read());
}

void dense::thread_flat_array_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_grp_fu_192_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_192_p0 = sum_0_i_reg_158.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_192_p0 = w_sum_0_reg_134.read();
    } else {
        grp_fu_192_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_192_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_192_p1 = reg_222.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_192_p1 = grp_fu_198_p2.read();
    } else {
        grp_fu_192_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_i_fu_311_p2() {
    i_fu_311_p2 = (!i_0_i_reg_170.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_170.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_icmp_ln10_fu_305_p2() {
    icmp_ln10_fu_305_p2 = (!i_0_i_reg_170.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_170.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln16_fu_322_p2() {
    icmp_ln16_fu_322_p2 = (!j_0_i_reg_181.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_181.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln29_fu_228_p2() {
    icmp_ln29_fu_228_p2 = (!d_0_reg_123.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(d_0_reg_123.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln33_fu_248_p2() {
    icmp_ln33_fu_248_p2 = (!f_0_reg_147.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(f_0_reg_147.read() == ap_const_lv11_640);
}

void dense::thread_j_fu_328_p2() {
    j_fu_328_p2 = (!j_0_i_reg_181.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_i_reg_181.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_prediction_address0() {
    prediction_address0 =  (sc_lv<4>) (zext_ln18_reg_421.read());
}

void dense::thread_prediction_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        prediction_ce0 = ap_const_logic_1;
    } else {
        prediction_ce0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_d0() {
    prediction_d0 = grp_fu_205_p2.read();
}

void dense::thread_prediction_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        prediction_we0 = ap_const_logic_1;
    } else {
        prediction_we0 = ap_const_logic_0;
    }
}

void dense::thread_tmp_1_fu_265_p3() {
    tmp_1_fu_265_p3 = esl_concat<11,3>(f_0_reg_147.read(), ap_const_lv3_0);
}

void dense::thread_tmp_2_fu_277_p3() {
    tmp_2_fu_277_p3 = esl_concat<11,1>(f_0_reg_147.read(), ap_const_lv1_0);
}

void dense::thread_zext_ln12_fu_317_p1() {
    zext_ln12_fu_317_p1 = esl_zext<64,4>(i_0_i_reg_170.read());
}

void dense::thread_zext_ln18_fu_334_p1() {
    zext_ln18_fu_334_p1 = esl_zext<64,4>(j_0_i_reg_181.read());
}

void dense::thread_zext_ln33_fu_244_p1() {
    zext_ln33_fu_244_p1 = esl_zext<15,4>(d_0_reg_123.read());
}

void dense::thread_zext_ln35_3_fu_260_p1() {
    zext_ln35_3_fu_260_p1 = esl_zext<64,11>(f_0_reg_147.read());
}

void dense::thread_zext_ln35_6_fu_273_p1() {
    zext_ln35_6_fu_273_p1 = esl_zext<15,14>(tmp_1_fu_265_p3.read());
}

void dense::thread_zext_ln35_7_fu_285_p1() {
    zext_ln35_7_fu_285_p1 = esl_zext<15,12>(tmp_2_fu_277_p3.read());
}

void dense::thread_zext_ln35_8_fu_300_p1() {
    zext_ln35_8_fu_300_p1 = esl_zext<64,15>(add_ln35_4_fu_295_p2.read());
}

void dense::thread_zext_ln35_fu_240_p1() {
    zext_ln35_fu_240_p1 = esl_zext<64,4>(d_0_reg_123.read());
}

void dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_228_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln33_fu_248_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_305_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_322_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

