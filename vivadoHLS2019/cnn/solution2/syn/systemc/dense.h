// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "cnn_fdiv_32ns_32ng8j.h"
#include "cnn_fexp_32ns_32nhbi.h"
#include "dense_dense_weights.h"
#include "dense_dense_array.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_out< sc_lv<11> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    dense_dense_weights* dense_weights_U;
    dense_dense_array* dense_array_U;
    cnn_fadd_32ns_32ncud<1,2,32,32,32>* cnn_fadd_32ns_32ncud_U26;
    cnn_fmul_32ns_32ndEe<1,2,32,32,32>* cnn_fmul_32ns_32ndEe_U27;
    cnn_fdiv_32ns_32ng8j<1,6,32,32,32>* cnn_fdiv_32ns_32ng8j_U28;
    cnn_fexp_32ns_32nhbi<1,4,32,32,32>* cnn_fexp_32ns_32nhbi_U29;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<32> > grp_fu_211_p2;
    sc_signal< sc_lv<32> > reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<4> > d_fu_234_p2;
    sc_signal< sc_lv<4> > d_reg_342;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln35_fu_240_p1;
    sc_signal< sc_lv<64> > zext_ln35_reg_347;
    sc_signal< sc_lv<1> > icmp_ln29_fu_228_p2;
    sc_signal< sc_lv<15> > zext_ln33_fu_244_p1;
    sc_signal< sc_lv<15> > zext_ln33_reg_352;
    sc_signal< sc_lv<11> > f_fu_254_p2;
    sc_signal< sc_lv<11> > f_reg_360;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln33_fu_248_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_198_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_192_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > i_fu_311_p2;
    sc_signal< sc_lv<4> > i_reg_398;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln10_fu_305_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<4> > j_fu_328_p2;
    sc_signal< sc_lv<4> > j_reg_416;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > zext_ln18_fu_334_p1;
    sc_signal< sc_lv<64> > zext_ln18_reg_421;
    sc_signal< sc_lv<1> > icmp_ln16_fu_322_p2;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<4> > d_0_reg_123;
    sc_signal< sc_lv<32> > w_sum_0_reg_134;
    sc_signal< sc_lv<11> > f_0_reg_147;
    sc_signal< sc_lv<32> > sum_0_i_reg_158;
    sc_signal< sc_lv<4> > i_0_i_reg_170;
    sc_signal< sc_lv<4> > j_0_i_reg_181;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > zext_ln35_8_fu_300_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_260_p1;
    sc_signal< sc_lv<64> > zext_ln12_fu_317_p1;
    sc_signal< sc_lv<32> > grp_fu_205_p2;
    sc_signal< sc_lv<32> > grp_fu_192_p0;
    sc_signal< sc_lv<32> > grp_fu_192_p1;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<14> > tmp_1_fu_265_p3;
    sc_signal< sc_lv<12> > tmp_2_fu_277_p3;
    sc_signal< sc_lv<15> > zext_ln35_7_fu_285_p1;
    sc_signal< sc_lv<15> > zext_ln35_6_fu_273_p1;
    sc_signal< sc_lv<15> > add_ln35_fu_289_p2;
    sc_signal< sc_lv<15> > add_ln35_4_fu_295_p2;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state1;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln35_4_fu_295_p2();
    void thread_add_ln35_fu_289_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_234_p2();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_we0();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_254_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_192_p0();
    void thread_grp_fu_192_p1();
    void thread_i_fu_311_p2();
    void thread_icmp_ln10_fu_305_p2();
    void thread_icmp_ln16_fu_322_p2();
    void thread_icmp_ln29_fu_228_p2();
    void thread_icmp_ln33_fu_248_p2();
    void thread_j_fu_328_p2();
    void thread_prediction_address0();
    void thread_prediction_ce0();
    void thread_prediction_d0();
    void thread_prediction_we0();
    void thread_tmp_1_fu_265_p3();
    void thread_tmp_2_fu_277_p3();
    void thread_zext_ln12_fu_317_p1();
    void thread_zext_ln18_fu_334_p1();
    void thread_zext_ln33_fu_244_p1();
    void thread_zext_ln35_3_fu_260_p1();
    void thread_zext_ln35_6_fu_273_p1();
    void thread_zext_ln35_7_fu_285_p1();
    void thread_zext_ln35_8_fu_300_p1();
    void thread_zext_ln35_fu_240_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
