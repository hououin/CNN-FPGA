// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_out< sc_lv<13> > conv_2_out_address0;
    sc_out< sc_logic > conv_2_out_ce0;
    sc_in< sc_lv<32> > conv_2_out_q0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,1,32,32,1>* cnn_fcmp_32ns_32neOg_U21;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > f_fu_193_p2;
    sc_signal< sc_lv<7> > f_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > zext_ln12_fu_199_p1;
    sc_signal< sc_lv<14> > zext_ln12_reg_475;
    sc_signal< sc_lv<1> > icmp_ln9_fu_187_p2;
    sc_signal< sc_lv<12> > zext_ln12_1_fu_203_p1;
    sc_signal< sc_lv<12> > zext_ln12_1_reg_480;
    sc_signal< sc_lv<3> > r_fu_213_p2;
    sc_signal< sc_lv<3> > r_reg_488;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln_fu_219_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_493;
    sc_signal< sc_lv<1> > icmp_ln12_fu_207_p2;
    sc_signal< sc_lv<6> > add_ln35_fu_243_p2;
    sc_signal< sc_lv<6> > add_ln35_reg_498;
    sc_signal< sc_lv<3> > c_fu_255_p2;
    sc_signal< sc_lv<3> > c_reg_506;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > shl_ln1_fu_261_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_511;
    sc_signal< sc_lv<1> > icmp_ln15_fu_249_p2;
    sc_signal< sc_lv<2> > mpr_fu_279_p2;
    sc_signal< sc_lv<2> > mpr_reg_519;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > mul_ln28_fu_294_p2;
    sc_signal< sc_lv<8> > mul_ln28_reg_524;
    sc_signal< sc_lv<1> > icmp_ln19_fu_273_p2;
    sc_signal< sc_lv<2> > mpc_fu_337_p2;
    sc_signal< sc_lv<2> > mpc_reg_532;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln22_fu_331_p2;
    sc_signal< sc_lv<32> > max_2_fu_459_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<7> > f_0_reg_100;
    sc_signal< sc_lv<3> > r_0_reg_111;
    sc_signal< sc_lv<3> > c_0_reg_122;
    sc_signal< sc_lv<32> > max_0_reg_134;
    sc_signal< sc_lv<2> > mpr_0_reg_147;
    sc_signal< sc_lv<32> > max_1_reg_158;
    sc_signal< sc_lv<2> > mpc_0_reg_170;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_322_p1;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_370_p1;
    sc_signal< sc_lv<5> > tmp_7_fu_231_p3;
    sc_signal< sc_lv<6> > zext_ln35_fu_227_p1;
    sc_signal< sc_lv<6> > zext_ln35_1_fu_239_p1;
    sc_signal< sc_lv<4> > zext_ln19_fu_269_p1;
    sc_signal< sc_lv<4> > i_fu_285_p2;
    sc_signal< sc_lv<4> > mul_ln28_fu_294_p0;
    sc_signal< sc_lv<6> > zext_ln35_2_fu_300_p1;
    sc_signal< sc_lv<6> > add_ln35_1_fu_304_p2;
    sc_signal< sc_lv<12> > tmp_9_cast_fu_309_p3;
    sc_signal< sc_lv<12> > add_ln35_2_fu_317_p2;
    sc_signal< sc_lv<4> > zext_ln22_fu_327_p1;
    sc_signal< sc_lv<4> > j_fu_343_p2;
    sc_signal< sc_lv<8> > zext_ln28_1_fu_348_p1;
    sc_signal< sc_lv<8> > add_ln28_fu_352_p2;
    sc_signal< sc_lv<14> > tmp_11_cast_fu_357_p3;
    sc_signal< sc_lv<14> > add_ln28_1_fu_365_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_375_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_393_p1;
    sc_signal< sc_lv<8> > tmp_fu_379_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_389_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_417_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_411_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_397_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_407_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_435_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_429_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_423_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_441_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_447_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_181_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_453_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<8> > mul_ln28_fu_294_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln28_1_fu_365_p2();
    void thread_add_ln28_fu_352_p2();
    void thread_add_ln35_1_fu_304_p2();
    void thread_add_ln35_2_fu_317_p2();
    void thread_add_ln35_fu_243_p2();
    void thread_and_ln28_1_fu_453_p2();
    void thread_and_ln28_fu_447_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_393_p1();
    void thread_bitcast_ln28_fu_375_p1();
    void thread_c_fu_255_p2();
    void thread_conv_2_out_address0();
    void thread_conv_2_out_ce0();
    void thread_f_fu_193_p2();
    void thread_i_fu_285_p2();
    void thread_icmp_ln12_fu_207_p2();
    void thread_icmp_ln15_fu_249_p2();
    void thread_icmp_ln19_fu_273_p2();
    void thread_icmp_ln22_fu_331_p2();
    void thread_icmp_ln28_1_fu_417_p2();
    void thread_icmp_ln28_2_fu_429_p2();
    void thread_icmp_ln28_3_fu_435_p2();
    void thread_icmp_ln28_fu_411_p2();
    void thread_icmp_ln9_fu_187_p2();
    void thread_j_fu_343_p2();
    void thread_max_2_fu_459_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_337_p2();
    void thread_mpr_fu_279_p2();
    void thread_mul_ln28_fu_294_p0();
    void thread_mul_ln28_fu_294_p00();
    void thread_mul_ln28_fu_294_p2();
    void thread_or_ln28_1_fu_441_p2();
    void thread_or_ln28_fu_423_p2();
    void thread_r_fu_213_p2();
    void thread_shl_ln1_fu_261_p3();
    void thread_shl_ln_fu_219_p3();
    void thread_tmp_11_cast_fu_357_p3();
    void thread_tmp_5_fu_397_p4();
    void thread_tmp_7_fu_231_p3();
    void thread_tmp_9_cast_fu_309_p3();
    void thread_tmp_fu_379_p4();
    void thread_trunc_ln28_1_fu_407_p1();
    void thread_trunc_ln28_fu_389_p1();
    void thread_zext_ln12_1_fu_203_p1();
    void thread_zext_ln12_fu_199_p1();
    void thread_zext_ln19_fu_269_p1();
    void thread_zext_ln22_fu_327_p1();
    void thread_zext_ln28_1_fu_348_p1();
    void thread_zext_ln28_2_fu_370_p1();
    void thread_zext_ln35_1_fu_239_p1();
    void thread_zext_ln35_2_fu_300_p1();
    void thread_zext_ln35_3_fu_322_p1();
    void thread_zext_ln35_fu_227_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
