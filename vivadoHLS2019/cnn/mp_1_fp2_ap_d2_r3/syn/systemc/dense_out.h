// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_out_HH_
#define _dense_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "soft_max.h"
#include "cnn_fadd_32ns_32ncud.h"
#include "cnn_fmul_32ns_32ndEe.h"
#include "dense_out_dense_oibs.h"
#include "dense_out_dense_ojbC.h"
#include "dense_out_dense_akbM.h"

namespace ap_rtl {

struct dense_out : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<32> > prediction_Addr_A;
    sc_out< sc_logic > prediction_EN_A;
    sc_out< sc_lv<4> > prediction_WEN_A;
    sc_out< sc_lv<32> > prediction_Din_A;
    sc_in< sc_lv<32> > prediction_Dout_A;
    sc_out< sc_lv<5> > dense_2_out_address0;
    sc_out< sc_logic > dense_2_out_ce0;
    sc_in< sc_lv<32> > dense_2_out_q0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    dense_out(sc_module_name name);
    SC_HAS_PROCESS(dense_out);

    ~dense_out();

    sc_trace_file* mVcdFile;

    dense_out_dense_oibs* dense_out_weights_U;
    dense_out_dense_ojbC* dense_out_bias_U;
    dense_out_dense_akbM* dense_array_U;
    soft_max* grp_soft_max_fu_149;
    cnn_fadd_32ns_32ncud<1,4,32,32,32>* cnn_fadd_32ns_32ncud_U41;
    cnn_fmul_32ns_32ndEe<1,2,32,32,32>* cnn_fmul_32ns_32ndEe_U42;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > dense_out_weights_address0;
    sc_signal< sc_logic > dense_out_weights_ce0;
    sc_signal< sc_lv<32> > dense_out_weights_q0;
    sc_signal< sc_lv<4> > dense_out_bias_address0;
    sc_signal< sc_logic > dense_out_bias_ce0;
    sc_signal< sc_lv<32> > dense_out_bias_q0;
    sc_signal< sc_lv<4> > d_fu_175_p2;
    sc_signal< sc_lv<4> > d_reg_249;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln38_fu_181_p1;
    sc_signal< sc_lv<64> > zext_ln38_reg_254;
    sc_signal< sc_lv<1> > icmp_ln31_fu_169_p2;
    sc_signal< sc_lv<9> > zext_ln36_fu_185_p1;
    sc_signal< sc_lv<9> > zext_ln36_reg_260;
    sc_signal< sc_lv<5> > f_fu_195_p2;
    sc_signal< sc_lv<5> > f_reg_268;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln36_fu_189_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_163_p2;
    sc_signal< sc_lv<32> > tmp_4_reg_298;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_156_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > grp_soft_max_fu_149_ap_start;
    sc_signal< sc_logic > grp_soft_max_fu_149_ap_done;
    sc_signal< sc_logic > grp_soft_max_fu_149_ap_idle;
    sc_signal< sc_logic > grp_soft_max_fu_149_ap_ready;
    sc_signal< sc_lv<4> > grp_soft_max_fu_149_dense_array_address0;
    sc_signal< sc_logic > grp_soft_max_fu_149_dense_array_ce0;
    sc_signal< sc_lv<32> > grp_soft_max_fu_149_prediction_Addr_A;
    sc_signal< sc_logic > grp_soft_max_fu_149_prediction_EN_A;
    sc_signal< sc_lv<4> > grp_soft_max_fu_149_prediction_WEN_A;
    sc_signal< sc_lv<32> > grp_soft_max_fu_149_prediction_Din_A;
    sc_signal< sc_lv<4> > d_0_reg_115;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > w_sum_0_reg_126;
    sc_signal< sc_lv<5> > f_0_reg_138;
    sc_signal< sc_logic > grp_soft_max_fu_149_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<64> > zext_ln38_4_fu_241_p1;
    sc_signal< sc_lv<64> > zext_ln38_1_fu_201_p1;
    sc_signal< sc_lv<32> > grp_fu_156_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<8> > tmp_s_fu_206_p3;
    sc_signal< sc_lv<6> > tmp_158_fu_218_p3;
    sc_signal< sc_lv<9> > zext_ln38_3_fu_226_p1;
    sc_signal< sc_lv<9> > zext_ln38_2_fu_214_p1;
    sc_signal< sc_lv<9> > add_ln38_fu_230_p2;
    sc_signal< sc_lv<9> > add_ln38_1_fu_236_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln38_1_fu_236_p2();
    void thread_add_ln38_fu_230_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_fu_175_p2();
    void thread_dense_2_out_address0();
    void thread_dense_2_out_ce0();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_we0();
    void thread_dense_out_bias_address0();
    void thread_dense_out_bias_ce0();
    void thread_dense_out_weights_address0();
    void thread_dense_out_weights_ce0();
    void thread_f_fu_195_p2();
    void thread_grp_fu_156_p1();
    void thread_grp_soft_max_fu_149_ap_start();
    void thread_icmp_ln31_fu_169_p2();
    void thread_icmp_ln36_fu_189_p2();
    void thread_prediction_Addr_A();
    void thread_prediction_Din_A();
    void thread_prediction_EN_A();
    void thread_prediction_WEN_A();
    void thread_tmp_158_fu_218_p3();
    void thread_tmp_s_fu_206_p3();
    void thread_zext_ln36_fu_185_p1();
    void thread_zext_ln38_1_fu_201_p1();
    void thread_zext_ln38_2_fu_214_p1();
    void thread_zext_ln38_3_fu_226_p1();
    void thread_zext_ln38_4_fu_241_p1();
    void thread_zext_ln38_fu_181_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
