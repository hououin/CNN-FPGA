// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_1_HH_
#define _conv_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_1_fadd_32ns_cud.h"
#include "conv_1_fmul_32ns_dEe.h"
#include "conv_1_fcmp_32ns_eOg.h"
#include "conv_1_mac_muladdfYi.h"
#include "conv_1_conv_1_weibkb.h"
#include "conv_1_conv_1_bias.h"

namespace ap_rtl {

struct conv_1 : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > conv_input_0_address0;
    sc_out< sc_logic > conv_input_0_ce0;
    sc_in< sc_lv<32> > conv_input_0_q0;
    sc_out< sc_lv<10> > conv_input_1_address0;
    sc_out< sc_logic > conv_input_1_ce0;
    sc_in< sc_lv<32> > conv_input_1_q0;
    sc_out< sc_lv<10> > conv_input_2_address0;
    sc_out< sc_logic > conv_input_2_ce0;
    sc_in< sc_lv<32> > conv_input_2_q0;
    sc_out< sc_lv<15> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_out< sc_logic > conv_out_we0;
    sc_out< sc_lv<32> > conv_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv_1(sc_module_name name);
    SC_HAS_PROCESS(conv_1);

    ~conv_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_1_conv_1_weibkb* conv_1_weights_0_U;
    conv_1_conv_1_bias* conv_1_bias_U;
    conv_1_fadd_32ns_cud<1,2,32,32,32>* conv_1_fadd_32ns_cud_U1;
    conv_1_fmul_32ns_dEe<1,2,32,32,32>* conv_1_fmul_32ns_dEe_U2;
    conv_1_fcmp_32ns_eOg<1,1,32,32,1>* conv_1_fcmp_32ns_eOg_U3;
    conv_1_mac_muladdfYi<1,1,5,6,5,10>* conv_1_mac_muladdfYi_U4;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > conv_1_weights_0_address0;
    sc_signal< sc_logic > conv_1_weights_0_ce0;
    sc_signal< sc_lv<32> > conv_1_weights_0_q0;
    sc_signal< sc_lv<5> > conv_1_bias_address0;
    sc_signal< sc_logic > conv_1_bias_ce0;
    sc_signal< sc_lv<32> > conv_1_bias_q0;
    sc_signal< sc_lv<4> > indvar_flatten_reg_243;
    sc_signal< sc_lv<2> > wr_0_reg_254;
    sc_signal< sc_lv<32> > w_sum_1_reg_265;
    sc_signal< sc_lv<2> > wc_0_reg_277;
    sc_signal< sc_lv<32> > grp_fu_294_p2;
    sc_signal< sc_lv<32> > reg_308;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_726;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > grp_fu_288_p2;
    sc_signal< sc_lv<32> > reg_313;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state8_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<1> > icmp_ln8_fu_318_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<15> > add_ln8_fu_324_p2;
    sc_signal< sc_lv<15> > add_ln8_reg_684;
    sc_signal< sc_lv<1> > icmp_ln11_fu_336_p2;
    sc_signal< sc_lv<1> > icmp_ln11_reg_689;
    sc_signal< sc_lv<5> > select_ln35_1_fu_350_p3;
    sc_signal< sc_lv<5> > select_ln35_1_reg_694;
    sc_signal< sc_lv<6> > select_ln35_2_fu_392_p3;
    sc_signal< sc_lv<6> > select_ln35_2_reg_700;
    sc_signal< sc_lv<5> > select_ln35_3_fu_400_p3;
    sc_signal< sc_lv<5> > select_ln35_3_reg_705;
    sc_signal< sc_lv<64> > zext_ln26_fu_423_p1;
    sc_signal< sc_lv<64> > zext_ln26_reg_711;
    sc_signal< sc_lv<10> > zext_ln35_2_fu_427_p1;
    sc_signal< sc_lv<10> > zext_ln35_2_reg_716;
    sc_signal< sc_lv<15> > conv_out_addr_reg_721;
    sc_signal< sc_lv<1> > icmp_ln18_fu_446_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln18_reg_726_pp0_iter1_reg;
    sc_signal< sc_lv<4> > add_ln18_1_fu_452_p2;
    sc_signal< sc_lv<4> > add_ln18_1_reg_730;
    sc_signal< sc_lv<2> > select_ln18_fu_470_p3;
    sc_signal< sc_lv<2> > select_ln18_reg_735;
    sc_signal< sc_lv<2> > select_ln18_1_fu_478_p3;
    sc_signal< sc_lv<2> > select_ln18_1_reg_740;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > conv_input_1_load_reg_775;
    sc_signal< sc_lv<32> > conv_input_2_load_reg_780;
    sc_signal< sc_lv<32> > tmp_1_2_reg_785;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state7_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<2> > wc_fu_597_p2;
    sc_signal< sc_lv<2> > wc_reg_790;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<6> > f_fu_602_p2;
    sc_signal< sc_lv<6> > f_reg_805;
    sc_signal< sc_lv<11> > select_ln11_fu_613_p3;
    sc_signal< sc_lv<11> > select_ln11_reg_810;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<15> > indvar_flatten21_reg_187;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<5> > r_0_reg_198;
    sc_signal< sc_lv<11> > indvar_flatten7_reg_209;
    sc_signal< sc_lv<5> > c_0_reg_221;
    sc_signal< sc_lv<6> > f_0_reg_232;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_247_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_wr_0_phi_fu_258_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_1_phi_fu_269_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_wc_0_phi_fu_281_p4;
    sc_signal< sc_lv<64> > zext_ln35_4_fu_441_p1;
    sc_signal< sc_lv<64> > zext_ln26_6_fu_570_p1;
    sc_signal< sc_lv<64> > sext_ln26_fu_590_p1;
    sc_signal< sc_lv<32> > grp_fu_288_p0;
    sc_signal< sc_lv<32> > grp_fu_288_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<32> > grp_fu_294_p0;
    sc_signal< sc_lv<32> > grp_fu_294_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<5> > r_fu_330_p2;
    sc_signal< sc_lv<1> > icmp_ln14_fu_368_p2;
    sc_signal< sc_lv<1> > xor_ln35_fu_362_p2;
    sc_signal< sc_lv<5> > select_ln35_fu_342_p3;
    sc_signal< sc_lv<1> > and_ln35_fu_374_p2;
    sc_signal< sc_lv<1> > or_ln35_fu_386_p2;
    sc_signal< sc_lv<5> > c_fu_380_p2;
    sc_signal< sc_lv<10> > grp_fu_671_p3;
    sc_signal< sc_lv<15> > tmp_1_fu_412_p3;
    sc_signal< sc_lv<16> > zext_ln11_fu_419_p1;
    sc_signal< sc_lv<16> > zext_ln35_3_fu_431_p1;
    sc_signal< sc_lv<16> > add_ln35_1_fu_435_p2;
    sc_signal< sc_lv<1> > icmp_ln21_fu_464_p2;
    sc_signal< sc_lv<2> > wr_fu_458_p2;
    sc_signal< sc_lv<4> > tmp_4_fu_490_p3;
    sc_signal< sc_lv<5> > zext_ln26_2_fu_498_p1;
    sc_signal< sc_lv<5> > zext_ln26_1_fu_486_p1;
    sc_signal< sc_lv<5> > add_ln18_fu_508_p2;
    sc_signal< sc_lv<10> > tmp_7_fu_513_p3;
    sc_signal< sc_lv<7> > tmp_8_fu_525_p3;
    sc_signal< sc_lv<11> > zext_ln26_3_fu_521_p1;
    sc_signal< sc_lv<11> > zext_ln26_4_fu_533_p1;
    sc_signal< sc_lv<5> > sub_ln26_fu_502_p2;
    sc_signal< sc_lv<5> > zext_ln26_5_fu_547_p1;
    sc_signal< sc_lv<5> > add_ln26_fu_551_p2;
    sc_signal< sc_lv<10> > tmp_10_cast_fu_557_p3;
    sc_signal< sc_lv<10> > add_ln26_2_fu_565_p2;
    sc_signal< sc_lv<5> > zext_ln21_fu_543_p1;
    sc_signal< sc_lv<5> > add_ln26_1_fu_575_p2;
    sc_signal< sc_lv<11> > sub_ln26_1_fu_537_p2;
    sc_signal< sc_lv<11> > zext_ln26_7_fu_580_p1;
    sc_signal< sc_lv<11> > add_ln26_3_fu_584_p2;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<11> > add_ln11_1_fu_607_p2;
    sc_signal< sc_lv<32> > bitcast_ln34_fu_620_p1;
    sc_signal< sc_lv<8> > tmp_fu_624_p4;
    sc_signal< sc_lv<23> > trunc_ln34_fu_634_p1;
    sc_signal< sc_lv<1> > icmp_ln34_1_fu_644_p2;
    sc_signal< sc_lv<1> > icmp_ln34_fu_638_p2;
    sc_signal< sc_lv<1> > or_ln34_fu_650_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_302_p2;
    sc_signal< sc_lv<1> > and_ln34_fu_656_p2;
    sc_signal< sc_lv<5> > grp_fu_671_p0;
    sc_signal< sc_lv<6> > grp_fu_671_p1;
    sc_signal< sc_lv<5> > grp_fu_671_p2;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > grp_fu_671_p00;
    sc_signal< sc_lv<10> > grp_fu_671_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_pp0_stage0;
    static const sc_lv<11> ap_ST_fsm_pp0_stage1;
    static const sc_lv<11> ap_ST_fsm_pp0_stage2;
    static const sc_lv<11> ap_ST_fsm_pp0_stage3;
    static const sc_lv<11> ap_ST_fsm_pp0_stage4;
    static const sc_lv<11> ap_ST_fsm_pp0_stage5;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<11> ap_ST_fsm_state12;
    static const sc_lv<11> ap_ST_fsm_state13;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<15> ap_const_lv15_5480;
    static const sc_lv<15> ap_const_lv15_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<11> ap_const_lv11_340;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_1_fu_607_p2();
    void thread_add_ln18_1_fu_452_p2();
    void thread_add_ln18_fu_508_p2();
    void thread_add_ln26_1_fu_575_p2();
    void thread_add_ln26_2_fu_565_p2();
    void thread_add_ln26_3_fu_584_p2();
    void thread_add_ln26_fu_551_p2();
    void thread_add_ln35_1_fu_435_p2();
    void thread_add_ln8_fu_324_p2();
    void thread_and_ln34_fu_656_p2();
    void thread_and_ln35_fu_374_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage1_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage4_iter0();
    void thread_ap_block_state8_pp0_stage5_iter0();
    void thread_ap_block_state9_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_247_p4();
    void thread_ap_phi_mux_w_sum_1_phi_fu_269_p4();
    void thread_ap_phi_mux_wc_0_phi_fu_281_p4();
    void thread_ap_phi_mux_wr_0_phi_fu_258_p4();
    void thread_ap_ready();
    void thread_bitcast_ln34_fu_620_p1();
    void thread_c_fu_380_p2();
    void thread_conv_1_bias_address0();
    void thread_conv_1_bias_ce0();
    void thread_conv_1_weights_0_address0();
    void thread_conv_1_weights_0_ce0();
    void thread_conv_input_0_address0();
    void thread_conv_input_0_ce0();
    void thread_conv_input_1_address0();
    void thread_conv_input_1_ce0();
    void thread_conv_input_2_address0();
    void thread_conv_input_2_ce0();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_conv_out_d0();
    void thread_conv_out_we0();
    void thread_f_fu_602_p2();
    void thread_grp_fu_288_p0();
    void thread_grp_fu_288_p1();
    void thread_grp_fu_294_p0();
    void thread_grp_fu_294_p1();
    void thread_grp_fu_671_p0();
    void thread_grp_fu_671_p00();
    void thread_grp_fu_671_p1();
    void thread_grp_fu_671_p2();
    void thread_grp_fu_671_p20();
    void thread_icmp_ln11_fu_336_p2();
    void thread_icmp_ln14_fu_368_p2();
    void thread_icmp_ln18_fu_446_p2();
    void thread_icmp_ln21_fu_464_p2();
    void thread_icmp_ln34_1_fu_644_p2();
    void thread_icmp_ln34_fu_638_p2();
    void thread_icmp_ln8_fu_318_p2();
    void thread_or_ln34_fu_650_p2();
    void thread_or_ln35_fu_386_p2();
    void thread_r_fu_330_p2();
    void thread_select_ln11_fu_613_p3();
    void thread_select_ln18_1_fu_478_p3();
    void thread_select_ln18_fu_470_p3();
    void thread_select_ln35_1_fu_350_p3();
    void thread_select_ln35_2_fu_392_p3();
    void thread_select_ln35_3_fu_400_p3();
    void thread_select_ln35_fu_342_p3();
    void thread_sext_ln26_fu_590_p1();
    void thread_sub_ln26_1_fu_537_p2();
    void thread_sub_ln26_fu_502_p2();
    void thread_tmp_10_cast_fu_557_p3();
    void thread_tmp_1_fu_412_p3();
    void thread_tmp_4_fu_490_p3();
    void thread_tmp_7_fu_513_p3();
    void thread_tmp_8_fu_525_p3();
    void thread_tmp_fu_624_p4();
    void thread_trunc_ln34_fu_634_p1();
    void thread_wc_fu_597_p2();
    void thread_wr_fu_458_p2();
    void thread_xor_ln35_fu_362_p2();
    void thread_zext_ln11_fu_419_p1();
    void thread_zext_ln21_fu_543_p1();
    void thread_zext_ln26_1_fu_486_p1();
    void thread_zext_ln26_2_fu_498_p1();
    void thread_zext_ln26_3_fu_521_p1();
    void thread_zext_ln26_4_fu_533_p1();
    void thread_zext_ln26_5_fu_547_p1();
    void thread_zext_ln26_6_fu_570_p1();
    void thread_zext_ln26_7_fu_580_p1();
    void thread_zext_ln26_fu_423_p1();
    void thread_zext_ln35_2_fu_427_p1();
    void thread_zext_ln35_3_fu_431_p1();
    void thread_zext_ln35_4_fu_441_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
