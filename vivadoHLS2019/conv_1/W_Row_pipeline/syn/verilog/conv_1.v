// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.022200,HLS_SYN_LAT=1168134,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=1073,HLS_SYN_LUT=2068,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_address0,
        conv_input_ce0,
        conv_input_q0,
        conv_input_address1,
        conv_input_ce1,
        conv_input_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_pp0_stage1 = 20'd4;
parameter    ap_ST_fsm_pp0_stage2 = 20'd8;
parameter    ap_ST_fsm_pp0_stage3 = 20'd16;
parameter    ap_ST_fsm_pp0_stage4 = 20'd32;
parameter    ap_ST_fsm_pp0_stage5 = 20'd64;
parameter    ap_ST_fsm_pp0_stage6 = 20'd128;
parameter    ap_ST_fsm_pp0_stage7 = 20'd256;
parameter    ap_ST_fsm_pp0_stage8 = 20'd512;
parameter    ap_ST_fsm_pp0_stage9 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 20'd262144;
parameter    ap_ST_fsm_state25 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_input_address0;
output   conv_input_ce0;
input  [31:0] conv_input_q0;
output  [11:0] conv_input_address1;
output   conv_input_ce1;
input  [31:0] conv_input_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_input_address0;
reg conv_input_ce0;
reg[11:0] conv_input_address1;
reg conv_input_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
wire   [6:0] conv_1_weights_0_0_address0;
reg    conv_1_weights_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_q0;
wire   [6:0] conv_1_weights_1_0_address0;
reg    conv_1_weights_1_0_ce0;
wire   [31:0] conv_1_weights_1_0_q0;
wire   [6:0] conv_1_weights_2_0_address0;
reg    conv_1_weights_2_0_ce0;
wire   [31:0] conv_1_weights_2_0_q0;
reg   [15:0] indvar_flatten47_reg_259;
reg   [4:0] r_0_reg_270;
reg   [11:0] indvar_flatten14_reg_281;
reg   [4:0] c_0_reg_292;
reg   [7:0] indvar_flatten_reg_303;
reg   [5:0] f_0_reg_314;
reg   [1:0] wr_0_reg_325;
reg   [31:0] w_sum_0_reg_336;
reg   [31:0] reg_366;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state21_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_990;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state22_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state24_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] reg_372;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state23_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_352_p2;
reg   [31:0] reg_378;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] reg_383;
wire   [31:0] grp_fu_348_p2;
reg   [31:0] reg_390;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg   [31:0] reg_395;
wire   [0:0] icmp_ln8_fu_412_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state20_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln8_reg_990_pp0_iter1_reg;
wire   [15:0] add_ln8_fu_418_p2;
reg   [15:0] add_ln8_reg_994;
wire   [4:0] select_ln35_1_fu_444_p3;
reg   [4:0] select_ln35_1_reg_999;
wire   [4:0] select_ln35_5_fu_518_p3;
reg   [4:0] select_ln35_5_reg_1005;
wire   [0:0] or_ln26_1_fu_596_p2;
reg   [0:0] or_ln26_1_reg_1011;
wire   [1:0] select_ln26_fu_602_p3;
reg   [1:0] select_ln26_reg_1016;
wire   [5:0] select_ln26_2_fu_610_p3;
reg   [5:0] select_ln26_2_reg_1021;
wire   [12:0] sub_ln26_1_fu_713_p2;
reg   [12:0] sub_ln26_1_reg_1043;
wire   [12:0] sub_ln26_2_fu_757_p2;
reg   [12:0] sub_ln26_2_reg_1058;
wire   [12:0] sub_ln26_3_fu_785_p2;
reg   [12:0] sub_ln26_3_reg_1065;
wire   [7:0] select_ln14_fu_797_p3;
reg   [7:0] select_ln14_reg_1072;
wire   [11:0] select_ln11_fu_811_p3;
reg   [11:0] select_ln11_reg_1077;
reg   [31:0] conv_1_weights_1_0_l_reg_1097;
reg   [31:0] conv_1_weights_2_0_l_reg_1102;
wire   [31:0] select_ln26_1_fu_833_p3;
reg   [31:0] conv_input_load_5_reg_1132;
reg   [31:0] conv_input_load_7_reg_1142;
reg   [31:0] tmp_1_1_1_reg_1147;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] tmp_1_2_reg_1152;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] tmp_1_2_2_reg_1157;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [1:0] wr_fu_885_p2;
reg   [1:0] wr_reg_1162;
reg   [14:0] conv_out_addr_reg_1168;
wire   [0:0] icmp_ln18_1_fu_925_p2;
reg   [0:0] icmp_ln18_1_reg_1173;
reg   [31:0] w_sum_3_2_2_reg_1182;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] conv_1_bias_load_reg_1188;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage4_subdone;
reg   [15:0] ap_phi_mux_indvar_flatten47_phi_fu_263_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_274_p4;
reg   [11:0] ap_phi_mux_indvar_flatten14_phi_fu_285_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_296_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_307_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_318_p4;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_329_p4;
reg   [31:0] ap_phi_mux_w_sum_0_phi_fu_340_p4;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_5_fu_644_p1;
wire   [63:0] zext_ln26_8_fu_719_p1;
wire   [63:0] zext_ln26_9_fu_730_p1;
wire   [63:0] zext_ln26_10_fu_824_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_11_fu_829_p1;
wire   [63:0] zext_ln26_12_fu_846_p1;
wire   [63:0] zext_ln26_13_fu_856_p1;
wire   [63:0] zext_ln26_14_fu_861_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_15_fu_870_p1;
wire   [63:0] zext_ln26_16_fu_880_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln35_5_fu_920_p1;
wire   [63:0] zext_ln26_3_fu_910_p1;
reg   [31:0] grp_fu_348_p0;
reg   [31:0] grp_fu_348_p1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
reg   [31:0] grp_fu_352_p0;
reg   [31:0] grp_fu_352_p1;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage9;
wire   [0:0] icmp_ln11_fu_430_p2;
wire   [4:0] r_fu_424_p2;
wire   [4:0] c_fu_400_p2;
wire   [4:0] add_ln26_2_fu_406_p2;
wire   [0:0] icmp_ln18_fu_474_p2;
wire   [0:0] xor_ln35_fu_468_p2;
wire   [0:0] icmp_ln14_fu_486_p2;
wire   [4:0] select_ln35_fu_436_p3;
wire   [0:0] and_ln35_1_fu_492_p2;
wire   [0:0] or_ln35_fu_504_p2;
wire   [4:0] add_ln26_3_fu_498_p2;
wire   [4:0] add_ln26_4_fu_530_p2;
wire   [4:0] select_ln35_2_fu_452_p3;
wire   [4:0] select_ln35_6_fu_536_p3;
wire   [4:0] add_ln26_5_fu_548_p2;
wire   [4:0] select_ln35_3_fu_460_p3;
wire   [4:0] select_ln35_7_fu_554_p3;
wire   [0:0] xor_ln35_1_fu_566_p2;
wire   [0:0] and_ln35_fu_480_p2;
wire   [0:0] or_ln35_1_fu_572_p2;
wire   [5:0] select_ln35_4_fu_510_p3;
wire   [0:0] and_ln35_2_fu_578_p2;
wire   [0:0] or_ln26_fu_590_p2;
wire   [5:0] f_fu_584_p2;
wire   [6:0] tmp_3_fu_626_p3;
wire   [7:0] zext_ln26_4_fu_634_p1;
wire   [7:0] zext_ln26_1_fu_618_p1;
wire   [7:0] add_ln26_6_fu_638_p2;
wire   [4:0] zext_ln18_fu_622_p1;
wire   [4:0] add_ln26_fu_651_p2;
wire   [9:0] tmp_6_fu_657_p3;
wire   [6:0] tmp_7_fu_669_p3;
wire   [10:0] zext_ln26_6_fu_665_p1;
wire   [10:0] zext_ln26_7_fu_677_p1;
wire   [10:0] sub_ln26_fu_681_p2;
wire  signed [11:0] sext_ln26_fu_687_p1;
wire   [11:0] zext_ln35_1_fu_526_p1;
wire  signed [11:0] add_ln26_7_fu_691_p2;
wire   [10:0] trunc_ln26_fu_701_p1;
wire   [12:0] p_shl3_cast_fu_705_p3;
wire  signed [12:0] sext_ln26_1_fu_697_p1;
wire   [12:0] add_ln26_8_fu_724_p2;
wire   [11:0] zext_ln35_3_fu_544_p1;
wire  signed [11:0] add_ln26_10_fu_735_p2;
wire   [10:0] trunc_ln26_1_fu_745_p1;
wire   [12:0] p_shl2_cast_fu_749_p3;
wire  signed [12:0] sext_ln26_2_fu_741_p1;
wire   [11:0] zext_ln35_4_fu_562_p1;
wire  signed [11:0] add_ln26_13_fu_763_p2;
wire   [10:0] trunc_ln26_2_fu_773_p1;
wire   [12:0] p_shl_cast_fu_777_p3;
wire  signed [12:0] sext_ln26_3_fu_769_p1;
wire   [7:0] add_ln14_fu_791_p2;
wire   [11:0] add_ln11_fu_805_p2;
wire   [12:0] add_ln26_9_fu_819_p2;
wire   [12:0] add_ln26_11_fu_841_p2;
wire   [12:0] add_ln26_12_fu_851_p2;
wire   [12:0] add_ln26_14_fu_865_p2;
wire   [12:0] add_ln26_15_fu_875_p2;
wire    ap_block_pp0_stage17;
wire   [9:0] grp_fu_981_p3;
wire   [14:0] tmp_1_fu_896_p3;
wire   [15:0] zext_ln26_fu_903_p1;
wire   [15:0] zext_ln26_2_fu_907_p1;
wire   [15:0] add_ln35_1_fu_914_p2;
wire   [31:0] bitcast_ln34_fu_930_p1;
wire   [7:0] tmp_fu_934_p4;
wire   [22:0] trunc_ln34_fu_944_p1;
wire   [0:0] icmp_ln34_1_fu_954_p2;
wire   [0:0] icmp_ln34_fu_948_p2;
wire   [0:0] or_ln34_fu_960_p2;
wire   [0:0] tmp_5_fu_360_p2;
wire   [0:0] and_ln34_fu_966_p2;
wire   [5:0] grp_fu_981_p0;
wire   [4:0] grp_fu_981_p1;
wire   [4:0] grp_fu_981_p2;
wire    ap_block_pp0_stage4_00001;
wire    ap_CS_fsm_state25;
reg   [19:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage16_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_981_p10;
wire   [9:0] grp_fu_981_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_address0),
    .ce0(conv_1_weights_0_0_ce0),
    .q0(conv_1_weights_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_address0),
    .ce0(conv_1_weights_1_0_ce0),
    .q0(conv_1_weights_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_address0),
    .ce0(conv_1_weights_2_0_ce0),
    .q0(conv_1_weights_2_0_q0)
);

conv_1_fadd_32ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_eOg_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_348_p0),
    .din1(grp_fu_348_p1),
    .ce(1'b1),
    .dout(grp_fu_348_p2)
);

conv_1_fmul_32ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_fYi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .din1(grp_fu_352_p1),
    .ce(1'b1),
    .dout(grp_fu_352_p2)
);

conv_1_fcmp_32ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_g8j_U3(
    .din0(grp_fu_348_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_5_fu_360_p2)
);

conv_1_mac_muladdhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_1_mac_muladdhbi_U4(
    .din0(grp_fu_981_p0),
    .din1(grp_fu_981_p1),
    .din2(grp_fu_981_p2),
    .dout(grp_fu_981_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        c_0_reg_292 <= select_ln35_5_reg_1005;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_292 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        f_0_reg_314 <= select_ln26_2_reg_1021;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_314 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        indvar_flatten14_reg_281 <= select_ln11_reg_1077;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten14_reg_281 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        indvar_flatten47_reg_259 <= add_ln8_reg_994;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten47_reg_259 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        indvar_flatten_reg_303 <= select_ln14_reg_1072;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_303 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        r_0_reg_270 <= select_ln35_1_reg_999;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_270 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_372 <= conv_input_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_372 <= conv_input_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_383 <= conv_input_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_383 <= conv_input_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_990_pp0_iter1_reg == 1'd0))) begin
        w_sum_0_reg_336 <= w_sum_3_2_2_reg_1182;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        w_sum_0_reg_336 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        wr_0_reg_325 <= wr_reg_1162;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        wr_0_reg_325 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_994 <= add_ln8_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_1_reg_1173 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_bias_load_reg_1188 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_990 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_1_0_l_reg_1097 <= conv_1_weights_1_0_q0;
        conv_1_weights_2_0_l_reg_1102 <= conv_1_weights_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_990 == 1'd0))) begin
        conv_input_load_5_reg_1132 <= conv_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_990 == 1'd0))) begin
        conv_input_load_7_reg_1142 <= conv_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        conv_out_addr_reg_1168 <= zext_ln35_5_fu_920_p1;
        icmp_ln18_1_reg_1173 <= icmp_ln18_1_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_990 <= icmp_ln8_fu_412_p2;
        icmp_ln8_reg_990_pp0_iter1_reg <= icmp_ln8_reg_990;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_412_p2 == 1'd0))) begin
        or_ln26_1_reg_1011 <= or_ln26_1_fu_596_p2;
        select_ln26_reg_1016 <= select_ln26_fu_602_p3;
        sub_ln26_1_reg_1043 <= sub_ln26_1_fu_713_p2;
        sub_ln26_2_reg_1058 <= sub_ln26_2_fu_757_p2;
        sub_ln26_3_reg_1065 <= sub_ln26_3_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_990 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_366 <= conv_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_990 == 1'd0)))) begin
        reg_378 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_990 == 1'd0)))) begin
        reg_390 <= grp_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_990 == 1'd0)))) begin
        reg_395 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_412_p2 == 1'd0))) begin
        select_ln11_reg_1077 <= select_ln11_fu_811_p3;
        select_ln14_reg_1072 <= select_ln14_fu_797_p3;
        select_ln26_2_reg_1021 <= select_ln26_2_fu_610_p3;
        select_ln35_1_reg_999 <= select_ln35_1_fu_444_p3;
        select_ln35_5_reg_1005 <= select_ln35_5_fu_518_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        tmp_1_1_1_reg_1147 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        tmp_1_2_2_reg_1157 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        tmp_1_2_reg_1152 <= grp_fu_352_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_990_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_3_2_2_reg_1182 <= grp_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_990 == 1'd0))) begin
        wr_reg_1162 <= wr_fu_885_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_412_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_296_p4 = select_ln35_5_reg_1005;
    end else begin
        ap_phi_mux_c_0_phi_fu_296_p4 = c_0_reg_292;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_318_p4 = select_ln26_2_reg_1021;
    end else begin
        ap_phi_mux_f_0_phi_fu_318_p4 = f_0_reg_314;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_indvar_flatten14_phi_fu_285_p4 = select_ln11_reg_1077;
    end else begin
        ap_phi_mux_indvar_flatten14_phi_fu_285_p4 = indvar_flatten14_reg_281;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_indvar_flatten47_phi_fu_263_p4 = add_ln8_reg_994;
    end else begin
        ap_phi_mux_indvar_flatten47_phi_fu_263_p4 = indvar_flatten47_reg_259;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_307_p4 = select_ln14_reg_1072;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_307_p4 = indvar_flatten_reg_303;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_274_p4 = select_ln35_1_reg_999;
    end else begin
        ap_phi_mux_r_0_phi_fu_274_p4 = r_0_reg_270;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_990_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_w_sum_0_phi_fu_340_p4 = w_sum_3_2_2_reg_1182;
    end else begin
        ap_phi_mux_w_sum_0_phi_fu_340_p4 = w_sum_0_reg_336;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_990 == 1'd0))) begin
        ap_phi_mux_wr_0_phi_fu_329_p4 = wr_reg_1162;
    end else begin
        ap_phi_mux_wr_0_phi_fu_329_p4 = wr_0_reg_325;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address0 = zext_ln26_16_fu_880_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address0 = zext_ln26_14_fu_861_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address0 = zext_ln26_12_fu_846_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address0 = zext_ln26_10_fu_824_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address0 = zext_ln26_8_fu_719_p1;
        end else begin
            conv_input_address0 = 'bx;
        end
    end else begin
        conv_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address1 = zext_ln26_15_fu_870_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address1 = zext_ln26_13_fu_856_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address1 = zext_ln26_11_fu_829_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address1 = zext_ln26_9_fu_730_p1;
        end else begin
            conv_input_address1 = 'bx;
        end
    end else begin
        conv_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce0 = 1'b1;
    end else begin
        conv_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce1 = 1'b1;
    end else begin
        conv_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln18_1_reg_1173 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_348_p0 = w_sum_3_2_2_reg_1182;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_348_p0 = reg_390;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_348_p0 = select_ln26_1_fu_833_p3;
    end else begin
        grp_fu_348_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_348_p1 = conv_1_bias_load_reg_1188;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_348_p1 = tmp_1_2_2_reg_1157;
    end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_348_p1 = tmp_1_2_reg_1152;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_348_p1 = tmp_1_1_1_reg_1147;
    end else if ((((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_348_p1 = reg_395;
    end else if ((((1'b0 == ap_block_pp0_stage16) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_348_p1 = reg_378;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_348_p1 = grp_fu_352_p2;
    end else begin
        grp_fu_348_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = reg_383;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = conv_input_load_7_reg_1142;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = conv_1_weights_2_0_l_reg_1102;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = conv_input_load_5_reg_1132;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = conv_1_weights_1_0_l_reg_1097;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p0 = reg_366;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_352_p0 = reg_372;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_352_p0 = conv_1_weights_0_0_q0;
    end else begin
        grp_fu_352_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p1 = reg_366;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_352_p1 = reg_383;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_352_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_352_p1 = conv_input_q0;
    end else begin
        grp_fu_352_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln8_fu_412_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln8_fu_412_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_805_p2 = (ap_phi_mux_indvar_flatten14_phi_fu_285_p4 + 12'd1);

assign add_ln14_fu_791_p2 = (ap_phi_mux_indvar_flatten_phi_fu_307_p4 + 8'd1);

assign add_ln26_10_fu_735_p2 = ($signed(sext_ln26_fu_687_p1) + $signed(zext_ln35_3_fu_544_p1));

assign add_ln26_11_fu_841_p2 = (13'd1 + sub_ln26_2_reg_1058);

assign add_ln26_12_fu_851_p2 = (13'd2 + sub_ln26_2_reg_1058);

assign add_ln26_13_fu_763_p2 = ($signed(sext_ln26_fu_687_p1) + $signed(zext_ln35_4_fu_562_p1));

assign add_ln26_14_fu_865_p2 = (13'd1 + sub_ln26_3_reg_1065);

assign add_ln26_15_fu_875_p2 = (13'd2 + sub_ln26_3_reg_1065);

assign add_ln26_2_fu_406_p2 = (ap_phi_mux_c_0_phi_fu_296_p4 + 5'd2);

assign add_ln26_3_fu_498_p2 = (5'd1 + select_ln35_fu_436_p3);

assign add_ln26_4_fu_530_p2 = (5'd2 + select_ln35_fu_436_p3);

assign add_ln26_5_fu_548_p2 = (5'd3 + select_ln35_fu_436_p3);

assign add_ln26_6_fu_638_p2 = (zext_ln26_4_fu_634_p1 + zext_ln26_1_fu_618_p1);

assign add_ln26_7_fu_691_p2 = ($signed(sext_ln26_fu_687_p1) + $signed(zext_ln35_1_fu_526_p1));

assign add_ln26_8_fu_724_p2 = (13'd1 + sub_ln26_1_fu_713_p2);

assign add_ln26_9_fu_819_p2 = (13'd2 + sub_ln26_1_reg_1043);

assign add_ln26_fu_651_p2 = (zext_ln18_fu_622_p1 + select_ln35_1_fu_444_p3);

assign add_ln35_1_fu_914_p2 = (zext_ln26_fu_903_p1 + zext_ln26_2_fu_907_p1);

assign add_ln8_fu_418_p2 = (ap_phi_mux_indvar_flatten47_phi_fu_263_p4 + 16'd1);

assign and_ln34_fu_966_p2 = (tmp_5_fu_360_p2 & or_ln34_fu_960_p2);

assign and_ln35_1_fu_492_p2 = (xor_ln35_fu_468_p2 & icmp_ln14_fu_486_p2);

assign and_ln35_2_fu_578_p2 = (or_ln35_1_fu_572_p2 & and_ln35_fu_480_p2);

assign and_ln35_fu_480_p2 = (xor_ln35_fu_468_p2 & icmp_ln18_fu_474_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd19];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_930_p1 = grp_fu_348_p2;

assign c_fu_400_p2 = (ap_phi_mux_c_0_phi_fu_296_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_3_fu_910_p1;

assign conv_1_weights_0_0_address0 = zext_ln26_5_fu_644_p1;

assign conv_1_weights_1_0_address0 = zext_ln26_5_fu_644_p1;

assign conv_1_weights_2_0_address0 = zext_ln26_5_fu_644_p1;

assign conv_out_address0 = conv_out_addr_reg_1168;

assign conv_out_d0 = ((and_ln34_fu_966_p2[0:0] === 1'b1) ? grp_fu_348_p2 : 32'd0);

assign f_fu_584_p2 = (6'd1 + select_ln35_4_fu_510_p3);

assign grp_fu_981_p0 = 10'd26;

assign grp_fu_981_p1 = grp_fu_981_p10;

assign grp_fu_981_p10 = select_ln35_1_reg_999;

assign grp_fu_981_p2 = grp_fu_981_p20;

assign grp_fu_981_p20 = select_ln35_5_reg_1005;

assign icmp_ln11_fu_430_p2 = ((ap_phi_mux_indvar_flatten14_phi_fu_285_p4 == 12'd2496) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_486_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_307_p4 == 8'd96) ? 1'b1 : 1'b0);

assign icmp_ln18_1_fu_925_p2 = ((wr_reg_1162 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_474_p2 = ((ap_phi_mux_wr_0_phi_fu_329_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_954_p2 = ((trunc_ln34_fu_944_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_948_p2 = ((tmp_fu_934_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_412_p2 = ((ap_phi_mux_indvar_flatten47_phi_fu_263_p4 == 16'd64896) ? 1'b1 : 1'b0);

assign or_ln26_1_fu_596_p2 = (or_ln26_fu_590_p2 | icmp_ln11_fu_430_p2);

assign or_ln26_fu_590_p2 = (and_ln35_2_fu_578_p2 | and_ln35_1_fu_492_p2);

assign or_ln34_fu_960_p2 = (icmp_ln34_fu_948_p2 | icmp_ln34_1_fu_954_p2);

assign or_ln35_1_fu_572_p2 = (xor_ln35_1_fu_566_p2 | icmp_ln11_fu_430_p2);

assign or_ln35_fu_504_p2 = (icmp_ln11_fu_430_p2 | and_ln35_1_fu_492_p2);

assign p_shl2_cast_fu_749_p3 = {{trunc_ln26_1_fu_745_p1}, {2'd0}};

assign p_shl3_cast_fu_705_p3 = {{trunc_ln26_fu_701_p1}, {2'd0}};

assign p_shl_cast_fu_777_p3 = {{trunc_ln26_2_fu_773_p1}, {2'd0}};

assign r_fu_424_p2 = (5'd1 + ap_phi_mux_r_0_phi_fu_274_p4);

assign select_ln11_fu_811_p3 = ((icmp_ln11_fu_430_p2[0:0] === 1'b1) ? 12'd1 : add_ln11_fu_805_p2);

assign select_ln14_fu_797_p3 = ((or_ln35_fu_504_p2[0:0] === 1'b1) ? 8'd1 : add_ln14_fu_791_p2);

assign select_ln26_1_fu_833_p3 = ((or_ln26_1_reg_1011[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_w_sum_0_phi_fu_340_p4);

assign select_ln26_2_fu_610_p3 = ((and_ln35_2_fu_578_p2[0:0] === 1'b1) ? f_fu_584_p2 : select_ln35_4_fu_510_p3);

assign select_ln26_fu_602_p3 = ((or_ln26_1_fu_596_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wr_0_phi_fu_329_p4);

assign select_ln35_1_fu_444_p3 = ((icmp_ln11_fu_430_p2[0:0] === 1'b1) ? r_fu_424_p2 : ap_phi_mux_r_0_phi_fu_274_p4);

assign select_ln35_2_fu_452_p3 = ((icmp_ln11_fu_430_p2[0:0] === 1'b1) ? 5'd1 : c_fu_400_p2);

assign select_ln35_3_fu_460_p3 = ((icmp_ln11_fu_430_p2[0:0] === 1'b1) ? 5'd2 : add_ln26_2_fu_406_p2);

assign select_ln35_4_fu_510_p3 = ((or_ln35_fu_504_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_318_p4);

assign select_ln35_5_fu_518_p3 = ((and_ln35_1_fu_492_p2[0:0] === 1'b1) ? add_ln26_3_fu_498_p2 : select_ln35_fu_436_p3);

assign select_ln35_6_fu_536_p3 = ((and_ln35_1_fu_492_p2[0:0] === 1'b1) ? add_ln26_4_fu_530_p2 : select_ln35_2_fu_452_p3);

assign select_ln35_7_fu_554_p3 = ((and_ln35_1_fu_492_p2[0:0] === 1'b1) ? add_ln26_5_fu_548_p2 : select_ln35_3_fu_460_p3);

assign select_ln35_fu_436_p3 = ((icmp_ln11_fu_430_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_296_p4);

assign sext_ln26_1_fu_697_p1 = add_ln26_7_fu_691_p2;

assign sext_ln26_2_fu_741_p1 = add_ln26_10_fu_735_p2;

assign sext_ln26_3_fu_769_p1 = add_ln26_13_fu_763_p2;

assign sext_ln26_fu_687_p1 = $signed(sub_ln26_fu_681_p2);

assign sub_ln26_1_fu_713_p2 = ($signed(p_shl3_cast_fu_705_p3) - $signed(sext_ln26_1_fu_697_p1));

assign sub_ln26_2_fu_757_p2 = ($signed(p_shl2_cast_fu_749_p3) - $signed(sext_ln26_2_fu_741_p1));

assign sub_ln26_3_fu_785_p2 = ($signed(p_shl_cast_fu_777_p3) - $signed(sext_ln26_3_fu_769_p1));

assign sub_ln26_fu_681_p2 = (zext_ln26_6_fu_665_p1 - zext_ln26_7_fu_677_p1);

assign tmp_1_fu_896_p3 = {{grp_fu_981_p3}, {5'd0}};

assign tmp_3_fu_626_p3 = {{select_ln26_fu_602_p3}, {5'd0}};

assign tmp_6_fu_657_p3 = {{add_ln26_fu_651_p2}, {5'd0}};

assign tmp_7_fu_669_p3 = {{add_ln26_fu_651_p2}, {2'd0}};

assign tmp_fu_934_p4 = {{bitcast_ln34_fu_930_p1[30:23]}};

assign trunc_ln26_1_fu_745_p1 = add_ln26_10_fu_735_p2[10:0];

assign trunc_ln26_2_fu_773_p1 = add_ln26_13_fu_763_p2[10:0];

assign trunc_ln26_fu_701_p1 = add_ln26_7_fu_691_p2[10:0];

assign trunc_ln34_fu_944_p1 = bitcast_ln34_fu_930_p1[22:0];

assign wr_fu_885_p2 = (2'd1 + select_ln26_reg_1016);

assign xor_ln35_1_fu_566_p2 = (icmp_ln14_fu_486_p2 ^ 1'd1);

assign xor_ln35_fu_468_p2 = (icmp_ln11_fu_430_p2 ^ 1'd1);

assign zext_ln18_fu_622_p1 = select_ln26_fu_602_p3;

assign zext_ln26_10_fu_824_p1 = add_ln26_9_fu_819_p2;

assign zext_ln26_11_fu_829_p1 = sub_ln26_2_reg_1058;

assign zext_ln26_12_fu_846_p1 = add_ln26_11_fu_841_p2;

assign zext_ln26_13_fu_856_p1 = add_ln26_12_fu_851_p2;

assign zext_ln26_14_fu_861_p1 = sub_ln26_3_reg_1065;

assign zext_ln26_15_fu_870_p1 = add_ln26_14_fu_865_p2;

assign zext_ln26_16_fu_880_p1 = add_ln26_15_fu_875_p2;

assign zext_ln26_1_fu_618_p1 = select_ln26_2_fu_610_p3;

assign zext_ln26_2_fu_907_p1 = select_ln26_2_reg_1021;

assign zext_ln26_3_fu_910_p1 = select_ln26_2_reg_1021;

assign zext_ln26_4_fu_634_p1 = tmp_3_fu_626_p3;

assign zext_ln26_5_fu_644_p1 = add_ln26_6_fu_638_p2;

assign zext_ln26_6_fu_665_p1 = tmp_6_fu_657_p3;

assign zext_ln26_7_fu_677_p1 = tmp_7_fu_669_p3;

assign zext_ln26_8_fu_719_p1 = sub_ln26_1_fu_713_p2;

assign zext_ln26_9_fu_730_p1 = add_ln26_8_fu_724_p2;

assign zext_ln26_fu_903_p1 = tmp_1_fu_896_p3;

assign zext_ln35_1_fu_526_p1 = select_ln35_5_fu_518_p3;

assign zext_ln35_3_fu_544_p1 = select_ln35_6_fu_536_p3;

assign zext_ln35_4_fu_562_p1 = select_ln35_7_fu_554_p3;

assign zext_ln35_5_fu_920_p1 = add_ln35_1_fu_914_p2;

endmodule //conv_1
