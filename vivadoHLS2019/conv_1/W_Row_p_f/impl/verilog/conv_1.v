// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.022200,HLS_SYN_LAT=1299325,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=5,HLS_SYN_FF=995,HLS_SYN_LUT=1809,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_address0,
        conv_input_ce0,
        conv_input_q0,
        conv_input_address1,
        conv_input_ce1,
        conv_input_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_pp0_stage0 = 25'd16;
parameter    ap_ST_fsm_pp0_stage1 = 25'd32;
parameter    ap_ST_fsm_pp0_stage2 = 25'd64;
parameter    ap_ST_fsm_pp0_stage3 = 25'd128;
parameter    ap_ST_fsm_pp0_stage4 = 25'd256;
parameter    ap_ST_fsm_pp0_stage5 = 25'd512;
parameter    ap_ST_fsm_pp0_stage6 = 25'd1024;
parameter    ap_ST_fsm_pp0_stage7 = 25'd2048;
parameter    ap_ST_fsm_pp0_stage8 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage9 = 25'd8192;
parameter    ap_ST_fsm_pp0_stage10 = 25'd16384;
parameter    ap_ST_fsm_pp0_stage11 = 25'd32768;
parameter    ap_ST_fsm_pp0_stage12 = 25'd65536;
parameter    ap_ST_fsm_pp0_stage13 = 25'd131072;
parameter    ap_ST_fsm_pp0_stage14 = 25'd262144;
parameter    ap_ST_fsm_pp0_stage15 = 25'd524288;
parameter    ap_ST_fsm_pp0_stage16 = 25'd1048576;
parameter    ap_ST_fsm_pp0_stage17 = 25'd2097152;
parameter    ap_ST_fsm_state25 = 25'd4194304;
parameter    ap_ST_fsm_state26 = 25'd8388608;
parameter    ap_ST_fsm_state27 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_input_address0;
output   conv_input_ce0;
input  [31:0] conv_input_q0;
output  [11:0] conv_input_address1;
output   conv_input_ce1;
input  [31:0] conv_input_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_input_address0;
reg conv_input_ce0;
reg[11:0] conv_input_address1;
reg conv_input_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] conv_1_weights_0_0_address0;
reg    conv_1_weights_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_q0;
wire   [6:0] conv_1_weights_1_0_address0;
reg    conv_1_weights_1_0_ce0;
wire   [31:0] conv_1_weights_1_0_q0;
wire   [6:0] conv_1_weights_2_0_address0;
reg    conv_1_weights_2_0_ce0;
wire   [31:0] conv_1_weights_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [1:0] wr_0_reg_293;
reg   [31:0] w_sum_0_reg_304;
reg   [31:0] reg_336;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state6_pp0_stage1_iter0;
wire    ap_block_state24_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln18_reg_825;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state7_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state9_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [31:0] reg_342;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state8_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_322_p2;
reg   [31:0] reg_348;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state10_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state14_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] reg_353;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] reg_360;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state12_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state16_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state18_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state20_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state22_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg   [31:0] reg_365;
wire   [9:0] add_ln8_fu_370_p2;
reg   [9:0] add_ln8_reg_760;
wire    ap_CS_fsm_state2;
wire   [4:0] r_fu_382_p2;
reg   [4:0] r_reg_768;
wire   [4:0] c_fu_394_p2;
reg   [4:0] c_reg_776;
wire    ap_CS_fsm_state3;
wire   [11:0] zext_ln35_fu_400_p1;
reg   [11:0] zext_ln35_reg_781;
wire   [0:0] icmp_ln11_fu_388_p2;
wire   [15:0] zext_ln26_1_fu_422_p1;
reg   [15:0] zext_ln26_1_reg_786;
wire   [11:0] zext_ln26_2_fu_426_p1;
reg   [11:0] zext_ln26_2_reg_791;
wire   [11:0] zext_ln14_fu_436_p1;
reg   [11:0] zext_ln14_reg_796;
wire   [0:0] icmp_ln14_fu_440_p2;
wire    ap_CS_fsm_state4;
wire   [5:0] f_fu_446_p2;
reg   [5:0] f_reg_805;
wire   [63:0] zext_ln26_fu_452_p1;
reg   [63:0] zext_ln26_reg_810;
wire   [7:0] zext_ln35_2_fu_456_p1;
reg   [7:0] zext_ln35_2_reg_815;
reg   [14:0] conv_out_addr_reg_820;
wire   [0:0] icmp_ln18_fu_474_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state23_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln18_reg_825_pp0_iter1_reg;
wire   [1:0] wr_fu_480_p2;
reg   [1:0] wr_reg_829;
wire   [12:0] sub_ln26_1_fu_575_p2;
reg   [12:0] sub_ln26_1_reg_849;
wire   [12:0] sub_ln26_2_fu_618_p2;
reg   [12:0] sub_ln26_2_reg_864;
wire   [12:0] sub_ln26_3_fu_645_p2;
reg   [12:0] sub_ln26_3_reg_871;
reg   [31:0] conv_1_weights_1_0_l_reg_893;
reg   [31:0] conv_1_weights_2_0_l_reg_898;
reg   [31:0] conv_input_load_5_reg_923;
reg   [31:0] conv_input_load_7_reg_933;
reg   [31:0] tmp_1_1_1_reg_938;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state11_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] tmp_1_2_reg_943;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state13_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] tmp_1_2_2_reg_948;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state15_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [4:0] r_0_reg_247;
reg   [9:0] phi_mul_reg_259;
reg   [4:0] c_0_reg_271;
wire   [0:0] icmp_ln8_fu_376_p2;
reg   [5:0] f_0_reg_282;
wire    ap_CS_fsm_state27;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_297_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_mux_w_sum_0_phi_fu_308_p4;
wire   [63:0] zext_ln35_4_fu_469_p1;
wire   [63:0] zext_ln26_4_fu_507_p1;
wire   [63:0] zext_ln26_7_fu_581_p1;
wire   [63:0] zext_ln26_8_fu_592_p1;
wire   [63:0] zext_ln26_9_fu_656_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_10_fu_661_p1;
wire   [63:0] zext_ln26_11_fu_670_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_12_fu_680_p1;
wire   [63:0] zext_ln26_13_fu_685_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_14_fu_694_p1;
wire   [63:0] zext_ln26_15_fu_704_p1;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_316_p0;
reg   [31:0] grp_fu_316_p1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
reg   [31:0] grp_fu_322_p0;
reg   [31:0] grp_fu_322_p1;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage9;
wire   [9:0] zext_ln35_1_fu_404_p1;
wire   [9:0] add_ln35_fu_408_p2;
wire   [14:0] tmp_6_fu_414_p3;
wire   [4:0] add_ln26_2_fu_430_p2;
wire   [15:0] zext_ln35_3_fu_460_p1;
wire   [15:0] add_ln35_1_fu_464_p2;
wire   [6:0] tmp_8_fu_490_p3;
wire   [7:0] zext_ln26_3_fu_498_p1;
wire   [7:0] add_ln26_3_fu_502_p2;
wire   [4:0] zext_ln18_fu_486_p1;
wire   [4:0] add_ln26_fu_514_p2;
wire   [9:0] tmp_9_fu_520_p3;
wire   [6:0] tmp_7_fu_532_p3;
wire   [10:0] zext_ln26_5_fu_528_p1;
wire   [10:0] zext_ln26_6_fu_540_p1;
wire   [10:0] sub_ln26_fu_544_p2;
wire  signed [11:0] sext_ln26_fu_550_p1;
wire  signed [11:0] add_ln26_4_fu_554_p2;
wire   [10:0] trunc_ln26_fu_563_p1;
wire   [12:0] p_shl2_cast_fu_567_p3;
wire  signed [12:0] sext_ln26_1_fu_559_p1;
wire   [12:0] add_ln26_5_fu_586_p2;
wire  signed [11:0] add_ln26_7_fu_597_p2;
wire   [10:0] trunc_ln26_1_fu_606_p1;
wire   [12:0] p_shl1_cast_fu_610_p3;
wire  signed [12:0] sext_ln26_2_fu_602_p1;
wire  signed [11:0] add_ln26_10_fu_624_p2;
wire   [10:0] trunc_ln26_2_fu_633_p1;
wire   [12:0] p_shl_cast_fu_637_p3;
wire  signed [12:0] sext_ln26_3_fu_629_p1;
wire   [12:0] add_ln26_6_fu_651_p2;
wire   [12:0] add_ln26_8_fu_665_p2;
wire   [12:0] add_ln26_9_fu_675_p2;
wire   [12:0] add_ln26_11_fu_689_p2;
wire   [12:0] add_ln26_12_fu_699_p2;
wire   [31:0] bitcast_ln34_fu_709_p1;
wire   [7:0] tmp_fu_713_p4;
wire   [22:0] trunc_ln34_fu_723_p1;
wire   [0:0] icmp_ln34_1_fu_733_p2;
wire   [0:0] icmp_ln34_fu_727_p2;
wire   [0:0] or_ln34_fu_739_p2;
wire   [0:0] tmp_5_fu_330_p2;
wire   [0:0] and_ln34_fu_745_p2;
reg   [24:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state17_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state19_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_state21_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage16_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_address0),
    .ce0(conv_1_weights_0_0_ce0),
    .q0(conv_1_weights_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_address0),
    .ce0(conv_1_weights_1_0_ce0),
    .q0(conv_1_weights_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_address0),
    .ce0(conv_1_weights_2_0_ce0),
    .q0(conv_1_weights_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_fadd_32ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_eOg_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_316_p0),
    .din1(grp_fu_316_p1),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

conv_1_fmul_32ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_fYi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_322_p0),
    .din1(grp_fu_322_p1),
    .ce(1'b1),
    .dout(grp_fu_322_p2)
);

conv_1_fcmp_32ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_g8j_U3(
    .din0(grp_fu_316_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_5_fu_330_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_440_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_440_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln14_fu_440_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        c_0_reg_271 <= c_reg_776;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_376_p2 == 1'd0))) begin
        c_0_reg_271 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        f_0_reg_282 <= f_reg_805;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_388_p2 == 1'd0))) begin
        f_0_reg_282 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_259 <= add_ln8_reg_760;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_259 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_0_reg_247 <= r_reg_768;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_247 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln18_reg_825 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_342 <= conv_input_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_342 <= conv_input_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln18_reg_825 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_353 <= conv_input_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_353 <= conv_input_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln18_reg_825_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_0_reg_304 <= grp_fu_316_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_440_p2 == 1'd0))) begin
        w_sum_0_reg_304 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_reg_825 == 1'd0))) begin
        wr_0_reg_293 <= wr_reg_829;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_440_p2 == 1'd0))) begin
        wr_0_reg_293 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_760 <= add_ln8_fu_370_p2;
        r_reg_768 <= r_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_776 <= c_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln18_reg_825 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_1_0_l_reg_893 <= conv_1_weights_1_0_q0;
        conv_1_weights_2_0_l_reg_898 <= conv_1_weights_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_825 == 1'd0))) begin
        conv_input_load_5_reg_923 <= conv_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln18_reg_825 == 1'd0))) begin
        conv_input_load_7_reg_933 <= conv_input_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln14_fu_440_p2 == 1'd0))) begin
        conv_out_addr_reg_820 <= zext_ln35_4_fu_469_p1;
        zext_ln26_reg_810[5 : 0] <= zext_ln26_fu_452_p1[5 : 0];
        zext_ln35_2_reg_815[5 : 0] <= zext_ln35_2_fu_456_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_reg_805 <= f_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln18_reg_825 <= icmp_ln18_fu_474_p2;
        icmp_ln18_reg_825_pp0_iter1_reg <= icmp_ln18_reg_825;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln18_reg_825 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln18_reg_825 == 1'd0)))) begin
        reg_336 <= conv_input_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln18_reg_825 == 1'd0)))) begin
        reg_348 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (icmp_ln18_reg_825 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (icmp_ln18_reg_825 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln18_reg_825 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_825 == 1'd0)))) begin
        reg_360 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln18_reg_825 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln18_reg_825 == 1'd0)))) begin
        reg_365 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_fu_474_p2 == 1'd0))) begin
        sub_ln26_1_reg_849 <= sub_ln26_1_fu_575_p2;
        sub_ln26_2_reg_864 <= sub_ln26_2_fu_618_p2;
        sub_ln26_3_reg_871 <= sub_ln26_3_fu_645_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln18_reg_825 == 1'd0))) begin
        tmp_1_1_1_reg_938 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln18_reg_825 == 1'd0))) begin
        tmp_1_2_2_reg_948 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln18_reg_825 == 1'd0))) begin
        tmp_1_2_reg_943 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_reg_829 <= wr_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_388_p2 == 1'd0))) begin
        zext_ln14_reg_796[4 : 0] <= zext_ln14_fu_436_p1[4 : 0];
        zext_ln26_1_reg_786[14 : 5] <= zext_ln26_1_fu_422_p1[14 : 5];
        zext_ln26_2_reg_791[4 : 0] <= zext_ln26_2_fu_426_p1[4 : 0];
        zext_ln35_reg_781[4 : 0] <= zext_ln35_fu_400_p1[4 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_474_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln18_reg_825 == 1'd0))) begin
        ap_phi_mux_wr_0_phi_fu_297_p4 = wr_reg_829;
    end else begin
        ap_phi_mux_wr_0_phi_fu_297_p4 = wr_0_reg_293;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_weights_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_weights_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_weights_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address0 = zext_ln26_15_fu_704_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address0 = zext_ln26_13_fu_685_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address0 = zext_ln26_11_fu_670_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address0 = zext_ln26_9_fu_656_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address0 = zext_ln26_7_fu_581_p1;
        end else begin
            conv_input_address0 = 'bx;
        end
    end else begin
        conv_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address1 = zext_ln26_14_fu_694_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address1 = zext_ln26_12_fu_680_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address1 = zext_ln26_10_fu_661_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address1 = zext_ln26_8_fu_592_p1;
        end else begin
            conv_input_address1 = 'bx;
        end
    end else begin
        conv_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        conv_input_ce0 = 1'b1;
    end else begin
        conv_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        conv_input_ce1 = 1'b1;
    end else begin
        conv_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_316_p0 = w_sum_0_reg_304;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_316_p0 = reg_360;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_316_p0 = ap_phi_mux_w_sum_0_phi_fu_308_p4;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_316_p1 = conv_1_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_316_p1 = tmp_1_2_2_reg_948;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        grp_fu_316_p1 = tmp_1_2_reg_943;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_316_p1 = tmp_1_1_1_reg_938;
    end else if ((((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_316_p1 = reg_365;
    end else if ((((1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_316_p1 = reg_348;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_316_p1 = grp_fu_322_p2;
    end else begin
        grp_fu_316_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_322_p0 = reg_353;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_322_p0 = conv_input_load_7_reg_933;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_322_p0 = conv_1_weights_2_0_l_reg_898;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_322_p0 = conv_input_load_5_reg_923;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_322_p0 = conv_1_weights_1_0_l_reg_893;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_322_p0 = reg_336;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_322_p0 = reg_342;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_322_p0 = conv_1_weights_0_0_q0;
    end else begin
        grp_fu_322_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_322_p1 = reg_336;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_322_p1 = reg_353;
    end else if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_322_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_322_p1 = conv_input_q0;
    end else begin
        grp_fu_322_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_376_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_fu_388_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln14_fu_440_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln18_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln18_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_10_fu_624_p2 = ($signed(zext_ln14_reg_796) + $signed(sext_ln26_fu_550_p1));

assign add_ln26_11_fu_689_p2 = (13'd1 + sub_ln26_3_reg_871);

assign add_ln26_12_fu_699_p2 = (13'd2 + sub_ln26_3_reg_871);

assign add_ln26_2_fu_430_p2 = (c_0_reg_271 + 5'd2);

assign add_ln26_3_fu_502_p2 = (zext_ln35_2_reg_815 + zext_ln26_3_fu_498_p1);

assign add_ln26_4_fu_554_p2 = ($signed(zext_ln35_reg_781) + $signed(sext_ln26_fu_550_p1));

assign add_ln26_5_fu_586_p2 = (13'd1 + sub_ln26_1_fu_575_p2);

assign add_ln26_6_fu_651_p2 = (13'd2 + sub_ln26_1_reg_849);

assign add_ln26_7_fu_597_p2 = ($signed(zext_ln26_2_reg_791) + $signed(sext_ln26_fu_550_p1));

assign add_ln26_8_fu_665_p2 = (13'd1 + sub_ln26_2_reg_864);

assign add_ln26_9_fu_675_p2 = (13'd2 + sub_ln26_2_reg_864);

assign add_ln26_fu_514_p2 = (r_0_reg_247 + zext_ln18_fu_486_p1);

assign add_ln35_1_fu_464_p2 = (zext_ln26_1_reg_786 + zext_ln35_3_fu_460_p1);

assign add_ln35_fu_408_p2 = (phi_mul_reg_259 + zext_ln35_1_fu_404_p1);

assign add_ln8_fu_370_p2 = (phi_mul_reg_259 + 10'd26);

assign and_ln34_fu_745_p2 = (tmp_5_fu_330_p2 & or_ln34_fu_739_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_w_sum_0_phi_fu_308_p4 = w_sum_0_reg_304;

assign bitcast_ln34_fu_709_p1 = grp_fu_316_p2;

assign c_fu_394_p2 = (c_0_reg_271 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_reg_810;

assign conv_1_weights_0_0_address0 = zext_ln26_4_fu_507_p1;

assign conv_1_weights_1_0_address0 = zext_ln26_4_fu_507_p1;

assign conv_1_weights_2_0_address0 = zext_ln26_4_fu_507_p1;

assign conv_out_address0 = conv_out_addr_reg_820;

assign conv_out_d0 = ((and_ln34_fu_745_p2[0:0] === 1'b1) ? grp_fu_316_p2 : 32'd0);

assign f_fu_446_p2 = (f_0_reg_282 + 6'd1);

assign icmp_ln11_fu_388_p2 = ((c_0_reg_271 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_440_p2 = ((f_0_reg_282 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_474_p2 = ((ap_phi_mux_wr_0_phi_fu_297_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_733_p2 = ((trunc_ln34_fu_723_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_727_p2 = ((tmp_fu_713_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_376_p2 = ((r_0_reg_247 == 5'd26) ? 1'b1 : 1'b0);

assign or_ln34_fu_739_p2 = (icmp_ln34_fu_727_p2 | icmp_ln34_1_fu_733_p2);

assign p_shl1_cast_fu_610_p3 = {{trunc_ln26_1_fu_606_p1}, {2'd0}};

assign p_shl2_cast_fu_567_p3 = {{trunc_ln26_fu_563_p1}, {2'd0}};

assign p_shl_cast_fu_637_p3 = {{trunc_ln26_2_fu_633_p1}, {2'd0}};

assign r_fu_382_p2 = (r_0_reg_247 + 5'd1);

assign sext_ln26_1_fu_559_p1 = add_ln26_4_fu_554_p2;

assign sext_ln26_2_fu_602_p1 = add_ln26_7_fu_597_p2;

assign sext_ln26_3_fu_629_p1 = add_ln26_10_fu_624_p2;

assign sext_ln26_fu_550_p1 = $signed(sub_ln26_fu_544_p2);

assign sub_ln26_1_fu_575_p2 = ($signed(p_shl2_cast_fu_567_p3) - $signed(sext_ln26_1_fu_559_p1));

assign sub_ln26_2_fu_618_p2 = ($signed(p_shl1_cast_fu_610_p3) - $signed(sext_ln26_2_fu_602_p1));

assign sub_ln26_3_fu_645_p2 = ($signed(p_shl_cast_fu_637_p3) - $signed(sext_ln26_3_fu_629_p1));

assign sub_ln26_fu_544_p2 = (zext_ln26_5_fu_528_p1 - zext_ln26_6_fu_540_p1);

assign tmp_6_fu_414_p3 = {{add_ln35_fu_408_p2}, {5'd0}};

assign tmp_7_fu_532_p3 = {{add_ln26_fu_514_p2}, {2'd0}};

assign tmp_8_fu_490_p3 = {{ap_phi_mux_wr_0_phi_fu_297_p4}, {5'd0}};

assign tmp_9_fu_520_p3 = {{add_ln26_fu_514_p2}, {5'd0}};

assign tmp_fu_713_p4 = {{bitcast_ln34_fu_709_p1[30:23]}};

assign trunc_ln26_1_fu_606_p1 = add_ln26_7_fu_597_p2[10:0];

assign trunc_ln26_2_fu_633_p1 = add_ln26_10_fu_624_p2[10:0];

assign trunc_ln26_fu_563_p1 = add_ln26_4_fu_554_p2[10:0];

assign trunc_ln34_fu_723_p1 = bitcast_ln34_fu_709_p1[22:0];

assign wr_fu_480_p2 = (ap_phi_mux_wr_0_phi_fu_297_p4 + 2'd1);

assign zext_ln14_fu_436_p1 = add_ln26_2_fu_430_p2;

assign zext_ln18_fu_486_p1 = ap_phi_mux_wr_0_phi_fu_297_p4;

assign zext_ln26_10_fu_661_p1 = sub_ln26_2_reg_864;

assign zext_ln26_11_fu_670_p1 = add_ln26_8_fu_665_p2;

assign zext_ln26_12_fu_680_p1 = add_ln26_9_fu_675_p2;

assign zext_ln26_13_fu_685_p1 = sub_ln26_3_reg_871;

assign zext_ln26_14_fu_694_p1 = add_ln26_11_fu_689_p2;

assign zext_ln26_15_fu_704_p1 = add_ln26_12_fu_699_p2;

assign zext_ln26_1_fu_422_p1 = tmp_6_fu_414_p3;

assign zext_ln26_2_fu_426_p1 = c_fu_394_p2;

assign zext_ln26_3_fu_498_p1 = tmp_8_fu_490_p3;

assign zext_ln26_4_fu_507_p1 = add_ln26_3_fu_502_p2;

assign zext_ln26_5_fu_528_p1 = tmp_9_fu_520_p3;

assign zext_ln26_6_fu_540_p1 = tmp_7_fu_532_p3;

assign zext_ln26_7_fu_581_p1 = sub_ln26_1_fu_575_p2;

assign zext_ln26_8_fu_592_p1 = add_ln26_5_fu_586_p2;

assign zext_ln26_9_fu_656_p1 = add_ln26_6_fu_651_p2;

assign zext_ln26_fu_452_p1 = f_0_reg_282;

assign zext_ln35_1_fu_404_p1 = c_0_reg_271;

assign zext_ln35_2_fu_456_p1 = f_0_reg_282;

assign zext_ln35_3_fu_460_p1 = f_0_reg_282;

assign zext_ln35_4_fu_469_p1 = add_ln35_1_fu_464_p2;

assign zext_ln35_fu_400_p1 = c_0_reg_271;

always @ (posedge ap_clk) begin
    zext_ln35_reg_781[11:5] <= 7'b0000000;
    zext_ln26_1_reg_786[4:0] <= 5'b00000;
    zext_ln26_1_reg_786[15] <= 1'b0;
    zext_ln26_2_reg_791[11:5] <= 7'b0000000;
    zext_ln14_reg_796[11:5] <= 7'b0000000;
    zext_ln26_reg_810[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln35_2_reg_815[7:6] <= 2'b00;
end

endmodule //conv_1
