// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_1_conv_1_weidEe_H__
#define __conv_1_conv_1_weidEe_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_1_conv_1_weidEe_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 288;
  static const unsigned AddressWidth = 9;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_1_conv_1_weidEe_ram) {
        ram[0] = "0b10111110110100000111100010111000";
        ram[1] = "0b10111110010110100001010101010010";
        ram[2] = "0b10111110011110111110100000000111";
        ram[3] = "0b00111110110100011110100001001100";
        ram[4] = "0b00111101111011101011010110101000";
        ram[5] = "0b10111110001011000001111011100010";
        ram[6] = "0b10111110100001010001001111001000";
        ram[7] = "0b00111011110011010000110110100111";
        ram[8] = "0b00111110001110000001010101011100";
        ram[9] = "0b00111101110101000000000110101101";
        ram[10] = "0b10111101010001110101110100011011";
        ram[11] = "0b10111100010101101010100101011110";
        ram[12] = "0b10111101100111000010110100011100";
        ram[13] = "0b00111101101001001011100110001110";
        ram[14] = "0b10111110010110111001000011111100";
        ram[15] = "0b10111110100101100101001010010010";
        ram[16] = "0b10111110111001111010001001011000";
        ram[17] = "0b10111110101110100001010011110111";
        ram[18] = "0b10111110110011100101110011111000";
        ram[19] = "0b00111110000101001100010101001001";
        ram[20] = "0b00111101100110110111010101001001";
        ram[21] = "0b00111110001100001001001111000111";
        ram[22] = "0b00111110101010000100100011011010";
        ram[23] = "0b00111101110001011001101100000001";
        ram[24] = "0b00111101110010010001001000011001";
        ram[25] = "0b10111110101010000011111100100001";
        ram[26] = "0b00111110001110101011100011111001";
        ram[27] = "0b10111110010111111011110111100101";
        ram[28] = "0b10111100100000000100110001100001";
        ram[29] = "0b10111110010110100101000011001001";
        ram[30] = "0b00111110101100011011101011010111";
        ram[31] = "0b00111110001101011001000001111010";
        for (unsigned i = 32; i < 96 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[96] = "0b10111101110011100100000000011111";
        ram[97] = "0b00111110101010111010001101000010";
        ram[98] = "0b10111110001111011100101100110100";
        ram[99] = "0b10111011010111011000000011000111";
        ram[100] = "0b00111100101000010110110110010111";
        ram[101] = "0b10111111000010000011110101010001";
        ram[102] = "0b00111110011011001010011100000100";
        ram[103] = "0b00111110100101000111011100001111";
        ram[104] = "0b10111110101000011110100100011101";
        ram[105] = "0b10111110100001011100110101110111";
        ram[106] = "0b00111101001000110100000011100100";
        ram[107] = "0b10111110011000011110101101110011";
        ram[108] = "0b10111111000101100110011001100000";
        ram[109] = "0b00111101111101101010000100010100";
        ram[110] = "0b00111101111100011111011110110100";
        ram[111] = "0b10111110111110110011001111000100";
        ram[112] = "0b10111111000100110001110000100111";
        ram[113] = "0b00111110101000100101001011011010";
        ram[114] = "0b00111101101100101111100011100100";
        ram[115] = "0b00111100111001110000101100010101";
        ram[116] = "0b00111110100011110010110010011001";
        ram[117] = "0b00111011100000110100110101111111";
        ram[118] = "0b00111110100010100011010000000010";
        ram[119] = "0b00111110010100101100001000010101";
        ram[120] = "0b00111110010111100010010010111101";
        ram[121] = "0b00111101001100100101111111010101";
        ram[122] = "0b10111110010101100010010011010011";
        ram[123] = "0b00111110001111110101000100100010";
        ram[124] = "0b00111101011110100011100100011110";
        ram[125] = "0b00111101111000011010011001110011";
        ram[126] = "0b00111110101001101000111010110010";
        ram[127] = "0b00111110001010000000010010111001";
        for (unsigned i = 128; i < 192 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[192] = "0b00111110010101000111011100110001";
        ram[193] = "0b10111100111001011110010011001101";
        ram[194] = "0b00111101101000010111111001001011";
        ram[195] = "0b10111110100101001011010001011110";
        ram[196] = "0b00111101110000011000100101111101";
        ram[197] = "0b00111110010000100110010100101111";
        ram[198] = "0b00111011111001001010111000011110";
        ram[199] = "0b10111110000111111010010000000101";
        ram[200] = "0b10111110100111100010100100101110";
        ram[201] = "0b10111110011101000010001110111101";
        ram[202] = "0b00111110010000010001101101110010";
        ram[203] = "0b10111110111101100000110001110010";
        ram[204] = "0b10111110101010011000011010110010";
        ram[205] = "0b00111110001010010011011000010000";
        ram[206] = "0b00111100110000011100011001111001";
        ram[207] = "0b10111110010010001011001100111000";
        ram[208] = "0b00111100110100111000001100011001";
        ram[209] = "0b00111101110100110000100000011001";
        ram[210] = "0b00111110011011011111000111101111";
        ram[211] = "0b10111110100111100110101101001000";
        ram[212] = "0b10111101011010101110001000110000";
        ram[213] = "0b10111110101010001110011001000000";
        ram[214] = "0b10111101000110101111001010010101";
        ram[215] = "0b10111110010001101001000010000010";
        ram[216] = "0b10111110011011100000010111000000";
        ram[217] = "0b00111110010011010100010100110111";
        ram[218] = "0b10111110010001010100101011000001";
        ram[219] = "0b00111110110000110000111000000110";
        ram[220] = "0b10111100100011000011101010110111";
        ram[221] = "0b10111101001001100110011000110000";
        ram[222] = "0b00111110000011100000001001101101";
        ram[223] = "0b00111110100111110111111000101010";
        for (unsigned i = 224; i < 288 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_1_conv_1_weidEe) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 288;
static const unsigned AddressWidth = 9;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_1_conv_1_weidEe_ram* meminst;


SC_CTOR(conv_1_conv_1_weidEe) {
meminst = new conv_1_conv_1_weidEe_ram("conv_1_conv_1_weidEe_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_1_conv_1_weidEe() {
    delete meminst;
}


};//endmodule
#endif
