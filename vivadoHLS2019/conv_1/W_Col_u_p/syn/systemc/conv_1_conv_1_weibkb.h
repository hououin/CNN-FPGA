// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_1_conv_1_weibkb_H__
#define __conv_1_conv_1_weibkb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_1_conv_1_weibkb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 288;
  static const unsigned AddressWidth = 9;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_1_conv_1_weibkb_ram) {
        ram[0] = "0b00111100010001001101010111001010";
        ram[1] = "0b10111110110110000001011001110110";
        ram[2] = "0b00111101110000001011101000011101";
        ram[3] = "0b00111101010110101000000011010001";
        ram[4] = "0b00111101011001001110111101101010";
        ram[5] = "0b10111111000101100100101011001000";
        ram[6] = "0b10111101011100010100001010110100";
        ram[7] = "0b00111110011100001101001111000001";
        ram[8] = "0b00111110101000001101001110110111";
        ram[9] = "0b00111101010110000011100110001010";
        ram[10] = "0b00111100001110011100010001111000";
        ram[11] = "0b00111110011101001101000011010000";
        ram[12] = "0b00111110101111111001100110001101";
        ram[13] = "0b00111101100100110011110001000100";
        ram[14] = "0b00111101111101000111000100001001";
        ram[15] = "0b00111101010011010111011010010110";
        ram[16] = "0b00111110100011110100001101101101";
        ram[17] = "0b00111101101110110101001100111101";
        ram[18] = "0b00111110001101010000110100110111";
        ram[19] = "0b10111110101001111000001101101001";
        ram[20] = "0b00111110100010100010110100101101";
        ram[21] = "0b00111101111010110111011100110011";
        ram[22] = "0b00111011000100111100100100111101";
        ram[23] = "0b10111110010101100000100010011001";
        ram[24] = "0b10111100011011011111101011111011";
        ram[25] = "0b00111110011000111010110110000010";
        ram[26] = "0b00111011011011000101001110111100";
        ram[27] = "0b00111110100100001110101111011111";
        ram[28] = "0b00111101000101110000000001011001";
        ram[29] = "0b00111110010001011111101001001110";
        ram[30] = "0b10111110011001111000101110101011";
        ram[31] = "0b10111110111100110111001111110001";
        for (unsigned i = 32; i < 96 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[96] = "0b00111110000001000011100100111100";
        ram[97] = "0b10111101101100101100100101111101";
        ram[98] = "0b10111101101100011010000100110010";
        ram[99] = "0b10111110010100110011010011001000";
        ram[100] = "0b00111011110010101111001011011010";
        ram[101] = "0b00111110100010111111010101101111";
        ram[102] = "0b00111011110100001001010000111001";
        ram[103] = "0b00111100000010111011101000100000";
        ram[104] = "0b00111110100011100001110011000101";
        ram[105] = "0b00111110010001011111000010011101";
        ram[106] = "0b10111110011101101100101111100011";
        ram[107] = "0b00111110001111101010100011011010";
        ram[108] = "0b00111110100001110110001001011110";
        ram[109] = "0b00111101111010000111100011100101";
        ram[110] = "0b00111110000010001001111011100101";
        ram[111] = "0b00111110100100111001100100101101";
        ram[112] = "0b00111110101011010110100010100110";
        ram[113] = "0b10111110100010001101111101110010";
        ram[114] = "0b10111101011100000110010010000110";
        ram[115] = "0b00111110010000101110111110000011";
        ram[116] = "0b10111110011110000001010000111000";
        ram[117] = "0b00111110001011000101101110110100";
        ram[118] = "0b10111110010000111110101110010010";
        ram[119] = "0b00111101111111110011011001101010";
        ram[120] = "0b00111110100111101111000011100010";
        ram[121] = "0b00111110001011001100101000010110";
        ram[122] = "0b00111110010100110111010001011111";
        ram[123] = "0b00111110100111111101111101101000";
        ram[124] = "0b00111101000100111101001100001011";
        ram[125] = "0b00111110000100001100001111100001";
        ram[126] = "0b10111110111101011010000101100100";
        ram[127] = "0b10111110100110010010100110110011";
        for (unsigned i = 128; i < 192 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[192] = "0b00111110101011000110110111000011";
        ram[193] = "0b00111110110000111111110101000111";
        ram[194] = "0b10111101101111001010001111111100";
        ram[195] = "0b10111111000010100001101011010001";
        ram[196] = "0b00111110001001011011111010000010";
        ram[197] = "0b00111110101101111100000110010001";
        ram[198] = "0b10111101010011111100010111001001";
        ram[199] = "0b10111110101101110001101110110100";
        ram[200] = "0b10111110000000101110000110000100";
        ram[201] = "0b00111110011101010011110110100001";
        ram[202] = "0b10111110101110111011110101100101";
        ram[203] = "0b10111111000100111111100111111111";
        ram[204] = "0b00111110001110010000101010010001";
        ram[205] = "0b00111101101001001001100110111001";
        ram[206] = "0b00111101111101111010000000001101";
        ram[207] = "0b00111110011000001001000000010100";
        ram[208] = "0b00111110110000001100000010010001";
        ram[209] = "0b00111110100001000101000000001011";
        ram[210] = "0b00111101000110100110110100100100";
        ram[211] = "0b00111110011010111001011010110110";
        ram[212] = "0b10111110110010101111011011111111";
        ram[213] = "0b10111110011110101111001000000111";
        ram[214] = "0b10111110110000011101010010100001";
        ram[215] = "0b00111110010000100011001101000110";
        ram[216] = "0b10111110101011111100111111001011";
        ram[217] = "0b00111100101001111101011010010100";
        ram[218] = "0b10111101001101111010111110011101";
        ram[219] = "0b10111110001000110100001111001001";
        ram[220] = "0b10111101110010010100101010111000";
        ram[221] = "0b00111101010101001001000111111010";
        ram[222] = "0b10111111000000100011100010001010";
        ram[223] = "0b10111110010100111001001001011110";
        for (unsigned i = 224; i < 288 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_1_conv_1_weibkb) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 288;
static const unsigned AddressWidth = 9;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_1_conv_1_weibkb_ram* meminst;


SC_CTOR(conv_1_conv_1_weibkb) {
meminst = new conv_1_conv_1_weibkb_ram("conv_1_conv_1_weibkb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_1_conv_1_weibkb() {
    delete meminst;
}


};//endmodule
#endif
