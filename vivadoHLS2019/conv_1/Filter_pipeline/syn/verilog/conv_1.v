// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.132000,HLS_SYN_LAT=302894,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=11,HLS_SYN_FF=3336,HLS_SYN_LUT=4124,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_address0,
        conv_input_ce0,
        conv_input_q0,
        conv_input_address1,
        conv_input_ce1,
        conv_input_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_pp0_stage0 = 16'd2;
parameter    ap_ST_fsm_pp0_stage1 = 16'd4;
parameter    ap_ST_fsm_pp0_stage2 = 16'd8;
parameter    ap_ST_fsm_pp0_stage3 = 16'd16;
parameter    ap_ST_fsm_pp0_stage4 = 16'd32;
parameter    ap_ST_fsm_pp0_stage5 = 16'd64;
parameter    ap_ST_fsm_pp0_stage6 = 16'd128;
parameter    ap_ST_fsm_pp0_stage7 = 16'd256;
parameter    ap_ST_fsm_pp0_stage8 = 16'd512;
parameter    ap_ST_fsm_pp0_stage9 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 16'd16384;
parameter    ap_ST_fsm_state61 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_input_address0;
output   conv_input_ce0;
input  [31:0] conv_input_q0;
output  [11:0] conv_input_address1;
output   conv_input_ce1;
input  [31:0] conv_input_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_input_address0;
reg conv_input_ce0;
reg[11:0] conv_input_address1;
reg conv_input_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_weights_0_0_0_address0;
reg    conv_1_weights_0_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_0_q0;
wire   [4:0] conv_1_weights_0_1_0_address0;
reg    conv_1_weights_0_1_0_ce0;
wire   [31:0] conv_1_weights_0_1_0_q0;
wire   [4:0] conv_1_weights_0_2_0_address0;
reg    conv_1_weights_0_2_0_ce0;
wire   [31:0] conv_1_weights_0_2_0_q0;
wire   [4:0] conv_1_weights_1_0_0_address0;
reg    conv_1_weights_1_0_0_ce0;
wire   [31:0] conv_1_weights_1_0_0_q0;
wire   [4:0] conv_1_weights_1_1_0_address0;
reg    conv_1_weights_1_1_0_ce0;
wire   [31:0] conv_1_weights_1_1_0_q0;
wire   [4:0] conv_1_weights_1_2_0_address0;
reg    conv_1_weights_1_2_0_ce0;
wire   [31:0] conv_1_weights_1_2_0_q0;
wire   [4:0] conv_1_weights_2_0_0_address0;
reg    conv_1_weights_2_0_0_ce0;
wire   [31:0] conv_1_weights_2_0_0_q0;
wire   [4:0] conv_1_weights_2_1_0_address0;
reg    conv_1_weights_2_1_0_ce0;
wire   [31:0] conv_1_weights_2_1_0_q0;
wire   [4:0] conv_1_weights_2_2_0_address0;
reg    conv_1_weights_2_2_0_ce0;
wire   [31:0] conv_1_weights_2_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [14:0] indvar_flatten56_reg_482;
reg   [4:0] r_0_reg_493;
reg   [10:0] indvar_flatten_reg_504;
reg   [4:0] c_0_reg_515;
reg   [5:0] f_0_reg_526;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state17_pp0_stage1_iter1;
wire    ap_block_state31_pp0_stage1_iter2;
wire    ap_block_state45_pp0_stage1_iter3;
wire    ap_block_state59_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1487;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state18_pp0_stage2_iter1;
wire    ap_block_state32_pp0_stage2_iter2;
wire    ap_block_state46_pp0_stage2_iter3;
wire    ap_block_state60_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state19_pp0_stage3_iter1;
wire    ap_block_state33_pp0_stage3_iter2;
wire    ap_block_state47_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state20_pp0_stage4_iter1;
wire    ap_block_state34_pp0_stage4_iter2;
wire    ap_block_state48_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_state21_pp0_stage5_iter1;
wire    ap_block_state35_pp0_stage5_iter2;
wire    ap_block_state49_pp0_stage5_iter3;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_state22_pp0_stage6_iter1;
wire    ap_block_state36_pp0_stage6_iter2;
wire    ap_block_state50_pp0_stage6_iter3;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_state23_pp0_stage7_iter1;
wire    ap_block_state37_pp0_stage7_iter2;
wire    ap_block_state51_pp0_stage7_iter3;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_state24_pp0_stage8_iter1;
wire    ap_block_state38_pp0_stage8_iter2;
wire    ap_block_state52_pp0_stage8_iter3;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_state25_pp0_stage9_iter1;
wire    ap_block_state39_pp0_stage9_iter2;
wire    ap_block_state53_pp0_stage9_iter3;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_state26_pp0_stage10_iter1;
wire    ap_block_state40_pp0_stage10_iter2;
wire    ap_block_state54_pp0_stage10_iter3;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_state27_pp0_stage11_iter1;
wire    ap_block_state41_pp0_stage11_iter2;
wire    ap_block_state55_pp0_stage11_iter3;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_state28_pp0_stage12_iter1;
wire    ap_block_state42_pp0_stage12_iter2;
wire    ap_block_state56_pp0_stage12_iter3;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_state29_pp0_stage13_iter1;
wire    ap_block_state43_pp0_stage13_iter2;
wire    ap_block_state57_pp0_stage13_iter3;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_state30_pp0_stage0_iter2;
wire    ap_block_state44_pp0_stage0_iter3;
wire    ap_block_state58_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_547_p2;
reg   [31:0] reg_581;
wire   [31:0] grp_fu_537_p2;
reg   [31:0] reg_587;
reg   [0:0] icmp_ln8_reg_1487_pp0_iter1_reg;
wire   [31:0] grp_fu_542_p2;
reg   [31:0] reg_593;
reg   [31:0] reg_598;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln8_reg_1487_pp0_iter2_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln8_reg_1487_pp0_iter3_reg;
reg   [31:0] reg_604;
wire   [0:0] icmp_ln8_fu_628_p2;
reg   [0:0] icmp_ln8_reg_1487_pp0_iter4_reg;
wire   [14:0] add_ln8_fu_634_p2;
reg   [14:0] add_ln8_reg_1491;
wire   [4:0] select_ln35_1_fu_654_p3;
reg   [4:0] select_ln35_1_reg_1496;
reg   [4:0] select_ln35_1_reg_1496_pp0_iter1_reg;
reg   [4:0] select_ln35_1_reg_1496_pp0_iter2_reg;
reg   [4:0] select_ln35_1_reg_1496_pp0_iter3_reg;
reg   [4:0] select_ln35_1_reg_1496_pp0_iter4_reg;
wire   [4:0] add_ln35_fu_744_p2;
reg   [4:0] add_ln35_reg_1502;
wire   [5:0] select_ln35_6_fu_796_p3;
reg   [5:0] select_ln35_6_reg_1508;
reg   [5:0] select_ln35_6_reg_1508_pp0_iter1_reg;
reg   [5:0] select_ln35_6_reg_1508_pp0_iter2_reg;
reg   [5:0] select_ln35_6_reg_1508_pp0_iter3_reg;
reg   [5:0] select_ln35_6_reg_1508_pp0_iter4_reg;
wire   [4:0] select_ln35_7_fu_804_p3;
reg   [4:0] select_ln35_7_reg_1514;
reg   [4:0] select_ln35_7_reg_1514_pp0_iter1_reg;
reg   [4:0] select_ln35_7_reg_1514_pp0_iter2_reg;
reg   [4:0] select_ln35_7_reg_1514_pp0_iter3_reg;
reg   [4:0] select_ln35_7_reg_1514_pp0_iter4_reg;
wire   [12:0] sub_ln26_3_fu_838_p2;
reg   [12:0] sub_ln26_3_reg_1521;
wire   [12:0] sub_ln26_4_fu_882_p2;
reg   [12:0] sub_ln26_4_reg_1536;
wire   [4:0] select_ln35_8_fu_894_p3;
reg   [4:0] select_ln35_8_reg_1543;
wire   [12:0] sub_ln26_6_fu_928_p2;
reg   [12:0] sub_ln26_6_reg_1548;
wire   [12:0] sub_ln26_7_fu_956_p2;
reg   [12:0] sub_ln26_7_reg_1555;
wire   [4:0] select_ln35_9_fu_968_p3;
reg   [4:0] select_ln35_9_reg_1562;
wire   [12:0] sub_ln26_9_fu_1002_p2;
reg   [12:0] sub_ln26_9_reg_1567;
wire   [12:0] sub_ln26_10_fu_1030_p2;
reg   [12:0] sub_ln26_10_reg_1574;
wire   [63:0] zext_ln26_fu_1036_p1;
reg   [63:0] zext_ln26_reg_1581;
reg   [63:0] zext_ln26_reg_1581_pp0_iter1_reg;
reg   [63:0] zext_ln26_reg_1581_pp0_iter2_reg;
reg   [63:0] zext_ln26_reg_1581_pp0_iter3_reg;
wire   [10:0] select_ln11_fu_1055_p3;
reg   [10:0] select_ln11_reg_1631;
reg   [31:0] conv_1_weights_0_1_0_2_reg_1651;
reg   [31:0] conv_1_weights_0_2_0_2_reg_1656;
reg   [31:0] conv_1_weights_1_0_0_2_reg_1661;
reg   [31:0] conv_1_weights_1_1_0_2_reg_1666;
reg   [31:0] conv_1_weights_1_2_0_2_reg_1671;
reg   [31:0] conv_1_weights_2_0_0_2_reg_1676;
reg   [31:0] conv_1_weights_2_1_0_2_reg_1681;
reg   [31:0] conv_1_weights_2_2_0_2_reg_1686;
wire   [31:0] grp_fu_554_p2;
reg   [31:0] tmp_1_0_0_1_reg_1701;
reg   [31:0] tmp_1_0_1_reg_1716;
reg   [31:0] tmp_1_0_1_1_reg_1731;
reg   [31:0] tmp_1_0_1_2_reg_1736;
reg   [31:0] tmp_1_0_2_reg_1751;
reg   [31:0] tmp_1_0_2_1_reg_1756;
reg   [31:0] tmp_1_0_2_2_reg_1771;
reg   [31:0] tmp_1_1_reg_1776;
reg   [31:0] tmp_1_1_0_1_reg_1791;
reg   [31:0] tmp_1_1_0_1_reg_1791_pp0_iter1_reg;
reg   [31:0] tmp_1_1_0_2_reg_1796;
reg   [31:0] tmp_1_1_0_2_reg_1796_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_reg_1811;
reg   [31:0] tmp_1_1_1_reg_1811_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_1_reg_1816;
reg   [31:0] tmp_1_1_1_1_reg_1816_pp0_iter1_reg;
wire  signed [11:0] sext_ln26_fu_1221_p1;
reg  signed [11:0] sext_ln26_reg_1821;
wire   [12:0] sub_ln26_5_fu_1250_p2;
reg   [12:0] sub_ln26_5_reg_1827;
reg   [31:0] tmp_1_1_1_2_reg_1842;
reg   [31:0] tmp_1_1_1_2_reg_1842_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_reg_1847;
reg   [31:0] tmp_1_1_2_reg_1847_pp0_iter1_reg;
wire   [12:0] sub_ln26_8_fu_1306_p2;
reg   [12:0] sub_ln26_8_reg_1857;
wire   [12:0] sub_ln26_11_fu_1341_p2;
reg   [12:0] sub_ln26_11_reg_1868;
reg   [31:0] tmp_1_1_2_1_reg_1875;
reg   [31:0] tmp_1_1_2_1_reg_1875_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_2_reg_1880;
reg   [31:0] tmp_1_1_2_2_reg_1880_pp0_iter1_reg;
reg   [31:0] tmp_1_2_reg_1895;
reg   [31:0] tmp_1_2_reg_1895_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_1_reg_1900;
reg   [31:0] tmp_1_2_0_1_reg_1900_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_1_reg_1900_pp0_iter2_reg;
reg   [31:0] tmp_1_2_0_2_reg_1915;
reg   [31:0] tmp_1_2_0_2_reg_1915_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_2_reg_1915_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1920;
reg   [31:0] tmp_1_2_1_reg_1920_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_reg_1920_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_1_reg_1930;
reg   [31:0] tmp_1_2_1_1_reg_1930_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_1_reg_1930_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_2_reg_1935;
reg   [31:0] tmp_1_2_1_2_reg_1935_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_2_reg_1935_pp0_iter2_reg;
wire   [5:0] f_fu_1391_p2;
reg   [5:0] f_reg_1940;
reg   [31:0] tmp_1_2_2_reg_1945;
reg   [31:0] tmp_1_2_2_reg_1945_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1945_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_1_reg_1950;
reg   [31:0] tmp_1_2_2_1_reg_1950_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_1_reg_1950_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_2_reg_1955;
reg   [31:0] tmp_1_2_2_2_reg_1955_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_2_reg_1955_pp0_iter3_reg;
reg   [31:0] w_sum_3_2_2_2_reg_1960;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [14:0] ap_phi_mux_indvar_flatten56_phi_fu_486_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_497_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_508_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_519_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_530_p4;
wire   [63:0] zext_ln26_7_fu_844_p1;
wire   [63:0] zext_ln26_8_fu_855_p1;
wire   [63:0] zext_ln26_9_fu_1068_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_17_fu_1073_p1;
wire   [63:0] zext_ln26_18_fu_1082_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_19_fu_1092_p1;
wire   [63:0] zext_ln26_26_fu_1097_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_27_fu_1106_p1;
wire   [63:0] zext_ln26_10_fu_1111_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln26_28_fu_1120_p1;
wire   [63:0] zext_ln26_11_fu_1130_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln26_12_fu_1140_p1;
wire   [63:0] zext_ln26_20_fu_1145_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln26_21_fu_1154_p1;
wire   [63:0] zext_ln26_22_fu_1164_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln26_29_fu_1169_p1;
wire   [63:0] zext_ln26_30_fu_1178_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln26_31_fu_1188_p1;
wire   [63:0] zext_ln26_13_fu_1256_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln26_14_fu_1267_p1;
wire   [63:0] zext_ln26_15_fu_1277_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln26_23_fu_1312_p1;
wire   [63:0] zext_ln26_24_fu_1352_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln26_25_fu_1362_p1;
wire   [63:0] zext_ln26_32_fu_1367_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln26_33_fu_1376_p1;
wire   [63:0] zext_ln26_34_fu_1386_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln35_9_fu_1422_p1;
reg   [31:0] grp_fu_537_p0;
reg   [31:0] grp_fu_537_p1;
reg   [31:0] grp_fu_542_p0;
reg   [31:0] grp_fu_542_p1;
reg   [31:0] grp_fu_547_p0;
reg   [31:0] grp_fu_547_p1;
reg   [31:0] grp_fu_554_p0;
reg   [31:0] grp_fu_554_p1;
wire   [0:0] icmp_ln11_fu_640_p2;
wire   [4:0] r_fu_610_p2;
wire   [9:0] tmp_1_fu_662_p3;
wire   [6:0] tmp_2_fu_674_p3;
wire   [63:0] zext_ln26_1_fu_670_p1;
wire   [63:0] zext_ln26_2_fu_682_p1;
wire   [4:0] add_ln26_fu_692_p2;
wire   [4:0] select_ln35_2_fu_698_p3;
wire   [9:0] tmp_5_fu_706_p3;
wire   [6:0] tmp_6_fu_718_p3;
wire   [63:0] zext_ln26_3_fu_714_p1;
wire   [63:0] zext_ln26_4_fu_726_p1;
wire   [4:0] select_ln35_3_fu_736_p3;
wire   [4:0] c_fu_616_p2;
wire   [4:0] add_ln26_1_fu_622_p2;
wire   [0:0] icmp_ln14_fu_772_p2;
wire   [0:0] xor_ln35_fu_766_p2;
wire   [4:0] select_ln35_fu_646_p3;
wire   [0:0] and_ln35_fu_778_p2;
wire   [0:0] or_ln35_fu_790_p2;
wire   [4:0] add_ln26_3_fu_784_p2;
wire   [63:0] sub_ln26_fu_686_p2;
wire   [63:0] zext_ln35_3_fu_812_p1;
wire   [63:0] add_ln26_4_fu_816_p2;
wire   [10:0] trunc_ln26_1_fu_826_p1;
wire   [12:0] p_shl8_cast_fu_830_p3;
wire   [12:0] trunc_ln26_fu_822_p1;
wire   [12:0] add_ln26_5_fu_849_p2;
wire   [63:0] sub_ln26_1_fu_730_p2;
wire   [63:0] add_ln26_7_fu_860_p2;
wire   [10:0] trunc_ln26_3_fu_870_p1;
wire   [12:0] p_shl7_cast_fu_874_p3;
wire   [12:0] trunc_ln26_2_fu_866_p1;
wire   [4:0] add_ln26_13_fu_888_p2;
wire   [4:0] select_ln35_4_fu_750_p3;
wire   [63:0] zext_ln35_5_fu_902_p1;
wire   [63:0] add_ln26_14_fu_906_p2;
wire   [10:0] trunc_ln26_6_fu_916_p1;
wire   [12:0] p_shl5_cast_fu_920_p3;
wire   [12:0] trunc_ln26_5_fu_912_p1;
wire   [63:0] add_ln26_17_fu_934_p2;
wire   [10:0] trunc_ln26_8_fu_944_p1;
wire   [12:0] p_shl4_cast_fu_948_p3;
wire   [12:0] trunc_ln26_7_fu_940_p1;
wire   [4:0] add_ln26_23_fu_962_p2;
wire   [4:0] select_ln35_5_fu_758_p3;
wire   [63:0] zext_ln35_7_fu_976_p1;
wire   [63:0] add_ln26_24_fu_980_p2;
wire   [10:0] trunc_ln26_11_fu_990_p1;
wire   [12:0] p_shl2_cast_fu_994_p3;
wire   [12:0] trunc_ln26_10_fu_986_p1;
wire   [63:0] add_ln26_27_fu_1008_p2;
wire   [10:0] trunc_ln26_13_fu_1018_p1;
wire   [12:0] p_shl1_cast_fu_1022_p3;
wire   [12:0] trunc_ln26_12_fu_1014_p1;
wire   [10:0] add_ln11_fu_1049_p2;
wire   [12:0] add_ln26_6_fu_1063_p2;
wire   [12:0] add_ln26_15_fu_1077_p2;
wire   [12:0] add_ln26_16_fu_1087_p2;
wire   [12:0] add_ln26_25_fu_1101_p2;
wire   [12:0] add_ln26_26_fu_1115_p2;
wire   [12:0] add_ln26_8_fu_1125_p2;
wire   [12:0] add_ln26_9_fu_1135_p2;
wire   [12:0] add_ln26_18_fu_1149_p2;
wire   [12:0] add_ln26_19_fu_1159_p2;
wire   [12:0] add_ln26_28_fu_1173_p2;
wire   [12:0] add_ln26_29_fu_1183_p2;
wire   [9:0] tmp_7_fu_1193_p3;
wire   [6:0] tmp_8_fu_1204_p3;
wire   [10:0] zext_ln26_5_fu_1200_p1;
wire   [10:0] zext_ln26_6_fu_1211_p1;
wire   [10:0] sub_ln26_2_fu_1215_p2;
wire   [11:0] zext_ln35_2_fu_1225_p1;
wire  signed [11:0] add_ln26_10_fu_1228_p2;
wire   [10:0] trunc_ln26_4_fu_1238_p1;
wire   [12:0] p_shl6_cast_fu_1242_p3;
wire  signed [12:0] sext_ln26_1_fu_1234_p1;
wire   [12:0] add_ln26_11_fu_1261_p2;
wire   [12:0] add_ln26_12_fu_1272_p2;
wire   [11:0] zext_ln35_4_fu_1282_p1;
wire  signed [11:0] add_ln26_20_fu_1285_p2;
wire   [10:0] trunc_ln26_9_fu_1294_p1;
wire   [12:0] p_shl3_cast_fu_1298_p3;
wire  signed [12:0] sext_ln26_2_fu_1290_p1;
wire   [11:0] zext_ln35_6_fu_1317_p1;
wire  signed [11:0] add_ln26_30_fu_1320_p2;
wire   [10:0] trunc_ln26_14_fu_1329_p1;
wire   [12:0] p_shl_cast_fu_1333_p3;
wire  signed [12:0] sext_ln26_3_fu_1325_p1;
wire   [12:0] add_ln26_21_fu_1347_p2;
wire   [12:0] add_ln26_22_fu_1357_p2;
wire   [12:0] add_ln26_31_fu_1371_p2;
wire   [12:0] add_ln26_32_fu_1381_p2;
wire   [9:0] grp_fu_1478_p3;
wire   [14:0] tmp_9_fu_1402_p3;
wire   [15:0] zext_ln26_16_fu_1409_p1;
wire   [15:0] zext_ln35_8_fu_1413_p1;
wire   [15:0] add_ln35_2_fu_1416_p2;
wire   [31:0] bitcast_ln34_fu_1427_p1;
wire   [7:0] tmp_fu_1431_p4;
wire   [22:0] trunc_ln34_fu_1441_p1;
wire   [0:0] icmp_ln34_1_fu_1451_p2;
wire   [0:0] icmp_ln34_fu_1445_p2;
wire   [0:0] or_ln34_fu_1457_p2;
wire   [0:0] tmp_4_fu_563_p2;
wire   [0:0] and_ln34_fu_1463_p2;
wire   [5:0] grp_fu_1478_p0;
wire   [4:0] grp_fu_1478_p1;
wire   [4:0] grp_fu_1478_p2;
wire    ap_block_pp0_stage2_00001;
wire    ap_CS_fsm_state61;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1478_p10;
wire   [9:0] grp_fu_1478_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_0_address0),
    .ce0(conv_1_weights_0_0_0_ce0),
    .q0(conv_1_weights_0_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_0_address0),
    .ce0(conv_1_weights_0_1_0_ce0),
    .q0(conv_1_weights_0_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_0_address0),
    .ce0(conv_1_weights_0_2_0_ce0),
    .q0(conv_1_weights_0_2_0_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_0_address0),
    .ce0(conv_1_weights_1_0_0_ce0),
    .q0(conv_1_weights_1_0_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_0_address0),
    .ce0(conv_1_weights_1_1_0_ce0),
    .q0(conv_1_weights_1_1_0_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_0_address0),
    .ce0(conv_1_weights_1_2_0_ce0),
    .q0(conv_1_weights_1_2_0_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_0_address0),
    .ce0(conv_1_weights_2_0_0_ce0),
    .q0(conv_1_weights_2_0_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_0_address0),
    .ce0(conv_1_weights_2_1_0_ce0),
    .q0(conv_1_weights_2_1_0_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_0_address0),
    .ce0(conv_1_weights_2_2_0_ce0),
    .q0(conv_1_weights_2_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_537_p0),
    .din1(grp_fu_537_p1),
    .ce(1'b1),
    .dout(grp_fu_537_p2)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_542_p0),
    .din1(grp_fu_542_p1),
    .ce(1'b1),
    .dout(grp_fu_542_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_547_p0),
    .din1(grp_fu_547_p1),
    .ce(1'b1),
    .dout(grp_fu_547_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_554_p0),
    .din1(grp_fu_554_p1),
    .ce(1'b1),
    .dout(grp_fu_554_p2)
);

conv_1_fcmp_32ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_mb6_U5(
    .din0(grp_fu_542_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_4_fu_563_p2)
);

conv_1_mac_muladdncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_1_mac_muladdncg_U6(
    .din0(grp_fu_1478_p0),
    .din1(grp_fu_1478_p1),
    .din2(grp_fu_1478_p2),
    .dout(grp_fu_1478_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        c_0_reg_515 <= select_ln35_7_reg_1514;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_515 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        f_0_reg_526 <= f_reg_1940;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_526 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        indvar_flatten56_reg_482 <= add_ln8_reg_1491;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten56_reg_482 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        indvar_flatten_reg_504 <= select_ln11_reg_1631;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_504 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        r_0_reg_493 <= select_ln35_1_reg_1496;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_493 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_628_p2 == 1'd0))) begin
        add_ln35_reg_1502 <= add_ln35_fu_744_p2;
        select_ln35_6_reg_1508 <= select_ln35_6_fu_796_p3;
        select_ln35_8_reg_1543 <= select_ln35_8_fu_894_p3;
        select_ln35_9_reg_1562 <= select_ln35_9_fu_968_p3;
        sub_ln26_10_reg_1574 <= sub_ln26_10_fu_1030_p2;
        sub_ln26_3_reg_1521 <= sub_ln26_3_fu_838_p2;
        sub_ln26_4_reg_1536 <= sub_ln26_4_fu_882_p2;
        sub_ln26_6_reg_1548 <= sub_ln26_6_fu_928_p2;
        sub_ln26_7_reg_1555 <= sub_ln26_7_fu_956_p2;
        sub_ln26_9_reg_1567 <= sub_ln26_9_fu_1002_p2;
        zext_ln26_reg_1581[5 : 0] <= zext_ln26_fu_1036_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_1491 <= add_ln8_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1487 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_0_1_0_2_reg_1651 <= conv_1_weights_0_1_0_q0;
        conv_1_weights_0_2_0_2_reg_1656 <= conv_1_weights_0_2_0_q0;
        conv_1_weights_1_0_0_2_reg_1661 <= conv_1_weights_1_0_0_q0;
        conv_1_weights_1_1_0_2_reg_1666 <= conv_1_weights_1_1_0_q0;
        conv_1_weights_1_2_0_2_reg_1671 <= conv_1_weights_1_2_0_q0;
        conv_1_weights_2_0_0_2_reg_1676 <= conv_1_weights_2_0_0_q0;
        conv_1_weights_2_1_0_2_reg_1681 <= conv_1_weights_2_1_0_q0;
        conv_1_weights_2_2_0_2_reg_1686 <= conv_1_weights_2_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        f_reg_1940 <= f_fu_1391_p2;
        tmp_1_2_1_1_reg_1930 <= grp_fu_547_p2;
        tmp_1_2_1_2_reg_1935 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_1487 <= icmp_ln8_fu_628_p2;
        icmp_ln8_reg_1487_pp0_iter1_reg <= icmp_ln8_reg_1487;
        icmp_ln8_reg_1487_pp0_iter2_reg <= icmp_ln8_reg_1487_pp0_iter1_reg;
        icmp_ln8_reg_1487_pp0_iter3_reg <= icmp_ln8_reg_1487_pp0_iter2_reg;
        icmp_ln8_reg_1487_pp0_iter4_reg <= icmp_ln8_reg_1487_pp0_iter3_reg;
        select_ln35_1_reg_1496_pp0_iter1_reg <= select_ln35_1_reg_1496;
        select_ln35_1_reg_1496_pp0_iter2_reg <= select_ln35_1_reg_1496_pp0_iter1_reg;
        select_ln35_1_reg_1496_pp0_iter3_reg <= select_ln35_1_reg_1496_pp0_iter2_reg;
        select_ln35_1_reg_1496_pp0_iter4_reg <= select_ln35_1_reg_1496_pp0_iter3_reg;
        select_ln35_6_reg_1508_pp0_iter1_reg <= select_ln35_6_reg_1508;
        select_ln35_6_reg_1508_pp0_iter2_reg <= select_ln35_6_reg_1508_pp0_iter1_reg;
        select_ln35_6_reg_1508_pp0_iter3_reg <= select_ln35_6_reg_1508_pp0_iter2_reg;
        select_ln35_6_reg_1508_pp0_iter4_reg <= select_ln35_6_reg_1508_pp0_iter3_reg;
        select_ln35_7_reg_1514_pp0_iter1_reg <= select_ln35_7_reg_1514;
        select_ln35_7_reg_1514_pp0_iter2_reg <= select_ln35_7_reg_1514_pp0_iter1_reg;
        select_ln35_7_reg_1514_pp0_iter3_reg <= select_ln35_7_reg_1514_pp0_iter2_reg;
        select_ln35_7_reg_1514_pp0_iter4_reg <= select_ln35_7_reg_1514_pp0_iter3_reg;
        tmp_1_2_2_1_reg_1950_pp0_iter2_reg <= tmp_1_2_2_1_reg_1950;
        tmp_1_2_2_1_reg_1950_pp0_iter3_reg <= tmp_1_2_2_1_reg_1950_pp0_iter2_reg;
        tmp_1_2_2_reg_1945_pp0_iter2_reg <= tmp_1_2_2_reg_1945;
        tmp_1_2_2_reg_1945_pp0_iter3_reg <= tmp_1_2_2_reg_1945_pp0_iter2_reg;
        zext_ln26_reg_1581_pp0_iter1_reg[5 : 0] <= zext_ln26_reg_1581[5 : 0];
        zext_ln26_reg_1581_pp0_iter2_reg[5 : 0] <= zext_ln26_reg_1581_pp0_iter1_reg[5 : 0];
        zext_ln26_reg_1581_pp0_iter3_reg[5 : 0] <= zext_ln26_reg_1581_pp0_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1487 == 1'd0)))) begin
        reg_581 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1487 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_587 <= grp_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0)))) begin
        reg_593 <= grp_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_598 <= grp_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1487_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0)))) begin
        reg_604 <= grp_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_628_p2 == 1'd0))) begin
        select_ln11_reg_1631 <= select_ln11_fu_1055_p3;
        select_ln35_1_reg_1496 <= select_ln35_1_fu_654_p3;
        select_ln35_7_reg_1514 <= select_ln35_7_fu_804_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln8_reg_1487 == 1'd0))) begin
        sext_ln26_reg_1821[11 : 2] <= sext_ln26_fu_1221_p1[11 : 2];
        sub_ln26_5_reg_1827 <= sub_ln26_5_fu_1250_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln8_reg_1487 == 1'd0))) begin
        sub_ln26_11_reg_1868 <= sub_ln26_11_fu_1341_p2;
        sub_ln26_8_reg_1857 <= sub_ln26_8_fu_1306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_0_0_1_reg_1701 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_0_1_1_reg_1731 <= grp_fu_547_p2;
        tmp_1_0_1_2_reg_1736 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_0_1_reg_1716 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_0_2_1_reg_1756 <= grp_fu_554_p2;
        tmp_1_0_2_reg_1751 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_0_2_2_reg_1771 <= grp_fu_547_p2;
        tmp_1_1_reg_1776 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_1_0_1_reg_1791 <= grp_fu_547_p2;
        tmp_1_1_0_2_reg_1796 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_1_1_0_1_reg_1791_pp0_iter1_reg <= tmp_1_1_0_1_reg_1791;
        tmp_1_1_0_2_reg_1796_pp0_iter1_reg <= tmp_1_1_0_2_reg_1796;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_1_1_1_reg_1816 <= grp_fu_554_p2;
        tmp_1_1_1_reg_1811 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_1_1_1_1_reg_1816_pp0_iter1_reg <= tmp_1_1_1_1_reg_1816;
        tmp_1_1_1_reg_1811_pp0_iter1_reg <= tmp_1_1_1_reg_1811;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_1_1_2_reg_1842 <= grp_fu_547_p2;
        tmp_1_1_2_reg_1847 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_1_1_1_2_reg_1842_pp0_iter1_reg <= tmp_1_1_1_2_reg_1842;
        tmp_1_1_2_reg_1847_pp0_iter1_reg <= tmp_1_1_2_reg_1847;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_1_2_1_reg_1875 <= grp_fu_547_p2;
        tmp_1_1_2_2_reg_1880 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_1_1_2_1_reg_1875_pp0_iter1_reg <= tmp_1_1_2_1_reg_1875;
        tmp_1_1_2_2_reg_1880_pp0_iter1_reg <= tmp_1_1_2_2_reg_1880;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_2_0_1_reg_1900 <= grp_fu_554_p2;
        tmp_1_2_reg_1895 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_1_2_0_1_reg_1900_pp0_iter1_reg <= tmp_1_2_0_1_reg_1900;
        tmp_1_2_0_1_reg_1900_pp0_iter2_reg <= tmp_1_2_0_1_reg_1900_pp0_iter1_reg;
        tmp_1_2_reg_1895_pp0_iter1_reg <= tmp_1_2_reg_1895;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_2_0_2_reg_1915 <= grp_fu_547_p2;
        tmp_1_2_1_reg_1920 <= grp_fu_554_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_1_2_0_2_reg_1915_pp0_iter1_reg <= tmp_1_2_0_2_reg_1915;
        tmp_1_2_0_2_reg_1915_pp0_iter2_reg <= tmp_1_2_0_2_reg_1915_pp0_iter1_reg;
        tmp_1_2_1_reg_1920_pp0_iter1_reg <= tmp_1_2_1_reg_1920;
        tmp_1_2_1_reg_1920_pp0_iter2_reg <= tmp_1_2_1_reg_1920_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_1_2_1_1_reg_1930_pp0_iter1_reg <= tmp_1_2_1_1_reg_1930;
        tmp_1_2_1_1_reg_1930_pp0_iter2_reg <= tmp_1_2_1_1_reg_1930_pp0_iter1_reg;
        tmp_1_2_1_2_reg_1935_pp0_iter1_reg <= tmp_1_2_1_2_reg_1935;
        tmp_1_2_1_2_reg_1935_pp0_iter2_reg <= tmp_1_2_1_2_reg_1935_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        tmp_1_2_2_1_reg_1950 <= grp_fu_554_p2;
        tmp_1_2_2_reg_1945 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1487_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_2_reg_1955 <= grp_fu_547_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_2_reg_1955_pp0_iter2_reg <= tmp_1_2_2_2_reg_1955;
        tmp_1_2_2_2_reg_1955_pp0_iter3_reg <= tmp_1_2_2_2_reg_1955_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487_pp0_iter3_reg == 1'd0))) begin
        w_sum_3_2_2_2_reg_1960 <= grp_fu_542_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_628_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_519_p4 = select_ln35_7_reg_1514;
    end else begin
        ap_phi_mux_c_0_phi_fu_519_p4 = c_0_reg_515;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_530_p4 = f_reg_1940;
    end else begin
        ap_phi_mux_f_0_phi_fu_530_p4 = f_0_reg_526;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        ap_phi_mux_indvar_flatten56_phi_fu_486_p4 = add_ln8_reg_1491;
    end else begin
        ap_phi_mux_indvar_flatten56_phi_fu_486_p4 = indvar_flatten56_reg_482;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_508_p4 = select_ln11_reg_1631;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_508_p4 = indvar_flatten_reg_504;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1487 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_497_p4 = select_ln35_1_reg_1496;
    end else begin
        ap_phi_mux_r_0_phi_fu_497_p4 = r_0_reg_493;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            conv_input_address0 = zext_ln26_34_fu_1386_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv_input_address0 = zext_ln26_32_fu_1367_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv_input_address0 = zext_ln26_24_fu_1352_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv_input_address0 = zext_ln26_15_fu_1277_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_input_address0 = zext_ln26_13_fu_1256_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_input_address0 = zext_ln26_30_fu_1178_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_input_address0 = zext_ln26_22_fu_1164_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_input_address0 = zext_ln26_20_fu_1145_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_input_address0 = zext_ln26_11_fu_1130_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address0 = zext_ln26_28_fu_1120_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address0 = zext_ln26_26_fu_1097_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address0 = zext_ln26_18_fu_1082_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address0 = zext_ln26_9_fu_1068_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address0 = zext_ln26_7_fu_844_p1;
        end else begin
            conv_input_address0 = 'bx;
        end
    end else begin
        conv_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv_input_address1 = zext_ln26_33_fu_1376_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv_input_address1 = zext_ln26_25_fu_1362_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv_input_address1 = zext_ln26_23_fu_1312_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_input_address1 = zext_ln26_14_fu_1267_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_input_address1 = zext_ln26_31_fu_1188_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_input_address1 = zext_ln26_29_fu_1169_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_input_address1 = zext_ln26_21_fu_1154_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_input_address1 = zext_ln26_12_fu_1140_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address1 = zext_ln26_10_fu_1111_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address1 = zext_ln26_27_fu_1106_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address1 = zext_ln26_19_fu_1092_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address1 = zext_ln26_17_fu_1073_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address1 = zext_ln26_8_fu_855_p1;
        end else begin
            conv_input_address1 = 'bx;
        end
    end else begin
        conv_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce0 = 1'b1;
    end else begin
        conv_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce1 = 1'b1;
    end else begin
        conv_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1487_pp0_iter4_reg == 1'd0))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_537_p0 = reg_604;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_537_p0 = reg_598;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_537_p0 = reg_587;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p0 = grp_fu_547_p2;
    end else begin
        grp_fu_537_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_537_p1 = tmp_1_2_0_2_reg_1915_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_537_p1 = tmp_1_2_0_1_reg_1900_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_537_p1 = tmp_1_2_reg_1895_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_537_p1 = tmp_1_1_2_2_reg_1880_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_537_p1 = tmp_1_1_2_1_reg_1875_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_537_p1 = tmp_1_1_2_reg_1847_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_537_p1 = tmp_1_1_1_2_reg_1842_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_537_p1 = tmp_1_0_2_reg_1751;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = tmp_1_0_1_2_reg_1736;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = tmp_1_0_1_1_reg_1731;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = tmp_1_0_1_reg_1716;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = reg_581;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = tmp_1_0_0_1_reg_1701;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_537_p1 = 32'd0;
    end else begin
        grp_fu_537_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_542_p0 = w_sum_3_2_2_2_reg_1960;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_542_p0 = reg_598;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_542_p0 = reg_604;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_542_p0 = reg_593;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_542_p0 = reg_587;
    end else begin
        grp_fu_542_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_542_p1 = conv_1_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_542_p1 = tmp_1_2_2_2_reg_1955_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_542_p1 = tmp_1_2_2_1_reg_1950_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_542_p1 = tmp_1_2_2_reg_1945_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_542_p1 = tmp_1_2_1_2_reg_1935_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_542_p1 = tmp_1_2_1_1_reg_1930_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_542_p1 = tmp_1_2_1_reg_1920_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_542_p1 = tmp_1_1_1_1_reg_1816_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_542_p1 = tmp_1_1_1_reg_1811_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_542_p1 = tmp_1_1_0_2_reg_1796_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_542_p1 = tmp_1_1_0_1_reg_1791_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_542_p1 = tmp_1_1_reg_1776;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_542_p1 = tmp_1_0_2_2_reg_1771;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_542_p1 = tmp_1_0_2_1_reg_1756;
    end else begin
        grp_fu_542_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_547_p0 = conv_1_weights_2_2_0_2_reg_1686;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_547_p0 = conv_1_weights_2_0_0_2_reg_1676;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_547_p0 = conv_1_weights_1_1_0_2_reg_1666;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_547_p0 = conv_1_weights_0_2_0_2_reg_1656;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_547_p0 = conv_input_q0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_547_p0 = conv_1_weights_0_0_0_q0;
    end else begin
        grp_fu_547_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_547_p1 = 32'd0;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_547_p1 = conv_input_q0;
    end else begin
        grp_fu_547_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_554_p0 = conv_1_weights_2_1_0_2_reg_1681;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_554_p0 = conv_1_weights_1_2_0_2_reg_1671;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_554_p0 = conv_1_weights_1_0_0_2_reg_1661;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_554_p0 = conv_1_weights_0_1_0_2_reg_1651;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_554_p0 = conv_input_q1;
    end else begin
        grp_fu_554_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_554_p1 = conv_input_q1;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_554_p1 = 32'd0;
    end else begin
        grp_fu_554_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_628_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_628_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_1049_p2 = (11'd1 + ap_phi_mux_indvar_flatten_phi_fu_508_p4);

assign add_ln26_10_fu_1228_p2 = ($signed(sext_ln26_fu_1221_p1) + $signed(zext_ln35_2_fu_1225_p1));

assign add_ln26_11_fu_1261_p2 = (13'd1 + sub_ln26_5_fu_1250_p2);

assign add_ln26_12_fu_1272_p2 = (13'd2 + sub_ln26_5_reg_1827);

assign add_ln26_13_fu_888_p2 = (5'd2 + select_ln35_fu_646_p3);

assign add_ln26_14_fu_906_p2 = (sub_ln26_fu_686_p2 + zext_ln35_5_fu_902_p1);

assign add_ln26_15_fu_1077_p2 = (13'd1 + sub_ln26_6_reg_1548);

assign add_ln26_16_fu_1087_p2 = (13'd2 + sub_ln26_6_reg_1548);

assign add_ln26_17_fu_934_p2 = (sub_ln26_1_fu_730_p2 + zext_ln35_5_fu_902_p1);

assign add_ln26_18_fu_1149_p2 = (13'd1 + sub_ln26_7_reg_1555);

assign add_ln26_19_fu_1159_p2 = (13'd2 + sub_ln26_7_reg_1555);

assign add_ln26_1_fu_622_p2 = (ap_phi_mux_c_0_phi_fu_519_p4 + 5'd2);

assign add_ln26_20_fu_1285_p2 = ($signed(sext_ln26_reg_1821) + $signed(zext_ln35_4_fu_1282_p1));

assign add_ln26_21_fu_1347_p2 = (13'd1 + sub_ln26_8_reg_1857);

assign add_ln26_22_fu_1357_p2 = (13'd2 + sub_ln26_8_reg_1857);

assign add_ln26_23_fu_962_p2 = (5'd3 + select_ln35_fu_646_p3);

assign add_ln26_24_fu_980_p2 = (sub_ln26_fu_686_p2 + zext_ln35_7_fu_976_p1);

assign add_ln26_25_fu_1101_p2 = (13'd1 + sub_ln26_9_reg_1567);

assign add_ln26_26_fu_1115_p2 = (13'd2 + sub_ln26_9_reg_1567);

assign add_ln26_27_fu_1008_p2 = (sub_ln26_1_fu_730_p2 + zext_ln35_7_fu_976_p1);

assign add_ln26_28_fu_1173_p2 = (13'd1 + sub_ln26_10_reg_1574);

assign add_ln26_29_fu_1183_p2 = (13'd2 + sub_ln26_10_reg_1574);

assign add_ln26_30_fu_1320_p2 = ($signed(sext_ln26_reg_1821) + $signed(zext_ln35_6_fu_1317_p1));

assign add_ln26_31_fu_1371_p2 = (13'd1 + sub_ln26_11_reg_1868);

assign add_ln26_32_fu_1381_p2 = (13'd2 + sub_ln26_11_reg_1868);

assign add_ln26_3_fu_784_p2 = (5'd1 + select_ln35_fu_646_p3);

assign add_ln26_4_fu_816_p2 = (sub_ln26_fu_686_p2 + zext_ln35_3_fu_812_p1);

assign add_ln26_5_fu_849_p2 = (13'd1 + sub_ln26_3_fu_838_p2);

assign add_ln26_6_fu_1063_p2 = (13'd2 + sub_ln26_3_reg_1521);

assign add_ln26_7_fu_860_p2 = (sub_ln26_1_fu_730_p2 + zext_ln35_3_fu_812_p1);

assign add_ln26_8_fu_1125_p2 = (13'd1 + sub_ln26_4_reg_1536);

assign add_ln26_9_fu_1135_p2 = (13'd2 + sub_ln26_4_reg_1536);

assign add_ln26_fu_692_p2 = (5'd2 + ap_phi_mux_r_0_phi_fu_497_p4);

assign add_ln35_2_fu_1416_p2 = (zext_ln26_16_fu_1409_p1 + zext_ln35_8_fu_1413_p1);

assign add_ln35_fu_744_p2 = (ap_phi_mux_r_0_phi_fu_497_p4 + select_ln35_3_fu_736_p3);

assign add_ln8_fu_634_p2 = (ap_phi_mux_indvar_flatten56_phi_fu_486_p4 + 15'd1);

assign and_ln34_fu_1463_p2 = (tmp_4_fu_563_p2 & or_ln34_fu_1457_p2);

assign and_ln35_fu_778_p2 = (xor_ln35_fu_766_p2 & icmp_ln14_fu_772_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd15];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_1427_p1 = grp_fu_542_p2;

assign c_fu_616_p2 = (ap_phi_mux_c_0_phi_fu_519_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_reg_1581_pp0_iter3_reg;

assign conv_1_weights_0_0_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_0_1_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_0_2_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_1_0_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_1_1_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_1_2_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_2_0_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_2_1_0_address0 = zext_ln26_fu_1036_p1;

assign conv_1_weights_2_2_0_address0 = zext_ln26_fu_1036_p1;

assign conv_out_address0 = zext_ln35_9_fu_1422_p1;

assign conv_out_d0 = ((and_ln34_fu_1463_p2[0:0] === 1'b1) ? grp_fu_542_p2 : 32'd0);

assign f_fu_1391_p2 = (6'd1 + select_ln35_6_reg_1508);

assign grp_fu_1478_p0 = 10'd26;

assign grp_fu_1478_p1 = grp_fu_1478_p10;

assign grp_fu_1478_p10 = select_ln35_1_reg_1496_pp0_iter4_reg;

assign grp_fu_1478_p2 = grp_fu_1478_p20;

assign grp_fu_1478_p20 = select_ln35_7_reg_1514_pp0_iter4_reg;

assign icmp_ln11_fu_640_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_508_p4 == 11'd832) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_772_p2 = ((ap_phi_mux_f_0_phi_fu_530_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1451_p2 = ((trunc_ln34_fu_1441_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1445_p2 = ((tmp_fu_1431_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_628_p2 = ((ap_phi_mux_indvar_flatten56_phi_fu_486_p4 == 15'd21632) ? 1'b1 : 1'b0);

assign or_ln34_fu_1457_p2 = (icmp_ln34_fu_1445_p2 | icmp_ln34_1_fu_1451_p2);

assign or_ln35_fu_790_p2 = (icmp_ln11_fu_640_p2 | and_ln35_fu_778_p2);

assign p_shl1_cast_fu_1022_p3 = {{trunc_ln26_13_fu_1018_p1}, {2'd0}};

assign p_shl2_cast_fu_994_p3 = {{trunc_ln26_11_fu_990_p1}, {2'd0}};

assign p_shl3_cast_fu_1298_p3 = {{trunc_ln26_9_fu_1294_p1}, {2'd0}};

assign p_shl4_cast_fu_948_p3 = {{trunc_ln26_8_fu_944_p1}, {2'd0}};

assign p_shl5_cast_fu_920_p3 = {{trunc_ln26_6_fu_916_p1}, {2'd0}};

assign p_shl6_cast_fu_1242_p3 = {{trunc_ln26_4_fu_1238_p1}, {2'd0}};

assign p_shl7_cast_fu_874_p3 = {{trunc_ln26_3_fu_870_p1}, {2'd0}};

assign p_shl8_cast_fu_830_p3 = {{trunc_ln26_1_fu_826_p1}, {2'd0}};

assign p_shl_cast_fu_1333_p3 = {{trunc_ln26_14_fu_1329_p1}, {2'd0}};

assign r_fu_610_p2 = (ap_phi_mux_r_0_phi_fu_497_p4 + 5'd1);

assign select_ln11_fu_1055_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? 11'd1 : add_ln11_fu_1049_p2);

assign select_ln35_1_fu_654_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? r_fu_610_p2 : ap_phi_mux_r_0_phi_fu_497_p4);

assign select_ln35_2_fu_698_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? add_ln26_fu_692_p2 : r_fu_610_p2);

assign select_ln35_3_fu_736_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln35_4_fu_750_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? 5'd1 : c_fu_616_p2);

assign select_ln35_5_fu_758_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? 5'd2 : add_ln26_1_fu_622_p2);

assign select_ln35_6_fu_796_p3 = ((or_ln35_fu_790_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_530_p4);

assign select_ln35_7_fu_804_p3 = ((and_ln35_fu_778_p2[0:0] === 1'b1) ? add_ln26_3_fu_784_p2 : select_ln35_fu_646_p3);

assign select_ln35_8_fu_894_p3 = ((and_ln35_fu_778_p2[0:0] === 1'b1) ? add_ln26_13_fu_888_p2 : select_ln35_4_fu_750_p3);

assign select_ln35_9_fu_968_p3 = ((and_ln35_fu_778_p2[0:0] === 1'b1) ? add_ln26_23_fu_962_p2 : select_ln35_5_fu_758_p3);

assign select_ln35_fu_646_p3 = ((icmp_ln11_fu_640_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_519_p4);

assign sext_ln26_1_fu_1234_p1 = add_ln26_10_fu_1228_p2;

assign sext_ln26_2_fu_1290_p1 = add_ln26_20_fu_1285_p2;

assign sext_ln26_3_fu_1325_p1 = add_ln26_30_fu_1320_p2;

assign sext_ln26_fu_1221_p1 = $signed(sub_ln26_2_fu_1215_p2);

assign sub_ln26_10_fu_1030_p2 = (p_shl1_cast_fu_1022_p3 - trunc_ln26_12_fu_1014_p1);

assign sub_ln26_11_fu_1341_p2 = ($signed(p_shl_cast_fu_1333_p3) - $signed(sext_ln26_3_fu_1325_p1));

assign sub_ln26_1_fu_730_p2 = (zext_ln26_3_fu_714_p1 - zext_ln26_4_fu_726_p1);

assign sub_ln26_2_fu_1215_p2 = (zext_ln26_5_fu_1200_p1 - zext_ln26_6_fu_1211_p1);

assign sub_ln26_3_fu_838_p2 = (p_shl8_cast_fu_830_p3 - trunc_ln26_fu_822_p1);

assign sub_ln26_4_fu_882_p2 = (p_shl7_cast_fu_874_p3 - trunc_ln26_2_fu_866_p1);

assign sub_ln26_5_fu_1250_p2 = ($signed(p_shl6_cast_fu_1242_p3) - $signed(sext_ln26_1_fu_1234_p1));

assign sub_ln26_6_fu_928_p2 = (p_shl5_cast_fu_920_p3 - trunc_ln26_5_fu_912_p1);

assign sub_ln26_7_fu_956_p2 = (p_shl4_cast_fu_948_p3 - trunc_ln26_7_fu_940_p1);

assign sub_ln26_8_fu_1306_p2 = ($signed(p_shl3_cast_fu_1298_p3) - $signed(sext_ln26_2_fu_1290_p1));

assign sub_ln26_9_fu_1002_p2 = (p_shl2_cast_fu_994_p3 - trunc_ln26_10_fu_986_p1);

assign sub_ln26_fu_686_p2 = (zext_ln26_1_fu_670_p1 - zext_ln26_2_fu_682_p1);

assign tmp_1_fu_662_p3 = {{select_ln35_1_fu_654_p3}, {5'd0}};

assign tmp_2_fu_674_p3 = {{select_ln35_1_fu_654_p3}, {2'd0}};

assign tmp_5_fu_706_p3 = {{select_ln35_2_fu_698_p3}, {5'd0}};

assign tmp_6_fu_718_p3 = {{select_ln35_2_fu_698_p3}, {2'd0}};

assign tmp_7_fu_1193_p3 = {{add_ln35_reg_1502}, {5'd0}};

assign tmp_8_fu_1204_p3 = {{add_ln35_reg_1502}, {2'd0}};

assign tmp_9_fu_1402_p3 = {{grp_fu_1478_p3}, {5'd0}};

assign tmp_fu_1431_p4 = {{bitcast_ln34_fu_1427_p1[30:23]}};

assign trunc_ln26_10_fu_986_p1 = add_ln26_24_fu_980_p2[12:0];

assign trunc_ln26_11_fu_990_p1 = add_ln26_24_fu_980_p2[10:0];

assign trunc_ln26_12_fu_1014_p1 = add_ln26_27_fu_1008_p2[12:0];

assign trunc_ln26_13_fu_1018_p1 = add_ln26_27_fu_1008_p2[10:0];

assign trunc_ln26_14_fu_1329_p1 = add_ln26_30_fu_1320_p2[10:0];

assign trunc_ln26_1_fu_826_p1 = add_ln26_4_fu_816_p2[10:0];

assign trunc_ln26_2_fu_866_p1 = add_ln26_7_fu_860_p2[12:0];

assign trunc_ln26_3_fu_870_p1 = add_ln26_7_fu_860_p2[10:0];

assign trunc_ln26_4_fu_1238_p1 = add_ln26_10_fu_1228_p2[10:0];

assign trunc_ln26_5_fu_912_p1 = add_ln26_14_fu_906_p2[12:0];

assign trunc_ln26_6_fu_916_p1 = add_ln26_14_fu_906_p2[10:0];

assign trunc_ln26_7_fu_940_p1 = add_ln26_17_fu_934_p2[12:0];

assign trunc_ln26_8_fu_944_p1 = add_ln26_17_fu_934_p2[10:0];

assign trunc_ln26_9_fu_1294_p1 = add_ln26_20_fu_1285_p2[10:0];

assign trunc_ln26_fu_822_p1 = add_ln26_4_fu_816_p2[12:0];

assign trunc_ln34_fu_1441_p1 = bitcast_ln34_fu_1427_p1[22:0];

assign xor_ln35_fu_766_p2 = (icmp_ln11_fu_640_p2 ^ 1'd1);

assign zext_ln26_10_fu_1111_p1 = sub_ln26_4_reg_1536;

assign zext_ln26_11_fu_1130_p1 = add_ln26_8_fu_1125_p2;

assign zext_ln26_12_fu_1140_p1 = add_ln26_9_fu_1135_p2;

assign zext_ln26_13_fu_1256_p1 = sub_ln26_5_fu_1250_p2;

assign zext_ln26_14_fu_1267_p1 = add_ln26_11_fu_1261_p2;

assign zext_ln26_15_fu_1277_p1 = add_ln26_12_fu_1272_p2;

assign zext_ln26_16_fu_1409_p1 = tmp_9_fu_1402_p3;

assign zext_ln26_17_fu_1073_p1 = sub_ln26_6_reg_1548;

assign zext_ln26_18_fu_1082_p1 = add_ln26_15_fu_1077_p2;

assign zext_ln26_19_fu_1092_p1 = add_ln26_16_fu_1087_p2;

assign zext_ln26_1_fu_670_p1 = tmp_1_fu_662_p3;

assign zext_ln26_20_fu_1145_p1 = sub_ln26_7_reg_1555;

assign zext_ln26_21_fu_1154_p1 = add_ln26_18_fu_1149_p2;

assign zext_ln26_22_fu_1164_p1 = add_ln26_19_fu_1159_p2;

assign zext_ln26_23_fu_1312_p1 = sub_ln26_8_fu_1306_p2;

assign zext_ln26_24_fu_1352_p1 = add_ln26_21_fu_1347_p2;

assign zext_ln26_25_fu_1362_p1 = add_ln26_22_fu_1357_p2;

assign zext_ln26_26_fu_1097_p1 = sub_ln26_9_reg_1567;

assign zext_ln26_27_fu_1106_p1 = add_ln26_25_fu_1101_p2;

assign zext_ln26_28_fu_1120_p1 = add_ln26_26_fu_1115_p2;

assign zext_ln26_29_fu_1169_p1 = sub_ln26_10_reg_1574;

assign zext_ln26_2_fu_682_p1 = tmp_2_fu_674_p3;

assign zext_ln26_30_fu_1178_p1 = add_ln26_28_fu_1173_p2;

assign zext_ln26_31_fu_1188_p1 = add_ln26_29_fu_1183_p2;

assign zext_ln26_32_fu_1367_p1 = sub_ln26_11_reg_1868;

assign zext_ln26_33_fu_1376_p1 = add_ln26_31_fu_1371_p2;

assign zext_ln26_34_fu_1386_p1 = add_ln26_32_fu_1381_p2;

assign zext_ln26_3_fu_714_p1 = tmp_5_fu_706_p3;

assign zext_ln26_4_fu_726_p1 = tmp_6_fu_718_p3;

assign zext_ln26_5_fu_1200_p1 = tmp_7_fu_1193_p3;

assign zext_ln26_6_fu_1211_p1 = tmp_8_fu_1204_p3;

assign zext_ln26_7_fu_844_p1 = sub_ln26_3_fu_838_p2;

assign zext_ln26_8_fu_855_p1 = add_ln26_5_fu_849_p2;

assign zext_ln26_9_fu_1068_p1 = add_ln26_6_fu_1063_p2;

assign zext_ln26_fu_1036_p1 = select_ln35_6_fu_796_p3;

assign zext_ln35_2_fu_1225_p1 = select_ln35_7_reg_1514;

assign zext_ln35_3_fu_812_p1 = select_ln35_7_fu_804_p3;

assign zext_ln35_4_fu_1282_p1 = select_ln35_8_reg_1543;

assign zext_ln35_5_fu_902_p1 = select_ln35_8_fu_894_p3;

assign zext_ln35_6_fu_1317_p1 = select_ln35_9_reg_1562;

assign zext_ln35_7_fu_976_p1 = select_ln35_9_fu_968_p3;

assign zext_ln35_8_fu_1413_p1 = select_ln35_6_reg_1508_pp0_iter4_reg;

assign zext_ln35_9_fu_1422_p1 = add_ln35_2_fu_1416_p2;

always @ (posedge ap_clk) begin
    zext_ln26_reg_1581[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1581_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1581_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1581_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    sext_ln26_reg_1821[1:0] <= 2'b00;
end

endmodule //conv_1
