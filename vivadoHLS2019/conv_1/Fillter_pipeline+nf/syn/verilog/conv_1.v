// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.132000,HLS_SYN_LAT=334673,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=10,HLS_SYN_FF=3410,HLS_SYN_LUT=3418,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_address0,
        conv_input_ce0,
        conv_input_q0,
        conv_input_address1,
        conv_input_ce1,
        conv_input_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_pp0_stage0 = 18'd8;
parameter    ap_ST_fsm_pp0_stage1 = 18'd16;
parameter    ap_ST_fsm_pp0_stage2 = 18'd32;
parameter    ap_ST_fsm_pp0_stage3 = 18'd64;
parameter    ap_ST_fsm_pp0_stage4 = 18'd128;
parameter    ap_ST_fsm_pp0_stage5 = 18'd256;
parameter    ap_ST_fsm_pp0_stage6 = 18'd512;
parameter    ap_ST_fsm_pp0_stage7 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage8 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage9 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage10 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage11 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage12 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage13 = 18'd65536;
parameter    ap_ST_fsm_state63 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_input_address0;
output   conv_input_ce0;
input  [31:0] conv_input_q0;
output  [11:0] conv_input_address1;
output   conv_input_ce1;
input  [31:0] conv_input_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_input_address0;
reg conv_input_ce0;
reg[11:0] conv_input_address1;
reg conv_input_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_weights_0_0_0_address0;
reg    conv_1_weights_0_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_0_q0;
wire   [4:0] conv_1_weights_0_1_0_address0;
reg    conv_1_weights_0_1_0_ce0;
wire   [31:0] conv_1_weights_0_1_0_q0;
wire   [4:0] conv_1_weights_0_2_0_address0;
reg    conv_1_weights_0_2_0_ce0;
wire   [31:0] conv_1_weights_0_2_0_q0;
wire   [4:0] conv_1_weights_1_0_0_address0;
reg    conv_1_weights_1_0_0_ce0;
wire   [31:0] conv_1_weights_1_0_0_q0;
wire   [4:0] conv_1_weights_1_1_0_address0;
reg    conv_1_weights_1_1_0_ce0;
wire   [31:0] conv_1_weights_1_1_0_q0;
wire   [4:0] conv_1_weights_1_2_0_address0;
reg    conv_1_weights_1_2_0_ce0;
wire   [31:0] conv_1_weights_1_2_0_q0;
wire   [4:0] conv_1_weights_2_0_0_address0;
reg    conv_1_weights_2_0_0_ce0;
wire   [31:0] conv_1_weights_2_0_0_q0;
wire   [4:0] conv_1_weights_2_1_0_address0;
reg    conv_1_weights_2_1_0_ce0;
wire   [31:0] conv_1_weights_2_1_0_q0;
wire   [4:0] conv_1_weights_2_2_0_address0;
reg    conv_1_weights_2_2_0_ce0;
wire   [31:0] conv_1_weights_2_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [5:0] f_0_reg_479;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state19_pp0_stage1_iter1;
wire    ap_block_state33_pp0_stage1_iter2;
wire    ap_block_state47_pp0_stage1_iter3;
wire    ap_block_state61_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln14_reg_1499;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state20_pp0_stage2_iter1;
wire    ap_block_state34_pp0_stage2_iter2;
wire    ap_block_state48_pp0_stage2_iter3;
wire    ap_block_state62_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state21_pp0_stage3_iter1;
wire    ap_block_state35_pp0_stage3_iter2;
wire    ap_block_state49_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state8_pp0_stage4_iter0;
wire    ap_block_state22_pp0_stage4_iter1;
wire    ap_block_state36_pp0_stage4_iter2;
wire    ap_block_state50_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state9_pp0_stage5_iter0;
wire    ap_block_state23_pp0_stage5_iter1;
wire    ap_block_state37_pp0_stage5_iter2;
wire    ap_block_state51_pp0_stage5_iter3;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state10_pp0_stage6_iter0;
wire    ap_block_state24_pp0_stage6_iter1;
wire    ap_block_state38_pp0_stage6_iter2;
wire    ap_block_state52_pp0_stage6_iter3;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state11_pp0_stage7_iter0;
wire    ap_block_state25_pp0_stage7_iter1;
wire    ap_block_state39_pp0_stage7_iter2;
wire    ap_block_state53_pp0_stage7_iter3;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state12_pp0_stage8_iter0;
wire    ap_block_state26_pp0_stage8_iter1;
wire    ap_block_state40_pp0_stage8_iter2;
wire    ap_block_state54_pp0_stage8_iter3;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state13_pp0_stage9_iter0;
wire    ap_block_state27_pp0_stage9_iter1;
wire    ap_block_state41_pp0_stage9_iter2;
wire    ap_block_state55_pp0_stage9_iter3;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state14_pp0_stage10_iter0;
wire    ap_block_state28_pp0_stage10_iter1;
wire    ap_block_state42_pp0_stage10_iter2;
wire    ap_block_state56_pp0_stage10_iter3;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state15_pp0_stage11_iter0;
wire    ap_block_state29_pp0_stage11_iter1;
wire    ap_block_state43_pp0_stage11_iter2;
wire    ap_block_state57_pp0_stage11_iter3;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state16_pp0_stage12_iter0;
wire    ap_block_state30_pp0_stage12_iter1;
wire    ap_block_state44_pp0_stage12_iter2;
wire    ap_block_state58_pp0_stage12_iter3;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state17_pp0_stage13_iter0;
wire    ap_block_state31_pp0_stage13_iter1;
wire    ap_block_state45_pp0_stage13_iter2;
wire    ap_block_state59_pp0_stage13_iter3;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state32_pp0_stage0_iter2;
wire    ap_block_state46_pp0_stage0_iter3;
wire    ap_block_state60_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] reg_534;
wire   [31:0] grp_fu_490_p2;
reg   [31:0] reg_540;
reg   [0:0] icmp_ln14_reg_1499_pp0_iter1_reg;
wire   [31:0] grp_fu_495_p2;
reg   [31:0] reg_546;
reg   [31:0] reg_551;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln14_reg_1499_pp0_iter2_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln14_reg_1499_pp0_iter3_reg;
reg   [31:0] reg_557;
wire   [9:0] add_ln8_fu_563_p2;
reg   [9:0] add_ln8_reg_1316;
wire    ap_CS_fsm_state2;
wire   [4:0] r_fu_575_p2;
reg   [4:0] r_reg_1324;
wire  signed [11:0] sext_ln26_fu_611_p1;
reg  signed [11:0] sext_ln26_reg_1329;
wire   [0:0] icmp_ln8_fu_569_p2;
wire  signed [11:0] sext_ln26_1_fu_645_p1;
reg  signed [11:0] sext_ln26_1_reg_1336;
wire  signed [11:0] sext_ln26_2_fu_685_p1;
reg  signed [11:0] sext_ln26_2_reg_1343;
wire   [0:0] icmp_ln11_fu_689_p2;
wire    ap_CS_fsm_state3;
wire   [4:0] c_fu_695_p2;
reg   [4:0] c_reg_1354;
reg   [11:0] conv_input_addr_reg_1359;
reg   [11:0] conv_input_addr_1_reg_1364;
reg   [11:0] conv_input_addr_2_reg_1369;
reg   [11:0] conv_input_addr_9_reg_1374;
reg   [11:0] conv_input_addr_10_reg_1379;
reg   [11:0] conv_input_addr_11_reg_1384;
reg   [11:0] conv_input_addr_18_reg_1389;
reg   [11:0] conv_input_addr_19_reg_1394;
reg   [11:0] conv_input_addr_20_reg_1399;
wire   [15:0] zext_ln26_18_fu_885_p1;
reg   [15:0] zext_ln26_18_reg_1404;
reg   [11:0] conv_input_addr_3_reg_1409;
reg   [11:0] conv_input_addr_4_reg_1414;
reg   [11:0] conv_input_addr_5_reg_1419;
reg   [11:0] conv_input_addr_12_reg_1424;
reg   [11:0] conv_input_addr_13_reg_1429;
reg   [11:0] conv_input_addr_14_reg_1434;
reg   [11:0] conv_input_addr_21_reg_1439;
reg   [11:0] conv_input_addr_22_reg_1444;
reg   [11:0] conv_input_addr_23_reg_1449;
reg   [11:0] conv_input_addr_6_reg_1454;
reg   [11:0] conv_input_addr_7_reg_1459;
reg   [11:0] conv_input_addr_8_reg_1464;
reg   [11:0] conv_input_addr_15_reg_1469;
reg   [11:0] conv_input_addr_16_reg_1474;
reg   [11:0] conv_input_addr_17_reg_1479;
reg   [11:0] conv_input_addr_24_reg_1484;
reg   [11:0] conv_input_addr_25_reg_1489;
reg   [11:0] conv_input_addr_26_reg_1494;
wire   [0:0] icmp_ln14_fu_1227_p2;
reg   [0:0] icmp_ln14_reg_1499_pp0_iter4_reg;
wire   [5:0] f_fu_1233_p2;
reg   [5:0] f_reg_1503;
wire   [63:0] zext_ln26_fu_1239_p1;
reg   [63:0] zext_ln26_reg_1508;
reg   [63:0] zext_ln26_reg_1508_pp0_iter1_reg;
reg   [63:0] zext_ln26_reg_1508_pp0_iter2_reg;
reg   [63:0] zext_ln26_reg_1508_pp0_iter3_reg;
wire   [15:0] add_ln35_1_fu_1256_p2;
reg   [15:0] add_ln35_1_reg_1513;
reg   [15:0] add_ln35_1_reg_1513_pp0_iter1_reg;
reg   [15:0] add_ln35_1_reg_1513_pp0_iter2_reg;
reg   [15:0] add_ln35_1_reg_1513_pp0_iter3_reg;
reg   [15:0] add_ln35_1_reg_1513_pp0_iter4_reg;
reg   [31:0] conv_1_weights_0_1_0_2_reg_1568;
reg   [31:0] conv_1_weights_0_2_0_2_reg_1573;
reg   [31:0] conv_1_weights_1_0_0_2_reg_1578;
reg   [31:0] conv_1_weights_1_1_0_2_reg_1583;
reg   [31:0] conv_1_weights_1_2_0_2_reg_1588;
reg   [31:0] conv_1_weights_2_0_0_2_reg_1593;
reg   [31:0] conv_1_weights_2_1_0_2_reg_1598;
reg   [31:0] conv_1_weights_2_2_0_2_reg_1603;
wire   [31:0] grp_fu_507_p2;
reg   [31:0] tmp_1_0_0_1_reg_1608;
reg   [31:0] tmp_1_0_1_reg_1613;
reg   [31:0] tmp_1_0_1_1_reg_1618;
reg   [31:0] tmp_1_0_1_2_reg_1623;
reg   [31:0] tmp_1_0_2_reg_1628;
reg   [31:0] tmp_1_0_2_1_reg_1633;
reg   [31:0] tmp_1_0_2_2_reg_1638;
reg   [31:0] tmp_1_1_reg_1643;
reg   [31:0] tmp_1_1_0_1_reg_1648;
reg   [31:0] tmp_1_1_0_1_reg_1648_pp0_iter1_reg;
reg   [31:0] tmp_1_1_0_2_reg_1653;
reg   [31:0] tmp_1_1_0_2_reg_1653_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_reg_1658;
reg   [31:0] tmp_1_1_1_reg_1658_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_1_reg_1663;
reg   [31:0] tmp_1_1_1_1_reg_1663_pp0_iter1_reg;
reg   [31:0] tmp_1_1_1_2_reg_1668;
reg   [31:0] tmp_1_1_1_2_reg_1668_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_reg_1673;
reg   [31:0] tmp_1_1_2_reg_1673_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_1_reg_1678;
reg   [31:0] tmp_1_1_2_1_reg_1678_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_2_reg_1683;
reg   [31:0] tmp_1_1_2_2_reg_1683_pp0_iter1_reg;
reg   [31:0] tmp_1_2_reg_1688;
reg   [31:0] tmp_1_2_reg_1688_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_1_reg_1693;
reg   [31:0] tmp_1_2_0_1_reg_1693_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_1_reg_1693_pp0_iter2_reg;
reg   [31:0] tmp_1_2_0_2_reg_1698;
reg   [31:0] tmp_1_2_0_2_reg_1698_pp0_iter1_reg;
reg   [31:0] tmp_1_2_0_2_reg_1698_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1703;
reg   [31:0] tmp_1_2_1_reg_1703_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_reg_1703_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_1_reg_1708;
reg   [31:0] tmp_1_2_1_1_reg_1708_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_1_reg_1708_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_2_reg_1713;
reg   [31:0] tmp_1_2_1_2_reg_1713_pp0_iter1_reg;
reg   [31:0] tmp_1_2_1_2_reg_1713_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1718;
reg   [31:0] tmp_1_2_2_reg_1718_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1718_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_1_reg_1723;
reg   [31:0] tmp_1_2_2_1_reg_1723_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_1_reg_1723_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_2_reg_1728;
reg   [31:0] tmp_1_2_2_2_reg_1728_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_2_reg_1728_pp0_iter3_reg;
reg   [31:0] w_sum_3_2_2_2_reg_1733;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage2_subdone;
reg   [4:0] r_0_reg_445;
reg   [9:0] phi_mul_reg_456;
reg   [4:0] c_0_reg_468;
wire    ap_CS_fsm_state63;
reg   [5:0] ap_phi_mux_f_0_phi_fu_483_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln26_9_fu_736_p1;
wire   [63:0] zext_ln26_10_fu_747_p1;
wire   [63:0] zext_ln26_11_fu_758_p1;
wire   [63:0] zext_ln26_12_fu_790_p1;
wire   [63:0] zext_ln26_13_fu_801_p1;
wire   [63:0] zext_ln26_14_fu_812_p1;
wire   [63:0] zext_ln26_15_fu_844_p1;
wire   [63:0] zext_ln26_16_fu_855_p1;
wire   [63:0] zext_ln26_17_fu_866_p1;
wire   [63:0] zext_ln26_20_fu_920_p1;
wire   [63:0] zext_ln26_21_fu_931_p1;
wire   [63:0] zext_ln26_22_fu_942_p1;
wire   [63:0] zext_ln26_23_fu_974_p1;
wire   [63:0] zext_ln26_24_fu_985_p1;
wire   [63:0] zext_ln26_25_fu_996_p1;
wire   [63:0] zext_ln26_26_fu_1028_p1;
wire   [63:0] zext_ln26_27_fu_1039_p1;
wire   [63:0] zext_ln26_28_fu_1050_p1;
wire   [63:0] zext_ln26_30_fu_1092_p1;
wire   [63:0] zext_ln26_31_fu_1103_p1;
wire   [63:0] zext_ln26_32_fu_1114_p1;
wire   [63:0] zext_ln26_33_fu_1146_p1;
wire   [63:0] zext_ln26_34_fu_1157_p1;
wire   [63:0] zext_ln26_35_fu_1168_p1;
wire   [63:0] zext_ln26_36_fu_1200_p1;
wire   [63:0] zext_ln26_37_fu_1211_p1;
wire   [63:0] zext_ln26_38_fu_1222_p1;
wire   [63:0] zext_ln35_1_fu_1261_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
reg   [31:0] grp_fu_490_p0;
reg   [31:0] grp_fu_490_p1;
reg   [31:0] grp_fu_495_p0;
reg   [31:0] grp_fu_495_p1;
reg   [31:0] grp_fu_500_p0;
reg   [31:0] grp_fu_500_p1;
reg   [31:0] grp_fu_507_p0;
reg   [31:0] grp_fu_507_p1;
wire   [9:0] tmp_5_fu_581_p3;
wire   [6:0] tmp_6_fu_593_p3;
wire   [10:0] zext_ln26_1_fu_589_p1;
wire   [10:0] zext_ln26_2_fu_601_p1;
wire   [10:0] sub_ln26_fu_605_p2;
wire   [9:0] tmp_7_fu_615_p3;
wire   [6:0] tmp_8_fu_627_p3;
wire   [10:0] zext_ln26_3_fu_623_p1;
wire   [10:0] zext_ln26_4_fu_635_p1;
wire   [10:0] sub_ln26_1_fu_639_p2;
wire   [4:0] add_ln26_2_fu_649_p2;
wire   [9:0] tmp_9_fu_655_p3;
wire   [6:0] tmp_10_fu_667_p3;
wire   [10:0] zext_ln26_5_fu_663_p1;
wire   [10:0] zext_ln26_6_fu_675_p1;
wire   [10:0] sub_ln26_2_fu_679_p2;
wire   [11:0] zext_ln26_8_fu_705_p1;
wire  signed [11:0] add_ln26_fu_709_p2;
wire   [10:0] trunc_ln26_fu_718_p1;
wire   [12:0] p_shl_cast_fu_722_p3;
wire  signed [12:0] sext_ln26_3_fu_714_p1;
wire   [12:0] sub_ln26_3_fu_730_p2;
wire   [12:0] add_ln26_3_fu_741_p2;
wire   [12:0] add_ln26_4_fu_752_p2;
wire  signed [11:0] add_ln26_5_fu_763_p2;
wire   [10:0] trunc_ln26_1_fu_772_p1;
wire   [12:0] p_shl1_cast_fu_776_p3;
wire  signed [12:0] sext_ln26_4_fu_768_p1;
wire   [12:0] sub_ln26_4_fu_784_p2;
wire   [12:0] add_ln26_6_fu_795_p2;
wire   [12:0] add_ln26_7_fu_806_p2;
wire  signed [11:0] add_ln26_8_fu_817_p2;
wire   [10:0] trunc_ln26_2_fu_826_p1;
wire   [12:0] p_shl2_cast_fu_830_p3;
wire  signed [12:0] sext_ln26_5_fu_822_p1;
wire   [12:0] sub_ln26_5_fu_838_p2;
wire   [12:0] add_ln26_9_fu_849_p2;
wire   [12:0] add_ln26_10_fu_860_p2;
wire   [9:0] zext_ln26_7_fu_701_p1;
wire   [9:0] add_ln35_fu_871_p2;
wire   [14:0] tmp_11_fu_877_p3;
wire   [11:0] zext_ln26_19_fu_889_p1;
wire  signed [11:0] add_ln26_12_fu_893_p2;
wire   [10:0] trunc_ln26_3_fu_902_p1;
wire   [12:0] p_shl3_cast_fu_906_p3;
wire  signed [12:0] sext_ln26_6_fu_898_p1;
wire   [12:0] sub_ln26_6_fu_914_p2;
wire   [12:0] add_ln26_13_fu_925_p2;
wire   [12:0] add_ln26_14_fu_936_p2;
wire  signed [11:0] add_ln26_15_fu_947_p2;
wire   [10:0] trunc_ln26_4_fu_956_p1;
wire   [12:0] p_shl4_cast_fu_960_p3;
wire  signed [12:0] sext_ln26_7_fu_952_p1;
wire   [12:0] sub_ln26_7_fu_968_p2;
wire   [12:0] add_ln26_16_fu_979_p2;
wire   [12:0] add_ln26_17_fu_990_p2;
wire  signed [11:0] add_ln26_18_fu_1001_p2;
wire   [10:0] trunc_ln26_5_fu_1010_p1;
wire   [12:0] p_shl9_cast_fu_1014_p3;
wire  signed [12:0] sext_ln26_8_fu_1006_p1;
wire   [12:0] sub_ln26_8_fu_1022_p2;
wire   [12:0] add_ln26_19_fu_1033_p2;
wire   [12:0] add_ln26_20_fu_1044_p2;
wire   [4:0] add_ln26_1_fu_1055_p2;
wire   [11:0] zext_ln26_29_fu_1061_p1;
wire  signed [11:0] add_ln26_21_fu_1065_p2;
wire   [10:0] trunc_ln26_6_fu_1074_p1;
wire   [12:0] p_shl8_cast_fu_1078_p3;
wire  signed [12:0] sext_ln26_9_fu_1070_p1;
wire   [12:0] sub_ln26_9_fu_1086_p2;
wire   [12:0] add_ln26_22_fu_1097_p2;
wire   [12:0] add_ln26_23_fu_1108_p2;
wire  signed [11:0] add_ln26_24_fu_1119_p2;
wire   [10:0] trunc_ln26_7_fu_1128_p1;
wire   [12:0] p_shl7_cast_fu_1132_p3;
wire  signed [12:0] sext_ln26_10_fu_1124_p1;
wire   [12:0] sub_ln26_10_fu_1140_p2;
wire   [12:0] add_ln26_25_fu_1151_p2;
wire   [12:0] add_ln26_26_fu_1162_p2;
wire  signed [11:0] add_ln26_27_fu_1173_p2;
wire   [10:0] trunc_ln26_8_fu_1182_p1;
wire   [12:0] p_shl6_cast_fu_1186_p3;
wire  signed [12:0] sext_ln26_11_fu_1178_p1;
wire   [12:0] sub_ln26_11_fu_1194_p2;
wire   [12:0] add_ln26_28_fu_1205_p2;
wire   [12:0] add_ln26_29_fu_1216_p2;
wire   [15:0] zext_ln35_fu_1252_p1;
wire   [31:0] bitcast_ln34_fu_1265_p1;
wire   [7:0] tmp_fu_1269_p4;
wire   [22:0] trunc_ln34_fu_1279_p1;
wire   [0:0] icmp_ln34_1_fu_1289_p2;
wire   [0:0] icmp_ln34_fu_1283_p2;
wire   [0:0] or_ln34_fu_1295_p2;
wire   [0:0] tmp_4_fu_516_p2;
wire   [0:0] and_ln34_fu_1301_p2;
wire    ap_block_pp0_stage2_00001;
reg   [17:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_0_address0),
    .ce0(conv_1_weights_0_0_0_ce0),
    .q0(conv_1_weights_0_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_0_address0),
    .ce0(conv_1_weights_0_1_0_ce0),
    .q0(conv_1_weights_0_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_0_address0),
    .ce0(conv_1_weights_0_2_0_ce0),
    .q0(conv_1_weights_0_2_0_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_0_address0),
    .ce0(conv_1_weights_1_0_0_ce0),
    .q0(conv_1_weights_1_0_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_0_address0),
    .ce0(conv_1_weights_1_1_0_ce0),
    .q0(conv_1_weights_1_1_0_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_0_address0),
    .ce0(conv_1_weights_1_2_0_ce0),
    .q0(conv_1_weights_1_2_0_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_0_address0),
    .ce0(conv_1_weights_2_0_0_ce0),
    .q0(conv_1_weights_2_0_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_0_address0),
    .ce0(conv_1_weights_2_1_0_ce0),
    .q0(conv_1_weights_2_1_0_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_0_address0),
    .ce0(conv_1_weights_2_2_0_ce0),
    .q0(conv_1_weights_2_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_490_p0),
    .din1(grp_fu_490_p1),
    .ce(1'b1),
    .dout(grp_fu_490_p2)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_495_p0),
    .din1(grp_fu_495_p1),
    .ce(1'b1),
    .dout(grp_fu_495_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_500_p0),
    .din1(grp_fu_500_p1),
    .ce(1'b1),
    .dout(grp_fu_500_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_507_p0),
    .din1(grp_fu_507_p1),
    .ce(1'b1),
    .dout(grp_fu_507_p2)
);

conv_1_fcmp_32ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_mb6_U5(
    .din0(grp_fu_495_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_4_fu_516_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_689_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage13_subdone) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_689_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        c_0_reg_468 <= c_reg_1354;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_569_p2 == 1'd0))) begin
        c_0_reg_468 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_1499 == 1'd0))) begin
        f_0_reg_479 <= f_reg_1503;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_689_p2 == 1'd0))) begin
        f_0_reg_479 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_mul_reg_456 <= add_ln8_reg_1316;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_456 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln11_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        r_0_reg_445 <= r_reg_1324;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_445 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_fu_1227_p2 == 1'd0))) begin
        add_ln35_1_reg_1513 <= add_ln35_1_fu_1256_p2;
        zext_ln26_reg_1508[5 : 0] <= zext_ln26_fu_1239_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln35_1_reg_1513_pp0_iter1_reg <= add_ln35_1_reg_1513;
        add_ln35_1_reg_1513_pp0_iter2_reg <= add_ln35_1_reg_1513_pp0_iter1_reg;
        add_ln35_1_reg_1513_pp0_iter3_reg <= add_ln35_1_reg_1513_pp0_iter2_reg;
        add_ln35_1_reg_1513_pp0_iter4_reg <= add_ln35_1_reg_1513_pp0_iter3_reg;
        icmp_ln14_reg_1499 <= icmp_ln14_fu_1227_p2;
        icmp_ln14_reg_1499_pp0_iter1_reg <= icmp_ln14_reg_1499;
        icmp_ln14_reg_1499_pp0_iter2_reg <= icmp_ln14_reg_1499_pp0_iter1_reg;
        icmp_ln14_reg_1499_pp0_iter3_reg <= icmp_ln14_reg_1499_pp0_iter2_reg;
        icmp_ln14_reg_1499_pp0_iter4_reg <= icmp_ln14_reg_1499_pp0_iter3_reg;
        tmp_1_2_2_1_reg_1723_pp0_iter2_reg <= tmp_1_2_2_1_reg_1723;
        tmp_1_2_2_1_reg_1723_pp0_iter3_reg <= tmp_1_2_2_1_reg_1723_pp0_iter2_reg;
        tmp_1_2_2_reg_1718_pp0_iter2_reg <= tmp_1_2_2_reg_1718;
        tmp_1_2_2_reg_1718_pp0_iter3_reg <= tmp_1_2_2_reg_1718_pp0_iter2_reg;
        zext_ln26_reg_1508_pp0_iter1_reg[5 : 0] <= zext_ln26_reg_1508[5 : 0];
        zext_ln26_reg_1508_pp0_iter2_reg[5 : 0] <= zext_ln26_reg_1508_pp0_iter1_reg[5 : 0];
        zext_ln26_reg_1508_pp0_iter3_reg[5 : 0] <= zext_ln26_reg_1508_pp0_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_1316 <= add_ln8_fu_563_p2;
        r_reg_1324 <= r_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c_reg_1354 <= c_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln14_reg_1499 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_0_1_0_2_reg_1568 <= conv_1_weights_0_1_0_q0;
        conv_1_weights_0_2_0_2_reg_1573 <= conv_1_weights_0_2_0_q0;
        conv_1_weights_1_0_0_2_reg_1578 <= conv_1_weights_1_0_0_q0;
        conv_1_weights_1_1_0_2_reg_1583 <= conv_1_weights_1_1_0_q0;
        conv_1_weights_1_2_0_2_reg_1588 <= conv_1_weights_1_2_0_q0;
        conv_1_weights_2_0_0_2_reg_1593 <= conv_1_weights_2_0_0_q0;
        conv_1_weights_2_1_0_2_reg_1598 <= conv_1_weights_2_1_0_q0;
        conv_1_weights_2_2_0_2_reg_1603 <= conv_1_weights_2_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln11_fu_689_p2 == 1'd0))) begin
        conv_input_addr_10_reg_1379 <= zext_ln26_13_fu_801_p1;
        conv_input_addr_11_reg_1384 <= zext_ln26_14_fu_812_p1;
        conv_input_addr_12_reg_1424 <= zext_ln26_23_fu_974_p1;
        conv_input_addr_13_reg_1429 <= zext_ln26_24_fu_985_p1;
        conv_input_addr_14_reg_1434 <= zext_ln26_25_fu_996_p1;
        conv_input_addr_15_reg_1469 <= zext_ln26_33_fu_1146_p1;
        conv_input_addr_16_reg_1474 <= zext_ln26_34_fu_1157_p1;
        conv_input_addr_17_reg_1479 <= zext_ln26_35_fu_1168_p1;
        conv_input_addr_18_reg_1389 <= zext_ln26_15_fu_844_p1;
        conv_input_addr_19_reg_1394 <= zext_ln26_16_fu_855_p1;
        conv_input_addr_1_reg_1364 <= zext_ln26_10_fu_747_p1;
        conv_input_addr_20_reg_1399 <= zext_ln26_17_fu_866_p1;
        conv_input_addr_21_reg_1439 <= zext_ln26_26_fu_1028_p1;
        conv_input_addr_22_reg_1444 <= zext_ln26_27_fu_1039_p1;
        conv_input_addr_23_reg_1449 <= zext_ln26_28_fu_1050_p1;
        conv_input_addr_24_reg_1484 <= zext_ln26_36_fu_1200_p1;
        conv_input_addr_25_reg_1489 <= zext_ln26_37_fu_1211_p1;
        conv_input_addr_26_reg_1494 <= zext_ln26_38_fu_1222_p1;
        conv_input_addr_2_reg_1369 <= zext_ln26_11_fu_758_p1;
        conv_input_addr_3_reg_1409 <= zext_ln26_20_fu_920_p1;
        conv_input_addr_4_reg_1414 <= zext_ln26_21_fu_931_p1;
        conv_input_addr_5_reg_1419 <= zext_ln26_22_fu_942_p1;
        conv_input_addr_6_reg_1454 <= zext_ln26_30_fu_1092_p1;
        conv_input_addr_7_reg_1459 <= zext_ln26_31_fu_1103_p1;
        conv_input_addr_8_reg_1464 <= zext_ln26_32_fu_1114_p1;
        conv_input_addr_9_reg_1374 <= zext_ln26_12_fu_790_p1;
        conv_input_addr_reg_1359 <= zext_ln26_9_fu_736_p1;
        zext_ln26_18_reg_1404[14 : 5] <= zext_ln26_18_fu_885_p1[14 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        f_reg_1503 <= f_fu_1233_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln14_reg_1499 == 1'd0)))) begin
        reg_534 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln14_reg_1499 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_540 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0)))) begin
        reg_546 <= grp_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_551 <= grp_fu_495_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln14_reg_1499_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0)))) begin
        reg_557 <= grp_fu_490_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln8_fu_569_p2 == 1'd0))) begin
        sext_ln26_1_reg_1336[11 : 2] <= sext_ln26_1_fu_645_p1[11 : 2];
        sext_ln26_2_reg_1343[11 : 2] <= sext_ln26_2_fu_685_p1[11 : 2];
        sext_ln26_reg_1329[11 : 2] <= sext_ln26_fu_611_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_0_0_1_reg_1608 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_0_1_1_reg_1618 <= grp_fu_500_p2;
        tmp_1_0_1_2_reg_1623 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_0_1_reg_1613 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_0_2_1_reg_1633 <= grp_fu_507_p2;
        tmp_1_0_2_reg_1628 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_0_2_2_reg_1638 <= grp_fu_500_p2;
        tmp_1_1_reg_1643 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_1_0_1_reg_1648 <= grp_fu_500_p2;
        tmp_1_1_0_2_reg_1653 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_1_1_0_1_reg_1648_pp0_iter1_reg <= tmp_1_1_0_1_reg_1648;
        tmp_1_1_0_2_reg_1653_pp0_iter1_reg <= tmp_1_1_0_2_reg_1653;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_1_1_1_reg_1663 <= grp_fu_507_p2;
        tmp_1_1_1_reg_1658 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        tmp_1_1_1_1_reg_1663_pp0_iter1_reg <= tmp_1_1_1_1_reg_1663;
        tmp_1_1_1_reg_1658_pp0_iter1_reg <= tmp_1_1_1_reg_1658;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_1_1_2_reg_1668 <= grp_fu_500_p2;
        tmp_1_1_2_reg_1673 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        tmp_1_1_1_2_reg_1668_pp0_iter1_reg <= tmp_1_1_1_2_reg_1668;
        tmp_1_1_2_reg_1673_pp0_iter1_reg <= tmp_1_1_2_reg_1673;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_1_2_1_reg_1678 <= grp_fu_500_p2;
        tmp_1_1_2_2_reg_1683 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        tmp_1_1_2_1_reg_1678_pp0_iter1_reg <= tmp_1_1_2_1_reg_1678;
        tmp_1_1_2_2_reg_1683_pp0_iter1_reg <= tmp_1_1_2_2_reg_1683;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_2_0_1_reg_1693 <= grp_fu_507_p2;
        tmp_1_2_reg_1688 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        tmp_1_2_0_1_reg_1693_pp0_iter1_reg <= tmp_1_2_0_1_reg_1693;
        tmp_1_2_0_1_reg_1693_pp0_iter2_reg <= tmp_1_2_0_1_reg_1693_pp0_iter1_reg;
        tmp_1_2_reg_1688_pp0_iter1_reg <= tmp_1_2_reg_1688;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_2_0_2_reg_1698 <= grp_fu_500_p2;
        tmp_1_2_1_reg_1703 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        tmp_1_2_0_2_reg_1698_pp0_iter1_reg <= tmp_1_2_0_2_reg_1698;
        tmp_1_2_0_2_reg_1698_pp0_iter2_reg <= tmp_1_2_0_2_reg_1698_pp0_iter1_reg;
        tmp_1_2_1_reg_1703_pp0_iter1_reg <= tmp_1_2_1_reg_1703;
        tmp_1_2_1_reg_1703_pp0_iter2_reg <= tmp_1_2_1_reg_1703_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_2_1_1_reg_1708 <= grp_fu_500_p2;
        tmp_1_2_1_2_reg_1713 <= grp_fu_507_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        tmp_1_2_1_1_reg_1708_pp0_iter1_reg <= tmp_1_2_1_1_reg_1708;
        tmp_1_2_1_1_reg_1708_pp0_iter2_reg <= tmp_1_2_1_1_reg_1708_pp0_iter1_reg;
        tmp_1_2_1_2_reg_1713_pp0_iter1_reg <= tmp_1_2_1_2_reg_1713;
        tmp_1_2_1_2_reg_1713_pp0_iter2_reg <= tmp_1_2_1_2_reg_1713_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_1499 == 1'd0))) begin
        tmp_1_2_2_1_reg_1723 <= grp_fu_507_p2;
        tmp_1_2_2_reg_1718 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln14_reg_1499_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_2_reg_1728 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_2_reg_1728_pp0_iter2_reg <= tmp_1_2_2_2_reg_1728;
        tmp_1_2_2_2_reg_1728_pp0_iter3_reg <= tmp_1_2_2_2_reg_1728_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_1499_pp0_iter3_reg == 1'd0))) begin
        w_sum_3_2_2_2_reg_1733 <= grp_fu_495_p2;
    end
end

always @ (*) begin
    if ((icmp_ln14_fu_1227_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln14_reg_1499 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_483_p4 = f_reg_1503;
    end else begin
        ap_phi_mux_f_0_phi_fu_483_p4 = f_0_reg_479;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            conv_input_address0 = conv_input_addr_26_reg_1494;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv_input_address0 = conv_input_addr_24_reg_1484;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv_input_address0 = conv_input_addr_22_reg_1444;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv_input_address0 = conv_input_addr_20_reg_1399;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_input_address0 = conv_input_addr_18_reg_1389;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_input_address0 = conv_input_addr_16_reg_1474;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_input_address0 = conv_input_addr_14_reg_1434;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_input_address0 = conv_input_addr_12_reg_1424;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_input_address0 = conv_input_addr_10_reg_1379;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address0 = conv_input_addr_8_reg_1464;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address0 = conv_input_addr_6_reg_1454;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address0 = conv_input_addr_4_reg_1414;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address0 = conv_input_addr_2_reg_1369;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address0 = conv_input_addr_reg_1359;
        end else begin
            conv_input_address0 = 'bx;
        end
    end else begin
        conv_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            conv_input_address1 = conv_input_addr_25_reg_1489;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            conv_input_address1 = conv_input_addr_23_reg_1449;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            conv_input_address1 = conv_input_addr_21_reg_1439;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            conv_input_address1 = conv_input_addr_19_reg_1394;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv_input_address1 = conv_input_addr_17_reg_1479;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv_input_address1 = conv_input_addr_15_reg_1469;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv_input_address1 = conv_input_addr_13_reg_1429;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv_input_address1 = conv_input_addr_11_reg_1384;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address1 = conv_input_addr_9_reg_1374;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address1 = conv_input_addr_7_reg_1459;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address1 = conv_input_addr_5_reg_1419;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address1 = conv_input_addr_3_reg_1409;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address1 = conv_input_addr_1_reg_1364;
        end else begin
            conv_input_address1 = 'bx;
        end
    end else begin
        conv_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce0 = 1'b1;
    end else begin
        conv_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce1 = 1'b1;
    end else begin
        conv_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln14_reg_1499_pp0_iter4_reg == 1'd0))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_490_p0 = reg_557;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_490_p0 = reg_551;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_490_p0 = reg_540;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p0 = grp_fu_500_p2;
    end else begin
        grp_fu_490_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_490_p1 = tmp_1_2_0_2_reg_1698_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_490_p1 = tmp_1_2_0_1_reg_1693_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_490_p1 = tmp_1_2_reg_1688_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_490_p1 = tmp_1_1_2_2_reg_1683_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_490_p1 = tmp_1_1_2_1_reg_1678_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_490_p1 = tmp_1_1_2_reg_1673_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_490_p1 = tmp_1_1_1_2_reg_1668_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_490_p1 = tmp_1_0_2_reg_1628;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = tmp_1_0_1_2_reg_1623;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = tmp_1_0_1_1_reg_1618;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = tmp_1_0_1_reg_1613;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = reg_534;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = tmp_1_0_0_1_reg_1608;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_490_p1 = 32'd0;
    end else begin
        grp_fu_490_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_495_p0 = w_sum_3_2_2_2_reg_1733;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_495_p0 = reg_551;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_495_p0 = reg_557;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_495_p0 = reg_546;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_495_p0 = reg_540;
    end else begin
        grp_fu_495_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_495_p1 = conv_1_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        grp_fu_495_p1 = tmp_1_2_2_2_reg_1728_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        grp_fu_495_p1 = tmp_1_2_2_1_reg_1723_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_495_p1 = tmp_1_2_2_reg_1718_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_495_p1 = tmp_1_2_1_2_reg_1713_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_495_p1 = tmp_1_2_1_1_reg_1708_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_495_p1 = tmp_1_2_1_reg_1703_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_495_p1 = tmp_1_1_1_1_reg_1663_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        grp_fu_495_p1 = tmp_1_1_1_reg_1658_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_495_p1 = tmp_1_1_0_2_reg_1653_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_495_p1 = tmp_1_1_0_1_reg_1648_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_495_p1 = tmp_1_1_reg_1643;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_495_p1 = tmp_1_0_2_2_reg_1638;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_495_p1 = tmp_1_0_2_1_reg_1633;
    end else begin
        grp_fu_495_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_500_p0 = conv_1_weights_2_2_0_2_reg_1603;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_500_p0 = conv_1_weights_2_0_0_2_reg_1593;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_500_p0 = conv_1_weights_1_1_0_2_reg_1583;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_500_p0 = conv_1_weights_0_2_0_2_reg_1573;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_500_p0 = conv_input_q0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_500_p0 = conv_1_weights_0_0_0_q0;
    end else begin
        grp_fu_500_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_500_p1 = 32'd0;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_500_p1 = conv_input_q0;
    end else begin
        grp_fu_500_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_507_p0 = conv_1_weights_2_1_0_2_reg_1598;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_507_p0 = conv_1_weights_1_2_0_2_reg_1588;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_507_p0 = conv_1_weights_1_0_0_2_reg_1578;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_507_p0 = conv_1_weights_0_1_0_2_reg_1568;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_507_p0 = conv_input_q1;
    end else begin
        grp_fu_507_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_507_p1 = conv_input_q1;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_507_p1 = 32'd0;
    end else begin
        grp_fu_507_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_569_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln11_fu_689_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln14_fu_1227_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln14_fu_1227_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln26_10_fu_860_p2 = (13'd2 + sub_ln26_5_fu_838_p2);

assign add_ln26_12_fu_893_p2 = ($signed(sext_ln26_reg_1329) + $signed(zext_ln26_19_fu_889_p1));

assign add_ln26_13_fu_925_p2 = (13'd1 + sub_ln26_6_fu_914_p2);

assign add_ln26_14_fu_936_p2 = (13'd2 + sub_ln26_6_fu_914_p2);

assign add_ln26_15_fu_947_p2 = ($signed(sext_ln26_1_reg_1336) + $signed(zext_ln26_19_fu_889_p1));

assign add_ln26_16_fu_979_p2 = (13'd1 + sub_ln26_7_fu_968_p2);

assign add_ln26_17_fu_990_p2 = (13'd2 + sub_ln26_7_fu_968_p2);

assign add_ln26_18_fu_1001_p2 = ($signed(sext_ln26_2_reg_1343) + $signed(zext_ln26_19_fu_889_p1));

assign add_ln26_19_fu_1033_p2 = (13'd1 + sub_ln26_8_fu_1022_p2);

assign add_ln26_1_fu_1055_p2 = (5'd2 + c_0_reg_468);

assign add_ln26_20_fu_1044_p2 = (13'd2 + sub_ln26_8_fu_1022_p2);

assign add_ln26_21_fu_1065_p2 = ($signed(sext_ln26_reg_1329) + $signed(zext_ln26_29_fu_1061_p1));

assign add_ln26_22_fu_1097_p2 = (13'd1 + sub_ln26_9_fu_1086_p2);

assign add_ln26_23_fu_1108_p2 = (13'd2 + sub_ln26_9_fu_1086_p2);

assign add_ln26_24_fu_1119_p2 = ($signed(sext_ln26_1_reg_1336) + $signed(zext_ln26_29_fu_1061_p1));

assign add_ln26_25_fu_1151_p2 = (13'd1 + sub_ln26_10_fu_1140_p2);

assign add_ln26_26_fu_1162_p2 = (13'd2 + sub_ln26_10_fu_1140_p2);

assign add_ln26_27_fu_1173_p2 = ($signed(sext_ln26_2_reg_1343) + $signed(zext_ln26_29_fu_1061_p1));

assign add_ln26_28_fu_1205_p2 = (13'd1 + sub_ln26_11_fu_1194_p2);

assign add_ln26_29_fu_1216_p2 = (13'd2 + sub_ln26_11_fu_1194_p2);

assign add_ln26_2_fu_649_p2 = (r_0_reg_445 + 5'd2);

assign add_ln26_3_fu_741_p2 = (13'd1 + sub_ln26_3_fu_730_p2);

assign add_ln26_4_fu_752_p2 = (13'd2 + sub_ln26_3_fu_730_p2);

assign add_ln26_5_fu_763_p2 = ($signed(sext_ln26_1_reg_1336) + $signed(zext_ln26_8_fu_705_p1));

assign add_ln26_6_fu_795_p2 = (13'd1 + sub_ln26_4_fu_784_p2);

assign add_ln26_7_fu_806_p2 = (13'd2 + sub_ln26_4_fu_784_p2);

assign add_ln26_8_fu_817_p2 = ($signed(sext_ln26_2_reg_1343) + $signed(zext_ln26_8_fu_705_p1));

assign add_ln26_9_fu_849_p2 = (13'd1 + sub_ln26_5_fu_838_p2);

assign add_ln26_fu_709_p2 = ($signed(sext_ln26_reg_1329) + $signed(zext_ln26_8_fu_705_p1));

assign add_ln35_1_fu_1256_p2 = (zext_ln26_18_reg_1404 + zext_ln35_fu_1252_p1);

assign add_ln35_fu_871_p2 = (phi_mul_reg_456 + zext_ln26_7_fu_701_p1);

assign add_ln8_fu_563_p2 = (phi_mul_reg_456 + 10'd26);

assign and_ln34_fu_1301_p2 = (tmp_4_fu_516_p2 & or_ln34_fu_1295_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_1265_p1 = grp_fu_495_p2;

assign c_fu_695_p2 = (c_0_reg_468 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_reg_1508_pp0_iter3_reg;

assign conv_1_weights_0_0_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_0_1_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_0_2_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_1_0_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_1_1_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_1_2_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_2_0_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_2_1_0_address0 = zext_ln26_fu_1239_p1;

assign conv_1_weights_2_2_0_address0 = zext_ln26_fu_1239_p1;

assign conv_out_address0 = zext_ln35_1_fu_1261_p1;

assign conv_out_d0 = ((and_ln34_fu_1301_p2[0:0] === 1'b1) ? grp_fu_495_p2 : 32'd0);

assign f_fu_1233_p2 = (ap_phi_mux_f_0_phi_fu_483_p4 + 6'd1);

assign icmp_ln11_fu_689_p2 = ((c_0_reg_468 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1227_p2 = ((ap_phi_mux_f_0_phi_fu_483_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1289_p2 = ((trunc_ln34_fu_1279_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1283_p2 = ((tmp_fu_1269_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_569_p2 = ((r_0_reg_445 == 5'd26) ? 1'b1 : 1'b0);

assign or_ln34_fu_1295_p2 = (icmp_ln34_fu_1283_p2 | icmp_ln34_1_fu_1289_p2);

assign p_shl1_cast_fu_776_p3 = {{trunc_ln26_1_fu_772_p1}, {2'd0}};

assign p_shl2_cast_fu_830_p3 = {{trunc_ln26_2_fu_826_p1}, {2'd0}};

assign p_shl3_cast_fu_906_p3 = {{trunc_ln26_3_fu_902_p1}, {2'd0}};

assign p_shl4_cast_fu_960_p3 = {{trunc_ln26_4_fu_956_p1}, {2'd0}};

assign p_shl6_cast_fu_1186_p3 = {{trunc_ln26_8_fu_1182_p1}, {2'd0}};

assign p_shl7_cast_fu_1132_p3 = {{trunc_ln26_7_fu_1128_p1}, {2'd0}};

assign p_shl8_cast_fu_1078_p3 = {{trunc_ln26_6_fu_1074_p1}, {2'd0}};

assign p_shl9_cast_fu_1014_p3 = {{trunc_ln26_5_fu_1010_p1}, {2'd0}};

assign p_shl_cast_fu_722_p3 = {{trunc_ln26_fu_718_p1}, {2'd0}};

assign r_fu_575_p2 = (r_0_reg_445 + 5'd1);

assign sext_ln26_10_fu_1124_p1 = add_ln26_24_fu_1119_p2;

assign sext_ln26_11_fu_1178_p1 = add_ln26_27_fu_1173_p2;

assign sext_ln26_1_fu_645_p1 = $signed(sub_ln26_1_fu_639_p2);

assign sext_ln26_2_fu_685_p1 = $signed(sub_ln26_2_fu_679_p2);

assign sext_ln26_3_fu_714_p1 = add_ln26_fu_709_p2;

assign sext_ln26_4_fu_768_p1 = add_ln26_5_fu_763_p2;

assign sext_ln26_5_fu_822_p1 = add_ln26_8_fu_817_p2;

assign sext_ln26_6_fu_898_p1 = add_ln26_12_fu_893_p2;

assign sext_ln26_7_fu_952_p1 = add_ln26_15_fu_947_p2;

assign sext_ln26_8_fu_1006_p1 = add_ln26_18_fu_1001_p2;

assign sext_ln26_9_fu_1070_p1 = add_ln26_21_fu_1065_p2;

assign sext_ln26_fu_611_p1 = $signed(sub_ln26_fu_605_p2);

assign sub_ln26_10_fu_1140_p2 = ($signed(p_shl7_cast_fu_1132_p3) - $signed(sext_ln26_10_fu_1124_p1));

assign sub_ln26_11_fu_1194_p2 = ($signed(p_shl6_cast_fu_1186_p3) - $signed(sext_ln26_11_fu_1178_p1));

assign sub_ln26_1_fu_639_p2 = (zext_ln26_3_fu_623_p1 - zext_ln26_4_fu_635_p1);

assign sub_ln26_2_fu_679_p2 = (zext_ln26_5_fu_663_p1 - zext_ln26_6_fu_675_p1);

assign sub_ln26_3_fu_730_p2 = ($signed(p_shl_cast_fu_722_p3) - $signed(sext_ln26_3_fu_714_p1));

assign sub_ln26_4_fu_784_p2 = ($signed(p_shl1_cast_fu_776_p3) - $signed(sext_ln26_4_fu_768_p1));

assign sub_ln26_5_fu_838_p2 = ($signed(p_shl2_cast_fu_830_p3) - $signed(sext_ln26_5_fu_822_p1));

assign sub_ln26_6_fu_914_p2 = ($signed(p_shl3_cast_fu_906_p3) - $signed(sext_ln26_6_fu_898_p1));

assign sub_ln26_7_fu_968_p2 = ($signed(p_shl4_cast_fu_960_p3) - $signed(sext_ln26_7_fu_952_p1));

assign sub_ln26_8_fu_1022_p2 = ($signed(p_shl9_cast_fu_1014_p3) - $signed(sext_ln26_8_fu_1006_p1));

assign sub_ln26_9_fu_1086_p2 = ($signed(p_shl8_cast_fu_1078_p3) - $signed(sext_ln26_9_fu_1070_p1));

assign sub_ln26_fu_605_p2 = (zext_ln26_1_fu_589_p1 - zext_ln26_2_fu_601_p1);

assign tmp_10_fu_667_p3 = {{add_ln26_2_fu_649_p2}, {2'd0}};

assign tmp_11_fu_877_p3 = {{add_ln35_fu_871_p2}, {5'd0}};

assign tmp_5_fu_581_p3 = {{r_0_reg_445}, {5'd0}};

assign tmp_6_fu_593_p3 = {{r_0_reg_445}, {2'd0}};

assign tmp_7_fu_615_p3 = {{r_fu_575_p2}, {5'd0}};

assign tmp_8_fu_627_p3 = {{r_fu_575_p2}, {2'd0}};

assign tmp_9_fu_655_p3 = {{add_ln26_2_fu_649_p2}, {5'd0}};

assign tmp_fu_1269_p4 = {{bitcast_ln34_fu_1265_p1[30:23]}};

assign trunc_ln26_1_fu_772_p1 = add_ln26_5_fu_763_p2[10:0];

assign trunc_ln26_2_fu_826_p1 = add_ln26_8_fu_817_p2[10:0];

assign trunc_ln26_3_fu_902_p1 = add_ln26_12_fu_893_p2[10:0];

assign trunc_ln26_4_fu_956_p1 = add_ln26_15_fu_947_p2[10:0];

assign trunc_ln26_5_fu_1010_p1 = add_ln26_18_fu_1001_p2[10:0];

assign trunc_ln26_6_fu_1074_p1 = add_ln26_21_fu_1065_p2[10:0];

assign trunc_ln26_7_fu_1128_p1 = add_ln26_24_fu_1119_p2[10:0];

assign trunc_ln26_8_fu_1182_p1 = add_ln26_27_fu_1173_p2[10:0];

assign trunc_ln26_fu_718_p1 = add_ln26_fu_709_p2[10:0];

assign trunc_ln34_fu_1279_p1 = bitcast_ln34_fu_1265_p1[22:0];

assign zext_ln26_10_fu_747_p1 = add_ln26_3_fu_741_p2;

assign zext_ln26_11_fu_758_p1 = add_ln26_4_fu_752_p2;

assign zext_ln26_12_fu_790_p1 = sub_ln26_4_fu_784_p2;

assign zext_ln26_13_fu_801_p1 = add_ln26_6_fu_795_p2;

assign zext_ln26_14_fu_812_p1 = add_ln26_7_fu_806_p2;

assign zext_ln26_15_fu_844_p1 = sub_ln26_5_fu_838_p2;

assign zext_ln26_16_fu_855_p1 = add_ln26_9_fu_849_p2;

assign zext_ln26_17_fu_866_p1 = add_ln26_10_fu_860_p2;

assign zext_ln26_18_fu_885_p1 = tmp_11_fu_877_p3;

assign zext_ln26_19_fu_889_p1 = c_fu_695_p2;

assign zext_ln26_1_fu_589_p1 = tmp_5_fu_581_p3;

assign zext_ln26_20_fu_920_p1 = sub_ln26_6_fu_914_p2;

assign zext_ln26_21_fu_931_p1 = add_ln26_13_fu_925_p2;

assign zext_ln26_22_fu_942_p1 = add_ln26_14_fu_936_p2;

assign zext_ln26_23_fu_974_p1 = sub_ln26_7_fu_968_p2;

assign zext_ln26_24_fu_985_p1 = add_ln26_16_fu_979_p2;

assign zext_ln26_25_fu_996_p1 = add_ln26_17_fu_990_p2;

assign zext_ln26_26_fu_1028_p1 = sub_ln26_8_fu_1022_p2;

assign zext_ln26_27_fu_1039_p1 = add_ln26_19_fu_1033_p2;

assign zext_ln26_28_fu_1050_p1 = add_ln26_20_fu_1044_p2;

assign zext_ln26_29_fu_1061_p1 = add_ln26_1_fu_1055_p2;

assign zext_ln26_2_fu_601_p1 = tmp_6_fu_593_p3;

assign zext_ln26_30_fu_1092_p1 = sub_ln26_9_fu_1086_p2;

assign zext_ln26_31_fu_1103_p1 = add_ln26_22_fu_1097_p2;

assign zext_ln26_32_fu_1114_p1 = add_ln26_23_fu_1108_p2;

assign zext_ln26_33_fu_1146_p1 = sub_ln26_10_fu_1140_p2;

assign zext_ln26_34_fu_1157_p1 = add_ln26_25_fu_1151_p2;

assign zext_ln26_35_fu_1168_p1 = add_ln26_26_fu_1162_p2;

assign zext_ln26_36_fu_1200_p1 = sub_ln26_11_fu_1194_p2;

assign zext_ln26_37_fu_1211_p1 = add_ln26_28_fu_1205_p2;

assign zext_ln26_38_fu_1222_p1 = add_ln26_29_fu_1216_p2;

assign zext_ln26_3_fu_623_p1 = tmp_7_fu_615_p3;

assign zext_ln26_4_fu_635_p1 = tmp_8_fu_627_p3;

assign zext_ln26_5_fu_663_p1 = tmp_9_fu_655_p3;

assign zext_ln26_6_fu_675_p1 = tmp_10_fu_667_p3;

assign zext_ln26_7_fu_701_p1 = c_0_reg_468;

assign zext_ln26_8_fu_705_p1 = c_0_reg_468;

assign zext_ln26_9_fu_736_p1 = sub_ln26_3_fu_730_p2;

assign zext_ln26_fu_1239_p1 = ap_phi_mux_f_0_phi_fu_483_p4;

assign zext_ln35_1_fu_1261_p1 = add_ln35_1_reg_1513_pp0_iter4_reg;

assign zext_ln35_fu_1252_p1 = ap_phi_mux_f_0_phi_fu_483_p4;

always @ (posedge ap_clk) begin
    sext_ln26_reg_1329[1:0] <= 2'b00;
    sext_ln26_1_reg_1336[1:0] <= 2'b00;
    sext_ln26_2_reg_1343[1:0] <= 2'b00;
    zext_ln26_18_reg_1404[4:0] <= 5'b00000;
    zext_ln26_18_reg_1404[15] <= 1'b0;
    zext_ln26_reg_1508[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1508_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1508_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1508_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //conv_1
