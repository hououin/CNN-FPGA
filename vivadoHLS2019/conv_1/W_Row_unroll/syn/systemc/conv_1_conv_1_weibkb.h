// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_1_conv_1_weibkb_H__
#define __conv_1_conv_1_weibkb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_1_conv_1_weibkb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 288;
  static const unsigned AddressWidth = 9;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_1_conv_1_weibkb_ram) {
        ram[0] = "0b00111100010001001101010111001010";
        ram[1] = "0b10111110110110000001011001110110";
        ram[2] = "0b00111101110000001011101000011101";
        ram[3] = "0b00111101010110101000000011010001";
        ram[4] = "0b00111101011001001110111101101010";
        ram[5] = "0b10111111000101100100101011001000";
        ram[6] = "0b10111101011100010100001010110100";
        ram[7] = "0b00111110011100001101001111000001";
        ram[8] = "0b00111110101000001101001110110111";
        ram[9] = "0b00111101010110000011100110001010";
        ram[10] = "0b00111100001110011100010001111000";
        ram[11] = "0b00111110011101001101000011010000";
        ram[12] = "0b00111110101111111001100110001101";
        ram[13] = "0b00111101100100110011110001000100";
        ram[14] = "0b00111101111101000111000100001001";
        ram[15] = "0b00111101010011010111011010010110";
        ram[16] = "0b00111110100011110100001101101101";
        ram[17] = "0b00111101101110110101001100111101";
        ram[18] = "0b00111110001101010000110100110111";
        ram[19] = "0b10111110101001111000001101101001";
        ram[20] = "0b00111110100010100010110100101101";
        ram[21] = "0b00111101111010110111011100110011";
        ram[22] = "0b00111011000100111100100100111101";
        ram[23] = "0b10111110010101100000100010011001";
        ram[24] = "0b10111100011011011111101011111011";
        ram[25] = "0b00111110011000111010110110000010";
        ram[26] = "0b00111011011011000101001110111100";
        ram[27] = "0b00111110100100001110101111011111";
        ram[28] = "0b00111101000101110000000001011001";
        ram[29] = "0b00111110010001011111101001001110";
        ram[30] = "0b10111110011001111000101110101011";
        ram[31] = "0b10111110111100110111001111110001";
        for (unsigned i = 32; i < 96 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[96] = "0b10111110101100000001011011111101";
        ram[97] = "0b10111110101110011100001010010000";
        ram[98] = "0b00111110010110101010101111111111";
        ram[99] = "0b00111110101100001111001111111100";
        ram[100] = "0b10111110000011011110001101000101";
        ram[101] = "0b10111111000100111101101111111101";
        ram[102] = "0b00111110000100111001110000100001";
        ram[103] = "0b00111101101111001000100111010000";
        ram[104] = "0b00111110001100111100010000101100";
        ram[105] = "0b00111101100010001110001110000101";
        ram[106] = "0b00111110011001101110111100100011";
        ram[107] = "0b00111110100011110010010010001110";
        ram[108] = "0b00111110110100000000001011001110";
        ram[109] = "0b00111101001100110011100000110000";
        ram[110] = "0b00111101010110001100000001010100";
        ram[111] = "0b00111110000110111110000101010110";
        ram[112] = "0b10111110011100101001001001001111";
        ram[113] = "0b10111110111110100100111110111000";
        ram[114] = "0b10111110001111100010001111001011";
        ram[115] = "0b00111101100100011011100110010100";
        ram[116] = "0b00111110101011011011110100011010";
        ram[117] = "0b00111110011000100111100001110001";
        ram[118] = "0b00111110000111001000000101000100";
        ram[119] = "0b00111101010010111001111101100110";
        ram[120] = "0b00111100100110001000110110001100";
        ram[121] = "0b10111110010111011111001001010011";
        ram[122] = "0b00111110001111010101010010110011";
        ram[123] = "0b10111110000101110111110001011001";
        ram[124] = "0b00111101101000101101100000100111";
        ram[125] = "0b10111101001010011111111010110111";
        ram[126] = "0b00111110010010100001101000100001";
        ram[127] = "0b10111101000100111100101100010110";
        for (unsigned i = 128; i < 192 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }
        ram[192] = "0b10111110110100000111100010111000";
        ram[193] = "0b10111110010110100001010101010010";
        ram[194] = "0b10111110011110111110100000000111";
        ram[195] = "0b00111110110100011110100001001100";
        ram[196] = "0b00111101111011101011010110101000";
        ram[197] = "0b10111110001011000001111011100010";
        ram[198] = "0b10111110100001010001001111001000";
        ram[199] = "0b00111011110011010000110110100111";
        ram[200] = "0b00111110001110000001010101011100";
        ram[201] = "0b00111101110101000000000110101101";
        ram[202] = "0b10111101010001110101110100011011";
        ram[203] = "0b10111100010101101010100101011110";
        ram[204] = "0b10111101100111000010110100011100";
        ram[205] = "0b00111101101001001011100110001110";
        ram[206] = "0b10111110010110111001000011111100";
        ram[207] = "0b10111110100101100101001010010010";
        ram[208] = "0b10111110111001111010001001011000";
        ram[209] = "0b10111110101110100001010011110111";
        ram[210] = "0b10111110110011100101110011111000";
        ram[211] = "0b00111110000101001100010101001001";
        ram[212] = "0b00111101100110110111010101001001";
        ram[213] = "0b00111110001100001001001111000111";
        ram[214] = "0b00111110101010000100100011011010";
        ram[215] = "0b00111101110001011001101100000001";
        ram[216] = "0b00111101110010010001001000011001";
        ram[217] = "0b10111110101010000011111100100001";
        ram[218] = "0b00111110001110101011100011111001";
        ram[219] = "0b10111110010111111011110111100101";
        ram[220] = "0b10111100100000000100110001100001";
        ram[221] = "0b10111110010110100101000011001001";
        ram[222] = "0b00111110101100011011101011010111";
        ram[223] = "0b00111110001101011001000001111010";
        for (unsigned i = 224; i < 288 ; i = i + 1) {
            ram[i] = "0b00000000000000000000000000000000";
        }


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_1_conv_1_weibkb) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 288;
static const unsigned AddressWidth = 9;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_1_conv_1_weibkb_ram* meminst;


SC_CTOR(conv_1_conv_1_weibkb) {
meminst = new conv_1_conv_1_weibkb_ram("conv_1_conv_1_weibkb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_1_conv_1_weibkb() {
    delete meminst;
}


};//endmodule
#endif
