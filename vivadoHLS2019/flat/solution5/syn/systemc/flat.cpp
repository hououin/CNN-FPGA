// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> flat::ap_ST_fsm_state1 = "1";
const sc_lv<11> flat::ap_ST_fsm_state2 = "10";
const sc_lv<11> flat::ap_ST_fsm_state3 = "100";
const sc_lv<11> flat::ap_ST_fsm_state4 = "1000";
const sc_lv<11> flat::ap_ST_fsm_state5 = "10000";
const sc_lv<11> flat::ap_ST_fsm_state6 = "100000";
const sc_lv<11> flat::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> flat::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> flat::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> flat::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> flat::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> flat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> flat::ap_const_lv32_1 = "1";
const sc_lv<1> flat::ap_const_lv1_0 = "0";
const sc_lv<32> flat::ap_const_lv32_2 = "10";
const sc_lv<32> flat::ap_const_lv32_3 = "11";
const sc_lv<32> flat::ap_const_lv32_4 = "100";
const sc_lv<32> flat::ap_const_lv32_5 = "101";
const sc_lv<32> flat::ap_const_lv32_6 = "110";
const sc_lv<32> flat::ap_const_lv32_7 = "111";
const sc_lv<32> flat::ap_const_lv32_8 = "1000";
const sc_lv<32> flat::ap_const_lv32_9 = "1001";
const sc_lv<32> flat::ap_const_lv32_A = "1010";
const sc_lv<3> flat::ap_const_lv3_0 = "000";
const sc_lv<1> flat::ap_const_lv1_1 = "1";
const sc_lv<9> flat::ap_const_lv9_0 = "000000000";
const sc_lv<3> flat::ap_const_lv3_5 = "101";
const sc_lv<3> flat::ap_const_lv3_1 = "1";
const sc_lv<9> flat::ap_const_lv9_50 = "1010000";
const sc_lv<2> flat::ap_const_lv2_0 = "00";
const sc_lv<4> flat::ap_const_lv4_0 = "0000";
const sc_lv<10> flat::ap_const_lv10_1 = "1";
const sc_lv<10> flat::ap_const_lv10_2 = "10";
const sc_lv<10> flat::ap_const_lv10_3 = "11";
const sc_lv<9> flat::ap_const_lv9_1 = "1";
const sc_lv<10> flat::ap_const_lv10_4 = "100";
const sc_lv<10> flat::ap_const_lv10_5 = "101";
const sc_lv<9> flat::ap_const_lv9_3 = "11";
const sc_lv<10> flat::ap_const_lv10_6 = "110";
const sc_lv<10> flat::ap_const_lv10_7 = "111";
const sc_lv<10> flat::ap_const_lv10_8 = "1000";
const sc_lv<10> flat::ap_const_lv10_9 = "1001";
const sc_lv<9> flat::ap_const_lv9_7 = "111";
const sc_lv<10> flat::ap_const_lv10_A = "1010";
const sc_lv<10> flat::ap_const_lv10_B = "1011";
const sc_lv<10> flat::ap_const_lv10_C = "1100";
const sc_lv<10> flat::ap_const_lv10_D = "1101";
const sc_lv<10> flat::ap_const_lv10_E = "1110";
const sc_lv<10> flat::ap_const_lv10_F = "1111";
const sc_lv<9> flat::ap_const_lv9_10 = "10000";
const sc_lv<9> flat::ap_const_lv9_F = "1111";
const bool flat::ap_const_boolean_1 = true;

flat::flat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln14_1_fu_461_p2);
    sensitive << ( add_ln14_reg_822 );
    sensitive << ( zext_ln14_18_fu_457_p1 );

    SC_METHOD(thread_add_ln14_fu_439_p2);
    sensitive << ( zext_ln14_fu_423_p1 );
    sensitive << ( zext_ln14_1_fu_435_p1 );

    SC_METHOD(thread_add_ln15_10_fu_762_p2);
    sensitive << ( zext_ln15_2_reg_933 );

    SC_METHOD(thread_add_ln15_11_fu_772_p2);
    sensitive << ( zext_ln15_2_reg_933 );

    SC_METHOD(thread_add_ln15_12_fu_788_p2);
    sensitive << ( zext_ln15_2_reg_933 );

    SC_METHOD(thread_add_ln15_2_fu_549_p2);
    sensitive << ( zext_ln15_fu_546_p1 );

    SC_METHOD(thread_add_ln15_3_fu_594_p2);
    sensitive << ( zext_ln15_1_fu_591_p1 );

    SC_METHOD(thread_add_ln15_4_fu_605_p2);
    sensitive << ( zext_ln15_1_fu_591_p1 );

    SC_METHOD(thread_add_ln15_5_fu_636_p2);
    sensitive << ( zext_ln15_1_reg_903 );

    SC_METHOD(thread_add_ln15_6_fu_680_p2);
    sensitive << ( zext_ln15_2_fu_677_p1 );

    SC_METHOD(thread_add_ln15_7_fu_691_p2);
    sensitive << ( zext_ln15_2_fu_677_p1 );

    SC_METHOD(thread_add_ln15_8_fu_722_p2);
    sensitive << ( zext_ln15_2_reg_933 );

    SC_METHOD(thread_add_ln15_9_fu_732_p2);
    sensitive << ( zext_ln15_2_reg_933 );

    SC_METHOD(thread_add_ln15_fu_782_p2);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_405_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_405_p2 );

    SC_METHOD(thread_c_fu_451_p2);
    sensitive << ( c_0_reg_394 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln14_2_fu_510_p1 );
    sensitive << ( zext_ln14_4_fu_555_p1 );
    sensitive << ( zext_ln14_6_fu_600_p1 );
    sensitive << ( zext_ln14_8_fu_641_p1 );
    sensitive << ( zext_ln14_10_fu_686_p1 );
    sensitive << ( zext_ln14_12_fu_727_p1 );
    sensitive << ( zext_ln14_14_fu_767_p1 );
    sensitive << ( zext_ln14_16_fu_793_p1 );

    SC_METHOD(thread_flat_array_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln14_3_fu_521_p1 );
    sensitive << ( zext_ln14_5_fu_566_p1 );
    sensitive << ( zext_ln14_7_fu_611_p1 );
    sensitive << ( zext_ln14_9_fu_652_p1 );
    sensitive << ( zext_ln14_11_fu_697_p1 );
    sensitive << ( zext_ln14_13_fu_737_p1 );
    sensitive << ( zext_ln14_15_fu_777_p1 );
    sensitive << ( zext_ln14_17_fu_804_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_flat_array_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_flat_array_d0);
    sensitive << ( max_pool_out_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_flat_array_d1);
    sensitive << ( max_pool_out_q1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_flat_array_we1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_i_fu_417_p2);
    sensitive << ( i_0_reg_371 );

    SC_METHOD(thread_icmp_ln6_fu_405_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_360 );

    SC_METHOD(thread_icmp_ln9_fu_445_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_394 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln14_19_fu_474_p1 );
    sensitive << ( zext_ln14_21_fu_495_p1 );
    sensitive << ( zext_ln14_23_fu_531_p1 );
    sensitive << ( zext_ln14_25_fu_576_p1 );
    sensitive << ( zext_ln14_27_fu_621_p1 );
    sensitive << ( zext_ln14_29_fu_662_p1 );
    sensitive << ( zext_ln14_31_fu_707_p1 );
    sensitive << ( zext_ln14_33_fu_747_p1 );

    SC_METHOD(thread_max_pool_out_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln14_20_fu_485_p1 );
    sensitive << ( zext_ln14_22_fu_505_p1 );
    sensitive << ( zext_ln14_24_fu_541_p1 );
    sensitive << ( zext_ln14_26_fu_586_p1 );
    sensitive << ( zext_ln14_28_fu_631_p1 );
    sensitive << ( zext_ln14_30_fu_672_p1 );
    sensitive << ( zext_ln14_32_fu_717_p1 );
    sensitive << ( zext_ln14_34_fu_757_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_max_pool_out_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_or_ln14_10_fu_667_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_11_fu_702_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_12_fu_712_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_13_fu_742_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_14_fu_752_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_1_fu_490_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_2_fu_500_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_3_fu_526_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_4_fu_536_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_5_fu_571_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_6_fu_581_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_7_fu_616_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_8_fu_626_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_9_fu_657_p2);
    sensitive << ( tmp_2_reg_835 );

    SC_METHOD(thread_or_ln14_fu_479_p2);
    sensitive << ( tmp_2_fu_466_p3 );

    SC_METHOD(thread_or_ln15_1_fu_560_p2);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_or_ln15_2_fu_646_p2);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_or_ln15_3_fu_798_p2);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_or_ln15_fu_515_p2);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_r_fu_411_p2);
    sensitive << ( r_0_reg_360 );

    SC_METHOD(thread_tmp_1_fu_427_p3);
    sensitive << ( r_0_reg_360 );

    SC_METHOD(thread_tmp_2_fu_466_p3);
    sensitive << ( add_ln14_1_fu_461_p2 );

    SC_METHOD(thread_zext_ln14_10_fu_686_p1);
    sensitive << ( add_ln15_6_fu_680_p2 );

    SC_METHOD(thread_zext_ln14_11_fu_697_p1);
    sensitive << ( add_ln15_7_fu_691_p2 );

    SC_METHOD(thread_zext_ln14_12_fu_727_p1);
    sensitive << ( add_ln15_8_fu_722_p2 );

    SC_METHOD(thread_zext_ln14_13_fu_737_p1);
    sensitive << ( add_ln15_9_fu_732_p2 );

    SC_METHOD(thread_zext_ln14_14_fu_767_p1);
    sensitive << ( add_ln15_10_fu_762_p2 );

    SC_METHOD(thread_zext_ln14_15_fu_777_p1);
    sensitive << ( add_ln15_11_fu_772_p2 );

    SC_METHOD(thread_zext_ln14_16_fu_793_p1);
    sensitive << ( add_ln15_12_fu_788_p2 );

    SC_METHOD(thread_zext_ln14_17_fu_804_p1);
    sensitive << ( or_ln15_3_fu_798_p2 );

    SC_METHOD(thread_zext_ln14_18_fu_457_p1);
    sensitive << ( c_0_reg_394 );

    SC_METHOD(thread_zext_ln14_19_fu_474_p1);
    sensitive << ( tmp_2_fu_466_p3 );

    SC_METHOD(thread_zext_ln14_1_fu_435_p1);
    sensitive << ( tmp_1_fu_427_p3 );

    SC_METHOD(thread_zext_ln14_20_fu_485_p1);
    sensitive << ( or_ln14_fu_479_p2 );

    SC_METHOD(thread_zext_ln14_21_fu_495_p1);
    sensitive << ( or_ln14_1_fu_490_p2 );

    SC_METHOD(thread_zext_ln14_22_fu_505_p1);
    sensitive << ( or_ln14_2_fu_500_p2 );

    SC_METHOD(thread_zext_ln14_23_fu_531_p1);
    sensitive << ( or_ln14_3_fu_526_p2 );

    SC_METHOD(thread_zext_ln14_24_fu_541_p1);
    sensitive << ( or_ln14_4_fu_536_p2 );

    SC_METHOD(thread_zext_ln14_25_fu_576_p1);
    sensitive << ( or_ln14_5_fu_571_p2 );

    SC_METHOD(thread_zext_ln14_26_fu_586_p1);
    sensitive << ( or_ln14_6_fu_581_p2 );

    SC_METHOD(thread_zext_ln14_27_fu_621_p1);
    sensitive << ( or_ln14_7_fu_616_p2 );

    SC_METHOD(thread_zext_ln14_28_fu_631_p1);
    sensitive << ( or_ln14_8_fu_626_p2 );

    SC_METHOD(thread_zext_ln14_29_fu_662_p1);
    sensitive << ( or_ln14_9_fu_657_p2 );

    SC_METHOD(thread_zext_ln14_2_fu_510_p1);
    sensitive << ( i_1_reg_383 );

    SC_METHOD(thread_zext_ln14_30_fu_672_p1);
    sensitive << ( or_ln14_10_fu_667_p2 );

    SC_METHOD(thread_zext_ln14_31_fu_707_p1);
    sensitive << ( or_ln14_11_fu_702_p2 );

    SC_METHOD(thread_zext_ln14_32_fu_717_p1);
    sensitive << ( or_ln14_12_fu_712_p2 );

    SC_METHOD(thread_zext_ln14_33_fu_747_p1);
    sensitive << ( or_ln14_13_fu_742_p2 );

    SC_METHOD(thread_zext_ln14_34_fu_757_p1);
    sensitive << ( or_ln14_14_fu_752_p2 );

    SC_METHOD(thread_zext_ln14_3_fu_521_p1);
    sensitive << ( or_ln15_fu_515_p2 );

    SC_METHOD(thread_zext_ln14_4_fu_555_p1);
    sensitive << ( add_ln15_2_fu_549_p2 );

    SC_METHOD(thread_zext_ln14_5_fu_566_p1);
    sensitive << ( or_ln15_1_fu_560_p2 );

    SC_METHOD(thread_zext_ln14_6_fu_600_p1);
    sensitive << ( add_ln15_3_fu_594_p2 );

    SC_METHOD(thread_zext_ln14_7_fu_611_p1);
    sensitive << ( add_ln15_4_fu_605_p2 );

    SC_METHOD(thread_zext_ln14_8_fu_641_p1);
    sensitive << ( add_ln15_5_fu_636_p2 );

    SC_METHOD(thread_zext_ln14_9_fu_652_p1);
    sensitive << ( or_ln15_2_fu_646_p2 );

    SC_METHOD(thread_zext_ln14_fu_423_p1);
    sensitive << ( r_0_reg_360 );

    SC_METHOD(thread_zext_ln15_1_fu_591_p1);
    sensitive << ( or_ln15_1_reg_888 );

    SC_METHOD(thread_zext_ln15_2_fu_677_p1);
    sensitive << ( or_ln15_2_reg_918 );

    SC_METHOD(thread_zext_ln15_fu_546_p1);
    sensitive << ( or_ln15_reg_873 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_405_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln9_fu_445_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_q0, "(port)max_pool_out_q0");
    sc_trace(mVcdFile, max_pool_out_address1, "(port)max_pool_out_address1");
    sc_trace(mVcdFile, max_pool_out_ce1, "(port)max_pool_out_ce1");
    sc_trace(mVcdFile, max_pool_out_q1, "(port)max_pool_out_q1");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "(port)flat_array_we0");
    sc_trace(mVcdFile, flat_array_d0, "(port)flat_array_d0");
    sc_trace(mVcdFile, flat_array_address1, "(port)flat_array_address1");
    sc_trace(mVcdFile, flat_array_ce1, "(port)flat_array_ce1");
    sc_trace(mVcdFile, flat_array_we1, "(port)flat_array_we1");
    sc_trace(mVcdFile, flat_array_d1, "(port)flat_array_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, r_fu_411_p2, "r_fu_411_p2");
    sc_trace(mVcdFile, r_reg_812, "r_reg_812");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_417_p2, "i_fu_417_p2");
    sc_trace(mVcdFile, i_reg_817, "i_reg_817");
    sc_trace(mVcdFile, icmp_ln6_fu_405_p2, "icmp_ln6_fu_405_p2");
    sc_trace(mVcdFile, add_ln14_fu_439_p2, "add_ln14_fu_439_p2");
    sc_trace(mVcdFile, add_ln14_reg_822, "add_ln14_reg_822");
    sc_trace(mVcdFile, c_fu_451_p2, "c_fu_451_p2");
    sc_trace(mVcdFile, c_reg_830, "c_reg_830");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_2_fu_466_p3, "tmp_2_fu_466_p3");
    sc_trace(mVcdFile, tmp_2_reg_835, "tmp_2_reg_835");
    sc_trace(mVcdFile, icmp_ln9_fu_445_p2, "icmp_ln9_fu_445_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, or_ln15_fu_515_p2, "or_ln15_fu_515_p2");
    sc_trace(mVcdFile, or_ln15_reg_873, "or_ln15_reg_873");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, or_ln15_1_fu_560_p2, "or_ln15_1_fu_560_p2");
    sc_trace(mVcdFile, or_ln15_1_reg_888, "or_ln15_1_reg_888");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln15_1_fu_591_p1, "zext_ln15_1_fu_591_p1");
    sc_trace(mVcdFile, zext_ln15_1_reg_903, "zext_ln15_1_reg_903");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, or_ln15_2_fu_646_p2, "or_ln15_2_fu_646_p2");
    sc_trace(mVcdFile, or_ln15_2_reg_918, "or_ln15_2_reg_918");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln15_2_fu_677_p1, "zext_ln15_2_fu_677_p1");
    sc_trace(mVcdFile, zext_ln15_2_reg_933, "zext_ln15_2_reg_933");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, add_ln15_fu_782_p2, "add_ln15_fu_782_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, r_0_reg_360, "r_0_reg_360");
    sc_trace(mVcdFile, i_0_reg_371, "i_0_reg_371");
    sc_trace(mVcdFile, i_1_reg_383, "i_1_reg_383");
    sc_trace(mVcdFile, c_0_reg_394, "c_0_reg_394");
    sc_trace(mVcdFile, zext_ln14_19_fu_474_p1, "zext_ln14_19_fu_474_p1");
    sc_trace(mVcdFile, zext_ln14_20_fu_485_p1, "zext_ln14_20_fu_485_p1");
    sc_trace(mVcdFile, zext_ln14_21_fu_495_p1, "zext_ln14_21_fu_495_p1");
    sc_trace(mVcdFile, zext_ln14_22_fu_505_p1, "zext_ln14_22_fu_505_p1");
    sc_trace(mVcdFile, zext_ln14_2_fu_510_p1, "zext_ln14_2_fu_510_p1");
    sc_trace(mVcdFile, zext_ln14_3_fu_521_p1, "zext_ln14_3_fu_521_p1");
    sc_trace(mVcdFile, zext_ln14_23_fu_531_p1, "zext_ln14_23_fu_531_p1");
    sc_trace(mVcdFile, zext_ln14_24_fu_541_p1, "zext_ln14_24_fu_541_p1");
    sc_trace(mVcdFile, zext_ln14_4_fu_555_p1, "zext_ln14_4_fu_555_p1");
    sc_trace(mVcdFile, zext_ln14_5_fu_566_p1, "zext_ln14_5_fu_566_p1");
    sc_trace(mVcdFile, zext_ln14_25_fu_576_p1, "zext_ln14_25_fu_576_p1");
    sc_trace(mVcdFile, zext_ln14_26_fu_586_p1, "zext_ln14_26_fu_586_p1");
    sc_trace(mVcdFile, zext_ln14_6_fu_600_p1, "zext_ln14_6_fu_600_p1");
    sc_trace(mVcdFile, zext_ln14_7_fu_611_p1, "zext_ln14_7_fu_611_p1");
    sc_trace(mVcdFile, zext_ln14_27_fu_621_p1, "zext_ln14_27_fu_621_p1");
    sc_trace(mVcdFile, zext_ln14_28_fu_631_p1, "zext_ln14_28_fu_631_p1");
    sc_trace(mVcdFile, zext_ln14_8_fu_641_p1, "zext_ln14_8_fu_641_p1");
    sc_trace(mVcdFile, zext_ln14_9_fu_652_p1, "zext_ln14_9_fu_652_p1");
    sc_trace(mVcdFile, zext_ln14_29_fu_662_p1, "zext_ln14_29_fu_662_p1");
    sc_trace(mVcdFile, zext_ln14_30_fu_672_p1, "zext_ln14_30_fu_672_p1");
    sc_trace(mVcdFile, zext_ln14_10_fu_686_p1, "zext_ln14_10_fu_686_p1");
    sc_trace(mVcdFile, zext_ln14_11_fu_697_p1, "zext_ln14_11_fu_697_p1");
    sc_trace(mVcdFile, zext_ln14_31_fu_707_p1, "zext_ln14_31_fu_707_p1");
    sc_trace(mVcdFile, zext_ln14_32_fu_717_p1, "zext_ln14_32_fu_717_p1");
    sc_trace(mVcdFile, zext_ln14_12_fu_727_p1, "zext_ln14_12_fu_727_p1");
    sc_trace(mVcdFile, zext_ln14_13_fu_737_p1, "zext_ln14_13_fu_737_p1");
    sc_trace(mVcdFile, zext_ln14_33_fu_747_p1, "zext_ln14_33_fu_747_p1");
    sc_trace(mVcdFile, zext_ln14_34_fu_757_p1, "zext_ln14_34_fu_757_p1");
    sc_trace(mVcdFile, zext_ln14_14_fu_767_p1, "zext_ln14_14_fu_767_p1");
    sc_trace(mVcdFile, zext_ln14_15_fu_777_p1, "zext_ln14_15_fu_777_p1");
    sc_trace(mVcdFile, zext_ln14_16_fu_793_p1, "zext_ln14_16_fu_793_p1");
    sc_trace(mVcdFile, zext_ln14_17_fu_804_p1, "zext_ln14_17_fu_804_p1");
    sc_trace(mVcdFile, tmp_1_fu_427_p3, "tmp_1_fu_427_p3");
    sc_trace(mVcdFile, zext_ln14_fu_423_p1, "zext_ln14_fu_423_p1");
    sc_trace(mVcdFile, zext_ln14_1_fu_435_p1, "zext_ln14_1_fu_435_p1");
    sc_trace(mVcdFile, zext_ln14_18_fu_457_p1, "zext_ln14_18_fu_457_p1");
    sc_trace(mVcdFile, add_ln14_1_fu_461_p2, "add_ln14_1_fu_461_p2");
    sc_trace(mVcdFile, or_ln14_fu_479_p2, "or_ln14_fu_479_p2");
    sc_trace(mVcdFile, or_ln14_1_fu_490_p2, "or_ln14_1_fu_490_p2");
    sc_trace(mVcdFile, or_ln14_2_fu_500_p2, "or_ln14_2_fu_500_p2");
    sc_trace(mVcdFile, or_ln14_3_fu_526_p2, "or_ln14_3_fu_526_p2");
    sc_trace(mVcdFile, or_ln14_4_fu_536_p2, "or_ln14_4_fu_536_p2");
    sc_trace(mVcdFile, zext_ln15_fu_546_p1, "zext_ln15_fu_546_p1");
    sc_trace(mVcdFile, add_ln15_2_fu_549_p2, "add_ln15_2_fu_549_p2");
    sc_trace(mVcdFile, or_ln14_5_fu_571_p2, "or_ln14_5_fu_571_p2");
    sc_trace(mVcdFile, or_ln14_6_fu_581_p2, "or_ln14_6_fu_581_p2");
    sc_trace(mVcdFile, add_ln15_3_fu_594_p2, "add_ln15_3_fu_594_p2");
    sc_trace(mVcdFile, add_ln15_4_fu_605_p2, "add_ln15_4_fu_605_p2");
    sc_trace(mVcdFile, or_ln14_7_fu_616_p2, "or_ln14_7_fu_616_p2");
    sc_trace(mVcdFile, or_ln14_8_fu_626_p2, "or_ln14_8_fu_626_p2");
    sc_trace(mVcdFile, add_ln15_5_fu_636_p2, "add_ln15_5_fu_636_p2");
    sc_trace(mVcdFile, or_ln14_9_fu_657_p2, "or_ln14_9_fu_657_p2");
    sc_trace(mVcdFile, or_ln14_10_fu_667_p2, "or_ln14_10_fu_667_p2");
    sc_trace(mVcdFile, add_ln15_6_fu_680_p2, "add_ln15_6_fu_680_p2");
    sc_trace(mVcdFile, add_ln15_7_fu_691_p2, "add_ln15_7_fu_691_p2");
    sc_trace(mVcdFile, or_ln14_11_fu_702_p2, "or_ln14_11_fu_702_p2");
    sc_trace(mVcdFile, or_ln14_12_fu_712_p2, "or_ln14_12_fu_712_p2");
    sc_trace(mVcdFile, add_ln15_8_fu_722_p2, "add_ln15_8_fu_722_p2");
    sc_trace(mVcdFile, add_ln15_9_fu_732_p2, "add_ln15_9_fu_732_p2");
    sc_trace(mVcdFile, or_ln14_13_fu_742_p2, "or_ln14_13_fu_742_p2");
    sc_trace(mVcdFile, or_ln14_14_fu_752_p2, "or_ln14_14_fu_752_p2");
    sc_trace(mVcdFile, add_ln15_10_fu_762_p2, "add_ln15_10_fu_762_p2");
    sc_trace(mVcdFile, add_ln15_11_fu_772_p2, "add_ln15_11_fu_772_p2");
    sc_trace(mVcdFile, add_ln15_12_fu_788_p2, "add_ln15_12_fu_788_p2");
    sc_trace(mVcdFile, or_ln15_3_fu_798_p2, "or_ln15_3_fu_798_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("flat.hdltvin.dat");
    mHdltvoutHandle.open("flat.hdltvout.dat");
}

flat::~flat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void flat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        c_0_reg_394 = c_reg_830.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_0))) {
        c_0_reg_394 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_445_p2.read(), ap_const_lv1_1))) {
        i_0_reg_371 = i_reg_817.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_371 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_1_reg_383 = add_ln15_fu_782_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_0))) {
        i_1_reg_383 = i_0_reg_371.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln9_fu_445_p2.read(), ap_const_lv1_1))) {
        r_0_reg_360 = r_reg_812.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_360 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_0))) {
        add_ln14_reg_822 = add_ln14_fu_439_p2.read();
        i_reg_817 = i_fu_417_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_830 = c_fu_451_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        or_ln15_1_reg_888 = or_ln15_1_fu_560_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        or_ln15_2_reg_918 = or_ln15_2_fu_646_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        or_ln15_reg_873 = or_ln15_fu_515_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_812 = r_fu_411_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln9_fu_445_p2.read()))) {
        tmp_2_reg_835 = tmp_2_fu_466_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        zext_ln15_1_reg_903 = zext_ln15_1_fu_591_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        zext_ln15_2_reg_933 = zext_ln15_2_fu_677_p1.read();
    }
}

void flat::thread_add_ln14_1_fu_461_p2() {
    add_ln14_1_fu_461_p2 = (!zext_ln14_18_fu_457_p1.read().is_01() || !add_ln14_reg_822.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln14_18_fu_457_p1.read()) + sc_biguint<6>(add_ln14_reg_822.read()));
}

void flat::thread_add_ln14_fu_439_p2() {
    add_ln14_fu_439_p2 = (!zext_ln14_fu_423_p1.read().is_01() || !zext_ln14_1_fu_435_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln14_fu_423_p1.read()) + sc_biguint<6>(zext_ln14_1_fu_435_p1.read()));
}

void flat::thread_add_ln15_10_fu_762_p2() {
    add_ln15_10_fu_762_p2 = (!zext_ln15_2_reg_933.read().is_01() || !ap_const_lv10_5.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_933.read()) + sc_biguint<10>(ap_const_lv10_5));
}

void flat::thread_add_ln15_11_fu_772_p2() {
    add_ln15_11_fu_772_p2 = (!zext_ln15_2_reg_933.read().is_01() || !ap_const_lv10_6.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_933.read()) + sc_biguint<10>(ap_const_lv10_6));
}

void flat::thread_add_ln15_12_fu_788_p2() {
    add_ln15_12_fu_788_p2 = (!zext_ln15_2_reg_933.read().is_01() || !ap_const_lv10_7.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_933.read()) + sc_biguint<10>(ap_const_lv10_7));
}

void flat::thread_add_ln15_2_fu_549_p2() {
    add_ln15_2_fu_549_p2 = (!zext_ln15_fu_546_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_fu_546_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_3_fu_594_p2() {
    add_ln15_3_fu_594_p2 = (!zext_ln15_1_fu_591_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_fu_591_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_4_fu_605_p2() {
    add_ln15_4_fu_605_p2 = (!zext_ln15_1_fu_591_p1.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_fu_591_p1.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void flat::thread_add_ln15_5_fu_636_p2() {
    add_ln15_5_fu_636_p2 = (!zext_ln15_1_reg_903.read().is_01() || !ap_const_lv10_3.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_reg_903.read()) + sc_biguint<10>(ap_const_lv10_3));
}

void flat::thread_add_ln15_6_fu_680_p2() {
    add_ln15_6_fu_680_p2 = (!zext_ln15_2_fu_677_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_fu_677_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_7_fu_691_p2() {
    add_ln15_7_fu_691_p2 = (!zext_ln15_2_fu_677_p1.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_fu_677_p1.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void flat::thread_add_ln15_8_fu_722_p2() {
    add_ln15_8_fu_722_p2 = (!zext_ln15_2_reg_933.read().is_01() || !ap_const_lv10_3.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_933.read()) + sc_biguint<10>(ap_const_lv10_3));
}

void flat::thread_add_ln15_9_fu_732_p2() {
    add_ln15_9_fu_732_p2 = (!zext_ln15_2_reg_933.read().is_01() || !ap_const_lv10_4.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_933.read()) + sc_biguint<10>(ap_const_lv10_4));
}

void flat::thread_add_ln15_fu_782_p2() {
    add_ln15_fu_782_p2 = (!i_1_reg_383.read().is_01() || !ap_const_lv9_10.is_01())? sc_lv<9>(): (sc_biguint<9>(i_1_reg_383.read()) + sc_biguint<9>(ap_const_lv9_10));
}

void flat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void flat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void flat::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void flat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void flat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void flat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void flat::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void flat::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void flat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void flat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void flat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void flat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void flat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void flat::thread_c_fu_451_p2() {
    c_fu_451_p2 = (!c_0_reg_394.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_0_reg_394.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flat::thread_flat_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_16_fu_793_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_14_fu_767_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_12_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_10_fu_686_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_8_fu_641_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_6_fu_600_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_4_fu_555_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_2_fu_510_p1.read());
    } else {
        flat_array_address0 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_17_fu_804_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_15_fu_777_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_13_fu_737_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_11_fu_697_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_9_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_7_fu_611_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_5_fu_566_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_3_fu_521_p1.read());
    } else {
        flat_array_address1 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        flat_array_ce1 = ap_const_logic_1;
    } else {
        flat_array_ce1 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_d0() {
    flat_array_d0 = max_pool_out_q0.read();
}

void flat::thread_flat_array_d1() {
    flat_array_d1 = max_pool_out_q1.read();
}

void flat::thread_flat_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        flat_array_we0 = ap_const_logic_1;
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        flat_array_we1 = ap_const_logic_1;
    } else {
        flat_array_we1 = ap_const_logic_0;
    }
}

void flat::thread_i_fu_417_p2() {
    i_fu_417_p2 = (!i_0_reg_371.read().is_01() || !ap_const_lv9_50.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_371.read()) + sc_biguint<9>(ap_const_lv9_50));
}

void flat::thread_icmp_ln6_fu_405_p2() {
    icmp_ln6_fu_405_p2 = (!r_0_reg_360.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_360.read() == ap_const_lv3_5);
}

void flat::thread_icmp_ln9_fu_445_p2() {
    icmp_ln9_fu_445_p2 = (!c_0_reg_394.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_394.read() == ap_const_lv3_5);
}

void flat::thread_max_pool_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_33_fu_747_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_31_fu_707_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_29_fu_662_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_27_fu_621_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_25_fu_576_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_23_fu_531_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_21_fu_495_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_19_fu_474_p1.read());
    } else {
        max_pool_out_address0 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_34_fu_757_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_32_fu_717_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_30_fu_672_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_28_fu_631_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_26_fu_586_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_24_fu_541_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_22_fu_505_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_20_fu_485_p1.read());
    } else {
        max_pool_out_address1 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void flat::thread_max_pool_out_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        max_pool_out_ce1 = ap_const_logic_1;
    } else {
        max_pool_out_ce1 = ap_const_logic_0;
    }
}

void flat::thread_or_ln14_10_fu_667_p2() {
    or_ln14_10_fu_667_p2 = (tmp_2_reg_835.read() | ap_const_lv10_B);
}

void flat::thread_or_ln14_11_fu_702_p2() {
    or_ln14_11_fu_702_p2 = (tmp_2_reg_835.read() | ap_const_lv10_C);
}

void flat::thread_or_ln14_12_fu_712_p2() {
    or_ln14_12_fu_712_p2 = (tmp_2_reg_835.read() | ap_const_lv10_D);
}

void flat::thread_or_ln14_13_fu_742_p2() {
    or_ln14_13_fu_742_p2 = (tmp_2_reg_835.read() | ap_const_lv10_E);
}

void flat::thread_or_ln14_14_fu_752_p2() {
    or_ln14_14_fu_752_p2 = (tmp_2_reg_835.read() | ap_const_lv10_F);
}

void flat::thread_or_ln14_1_fu_490_p2() {
    or_ln14_1_fu_490_p2 = (tmp_2_reg_835.read() | ap_const_lv10_2);
}

void flat::thread_or_ln14_2_fu_500_p2() {
    or_ln14_2_fu_500_p2 = (tmp_2_reg_835.read() | ap_const_lv10_3);
}

void flat::thread_or_ln14_3_fu_526_p2() {
    or_ln14_3_fu_526_p2 = (tmp_2_reg_835.read() | ap_const_lv10_4);
}

void flat::thread_or_ln14_4_fu_536_p2() {
    or_ln14_4_fu_536_p2 = (tmp_2_reg_835.read() | ap_const_lv10_5);
}

void flat::thread_or_ln14_5_fu_571_p2() {
    or_ln14_5_fu_571_p2 = (tmp_2_reg_835.read() | ap_const_lv10_6);
}

void flat::thread_or_ln14_6_fu_581_p2() {
    or_ln14_6_fu_581_p2 = (tmp_2_reg_835.read() | ap_const_lv10_7);
}

void flat::thread_or_ln14_7_fu_616_p2() {
    or_ln14_7_fu_616_p2 = (tmp_2_reg_835.read() | ap_const_lv10_8);
}

void flat::thread_or_ln14_8_fu_626_p2() {
    or_ln14_8_fu_626_p2 = (tmp_2_reg_835.read() | ap_const_lv10_9);
}

void flat::thread_or_ln14_9_fu_657_p2() {
    or_ln14_9_fu_657_p2 = (tmp_2_reg_835.read() | ap_const_lv10_A);
}

void flat::thread_or_ln14_fu_479_p2() {
    or_ln14_fu_479_p2 = (tmp_2_fu_466_p3.read() | ap_const_lv10_1);
}

void flat::thread_or_ln15_1_fu_560_p2() {
    or_ln15_1_fu_560_p2 = (i_1_reg_383.read() | ap_const_lv9_3);
}

void flat::thread_or_ln15_2_fu_646_p2() {
    or_ln15_2_fu_646_p2 = (i_1_reg_383.read() | ap_const_lv9_7);
}

void flat::thread_or_ln15_3_fu_798_p2() {
    or_ln15_3_fu_798_p2 = (i_1_reg_383.read() | ap_const_lv9_F);
}

void flat::thread_or_ln15_fu_515_p2() {
    or_ln15_fu_515_p2 = (i_1_reg_383.read() | ap_const_lv9_1);
}

void flat::thread_r_fu_411_p2() {
    r_fu_411_p2 = (!r_0_reg_360.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(r_0_reg_360.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flat::thread_tmp_1_fu_427_p3() {
    tmp_1_fu_427_p3 = esl_concat<3,2>(r_0_reg_360.read(), ap_const_lv2_0);
}

void flat::thread_tmp_2_fu_466_p3() {
    tmp_2_fu_466_p3 = esl_concat<6,4>(add_ln14_1_fu_461_p2.read(), ap_const_lv4_0);
}

void flat::thread_zext_ln14_10_fu_686_p1() {
    zext_ln14_10_fu_686_p1 = esl_zext<64,10>(add_ln15_6_fu_680_p2.read());
}

void flat::thread_zext_ln14_11_fu_697_p1() {
    zext_ln14_11_fu_697_p1 = esl_zext<64,10>(add_ln15_7_fu_691_p2.read());
}

void flat::thread_zext_ln14_12_fu_727_p1() {
    zext_ln14_12_fu_727_p1 = esl_zext<64,10>(add_ln15_8_fu_722_p2.read());
}

void flat::thread_zext_ln14_13_fu_737_p1() {
    zext_ln14_13_fu_737_p1 = esl_zext<64,10>(add_ln15_9_fu_732_p2.read());
}

void flat::thread_zext_ln14_14_fu_767_p1() {
    zext_ln14_14_fu_767_p1 = esl_zext<64,10>(add_ln15_10_fu_762_p2.read());
}

void flat::thread_zext_ln14_15_fu_777_p1() {
    zext_ln14_15_fu_777_p1 = esl_zext<64,10>(add_ln15_11_fu_772_p2.read());
}

void flat::thread_zext_ln14_16_fu_793_p1() {
    zext_ln14_16_fu_793_p1 = esl_zext<64,10>(add_ln15_12_fu_788_p2.read());
}

void flat::thread_zext_ln14_17_fu_804_p1() {
    zext_ln14_17_fu_804_p1 = esl_zext<64,9>(or_ln15_3_fu_798_p2.read());
}

void flat::thread_zext_ln14_18_fu_457_p1() {
    zext_ln14_18_fu_457_p1 = esl_zext<6,3>(c_0_reg_394.read());
}

void flat::thread_zext_ln14_19_fu_474_p1() {
    zext_ln14_19_fu_474_p1 = esl_zext<64,10>(tmp_2_fu_466_p3.read());
}

void flat::thread_zext_ln14_1_fu_435_p1() {
    zext_ln14_1_fu_435_p1 = esl_zext<6,5>(tmp_1_fu_427_p3.read());
}

void flat::thread_zext_ln14_20_fu_485_p1() {
    zext_ln14_20_fu_485_p1 = esl_zext<64,10>(or_ln14_fu_479_p2.read());
}

void flat::thread_zext_ln14_21_fu_495_p1() {
    zext_ln14_21_fu_495_p1 = esl_zext<64,10>(or_ln14_1_fu_490_p2.read());
}

void flat::thread_zext_ln14_22_fu_505_p1() {
    zext_ln14_22_fu_505_p1 = esl_zext<64,10>(or_ln14_2_fu_500_p2.read());
}

void flat::thread_zext_ln14_23_fu_531_p1() {
    zext_ln14_23_fu_531_p1 = esl_zext<64,10>(or_ln14_3_fu_526_p2.read());
}

void flat::thread_zext_ln14_24_fu_541_p1() {
    zext_ln14_24_fu_541_p1 = esl_zext<64,10>(or_ln14_4_fu_536_p2.read());
}

void flat::thread_zext_ln14_25_fu_576_p1() {
    zext_ln14_25_fu_576_p1 = esl_zext<64,10>(or_ln14_5_fu_571_p2.read());
}

void flat::thread_zext_ln14_26_fu_586_p1() {
    zext_ln14_26_fu_586_p1 = esl_zext<64,10>(or_ln14_6_fu_581_p2.read());
}

void flat::thread_zext_ln14_27_fu_621_p1() {
    zext_ln14_27_fu_621_p1 = esl_zext<64,10>(or_ln14_7_fu_616_p2.read());
}

void flat::thread_zext_ln14_28_fu_631_p1() {
    zext_ln14_28_fu_631_p1 = esl_zext<64,10>(or_ln14_8_fu_626_p2.read());
}

void flat::thread_zext_ln14_29_fu_662_p1() {
    zext_ln14_29_fu_662_p1 = esl_zext<64,10>(or_ln14_9_fu_657_p2.read());
}

void flat::thread_zext_ln14_2_fu_510_p1() {
    zext_ln14_2_fu_510_p1 = esl_zext<64,9>(i_1_reg_383.read());
}

void flat::thread_zext_ln14_30_fu_672_p1() {
    zext_ln14_30_fu_672_p1 = esl_zext<64,10>(or_ln14_10_fu_667_p2.read());
}

void flat::thread_zext_ln14_31_fu_707_p1() {
    zext_ln14_31_fu_707_p1 = esl_zext<64,10>(or_ln14_11_fu_702_p2.read());
}

void flat::thread_zext_ln14_32_fu_717_p1() {
    zext_ln14_32_fu_717_p1 = esl_zext<64,10>(or_ln14_12_fu_712_p2.read());
}

void flat::thread_zext_ln14_33_fu_747_p1() {
    zext_ln14_33_fu_747_p1 = esl_zext<64,10>(or_ln14_13_fu_742_p2.read());
}

void flat::thread_zext_ln14_34_fu_757_p1() {
    zext_ln14_34_fu_757_p1 = esl_zext<64,10>(or_ln14_14_fu_752_p2.read());
}

void flat::thread_zext_ln14_3_fu_521_p1() {
    zext_ln14_3_fu_521_p1 = esl_zext<64,9>(or_ln15_fu_515_p2.read());
}

void flat::thread_zext_ln14_4_fu_555_p1() {
    zext_ln14_4_fu_555_p1 = esl_zext<64,10>(add_ln15_2_fu_549_p2.read());
}

void flat::thread_zext_ln14_5_fu_566_p1() {
    zext_ln14_5_fu_566_p1 = esl_zext<64,9>(or_ln15_1_fu_560_p2.read());
}

void flat::thread_zext_ln14_6_fu_600_p1() {
    zext_ln14_6_fu_600_p1 = esl_zext<64,10>(add_ln15_3_fu_594_p2.read());
}

void flat::thread_zext_ln14_7_fu_611_p1() {
    zext_ln14_7_fu_611_p1 = esl_zext<64,10>(add_ln15_4_fu_605_p2.read());
}

void flat::thread_zext_ln14_8_fu_641_p1() {
    zext_ln14_8_fu_641_p1 = esl_zext<64,10>(add_ln15_5_fu_636_p2.read());
}

void flat::thread_zext_ln14_9_fu_652_p1() {
    zext_ln14_9_fu_652_p1 = esl_zext<64,9>(or_ln15_2_fu_646_p2.read());
}

void flat::thread_zext_ln14_fu_423_p1() {
    zext_ln14_fu_423_p1 = esl_zext<6,3>(r_0_reg_360.read());
}

void flat::thread_zext_ln15_1_fu_591_p1() {
    zext_ln15_1_fu_591_p1 = esl_zext<10,9>(or_ln15_1_reg_888.read());
}

void flat::thread_zext_ln15_2_fu_677_p1() {
    zext_ln15_2_fu_677_p1 = esl_zext<10,9>(or_ln15_2_reg_918.read());
}

void flat::thread_zext_ln15_fu_546_p1() {
    zext_ln15_fu_546_p1 = esl_zext<10,9>(or_ln15_reg_873.read());
}

void flat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_405_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln9_fu_445_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void flat::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q0\" :  \"" << max_pool_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address1\" :  \"" << max_pool_out_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce1\" :  \"" << max_pool_out_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q1\" :  \"" << max_pool_out_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address0\" :  \"" << flat_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce0\" :  \"" << flat_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we0\" :  \"" << flat_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d0\" :  \"" << flat_array_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address1\" :  \"" << flat_array_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce1\" :  \"" << flat_array_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we1\" :  \"" << flat_array_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d1\" :  \"" << flat_array_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

