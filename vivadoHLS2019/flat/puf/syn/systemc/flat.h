// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flat_HH_
#define _flat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flat : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_in< sc_lv<32> > max_pool_out_q0;
    sc_out< sc_lv<9> > max_pool_out_address1;
    sc_out< sc_logic > max_pool_out_ce1;
    sc_in< sc_lv<32> > max_pool_out_q1;
    sc_out< sc_lv<9> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_out< sc_logic > flat_array_we0;
    sc_out< sc_lv<32> > flat_array_d0;
    sc_out< sc_lv<9> > flat_array_address1;
    sc_out< sc_logic > flat_array_ce1;
    sc_out< sc_logic > flat_array_we1;
    sc_out< sc_lv<32> > flat_array_d1;


    // Module declarations
    flat(sc_module_name name);
    SC_HAS_PROCESS(flat);

    ~flat();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > indvar_flatten17_reg_252;
    sc_signal< sc_lv<3> > r_0_reg_263;
    sc_signal< sc_lv<9> > i_0_reg_274;
    sc_signal< sc_lv<5> > indvar_flatten_reg_285;
    sc_signal< sc_lv<9> > i_1_reg_296;
    sc_signal< sc_lv<3> > c_0_reg_307;
    sc_signal< sc_lv<9> > i_2_0_reg_318;
    sc_signal< sc_lv<5> > f_0_0_reg_329;
    sc_signal< sc_lv<1> > icmp_ln6_fu_340_p2;
    sc_signal< sc_lv<1> > icmp_ln6_reg_754;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<6> > add_ln6_fu_346_p2;
    sc_signal< sc_lv<6> > add_ln6_reg_758;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln9_fu_364_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_763;
    sc_signal< sc_lv<3> > select_ln15_3_fu_394_p3;
    sc_signal< sc_lv<3> > select_ln15_3_reg_768;
    sc_signal< sc_lv<9> > select_ln6_fu_442_p3;
    sc_signal< sc_lv<9> > select_ln6_reg_773;
    sc_signal< sc_lv<9> > select_ln15_4_fu_462_p3;
    sc_signal< sc_lv<9> > select_ln15_4_reg_778;
    sc_signal< sc_lv<5> > select_ln15_5_fu_476_p3;
    sc_signal< sc_lv<5> > select_ln15_5_reg_791;
    sc_signal< sc_lv<3> > select_ln15_6_fu_484_p3;
    sc_signal< sc_lv<3> > select_ln15_6_reg_796;
    sc_signal< sc_lv<6> > add_ln14_1_fu_496_p2;
    sc_signal< sc_lv<6> > add_ln14_1_reg_801;
    sc_signal< sc_lv<9> > select_ln9_fu_510_p3;
    sc_signal< sc_lv<9> > select_ln9_reg_811;
    sc_signal< sc_lv<4> > empty_2_fu_518_p1;
    sc_signal< sc_lv<4> > empty_2_reg_816;
    sc_signal< sc_lv<5> > add_ln9_1_fu_556_p2;
    sc_signal< sc_lv<5> > add_ln9_1_reg_836;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<9> > add_ln15_2_fu_718_p2;
    sc_signal< sc_lv<9> > add_ln15_2_reg_871;
    sc_signal< sc_lv<5> > add_ln12_fu_723_p2;
    sc_signal< sc_lv<5> > add_ln12_reg_876;
    sc_signal< sc_lv<5> > select_ln9_1_fu_728_p3;
    sc_signal< sc_lv<5> > select_ln9_1_reg_881;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<6> > ap_phi_mux_indvar_flatten17_phi_fu_256_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_r_0_phi_fu_267_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_0_phi_fu_278_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_indvar_flatten_phi_fu_289_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_1_phi_fu_300_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_311_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_2_0_phi_fu_322_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_f_0_0_phi_fu_333_p4;
    sc_signal< sc_lv<64> > zext_ln14_4_fu_532_p1;
    sc_signal< sc_lv<64> > zext_ln14_12_fu_551_p1;
    sc_signal< sc_lv<64> > zext_ln14_3_fu_562_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln14_5_fu_571_p1;
    sc_signal< sc_lv<64> > zext_ln14_13_fu_588_p1;
    sc_signal< sc_lv<64> > zext_ln14_14_fu_605_p1;
    sc_signal< sc_lv<64> > zext_ln14_6_fu_615_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln14_7_fu_625_p1;
    sc_signal< sc_lv<64> > zext_ln14_15_fu_642_p1;
    sc_signal< sc_lv<64> > zext_ln14_16_fu_659_p1;
    sc_signal< sc_lv<64> > zext_ln14_8_fu_669_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln14_9_fu_679_p1;
    sc_signal< sc_lv<64> > zext_ln14_17_fu_696_p1;
    sc_signal< sc_lv<64> > zext_ln14_18_fu_713_p1;
    sc_signal< sc_lv<64> > zext_ln14_10_fu_739_p1;
    sc_signal< sc_lv<64> > zext_ln14_11_fu_749_p1;
    sc_signal< sc_lv<9> > add_ln15_fu_358_p2;
    sc_signal< sc_lv<3> > r_fu_352_p2;
    sc_signal< sc_lv<5> > tmp_fu_406_p3;
    sc_signal< sc_lv<6> > zext_ln14_1_fu_414_p1;
    sc_signal< sc_lv<6> > zext_ln14_fu_402_p1;
    sc_signal< sc_lv<1> > icmp_ln12_fu_430_p2;
    sc_signal< sc_lv<1> > xor_ln15_fu_424_p2;
    sc_signal< sc_lv<3> > select_ln15_1_fu_378_p3;
    sc_signal< sc_lv<9> > select_ln15_fu_370_p3;
    sc_signal< sc_lv<1> > and_ln15_fu_436_p2;
    sc_signal< sc_lv<9> > add_ln15_1_fu_456_p2;
    sc_signal< sc_lv<9> > select_ln15_2_fu_386_p3;
    sc_signal< sc_lv<1> > or_ln15_7_fu_470_p2;
    sc_signal< sc_lv<3> > c_fu_450_p2;
    sc_signal< sc_lv<6> > zext_ln15_fu_492_p1;
    sc_signal< sc_lv<6> > add_ln14_fu_418_p2;
    sc_signal< sc_lv<10> > zext_ln14_2_fu_522_p1;
    sc_signal< sc_lv<10> > tmp_3_cast_fu_502_p3;
    sc_signal< sc_lv<10> > add_ln14_2_fu_526_p2;
    sc_signal< sc_lv<4> > or_ln12_fu_537_p2;
    sc_signal< sc_lv<10> > tmp_1_fu_543_p3;
    sc_signal< sc_lv<9> > or_ln15_fu_566_p2;
    sc_signal< sc_lv<4> > or_ln12_1_fu_576_p2;
    sc_signal< sc_lv<10> > tmp_3_fu_581_p3;
    sc_signal< sc_lv<4> > or_ln12_2_fu_593_p2;
    sc_signal< sc_lv<10> > tmp_4_fu_598_p3;
    sc_signal< sc_lv<9> > or_ln15_1_fu_610_p2;
    sc_signal< sc_lv<9> > or_ln15_2_fu_620_p2;
    sc_signal< sc_lv<4> > or_ln12_3_fu_630_p2;
    sc_signal< sc_lv<10> > tmp_5_fu_635_p3;
    sc_signal< sc_lv<4> > or_ln12_4_fu_647_p2;
    sc_signal< sc_lv<10> > tmp_6_fu_652_p3;
    sc_signal< sc_lv<9> > or_ln15_3_fu_664_p2;
    sc_signal< sc_lv<9> > or_ln15_4_fu_674_p2;
    sc_signal< sc_lv<4> > or_ln12_5_fu_684_p2;
    sc_signal< sc_lv<10> > tmp_7_fu_689_p3;
    sc_signal< sc_lv<4> > or_ln12_6_fu_701_p2;
    sc_signal< sc_lv<10> > tmp_8_fu_706_p3;
    sc_signal< sc_lv<9> > or_ln15_5_fu_734_p2;
    sc_signal< sc_lv<9> > or_ln15_6_fu_744_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage2;
    static const sc_lv<6> ap_ST_fsm_pp0_stage3;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_50;
    static const sc_lv<5> ap_const_lv5_A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<9> ap_const_lv9_10;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<9> ap_const_lv9_2;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<9> ap_const_lv9_4;
    static const sc_lv<9> ap_const_lv9_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<9> ap_const_lv9_8;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<9> ap_const_lv9_6;
    static const sc_lv<9> ap_const_lv9_7;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_fu_723_p2();
    void thread_add_ln14_1_fu_496_p2();
    void thread_add_ln14_2_fu_526_p2();
    void thread_add_ln14_fu_418_p2();
    void thread_add_ln15_1_fu_456_p2();
    void thread_add_ln15_2_fu_718_p2();
    void thread_add_ln15_fu_358_p2();
    void thread_add_ln6_fu_346_p2();
    void thread_add_ln9_1_fu_556_p2();
    void thread_and_ln15_fu_436_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_311_p4();
    void thread_ap_phi_mux_f_0_0_phi_fu_333_p4();
    void thread_ap_phi_mux_i_0_phi_fu_278_p4();
    void thread_ap_phi_mux_i_1_phi_fu_300_p4();
    void thread_ap_phi_mux_i_2_0_phi_fu_322_p4();
    void thread_ap_phi_mux_indvar_flatten17_phi_fu_256_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_289_p4();
    void thread_ap_phi_mux_r_0_phi_fu_267_p4();
    void thread_ap_ready();
    void thread_c_fu_450_p2();
    void thread_empty_2_fu_518_p1();
    void thread_flat_array_address0();
    void thread_flat_array_address1();
    void thread_flat_array_ce0();
    void thread_flat_array_ce1();
    void thread_flat_array_d0();
    void thread_flat_array_d1();
    void thread_flat_array_we0();
    void thread_flat_array_we1();
    void thread_icmp_ln12_fu_430_p2();
    void thread_icmp_ln6_fu_340_p2();
    void thread_icmp_ln9_fu_364_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_address1();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_ce1();
    void thread_or_ln12_1_fu_576_p2();
    void thread_or_ln12_2_fu_593_p2();
    void thread_or_ln12_3_fu_630_p2();
    void thread_or_ln12_4_fu_647_p2();
    void thread_or_ln12_5_fu_684_p2();
    void thread_or_ln12_6_fu_701_p2();
    void thread_or_ln12_fu_537_p2();
    void thread_or_ln15_1_fu_610_p2();
    void thread_or_ln15_2_fu_620_p2();
    void thread_or_ln15_3_fu_664_p2();
    void thread_or_ln15_4_fu_674_p2();
    void thread_or_ln15_5_fu_734_p2();
    void thread_or_ln15_6_fu_744_p2();
    void thread_or_ln15_7_fu_470_p2();
    void thread_or_ln15_fu_566_p2();
    void thread_r_fu_352_p2();
    void thread_select_ln15_1_fu_378_p3();
    void thread_select_ln15_2_fu_386_p3();
    void thread_select_ln15_3_fu_394_p3();
    void thread_select_ln15_4_fu_462_p3();
    void thread_select_ln15_5_fu_476_p3();
    void thread_select_ln15_6_fu_484_p3();
    void thread_select_ln15_fu_370_p3();
    void thread_select_ln6_fu_442_p3();
    void thread_select_ln9_1_fu_728_p3();
    void thread_select_ln9_fu_510_p3();
    void thread_tmp_1_fu_543_p3();
    void thread_tmp_3_cast_fu_502_p3();
    void thread_tmp_3_fu_581_p3();
    void thread_tmp_4_fu_598_p3();
    void thread_tmp_5_fu_635_p3();
    void thread_tmp_6_fu_652_p3();
    void thread_tmp_7_fu_689_p3();
    void thread_tmp_8_fu_706_p3();
    void thread_tmp_fu_406_p3();
    void thread_xor_ln15_fu_424_p2();
    void thread_zext_ln14_10_fu_739_p1();
    void thread_zext_ln14_11_fu_749_p1();
    void thread_zext_ln14_12_fu_551_p1();
    void thread_zext_ln14_13_fu_588_p1();
    void thread_zext_ln14_14_fu_605_p1();
    void thread_zext_ln14_15_fu_642_p1();
    void thread_zext_ln14_16_fu_659_p1();
    void thread_zext_ln14_17_fu_696_p1();
    void thread_zext_ln14_18_fu_713_p1();
    void thread_zext_ln14_1_fu_414_p1();
    void thread_zext_ln14_2_fu_522_p1();
    void thread_zext_ln14_3_fu_562_p1();
    void thread_zext_ln14_4_fu_532_p1();
    void thread_zext_ln14_5_fu_571_p1();
    void thread_zext_ln14_6_fu_615_p1();
    void thread_zext_ln14_7_fu_625_p1();
    void thread_zext_ln14_8_fu_669_p1();
    void thread_zext_ln14_9_fu_679_p1();
    void thread_zext_ln14_fu_402_p1();
    void thread_zext_ln15_fu_492_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
