// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> flat::ap_ST_fsm_state1 = "1";
const sc_lv<6> flat::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> flat::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<6> flat::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<6> flat::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<6> flat::ap_ST_fsm_state7 = "100000";
const sc_lv<32> flat::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool flat::ap_const_boolean_1 = true;
const sc_lv<32> flat::ap_const_lv32_1 = "1";
const bool flat::ap_const_boolean_0 = false;
const sc_lv<1> flat::ap_const_lv1_0 = "0";
const sc_lv<32> flat::ap_const_lv32_2 = "10";
const sc_lv<32> flat::ap_const_lv32_3 = "11";
const sc_lv<32> flat::ap_const_lv32_4 = "100";
const sc_lv<1> flat::ap_const_lv1_1 = "1";
const sc_lv<6> flat::ap_const_lv6_0 = "000000";
const sc_lv<3> flat::ap_const_lv3_0 = "000";
const sc_lv<9> flat::ap_const_lv9_0 = "000000000";
const sc_lv<5> flat::ap_const_lv5_0 = "00000";
const sc_lv<6> flat::ap_const_lv6_32 = "110010";
const sc_lv<6> flat::ap_const_lv6_1 = "1";
const sc_lv<3> flat::ap_const_lv3_1 = "1";
const sc_lv<9> flat::ap_const_lv9_50 = "1010000";
const sc_lv<5> flat::ap_const_lv5_A = "1010";
const sc_lv<2> flat::ap_const_lv2_0 = "00";
const sc_lv<5> flat::ap_const_lv5_10 = "10000";
const sc_lv<9> flat::ap_const_lv9_10 = "10000";
const sc_lv<4> flat::ap_const_lv4_0 = "0000";
const sc_lv<4> flat::ap_const_lv4_1 = "1";
const sc_lv<5> flat::ap_const_lv5_1 = "1";
const sc_lv<9> flat::ap_const_lv9_1 = "1";
const sc_lv<4> flat::ap_const_lv4_2 = "10";
const sc_lv<4> flat::ap_const_lv4_3 = "11";
const sc_lv<9> flat::ap_const_lv9_2 = "10";
const sc_lv<9> flat::ap_const_lv9_3 = "11";
const sc_lv<4> flat::ap_const_lv4_4 = "100";
const sc_lv<4> flat::ap_const_lv4_5 = "101";
const sc_lv<9> flat::ap_const_lv9_4 = "100";
const sc_lv<9> flat::ap_const_lv9_5 = "101";
const sc_lv<4> flat::ap_const_lv4_6 = "110";
const sc_lv<4> flat::ap_const_lv4_7 = "111";
const sc_lv<9> flat::ap_const_lv9_8 = "1000";
const sc_lv<5> flat::ap_const_lv5_8 = "1000";
const sc_lv<9> flat::ap_const_lv9_6 = "110";
const sc_lv<9> flat::ap_const_lv9_7 = "111";
const sc_lv<32> flat::ap_const_lv32_5 = "101";

flat::flat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln12_fu_723_p2);
    sensitive << ( select_ln15_5_reg_791 );

    SC_METHOD(thread_add_ln14_1_fu_496_p2);
    sensitive << ( zext_ln15_fu_492_p1 );
    sensitive << ( add_ln14_fu_418_p2 );

    SC_METHOD(thread_add_ln14_2_fu_526_p2);
    sensitive << ( zext_ln14_2_fu_522_p1 );
    sensitive << ( tmp_3_cast_fu_502_p3 );

    SC_METHOD(thread_add_ln14_fu_418_p2);
    sensitive << ( zext_ln14_1_fu_414_p1 );
    sensitive << ( zext_ln14_fu_402_p1 );

    SC_METHOD(thread_add_ln15_1_fu_456_p2);
    sensitive << ( select_ln15_fu_370_p3 );

    SC_METHOD(thread_add_ln15_2_fu_718_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_add_ln15_fu_358_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_278_p4 );

    SC_METHOD(thread_add_ln6_fu_346_p2);
    sensitive << ( ap_phi_mux_indvar_flatten17_phi_fu_256_p4 );

    SC_METHOD(thread_add_ln9_1_fu_556_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_289_p4 );

    SC_METHOD(thread_and_ln15_fu_436_p2);
    sensitive << ( icmp_ln12_fu_430_p2 );
    sensitive << ( xor_ln15_fu_424_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln6_fu_340_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_c_0_phi_fu_311_p4);
    sensitive << ( c_0_reg_307 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln15_6_reg_796 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_f_0_0_phi_fu_333_p4);
    sensitive << ( f_0_0_reg_329 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln12_reg_876 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_278_p4);
    sensitive << ( i_0_reg_274 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln6_reg_773 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_300_p4);
    sensitive << ( i_1_reg_296 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln9_reg_811 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_2_0_phi_fu_322_p4);
    sensitive << ( i_2_0_reg_318 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln15_2_reg_871 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten17_phi_fu_256_p4);
    sensitive << ( indvar_flatten17_reg_252 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln6_reg_758 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_289_p4);
    sensitive << ( indvar_flatten_reg_285 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln9_1_reg_881 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_r_0_phi_fu_267_p4);
    sensitive << ( r_0_reg_263 );
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln15_3_reg_768 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_c_fu_450_p2);
    sensitive << ( select_ln15_1_fu_378_p3 );

    SC_METHOD(thread_empty_2_fu_518_p1);
    sensitive << ( select_ln15_5_fu_476_p3 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_3_fu_562_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_6_fu_615_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_8_fu_669_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_10_fu_739_p1 );

    SC_METHOD(thread_flat_array_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_5_fu_571_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_7_fu_625_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_9_fu_679_p1 );
    sensitive << ( zext_ln14_11_fu_749_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_d0);
    sensitive << ( max_pool_out_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_flat_array_d1);
    sensitive << ( max_pool_out_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_we1);
    sensitive << ( icmp_ln6_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_icmp_ln12_fu_430_p2);
    sensitive << ( icmp_ln6_fu_340_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_f_0_0_phi_fu_333_p4 );

    SC_METHOD(thread_icmp_ln6_fu_340_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten17_phi_fu_256_p4 );

    SC_METHOD(thread_icmp_ln9_fu_364_p2);
    sensitive << ( icmp_ln6_fu_340_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_289_p4 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_4_fu_532_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_13_fu_588_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_15_fu_642_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_17_fu_696_p1 );

    SC_METHOD(thread_max_pool_out_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_12_fu_551_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_14_fu_605_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_16_fu_659_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_18_fu_713_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_max_pool_out_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_or_ln12_1_fu_576_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_2_fu_593_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_3_fu_630_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_4_fu_647_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_5_fu_684_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_6_fu_701_p2);
    sensitive << ( empty_2_reg_816 );

    SC_METHOD(thread_or_ln12_fu_537_p2);
    sensitive << ( empty_2_fu_518_p1 );

    SC_METHOD(thread_or_ln15_1_fu_610_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_2_fu_620_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_3_fu_664_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_4_fu_674_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_5_fu_734_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_6_fu_744_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_or_ln15_7_fu_470_p2);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( and_ln15_fu_436_p2 );

    SC_METHOD(thread_or_ln15_fu_566_p2);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_r_fu_352_p2);
    sensitive << ( ap_phi_mux_r_0_phi_fu_267_p4 );

    SC_METHOD(thread_select_ln15_1_fu_378_p3);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( ap_phi_mux_c_0_phi_fu_311_p4 );

    SC_METHOD(thread_select_ln15_2_fu_386_p3);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( ap_phi_mux_i_2_0_phi_fu_322_p4 );
    sensitive << ( add_ln15_fu_358_p2 );

    SC_METHOD(thread_select_ln15_3_fu_394_p3);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( ap_phi_mux_r_0_phi_fu_267_p4 );
    sensitive << ( r_fu_352_p2 );

    SC_METHOD(thread_select_ln15_4_fu_462_p3);
    sensitive << ( and_ln15_fu_436_p2 );
    sensitive << ( add_ln15_1_fu_456_p2 );
    sensitive << ( select_ln15_2_fu_386_p3 );

    SC_METHOD(thread_select_ln15_5_fu_476_p3);
    sensitive << ( ap_phi_mux_f_0_0_phi_fu_333_p4 );
    sensitive << ( or_ln15_7_fu_470_p2 );

    SC_METHOD(thread_select_ln15_6_fu_484_p3);
    sensitive << ( select_ln15_1_fu_378_p3 );
    sensitive << ( and_ln15_fu_436_p2 );
    sensitive << ( c_fu_450_p2 );

    SC_METHOD(thread_select_ln15_fu_370_p3);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( ap_phi_mux_i_1_phi_fu_300_p4 );
    sensitive << ( add_ln15_fu_358_p2 );

    SC_METHOD(thread_select_ln6_fu_442_p3);
    sensitive << ( icmp_ln9_fu_364_p2 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_278_p4 );
    sensitive << ( add_ln15_fu_358_p2 );

    SC_METHOD(thread_select_ln9_1_fu_728_p3);
    sensitive << ( icmp_ln9_reg_763 );
    sensitive << ( add_ln9_1_reg_836 );

    SC_METHOD(thread_select_ln9_fu_510_p3);
    sensitive << ( select_ln15_fu_370_p3 );
    sensitive << ( and_ln15_fu_436_p2 );
    sensitive << ( add_ln15_1_fu_456_p2 );

    SC_METHOD(thread_tmp_1_fu_543_p3);
    sensitive << ( add_ln14_1_fu_496_p2 );
    sensitive << ( or_ln12_fu_537_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_502_p3);
    sensitive << ( add_ln14_1_fu_496_p2 );

    SC_METHOD(thread_tmp_3_fu_581_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_1_fu_576_p2 );

    SC_METHOD(thread_tmp_4_fu_598_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_2_fu_593_p2 );

    SC_METHOD(thread_tmp_5_fu_635_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_3_fu_630_p2 );

    SC_METHOD(thread_tmp_6_fu_652_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_4_fu_647_p2 );

    SC_METHOD(thread_tmp_7_fu_689_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_5_fu_684_p2 );

    SC_METHOD(thread_tmp_8_fu_706_p3);
    sensitive << ( add_ln14_1_reg_801 );
    sensitive << ( or_ln12_6_fu_701_p2 );

    SC_METHOD(thread_tmp_fu_406_p3);
    sensitive << ( select_ln15_3_fu_394_p3 );

    SC_METHOD(thread_xor_ln15_fu_424_p2);
    sensitive << ( icmp_ln9_fu_364_p2 );

    SC_METHOD(thread_zext_ln14_10_fu_739_p1);
    sensitive << ( or_ln15_5_fu_734_p2 );

    SC_METHOD(thread_zext_ln14_11_fu_749_p1);
    sensitive << ( or_ln15_6_fu_744_p2 );

    SC_METHOD(thread_zext_ln14_12_fu_551_p1);
    sensitive << ( tmp_1_fu_543_p3 );

    SC_METHOD(thread_zext_ln14_13_fu_588_p1);
    sensitive << ( tmp_3_fu_581_p3 );

    SC_METHOD(thread_zext_ln14_14_fu_605_p1);
    sensitive << ( tmp_4_fu_598_p3 );

    SC_METHOD(thread_zext_ln14_15_fu_642_p1);
    sensitive << ( tmp_5_fu_635_p3 );

    SC_METHOD(thread_zext_ln14_16_fu_659_p1);
    sensitive << ( tmp_6_fu_652_p3 );

    SC_METHOD(thread_zext_ln14_17_fu_696_p1);
    sensitive << ( tmp_7_fu_689_p3 );

    SC_METHOD(thread_zext_ln14_18_fu_713_p1);
    sensitive << ( tmp_8_fu_706_p3 );

    SC_METHOD(thread_zext_ln14_1_fu_414_p1);
    sensitive << ( tmp_fu_406_p3 );

    SC_METHOD(thread_zext_ln14_2_fu_522_p1);
    sensitive << ( select_ln15_5_fu_476_p3 );

    SC_METHOD(thread_zext_ln14_3_fu_562_p1);
    sensitive << ( select_ln15_4_reg_778 );

    SC_METHOD(thread_zext_ln14_4_fu_532_p1);
    sensitive << ( add_ln14_2_fu_526_p2 );

    SC_METHOD(thread_zext_ln14_5_fu_571_p1);
    sensitive << ( or_ln15_fu_566_p2 );

    SC_METHOD(thread_zext_ln14_6_fu_615_p1);
    sensitive << ( or_ln15_1_fu_610_p2 );

    SC_METHOD(thread_zext_ln14_7_fu_625_p1);
    sensitive << ( or_ln15_2_fu_620_p2 );

    SC_METHOD(thread_zext_ln14_8_fu_669_p1);
    sensitive << ( or_ln15_3_fu_664_p2 );

    SC_METHOD(thread_zext_ln14_9_fu_679_p1);
    sensitive << ( or_ln15_4_fu_674_p2 );

    SC_METHOD(thread_zext_ln14_fu_402_p1);
    sensitive << ( select_ln15_3_fu_394_p3 );

    SC_METHOD(thread_zext_ln15_fu_492_p1);
    sensitive << ( select_ln15_6_fu_484_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln6_fu_340_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_q0, "(port)max_pool_out_q0");
    sc_trace(mVcdFile, max_pool_out_address1, "(port)max_pool_out_address1");
    sc_trace(mVcdFile, max_pool_out_ce1, "(port)max_pool_out_ce1");
    sc_trace(mVcdFile, max_pool_out_q1, "(port)max_pool_out_q1");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "(port)flat_array_we0");
    sc_trace(mVcdFile, flat_array_d0, "(port)flat_array_d0");
    sc_trace(mVcdFile, flat_array_address1, "(port)flat_array_address1");
    sc_trace(mVcdFile, flat_array_ce1, "(port)flat_array_ce1");
    sc_trace(mVcdFile, flat_array_we1, "(port)flat_array_we1");
    sc_trace(mVcdFile, flat_array_d1, "(port)flat_array_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten17_reg_252, "indvar_flatten17_reg_252");
    sc_trace(mVcdFile, r_0_reg_263, "r_0_reg_263");
    sc_trace(mVcdFile, i_0_reg_274, "i_0_reg_274");
    sc_trace(mVcdFile, indvar_flatten_reg_285, "indvar_flatten_reg_285");
    sc_trace(mVcdFile, i_1_reg_296, "i_1_reg_296");
    sc_trace(mVcdFile, c_0_reg_307, "c_0_reg_307");
    sc_trace(mVcdFile, i_2_0_reg_318, "i_2_0_reg_318");
    sc_trace(mVcdFile, f_0_0_reg_329, "f_0_0_reg_329");
    sc_trace(mVcdFile, icmp_ln6_fu_340_p2, "icmp_ln6_fu_340_p2");
    sc_trace(mVcdFile, icmp_ln6_reg_754, "icmp_ln6_reg_754");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter1, "ap_block_state6_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln6_fu_346_p2, "add_ln6_fu_346_p2");
    sc_trace(mVcdFile, add_ln6_reg_758, "add_ln6_reg_758");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, icmp_ln9_fu_364_p2, "icmp_ln9_fu_364_p2");
    sc_trace(mVcdFile, icmp_ln9_reg_763, "icmp_ln9_reg_763");
    sc_trace(mVcdFile, select_ln15_3_fu_394_p3, "select_ln15_3_fu_394_p3");
    sc_trace(mVcdFile, select_ln15_3_reg_768, "select_ln15_3_reg_768");
    sc_trace(mVcdFile, select_ln6_fu_442_p3, "select_ln6_fu_442_p3");
    sc_trace(mVcdFile, select_ln6_reg_773, "select_ln6_reg_773");
    sc_trace(mVcdFile, select_ln15_4_fu_462_p3, "select_ln15_4_fu_462_p3");
    sc_trace(mVcdFile, select_ln15_4_reg_778, "select_ln15_4_reg_778");
    sc_trace(mVcdFile, select_ln15_5_fu_476_p3, "select_ln15_5_fu_476_p3");
    sc_trace(mVcdFile, select_ln15_5_reg_791, "select_ln15_5_reg_791");
    sc_trace(mVcdFile, select_ln15_6_fu_484_p3, "select_ln15_6_fu_484_p3");
    sc_trace(mVcdFile, select_ln15_6_reg_796, "select_ln15_6_reg_796");
    sc_trace(mVcdFile, add_ln14_1_fu_496_p2, "add_ln14_1_fu_496_p2");
    sc_trace(mVcdFile, add_ln14_1_reg_801, "add_ln14_1_reg_801");
    sc_trace(mVcdFile, select_ln9_fu_510_p3, "select_ln9_fu_510_p3");
    sc_trace(mVcdFile, select_ln9_reg_811, "select_ln9_reg_811");
    sc_trace(mVcdFile, empty_2_fu_518_p1, "empty_2_fu_518_p1");
    sc_trace(mVcdFile, empty_2_reg_816, "empty_2_reg_816");
    sc_trace(mVcdFile, add_ln9_1_fu_556_p2, "add_ln9_1_fu_556_p2");
    sc_trace(mVcdFile, add_ln9_1_reg_836, "add_ln9_1_reg_836");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, add_ln15_2_fu_718_p2, "add_ln15_2_fu_718_p2");
    sc_trace(mVcdFile, add_ln15_2_reg_871, "add_ln15_2_reg_871");
    sc_trace(mVcdFile, add_ln12_fu_723_p2, "add_ln12_fu_723_p2");
    sc_trace(mVcdFile, add_ln12_reg_876, "add_ln12_reg_876");
    sc_trace(mVcdFile, select_ln9_1_fu_728_p3, "select_ln9_1_fu_728_p3");
    sc_trace(mVcdFile, select_ln9_1_reg_881, "select_ln9_1_reg_881");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten17_phi_fu_256_p4, "ap_phi_mux_indvar_flatten17_phi_fu_256_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_r_0_phi_fu_267_p4, "ap_phi_mux_r_0_phi_fu_267_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_278_p4, "ap_phi_mux_i_0_phi_fu_278_p4");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_289_p4, "ap_phi_mux_indvar_flatten_phi_fu_289_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_300_p4, "ap_phi_mux_i_1_phi_fu_300_p4");
    sc_trace(mVcdFile, ap_phi_mux_c_0_phi_fu_311_p4, "ap_phi_mux_c_0_phi_fu_311_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_2_0_phi_fu_322_p4, "ap_phi_mux_i_2_0_phi_fu_322_p4");
    sc_trace(mVcdFile, ap_phi_mux_f_0_0_phi_fu_333_p4, "ap_phi_mux_f_0_0_phi_fu_333_p4");
    sc_trace(mVcdFile, zext_ln14_4_fu_532_p1, "zext_ln14_4_fu_532_p1");
    sc_trace(mVcdFile, zext_ln14_12_fu_551_p1, "zext_ln14_12_fu_551_p1");
    sc_trace(mVcdFile, zext_ln14_3_fu_562_p1, "zext_ln14_3_fu_562_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln14_5_fu_571_p1, "zext_ln14_5_fu_571_p1");
    sc_trace(mVcdFile, zext_ln14_13_fu_588_p1, "zext_ln14_13_fu_588_p1");
    sc_trace(mVcdFile, zext_ln14_14_fu_605_p1, "zext_ln14_14_fu_605_p1");
    sc_trace(mVcdFile, zext_ln14_6_fu_615_p1, "zext_ln14_6_fu_615_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln14_7_fu_625_p1, "zext_ln14_7_fu_625_p1");
    sc_trace(mVcdFile, zext_ln14_15_fu_642_p1, "zext_ln14_15_fu_642_p1");
    sc_trace(mVcdFile, zext_ln14_16_fu_659_p1, "zext_ln14_16_fu_659_p1");
    sc_trace(mVcdFile, zext_ln14_8_fu_669_p1, "zext_ln14_8_fu_669_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, zext_ln14_9_fu_679_p1, "zext_ln14_9_fu_679_p1");
    sc_trace(mVcdFile, zext_ln14_17_fu_696_p1, "zext_ln14_17_fu_696_p1");
    sc_trace(mVcdFile, zext_ln14_18_fu_713_p1, "zext_ln14_18_fu_713_p1");
    sc_trace(mVcdFile, zext_ln14_10_fu_739_p1, "zext_ln14_10_fu_739_p1");
    sc_trace(mVcdFile, zext_ln14_11_fu_749_p1, "zext_ln14_11_fu_749_p1");
    sc_trace(mVcdFile, add_ln15_fu_358_p2, "add_ln15_fu_358_p2");
    sc_trace(mVcdFile, r_fu_352_p2, "r_fu_352_p2");
    sc_trace(mVcdFile, tmp_fu_406_p3, "tmp_fu_406_p3");
    sc_trace(mVcdFile, zext_ln14_1_fu_414_p1, "zext_ln14_1_fu_414_p1");
    sc_trace(mVcdFile, zext_ln14_fu_402_p1, "zext_ln14_fu_402_p1");
    sc_trace(mVcdFile, icmp_ln12_fu_430_p2, "icmp_ln12_fu_430_p2");
    sc_trace(mVcdFile, xor_ln15_fu_424_p2, "xor_ln15_fu_424_p2");
    sc_trace(mVcdFile, select_ln15_1_fu_378_p3, "select_ln15_1_fu_378_p3");
    sc_trace(mVcdFile, select_ln15_fu_370_p3, "select_ln15_fu_370_p3");
    sc_trace(mVcdFile, and_ln15_fu_436_p2, "and_ln15_fu_436_p2");
    sc_trace(mVcdFile, add_ln15_1_fu_456_p2, "add_ln15_1_fu_456_p2");
    sc_trace(mVcdFile, select_ln15_2_fu_386_p3, "select_ln15_2_fu_386_p3");
    sc_trace(mVcdFile, or_ln15_7_fu_470_p2, "or_ln15_7_fu_470_p2");
    sc_trace(mVcdFile, c_fu_450_p2, "c_fu_450_p2");
    sc_trace(mVcdFile, zext_ln15_fu_492_p1, "zext_ln15_fu_492_p1");
    sc_trace(mVcdFile, add_ln14_fu_418_p2, "add_ln14_fu_418_p2");
    sc_trace(mVcdFile, zext_ln14_2_fu_522_p1, "zext_ln14_2_fu_522_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_502_p3, "tmp_3_cast_fu_502_p3");
    sc_trace(mVcdFile, add_ln14_2_fu_526_p2, "add_ln14_2_fu_526_p2");
    sc_trace(mVcdFile, or_ln12_fu_537_p2, "or_ln12_fu_537_p2");
    sc_trace(mVcdFile, tmp_1_fu_543_p3, "tmp_1_fu_543_p3");
    sc_trace(mVcdFile, or_ln15_fu_566_p2, "or_ln15_fu_566_p2");
    sc_trace(mVcdFile, or_ln12_1_fu_576_p2, "or_ln12_1_fu_576_p2");
    sc_trace(mVcdFile, tmp_3_fu_581_p3, "tmp_3_fu_581_p3");
    sc_trace(mVcdFile, or_ln12_2_fu_593_p2, "or_ln12_2_fu_593_p2");
    sc_trace(mVcdFile, tmp_4_fu_598_p3, "tmp_4_fu_598_p3");
    sc_trace(mVcdFile, or_ln15_1_fu_610_p2, "or_ln15_1_fu_610_p2");
    sc_trace(mVcdFile, or_ln15_2_fu_620_p2, "or_ln15_2_fu_620_p2");
    sc_trace(mVcdFile, or_ln12_3_fu_630_p2, "or_ln12_3_fu_630_p2");
    sc_trace(mVcdFile, tmp_5_fu_635_p3, "tmp_5_fu_635_p3");
    sc_trace(mVcdFile, or_ln12_4_fu_647_p2, "or_ln12_4_fu_647_p2");
    sc_trace(mVcdFile, tmp_6_fu_652_p3, "tmp_6_fu_652_p3");
    sc_trace(mVcdFile, or_ln15_3_fu_664_p2, "or_ln15_3_fu_664_p2");
    sc_trace(mVcdFile, or_ln15_4_fu_674_p2, "or_ln15_4_fu_674_p2");
    sc_trace(mVcdFile, or_ln12_5_fu_684_p2, "or_ln12_5_fu_684_p2");
    sc_trace(mVcdFile, tmp_7_fu_689_p3, "tmp_7_fu_689_p3");
    sc_trace(mVcdFile, or_ln12_6_fu_701_p2, "or_ln12_6_fu_701_p2");
    sc_trace(mVcdFile, tmp_8_fu_706_p3, "tmp_8_fu_706_p3");
    sc_trace(mVcdFile, or_ln15_5_fu_734_p2, "or_ln15_5_fu_734_p2");
    sc_trace(mVcdFile, or_ln15_6_fu_744_p2, "or_ln15_6_fu_744_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("flat.hdltvin.dat");
    mHdltvoutHandle.open("flat.hdltvout.dat");
}

flat::~flat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void flat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        c_0_reg_307 = select_ln15_6_reg_796.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_307 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        f_0_0_reg_329 = add_ln12_reg_876.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_0_reg_329 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_274 = select_ln6_reg_773.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_274 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_1_reg_296 = select_ln9_reg_811.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_reg_296 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_2_0_reg_318 = add_ln15_2_reg_871.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_2_0_reg_318 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten17_reg_252 = add_ln6_reg_758.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten17_reg_252 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_285 = select_ln9_1_reg_881.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_285 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        r_0_reg_263 = select_ln15_3_reg_768.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_263 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        add_ln12_reg_876 = add_ln12_fu_723_p2.read();
        add_ln15_2_reg_871 = add_ln15_2_fu_718_p2.read();
        select_ln9_1_reg_881 = select_ln9_1_fu_728_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_340_p2.read(), ap_const_lv1_0))) {
        add_ln14_1_reg_801 = add_ln14_1_fu_496_p2.read();
        add_ln9_1_reg_836 = add_ln9_1_fu_556_p2.read();
        empty_2_reg_816 = empty_2_fu_518_p1.read();
        icmp_ln9_reg_763 = icmp_ln9_fu_364_p2.read();
        select_ln15_4_reg_778 = select_ln15_4_fu_462_p3.read();
        select_ln15_5_reg_791 = select_ln15_5_fu_476_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln6_reg_758 = add_ln6_fu_346_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln6_reg_754 = icmp_ln6_fu_340_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_340_p2.read(), ap_const_lv1_0))) {
        select_ln15_3_reg_768 = select_ln15_3_fu_394_p3.read();
        select_ln15_6_reg_796 = select_ln15_6_fu_484_p3.read();
        select_ln6_reg_773 = select_ln6_fu_442_p3.read();
        select_ln9_reg_811 = select_ln9_fu_510_p3.read();
    }
}

void flat::thread_add_ln12_fu_723_p2() {
    add_ln12_fu_723_p2 = (!ap_const_lv5_8.is_01() || !select_ln15_5_reg_791.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_8) + sc_biguint<5>(select_ln15_5_reg_791.read()));
}

void flat::thread_add_ln14_1_fu_496_p2() {
    add_ln14_1_fu_496_p2 = (!zext_ln15_fu_492_p1.read().is_01() || !add_ln14_fu_418_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln15_fu_492_p1.read()) + sc_biguint<6>(add_ln14_fu_418_p2.read()));
}

void flat::thread_add_ln14_2_fu_526_p2() {
    add_ln14_2_fu_526_p2 = (!zext_ln14_2_fu_522_p1.read().is_01() || !tmp_3_cast_fu_502_p3.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln14_2_fu_522_p1.read()) + sc_biguint<10>(tmp_3_cast_fu_502_p3.read()));
}

void flat::thread_add_ln14_fu_418_p2() {
    add_ln14_fu_418_p2 = (!zext_ln14_1_fu_414_p1.read().is_01() || !zext_ln14_fu_402_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln14_1_fu_414_p1.read()) + sc_biguint<6>(zext_ln14_fu_402_p1.read()));
}

void flat::thread_add_ln15_1_fu_456_p2() {
    add_ln15_1_fu_456_p2 = (!ap_const_lv9_10.is_01() || !select_ln15_fu_370_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_10) + sc_biguint<9>(select_ln15_fu_370_p3.read()));
}

void flat::thread_add_ln15_2_fu_718_p2() {
    add_ln15_2_fu_718_p2 = (!ap_const_lv9_8.is_01() || !select_ln15_4_reg_778.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_8) + sc_biguint<9>(select_ln15_4_reg_778.read()));
}

void flat::thread_add_ln15_fu_358_p2() {
    add_ln15_fu_358_p2 = (!ap_const_lv9_50.is_01() || !ap_phi_mux_i_0_phi_fu_278_p4.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_50) + sc_biguint<9>(ap_phi_mux_i_0_phi_fu_278_p4.read()));
}

void flat::thread_add_ln6_fu_346_p2() {
    add_ln6_fu_346_p2 = (!ap_phi_mux_indvar_flatten17_phi_fu_256_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_indvar_flatten17_phi_fu_256_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void flat::thread_add_ln9_1_fu_556_p2() {
    add_ln9_1_fu_556_p2 = (!ap_const_lv5_1.is_01() || !ap_phi_mux_indvar_flatten_phi_fu_289_p4.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_1) + sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_289_p4.read()));
}

void flat::thread_and_ln15_fu_436_p2() {
    and_ln15_fu_436_p2 = (icmp_ln12_fu_430_p2.read() & xor_ln15_fu_424_p2.read());
}

void flat::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void flat::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void flat::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void flat::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void flat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void flat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void flat::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state6_pp0_stage0_iter1() {
    ap_block_state6_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln6_fu_340_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void flat::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void flat::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void flat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flat::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void flat::thread_ap_phi_mux_c_0_phi_fu_311_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_0_phi_fu_311_p4 = select_ln15_6_reg_796.read();
    } else {
        ap_phi_mux_c_0_phi_fu_311_p4 = c_0_reg_307.read();
    }
}

void flat::thread_ap_phi_mux_f_0_0_phi_fu_333_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_f_0_0_phi_fu_333_p4 = add_ln12_reg_876.read();
    } else {
        ap_phi_mux_f_0_0_phi_fu_333_p4 = f_0_0_reg_329.read();
    }
}

void flat::thread_ap_phi_mux_i_0_phi_fu_278_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_278_p4 = select_ln6_reg_773.read();
    } else {
        ap_phi_mux_i_0_phi_fu_278_p4 = i_0_reg_274.read();
    }
}

void flat::thread_ap_phi_mux_i_1_phi_fu_300_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_1_phi_fu_300_p4 = select_ln9_reg_811.read();
    } else {
        ap_phi_mux_i_1_phi_fu_300_p4 = i_1_reg_296.read();
    }
}

void flat::thread_ap_phi_mux_i_2_0_phi_fu_322_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_2_0_phi_fu_322_p4 = add_ln15_2_reg_871.read();
    } else {
        ap_phi_mux_i_2_0_phi_fu_322_p4 = i_2_0_reg_318.read();
    }
}

void flat::thread_ap_phi_mux_indvar_flatten17_phi_fu_256_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten17_phi_fu_256_p4 = add_ln6_reg_758.read();
    } else {
        ap_phi_mux_indvar_flatten17_phi_fu_256_p4 = indvar_flatten17_reg_252.read();
    }
}

void flat::thread_ap_phi_mux_indvar_flatten_phi_fu_289_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_289_p4 = select_ln9_1_reg_881.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_289_p4 = indvar_flatten_reg_285.read();
    }
}

void flat::thread_ap_phi_mux_r_0_phi_fu_267_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_r_0_phi_fu_267_p4 = select_ln15_3_reg_768.read();
    } else {
        ap_phi_mux_r_0_phi_fu_267_p4 = r_0_reg_263.read();
    }
}

void flat::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void flat::thread_c_fu_450_p2() {
    c_fu_450_p2 = (!ap_const_lv3_1.is_01() || !select_ln15_1_fu_378_p3.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(select_ln15_1_fu_378_p3.read()));
}

void flat::thread_empty_2_fu_518_p1() {
    empty_2_fu_518_p1 = select_ln15_5_fu_476_p3.read().range(4-1, 0);
}

void flat::thread_flat_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_10_fu_739_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_8_fu_669_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_6_fu_615_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_3_fu_562_p1.read());
    } else {
        flat_array_address0 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_11_fu_749_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_9_fu_679_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_7_fu_625_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_5_fu_571_p1.read());
    } else {
        flat_array_address1 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        flat_array_ce1 = ap_const_logic_1;
    } else {
        flat_array_ce1 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_d0() {
    flat_array_d0 = max_pool_out_q0.read();
}

void flat::thread_flat_array_d1() {
    flat_array_d1 = max_pool_out_q1.read();
}

void flat::thread_flat_array_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        flat_array_we0 = ap_const_logic_1;
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_754.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        flat_array_we1 = ap_const_logic_1;
    } else {
        flat_array_we1 = ap_const_logic_0;
    }
}

void flat::thread_icmp_ln12_fu_430_p2() {
    icmp_ln12_fu_430_p2 = (!ap_phi_mux_f_0_0_phi_fu_333_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_f_0_0_phi_fu_333_p4.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln6_fu_340_p2() {
    icmp_ln6_fu_340_p2 = (!ap_phi_mux_indvar_flatten17_phi_fu_256_p4.read().is_01() || !ap_const_lv6_32.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten17_phi_fu_256_p4.read() == ap_const_lv6_32);
}

void flat::thread_icmp_ln9_fu_364_p2() {
    icmp_ln9_fu_364_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_289_p4.read().is_01() || !ap_const_lv5_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_289_p4.read() == ap_const_lv5_A);
}

void flat::thread_max_pool_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_17_fu_696_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_15_fu_642_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_13_fu_588_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_4_fu_532_p1.read());
        } else {
            max_pool_out_address0 = "XXXXXXXXX";
        }
    } else {
        max_pool_out_address0 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_18_fu_713_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_16_fu_659_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_14_fu_605_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_12_fu_551_p1.read());
        } else {
            max_pool_out_address1 = "XXXXXXXXX";
        }
    } else {
        max_pool_out_address1 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void flat::thread_max_pool_out_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)))) {
        max_pool_out_ce1 = ap_const_logic_1;
    } else {
        max_pool_out_ce1 = ap_const_logic_0;
    }
}

void flat::thread_or_ln12_1_fu_576_p2() {
    or_ln12_1_fu_576_p2 = (empty_2_reg_816.read() | ap_const_lv4_2);
}

void flat::thread_or_ln12_2_fu_593_p2() {
    or_ln12_2_fu_593_p2 = (empty_2_reg_816.read() | ap_const_lv4_3);
}

void flat::thread_or_ln12_3_fu_630_p2() {
    or_ln12_3_fu_630_p2 = (empty_2_reg_816.read() | ap_const_lv4_4);
}

void flat::thread_or_ln12_4_fu_647_p2() {
    or_ln12_4_fu_647_p2 = (empty_2_reg_816.read() | ap_const_lv4_5);
}

void flat::thread_or_ln12_5_fu_684_p2() {
    or_ln12_5_fu_684_p2 = (empty_2_reg_816.read() | ap_const_lv4_6);
}

void flat::thread_or_ln12_6_fu_701_p2() {
    or_ln12_6_fu_701_p2 = (empty_2_reg_816.read() | ap_const_lv4_7);
}

void flat::thread_or_ln12_fu_537_p2() {
    or_ln12_fu_537_p2 = (empty_2_fu_518_p1.read() | ap_const_lv4_1);
}

void flat::thread_or_ln15_1_fu_610_p2() {
    or_ln15_1_fu_610_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_2);
}

void flat::thread_or_ln15_2_fu_620_p2() {
    or_ln15_2_fu_620_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_3);
}

void flat::thread_or_ln15_3_fu_664_p2() {
    or_ln15_3_fu_664_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_4);
}

void flat::thread_or_ln15_4_fu_674_p2() {
    or_ln15_4_fu_674_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_5);
}

void flat::thread_or_ln15_5_fu_734_p2() {
    or_ln15_5_fu_734_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_6);
}

void flat::thread_or_ln15_6_fu_744_p2() {
    or_ln15_6_fu_744_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_7);
}

void flat::thread_or_ln15_7_fu_470_p2() {
    or_ln15_7_fu_470_p2 = (and_ln15_fu_436_p2.read() | icmp_ln9_fu_364_p2.read());
}

void flat::thread_or_ln15_fu_566_p2() {
    or_ln15_fu_566_p2 = (select_ln15_4_reg_778.read() | ap_const_lv9_1);
}

void flat::thread_r_fu_352_p2() {
    r_fu_352_p2 = (!ap_const_lv3_1.is_01() || !ap_phi_mux_r_0_phi_fu_267_p4.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(ap_phi_mux_r_0_phi_fu_267_p4.read()));
}

void flat::thread_select_ln15_1_fu_378_p3() {
    select_ln15_1_fu_378_p3 = (!icmp_ln9_fu_364_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln9_fu_364_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_c_0_phi_fu_311_p4.read());
}

void flat::thread_select_ln15_2_fu_386_p3() {
    select_ln15_2_fu_386_p3 = (!icmp_ln9_fu_364_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln9_fu_364_p2.read()[0].to_bool())? add_ln15_fu_358_p2.read(): ap_phi_mux_i_2_0_phi_fu_322_p4.read());
}

void flat::thread_select_ln15_3_fu_394_p3() {
    select_ln15_3_fu_394_p3 = (!icmp_ln9_fu_364_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln9_fu_364_p2.read()[0].to_bool())? r_fu_352_p2.read(): ap_phi_mux_r_0_phi_fu_267_p4.read());
}

void flat::thread_select_ln15_4_fu_462_p3() {
    select_ln15_4_fu_462_p3 = (!and_ln15_fu_436_p2.read()[0].is_01())? sc_lv<9>(): ((and_ln15_fu_436_p2.read()[0].to_bool())? add_ln15_1_fu_456_p2.read(): select_ln15_2_fu_386_p3.read());
}

void flat::thread_select_ln15_5_fu_476_p3() {
    select_ln15_5_fu_476_p3 = (!or_ln15_7_fu_470_p2.read()[0].is_01())? sc_lv<5>(): ((or_ln15_7_fu_470_p2.read()[0].to_bool())? ap_const_lv5_0: ap_phi_mux_f_0_0_phi_fu_333_p4.read());
}

void flat::thread_select_ln15_6_fu_484_p3() {
    select_ln15_6_fu_484_p3 = (!and_ln15_fu_436_p2.read()[0].is_01())? sc_lv<3>(): ((and_ln15_fu_436_p2.read()[0].to_bool())? c_fu_450_p2.read(): select_ln15_1_fu_378_p3.read());
}

void flat::thread_select_ln15_fu_370_p3() {
    select_ln15_fu_370_p3 = (!icmp_ln9_fu_364_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln9_fu_364_p2.read()[0].to_bool())? add_ln15_fu_358_p2.read(): ap_phi_mux_i_1_phi_fu_300_p4.read());
}

void flat::thread_select_ln6_fu_442_p3() {
    select_ln6_fu_442_p3 = (!icmp_ln9_fu_364_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln9_fu_364_p2.read()[0].to_bool())? add_ln15_fu_358_p2.read(): ap_phi_mux_i_0_phi_fu_278_p4.read());
}

void flat::thread_select_ln9_1_fu_728_p3() {
    select_ln9_1_fu_728_p3 = (!icmp_ln9_reg_763.read()[0].is_01())? sc_lv<5>(): ((icmp_ln9_reg_763.read()[0].to_bool())? ap_const_lv5_1: add_ln9_1_reg_836.read());
}

void flat::thread_select_ln9_fu_510_p3() {
    select_ln9_fu_510_p3 = (!and_ln15_fu_436_p2.read()[0].is_01())? sc_lv<9>(): ((and_ln15_fu_436_p2.read()[0].to_bool())? add_ln15_1_fu_456_p2.read(): select_ln15_fu_370_p3.read());
}

void flat::thread_tmp_1_fu_543_p3() {
    tmp_1_fu_543_p3 = esl_concat<6,4>(add_ln14_1_fu_496_p2.read(), or_ln12_fu_537_p2.read());
}

void flat::thread_tmp_3_cast_fu_502_p3() {
    tmp_3_cast_fu_502_p3 = esl_concat<6,4>(add_ln14_1_fu_496_p2.read(), ap_const_lv4_0);
}

void flat::thread_tmp_3_fu_581_p3() {
    tmp_3_fu_581_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_1_fu_576_p2.read());
}

void flat::thread_tmp_4_fu_598_p3() {
    tmp_4_fu_598_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_2_fu_593_p2.read());
}

void flat::thread_tmp_5_fu_635_p3() {
    tmp_5_fu_635_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_3_fu_630_p2.read());
}

void flat::thread_tmp_6_fu_652_p3() {
    tmp_6_fu_652_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_4_fu_647_p2.read());
}

void flat::thread_tmp_7_fu_689_p3() {
    tmp_7_fu_689_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_5_fu_684_p2.read());
}

void flat::thread_tmp_8_fu_706_p3() {
    tmp_8_fu_706_p3 = esl_concat<6,4>(add_ln14_1_reg_801.read(), or_ln12_6_fu_701_p2.read());
}

void flat::thread_tmp_fu_406_p3() {
    tmp_fu_406_p3 = esl_concat<3,2>(select_ln15_3_fu_394_p3.read(), ap_const_lv2_0);
}

void flat::thread_xor_ln15_fu_424_p2() {
    xor_ln15_fu_424_p2 = (icmp_ln9_fu_364_p2.read() ^ ap_const_lv1_1);
}

void flat::thread_zext_ln14_10_fu_739_p1() {
    zext_ln14_10_fu_739_p1 = esl_zext<64,9>(or_ln15_5_fu_734_p2.read());
}

void flat::thread_zext_ln14_11_fu_749_p1() {
    zext_ln14_11_fu_749_p1 = esl_zext<64,9>(or_ln15_6_fu_744_p2.read());
}

void flat::thread_zext_ln14_12_fu_551_p1() {
    zext_ln14_12_fu_551_p1 = esl_zext<64,10>(tmp_1_fu_543_p3.read());
}

void flat::thread_zext_ln14_13_fu_588_p1() {
    zext_ln14_13_fu_588_p1 = esl_zext<64,10>(tmp_3_fu_581_p3.read());
}

void flat::thread_zext_ln14_14_fu_605_p1() {
    zext_ln14_14_fu_605_p1 = esl_zext<64,10>(tmp_4_fu_598_p3.read());
}

void flat::thread_zext_ln14_15_fu_642_p1() {
    zext_ln14_15_fu_642_p1 = esl_zext<64,10>(tmp_5_fu_635_p3.read());
}

void flat::thread_zext_ln14_16_fu_659_p1() {
    zext_ln14_16_fu_659_p1 = esl_zext<64,10>(tmp_6_fu_652_p3.read());
}

void flat::thread_zext_ln14_17_fu_696_p1() {
    zext_ln14_17_fu_696_p1 = esl_zext<64,10>(tmp_7_fu_689_p3.read());
}

void flat::thread_zext_ln14_18_fu_713_p1() {
    zext_ln14_18_fu_713_p1 = esl_zext<64,10>(tmp_8_fu_706_p3.read());
}

void flat::thread_zext_ln14_1_fu_414_p1() {
    zext_ln14_1_fu_414_p1 = esl_zext<6,5>(tmp_fu_406_p3.read());
}

void flat::thread_zext_ln14_2_fu_522_p1() {
    zext_ln14_2_fu_522_p1 = esl_zext<10,5>(select_ln15_5_fu_476_p3.read());
}

void flat::thread_zext_ln14_3_fu_562_p1() {
    zext_ln14_3_fu_562_p1 = esl_zext<64,9>(select_ln15_4_reg_778.read());
}

void flat::thread_zext_ln14_4_fu_532_p1() {
    zext_ln14_4_fu_532_p1 = esl_zext<64,10>(add_ln14_2_fu_526_p2.read());
}

void flat::thread_zext_ln14_5_fu_571_p1() {
    zext_ln14_5_fu_571_p1 = esl_zext<64,9>(or_ln15_fu_566_p2.read());
}

void flat::thread_zext_ln14_6_fu_615_p1() {
    zext_ln14_6_fu_615_p1 = esl_zext<64,9>(or_ln15_1_fu_610_p2.read());
}

void flat::thread_zext_ln14_7_fu_625_p1() {
    zext_ln14_7_fu_625_p1 = esl_zext<64,9>(or_ln15_2_fu_620_p2.read());
}

void flat::thread_zext_ln14_8_fu_669_p1() {
    zext_ln14_8_fu_669_p1 = esl_zext<64,9>(or_ln15_3_fu_664_p2.read());
}

void flat::thread_zext_ln14_9_fu_679_p1() {
    zext_ln14_9_fu_679_p1 = esl_zext<64,9>(or_ln15_4_fu_674_p2.read());
}

void flat::thread_zext_ln14_fu_402_p1() {
    zext_ln14_fu_402_p1 = esl_zext<6,3>(select_ln15_3_fu_394_p3.read());
}

void flat::thread_zext_ln15_fu_492_p1() {
    zext_ln15_fu_492_p1 = esl_zext<6,3>(select_ln15_6_fu_484_p3.read());
}

void flat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_340_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_340_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void flat::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q0\" :  \"" << max_pool_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address1\" :  \"" << max_pool_out_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce1\" :  \"" << max_pool_out_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q1\" :  \"" << max_pool_out_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address0\" :  \"" << flat_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce0\" :  \"" << flat_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we0\" :  \"" << flat_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d0\" :  \"" << flat_array_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address1\" :  \"" << flat_array_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce1\" :  \"" << flat_array_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we1\" :  \"" << flat_array_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d1\" :  \"" << flat_array_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

