// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="flat,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.451750,HLS_SYN_LAT=202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=137,HLS_SYN_LUT=639,HLS_VERSION=2019_1}" *)

module flat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_q0,
        max_pool_out_address1,
        max_pool_out_ce1,
        max_pool_out_q1,
        flat_array_address0,
        flat_array_ce0,
        flat_array_we0,
        flat_array_d0,
        flat_array_address1,
        flat_array_ce1,
        flat_array_we1,
        flat_array_d1
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] max_pool_out_address0;
output   max_pool_out_ce0;
input  [31:0] max_pool_out_q0;
output  [8:0] max_pool_out_address1;
output   max_pool_out_ce1;
input  [31:0] max_pool_out_q1;
output  [8:0] flat_array_address0;
output   flat_array_ce0;
output   flat_array_we0;
output  [31:0] flat_array_d0;
output  [8:0] flat_array_address1;
output   flat_array_ce1;
output   flat_array_we1;
output  [31:0] flat_array_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] max_pool_out_address0;
reg max_pool_out_ce0;
reg[8:0] max_pool_out_address1;
reg max_pool_out_ce1;
reg[8:0] flat_array_address0;
reg flat_array_ce0;
reg flat_array_we0;
reg[8:0] flat_array_address1;
reg flat_array_ce1;
reg flat_array_we1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] indvar_flatten17_reg_252;
reg   [2:0] r_0_reg_263;
reg   [8:0] i_0_reg_274;
reg   [4:0] indvar_flatten_reg_285;
reg   [8:0] i_1_reg_296;
reg   [2:0] c_0_reg_307;
reg   [8:0] i_2_0_reg_318;
reg   [4:0] f_0_0_reg_329;
wire   [0:0] icmp_ln6_fu_340_p2;
reg   [0:0] icmp_ln6_reg_754;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] add_ln6_fu_346_p2;
reg   [5:0] add_ln6_reg_758;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln9_fu_364_p2;
reg   [0:0] icmp_ln9_reg_763;
wire   [2:0] select_ln15_3_fu_394_p3;
reg   [2:0] select_ln15_3_reg_768;
wire   [8:0] select_ln6_fu_442_p3;
reg   [8:0] select_ln6_reg_773;
wire   [8:0] select_ln15_4_fu_462_p3;
reg   [8:0] select_ln15_4_reg_778;
wire   [4:0] select_ln15_5_fu_476_p3;
reg   [4:0] select_ln15_5_reg_791;
wire   [2:0] select_ln15_6_fu_484_p3;
reg   [2:0] select_ln15_6_reg_796;
wire   [5:0] add_ln14_1_fu_496_p2;
reg   [5:0] add_ln14_1_reg_801;
wire   [8:0] select_ln9_fu_510_p3;
reg   [8:0] select_ln9_reg_811;
wire   [3:0] empty_2_fu_518_p1;
reg   [3:0] empty_2_reg_816;
wire   [4:0] add_ln9_1_fu_556_p2;
reg   [4:0] add_ln9_1_reg_836;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [8:0] add_ln15_2_fu_718_p2;
reg   [8:0] add_ln15_2_reg_871;
wire   [4:0] add_ln12_fu_723_p2;
reg   [4:0] add_ln12_reg_876;
wire   [4:0] select_ln9_1_fu_728_p3;
reg   [4:0] select_ln9_1_reg_881;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [5:0] ap_phi_mux_indvar_flatten17_phi_fu_256_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_r_0_phi_fu_267_p4;
reg   [8:0] ap_phi_mux_i_0_phi_fu_278_p4;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_289_p4;
reg   [8:0] ap_phi_mux_i_1_phi_fu_300_p4;
reg   [2:0] ap_phi_mux_c_0_phi_fu_311_p4;
reg   [8:0] ap_phi_mux_i_2_0_phi_fu_322_p4;
reg   [4:0] ap_phi_mux_f_0_0_phi_fu_333_p4;
wire   [63:0] zext_ln14_4_fu_532_p1;
wire   [63:0] zext_ln14_12_fu_551_p1;
wire   [63:0] zext_ln14_3_fu_562_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln14_5_fu_571_p1;
wire   [63:0] zext_ln14_13_fu_588_p1;
wire   [63:0] zext_ln14_14_fu_605_p1;
wire   [63:0] zext_ln14_6_fu_615_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln14_7_fu_625_p1;
wire   [63:0] zext_ln14_15_fu_642_p1;
wire   [63:0] zext_ln14_16_fu_659_p1;
wire   [63:0] zext_ln14_8_fu_669_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln14_9_fu_679_p1;
wire   [63:0] zext_ln14_17_fu_696_p1;
wire   [63:0] zext_ln14_18_fu_713_p1;
wire   [63:0] zext_ln14_10_fu_739_p1;
wire   [63:0] zext_ln14_11_fu_749_p1;
wire   [8:0] add_ln15_fu_358_p2;
wire   [2:0] r_fu_352_p2;
wire   [4:0] tmp_fu_406_p3;
wire   [5:0] zext_ln14_1_fu_414_p1;
wire   [5:0] zext_ln14_fu_402_p1;
wire   [0:0] icmp_ln12_fu_430_p2;
wire   [0:0] xor_ln15_fu_424_p2;
wire   [2:0] select_ln15_1_fu_378_p3;
wire   [8:0] select_ln15_fu_370_p3;
wire   [0:0] and_ln15_fu_436_p2;
wire   [8:0] add_ln15_1_fu_456_p2;
wire   [8:0] select_ln15_2_fu_386_p3;
wire   [0:0] or_ln15_7_fu_470_p2;
wire   [2:0] c_fu_450_p2;
wire   [5:0] zext_ln15_fu_492_p1;
wire   [5:0] add_ln14_fu_418_p2;
wire   [9:0] zext_ln14_2_fu_522_p1;
wire   [9:0] tmp_3_cast_fu_502_p3;
wire   [9:0] add_ln14_2_fu_526_p2;
wire   [3:0] or_ln12_fu_537_p2;
wire   [9:0] tmp_1_fu_543_p3;
wire   [8:0] or_ln15_fu_566_p2;
wire   [3:0] or_ln12_1_fu_576_p2;
wire   [9:0] tmp_3_fu_581_p3;
wire   [3:0] or_ln12_2_fu_593_p2;
wire   [9:0] tmp_4_fu_598_p3;
wire   [8:0] or_ln15_1_fu_610_p2;
wire   [8:0] or_ln15_2_fu_620_p2;
wire   [3:0] or_ln12_3_fu_630_p2;
wire   [9:0] tmp_5_fu_635_p3;
wire   [3:0] or_ln12_4_fu_647_p2;
wire   [9:0] tmp_6_fu_652_p3;
wire   [8:0] or_ln15_3_fu_664_p2;
wire   [8:0] or_ln15_4_fu_674_p2;
wire   [3:0] or_ln12_5_fu_684_p2;
wire   [9:0] tmp_7_fu_689_p3;
wire   [3:0] or_ln12_6_fu_701_p2;
wire   [9:0] tmp_8_fu_706_p3;
wire   [8:0] or_ln15_5_fu_734_p2;
wire   [8:0] or_ln15_6_fu_744_p2;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        c_0_reg_307 <= select_ln15_6_reg_796;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_307 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        f_0_0_reg_329 <= add_ln12_reg_876;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_0_reg_329 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_274 <= select_ln6_reg_773;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_274 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_1_reg_296 <= select_ln9_reg_811;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_reg_296 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_2_0_reg_318 <= add_ln15_2_reg_871;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_2_0_reg_318 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten17_reg_252 <= add_ln6_reg_758;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten17_reg_252 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_285 <= select_ln9_1_reg_881;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_285 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_reg_263 <= select_ln15_3_reg_768;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_263 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln12_reg_876 <= add_ln12_fu_723_p2;
        add_ln15_2_reg_871 <= add_ln15_2_fu_718_p2;
        select_ln9_1_reg_881 <= select_ln9_1_fu_728_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_340_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln14_1_reg_801 <= add_ln14_1_fu_496_p2;
        add_ln9_1_reg_836 <= add_ln9_1_fu_556_p2;
        empty_2_reg_816 <= empty_2_fu_518_p1;
        icmp_ln9_reg_763 <= icmp_ln9_fu_364_p2;
        select_ln15_4_reg_778 <= select_ln15_4_fu_462_p3;
        select_ln15_5_reg_791 <= select_ln15_5_fu_476_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln6_reg_758 <= add_ln6_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln6_reg_754 <= icmp_ln6_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_340_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_3_reg_768 <= select_ln15_3_fu_394_p3;
        select_ln15_6_reg_796 <= select_ln15_6_fu_484_p3;
        select_ln6_reg_773 <= select_ln6_fu_442_p3;
        select_ln9_reg_811 <= select_ln9_fu_510_p3;
    end
end

always @ (*) begin
    if ((icmp_ln6_fu_340_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_311_p4 = select_ln15_6_reg_796;
    end else begin
        ap_phi_mux_c_0_phi_fu_311_p4 = c_0_reg_307;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_f_0_0_phi_fu_333_p4 = add_ln12_reg_876;
    end else begin
        ap_phi_mux_f_0_0_phi_fu_333_p4 = f_0_0_reg_329;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_278_p4 = select_ln6_reg_773;
    end else begin
        ap_phi_mux_i_0_phi_fu_278_p4 = i_0_reg_274;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_1_phi_fu_300_p4 = select_ln9_reg_811;
    end else begin
        ap_phi_mux_i_1_phi_fu_300_p4 = i_1_reg_296;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_i_2_0_phi_fu_322_p4 = add_ln15_2_reg_871;
    end else begin
        ap_phi_mux_i_2_0_phi_fu_322_p4 = i_2_0_reg_318;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten17_phi_fu_256_p4 = add_ln6_reg_758;
    end else begin
        ap_phi_mux_indvar_flatten17_phi_fu_256_p4 = indvar_flatten17_reg_252;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_289_p4 = select_ln9_1_reg_881;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_289_p4 = indvar_flatten_reg_285;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_267_p4 = select_ln15_3_reg_768;
    end else begin
        ap_phi_mux_r_0_phi_fu_267_p4 = r_0_reg_263;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        flat_array_address0 = zext_ln14_10_fu_739_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        flat_array_address0 = zext_ln14_8_fu_669_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        flat_array_address0 = zext_ln14_6_fu_615_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        flat_array_address0 = zext_ln14_3_fu_562_p1;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        flat_array_address1 = zext_ln14_11_fu_749_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        flat_array_address1 = zext_ln14_9_fu_679_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        flat_array_address1 = zext_ln14_7_fu_625_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        flat_array_address1 = zext_ln14_5_fu_571_p1;
    end else begin
        flat_array_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_ce0 = 1'b1;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_ce1 = 1'b1;
    end else begin
        flat_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_we0 = 1'b1;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln6_reg_754 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_754 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_we1 = 1'b1;
    end else begin
        flat_array_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            max_pool_out_address0 = zext_ln14_17_fu_696_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            max_pool_out_address0 = zext_ln14_15_fu_642_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            max_pool_out_address0 = zext_ln14_13_fu_588_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            max_pool_out_address0 = zext_ln14_4_fu_532_p1;
        end else begin
            max_pool_out_address0 = 'bx;
        end
    end else begin
        max_pool_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            max_pool_out_address1 = zext_ln14_18_fu_713_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            max_pool_out_address1 = zext_ln14_16_fu_659_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            max_pool_out_address1 = zext_ln14_14_fu_605_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            max_pool_out_address1 = zext_ln14_12_fu_551_p1;
        end else begin
            max_pool_out_address1 = 'bx;
        end
    end else begin
        max_pool_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        max_pool_out_ce1 = 1'b1;
    end else begin
        max_pool_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln6_fu_340_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln6_fu_340_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln12_fu_723_p2 = (5'd8 + select_ln15_5_reg_791);

assign add_ln14_1_fu_496_p2 = (zext_ln15_fu_492_p1 + add_ln14_fu_418_p2);

assign add_ln14_2_fu_526_p2 = (zext_ln14_2_fu_522_p1 + tmp_3_cast_fu_502_p3);

assign add_ln14_fu_418_p2 = (zext_ln14_1_fu_414_p1 + zext_ln14_fu_402_p1);

assign add_ln15_1_fu_456_p2 = (9'd16 + select_ln15_fu_370_p3);

assign add_ln15_2_fu_718_p2 = (9'd8 + select_ln15_4_reg_778);

assign add_ln15_fu_358_p2 = (9'd80 + ap_phi_mux_i_0_phi_fu_278_p4);

assign add_ln6_fu_346_p2 = (ap_phi_mux_indvar_flatten17_phi_fu_256_p4 + 6'd1);

assign add_ln9_1_fu_556_p2 = (5'd1 + ap_phi_mux_indvar_flatten_phi_fu_289_p4);

assign and_ln15_fu_436_p2 = (xor_ln15_fu_424_p2 & icmp_ln12_fu_430_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_450_p2 = (3'd1 + select_ln15_1_fu_378_p3);

assign empty_2_fu_518_p1 = select_ln15_5_fu_476_p3[3:0];

assign flat_array_d0 = max_pool_out_q0;

assign flat_array_d1 = max_pool_out_q1;

assign icmp_ln12_fu_430_p2 = ((ap_phi_mux_f_0_0_phi_fu_333_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln6_fu_340_p2 = ((ap_phi_mux_indvar_flatten17_phi_fu_256_p4 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_364_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_289_p4 == 5'd10) ? 1'b1 : 1'b0);

assign or_ln12_1_fu_576_p2 = (empty_2_reg_816 | 4'd2);

assign or_ln12_2_fu_593_p2 = (empty_2_reg_816 | 4'd3);

assign or_ln12_3_fu_630_p2 = (empty_2_reg_816 | 4'd4);

assign or_ln12_4_fu_647_p2 = (empty_2_reg_816 | 4'd5);

assign or_ln12_5_fu_684_p2 = (empty_2_reg_816 | 4'd6);

assign or_ln12_6_fu_701_p2 = (empty_2_reg_816 | 4'd7);

assign or_ln12_fu_537_p2 = (empty_2_fu_518_p1 | 4'd1);

assign or_ln15_1_fu_610_p2 = (select_ln15_4_reg_778 | 9'd2);

assign or_ln15_2_fu_620_p2 = (select_ln15_4_reg_778 | 9'd3);

assign or_ln15_3_fu_664_p2 = (select_ln15_4_reg_778 | 9'd4);

assign or_ln15_4_fu_674_p2 = (select_ln15_4_reg_778 | 9'd5);

assign or_ln15_5_fu_734_p2 = (select_ln15_4_reg_778 | 9'd6);

assign or_ln15_6_fu_744_p2 = (select_ln15_4_reg_778 | 9'd7);

assign or_ln15_7_fu_470_p2 = (icmp_ln9_fu_364_p2 | and_ln15_fu_436_p2);

assign or_ln15_fu_566_p2 = (select_ln15_4_reg_778 | 9'd1);

assign r_fu_352_p2 = (3'd1 + ap_phi_mux_r_0_phi_fu_267_p4);

assign select_ln15_1_fu_378_p3 = ((icmp_ln9_fu_364_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_c_0_phi_fu_311_p4);

assign select_ln15_2_fu_386_p3 = ((icmp_ln9_fu_364_p2[0:0] === 1'b1) ? add_ln15_fu_358_p2 : ap_phi_mux_i_2_0_phi_fu_322_p4);

assign select_ln15_3_fu_394_p3 = ((icmp_ln9_fu_364_p2[0:0] === 1'b1) ? r_fu_352_p2 : ap_phi_mux_r_0_phi_fu_267_p4);

assign select_ln15_4_fu_462_p3 = ((and_ln15_fu_436_p2[0:0] === 1'b1) ? add_ln15_1_fu_456_p2 : select_ln15_2_fu_386_p3);

assign select_ln15_5_fu_476_p3 = ((or_ln15_7_fu_470_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_f_0_0_phi_fu_333_p4);

assign select_ln15_6_fu_484_p3 = ((and_ln15_fu_436_p2[0:0] === 1'b1) ? c_fu_450_p2 : select_ln15_1_fu_378_p3);

assign select_ln15_fu_370_p3 = ((icmp_ln9_fu_364_p2[0:0] === 1'b1) ? add_ln15_fu_358_p2 : ap_phi_mux_i_1_phi_fu_300_p4);

assign select_ln6_fu_442_p3 = ((icmp_ln9_fu_364_p2[0:0] === 1'b1) ? add_ln15_fu_358_p2 : ap_phi_mux_i_0_phi_fu_278_p4);

assign select_ln9_1_fu_728_p3 = ((icmp_ln9_reg_763[0:0] === 1'b1) ? 5'd1 : add_ln9_1_reg_836);

assign select_ln9_fu_510_p3 = ((and_ln15_fu_436_p2[0:0] === 1'b1) ? add_ln15_1_fu_456_p2 : select_ln15_fu_370_p3);

assign tmp_1_fu_543_p3 = {{add_ln14_1_fu_496_p2}, {or_ln12_fu_537_p2}};

assign tmp_3_cast_fu_502_p3 = {{add_ln14_1_fu_496_p2}, {4'd0}};

assign tmp_3_fu_581_p3 = {{add_ln14_1_reg_801}, {or_ln12_1_fu_576_p2}};

assign tmp_4_fu_598_p3 = {{add_ln14_1_reg_801}, {or_ln12_2_fu_593_p2}};

assign tmp_5_fu_635_p3 = {{add_ln14_1_reg_801}, {or_ln12_3_fu_630_p2}};

assign tmp_6_fu_652_p3 = {{add_ln14_1_reg_801}, {or_ln12_4_fu_647_p2}};

assign tmp_7_fu_689_p3 = {{add_ln14_1_reg_801}, {or_ln12_5_fu_684_p2}};

assign tmp_8_fu_706_p3 = {{add_ln14_1_reg_801}, {or_ln12_6_fu_701_p2}};

assign tmp_fu_406_p3 = {{select_ln15_3_fu_394_p3}, {2'd0}};

assign xor_ln15_fu_424_p2 = (icmp_ln9_fu_364_p2 ^ 1'd1);

assign zext_ln14_10_fu_739_p1 = or_ln15_5_fu_734_p2;

assign zext_ln14_11_fu_749_p1 = or_ln15_6_fu_744_p2;

assign zext_ln14_12_fu_551_p1 = tmp_1_fu_543_p3;

assign zext_ln14_13_fu_588_p1 = tmp_3_fu_581_p3;

assign zext_ln14_14_fu_605_p1 = tmp_4_fu_598_p3;

assign zext_ln14_15_fu_642_p1 = tmp_5_fu_635_p3;

assign zext_ln14_16_fu_659_p1 = tmp_6_fu_652_p3;

assign zext_ln14_17_fu_696_p1 = tmp_7_fu_689_p3;

assign zext_ln14_18_fu_713_p1 = tmp_8_fu_706_p3;

assign zext_ln14_1_fu_414_p1 = tmp_fu_406_p3;

assign zext_ln14_2_fu_522_p1 = select_ln15_5_fu_476_p3;

assign zext_ln14_3_fu_562_p1 = select_ln15_4_reg_778;

assign zext_ln14_4_fu_532_p1 = add_ln14_2_fu_526_p2;

assign zext_ln14_5_fu_571_p1 = or_ln15_fu_566_p2;

assign zext_ln14_6_fu_615_p1 = or_ln15_1_fu_610_p2;

assign zext_ln14_7_fu_625_p1 = or_ln15_2_fu_620_p2;

assign zext_ln14_8_fu_669_p1 = or_ln15_3_fu_664_p2;

assign zext_ln14_9_fu_679_p1 = or_ln15_4_fu_674_p2;

assign zext_ln14_fu_402_p1 = select_ln15_3_fu_394_p3;

assign zext_ln15_fu_492_p1 = select_ln15_6_fu_484_p3;

endmodule //flat
