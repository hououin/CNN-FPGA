// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _flat_HH_
#define _flat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct flat : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_in< sc_lv<32> > max_pool_out_q0;
    sc_out< sc_lv<9> > max_pool_out_address1;
    sc_out< sc_logic > max_pool_out_ce1;
    sc_in< sc_lv<32> > max_pool_out_q1;
    sc_out< sc_lv<9> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_out< sc_logic > flat_array_we0;
    sc_out< sc_lv<32> > flat_array_d0;
    sc_out< sc_lv<9> > flat_array_address1;
    sc_out< sc_logic > flat_array_ce1;
    sc_out< sc_logic > flat_array_we1;
    sc_out< sc_lv<32> > flat_array_d1;


    // Module declarations
    flat(sc_module_name name);
    SC_HAS_PROCESS(flat);

    ~flat();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > indvar_flatten_reg_376;
    sc_signal< sc_lv<3> > r_0_reg_387;
    sc_signal< sc_lv<9> > i_0_reg_398;
    sc_signal< sc_lv<9> > i_1_reg_409;
    sc_signal< sc_lv<3> > c_0_reg_420;
    sc_signal< sc_lv<1> > icmp_ln6_fu_431_p2;
    sc_signal< sc_lv<1> > icmp_ln6_reg_867;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > add_ln6_fu_437_p2;
    sc_signal< sc_lv<5> > add_ln6_reg_871;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<9> > select_ln15_fu_461_p3;
    sc_signal< sc_lv<9> > select_ln15_reg_876;
    sc_signal< sc_lv<3> > select_ln15_1_fu_469_p3;
    sc_signal< sc_lv<3> > select_ln15_1_reg_886;
    sc_signal< sc_lv<3> > select_ln15_2_fu_477_p3;
    sc_signal< sc_lv<3> > select_ln15_2_reg_891;
    sc_signal< sc_lv<9> > select_ln6_fu_507_p3;
    sc_signal< sc_lv<9> > select_ln6_reg_896;
    sc_signal< sc_lv<10> > tmp_2_fu_525_p3;
    sc_signal< sc_lv<10> > tmp_2_reg_901;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<9> > or_ln15_fu_573_p2;
    sc_signal< sc_lv<9> > or_ln15_reg_939;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state4_pp0_stage2_iter0;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<9> > or_ln15_1_fu_617_p2;
    sc_signal< sc_lv<9> > or_ln15_1_reg_954;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state5_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<10> > zext_ln15_1_fu_647_p1;
    sc_signal< sc_lv<10> > zext_ln15_1_reg_969;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state6_pp0_stage4_iter0;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<9> > or_ln15_2_fu_702_p2;
    sc_signal< sc_lv<9> > or_ln15_2_reg_984;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state7_pp0_stage5_iter0;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<10> > zext_ln15_2_fu_732_p1;
    sc_signal< sc_lv<10> > zext_ln15_2_reg_999;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage6;
    sc_signal< bool > ap_block_state8_pp0_stage6_iter0;
    sc_signal< bool > ap_block_pp0_stage6_11001;
    sc_signal< sc_lv<9> > add_ln15_fu_797_p2;
    sc_signal< sc_lv<9> > add_ln15_reg_1018;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage7;
    sc_signal< bool > ap_block_state9_pp0_stage7_iter0;
    sc_signal< bool > ap_block_pp0_stage7_11001;
    sc_signal< sc_lv<3> > c_fu_842_p2;
    sc_signal< sc_lv<3> > c_reg_1033;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage7_subdone;
    sc_signal< sc_lv<5> > ap_phi_mux_indvar_flatten_phi_fu_380_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_r_0_phi_fu_391_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_0_phi_fu_402_p4;
    sc_signal< sc_lv<9> > ap_phi_mux_i_1_phi_fu_413_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_424_p4;
    sc_signal< sc_lv<64> > zext_ln14_19_fu_533_p1;
    sc_signal< sc_lv<64> > zext_ln14_20_fu_544_p1;
    sc_signal< sc_lv<64> > zext_ln14_21_fu_554_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln14_22_fu_564_p1;
    sc_signal< sc_lv<64> > zext_ln14_2_fu_569_p1;
    sc_signal< sc_lv<64> > zext_ln14_3_fu_578_p1;
    sc_signal< sc_lv<64> > zext_ln14_23_fu_588_p1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<64> > zext_ln14_24_fu_598_p1;
    sc_signal< sc_lv<64> > zext_ln14_4_fu_612_p1;
    sc_signal< sc_lv<64> > zext_ln14_5_fu_622_p1;
    sc_signal< sc_lv<64> > zext_ln14_25_fu_632_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<64> > zext_ln14_26_fu_642_p1;
    sc_signal< sc_lv<64> > zext_ln14_6_fu_656_p1;
    sc_signal< sc_lv<64> > zext_ln14_7_fu_667_p1;
    sc_signal< sc_lv<64> > zext_ln14_27_fu_677_p1;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< sc_lv<64> > zext_ln14_28_fu_687_p1;
    sc_signal< sc_lv<64> > zext_ln14_8_fu_697_p1;
    sc_signal< sc_lv<64> > zext_ln14_9_fu_707_p1;
    sc_signal< sc_lv<64> > zext_ln14_29_fu_717_p1;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<64> > zext_ln14_30_fu_727_p1;
    sc_signal< sc_lv<64> > zext_ln14_10_fu_741_p1;
    sc_signal< sc_lv<64> > zext_ln14_11_fu_752_p1;
    sc_signal< sc_lv<64> > zext_ln14_31_fu_762_p1;
    sc_signal< bool > ap_block_pp0_stage6;
    sc_signal< sc_lv<64> > zext_ln14_32_fu_772_p1;
    sc_signal< sc_lv<64> > zext_ln14_12_fu_782_p1;
    sc_signal< sc_lv<64> > zext_ln14_13_fu_792_p1;
    sc_signal< sc_lv<64> > zext_ln14_33_fu_807_p1;
    sc_signal< bool > ap_block_pp0_stage7;
    sc_signal< sc_lv<64> > zext_ln14_34_fu_817_p1;
    sc_signal< sc_lv<64> > zext_ln14_14_fu_827_p1;
    sc_signal< sc_lv<64> > zext_ln14_15_fu_837_p1;
    sc_signal< sc_lv<64> > zext_ln14_16_fu_852_p1;
    sc_signal< sc_lv<64> > zext_ln14_17_fu_862_p1;
    sc_signal< sc_lv<1> > icmp_ln9_fu_455_p2;
    sc_signal< sc_lv<9> > add_ln15_1_fu_449_p2;
    sc_signal< sc_lv<3> > r_fu_443_p2;
    sc_signal< sc_lv<5> > tmp_fu_489_p3;
    sc_signal< sc_lv<6> > zext_ln14_fu_485_p1;
    sc_signal< sc_lv<6> > zext_ln14_1_fu_497_p1;
    sc_signal< sc_lv<6> > add_ln14_fu_501_p2;
    sc_signal< sc_lv<6> > zext_ln14_18_fu_515_p1;
    sc_signal< sc_lv<6> > add_ln14_1_fu_519_p2;
    sc_signal< sc_lv<10> > or_ln14_fu_538_p2;
    sc_signal< sc_lv<10> > or_ln14_1_fu_549_p2;
    sc_signal< sc_lv<10> > or_ln14_2_fu_559_p2;
    sc_signal< sc_lv<10> > or_ln14_3_fu_583_p2;
    sc_signal< sc_lv<10> > or_ln14_4_fu_593_p2;
    sc_signal< sc_lv<10> > zext_ln15_fu_603_p1;
    sc_signal< sc_lv<10> > add_ln15_2_fu_606_p2;
    sc_signal< sc_lv<10> > or_ln14_5_fu_627_p2;
    sc_signal< sc_lv<10> > or_ln14_6_fu_637_p2;
    sc_signal< sc_lv<10> > add_ln15_3_fu_650_p2;
    sc_signal< sc_lv<10> > add_ln15_4_fu_661_p2;
    sc_signal< sc_lv<10> > or_ln14_7_fu_672_p2;
    sc_signal< sc_lv<10> > or_ln14_8_fu_682_p2;
    sc_signal< sc_lv<10> > add_ln15_5_fu_692_p2;
    sc_signal< sc_lv<10> > or_ln14_9_fu_712_p2;
    sc_signal< sc_lv<10> > or_ln14_10_fu_722_p2;
    sc_signal< sc_lv<10> > add_ln15_6_fu_735_p2;
    sc_signal< sc_lv<10> > add_ln15_7_fu_746_p2;
    sc_signal< sc_lv<10> > or_ln14_11_fu_757_p2;
    sc_signal< sc_lv<10> > or_ln14_12_fu_767_p2;
    sc_signal< sc_lv<10> > add_ln15_8_fu_777_p2;
    sc_signal< sc_lv<10> > add_ln15_9_fu_787_p2;
    sc_signal< sc_lv<10> > or_ln14_13_fu_802_p2;
    sc_signal< sc_lv<10> > or_ln14_14_fu_812_p2;
    sc_signal< sc_lv<10> > add_ln15_10_fu_822_p2;
    sc_signal< sc_lv<10> > add_ln15_11_fu_832_p2;
    sc_signal< sc_lv<10> > add_ln15_12_fu_847_p2;
    sc_signal< sc_lv<9> > or_ln15_3_fu_857_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< bool > ap_block_pp0_stage6_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage0;
    static const sc_lv<10> ap_ST_fsm_pp0_stage1;
    static const sc_lv<10> ap_ST_fsm_pp0_stage2;
    static const sc_lv<10> ap_ST_fsm_pp0_stage3;
    static const sc_lv<10> ap_ST_fsm_pp0_stage4;
    static const sc_lv<10> ap_ST_fsm_pp0_stage5;
    static const sc_lv<10> ap_ST_fsm_pp0_stage6;
    static const sc_lv<10> ap_ST_fsm_pp0_stage7;
    static const sc_lv<10> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_19;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<9> ap_const_lv9_50;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_2;
    static const sc_lv<10> ap_const_lv10_3;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_4;
    static const sc_lv<10> ap_const_lv10_5;
    static const sc_lv<9> ap_const_lv9_3;
    static const sc_lv<10> ap_const_lv10_6;
    static const sc_lv<10> ap_const_lv10_7;
    static const sc_lv<10> ap_const_lv10_8;
    static const sc_lv<10> ap_const_lv10_9;
    static const sc_lv<9> ap_const_lv9_7;
    static const sc_lv<10> ap_const_lv10_A;
    static const sc_lv<10> ap_const_lv10_B;
    static const sc_lv<10> ap_const_lv10_C;
    static const sc_lv<10> ap_const_lv10_D;
    static const sc_lv<9> ap_const_lv9_10;
    static const sc_lv<10> ap_const_lv10_E;
    static const sc_lv<10> ap_const_lv10_F;
    static const sc_lv<9> ap_const_lv9_F;
    static const sc_lv<32> ap_const_lv32_9;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln14_1_fu_519_p2();
    void thread_add_ln14_fu_501_p2();
    void thread_add_ln15_10_fu_822_p2();
    void thread_add_ln15_11_fu_832_p2();
    void thread_add_ln15_12_fu_847_p2();
    void thread_add_ln15_1_fu_449_p2();
    void thread_add_ln15_2_fu_606_p2();
    void thread_add_ln15_3_fu_650_p2();
    void thread_add_ln15_4_fu_661_p2();
    void thread_add_ln15_5_fu_692_p2();
    void thread_add_ln15_6_fu_735_p2();
    void thread_add_ln15_7_fu_746_p2();
    void thread_add_ln15_8_fu_777_p2();
    void thread_add_ln15_9_fu_787_p2();
    void thread_add_ln15_fu_797_p2();
    void thread_add_ln6_fu_437_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_pp0_stage6();
    void thread_ap_CS_fsm_pp0_stage7();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_pp0_stage6();
    void thread_ap_block_pp0_stage6_11001();
    void thread_ap_block_pp0_stage6_subdone();
    void thread_ap_block_pp0_stage7();
    void thread_ap_block_pp0_stage7_11001();
    void thread_ap_block_pp0_stage7_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage2_iter0();
    void thread_ap_block_state5_pp0_stage3_iter0();
    void thread_ap_block_state6_pp0_stage4_iter0();
    void thread_ap_block_state7_pp0_stage5_iter0();
    void thread_ap_block_state8_pp0_stage6_iter0();
    void thread_ap_block_state9_pp0_stage7_iter0();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_424_p4();
    void thread_ap_phi_mux_i_0_phi_fu_402_p4();
    void thread_ap_phi_mux_i_1_phi_fu_413_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_380_p4();
    void thread_ap_phi_mux_r_0_phi_fu_391_p4();
    void thread_ap_ready();
    void thread_c_fu_842_p2();
    void thread_flat_array_address0();
    void thread_flat_array_address1();
    void thread_flat_array_ce0();
    void thread_flat_array_ce1();
    void thread_flat_array_d0();
    void thread_flat_array_d1();
    void thread_flat_array_we0();
    void thread_flat_array_we1();
    void thread_icmp_ln6_fu_431_p2();
    void thread_icmp_ln9_fu_455_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_address1();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_ce1();
    void thread_or_ln14_10_fu_722_p2();
    void thread_or_ln14_11_fu_757_p2();
    void thread_or_ln14_12_fu_767_p2();
    void thread_or_ln14_13_fu_802_p2();
    void thread_or_ln14_14_fu_812_p2();
    void thread_or_ln14_1_fu_549_p2();
    void thread_or_ln14_2_fu_559_p2();
    void thread_or_ln14_3_fu_583_p2();
    void thread_or_ln14_4_fu_593_p2();
    void thread_or_ln14_5_fu_627_p2();
    void thread_or_ln14_6_fu_637_p2();
    void thread_or_ln14_7_fu_672_p2();
    void thread_or_ln14_8_fu_682_p2();
    void thread_or_ln14_9_fu_712_p2();
    void thread_or_ln14_fu_538_p2();
    void thread_or_ln15_1_fu_617_p2();
    void thread_or_ln15_2_fu_702_p2();
    void thread_or_ln15_3_fu_857_p2();
    void thread_or_ln15_fu_573_p2();
    void thread_r_fu_443_p2();
    void thread_select_ln15_1_fu_469_p3();
    void thread_select_ln15_2_fu_477_p3();
    void thread_select_ln15_fu_461_p3();
    void thread_select_ln6_fu_507_p3();
    void thread_tmp_2_fu_525_p3();
    void thread_tmp_fu_489_p3();
    void thread_zext_ln14_10_fu_741_p1();
    void thread_zext_ln14_11_fu_752_p1();
    void thread_zext_ln14_12_fu_782_p1();
    void thread_zext_ln14_13_fu_792_p1();
    void thread_zext_ln14_14_fu_827_p1();
    void thread_zext_ln14_15_fu_837_p1();
    void thread_zext_ln14_16_fu_852_p1();
    void thread_zext_ln14_17_fu_862_p1();
    void thread_zext_ln14_18_fu_515_p1();
    void thread_zext_ln14_19_fu_533_p1();
    void thread_zext_ln14_1_fu_497_p1();
    void thread_zext_ln14_20_fu_544_p1();
    void thread_zext_ln14_21_fu_554_p1();
    void thread_zext_ln14_22_fu_564_p1();
    void thread_zext_ln14_23_fu_588_p1();
    void thread_zext_ln14_24_fu_598_p1();
    void thread_zext_ln14_25_fu_632_p1();
    void thread_zext_ln14_26_fu_642_p1();
    void thread_zext_ln14_27_fu_677_p1();
    void thread_zext_ln14_28_fu_687_p1();
    void thread_zext_ln14_29_fu_717_p1();
    void thread_zext_ln14_2_fu_569_p1();
    void thread_zext_ln14_30_fu_727_p1();
    void thread_zext_ln14_31_fu_762_p1();
    void thread_zext_ln14_32_fu_772_p1();
    void thread_zext_ln14_33_fu_807_p1();
    void thread_zext_ln14_34_fu_817_p1();
    void thread_zext_ln14_3_fu_578_p1();
    void thread_zext_ln14_4_fu_612_p1();
    void thread_zext_ln14_5_fu_622_p1();
    void thread_zext_ln14_6_fu_656_p1();
    void thread_zext_ln14_7_fu_667_p1();
    void thread_zext_ln14_8_fu_697_p1();
    void thread_zext_ln14_9_fu_707_p1();
    void thread_zext_ln14_fu_485_p1();
    void thread_zext_ln15_1_fu_647_p1();
    void thread_zext_ln15_2_fu_732_p1();
    void thread_zext_ln15_fu_603_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
