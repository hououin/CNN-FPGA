// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> flat::ap_ST_fsm_state1 = "1";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<10> flat::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<10> flat::ap_ST_fsm_state11 = "1000000000";
const sc_lv<32> flat::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool flat::ap_const_boolean_1 = true;
const sc_lv<32> flat::ap_const_lv32_1 = "1";
const bool flat::ap_const_boolean_0 = false;
const sc_lv<1> flat::ap_const_lv1_0 = "0";
const sc_lv<32> flat::ap_const_lv32_2 = "10";
const sc_lv<32> flat::ap_const_lv32_3 = "11";
const sc_lv<32> flat::ap_const_lv32_4 = "100";
const sc_lv<32> flat::ap_const_lv32_5 = "101";
const sc_lv<32> flat::ap_const_lv32_6 = "110";
const sc_lv<32> flat::ap_const_lv32_7 = "111";
const sc_lv<32> flat::ap_const_lv32_8 = "1000";
const sc_lv<1> flat::ap_const_lv1_1 = "1";
const sc_lv<5> flat::ap_const_lv5_0 = "00000";
const sc_lv<3> flat::ap_const_lv3_0 = "000";
const sc_lv<9> flat::ap_const_lv9_0 = "000000000";
const sc_lv<5> flat::ap_const_lv5_19 = "11001";
const sc_lv<5> flat::ap_const_lv5_1 = "1";
const sc_lv<3> flat::ap_const_lv3_1 = "1";
const sc_lv<9> flat::ap_const_lv9_50 = "1010000";
const sc_lv<3> flat::ap_const_lv3_5 = "101";
const sc_lv<2> flat::ap_const_lv2_0 = "00";
const sc_lv<4> flat::ap_const_lv4_0 = "0000";
const sc_lv<10> flat::ap_const_lv10_1 = "1";
const sc_lv<10> flat::ap_const_lv10_2 = "10";
const sc_lv<10> flat::ap_const_lv10_3 = "11";
const sc_lv<9> flat::ap_const_lv9_1 = "1";
const sc_lv<10> flat::ap_const_lv10_4 = "100";
const sc_lv<10> flat::ap_const_lv10_5 = "101";
const sc_lv<9> flat::ap_const_lv9_3 = "11";
const sc_lv<10> flat::ap_const_lv10_6 = "110";
const sc_lv<10> flat::ap_const_lv10_7 = "111";
const sc_lv<10> flat::ap_const_lv10_8 = "1000";
const sc_lv<10> flat::ap_const_lv10_9 = "1001";
const sc_lv<9> flat::ap_const_lv9_7 = "111";
const sc_lv<10> flat::ap_const_lv10_A = "1010";
const sc_lv<10> flat::ap_const_lv10_B = "1011";
const sc_lv<10> flat::ap_const_lv10_C = "1100";
const sc_lv<10> flat::ap_const_lv10_D = "1101";
const sc_lv<9> flat::ap_const_lv9_10 = "10000";
const sc_lv<10> flat::ap_const_lv10_E = "1110";
const sc_lv<10> flat::ap_const_lv10_F = "1111";
const sc_lv<9> flat::ap_const_lv9_F = "1111";
const sc_lv<32> flat::ap_const_lv32_9 = "1001";

flat::flat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln14_1_fu_519_p2);
    sensitive << ( add_ln14_fu_501_p2 );
    sensitive << ( zext_ln14_18_fu_515_p1 );

    SC_METHOD(thread_add_ln14_fu_501_p2);
    sensitive << ( zext_ln14_fu_485_p1 );
    sensitive << ( zext_ln14_1_fu_497_p1 );

    SC_METHOD(thread_add_ln15_10_fu_822_p2);
    sensitive << ( zext_ln15_2_reg_999 );

    SC_METHOD(thread_add_ln15_11_fu_832_p2);
    sensitive << ( zext_ln15_2_reg_999 );

    SC_METHOD(thread_add_ln15_12_fu_847_p2);
    sensitive << ( zext_ln15_2_reg_999 );

    SC_METHOD(thread_add_ln15_1_fu_449_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_402_p4 );

    SC_METHOD(thread_add_ln15_2_fu_606_p2);
    sensitive << ( zext_ln15_fu_603_p1 );

    SC_METHOD(thread_add_ln15_3_fu_650_p2);
    sensitive << ( zext_ln15_1_fu_647_p1 );

    SC_METHOD(thread_add_ln15_4_fu_661_p2);
    sensitive << ( zext_ln15_1_fu_647_p1 );

    SC_METHOD(thread_add_ln15_5_fu_692_p2);
    sensitive << ( zext_ln15_1_reg_969 );

    SC_METHOD(thread_add_ln15_6_fu_735_p2);
    sensitive << ( zext_ln15_2_fu_732_p1 );

    SC_METHOD(thread_add_ln15_7_fu_746_p2);
    sensitive << ( zext_ln15_2_fu_732_p1 );

    SC_METHOD(thread_add_ln15_8_fu_777_p2);
    sensitive << ( zext_ln15_2_reg_999 );

    SC_METHOD(thread_add_ln15_9_fu_787_p2);
    sensitive << ( zext_ln15_2_reg_999 );

    SC_METHOD(thread_add_ln15_fu_797_p2);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_add_ln6_fu_437_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_380_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln6_fu_431_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_c_0_phi_fu_424_p4);
    sensitive << ( c_0_reg_420 );
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c_reg_1033 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_402_p4);
    sensitive << ( i_0_reg_398 );
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln6_reg_896 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_413_p4);
    sensitive << ( i_1_reg_409 );
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln15_reg_1018 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_380_p4);
    sensitive << ( indvar_flatten_reg_376 );
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln6_reg_871 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_r_0_phi_fu_391_p4);
    sensitive << ( r_0_reg_387 );
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln15_2_reg_891 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_c_fu_842_p2);
    sensitive << ( select_ln15_1_reg_886 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_2_fu_569_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_4_fu_612_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_6_fu_656_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln14_8_fu_697_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln14_10_fu_741_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln14_12_fu_782_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( zext_ln14_14_fu_827_p1 );
    sensitive << ( zext_ln14_16_fu_852_p1 );

    SC_METHOD(thread_flat_array_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_3_fu_578_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_5_fu_622_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_7_fu_667_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln14_9_fu_707_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln14_11_fu_752_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln14_13_fu_792_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( zext_ln14_15_fu_837_p1 );
    sensitive << ( zext_ln14_17_fu_862_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_d0);
    sensitive << ( max_pool_out_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_flat_array_d1);
    sensitive << ( max_pool_out_q1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_flat_array_we1);
    sensitive << ( icmp_ln6_reg_867 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_icmp_ln6_fu_431_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_380_p4 );

    SC_METHOD(thread_icmp_ln9_fu_455_p2);
    sensitive << ( icmp_ln6_fu_431_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_c_0_phi_fu_424_p4 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_19_fu_533_p1 );
    sensitive << ( zext_ln14_21_fu_554_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_23_fu_588_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_25_fu_632_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_27_fu_677_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln14_29_fu_717_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln14_31_fu_762_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln14_33_fu_807_p1 );
    sensitive << ( ap_block_pp0_stage7 );

    SC_METHOD(thread_max_pool_out_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_20_fu_544_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln14_22_fu_564_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln14_24_fu_598_p1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( zext_ln14_26_fu_642_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln14_28_fu_687_p1 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( zext_ln14_30_fu_727_p1 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( zext_ln14_32_fu_772_p1 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( zext_ln14_34_fu_817_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_max_pool_out_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );

    SC_METHOD(thread_or_ln14_10_fu_722_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_11_fu_757_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_12_fu_767_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_13_fu_802_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_14_fu_812_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_1_fu_549_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_2_fu_559_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_3_fu_583_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_4_fu_593_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_5_fu_627_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_6_fu_637_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_7_fu_672_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_8_fu_682_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_9_fu_712_p2);
    sensitive << ( tmp_2_reg_901 );

    SC_METHOD(thread_or_ln14_fu_538_p2);
    sensitive << ( tmp_2_fu_525_p3 );

    SC_METHOD(thread_or_ln15_1_fu_617_p2);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_or_ln15_2_fu_702_p2);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_or_ln15_3_fu_857_p2);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_or_ln15_fu_573_p2);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_r_fu_443_p2);
    sensitive << ( ap_phi_mux_r_0_phi_fu_391_p4 );

    SC_METHOD(thread_select_ln15_1_fu_469_p3);
    sensitive << ( ap_phi_mux_c_0_phi_fu_424_p4 );
    sensitive << ( icmp_ln9_fu_455_p2 );

    SC_METHOD(thread_select_ln15_2_fu_477_p3);
    sensitive << ( ap_phi_mux_r_0_phi_fu_391_p4 );
    sensitive << ( icmp_ln9_fu_455_p2 );
    sensitive << ( r_fu_443_p2 );

    SC_METHOD(thread_select_ln15_fu_461_p3);
    sensitive << ( ap_phi_mux_i_1_phi_fu_413_p4 );
    sensitive << ( icmp_ln9_fu_455_p2 );
    sensitive << ( add_ln15_1_fu_449_p2 );

    SC_METHOD(thread_select_ln6_fu_507_p3);
    sensitive << ( ap_phi_mux_i_0_phi_fu_402_p4 );
    sensitive << ( icmp_ln9_fu_455_p2 );
    sensitive << ( add_ln15_1_fu_449_p2 );

    SC_METHOD(thread_tmp_2_fu_525_p3);
    sensitive << ( add_ln14_1_fu_519_p2 );

    SC_METHOD(thread_tmp_fu_489_p3);
    sensitive << ( select_ln15_2_fu_477_p3 );

    SC_METHOD(thread_zext_ln14_10_fu_741_p1);
    sensitive << ( add_ln15_6_fu_735_p2 );

    SC_METHOD(thread_zext_ln14_11_fu_752_p1);
    sensitive << ( add_ln15_7_fu_746_p2 );

    SC_METHOD(thread_zext_ln14_12_fu_782_p1);
    sensitive << ( add_ln15_8_fu_777_p2 );

    SC_METHOD(thread_zext_ln14_13_fu_792_p1);
    sensitive << ( add_ln15_9_fu_787_p2 );

    SC_METHOD(thread_zext_ln14_14_fu_827_p1);
    sensitive << ( add_ln15_10_fu_822_p2 );

    SC_METHOD(thread_zext_ln14_15_fu_837_p1);
    sensitive << ( add_ln15_11_fu_832_p2 );

    SC_METHOD(thread_zext_ln14_16_fu_852_p1);
    sensitive << ( add_ln15_12_fu_847_p2 );

    SC_METHOD(thread_zext_ln14_17_fu_862_p1);
    sensitive << ( or_ln15_3_fu_857_p2 );

    SC_METHOD(thread_zext_ln14_18_fu_515_p1);
    sensitive << ( select_ln15_1_fu_469_p3 );

    SC_METHOD(thread_zext_ln14_19_fu_533_p1);
    sensitive << ( tmp_2_fu_525_p3 );

    SC_METHOD(thread_zext_ln14_1_fu_497_p1);
    sensitive << ( tmp_fu_489_p3 );

    SC_METHOD(thread_zext_ln14_20_fu_544_p1);
    sensitive << ( or_ln14_fu_538_p2 );

    SC_METHOD(thread_zext_ln14_21_fu_554_p1);
    sensitive << ( or_ln14_1_fu_549_p2 );

    SC_METHOD(thread_zext_ln14_22_fu_564_p1);
    sensitive << ( or_ln14_2_fu_559_p2 );

    SC_METHOD(thread_zext_ln14_23_fu_588_p1);
    sensitive << ( or_ln14_3_fu_583_p2 );

    SC_METHOD(thread_zext_ln14_24_fu_598_p1);
    sensitive << ( or_ln14_4_fu_593_p2 );

    SC_METHOD(thread_zext_ln14_25_fu_632_p1);
    sensitive << ( or_ln14_5_fu_627_p2 );

    SC_METHOD(thread_zext_ln14_26_fu_642_p1);
    sensitive << ( or_ln14_6_fu_637_p2 );

    SC_METHOD(thread_zext_ln14_27_fu_677_p1);
    sensitive << ( or_ln14_7_fu_672_p2 );

    SC_METHOD(thread_zext_ln14_28_fu_687_p1);
    sensitive << ( or_ln14_8_fu_682_p2 );

    SC_METHOD(thread_zext_ln14_29_fu_717_p1);
    sensitive << ( or_ln14_9_fu_712_p2 );

    SC_METHOD(thread_zext_ln14_2_fu_569_p1);
    sensitive << ( select_ln15_reg_876 );

    SC_METHOD(thread_zext_ln14_30_fu_727_p1);
    sensitive << ( or_ln14_10_fu_722_p2 );

    SC_METHOD(thread_zext_ln14_31_fu_762_p1);
    sensitive << ( or_ln14_11_fu_757_p2 );

    SC_METHOD(thread_zext_ln14_32_fu_772_p1);
    sensitive << ( or_ln14_12_fu_767_p2 );

    SC_METHOD(thread_zext_ln14_33_fu_807_p1);
    sensitive << ( or_ln14_13_fu_802_p2 );

    SC_METHOD(thread_zext_ln14_34_fu_817_p1);
    sensitive << ( or_ln14_14_fu_812_p2 );

    SC_METHOD(thread_zext_ln14_3_fu_578_p1);
    sensitive << ( or_ln15_fu_573_p2 );

    SC_METHOD(thread_zext_ln14_4_fu_612_p1);
    sensitive << ( add_ln15_2_fu_606_p2 );

    SC_METHOD(thread_zext_ln14_5_fu_622_p1);
    sensitive << ( or_ln15_1_fu_617_p2 );

    SC_METHOD(thread_zext_ln14_6_fu_656_p1);
    sensitive << ( add_ln15_3_fu_650_p2 );

    SC_METHOD(thread_zext_ln14_7_fu_667_p1);
    sensitive << ( add_ln15_4_fu_661_p2 );

    SC_METHOD(thread_zext_ln14_8_fu_697_p1);
    sensitive << ( add_ln15_5_fu_692_p2 );

    SC_METHOD(thread_zext_ln14_9_fu_707_p1);
    sensitive << ( or_ln15_2_fu_702_p2 );

    SC_METHOD(thread_zext_ln14_fu_485_p1);
    sensitive << ( select_ln15_2_fu_477_p3 );

    SC_METHOD(thread_zext_ln15_1_fu_647_p1);
    sensitive << ( or_ln15_1_reg_954 );

    SC_METHOD(thread_zext_ln15_2_fu_732_p1);
    sensitive << ( or_ln15_2_reg_984 );

    SC_METHOD(thread_zext_ln15_fu_603_p1);
    sensitive << ( or_ln15_reg_939 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln6_fu_431_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_q0, "(port)max_pool_out_q0");
    sc_trace(mVcdFile, max_pool_out_address1, "(port)max_pool_out_address1");
    sc_trace(mVcdFile, max_pool_out_ce1, "(port)max_pool_out_ce1");
    sc_trace(mVcdFile, max_pool_out_q1, "(port)max_pool_out_q1");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "(port)flat_array_we0");
    sc_trace(mVcdFile, flat_array_d0, "(port)flat_array_d0");
    sc_trace(mVcdFile, flat_array_address1, "(port)flat_array_address1");
    sc_trace(mVcdFile, flat_array_ce1, "(port)flat_array_ce1");
    sc_trace(mVcdFile, flat_array_we1, "(port)flat_array_we1");
    sc_trace(mVcdFile, flat_array_d1, "(port)flat_array_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_376, "indvar_flatten_reg_376");
    sc_trace(mVcdFile, r_0_reg_387, "r_0_reg_387");
    sc_trace(mVcdFile, i_0_reg_398, "i_0_reg_398");
    sc_trace(mVcdFile, i_1_reg_409, "i_1_reg_409");
    sc_trace(mVcdFile, c_0_reg_420, "c_0_reg_420");
    sc_trace(mVcdFile, icmp_ln6_fu_431_p2, "icmp_ln6_fu_431_p2");
    sc_trace(mVcdFile, icmp_ln6_reg_867, "icmp_ln6_reg_867");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter1, "ap_block_state10_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln6_fu_437_p2, "add_ln6_fu_437_p2");
    sc_trace(mVcdFile, add_ln6_reg_871, "add_ln6_reg_871");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln15_fu_461_p3, "select_ln15_fu_461_p3");
    sc_trace(mVcdFile, select_ln15_reg_876, "select_ln15_reg_876");
    sc_trace(mVcdFile, select_ln15_1_fu_469_p3, "select_ln15_1_fu_469_p3");
    sc_trace(mVcdFile, select_ln15_1_reg_886, "select_ln15_1_reg_886");
    sc_trace(mVcdFile, select_ln15_2_fu_477_p3, "select_ln15_2_fu_477_p3");
    sc_trace(mVcdFile, select_ln15_2_reg_891, "select_ln15_2_reg_891");
    sc_trace(mVcdFile, select_ln6_fu_507_p3, "select_ln6_fu_507_p3");
    sc_trace(mVcdFile, select_ln6_reg_896, "select_ln6_reg_896");
    sc_trace(mVcdFile, tmp_2_fu_525_p3, "tmp_2_fu_525_p3");
    sc_trace(mVcdFile, tmp_2_reg_901, "tmp_2_reg_901");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, or_ln15_fu_573_p2, "or_ln15_fu_573_p2");
    sc_trace(mVcdFile, or_ln15_reg_939, "or_ln15_reg_939");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, or_ln15_1_fu_617_p2, "or_ln15_1_fu_617_p2");
    sc_trace(mVcdFile, or_ln15_1_reg_954, "or_ln15_1_reg_954");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, zext_ln15_1_fu_647_p1, "zext_ln15_1_fu_647_p1");
    sc_trace(mVcdFile, zext_ln15_1_reg_969, "zext_ln15_1_reg_969");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, or_ln15_2_fu_702_p2, "or_ln15_2_fu_702_p2");
    sc_trace(mVcdFile, or_ln15_2_reg_984, "or_ln15_2_reg_984");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, zext_ln15_2_fu_732_p1, "zext_ln15_2_fu_732_p1");
    sc_trace(mVcdFile, zext_ln15_2_reg_999, "zext_ln15_2_reg_999");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, add_ln15_fu_797_p2, "add_ln15_fu_797_p2");
    sc_trace(mVcdFile, add_ln15_reg_1018, "add_ln15_reg_1018");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, c_fu_842_p2, "c_fu_842_p2");
    sc_trace(mVcdFile, c_reg_1033, "c_reg_1033");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_380_p4, "ap_phi_mux_indvar_flatten_phi_fu_380_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_r_0_phi_fu_391_p4, "ap_phi_mux_r_0_phi_fu_391_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_402_p4, "ap_phi_mux_i_0_phi_fu_402_p4");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_413_p4, "ap_phi_mux_i_1_phi_fu_413_p4");
    sc_trace(mVcdFile, ap_phi_mux_c_0_phi_fu_424_p4, "ap_phi_mux_c_0_phi_fu_424_p4");
    sc_trace(mVcdFile, zext_ln14_19_fu_533_p1, "zext_ln14_19_fu_533_p1");
    sc_trace(mVcdFile, zext_ln14_20_fu_544_p1, "zext_ln14_20_fu_544_p1");
    sc_trace(mVcdFile, zext_ln14_21_fu_554_p1, "zext_ln14_21_fu_554_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln14_22_fu_564_p1, "zext_ln14_22_fu_564_p1");
    sc_trace(mVcdFile, zext_ln14_2_fu_569_p1, "zext_ln14_2_fu_569_p1");
    sc_trace(mVcdFile, zext_ln14_3_fu_578_p1, "zext_ln14_3_fu_578_p1");
    sc_trace(mVcdFile, zext_ln14_23_fu_588_p1, "zext_ln14_23_fu_588_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln14_24_fu_598_p1, "zext_ln14_24_fu_598_p1");
    sc_trace(mVcdFile, zext_ln14_4_fu_612_p1, "zext_ln14_4_fu_612_p1");
    sc_trace(mVcdFile, zext_ln14_5_fu_622_p1, "zext_ln14_5_fu_622_p1");
    sc_trace(mVcdFile, zext_ln14_25_fu_632_p1, "zext_ln14_25_fu_632_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, zext_ln14_26_fu_642_p1, "zext_ln14_26_fu_642_p1");
    sc_trace(mVcdFile, zext_ln14_6_fu_656_p1, "zext_ln14_6_fu_656_p1");
    sc_trace(mVcdFile, zext_ln14_7_fu_667_p1, "zext_ln14_7_fu_667_p1");
    sc_trace(mVcdFile, zext_ln14_27_fu_677_p1, "zext_ln14_27_fu_677_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, zext_ln14_28_fu_687_p1, "zext_ln14_28_fu_687_p1");
    sc_trace(mVcdFile, zext_ln14_8_fu_697_p1, "zext_ln14_8_fu_697_p1");
    sc_trace(mVcdFile, zext_ln14_9_fu_707_p1, "zext_ln14_9_fu_707_p1");
    sc_trace(mVcdFile, zext_ln14_29_fu_717_p1, "zext_ln14_29_fu_717_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, zext_ln14_30_fu_727_p1, "zext_ln14_30_fu_727_p1");
    sc_trace(mVcdFile, zext_ln14_10_fu_741_p1, "zext_ln14_10_fu_741_p1");
    sc_trace(mVcdFile, zext_ln14_11_fu_752_p1, "zext_ln14_11_fu_752_p1");
    sc_trace(mVcdFile, zext_ln14_31_fu_762_p1, "zext_ln14_31_fu_762_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, zext_ln14_32_fu_772_p1, "zext_ln14_32_fu_772_p1");
    sc_trace(mVcdFile, zext_ln14_12_fu_782_p1, "zext_ln14_12_fu_782_p1");
    sc_trace(mVcdFile, zext_ln14_13_fu_792_p1, "zext_ln14_13_fu_792_p1");
    sc_trace(mVcdFile, zext_ln14_33_fu_807_p1, "zext_ln14_33_fu_807_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, zext_ln14_34_fu_817_p1, "zext_ln14_34_fu_817_p1");
    sc_trace(mVcdFile, zext_ln14_14_fu_827_p1, "zext_ln14_14_fu_827_p1");
    sc_trace(mVcdFile, zext_ln14_15_fu_837_p1, "zext_ln14_15_fu_837_p1");
    sc_trace(mVcdFile, zext_ln14_16_fu_852_p1, "zext_ln14_16_fu_852_p1");
    sc_trace(mVcdFile, zext_ln14_17_fu_862_p1, "zext_ln14_17_fu_862_p1");
    sc_trace(mVcdFile, icmp_ln9_fu_455_p2, "icmp_ln9_fu_455_p2");
    sc_trace(mVcdFile, add_ln15_1_fu_449_p2, "add_ln15_1_fu_449_p2");
    sc_trace(mVcdFile, r_fu_443_p2, "r_fu_443_p2");
    sc_trace(mVcdFile, tmp_fu_489_p3, "tmp_fu_489_p3");
    sc_trace(mVcdFile, zext_ln14_fu_485_p1, "zext_ln14_fu_485_p1");
    sc_trace(mVcdFile, zext_ln14_1_fu_497_p1, "zext_ln14_1_fu_497_p1");
    sc_trace(mVcdFile, add_ln14_fu_501_p2, "add_ln14_fu_501_p2");
    sc_trace(mVcdFile, zext_ln14_18_fu_515_p1, "zext_ln14_18_fu_515_p1");
    sc_trace(mVcdFile, add_ln14_1_fu_519_p2, "add_ln14_1_fu_519_p2");
    sc_trace(mVcdFile, or_ln14_fu_538_p2, "or_ln14_fu_538_p2");
    sc_trace(mVcdFile, or_ln14_1_fu_549_p2, "or_ln14_1_fu_549_p2");
    sc_trace(mVcdFile, or_ln14_2_fu_559_p2, "or_ln14_2_fu_559_p2");
    sc_trace(mVcdFile, or_ln14_3_fu_583_p2, "or_ln14_3_fu_583_p2");
    sc_trace(mVcdFile, or_ln14_4_fu_593_p2, "or_ln14_4_fu_593_p2");
    sc_trace(mVcdFile, zext_ln15_fu_603_p1, "zext_ln15_fu_603_p1");
    sc_trace(mVcdFile, add_ln15_2_fu_606_p2, "add_ln15_2_fu_606_p2");
    sc_trace(mVcdFile, or_ln14_5_fu_627_p2, "or_ln14_5_fu_627_p2");
    sc_trace(mVcdFile, or_ln14_6_fu_637_p2, "or_ln14_6_fu_637_p2");
    sc_trace(mVcdFile, add_ln15_3_fu_650_p2, "add_ln15_3_fu_650_p2");
    sc_trace(mVcdFile, add_ln15_4_fu_661_p2, "add_ln15_4_fu_661_p2");
    sc_trace(mVcdFile, or_ln14_7_fu_672_p2, "or_ln14_7_fu_672_p2");
    sc_trace(mVcdFile, or_ln14_8_fu_682_p2, "or_ln14_8_fu_682_p2");
    sc_trace(mVcdFile, add_ln15_5_fu_692_p2, "add_ln15_5_fu_692_p2");
    sc_trace(mVcdFile, or_ln14_9_fu_712_p2, "or_ln14_9_fu_712_p2");
    sc_trace(mVcdFile, or_ln14_10_fu_722_p2, "or_ln14_10_fu_722_p2");
    sc_trace(mVcdFile, add_ln15_6_fu_735_p2, "add_ln15_6_fu_735_p2");
    sc_trace(mVcdFile, add_ln15_7_fu_746_p2, "add_ln15_7_fu_746_p2");
    sc_trace(mVcdFile, or_ln14_11_fu_757_p2, "or_ln14_11_fu_757_p2");
    sc_trace(mVcdFile, or_ln14_12_fu_767_p2, "or_ln14_12_fu_767_p2");
    sc_trace(mVcdFile, add_ln15_8_fu_777_p2, "add_ln15_8_fu_777_p2");
    sc_trace(mVcdFile, add_ln15_9_fu_787_p2, "add_ln15_9_fu_787_p2");
    sc_trace(mVcdFile, or_ln14_13_fu_802_p2, "or_ln14_13_fu_802_p2");
    sc_trace(mVcdFile, or_ln14_14_fu_812_p2, "or_ln14_14_fu_812_p2");
    sc_trace(mVcdFile, add_ln15_10_fu_822_p2, "add_ln15_10_fu_822_p2");
    sc_trace(mVcdFile, add_ln15_11_fu_832_p2, "add_ln15_11_fu_832_p2");
    sc_trace(mVcdFile, add_ln15_12_fu_847_p2, "add_ln15_12_fu_847_p2");
    sc_trace(mVcdFile, or_ln15_3_fu_857_p2, "or_ln15_3_fu_857_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("flat.hdltvin.dat");
    mHdltvoutHandle.open("flat.hdltvout.dat");
}

flat::~flat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void flat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        c_0_reg_420 = c_reg_1033.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_420 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_0_reg_398 = select_ln6_reg_896.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_398 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_1_reg_409 = add_ln15_reg_1018.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_1_reg_409 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        indvar_flatten_reg_376 = add_ln6_reg_871.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_376 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        r_0_reg_387 = select_ln15_2_reg_891.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_387 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        add_ln15_reg_1018 = add_ln15_fu_797_p2.read();
        c_reg_1033 = c_fu_842_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln6_reg_871 = add_ln6_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln6_reg_867 = icmp_ln6_fu_431_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        or_ln15_1_reg_954 = or_ln15_1_fu_617_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        or_ln15_2_reg_984 = or_ln15_2_fu_702_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0))) {
        or_ln15_reg_939 = or_ln15_fu_573_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_431_p2.read(), ap_const_lv1_0))) {
        select_ln15_1_reg_886 = select_ln15_1_fu_469_p3.read();
        select_ln15_reg_876 = select_ln15_fu_461_p3.read();
        tmp_2_reg_901 = tmp_2_fu_525_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_431_p2.read(), ap_const_lv1_0))) {
        select_ln15_2_reg_891 = select_ln15_2_fu_477_p3.read();
        select_ln6_reg_896 = select_ln6_fu_507_p3.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        zext_ln15_1_reg_969 = zext_ln15_1_fu_647_p1.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        zext_ln15_2_reg_999 = zext_ln15_2_fu_732_p1.read();
    }
}

void flat::thread_add_ln14_1_fu_519_p2() {
    add_ln14_1_fu_519_p2 = (!add_ln14_fu_501_p2.read().is_01() || !zext_ln14_18_fu_515_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln14_fu_501_p2.read()) + sc_biguint<6>(zext_ln14_18_fu_515_p1.read()));
}

void flat::thread_add_ln14_fu_501_p2() {
    add_ln14_fu_501_p2 = (!zext_ln14_fu_485_p1.read().is_01() || !zext_ln14_1_fu_497_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln14_fu_485_p1.read()) + sc_biguint<6>(zext_ln14_1_fu_497_p1.read()));
}

void flat::thread_add_ln15_10_fu_822_p2() {
    add_ln15_10_fu_822_p2 = (!zext_ln15_2_reg_999.read().is_01() || !ap_const_lv10_5.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_999.read()) + sc_biguint<10>(ap_const_lv10_5));
}

void flat::thread_add_ln15_11_fu_832_p2() {
    add_ln15_11_fu_832_p2 = (!zext_ln15_2_reg_999.read().is_01() || !ap_const_lv10_6.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_999.read()) + sc_biguint<10>(ap_const_lv10_6));
}

void flat::thread_add_ln15_12_fu_847_p2() {
    add_ln15_12_fu_847_p2 = (!zext_ln15_2_reg_999.read().is_01() || !ap_const_lv10_7.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_999.read()) + sc_biguint<10>(ap_const_lv10_7));
}

void flat::thread_add_ln15_1_fu_449_p2() {
    add_ln15_1_fu_449_p2 = (!ap_phi_mux_i_0_phi_fu_402_p4.read().is_01() || !ap_const_lv9_50.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_i_0_phi_fu_402_p4.read()) + sc_biguint<9>(ap_const_lv9_50));
}

void flat::thread_add_ln15_2_fu_606_p2() {
    add_ln15_2_fu_606_p2 = (!zext_ln15_fu_603_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_fu_603_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_3_fu_650_p2() {
    add_ln15_3_fu_650_p2 = (!zext_ln15_1_fu_647_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_fu_647_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_4_fu_661_p2() {
    add_ln15_4_fu_661_p2 = (!zext_ln15_1_fu_647_p1.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_fu_647_p1.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void flat::thread_add_ln15_5_fu_692_p2() {
    add_ln15_5_fu_692_p2 = (!zext_ln15_1_reg_969.read().is_01() || !ap_const_lv10_3.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_1_reg_969.read()) + sc_biguint<10>(ap_const_lv10_3));
}

void flat::thread_add_ln15_6_fu_735_p2() {
    add_ln15_6_fu_735_p2 = (!zext_ln15_2_fu_732_p1.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_fu_732_p1.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void flat::thread_add_ln15_7_fu_746_p2() {
    add_ln15_7_fu_746_p2 = (!zext_ln15_2_fu_732_p1.read().is_01() || !ap_const_lv10_2.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_fu_732_p1.read()) + sc_biguint<10>(ap_const_lv10_2));
}

void flat::thread_add_ln15_8_fu_777_p2() {
    add_ln15_8_fu_777_p2 = (!zext_ln15_2_reg_999.read().is_01() || !ap_const_lv10_3.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_999.read()) + sc_biguint<10>(ap_const_lv10_3));
}

void flat::thread_add_ln15_9_fu_787_p2() {
    add_ln15_9_fu_787_p2 = (!zext_ln15_2_reg_999.read().is_01() || !ap_const_lv10_4.is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln15_2_reg_999.read()) + sc_biguint<10>(ap_const_lv10_4));
}

void flat::thread_add_ln15_fu_797_p2() {
    add_ln15_fu_797_p2 = (!select_ln15_reg_876.read().is_01() || !ap_const_lv9_10.is_01())? sc_lv<9>(): (sc_biguint<9>(select_ln15_reg_876.read()) + sc_biguint<9>(ap_const_lv9_10));
}

void flat::thread_add_ln6_fu_437_p2() {
    add_ln6_fu_437_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_380_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_indvar_flatten_phi_fu_380_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void flat::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void flat::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void flat::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void flat::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void flat::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void flat::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void flat::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void flat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void flat::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[9];
}

void flat::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state10_pp0_stage0_iter1() {
    ap_block_state10_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void flat::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln6_fu_431_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void flat::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void flat::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void flat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flat::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void flat::thread_ap_phi_mux_c_0_phi_fu_424_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_0_phi_fu_424_p4 = c_reg_1033.read();
    } else {
        ap_phi_mux_c_0_phi_fu_424_p4 = c_0_reg_420.read();
    }
}

void flat::thread_ap_phi_mux_i_0_phi_fu_402_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_402_p4 = select_ln6_reg_896.read();
    } else {
        ap_phi_mux_i_0_phi_fu_402_p4 = i_0_reg_398.read();
    }
}

void flat::thread_ap_phi_mux_i_1_phi_fu_413_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_1_phi_fu_413_p4 = add_ln15_reg_1018.read();
    } else {
        ap_phi_mux_i_1_phi_fu_413_p4 = i_1_reg_409.read();
    }
}

void flat::thread_ap_phi_mux_indvar_flatten_phi_fu_380_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_380_p4 = add_ln6_reg_871.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_380_p4 = indvar_flatten_reg_376.read();
    }
}

void flat::thread_ap_phi_mux_r_0_phi_fu_391_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_r_0_phi_fu_391_p4 = select_ln15_2_reg_891.read();
    } else {
        ap_phi_mux_r_0_phi_fu_391_p4 = r_0_reg_387.read();
    }
}

void flat::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void flat::thread_c_fu_842_p2() {
    c_fu_842_p2 = (!select_ln15_1_reg_886.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(select_ln15_1_reg_886.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flat::thread_flat_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_16_fu_852_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_14_fu_827_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_12_fu_782_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_10_fu_741_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_8_fu_697_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_6_fu_656_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_4_fu_612_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_2_fu_569_p1.read());
    } else {
        flat_array_address0 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_17_fu_862_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_15_fu_837_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_13_fu_792_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_11_fu_752_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_9_fu_707_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_7_fu_667_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_5_fu_622_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        flat_array_address1 =  (sc_lv<9>) (zext_ln14_3_fu_578_p1.read());
    } else {
        flat_array_address1 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        flat_array_ce1 = ap_const_logic_1;
    } else {
        flat_array_ce1 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_d0() {
    flat_array_d0 = max_pool_out_q0.read();
}

void flat::thread_flat_array_d1() {
    flat_array_d1 = max_pool_out_q1.read();
}

void flat::thread_flat_array_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        flat_array_we0 = ap_const_logic_1;
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln6_reg_867.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        flat_array_we1 = ap_const_logic_1;
    } else {
        flat_array_we1 = ap_const_logic_0;
    }
}

void flat::thread_icmp_ln6_fu_431_p2() {
    icmp_ln6_fu_431_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_380_p4.read().is_01() || !ap_const_lv5_19.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_380_p4.read() == ap_const_lv5_19);
}

void flat::thread_icmp_ln9_fu_455_p2() {
    icmp_ln9_fu_455_p2 = (!ap_phi_mux_c_0_phi_fu_424_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_c_0_phi_fu_424_p4.read() == ap_const_lv3_5);
}

void flat::thread_max_pool_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_33_fu_807_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_31_fu_762_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_29_fu_717_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_27_fu_677_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_25_fu_632_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_23_fu_588_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_21_fu_554_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_19_fu_533_p1.read());
        } else {
            max_pool_out_address0 = "XXXXXXXXX";
        }
    } else {
        max_pool_out_address0 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_34_fu_817_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_32_fu_772_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_30_fu_727_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_28_fu_687_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_26_fu_642_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_24_fu_598_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_22_fu_564_p1.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            max_pool_out_address1 =  (sc_lv<9>) (zext_ln14_20_fu_544_p1.read());
        } else {
            max_pool_out_address1 = "XXXXXXXXX";
        }
    } else {
        max_pool_out_address1 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void flat::thread_max_pool_out_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        max_pool_out_ce1 = ap_const_logic_1;
    } else {
        max_pool_out_ce1 = ap_const_logic_0;
    }
}

void flat::thread_or_ln14_10_fu_722_p2() {
    or_ln14_10_fu_722_p2 = (tmp_2_reg_901.read() | ap_const_lv10_B);
}

void flat::thread_or_ln14_11_fu_757_p2() {
    or_ln14_11_fu_757_p2 = (tmp_2_reg_901.read() | ap_const_lv10_C);
}

void flat::thread_or_ln14_12_fu_767_p2() {
    or_ln14_12_fu_767_p2 = (tmp_2_reg_901.read() | ap_const_lv10_D);
}

void flat::thread_or_ln14_13_fu_802_p2() {
    or_ln14_13_fu_802_p2 = (tmp_2_reg_901.read() | ap_const_lv10_E);
}

void flat::thread_or_ln14_14_fu_812_p2() {
    or_ln14_14_fu_812_p2 = (tmp_2_reg_901.read() | ap_const_lv10_F);
}

void flat::thread_or_ln14_1_fu_549_p2() {
    or_ln14_1_fu_549_p2 = (tmp_2_reg_901.read() | ap_const_lv10_2);
}

void flat::thread_or_ln14_2_fu_559_p2() {
    or_ln14_2_fu_559_p2 = (tmp_2_reg_901.read() | ap_const_lv10_3);
}

void flat::thread_or_ln14_3_fu_583_p2() {
    or_ln14_3_fu_583_p2 = (tmp_2_reg_901.read() | ap_const_lv10_4);
}

void flat::thread_or_ln14_4_fu_593_p2() {
    or_ln14_4_fu_593_p2 = (tmp_2_reg_901.read() | ap_const_lv10_5);
}

void flat::thread_or_ln14_5_fu_627_p2() {
    or_ln14_5_fu_627_p2 = (tmp_2_reg_901.read() | ap_const_lv10_6);
}

void flat::thread_or_ln14_6_fu_637_p2() {
    or_ln14_6_fu_637_p2 = (tmp_2_reg_901.read() | ap_const_lv10_7);
}

void flat::thread_or_ln14_7_fu_672_p2() {
    or_ln14_7_fu_672_p2 = (tmp_2_reg_901.read() | ap_const_lv10_8);
}

void flat::thread_or_ln14_8_fu_682_p2() {
    or_ln14_8_fu_682_p2 = (tmp_2_reg_901.read() | ap_const_lv10_9);
}

void flat::thread_or_ln14_9_fu_712_p2() {
    or_ln14_9_fu_712_p2 = (tmp_2_reg_901.read() | ap_const_lv10_A);
}

void flat::thread_or_ln14_fu_538_p2() {
    or_ln14_fu_538_p2 = (tmp_2_fu_525_p3.read() | ap_const_lv10_1);
}

void flat::thread_or_ln15_1_fu_617_p2() {
    or_ln15_1_fu_617_p2 = (select_ln15_reg_876.read() | ap_const_lv9_3);
}

void flat::thread_or_ln15_2_fu_702_p2() {
    or_ln15_2_fu_702_p2 = (select_ln15_reg_876.read() | ap_const_lv9_7);
}

void flat::thread_or_ln15_3_fu_857_p2() {
    or_ln15_3_fu_857_p2 = (select_ln15_reg_876.read() | ap_const_lv9_F);
}

void flat::thread_or_ln15_fu_573_p2() {
    or_ln15_fu_573_p2 = (select_ln15_reg_876.read() | ap_const_lv9_1);
}

void flat::thread_r_fu_443_p2() {
    r_fu_443_p2 = (!ap_phi_mux_r_0_phi_fu_391_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_r_0_phi_fu_391_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flat::thread_select_ln15_1_fu_469_p3() {
    select_ln15_1_fu_469_p3 = (!icmp_ln9_fu_455_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln9_fu_455_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_c_0_phi_fu_424_p4.read());
}

void flat::thread_select_ln15_2_fu_477_p3() {
    select_ln15_2_fu_477_p3 = (!icmp_ln9_fu_455_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln9_fu_455_p2.read()[0].to_bool())? r_fu_443_p2.read(): ap_phi_mux_r_0_phi_fu_391_p4.read());
}

void flat::thread_select_ln15_fu_461_p3() {
    select_ln15_fu_461_p3 = (!icmp_ln9_fu_455_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln9_fu_455_p2.read()[0].to_bool())? add_ln15_1_fu_449_p2.read(): ap_phi_mux_i_1_phi_fu_413_p4.read());
}

void flat::thread_select_ln6_fu_507_p3() {
    select_ln6_fu_507_p3 = (!icmp_ln9_fu_455_p2.read()[0].is_01())? sc_lv<9>(): ((icmp_ln9_fu_455_p2.read()[0].to_bool())? add_ln15_1_fu_449_p2.read(): ap_phi_mux_i_0_phi_fu_402_p4.read());
}

void flat::thread_tmp_2_fu_525_p3() {
    tmp_2_fu_525_p3 = esl_concat<6,4>(add_ln14_1_fu_519_p2.read(), ap_const_lv4_0);
}

void flat::thread_tmp_fu_489_p3() {
    tmp_fu_489_p3 = esl_concat<3,2>(select_ln15_2_fu_477_p3.read(), ap_const_lv2_0);
}

void flat::thread_zext_ln14_10_fu_741_p1() {
    zext_ln14_10_fu_741_p1 = esl_zext<64,10>(add_ln15_6_fu_735_p2.read());
}

void flat::thread_zext_ln14_11_fu_752_p1() {
    zext_ln14_11_fu_752_p1 = esl_zext<64,10>(add_ln15_7_fu_746_p2.read());
}

void flat::thread_zext_ln14_12_fu_782_p1() {
    zext_ln14_12_fu_782_p1 = esl_zext<64,10>(add_ln15_8_fu_777_p2.read());
}

void flat::thread_zext_ln14_13_fu_792_p1() {
    zext_ln14_13_fu_792_p1 = esl_zext<64,10>(add_ln15_9_fu_787_p2.read());
}

void flat::thread_zext_ln14_14_fu_827_p1() {
    zext_ln14_14_fu_827_p1 = esl_zext<64,10>(add_ln15_10_fu_822_p2.read());
}

void flat::thread_zext_ln14_15_fu_837_p1() {
    zext_ln14_15_fu_837_p1 = esl_zext<64,10>(add_ln15_11_fu_832_p2.read());
}

void flat::thread_zext_ln14_16_fu_852_p1() {
    zext_ln14_16_fu_852_p1 = esl_zext<64,10>(add_ln15_12_fu_847_p2.read());
}

void flat::thread_zext_ln14_17_fu_862_p1() {
    zext_ln14_17_fu_862_p1 = esl_zext<64,9>(or_ln15_3_fu_857_p2.read());
}

void flat::thread_zext_ln14_18_fu_515_p1() {
    zext_ln14_18_fu_515_p1 = esl_zext<6,3>(select_ln15_1_fu_469_p3.read());
}

void flat::thread_zext_ln14_19_fu_533_p1() {
    zext_ln14_19_fu_533_p1 = esl_zext<64,10>(tmp_2_fu_525_p3.read());
}

void flat::thread_zext_ln14_1_fu_497_p1() {
    zext_ln14_1_fu_497_p1 = esl_zext<6,5>(tmp_fu_489_p3.read());
}

void flat::thread_zext_ln14_20_fu_544_p1() {
    zext_ln14_20_fu_544_p1 = esl_zext<64,10>(or_ln14_fu_538_p2.read());
}

void flat::thread_zext_ln14_21_fu_554_p1() {
    zext_ln14_21_fu_554_p1 = esl_zext<64,10>(or_ln14_1_fu_549_p2.read());
}

void flat::thread_zext_ln14_22_fu_564_p1() {
    zext_ln14_22_fu_564_p1 = esl_zext<64,10>(or_ln14_2_fu_559_p2.read());
}

void flat::thread_zext_ln14_23_fu_588_p1() {
    zext_ln14_23_fu_588_p1 = esl_zext<64,10>(or_ln14_3_fu_583_p2.read());
}

void flat::thread_zext_ln14_24_fu_598_p1() {
    zext_ln14_24_fu_598_p1 = esl_zext<64,10>(or_ln14_4_fu_593_p2.read());
}

void flat::thread_zext_ln14_25_fu_632_p1() {
    zext_ln14_25_fu_632_p1 = esl_zext<64,10>(or_ln14_5_fu_627_p2.read());
}

void flat::thread_zext_ln14_26_fu_642_p1() {
    zext_ln14_26_fu_642_p1 = esl_zext<64,10>(or_ln14_6_fu_637_p2.read());
}

void flat::thread_zext_ln14_27_fu_677_p1() {
    zext_ln14_27_fu_677_p1 = esl_zext<64,10>(or_ln14_7_fu_672_p2.read());
}

void flat::thread_zext_ln14_28_fu_687_p1() {
    zext_ln14_28_fu_687_p1 = esl_zext<64,10>(or_ln14_8_fu_682_p2.read());
}

void flat::thread_zext_ln14_29_fu_717_p1() {
    zext_ln14_29_fu_717_p1 = esl_zext<64,10>(or_ln14_9_fu_712_p2.read());
}

void flat::thread_zext_ln14_2_fu_569_p1() {
    zext_ln14_2_fu_569_p1 = esl_zext<64,9>(select_ln15_reg_876.read());
}

void flat::thread_zext_ln14_30_fu_727_p1() {
    zext_ln14_30_fu_727_p1 = esl_zext<64,10>(or_ln14_10_fu_722_p2.read());
}

void flat::thread_zext_ln14_31_fu_762_p1() {
    zext_ln14_31_fu_762_p1 = esl_zext<64,10>(or_ln14_11_fu_757_p2.read());
}

void flat::thread_zext_ln14_32_fu_772_p1() {
    zext_ln14_32_fu_772_p1 = esl_zext<64,10>(or_ln14_12_fu_767_p2.read());
}

void flat::thread_zext_ln14_33_fu_807_p1() {
    zext_ln14_33_fu_807_p1 = esl_zext<64,10>(or_ln14_13_fu_802_p2.read());
}

void flat::thread_zext_ln14_34_fu_817_p1() {
    zext_ln14_34_fu_817_p1 = esl_zext<64,10>(or_ln14_14_fu_812_p2.read());
}

void flat::thread_zext_ln14_3_fu_578_p1() {
    zext_ln14_3_fu_578_p1 = esl_zext<64,9>(or_ln15_fu_573_p2.read());
}

void flat::thread_zext_ln14_4_fu_612_p1() {
    zext_ln14_4_fu_612_p1 = esl_zext<64,10>(add_ln15_2_fu_606_p2.read());
}

void flat::thread_zext_ln14_5_fu_622_p1() {
    zext_ln14_5_fu_622_p1 = esl_zext<64,9>(or_ln15_1_fu_617_p2.read());
}

void flat::thread_zext_ln14_6_fu_656_p1() {
    zext_ln14_6_fu_656_p1 = esl_zext<64,10>(add_ln15_3_fu_650_p2.read());
}

void flat::thread_zext_ln14_7_fu_667_p1() {
    zext_ln14_7_fu_667_p1 = esl_zext<64,10>(add_ln15_4_fu_661_p2.read());
}

void flat::thread_zext_ln14_8_fu_697_p1() {
    zext_ln14_8_fu_697_p1 = esl_zext<64,10>(add_ln15_5_fu_692_p2.read());
}

void flat::thread_zext_ln14_9_fu_707_p1() {
    zext_ln14_9_fu_707_p1 = esl_zext<64,9>(or_ln15_2_fu_702_p2.read());
}

void flat::thread_zext_ln14_fu_485_p1() {
    zext_ln14_fu_485_p1 = esl_zext<6,3>(select_ln15_2_fu_477_p3.read());
}

void flat::thread_zext_ln15_1_fu_647_p1() {
    zext_ln15_1_fu_647_p1 = esl_zext<10,9>(or_ln15_1_reg_954.read());
}

void flat::thread_zext_ln15_2_fu_732_p1() {
    zext_ln15_2_fu_732_p1 = esl_zext<10,9>(or_ln15_2_reg_984.read());
}

void flat::thread_zext_ln15_fu_603_p1() {
    zext_ln15_fu_603_p1 = esl_zext<10,9>(or_ln15_reg_939.read());
}

void flat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_431_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln6_fu_431_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void flat::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q0\" :  \"" << max_pool_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address1\" :  \"" << max_pool_out_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce1\" :  \"" << max_pool_out_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q1\" :  \"" << max_pool_out_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address0\" :  \"" << flat_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce0\" :  \"" << flat_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we0\" :  \"" << flat_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d0\" :  \"" << flat_array_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address1\" :  \"" << flat_array_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce1\" :  \"" << flat_array_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we1\" :  \"" << flat_array_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d1\" :  \"" << flat_array_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

