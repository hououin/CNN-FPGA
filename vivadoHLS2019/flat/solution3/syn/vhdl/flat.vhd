-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity flat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    max_pool_out_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    max_pool_out_ce0 : OUT STD_LOGIC;
    max_pool_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_out_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    max_pool_out_ce1 : OUT STD_LOGIC;
    max_pool_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    flat_array_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    flat_array_ce0 : OUT STD_LOGIC;
    flat_array_we0 : OUT STD_LOGIC;
    flat_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    flat_array_address1 : OUT STD_LOGIC_VECTOR (8 downto 0);
    flat_array_ce1 : OUT STD_LOGIC;
    flat_array_we1 : OUT STD_LOGIC;
    flat_array_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of flat is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "flat,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.376500,HLS_SYN_LAT=202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=123,HLS_SYN_LUT=796,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_50 : STD_LOGIC_VECTOR (8 downto 0) := "001010000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000011";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_4 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_const_lv10_5 : STD_LOGIC_VECTOR (9 downto 0) := "0000000101";
    constant ap_const_lv9_3 : STD_LOGIC_VECTOR (8 downto 0) := "000000011";
    constant ap_const_lv10_6 : STD_LOGIC_VECTOR (9 downto 0) := "0000000110";
    constant ap_const_lv10_7 : STD_LOGIC_VECTOR (9 downto 0) := "0000000111";
    constant ap_const_lv10_8 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_const_lv10_9 : STD_LOGIC_VECTOR (9 downto 0) := "0000001001";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv10_A : STD_LOGIC_VECTOR (9 downto 0) := "0000001010";
    constant ap_const_lv10_B : STD_LOGIC_VECTOR (9 downto 0) := "0000001011";
    constant ap_const_lv10_C : STD_LOGIC_VECTOR (9 downto 0) := "0000001100";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv9_10 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_const_lv10_E : STD_LOGIC_VECTOR (9 downto 0) := "0000001110";
    constant ap_const_lv10_F : STD_LOGIC_VECTOR (9 downto 0) := "0000001111";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_376 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_0_reg_387 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_0_reg_398 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_1_reg_409 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_0_reg_420 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln6_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln6_reg_867 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln6_fu_437_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln6_reg_871 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln15_fu_461_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln15_reg_876 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln15_1_fu_469_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln15_1_reg_886 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln15_2_fu_477_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln15_2_reg_891 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln6_fu_507_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln6_reg_896 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_525_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_reg_901 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln15_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln15_reg_939 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal or_ln15_1_fu_617_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln15_1_reg_954 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal zext_ln15_1_fu_647_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln15_1_reg_969 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal or_ln15_2_fu_702_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_ln15_2_reg_984 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal zext_ln15_2_fu_732_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln15_2_reg_999 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal add_ln15_fu_797_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln15_reg_1018 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal c_fu_842_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_reg_1033 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_380_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_r_0_phi_fu_391_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_0_phi_fu_402_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_i_1_phi_fu_413_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_phi_mux_c_0_phi_fu_424_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln14_19_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_20_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_21_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln14_22_fu_564_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_2_fu_569_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_3_fu_578_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_23_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln14_24_fu_598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_4_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_5_fu_622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_25_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln14_26_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_6_fu_656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_7_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_27_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln14_28_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_8_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_9_fu_707_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_29_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln14_30_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_10_fu_741_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_11_fu_752_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_31_fu_762_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln14_32_fu_772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_12_fu_782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_13_fu_792_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_33_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln14_34_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_14_fu_827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_15_fu_837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_16_fu_852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln14_17_fu_862_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln9_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln15_1_fu_449_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_fu_443_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_489_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln14_fu_485_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln14_1_fu_497_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln14_fu_501_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln14_18_fu_515_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln14_1_fu_519_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln14_fu_538_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_1_fu_549_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_2_fu_559_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_3_fu_583_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_4_fu_593_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln15_fu_603_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_2_fu_606_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_5_fu_627_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_6_fu_637_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_3_fu_650_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_4_fu_661_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_7_fu_672_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_8_fu_682_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_5_fu_692_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_9_fu_712_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_10_fu_722_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_6_fu_735_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_7_fu_746_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_11_fu_757_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_12_fu_767_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_8_fu_777_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_9_fu_787_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_13_fu_802_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln14_14_fu_812_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_10_fu_822_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_11_fu_832_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln15_12_fu_847_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln15_3_fu_857_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_0_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                c_0_reg_420 <= c_reg_1033;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_0_reg_420 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_reg_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_0_reg_398 <= select_ln6_reg_896;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_398 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_1_reg_409_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_1_reg_409 <= add_ln15_reg_1018;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_reg_409 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_376 <= add_ln6_reg_871;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_376 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    r_0_reg_387_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                r_0_reg_387 <= select_ln15_2_reg_891;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_387 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln15_reg_1018 <= add_ln15_fu_797_p2;
                c_reg_1033 <= c_fu_842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln6_reg_871 <= add_ln6_fu_437_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln6_reg_867 <= icmp_ln6_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    or_ln15_1_reg_954(8 downto 2) <= or_ln15_1_fu_617_p2(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    or_ln15_2_reg_984(8 downto 3) <= or_ln15_2_fu_702_p2(8 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    or_ln15_reg_939(8 downto 1) <= or_ln15_fu_573_p2(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_fu_431_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln15_1_reg_886 <= select_ln15_1_fu_469_p3;
                select_ln15_reg_876 <= select_ln15_fu_461_p3;
                    tmp_2_reg_901(9 downto 4) <= tmp_2_fu_525_p3(9 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_fu_431_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln15_2_reg_891 <= select_ln15_2_fu_477_p3;
                select_ln6_reg_896 <= select_ln6_fu_507_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    zext_ln15_1_reg_969(8 downto 2) <= zext_ln15_1_fu_647_p1(8 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                    zext_ln15_2_reg_999(8 downto 3) <= zext_ln15_2_fu_732_p1(8 downto 3);
            end if;
        end if;
    end process;
    tmp_2_reg_901(3 downto 0) <= "0000";
    or_ln15_reg_939(0) <= '1';
    or_ln15_1_reg_954(1 downto 0) <= "11";
    zext_ln15_1_reg_969(1 downto 0) <= "11";
    zext_ln15_1_reg_969(9) <= '0';
    or_ln15_2_reg_984(2 downto 0) <= "111";
    zext_ln15_2_reg_999(2 downto 0) <= "111";
    zext_ln15_2_reg_999(9) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln6_fu_431_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln6_fu_431_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln6_fu_431_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln14_1_fu_519_p2 <= std_logic_vector(unsigned(add_ln14_fu_501_p2) + unsigned(zext_ln14_18_fu_515_p1));
    add_ln14_fu_501_p2 <= std_logic_vector(unsigned(zext_ln14_fu_485_p1) + unsigned(zext_ln14_1_fu_497_p1));
    add_ln15_10_fu_822_p2 <= std_logic_vector(unsigned(zext_ln15_2_reg_999) + unsigned(ap_const_lv10_5));
    add_ln15_11_fu_832_p2 <= std_logic_vector(unsigned(zext_ln15_2_reg_999) + unsigned(ap_const_lv10_6));
    add_ln15_12_fu_847_p2 <= std_logic_vector(unsigned(zext_ln15_2_reg_999) + unsigned(ap_const_lv10_7));
    add_ln15_1_fu_449_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_402_p4) + unsigned(ap_const_lv9_50));
    add_ln15_2_fu_606_p2 <= std_logic_vector(unsigned(zext_ln15_fu_603_p1) + unsigned(ap_const_lv10_1));
    add_ln15_3_fu_650_p2 <= std_logic_vector(unsigned(zext_ln15_1_fu_647_p1) + unsigned(ap_const_lv10_1));
    add_ln15_4_fu_661_p2 <= std_logic_vector(unsigned(zext_ln15_1_fu_647_p1) + unsigned(ap_const_lv10_2));
    add_ln15_5_fu_692_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_969) + unsigned(ap_const_lv10_3));
    add_ln15_6_fu_735_p2 <= std_logic_vector(unsigned(zext_ln15_2_fu_732_p1) + unsigned(ap_const_lv10_1));
    add_ln15_7_fu_746_p2 <= std_logic_vector(unsigned(zext_ln15_2_fu_732_p1) + unsigned(ap_const_lv10_2));
    add_ln15_8_fu_777_p2 <= std_logic_vector(unsigned(zext_ln15_2_reg_999) + unsigned(ap_const_lv10_3));
    add_ln15_9_fu_787_p2 <= std_logic_vector(unsigned(zext_ln15_2_reg_999) + unsigned(ap_const_lv10_4));
    add_ln15_fu_797_p2 <= std_logic_vector(unsigned(select_ln15_reg_876) + unsigned(ap_const_lv9_10));
    add_ln6_fu_437_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_380_p4) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln6_fu_431_p2)
    begin
        if ((icmp_ln6_fu_431_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_424_p4_assign_proc : process(c_0_reg_420, icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, c_reg_1033, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_c_0_phi_fu_424_p4 <= c_reg_1033;
        else 
            ap_phi_mux_c_0_phi_fu_424_p4 <= c_0_reg_420;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_402_p4_assign_proc : process(i_0_reg_398, icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, select_ln6_reg_896, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_0_phi_fu_402_p4 <= select_ln6_reg_896;
        else 
            ap_phi_mux_i_0_phi_fu_402_p4 <= i_0_reg_398;
        end if; 
    end process;


    ap_phi_mux_i_1_phi_fu_413_p4_assign_proc : process(i_1_reg_409, icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, add_ln15_reg_1018, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_1_phi_fu_413_p4 <= add_ln15_reg_1018;
        else 
            ap_phi_mux_i_1_phi_fu_413_p4 <= i_1_reg_409;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_380_p4_assign_proc : process(indvar_flatten_reg_376, icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, add_ln6_reg_871, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_380_p4 <= add_ln6_reg_871;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_380_p4 <= indvar_flatten_reg_376;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_391_p4_assign_proc : process(r_0_reg_387, icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, select_ln15_2_reg_891, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_r_0_phi_fu_391_p4 <= select_ln15_2_reg_891;
        else 
            ap_phi_mux_r_0_phi_fu_391_p4 <= r_0_reg_387;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_842_p2 <= std_logic_vector(unsigned(select_ln15_1_reg_886) + unsigned(ap_const_lv3_1));

    flat_array_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln14_2_fu_569_p1, ap_block_pp0_stage2, zext_ln14_4_fu_612_p1, ap_block_pp0_stage3, zext_ln14_6_fu_656_p1, ap_block_pp0_stage4, zext_ln14_8_fu_697_p1, ap_block_pp0_stage5, zext_ln14_10_fu_741_p1, ap_block_pp0_stage6, zext_ln14_12_fu_782_p1, ap_block_pp0_stage7, zext_ln14_14_fu_827_p1, zext_ln14_16_fu_852_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            flat_array_address0 <= zext_ln14_16_fu_852_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            flat_array_address0 <= zext_ln14_14_fu_827_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            flat_array_address0 <= zext_ln14_12_fu_782_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            flat_array_address0 <= zext_ln14_10_fu_741_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            flat_array_address0 <= zext_ln14_8_fu_697_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            flat_array_address0 <= zext_ln14_6_fu_656_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            flat_array_address0 <= zext_ln14_4_fu_612_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            flat_array_address0 <= zext_ln14_2_fu_569_p1(9 - 1 downto 0);
        else 
            flat_array_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    flat_array_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, zext_ln14_3_fu_578_p1, ap_block_pp0_stage2, zext_ln14_5_fu_622_p1, ap_block_pp0_stage3, zext_ln14_7_fu_667_p1, ap_block_pp0_stage4, zext_ln14_9_fu_707_p1, ap_block_pp0_stage5, zext_ln14_11_fu_752_p1, ap_block_pp0_stage6, zext_ln14_13_fu_792_p1, ap_block_pp0_stage7, zext_ln14_15_fu_837_p1, zext_ln14_17_fu_862_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            flat_array_address1 <= zext_ln14_17_fu_862_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            flat_array_address1 <= zext_ln14_15_fu_837_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            flat_array_address1 <= zext_ln14_13_fu_792_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            flat_array_address1 <= zext_ln14_11_fu_752_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            flat_array_address1 <= zext_ln14_9_fu_707_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            flat_array_address1 <= zext_ln14_7_fu_667_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            flat_array_address1 <= zext_ln14_5_fu_622_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            flat_array_address1 <= zext_ln14_3_fu_578_p1(9 - 1 downto 0);
        else 
            flat_array_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    flat_array_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flat_array_ce0 <= ap_const_logic_1;
        else 
            flat_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flat_array_ce1 <= ap_const_logic_1;
        else 
            flat_array_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    flat_array_d0 <= max_pool_out_q0;
    flat_array_d1 <= max_pool_out_q1;

    flat_array_we0_assign_proc : process(icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flat_array_we0 <= ap_const_logic_1;
        else 
            flat_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    flat_array_we1_assign_proc : process(icmp_ln6_reg_867, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln6_reg_867 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            flat_array_we1 <= ap_const_logic_1;
        else 
            flat_array_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln6_fu_431_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_380_p4 = ap_const_lv5_19) else "0";
    icmp_ln9_fu_455_p2 <= "1" when (ap_phi_mux_c_0_phi_fu_424_p4 = ap_const_lv3_5) else "0";

    max_pool_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, zext_ln14_19_fu_533_p1, zext_ln14_21_fu_554_p1, ap_block_pp0_stage1, zext_ln14_23_fu_588_p1, ap_block_pp0_stage2, zext_ln14_25_fu_632_p1, ap_block_pp0_stage3, zext_ln14_27_fu_677_p1, ap_block_pp0_stage4, zext_ln14_29_fu_717_p1, ap_block_pp0_stage5, zext_ln14_31_fu_762_p1, ap_block_pp0_stage6, zext_ln14_33_fu_807_p1, ap_block_pp0_stage7)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                max_pool_out_address0 <= zext_ln14_33_fu_807_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                max_pool_out_address0 <= zext_ln14_31_fu_762_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                max_pool_out_address0 <= zext_ln14_29_fu_717_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                max_pool_out_address0 <= zext_ln14_27_fu_677_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                max_pool_out_address0 <= zext_ln14_25_fu_632_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                max_pool_out_address0 <= zext_ln14_23_fu_588_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                max_pool_out_address0 <= zext_ln14_21_fu_554_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                max_pool_out_address0 <= zext_ln14_19_fu_533_p1(9 - 1 downto 0);
            else 
                max_pool_out_address0 <= "XXXXXXXXX";
            end if;
        else 
            max_pool_out_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_out_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage0, zext_ln14_20_fu_544_p1, ap_block_pp0_stage1, zext_ln14_22_fu_564_p1, ap_block_pp0_stage2, zext_ln14_24_fu_598_p1, ap_block_pp0_stage3, zext_ln14_26_fu_642_p1, ap_block_pp0_stage4, zext_ln14_28_fu_687_p1, ap_block_pp0_stage5, zext_ln14_30_fu_727_p1, ap_block_pp0_stage6, zext_ln14_32_fu_772_p1, ap_block_pp0_stage7, zext_ln14_34_fu_817_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                max_pool_out_address1 <= zext_ln14_34_fu_817_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                max_pool_out_address1 <= zext_ln14_32_fu_772_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                max_pool_out_address1 <= zext_ln14_30_fu_727_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                max_pool_out_address1 <= zext_ln14_28_fu_687_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                max_pool_out_address1 <= zext_ln14_26_fu_642_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                max_pool_out_address1 <= zext_ln14_24_fu_598_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                max_pool_out_address1 <= zext_ln14_22_fu_564_p1(9 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                max_pool_out_address1 <= zext_ln14_20_fu_544_p1(9 - 1 downto 0);
            else 
                max_pool_out_address1 <= "XXXXXXXXX";
            end if;
        else 
            max_pool_out_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    max_pool_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            max_pool_out_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            max_pool_out_ce1 <= ap_const_logic_1;
        else 
            max_pool_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln14_10_fu_722_p2 <= (tmp_2_reg_901 or ap_const_lv10_B);
    or_ln14_11_fu_757_p2 <= (tmp_2_reg_901 or ap_const_lv10_C);
    or_ln14_12_fu_767_p2 <= (tmp_2_reg_901 or ap_const_lv10_D);
    or_ln14_13_fu_802_p2 <= (tmp_2_reg_901 or ap_const_lv10_E);
    or_ln14_14_fu_812_p2 <= (tmp_2_reg_901 or ap_const_lv10_F);
    or_ln14_1_fu_549_p2 <= (tmp_2_reg_901 or ap_const_lv10_2);
    or_ln14_2_fu_559_p2 <= (tmp_2_reg_901 or ap_const_lv10_3);
    or_ln14_3_fu_583_p2 <= (tmp_2_reg_901 or ap_const_lv10_4);
    or_ln14_4_fu_593_p2 <= (tmp_2_reg_901 or ap_const_lv10_5);
    or_ln14_5_fu_627_p2 <= (tmp_2_reg_901 or ap_const_lv10_6);
    or_ln14_6_fu_637_p2 <= (tmp_2_reg_901 or ap_const_lv10_7);
    or_ln14_7_fu_672_p2 <= (tmp_2_reg_901 or ap_const_lv10_8);
    or_ln14_8_fu_682_p2 <= (tmp_2_reg_901 or ap_const_lv10_9);
    or_ln14_9_fu_712_p2 <= (tmp_2_reg_901 or ap_const_lv10_A);
    or_ln14_fu_538_p2 <= (tmp_2_fu_525_p3 or ap_const_lv10_1);
    or_ln15_1_fu_617_p2 <= (select_ln15_reg_876 or ap_const_lv9_3);
    or_ln15_2_fu_702_p2 <= (select_ln15_reg_876 or ap_const_lv9_7);
    or_ln15_3_fu_857_p2 <= (select_ln15_reg_876 or ap_const_lv9_F);
    or_ln15_fu_573_p2 <= (select_ln15_reg_876 or ap_const_lv9_1);
    r_fu_443_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_0_phi_fu_391_p4) + unsigned(ap_const_lv3_1));
    select_ln15_1_fu_469_p3 <= 
        ap_const_lv3_0 when (icmp_ln9_fu_455_p2(0) = '1') else 
        ap_phi_mux_c_0_phi_fu_424_p4;
    select_ln15_2_fu_477_p3 <= 
        r_fu_443_p2 when (icmp_ln9_fu_455_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_391_p4;
    select_ln15_fu_461_p3 <= 
        add_ln15_1_fu_449_p2 when (icmp_ln9_fu_455_p2(0) = '1') else 
        ap_phi_mux_i_1_phi_fu_413_p4;
    select_ln6_fu_507_p3 <= 
        add_ln15_1_fu_449_p2 when (icmp_ln9_fu_455_p2(0) = '1') else 
        ap_phi_mux_i_0_phi_fu_402_p4;
    tmp_2_fu_525_p3 <= (add_ln14_1_fu_519_p2 & ap_const_lv4_0);
    tmp_fu_489_p3 <= (select_ln15_2_fu_477_p3 & ap_const_lv2_0);
    zext_ln14_10_fu_741_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_6_fu_735_p2),64));
    zext_ln14_11_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_7_fu_746_p2),64));
    zext_ln14_12_fu_782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_8_fu_777_p2),64));
    zext_ln14_13_fu_792_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_9_fu_787_p2),64));
    zext_ln14_14_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_10_fu_822_p2),64));
    zext_ln14_15_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_11_fu_832_p2),64));
    zext_ln14_16_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_12_fu_847_p2),64));
    zext_ln14_17_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_3_fu_857_p2),64));
    zext_ln14_18_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln15_1_fu_469_p3),6));
    zext_ln14_19_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_525_p3),64));
    zext_ln14_1_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_489_p3),6));
    zext_ln14_20_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_fu_538_p2),64));
    zext_ln14_21_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_1_fu_549_p2),64));
    zext_ln14_22_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_2_fu_559_p2),64));
    zext_ln14_23_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_3_fu_583_p2),64));
    zext_ln14_24_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_4_fu_593_p2),64));
    zext_ln14_25_fu_632_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_5_fu_627_p2),64));
    zext_ln14_26_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_6_fu_637_p2),64));
    zext_ln14_27_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_7_fu_672_p2),64));
    zext_ln14_28_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_8_fu_682_p2),64));
    zext_ln14_29_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_9_fu_712_p2),64));
    zext_ln14_2_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln15_reg_876),64));
    zext_ln14_30_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_10_fu_722_p2),64));
    zext_ln14_31_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_11_fu_757_p2),64));
    zext_ln14_32_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_12_fu_767_p2),64));
    zext_ln14_33_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_13_fu_802_p2),64));
    zext_ln14_34_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln14_14_fu_812_p2),64));
    zext_ln14_3_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_fu_573_p2),64));
    zext_ln14_4_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_2_fu_606_p2),64));
    zext_ln14_5_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_1_fu_617_p2),64));
    zext_ln14_6_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_3_fu_650_p2),64));
    zext_ln14_7_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_4_fu_661_p2),64));
    zext_ln14_8_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln15_5_fu_692_p2),64));
    zext_ln14_9_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_2_fu_702_p2),64));
    zext_ln14_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln15_2_fu_477_p3),6));
    zext_ln15_1_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_1_reg_954),10));
    zext_ln15_2_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_2_reg_984),10));
    zext_ln15_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln15_reg_939),10));
end behav;
