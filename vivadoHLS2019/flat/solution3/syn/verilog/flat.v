// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="flat,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.376500,HLS_SYN_LAT=202,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=123,HLS_SYN_LUT=796,HLS_VERSION=2019_1}" *)

module flat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_q0,
        max_pool_out_address1,
        max_pool_out_ce1,
        max_pool_out_q1,
        flat_array_address0,
        flat_array_ce0,
        flat_array_we0,
        flat_array_d0,
        flat_array_address1,
        flat_array_ce1,
        flat_array_we1,
        flat_array_d1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_pp0_stage3 = 10'd16;
parameter    ap_ST_fsm_pp0_stage4 = 10'd32;
parameter    ap_ST_fsm_pp0_stage5 = 10'd64;
parameter    ap_ST_fsm_pp0_stage6 = 10'd128;
parameter    ap_ST_fsm_pp0_stage7 = 10'd256;
parameter    ap_ST_fsm_state11 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] max_pool_out_address0;
output   max_pool_out_ce0;
input  [31:0] max_pool_out_q0;
output  [8:0] max_pool_out_address1;
output   max_pool_out_ce1;
input  [31:0] max_pool_out_q1;
output  [8:0] flat_array_address0;
output   flat_array_ce0;
output   flat_array_we0;
output  [31:0] flat_array_d0;
output  [8:0] flat_array_address1;
output   flat_array_ce1;
output   flat_array_we1;
output  [31:0] flat_array_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] max_pool_out_address0;
reg max_pool_out_ce0;
reg[8:0] max_pool_out_address1;
reg max_pool_out_ce1;
reg[8:0] flat_array_address0;
reg flat_array_ce0;
reg flat_array_we0;
reg[8:0] flat_array_address1;
reg flat_array_ce1;
reg flat_array_we1;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] indvar_flatten_reg_376;
reg   [2:0] r_0_reg_387;
reg   [8:0] i_0_reg_398;
reg   [8:0] i_1_reg_409;
reg   [2:0] c_0_reg_420;
wire   [0:0] icmp_ln6_fu_431_p2;
reg   [0:0] icmp_ln6_reg_867;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] add_ln6_fu_437_p2;
reg   [4:0] add_ln6_reg_871;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] select_ln15_fu_461_p3;
reg   [8:0] select_ln15_reg_876;
wire   [2:0] select_ln15_1_fu_469_p3;
reg   [2:0] select_ln15_1_reg_886;
wire   [2:0] select_ln15_2_fu_477_p3;
reg   [2:0] select_ln15_2_reg_891;
wire   [8:0] select_ln6_fu_507_p3;
reg   [8:0] select_ln6_reg_896;
wire   [9:0] tmp_2_fu_525_p3;
reg   [9:0] tmp_2_reg_901;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [8:0] or_ln15_fu_573_p2;
reg   [8:0] or_ln15_reg_939;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [8:0] or_ln15_1_fu_617_p2;
reg   [8:0] or_ln15_1_reg_954;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] zext_ln15_1_fu_647_p1;
reg   [9:0] zext_ln15_1_reg_969;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [8:0] or_ln15_2_fu_702_p2;
reg   [8:0] or_ln15_2_reg_984;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [9:0] zext_ln15_2_fu_732_p1;
reg   [9:0] zext_ln15_2_reg_999;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [8:0] add_ln15_fu_797_p2;
reg   [8:0] add_ln15_reg_1018;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [2:0] c_fu_842_p2;
reg   [2:0] c_reg_1033;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage7_subdone;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_380_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_r_0_phi_fu_391_p4;
reg   [8:0] ap_phi_mux_i_0_phi_fu_402_p4;
reg   [8:0] ap_phi_mux_i_1_phi_fu_413_p4;
reg   [2:0] ap_phi_mux_c_0_phi_fu_424_p4;
wire   [63:0] zext_ln14_19_fu_533_p1;
wire   [63:0] zext_ln14_20_fu_544_p1;
wire   [63:0] zext_ln14_21_fu_554_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln14_22_fu_564_p1;
wire   [63:0] zext_ln14_2_fu_569_p1;
wire   [63:0] zext_ln14_3_fu_578_p1;
wire   [63:0] zext_ln14_23_fu_588_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln14_24_fu_598_p1;
wire   [63:0] zext_ln14_4_fu_612_p1;
wire   [63:0] zext_ln14_5_fu_622_p1;
wire   [63:0] zext_ln14_25_fu_632_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln14_26_fu_642_p1;
wire   [63:0] zext_ln14_6_fu_656_p1;
wire   [63:0] zext_ln14_7_fu_667_p1;
wire   [63:0] zext_ln14_27_fu_677_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln14_28_fu_687_p1;
wire   [63:0] zext_ln14_8_fu_697_p1;
wire   [63:0] zext_ln14_9_fu_707_p1;
wire   [63:0] zext_ln14_29_fu_717_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln14_30_fu_727_p1;
wire   [63:0] zext_ln14_10_fu_741_p1;
wire   [63:0] zext_ln14_11_fu_752_p1;
wire   [63:0] zext_ln14_31_fu_762_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln14_32_fu_772_p1;
wire   [63:0] zext_ln14_12_fu_782_p1;
wire   [63:0] zext_ln14_13_fu_792_p1;
wire   [63:0] zext_ln14_33_fu_807_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln14_34_fu_817_p1;
wire   [63:0] zext_ln14_14_fu_827_p1;
wire   [63:0] zext_ln14_15_fu_837_p1;
wire   [63:0] zext_ln14_16_fu_852_p1;
wire   [63:0] zext_ln14_17_fu_862_p1;
wire   [0:0] icmp_ln9_fu_455_p2;
wire   [8:0] add_ln15_1_fu_449_p2;
wire   [2:0] r_fu_443_p2;
wire   [4:0] tmp_fu_489_p3;
wire   [5:0] zext_ln14_fu_485_p1;
wire   [5:0] zext_ln14_1_fu_497_p1;
wire   [5:0] add_ln14_fu_501_p2;
wire   [5:0] zext_ln14_18_fu_515_p1;
wire   [5:0] add_ln14_1_fu_519_p2;
wire   [9:0] or_ln14_fu_538_p2;
wire   [9:0] or_ln14_1_fu_549_p2;
wire   [9:0] or_ln14_2_fu_559_p2;
wire   [9:0] or_ln14_3_fu_583_p2;
wire   [9:0] or_ln14_4_fu_593_p2;
wire   [9:0] zext_ln15_fu_603_p1;
wire   [9:0] add_ln15_2_fu_606_p2;
wire   [9:0] or_ln14_5_fu_627_p2;
wire   [9:0] or_ln14_6_fu_637_p2;
wire   [9:0] add_ln15_3_fu_650_p2;
wire   [9:0] add_ln15_4_fu_661_p2;
wire   [9:0] or_ln14_7_fu_672_p2;
wire   [9:0] or_ln14_8_fu_682_p2;
wire   [9:0] add_ln15_5_fu_692_p2;
wire   [9:0] or_ln14_9_fu_712_p2;
wire   [9:0] or_ln14_10_fu_722_p2;
wire   [9:0] add_ln15_6_fu_735_p2;
wire   [9:0] add_ln15_7_fu_746_p2;
wire   [9:0] or_ln14_11_fu_757_p2;
wire   [9:0] or_ln14_12_fu_767_p2;
wire   [9:0] add_ln15_8_fu_777_p2;
wire   [9:0] add_ln15_9_fu_787_p2;
wire   [9:0] or_ln14_13_fu_802_p2;
wire   [9:0] or_ln14_14_fu_812_p2;
wire   [9:0] add_ln15_10_fu_822_p2;
wire   [9:0] add_ln15_11_fu_832_p2;
wire   [9:0] add_ln15_12_fu_847_p2;
wire   [8:0] or_ln15_3_fu_857_p2;
wire    ap_CS_fsm_state11;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        c_0_reg_420 <= c_reg_1033;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_420 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_0_reg_398 <= select_ln6_reg_896;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_398 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_1_reg_409 <= add_ln15_reg_1018;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_1_reg_409 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_376 <= add_ln6_reg_871;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_376 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_reg_387 <= select_ln15_2_reg_891;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_387 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln15_reg_1018 <= add_ln15_fu_797_p2;
        c_reg_1033 <= c_fu_842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln6_reg_871 <= add_ln6_fu_437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln6_reg_867 <= icmp_ln6_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        or_ln15_1_reg_954[8 : 2] <= or_ln15_1_fu_617_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        or_ln15_2_reg_984[8 : 3] <= or_ln15_2_fu_702_p2[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        or_ln15_reg_939[8 : 1] <= or_ln15_fu_573_p2[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_1_reg_886 <= select_ln15_1_fu_469_p3;
        select_ln15_reg_876 <= select_ln15_fu_461_p3;
        tmp_2_reg_901[9 : 4] <= tmp_2_fu_525_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_fu_431_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln15_2_reg_891 <= select_ln15_2_fu_477_p3;
        select_ln6_reg_896 <= select_ln6_fu_507_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        zext_ln15_1_reg_969[8 : 2] <= zext_ln15_1_fu_647_p1[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        zext_ln15_2_reg_999[8 : 3] <= zext_ln15_2_fu_732_p1[8 : 3];
    end
end

always @ (*) begin
    if ((icmp_ln6_fu_431_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_c_0_phi_fu_424_p4 = c_reg_1033;
    end else begin
        ap_phi_mux_c_0_phi_fu_424_p4 = c_0_reg_420;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_0_phi_fu_402_p4 = select_ln6_reg_896;
    end else begin
        ap_phi_mux_i_0_phi_fu_402_p4 = i_0_reg_398;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_1_phi_fu_413_p4 = add_ln15_reg_1018;
    end else begin
        ap_phi_mux_i_1_phi_fu_413_p4 = i_1_reg_409;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_380_p4 = add_ln6_reg_871;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_380_p4 = indvar_flatten_reg_376;
    end
end

always @ (*) begin
    if (((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_0_phi_fu_391_p4 = select_ln15_2_reg_891;
    end else begin
        ap_phi_mux_r_0_phi_fu_391_p4 = r_0_reg_387;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        flat_array_address0 = zext_ln14_16_fu_852_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        flat_array_address0 = zext_ln14_14_fu_827_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        flat_array_address0 = zext_ln14_12_fu_782_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        flat_array_address0 = zext_ln14_10_fu_741_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        flat_array_address0 = zext_ln14_8_fu_697_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        flat_array_address0 = zext_ln14_6_fu_656_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        flat_array_address0 = zext_ln14_4_fu_612_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        flat_array_address0 = zext_ln14_2_fu_569_p1;
    end else begin
        flat_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        flat_array_address1 = zext_ln14_17_fu_862_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        flat_array_address1 = zext_ln14_15_fu_837_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        flat_array_address1 = zext_ln14_13_fu_792_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        flat_array_address1 = zext_ln14_11_fu_752_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        flat_array_address1 = zext_ln14_9_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        flat_array_address1 = zext_ln14_7_fu_667_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        flat_array_address1 = zext_ln14_5_fu_622_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        flat_array_address1 = zext_ln14_3_fu_578_p1;
    end else begin
        flat_array_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_ce0 = 1'b1;
    end else begin
        flat_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_ce1 = 1'b1;
    end else begin
        flat_array_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_we0 = 1'b1;
    end else begin
        flat_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln6_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln6_reg_867 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln6_reg_867 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        flat_array_we1 = 1'b1;
    end else begin
        flat_array_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            max_pool_out_address0 = zext_ln14_33_fu_807_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            max_pool_out_address0 = zext_ln14_31_fu_762_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            max_pool_out_address0 = zext_ln14_29_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            max_pool_out_address0 = zext_ln14_27_fu_677_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            max_pool_out_address0 = zext_ln14_25_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            max_pool_out_address0 = zext_ln14_23_fu_588_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            max_pool_out_address0 = zext_ln14_21_fu_554_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_pool_out_address0 = zext_ln14_19_fu_533_p1;
        end else begin
            max_pool_out_address0 = 'bx;
        end
    end else begin
        max_pool_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            max_pool_out_address1 = zext_ln14_34_fu_817_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            max_pool_out_address1 = zext_ln14_32_fu_772_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            max_pool_out_address1 = zext_ln14_30_fu_727_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            max_pool_out_address1 = zext_ln14_28_fu_687_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            max_pool_out_address1 = zext_ln14_26_fu_642_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            max_pool_out_address1 = zext_ln14_24_fu_598_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            max_pool_out_address1 = zext_ln14_22_fu_564_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            max_pool_out_address1 = zext_ln14_20_fu_544_p1;
        end else begin
            max_pool_out_address1 = 'bx;
        end
    end else begin
        max_pool_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        max_pool_out_ce1 = 1'b1;
    end else begin
        max_pool_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln6_fu_431_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln6_fu_431_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_519_p2 = (add_ln14_fu_501_p2 + zext_ln14_18_fu_515_p1);

assign add_ln14_fu_501_p2 = (zext_ln14_fu_485_p1 + zext_ln14_1_fu_497_p1);

assign add_ln15_10_fu_822_p2 = (zext_ln15_2_reg_999 + 10'd5);

assign add_ln15_11_fu_832_p2 = (zext_ln15_2_reg_999 + 10'd6);

assign add_ln15_12_fu_847_p2 = (zext_ln15_2_reg_999 + 10'd7);

assign add_ln15_1_fu_449_p2 = (ap_phi_mux_i_0_phi_fu_402_p4 + 9'd80);

assign add_ln15_2_fu_606_p2 = (zext_ln15_fu_603_p1 + 10'd1);

assign add_ln15_3_fu_650_p2 = (zext_ln15_1_fu_647_p1 + 10'd1);

assign add_ln15_4_fu_661_p2 = (zext_ln15_1_fu_647_p1 + 10'd2);

assign add_ln15_5_fu_692_p2 = (zext_ln15_1_reg_969 + 10'd3);

assign add_ln15_6_fu_735_p2 = (zext_ln15_2_fu_732_p1 + 10'd1);

assign add_ln15_7_fu_746_p2 = (zext_ln15_2_fu_732_p1 + 10'd2);

assign add_ln15_8_fu_777_p2 = (zext_ln15_2_reg_999 + 10'd3);

assign add_ln15_9_fu_787_p2 = (zext_ln15_2_reg_999 + 10'd4);

assign add_ln15_fu_797_p2 = (select_ln15_reg_876 + 9'd16);

assign add_ln6_fu_437_p2 = (ap_phi_mux_indvar_flatten_phi_fu_380_p4 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_842_p2 = (select_ln15_1_reg_886 + 3'd1);

assign flat_array_d0 = max_pool_out_q0;

assign flat_array_d1 = max_pool_out_q1;

assign icmp_ln6_fu_431_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_380_p4 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_455_p2 = ((ap_phi_mux_c_0_phi_fu_424_p4 == 3'd5) ? 1'b1 : 1'b0);

assign or_ln14_10_fu_722_p2 = (tmp_2_reg_901 | 10'd11);

assign or_ln14_11_fu_757_p2 = (tmp_2_reg_901 | 10'd12);

assign or_ln14_12_fu_767_p2 = (tmp_2_reg_901 | 10'd13);

assign or_ln14_13_fu_802_p2 = (tmp_2_reg_901 | 10'd14);

assign or_ln14_14_fu_812_p2 = (tmp_2_reg_901 | 10'd15);

assign or_ln14_1_fu_549_p2 = (tmp_2_reg_901 | 10'd2);

assign or_ln14_2_fu_559_p2 = (tmp_2_reg_901 | 10'd3);

assign or_ln14_3_fu_583_p2 = (tmp_2_reg_901 | 10'd4);

assign or_ln14_4_fu_593_p2 = (tmp_2_reg_901 | 10'd5);

assign or_ln14_5_fu_627_p2 = (tmp_2_reg_901 | 10'd6);

assign or_ln14_6_fu_637_p2 = (tmp_2_reg_901 | 10'd7);

assign or_ln14_7_fu_672_p2 = (tmp_2_reg_901 | 10'd8);

assign or_ln14_8_fu_682_p2 = (tmp_2_reg_901 | 10'd9);

assign or_ln14_9_fu_712_p2 = (tmp_2_reg_901 | 10'd10);

assign or_ln14_fu_538_p2 = (tmp_2_fu_525_p3 | 10'd1);

assign or_ln15_1_fu_617_p2 = (select_ln15_reg_876 | 9'd3);

assign or_ln15_2_fu_702_p2 = (select_ln15_reg_876 | 9'd7);

assign or_ln15_3_fu_857_p2 = (select_ln15_reg_876 | 9'd15);

assign or_ln15_fu_573_p2 = (select_ln15_reg_876 | 9'd1);

assign r_fu_443_p2 = (ap_phi_mux_r_0_phi_fu_391_p4 + 3'd1);

assign select_ln15_1_fu_469_p3 = ((icmp_ln9_fu_455_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_c_0_phi_fu_424_p4);

assign select_ln15_2_fu_477_p3 = ((icmp_ln9_fu_455_p2[0:0] === 1'b1) ? r_fu_443_p2 : ap_phi_mux_r_0_phi_fu_391_p4);

assign select_ln15_fu_461_p3 = ((icmp_ln9_fu_455_p2[0:0] === 1'b1) ? add_ln15_1_fu_449_p2 : ap_phi_mux_i_1_phi_fu_413_p4);

assign select_ln6_fu_507_p3 = ((icmp_ln9_fu_455_p2[0:0] === 1'b1) ? add_ln15_1_fu_449_p2 : ap_phi_mux_i_0_phi_fu_402_p4);

assign tmp_2_fu_525_p3 = {{add_ln14_1_fu_519_p2}, {4'd0}};

assign tmp_fu_489_p3 = {{select_ln15_2_fu_477_p3}, {2'd0}};

assign zext_ln14_10_fu_741_p1 = add_ln15_6_fu_735_p2;

assign zext_ln14_11_fu_752_p1 = add_ln15_7_fu_746_p2;

assign zext_ln14_12_fu_782_p1 = add_ln15_8_fu_777_p2;

assign zext_ln14_13_fu_792_p1 = add_ln15_9_fu_787_p2;

assign zext_ln14_14_fu_827_p1 = add_ln15_10_fu_822_p2;

assign zext_ln14_15_fu_837_p1 = add_ln15_11_fu_832_p2;

assign zext_ln14_16_fu_852_p1 = add_ln15_12_fu_847_p2;

assign zext_ln14_17_fu_862_p1 = or_ln15_3_fu_857_p2;

assign zext_ln14_18_fu_515_p1 = select_ln15_1_fu_469_p3;

assign zext_ln14_19_fu_533_p1 = tmp_2_fu_525_p3;

assign zext_ln14_1_fu_497_p1 = tmp_fu_489_p3;

assign zext_ln14_20_fu_544_p1 = or_ln14_fu_538_p2;

assign zext_ln14_21_fu_554_p1 = or_ln14_1_fu_549_p2;

assign zext_ln14_22_fu_564_p1 = or_ln14_2_fu_559_p2;

assign zext_ln14_23_fu_588_p1 = or_ln14_3_fu_583_p2;

assign zext_ln14_24_fu_598_p1 = or_ln14_4_fu_593_p2;

assign zext_ln14_25_fu_632_p1 = or_ln14_5_fu_627_p2;

assign zext_ln14_26_fu_642_p1 = or_ln14_6_fu_637_p2;

assign zext_ln14_27_fu_677_p1 = or_ln14_7_fu_672_p2;

assign zext_ln14_28_fu_687_p1 = or_ln14_8_fu_682_p2;

assign zext_ln14_29_fu_717_p1 = or_ln14_9_fu_712_p2;

assign zext_ln14_2_fu_569_p1 = select_ln15_reg_876;

assign zext_ln14_30_fu_727_p1 = or_ln14_10_fu_722_p2;

assign zext_ln14_31_fu_762_p1 = or_ln14_11_fu_757_p2;

assign zext_ln14_32_fu_772_p1 = or_ln14_12_fu_767_p2;

assign zext_ln14_33_fu_807_p1 = or_ln14_13_fu_802_p2;

assign zext_ln14_34_fu_817_p1 = or_ln14_14_fu_812_p2;

assign zext_ln14_3_fu_578_p1 = or_ln15_fu_573_p2;

assign zext_ln14_4_fu_612_p1 = add_ln15_2_fu_606_p2;

assign zext_ln14_5_fu_622_p1 = or_ln15_1_fu_617_p2;

assign zext_ln14_6_fu_656_p1 = add_ln15_3_fu_650_p2;

assign zext_ln14_7_fu_667_p1 = add_ln15_4_fu_661_p2;

assign zext_ln14_8_fu_697_p1 = add_ln15_5_fu_692_p2;

assign zext_ln14_9_fu_707_p1 = or_ln15_2_fu_702_p2;

assign zext_ln14_fu_485_p1 = select_ln15_2_fu_477_p3;

assign zext_ln15_1_fu_647_p1 = or_ln15_1_reg_954;

assign zext_ln15_2_fu_732_p1 = or_ln15_2_reg_984;

assign zext_ln15_fu_603_p1 = or_ln15_reg_939;

always @ (posedge ap_clk) begin
    tmp_2_reg_901[3:0] <= 4'b0000;
    or_ln15_reg_939[0] <= 1'b1;
    or_ln15_1_reg_954[1:0] <= 2'b11;
    zext_ln15_1_reg_969[1:0] <= 2'b11;
    zext_ln15_1_reg_969[9] <= 1'b0;
    or_ln15_2_reg_984[2:0] <= 3'b111;
    zext_ln15_2_reg_999[2:0] <= 3'b111;
    zext_ln15_2_reg_999[9] <= 1'b0;
end

endmodule //flat
