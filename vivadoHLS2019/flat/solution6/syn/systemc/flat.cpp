// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "flat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic flat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic flat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> flat::ap_ST_fsm_state1 = "1";
const sc_lv<12> flat::ap_ST_fsm_state2 = "10";
const sc_lv<12> flat::ap_ST_fsm_state3 = "100";
const sc_lv<12> flat::ap_ST_fsm_state4 = "1000";
const sc_lv<12> flat::ap_ST_fsm_state5 = "10000";
const sc_lv<12> flat::ap_ST_fsm_state6 = "100000";
const sc_lv<12> flat::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> flat::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> flat::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> flat::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> flat::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> flat::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> flat::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> flat::ap_const_lv32_1 = "1";
const sc_lv<1> flat::ap_const_lv1_0 = "0";
const sc_lv<32> flat::ap_const_lv32_2 = "10";
const sc_lv<1> flat::ap_const_lv1_1 = "1";
const sc_lv<32> flat::ap_const_lv32_3 = "11";
const sc_lv<32> flat::ap_const_lv32_4 = "100";
const sc_lv<32> flat::ap_const_lv32_5 = "101";
const sc_lv<32> flat::ap_const_lv32_6 = "110";
const sc_lv<32> flat::ap_const_lv32_7 = "111";
const sc_lv<32> flat::ap_const_lv32_8 = "1000";
const sc_lv<32> flat::ap_const_lv32_9 = "1001";
const sc_lv<32> flat::ap_const_lv32_A = "1010";
const sc_lv<32> flat::ap_const_lv32_B = "1011";
const sc_lv<3> flat::ap_const_lv3_0 = "000";
const sc_lv<9> flat::ap_const_lv9_0 = "000000000";
const sc_lv<5> flat::ap_const_lv5_0 = "00000";
const sc_lv<3> flat::ap_const_lv3_5 = "101";
const sc_lv<3> flat::ap_const_lv3_1 = "1";
const sc_lv<9> flat::ap_const_lv9_50 = "1010000";
const sc_lv<6> flat::ap_const_lv6_0 = "000000";
const sc_lv<4> flat::ap_const_lv4_0 = "0000";
const sc_lv<10> flat::ap_const_lv10_10 = "10000";
const sc_lv<10> flat::ap_const_lv10_20 = "100000";
const sc_lv<10> flat::ap_const_lv10_30 = "110000";
const sc_lv<10> flat::ap_const_lv10_40 = "1000000";
const sc_lv<9> flat::ap_const_lv9_10 = "10000";
const sc_lv<5> flat::ap_const_lv5_10 = "10000";
const sc_lv<5> flat::ap_const_lv5_1 = "1";
const sc_lv<9> flat::ap_const_lv9_20 = "100000";
const sc_lv<9> flat::ap_const_lv9_1 = "1";
const sc_lv<9> flat::ap_const_lv9_30 = "110000";
const sc_lv<9> flat::ap_const_lv9_40 = "1000000";
const bool flat::ap_const_boolean_1 = true;

flat::flat(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln12_1_fu_419_p2);
    sensitive << ( f_0_1_reg_218 );

    SC_METHOD(thread_add_ln12_2_fu_462_p2);
    sensitive << ( f_0_2_reg_239 );

    SC_METHOD(thread_add_ln12_3_fu_505_p2);
    sensitive << ( f_0_3_reg_260 );

    SC_METHOD(thread_add_ln12_4_fu_542_p2);
    sensitive << ( f_0_4_reg_281 );

    SC_METHOD(thread_add_ln12_fu_376_p2);
    sensitive << ( f_0_0_reg_197 );

    SC_METHOD(thread_add_ln14_1_fu_340_p2);
    sensitive << ( add_ln14_fu_334_p2 );

    SC_METHOD(thread_add_ln14_2_fu_346_p2);
    sensitive << ( add_ln14_fu_334_p2 );

    SC_METHOD(thread_add_ln14_3_fu_352_p2);
    sensitive << ( add_ln14_fu_334_p2 );

    SC_METHOD(thread_add_ln14_4_fu_358_p2);
    sensitive << ( add_ln14_fu_334_p2 );

    SC_METHOD(thread_add_ln14_5_fu_386_p2);
    sensitive << ( add_ln14_reg_586 );
    sensitive << ( zext_ln14_3_fu_382_p1 );

    SC_METHOD(thread_add_ln14_6_fu_429_p2);
    sensitive << ( add_ln14_1_reg_591 );
    sensitive << ( zext_ln14_7_fu_425_p1 );

    SC_METHOD(thread_add_ln14_7_fu_472_p2);
    sensitive << ( add_ln14_2_reg_596 );
    sensitive << ( zext_ln14_9_fu_468_p1 );

    SC_METHOD(thread_add_ln14_8_fu_515_p2);
    sensitive << ( add_ln14_3_reg_601 );
    sensitive << ( zext_ln14_11_fu_511_p1 );

    SC_METHOD(thread_add_ln14_9_fu_552_p2);
    sensitive << ( add_ln14_4_reg_606 );
    sensitive << ( zext_ln14_12_fu_548_p1 );

    SC_METHOD(thread_add_ln14_fu_334_p2);
    sensitive << ( zext_ln14_1_fu_330_p1 );
    sensitive << ( zext_ln14_fu_318_p1 );

    SC_METHOD(thread_add_ln15_1_fu_396_p2);
    sensitive << ( i_0_reg_174 );

    SC_METHOD(thread_add_ln15_2_fu_439_p2);
    sensitive << ( i_0_reg_174 );

    SC_METHOD(thread_add_ln15_3_fu_482_p2);
    sensitive << ( i_0_reg_174 );

    SC_METHOD(thread_add_ln15_4_fu_407_p2);
    sensitive << ( i_2_0_reg_186 );

    SC_METHOD(thread_add_ln15_5_fu_450_p2);
    sensitive << ( i_2_1_reg_208 );

    SC_METHOD(thread_add_ln15_6_fu_493_p2);
    sensitive << ( i_2_2_reg_229 );

    SC_METHOD(thread_add_ln15_7_fu_530_p2);
    sensitive << ( i_2_3_reg_250 );

    SC_METHOD(thread_add_ln15_8_fu_567_p2);
    sensitive << ( i_2_4_reg_271 );

    SC_METHOD(thread_add_ln15_fu_364_p2);
    sensitive << ( i_0_reg_174 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_292_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_292_p2 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( zext_ln14_2_fu_402_p1 );
    sensitive << ( zext_ln14_4_fu_445_p1 );
    sensitive << ( zext_ln14_6_fu_488_p1 );
    sensitive << ( zext_ln14_8_fu_525_p1 );
    sensitive << ( zext_ln14_10_fu_562_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_flat_array_d0);
    sensitive << ( max_pool_out_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_fu_304_p2);
    sensitive << ( i_0_reg_174 );

    SC_METHOD(thread_icmp_ln12_1_fu_413_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( f_0_1_reg_218 );

    SC_METHOD(thread_icmp_ln12_2_fu_456_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( f_0_2_reg_239 );

    SC_METHOD(thread_icmp_ln12_3_fu_499_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( f_0_3_reg_260 );

    SC_METHOD(thread_icmp_ln12_4_fu_536_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( f_0_4_reg_281 );

    SC_METHOD(thread_icmp_ln12_fu_370_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( f_0_0_reg_197 );

    SC_METHOD(thread_icmp_ln6_fu_292_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_163 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln14_5_fu_391_p1 );
    sensitive << ( sext_ln14_fu_434_p1 );
    sensitive << ( sext_ln14_1_fu_477_p1 );
    sensitive << ( sext_ln14_2_fu_520_p1 );
    sensitive << ( sext_ln14_3_fu_557_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_r_fu_298_p2);
    sensitive << ( r_0_reg_163 );

    SC_METHOD(thread_sext_ln14_1_fu_477_p1);
    sensitive << ( add_ln14_7_fu_472_p2 );

    SC_METHOD(thread_sext_ln14_2_fu_520_p1);
    sensitive << ( add_ln14_8_fu_515_p2 );

    SC_METHOD(thread_sext_ln14_3_fu_557_p1);
    sensitive << ( add_ln14_9_fu_552_p2 );

    SC_METHOD(thread_sext_ln14_fu_434_p1);
    sensitive << ( add_ln14_6_fu_429_p2 );

    SC_METHOD(thread_tmp_5_fu_310_p3);
    sensitive << ( r_0_reg_163 );

    SC_METHOD(thread_tmp_6_fu_322_p3);
    sensitive << ( r_0_reg_163 );

    SC_METHOD(thread_zext_ln14_10_fu_562_p1);
    sensitive << ( i_2_4_reg_271 );

    SC_METHOD(thread_zext_ln14_11_fu_511_p1);
    sensitive << ( f_0_3_reg_260 );

    SC_METHOD(thread_zext_ln14_12_fu_548_p1);
    sensitive << ( f_0_4_reg_281 );

    SC_METHOD(thread_zext_ln14_1_fu_330_p1);
    sensitive << ( tmp_6_fu_322_p3 );

    SC_METHOD(thread_zext_ln14_2_fu_402_p1);
    sensitive << ( i_2_0_reg_186 );

    SC_METHOD(thread_zext_ln14_3_fu_382_p1);
    sensitive << ( f_0_0_reg_197 );

    SC_METHOD(thread_zext_ln14_4_fu_445_p1);
    sensitive << ( i_2_1_reg_208 );

    SC_METHOD(thread_zext_ln14_5_fu_391_p1);
    sensitive << ( add_ln14_5_fu_386_p2 );

    SC_METHOD(thread_zext_ln14_6_fu_488_p1);
    sensitive << ( i_2_2_reg_229 );

    SC_METHOD(thread_zext_ln14_7_fu_425_p1);
    sensitive << ( f_0_1_reg_218 );

    SC_METHOD(thread_zext_ln14_8_fu_525_p1);
    sensitive << ( i_2_3_reg_250 );

    SC_METHOD(thread_zext_ln14_9_fu_468_p1);
    sensitive << ( f_0_2_reg_239 );

    SC_METHOD(thread_zext_ln14_fu_318_p1);
    sensitive << ( tmp_5_fu_310_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln6_fu_292_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln12_fu_370_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln12_1_fu_413_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln12_2_fu_456_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln12_3_fu_499_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln12_4_fu_536_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "flat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_q0, "(port)max_pool_out_q0");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "(port)flat_array_we0");
    sc_trace(mVcdFile, flat_array_d0, "(port)flat_array_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, r_fu_298_p2, "r_fu_298_p2");
    sc_trace(mVcdFile, r_reg_576, "r_reg_576");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_304_p2, "i_fu_304_p2");
    sc_trace(mVcdFile, i_reg_581, "i_reg_581");
    sc_trace(mVcdFile, icmp_ln6_fu_292_p2, "icmp_ln6_fu_292_p2");
    sc_trace(mVcdFile, add_ln14_fu_334_p2, "add_ln14_fu_334_p2");
    sc_trace(mVcdFile, add_ln14_reg_586, "add_ln14_reg_586");
    sc_trace(mVcdFile, add_ln14_1_fu_340_p2, "add_ln14_1_fu_340_p2");
    sc_trace(mVcdFile, add_ln14_1_reg_591, "add_ln14_1_reg_591");
    sc_trace(mVcdFile, add_ln14_2_fu_346_p2, "add_ln14_2_fu_346_p2");
    sc_trace(mVcdFile, add_ln14_2_reg_596, "add_ln14_2_reg_596");
    sc_trace(mVcdFile, add_ln14_3_fu_352_p2, "add_ln14_3_fu_352_p2");
    sc_trace(mVcdFile, add_ln14_3_reg_601, "add_ln14_3_reg_601");
    sc_trace(mVcdFile, add_ln14_4_fu_358_p2, "add_ln14_4_fu_358_p2");
    sc_trace(mVcdFile, add_ln14_4_reg_606, "add_ln14_4_reg_606");
    sc_trace(mVcdFile, add_ln15_fu_364_p2, "add_ln15_fu_364_p2");
    sc_trace(mVcdFile, add_ln15_reg_611, "add_ln15_reg_611");
    sc_trace(mVcdFile, add_ln12_fu_376_p2, "add_ln12_fu_376_p2");
    sc_trace(mVcdFile, add_ln12_reg_619, "add_ln12_reg_619");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln12_fu_370_p2, "icmp_ln12_fu_370_p2");
    sc_trace(mVcdFile, add_ln15_1_fu_396_p2, "add_ln15_1_fu_396_p2");
    sc_trace(mVcdFile, add_ln15_1_reg_629, "add_ln15_1_reg_629");
    sc_trace(mVcdFile, add_ln15_4_fu_407_p2, "add_ln15_4_fu_407_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln12_1_fu_419_p2, "add_ln12_1_fu_419_p2");
    sc_trace(mVcdFile, add_ln12_1_reg_642, "add_ln12_1_reg_642");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln12_1_fu_413_p2, "icmp_ln12_1_fu_413_p2");
    sc_trace(mVcdFile, add_ln15_2_fu_439_p2, "add_ln15_2_fu_439_p2");
    sc_trace(mVcdFile, add_ln15_2_reg_652, "add_ln15_2_reg_652");
    sc_trace(mVcdFile, add_ln15_5_fu_450_p2, "add_ln15_5_fu_450_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, add_ln12_2_fu_462_p2, "add_ln12_2_fu_462_p2");
    sc_trace(mVcdFile, add_ln12_2_reg_665, "add_ln12_2_reg_665");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln12_2_fu_456_p2, "icmp_ln12_2_fu_456_p2");
    sc_trace(mVcdFile, add_ln15_3_fu_482_p2, "add_ln15_3_fu_482_p2");
    sc_trace(mVcdFile, add_ln15_3_reg_675, "add_ln15_3_reg_675");
    sc_trace(mVcdFile, add_ln15_6_fu_493_p2, "add_ln15_6_fu_493_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, add_ln12_3_fu_505_p2, "add_ln12_3_fu_505_p2");
    sc_trace(mVcdFile, add_ln12_3_reg_688, "add_ln12_3_reg_688");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln12_3_fu_499_p2, "icmp_ln12_3_fu_499_p2");
    sc_trace(mVcdFile, add_ln15_7_fu_530_p2, "add_ln15_7_fu_530_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, add_ln12_4_fu_542_p2, "add_ln12_4_fu_542_p2");
    sc_trace(mVcdFile, add_ln12_4_reg_706, "add_ln12_4_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, icmp_ln12_4_fu_536_p2, "icmp_ln12_4_fu_536_p2");
    sc_trace(mVcdFile, add_ln15_8_fu_567_p2, "add_ln15_8_fu_567_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, r_0_reg_163, "r_0_reg_163");
    sc_trace(mVcdFile, i_0_reg_174, "i_0_reg_174");
    sc_trace(mVcdFile, i_2_0_reg_186, "i_2_0_reg_186");
    sc_trace(mVcdFile, f_0_0_reg_197, "f_0_0_reg_197");
    sc_trace(mVcdFile, i_2_1_reg_208, "i_2_1_reg_208");
    sc_trace(mVcdFile, f_0_1_reg_218, "f_0_1_reg_218");
    sc_trace(mVcdFile, i_2_2_reg_229, "i_2_2_reg_229");
    sc_trace(mVcdFile, f_0_2_reg_239, "f_0_2_reg_239");
    sc_trace(mVcdFile, i_2_3_reg_250, "i_2_3_reg_250");
    sc_trace(mVcdFile, f_0_3_reg_260, "f_0_3_reg_260");
    sc_trace(mVcdFile, i_2_4_reg_271, "i_2_4_reg_271");
    sc_trace(mVcdFile, f_0_4_reg_281, "f_0_4_reg_281");
    sc_trace(mVcdFile, zext_ln14_5_fu_391_p1, "zext_ln14_5_fu_391_p1");
    sc_trace(mVcdFile, zext_ln14_2_fu_402_p1, "zext_ln14_2_fu_402_p1");
    sc_trace(mVcdFile, sext_ln14_fu_434_p1, "sext_ln14_fu_434_p1");
    sc_trace(mVcdFile, zext_ln14_4_fu_445_p1, "zext_ln14_4_fu_445_p1");
    sc_trace(mVcdFile, sext_ln14_1_fu_477_p1, "sext_ln14_1_fu_477_p1");
    sc_trace(mVcdFile, zext_ln14_6_fu_488_p1, "zext_ln14_6_fu_488_p1");
    sc_trace(mVcdFile, sext_ln14_2_fu_520_p1, "sext_ln14_2_fu_520_p1");
    sc_trace(mVcdFile, zext_ln14_8_fu_525_p1, "zext_ln14_8_fu_525_p1");
    sc_trace(mVcdFile, sext_ln14_3_fu_557_p1, "sext_ln14_3_fu_557_p1");
    sc_trace(mVcdFile, zext_ln14_10_fu_562_p1, "zext_ln14_10_fu_562_p1");
    sc_trace(mVcdFile, tmp_5_fu_310_p3, "tmp_5_fu_310_p3");
    sc_trace(mVcdFile, tmp_6_fu_322_p3, "tmp_6_fu_322_p3");
    sc_trace(mVcdFile, zext_ln14_1_fu_330_p1, "zext_ln14_1_fu_330_p1");
    sc_trace(mVcdFile, zext_ln14_fu_318_p1, "zext_ln14_fu_318_p1");
    sc_trace(mVcdFile, zext_ln14_3_fu_382_p1, "zext_ln14_3_fu_382_p1");
    sc_trace(mVcdFile, add_ln14_5_fu_386_p2, "add_ln14_5_fu_386_p2");
    sc_trace(mVcdFile, zext_ln14_7_fu_425_p1, "zext_ln14_7_fu_425_p1");
    sc_trace(mVcdFile, add_ln14_6_fu_429_p2, "add_ln14_6_fu_429_p2");
    sc_trace(mVcdFile, zext_ln14_9_fu_468_p1, "zext_ln14_9_fu_468_p1");
    sc_trace(mVcdFile, add_ln14_7_fu_472_p2, "add_ln14_7_fu_472_p2");
    sc_trace(mVcdFile, zext_ln14_11_fu_511_p1, "zext_ln14_11_fu_511_p1");
    sc_trace(mVcdFile, add_ln14_8_fu_515_p2, "add_ln14_8_fu_515_p2");
    sc_trace(mVcdFile, zext_ln14_12_fu_548_p1, "zext_ln14_12_fu_548_p1");
    sc_trace(mVcdFile, add_ln14_9_fu_552_p2, "add_ln14_9_fu_552_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("flat.hdltvin.dat");
    mHdltvoutHandle.open("flat.hdltvout.dat");
}

flat::~flat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void flat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        f_0_0_reg_197 = add_ln12_reg_619.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_0))) {
        f_0_0_reg_197 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        f_0_1_reg_218 = add_ln12_1_reg_642.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_370_p2.read(), ap_const_lv1_1))) {
        f_0_1_reg_218 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        f_0_2_reg_239 = add_ln12_2_reg_665.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_1_fu_413_p2.read()))) {
        f_0_2_reg_239 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        f_0_3_reg_260 = add_ln12_3_reg_688.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_2_fu_456_p2.read()))) {
        f_0_3_reg_260 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        f_0_4_reg_281 = add_ln12_4_reg_706.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_3_fu_499_p2.read()))) {
        f_0_4_reg_281 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_4_fu_536_p2.read()))) {
        i_0_reg_174 = i_reg_581.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_174 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_2_0_reg_186 = add_ln15_4_fu_407_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_0))) {
        i_2_0_reg_186 = i_0_reg_174.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_2_1_reg_208 = add_ln15_5_fu_450_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln12_fu_370_p2.read(), ap_const_lv1_1))) {
        i_2_1_reg_208 = add_ln15_reg_611.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_2_2_reg_229 = add_ln15_6_fu_493_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_1_fu_413_p2.read()))) {
        i_2_2_reg_229 = add_ln15_1_reg_629.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i_2_3_reg_250 = add_ln15_7_fu_530_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_2_fu_456_p2.read()))) {
        i_2_3_reg_250 = add_ln15_2_reg_652.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i_2_4_reg_271 = add_ln15_8_fu_567_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_3_fu_499_p2.read()))) {
        i_2_4_reg_271 = add_ln15_3_reg_675.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_4_fu_536_p2.read()))) {
        r_0_reg_163 = r_reg_576.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_163 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        add_ln12_1_reg_642 = add_ln12_1_fu_419_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        add_ln12_2_reg_665 = add_ln12_2_fu_462_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        add_ln12_3_reg_688 = add_ln12_3_fu_505_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        add_ln12_4_reg_706 = add_ln12_4_fu_542_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln12_reg_619 = add_ln12_fu_376_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_0))) {
        add_ln14_1_reg_591 = add_ln14_1_fu_340_p2.read();
        add_ln14_2_reg_596 = add_ln14_2_fu_346_p2.read();
        add_ln14_3_reg_601 = add_ln14_3_fu_352_p2.read();
        add_ln14_4_reg_606 = add_ln14_4_fu_358_p2.read();
        add_ln14_reg_586 = add_ln14_fu_334_p2.read();
        add_ln15_reg_611 = add_ln15_fu_364_p2.read();
        i_reg_581 = i_fu_304_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_370_p2.read(), ap_const_lv1_1))) {
        add_ln15_1_reg_629 = add_ln15_1_fu_396_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_1_fu_413_p2.read()))) {
        add_ln15_2_reg_652 = add_ln15_2_fu_439_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_2_fu_456_p2.read()))) {
        add_ln15_3_reg_675 = add_ln15_3_fu_482_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_576 = r_fu_298_p2.read();
    }
}

void flat::thread_add_ln12_1_fu_419_p2() {
    add_ln12_1_fu_419_p2 = (!f_0_1_reg_218.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_1_reg_218.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_add_ln12_2_fu_462_p2() {
    add_ln12_2_fu_462_p2 = (!f_0_2_reg_239.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_2_reg_239.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_add_ln12_3_fu_505_p2() {
    add_ln12_3_fu_505_p2 = (!f_0_3_reg_260.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_3_reg_260.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_add_ln12_4_fu_542_p2() {
    add_ln12_4_fu_542_p2 = (!f_0_4_reg_281.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_4_reg_281.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_add_ln12_fu_376_p2() {
    add_ln12_fu_376_p2 = (!f_0_0_reg_197.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_0_reg_197.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void flat::thread_add_ln14_1_fu_340_p2() {
    add_ln14_1_fu_340_p2 = (!add_ln14_fu_334_p2.read().is_01() || !ap_const_lv10_10.is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_fu_334_p2.read()) + sc_biguint<10>(ap_const_lv10_10));
}

void flat::thread_add_ln14_2_fu_346_p2() {
    add_ln14_2_fu_346_p2 = (!add_ln14_fu_334_p2.read().is_01() || !ap_const_lv10_20.is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_fu_334_p2.read()) + sc_biguint<10>(ap_const_lv10_20));
}

void flat::thread_add_ln14_3_fu_352_p2() {
    add_ln14_3_fu_352_p2 = (!add_ln14_fu_334_p2.read().is_01() || !ap_const_lv10_30.is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_fu_334_p2.read()) + sc_biguint<10>(ap_const_lv10_30));
}

void flat::thread_add_ln14_4_fu_358_p2() {
    add_ln14_4_fu_358_p2 = (!add_ln14_fu_334_p2.read().is_01() || !ap_const_lv10_40.is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_fu_334_p2.read()) + sc_biguint<10>(ap_const_lv10_40));
}

void flat::thread_add_ln14_5_fu_386_p2() {
    add_ln14_5_fu_386_p2 = (!add_ln14_reg_586.read().is_01() || !zext_ln14_3_fu_382_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_reg_586.read()) + sc_biguint<10>(zext_ln14_3_fu_382_p1.read()));
}

void flat::thread_add_ln14_6_fu_429_p2() {
    add_ln14_6_fu_429_p2 = (!add_ln14_1_reg_591.read().is_01() || !zext_ln14_7_fu_425_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_1_reg_591.read()) + sc_biguint<10>(zext_ln14_7_fu_425_p1.read()));
}

void flat::thread_add_ln14_7_fu_472_p2() {
    add_ln14_7_fu_472_p2 = (!add_ln14_2_reg_596.read().is_01() || !zext_ln14_9_fu_468_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_2_reg_596.read()) + sc_biguint<10>(zext_ln14_9_fu_468_p1.read()));
}

void flat::thread_add_ln14_8_fu_515_p2() {
    add_ln14_8_fu_515_p2 = (!add_ln14_3_reg_601.read().is_01() || !zext_ln14_11_fu_511_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_3_reg_601.read()) + sc_biguint<10>(zext_ln14_11_fu_511_p1.read()));
}

void flat::thread_add_ln14_9_fu_552_p2() {
    add_ln14_9_fu_552_p2 = (!add_ln14_4_reg_606.read().is_01() || !zext_ln14_12_fu_548_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln14_4_reg_606.read()) + sc_biguint<10>(zext_ln14_12_fu_548_p1.read()));
}

void flat::thread_add_ln14_fu_334_p2() {
    add_ln14_fu_334_p2 = (!zext_ln14_1_fu_330_p1.read().is_01() || !zext_ln14_fu_318_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln14_1_fu_330_p1.read()) + sc_biguint<10>(zext_ln14_fu_318_p1.read()));
}

void flat::thread_add_ln15_1_fu_396_p2() {
    add_ln15_1_fu_396_p2 = (!i_0_reg_174.read().is_01() || !ap_const_lv9_20.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_174.read()) + sc_biguint<9>(ap_const_lv9_20));
}

void flat::thread_add_ln15_2_fu_439_p2() {
    add_ln15_2_fu_439_p2 = (!i_0_reg_174.read().is_01() || !ap_const_lv9_30.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_174.read()) + sc_biguint<9>(ap_const_lv9_30));
}

void flat::thread_add_ln15_3_fu_482_p2() {
    add_ln15_3_fu_482_p2 = (!i_0_reg_174.read().is_01() || !ap_const_lv9_40.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_174.read()) + sc_biguint<9>(ap_const_lv9_40));
}

void flat::thread_add_ln15_4_fu_407_p2() {
    add_ln15_4_fu_407_p2 = (!i_2_0_reg_186.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_2_0_reg_186.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void flat::thread_add_ln15_5_fu_450_p2() {
    add_ln15_5_fu_450_p2 = (!i_2_1_reg_208.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_2_1_reg_208.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void flat::thread_add_ln15_6_fu_493_p2() {
    add_ln15_6_fu_493_p2 = (!i_2_2_reg_229.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_2_2_reg_229.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void flat::thread_add_ln15_7_fu_530_p2() {
    add_ln15_7_fu_530_p2 = (!i_2_3_reg_250.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_2_3_reg_250.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void flat::thread_add_ln15_8_fu_567_p2() {
    add_ln15_8_fu_567_p2 = (!i_2_4_reg_271.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_2_4_reg_271.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void flat::thread_add_ln15_fu_364_p2() {
    add_ln15_fu_364_p2 = (!i_0_reg_174.read().is_01() || !ap_const_lv9_10.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_174.read()) + sc_biguint<9>(ap_const_lv9_10));
}

void flat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void flat::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void flat::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void flat::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void flat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void flat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void flat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void flat::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void flat::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void flat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void flat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void flat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void flat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void flat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void flat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void flat::thread_flat_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_10_fu_562_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_8_fu_525_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_6_fu_488_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_4_fu_445_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        flat_array_address0 =  (sc_lv<9>) (zext_ln14_2_fu_402_p1.read());
    } else {
        flat_array_address0 = "XXXXXXXXX";
    }
}

void flat::thread_flat_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void flat::thread_flat_array_d0() {
    flat_array_d0 = max_pool_out_q0.read();
}

void flat::thread_flat_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        flat_array_we0 = ap_const_logic_1;
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void flat::thread_i_fu_304_p2() {
    i_fu_304_p2 = (!i_0_reg_174.read().is_01() || !ap_const_lv9_50.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_174.read()) + sc_biguint<9>(ap_const_lv9_50));
}

void flat::thread_icmp_ln12_1_fu_413_p2() {
    icmp_ln12_1_fu_413_p2 = (!f_0_1_reg_218.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_1_reg_218.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln12_2_fu_456_p2() {
    icmp_ln12_2_fu_456_p2 = (!f_0_2_reg_239.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_2_reg_239.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln12_3_fu_499_p2() {
    icmp_ln12_3_fu_499_p2 = (!f_0_3_reg_260.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_3_reg_260.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln12_4_fu_536_p2() {
    icmp_ln12_4_fu_536_p2 = (!f_0_4_reg_281.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_4_reg_281.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln12_fu_370_p2() {
    icmp_ln12_fu_370_p2 = (!f_0_0_reg_197.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_0_reg_197.read() == ap_const_lv5_10);
}

void flat::thread_icmp_ln6_fu_292_p2() {
    icmp_ln6_fu_292_p2 = (!r_0_reg_163.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_163.read() == ap_const_lv3_5);
}

void flat::thread_max_pool_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (sext_ln14_3_fu_557_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (sext_ln14_2_fu_520_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (sext_ln14_1_fu_477_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (sext_ln14_fu_434_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        max_pool_out_address0 =  (sc_lv<9>) (zext_ln14_5_fu_391_p1.read());
    } else {
        max_pool_out_address0 = "XXXXXXXXX";
    }
}

void flat::thread_max_pool_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void flat::thread_r_fu_298_p2() {
    r_fu_298_p2 = (!r_0_reg_163.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(r_0_reg_163.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void flat::thread_sext_ln14_1_fu_477_p1() {
    sext_ln14_1_fu_477_p1 = esl_sext<64,10>(add_ln14_7_fu_472_p2.read());
}

void flat::thread_sext_ln14_2_fu_520_p1() {
    sext_ln14_2_fu_520_p1 = esl_sext<64,10>(add_ln14_8_fu_515_p2.read());
}

void flat::thread_sext_ln14_3_fu_557_p1() {
    sext_ln14_3_fu_557_p1 = esl_sext<64,10>(add_ln14_9_fu_552_p2.read());
}

void flat::thread_sext_ln14_fu_434_p1() {
    sext_ln14_fu_434_p1 = esl_sext<64,10>(add_ln14_6_fu_429_p2.read());
}

void flat::thread_tmp_5_fu_310_p3() {
    tmp_5_fu_310_p3 = esl_concat<3,6>(r_0_reg_163.read(), ap_const_lv6_0);
}

void flat::thread_tmp_6_fu_322_p3() {
    tmp_6_fu_322_p3 = esl_concat<3,4>(r_0_reg_163.read(), ap_const_lv4_0);
}

void flat::thread_zext_ln14_10_fu_562_p1() {
    zext_ln14_10_fu_562_p1 = esl_zext<64,9>(i_2_4_reg_271.read());
}

void flat::thread_zext_ln14_11_fu_511_p1() {
    zext_ln14_11_fu_511_p1 = esl_zext<10,5>(f_0_3_reg_260.read());
}

void flat::thread_zext_ln14_12_fu_548_p1() {
    zext_ln14_12_fu_548_p1 = esl_zext<10,5>(f_0_4_reg_281.read());
}

void flat::thread_zext_ln14_1_fu_330_p1() {
    zext_ln14_1_fu_330_p1 = esl_zext<10,7>(tmp_6_fu_322_p3.read());
}

void flat::thread_zext_ln14_2_fu_402_p1() {
    zext_ln14_2_fu_402_p1 = esl_zext<64,9>(i_2_0_reg_186.read());
}

void flat::thread_zext_ln14_3_fu_382_p1() {
    zext_ln14_3_fu_382_p1 = esl_zext<10,5>(f_0_0_reg_197.read());
}

void flat::thread_zext_ln14_4_fu_445_p1() {
    zext_ln14_4_fu_445_p1 = esl_zext<64,9>(i_2_1_reg_208.read());
}

void flat::thread_zext_ln14_5_fu_391_p1() {
    zext_ln14_5_fu_391_p1 = esl_zext<64,10>(add_ln14_5_fu_386_p2.read());
}

void flat::thread_zext_ln14_6_fu_488_p1() {
    zext_ln14_6_fu_488_p1 = esl_zext<64,9>(i_2_2_reg_229.read());
}

void flat::thread_zext_ln14_7_fu_425_p1() {
    zext_ln14_7_fu_425_p1 = esl_zext<10,5>(f_0_1_reg_218.read());
}

void flat::thread_zext_ln14_8_fu_525_p1() {
    zext_ln14_8_fu_525_p1 = esl_zext<64,9>(i_2_3_reg_250.read());
}

void flat::thread_zext_ln14_9_fu_468_p1() {
    zext_ln14_9_fu_468_p1 = esl_zext<10,5>(f_0_2_reg_239.read());
}

void flat::thread_zext_ln14_fu_318_p1() {
    zext_ln14_fu_318_p1 = esl_zext<10,9>(tmp_5_fu_310_p3.read());
}

void flat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln6_fu_292_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln12_fu_370_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_1_fu_413_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_2_fu_456_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_3_fu_499_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln12_4_fu_536_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void flat::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"max_pool_out_q0\" :  \"" << max_pool_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_address0\" :  \"" << flat_array_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_ce0\" :  \"" << flat_array_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_we0\" :  \"" << flat_array_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"flat_array_d0\" :  \"" << flat_array_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

