

================================================================
== Vivado HLS Report for 'flat'
================================================================
* Date:           Thu Mar  7 11:04:07 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        flat
* Solution:       solution4
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  20.00|    13.638|        2.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  402|  402|  402|  402|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                        |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- LOOP_1_LOOP_2_LOOP_3  |  400|  400|         2|          1|          1|   400|    yes   |
        +------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([400 x float]* %max_pool_out) nounwind, !map !7"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([400 x float]* %flat_array) nounwind, !map !14"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @flat_str) nounwind"   --->   Operation 7 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (1.76ns)   --->   "br label %1" [flat/flat.cpp:6]   --->   Operation 8 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 13.6>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten17 = phi i9 [ 0, %0 ], [ %add_ln6, %LOOP_3 ]" [flat/flat.cpp:6]   --->   Operation 9 'phi' 'indvar_flatten17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %select_ln15_3, %LOOP_3 ]" [flat/flat.cpp:15]   --->   Operation 10 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%i_0 = phi i9 [ 0, %0 ], [ %select_ln6, %LOOP_3 ]" [flat/flat.cpp:6]   --->   Operation 11 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %0 ], [ %select_ln9_1, %LOOP_3 ]" [flat/flat.cpp:9]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%i_1 = phi i9 [ 0, %0 ], [ %select_ln9, %LOOP_3 ]" [flat/flat.cpp:9]   --->   Operation 13 'phi' 'i_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%c_0 = phi i3 [ 0, %0 ], [ %select_ln15_6, %LOOP_3 ]" [flat/flat.cpp:15]   --->   Operation 14 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_2 = phi i9 [ 0, %0 ], [ %add_ln15_1, %LOOP_3 ]" [flat/flat.cpp:15]   --->   Operation 15 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%f_0 = phi i5 [ 0, %0 ], [ %f, %LOOP_3 ]"   --->   Operation 16 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.66ns)   --->   "%icmp_ln6 = icmp eq i9 %indvar_flatten17, -112" [flat/flat.cpp:6]   --->   Operation 17 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.82ns)   --->   "%add_ln6 = add i9 %indvar_flatten17, 1" [flat/flat.cpp:6]   --->   Operation 18 'add' 'add_ln6' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln6, label %2, label %LOOP_3" [flat/flat.cpp:6]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.65ns)   --->   "%r = add i3 %r_0, 1" [flat/flat.cpp:6]   --->   Operation 20 'add' 'r' <Predicate = (!icmp_ln6)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.82ns)   --->   "%add_ln15 = add i9 %i_0, 80" [flat/flat.cpp:15]   --->   Operation 21 'add' 'add_ln15' <Predicate = (!icmp_ln6)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.55ns)   --->   "%icmp_ln9 = icmp eq i8 %indvar_flatten, 80" [flat/flat.cpp:9]   --->   Operation 22 'icmp' 'icmp_ln9' <Predicate = (!icmp_ln6)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.96ns)   --->   "%select_ln15 = select i1 %icmp_ln9, i9 %add_ln15, i9 %i_1" [flat/flat.cpp:15]   --->   Operation 23 'select' 'select_ln15' <Predicate = (!icmp_ln6)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.98ns)   --->   "%select_ln15_1 = select i1 %icmp_ln9, i3 0, i3 %c_0" [flat/flat.cpp:15]   --->   Operation 24 'select' 'select_ln15_1' <Predicate = (!icmp_ln6)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_4)   --->   "%select_ln15_2 = select i1 %icmp_ln9, i9 %add_ln15, i9 %i_2" [flat/flat.cpp:15]   --->   Operation 25 'select' 'select_ln15_2' <Predicate = (!icmp_ln6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.98ns)   --->   "%select_ln15_3 = select i1 %icmp_ln9, i3 %r, i3 %r_0" [flat/flat.cpp:15]   --->   Operation 26 'select' 'select_ln15_3' <Predicate = (!icmp_ln6)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i3 %select_ln15_3 to i6" [flat/flat.cpp:14]   --->   Operation 27 'zext' 'zext_ln14' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln15_3, i2 0)" [flat/flat.cpp:14]   --->   Operation 28 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i5 %tmp to i6" [flat/flat.cpp:14]   --->   Operation 29 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln14 = add i6 %zext_ln14, %zext_ln14_1" [flat/flat.cpp:14]   --->   Operation 30 'add' 'add_ln14' <Predicate = (!icmp_ln6)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node and_ln15)   --->   "%xor_ln15 = xor i1 %icmp_ln9, true" [flat/flat.cpp:15]   --->   Operation 31 'xor' 'xor_ln15' <Predicate = (!icmp_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.36ns)   --->   "%icmp_ln12 = icmp eq i5 %f_0, -16" [flat/flat.cpp:12]   --->   Operation 32 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln6)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln15 = and i1 %icmp_ln12, %xor_ln15" [flat/flat.cpp:15]   --->   Operation 33 'and' 'and_ln15' <Predicate = (!icmp_ln6)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.96ns)   --->   "%select_ln6 = select i1 %icmp_ln9, i9 %add_ln15, i9 %i_0" [flat/flat.cpp:6]   --->   Operation 34 'select' 'select_ln6' <Predicate = (!icmp_ln6)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.65ns)   --->   "%c = add i3 %select_ln15_1, 1" [flat/flat.cpp:9]   --->   Operation 35 'add' 'c' <Predicate = (!icmp_ln6)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.82ns)   --->   "%add_ln15_2 = add i9 %select_ln15, 16" [flat/flat.cpp:15]   --->   Operation 36 'add' 'add_ln15_2' <Predicate = (!icmp_ln6)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.96ns) (out node of the LUT)   --->   "%select_ln15_4 = select i1 %and_ln15, i9 %add_ln15_2, i9 %select_ln15_2" [flat/flat.cpp:15]   --->   Operation 37 'select' 'select_ln15_4' <Predicate = (!icmp_ln6)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_5)   --->   "%or_ln15 = or i1 %and_ln15, %icmp_ln9" [flat/flat.cpp:15]   --->   Operation 38 'or' 'or_ln15' <Predicate = (!icmp_ln6)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln15_5 = select i1 %or_ln15, i5 0, i5 %f_0" [flat/flat.cpp:15]   --->   Operation 39 'select' 'select_ln15_5' <Predicate = (!icmp_ln6)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.98ns)   --->   "%select_ln15_6 = select i1 %and_ln15, i3 %c, i3 %select_ln15_1" [flat/flat.cpp:15]   --->   Operation 40 'select' 'select_ln15_6' <Predicate = (!icmp_ln6)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i3 %select_ln15_6 to i6" [flat/flat.cpp:15]   --->   Operation 41 'zext' 'zext_ln15' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (3.49ns) (root node of TernaryAdder)   --->   "%add_ln14_1 = add i6 %add_ln14, %zext_ln15" [flat/flat.cpp:14]   --->   Operation 42 'add' 'add_ln14_1' <Predicate = (!icmp_ln6)> <Delay = 3.49> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.74> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_3_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %add_ln14_1, i4 0)" [flat/flat.cpp:9]   --->   Operation 43 'bitconcatenate' 'tmp_3_cast' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.96ns)   --->   "%select_ln9 = select i1 %and_ln15, i9 %add_ln15_2, i9 %select_ln15" [flat/flat.cpp:9]   --->   Operation 44 'select' 'select_ln9' <Predicate = (!icmp_ln6)> <Delay = 0.96> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln14_2 = zext i5 %select_ln15_5 to i10" [flat/flat.cpp:14]   --->   Operation 45 'zext' 'zext_ln14_2' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.73ns)   --->   "%add_ln14_2 = add i10 %tmp_3_cast, %zext_ln14_2" [flat/flat.cpp:14]   --->   Operation 46 'add' 'add_ln14_2' <Predicate = (!icmp_ln6)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln14_4 = zext i10 %add_ln14_2 to i64" [flat/flat.cpp:14]   --->   Operation 47 'zext' 'zext_ln14_4' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%max_pool_out_addr = getelementptr [400 x float]* %max_pool_out, i64 0, i64 %zext_ln14_4" [flat/flat.cpp:14]   --->   Operation 48 'getelementptr' 'max_pool_out_addr' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_2 : Operation 49 [2/2] (3.25ns)   --->   "%max_pool_out_load = load float* %max_pool_out_addr, align 4" [flat/flat.cpp:14]   --->   Operation 49 'load' 'max_pool_out_load' <Predicate = (!icmp_ln6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_2 : Operation 50 [1/1] (1.82ns)   --->   "%add_ln15_1 = add i9 %select_ln15_4, 1" [flat/flat.cpp:15]   --->   Operation 50 'add' 'add_ln15_1' <Predicate = (!icmp_ln6)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.78ns)   --->   "%f = add i5 %select_ln15_5, 1" [flat/flat.cpp:12]   --->   Operation 51 'add' 'f' <Predicate = (!icmp_ln6)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.91ns)   --->   "%add_ln9 = add i8 %indvar_flatten, 1" [flat/flat.cpp:9]   --->   Operation 52 'add' 'add_ln9' <Predicate = (!icmp_ln6)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.24ns)   --->   "%select_ln9_1 = select i1 %icmp_ln9, i8 1, i8 %add_ln9" [flat/flat.cpp:9]   --->   Operation 53 'select' 'select_ln9_1' <Predicate = (!icmp_ln6)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.50>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @LOOP_1_LOOP_2_LOOP_3)"   --->   Operation 54 'specloopname' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 400, i64 400, i64 400) nounwind"   --->   Operation 55 'speclooptripcount' 'empty' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @LOOP_2_LOOP_3_str)"   --->   Operation 56 'specloopname' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str2) nounwind" [flat/flat.cpp:13]   --->   Operation 57 'specloopname' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([7 x i8]* @p_str2) nounwind" [flat/flat.cpp:13]   --->   Operation 58 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind" [flat/flat.cpp:14]   --->   Operation 59 'specpipeline' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 60 [1/2] (3.25ns)   --->   "%max_pool_out_load = load float* %max_pool_out_addr, align 4" [flat/flat.cpp:14]   --->   Operation 60 'load' 'max_pool_out_load' <Predicate = (!icmp_ln6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln14_3 = zext i9 %select_ln15_4 to i64" [flat/flat.cpp:14]   --->   Operation 61 'zext' 'zext_ln14_3' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%flat_array_addr = getelementptr [400 x float]* %flat_array, i64 0, i64 %zext_ln14_3" [flat/flat.cpp:14]   --->   Operation 62 'getelementptr' 'flat_array_addr' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (3.25ns)   --->   "store float %max_pool_out_load, float* %flat_array_addr, align 4" [flat/flat.cpp:14]   --->   Operation 63 'store' <Predicate = (!icmp_ln6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 400> <RAM>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([7 x i8]* @p_str2, i32 %tmp_2) nounwind" [flat/flat.cpp:16]   --->   Operation 64 'specregionend' 'empty_2' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 65 'br' <Predicate = (!icmp_ln6)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "ret void" [flat/flat.cpp:19]   --->   Operation 66 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 2.5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten17', flat/flat.cpp:6) with incoming values : ('add_ln6', flat/flat.cpp:6) [8]  (1.77 ns)

 <State 2>: 13.6ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', flat/flat.cpp:9) with incoming values : ('select_ln9_1', flat/flat.cpp:9) [11]  (0 ns)
	'icmp' operation ('icmp_ln9', flat/flat.cpp:9) [24]  (1.55 ns)
	'select' operation ('select_ln15_1', flat/flat.cpp:15) [26]  (0.98 ns)
	'add' operation ('c', flat/flat.cpp:9) [37]  (1.65 ns)
	'select' operation ('select_ln15_6', flat/flat.cpp:15) [43]  (0.98 ns)
	'add' operation ('add_ln14_1', flat/flat.cpp:14) [45]  (3.49 ns)
	'add' operation ('add_ln14_2', flat/flat.cpp:14) [52]  (1.73 ns)
	'getelementptr' operation ('max_pool_out_addr', flat/flat.cpp:14) [54]  (0 ns)
	'load' operation ('max_pool_out_load', flat/flat.cpp:14) on array 'max_pool_out' [55]  (3.25 ns)

 <State 3>: 6.51ns
The critical path consists of the following:
	'load' operation ('max_pool_out_load', flat/flat.cpp:14) on array 'max_pool_out' [55]  (3.25 ns)
	'store' operation ('store_ln14', flat/flat.cpp:14) of variable 'max_pool_out_load', flat/flat.cpp:14 on array 'flat_array' [58]  (3.25 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
