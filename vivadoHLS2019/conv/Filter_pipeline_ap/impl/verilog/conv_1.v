// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.104550,HLS_SYN_LAT=108186,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=11,HLS_SYN_FF=2759,HLS_SYN_LUT=3710,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_0_address0,
        conv_input_0_ce0,
        conv_input_0_q0,
        conv_input_0_address1,
        conv_input_0_ce1,
        conv_input_0_q1,
        conv_input_1_address0,
        conv_input_1_ce0,
        conv_input_1_q0,
        conv_input_1_address1,
        conv_input_1_ce1,
        conv_input_1_q1,
        conv_input_2_address0,
        conv_input_2_ce0,
        conv_input_2_q0,
        conv_input_2_address1,
        conv_input_2_ce1,
        conv_input_2_q1,
        conv_input_3_address0,
        conv_input_3_ce0,
        conv_input_3_q0,
        conv_input_3_address1,
        conv_input_3_ce1,
        conv_input_3_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state32 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] conv_input_0_address0;
output   conv_input_0_ce0;
input  [31:0] conv_input_0_q0;
output  [7:0] conv_input_0_address1;
output   conv_input_0_ce1;
input  [31:0] conv_input_0_q1;
output  [7:0] conv_input_1_address0;
output   conv_input_1_ce0;
input  [31:0] conv_input_1_q0;
output  [7:0] conv_input_1_address1;
output   conv_input_1_ce1;
input  [31:0] conv_input_1_q1;
output  [7:0] conv_input_2_address0;
output   conv_input_2_ce0;
input  [31:0] conv_input_2_q0;
output  [7:0] conv_input_2_address1;
output   conv_input_2_ce1;
input  [31:0] conv_input_2_q1;
output  [7:0] conv_input_3_address0;
output   conv_input_3_ce0;
input  [31:0] conv_input_3_q0;
output  [7:0] conv_input_3_address1;
output   conv_input_3_ce1;
input  [31:0] conv_input_3_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] conv_input_0_address0;
reg conv_input_0_ce0;
reg[7:0] conv_input_0_address1;
reg conv_input_0_ce1;
reg[7:0] conv_input_1_address0;
reg conv_input_1_ce0;
reg[7:0] conv_input_1_address1;
reg conv_input_1_ce1;
reg[7:0] conv_input_2_address0;
reg conv_input_2_ce0;
reg[7:0] conv_input_2_address1;
reg conv_input_2_ce1;
reg[7:0] conv_input_3_address0;
reg conv_input_3_ce0;
reg[7:0] conv_input_3_address1;
reg conv_input_3_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_weights_0_0_0_address0;
reg    conv_1_weights_0_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_0_q0;
wire   [4:0] conv_1_weights_0_1_0_address0;
reg    conv_1_weights_0_1_0_ce0;
wire   [31:0] conv_1_weights_0_1_0_q0;
wire   [4:0] conv_1_weights_0_2_0_address0;
reg    conv_1_weights_0_2_0_ce0;
wire   [31:0] conv_1_weights_0_2_0_q0;
wire   [4:0] conv_1_weights_1_0_0_address0;
reg    conv_1_weights_1_0_0_ce0;
wire   [31:0] conv_1_weights_1_0_0_q0;
wire   [4:0] conv_1_weights_1_1_0_address0;
reg    conv_1_weights_1_1_0_ce0;
wire   [31:0] conv_1_weights_1_1_0_q0;
wire   [4:0] conv_1_weights_1_2_0_address0;
reg    conv_1_weights_1_2_0_ce0;
wire   [31:0] conv_1_weights_1_2_0_q0;
wire   [4:0] conv_1_weights_2_0_0_address0;
reg    conv_1_weights_2_0_0_ce0;
wire   [31:0] conv_1_weights_2_0_0_q0;
wire   [4:0] conv_1_weights_2_1_0_address0;
reg    conv_1_weights_2_1_0_ce0;
wire   [31:0] conv_1_weights_2_1_0_q0;
wire   [4:0] conv_1_weights_2_2_0_address0;
reg    conv_1_weights_2_2_0_ce0;
wire   [31:0] conv_1_weights_2_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [14:0] indvar_flatten77_reg_595;
reg   [10:0] indvar_flatten_reg_607;
reg   [4:0] c_0_reg_618;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_state27_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_11001;
reg   [5:0] f_0_reg_630;
reg   [4:0] r_0_reg_641;
wire   [31:0] grp_fu_678_p6;
wire    ap_CS_fsm_pp0_stage4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_state26_pp0_stage4_iter4;
wire    ap_block_state31_pp0_stage4_iter5;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] icmp_ln8_reg_1542;
reg   [0:0] icmp_ln8_reg_1542_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_state24_pp0_stage2_iter4;
wire    ap_block_state29_pp0_stage2_iter5;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln8_reg_1542_pp0_iter2_reg;
wire   [31:0] grp_fu_661_p2;
reg   [31:0] reg_728;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_state28_pp0_stage1_iter5;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] grp_fu_693_p6;
wire   [31:0] grp_fu_652_p2;
reg   [31:0] reg_740;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_state25_pp0_stage3_iter4;
wire    ap_block_state30_pp0_stage3_iter5;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_708_p6;
reg   [31:0] reg_750;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln8_reg_1542_pp0_iter3_reg;
wire   [31:0] grp_fu_657_p2;
reg   [31:0] reg_755;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln8_reg_1542_pp0_iter4_reg;
reg   [31:0] reg_760;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] icmp_ln8_reg_1542_pp0_iter5_reg;
wire   [0:0] icmp_ln8_fu_771_p2;
wire   [0:0] icmp_ln11_fu_777_p2;
reg   [0:0] icmp_ln11_reg_1546;
reg   [0:0] icmp_ln11_reg_1546_pp0_iter1_reg;
wire   [4:0] select_ln35_fu_783_p3;
reg   [4:0] select_ln35_reg_1562;
wire   [4:0] add_ln26_3_fu_791_p2;
reg   [4:0] add_ln26_3_reg_1569;
wire   [10:0] add_ln11_fu_803_p2;
reg   [10:0] add_ln11_reg_1576;
wire   [4:0] c_fu_809_p2;
reg   [4:0] c_reg_1581;
wire   [4:0] add_ln26_7_fu_821_p2;
reg   [4:0] add_ln26_7_reg_1587;
wire   [4:0] add_ln26_1_fu_832_p2;
reg   [4:0] add_ln26_1_reg_1593;
wire   [4:0] add_ln26_11_fu_844_p2;
reg   [4:0] add_ln26_11_reg_1599;
wire   [14:0] add_ln8_fu_855_p2;
reg   [14:0] add_ln8_reg_1605;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln35_fu_872_p2;
reg   [0:0] and_ln35_reg_1610;
reg   [0:0] and_ln35_reg_1610_pp0_iter1_reg;
wire   [5:0] select_ln35_10_fu_883_p3;
reg   [5:0] select_ln35_10_reg_1620;
reg   [5:0] select_ln35_10_reg_1620_pp0_iter1_reg;
reg   [5:0] select_ln35_10_reg_1620_pp0_iter2_reg;
reg   [5:0] select_ln35_10_reg_1620_pp0_iter3_reg;
reg   [5:0] select_ln35_10_reg_1620_pp0_iter4_reg;
wire   [4:0] select_ln35_11_fu_891_p3;
reg   [4:0] select_ln35_11_reg_1627;
reg   [4:0] select_ln35_11_reg_1627_pp0_iter1_reg;
reg   [4:0] select_ln35_11_reg_1627_pp0_iter2_reg;
reg   [4:0] select_ln35_11_reg_1627_pp0_iter3_reg;
reg   [4:0] select_ln35_11_reg_1627_pp0_iter4_reg;
wire   [10:0] select_ln11_fu_897_p3;
reg   [10:0] select_ln11_reg_1633;
wire   [4:0] select_ln35_12_fu_957_p3;
reg   [4:0] select_ln35_12_reg_1638;
wire   [63:0] zext_ln26_fu_964_p1;
reg   [63:0] zext_ln26_reg_1643;
reg   [63:0] zext_ln26_reg_1643_pp0_iter2_reg;
reg   [63:0] zext_ln26_reg_1643_pp0_iter3_reg;
reg   [63:0] zext_ln26_reg_1643_pp0_iter4_reg;
wire   [4:0] select_ln35_14_fu_1024_p3;
reg   [4:0] select_ln35_14_reg_1673;
reg   [31:0] conv_1_weights_0_0_0_2_reg_1678;
reg   [31:0] conv_1_weights_0_1_0_2_reg_1683;
reg   [31:0] conv_1_weights_1_0_0_2_reg_1688;
reg   [31:0] conv_1_weights_1_1_0_2_reg_1693;
wire   [4:0] select_ln35_16_fu_1084_p3;
reg   [4:0] select_ln35_16_reg_1698;
wire   [4:0] select_ln35_1_fu_1101_p3;
reg   [4:0] select_ln35_1_reg_1703;
reg   [4:0] select_ln35_1_reg_1703_pp0_iter2_reg;
reg   [4:0] select_ln35_1_reg_1703_pp0_iter3_reg;
reg   [4:0] select_ln35_1_reg_1703_pp0_iter4_reg;
reg   [4:0] select_ln35_1_reg_1703_pp0_iter5_reg;
wire   [8:0] sub_ln26_fu_1124_p2;
reg   [8:0] sub_ln26_reg_1709;
wire   [8:0] sub_ln26_1_fu_1159_p2;
reg   [8:0] sub_ln26_1_reg_1715;
wire   [4:0] add_ln35_fu_1172_p2;
reg   [4:0] add_ln35_reg_1721;
wire   [8:0] zext_ln35_5_fu_1196_p1;
reg   [8:0] zext_ln35_5_reg_1727;
wire   [5:0] f_fu_1228_p2;
reg   [5:0] f_reg_1772;
wire   [31:0] zext_ln35_4_fu_1244_p1;
reg   [31:0] zext_ln35_4_reg_1777;
wire   [8:0] zext_ln35_7_fu_1259_p1;
reg   [8:0] zext_ln35_7_reg_1782;
wire   [31:0] tmp_fu_1289_p6;
wire   [8:0] add_ln26_6_fu_1335_p2;
reg   [8:0] add_ln26_6_reg_1832;
wire   [31:0] zext_ln35_6_fu_1340_p1;
reg   [31:0] zext_ln35_6_reg_1837;
wire   [8:0] add_ln26_10_fu_1344_p2;
reg   [8:0] add_ln26_10_reg_1842;
wire   [8:0] add_ln26_14_fu_1390_p2;
reg   [8:0] add_ln26_14_reg_1857;
wire   [31:0] grp_fu_666_p2;
reg   [31:0] tmp_1_1_reg_1897;
reg   [31:0] tmp_1_1_reg_1897_pp0_iter3_reg;
wire   [31:0] tmp_7_fu_1396_p6;
wire   [31:0] zext_ln35_8_fu_1425_p1;
reg   [31:0] zext_ln35_8_reg_1967;
reg   [31:0] tmp_1_1_1_reg_1977;
reg   [31:0] tmp_1_1_1_reg_1977_pp0_iter3_reg;
wire   [31:0] tmp_8_fu_1429_p6;
reg   [31:0] conv_1_weights_2_0_0_2_reg_1992;
reg   [31:0] conv_1_weights_2_1_0_2_reg_1997;
reg   [31:0] conv_1_weights_2_2_0_2_reg_2002;
reg   [31:0] tmp_1_0_2_reg_2027;
reg   [31:0] tmp_1_1_2_reg_2032;
reg   [31:0] tmp_1_1_2_reg_2032_pp0_iter3_reg;
reg   [31:0] tmp_1_2_reg_2037;
reg   [31:0] tmp_1_2_reg_2037_pp0_iter3_reg;
reg   [31:0] tmp_1_2_1_reg_2042;
reg   [31:0] tmp_1_2_1_reg_2042_pp0_iter3_reg;
reg   [31:0] tmp_1_2_1_reg_2042_pp0_iter4_reg;
reg   [31:0] tmp_1_2_2_reg_2047;
reg   [31:0] tmp_1_2_2_reg_2047_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_reg_2047_pp0_iter4_reg;
reg   [31:0] w_sum_3_1_1_reg_2052;
reg   [31:0] conv_1_bias_load_reg_2062;
wire    ap_block_pp0_stage4_subdone;
reg    ap_condition_pp0_exit_iter2_state12;
reg   [14:0] ap_phi_mux_indvar_flatten77_phi_fu_599_p4;
wire    ap_block_pp0_stage0;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_611_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_622_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_634_p4;
wire    ap_block_pp0_stage4;
reg   [4:0] ap_phi_mux_r_0_phi_fu_645_p4;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_10_fu_1206_p1;
wire   [63:0] zext_ln26_11_fu_1220_p1;
wire   [63:0] zext_ln26_13_fu_1268_p1;
wire   [63:0] zext_ln26_14_fu_1281_p1;
wire   [63:0] zext_ln26_16_fu_1369_p1;
wire   [63:0] zext_ln26_17_fu_1382_p1;
wire  signed [63:0] sext_ln26_4_fu_1411_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] sext_ln26_6_fu_1418_p1;
wire   [63:0] zext_ln26_18_fu_1444_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln35_11_fu_1477_p1;
reg   [31:0] grp_fu_652_p0;
reg   [31:0] grp_fu_652_p1;
reg   [31:0] grp_fu_657_p0;
reg   [31:0] grp_fu_657_p1;
reg   [31:0] grp_fu_661_p0;
reg   [31:0] grp_fu_661_p1;
reg   [31:0] grp_fu_666_p0;
reg   [31:0] grp_fu_666_p1;
reg   [31:0] grp_fu_678_p5;
reg   [31:0] grp_fu_693_p5;
reg   [31:0] grp_fu_708_p5;
wire   [3:0] grp_fu_765_p1;
wire   [4:0] grp_fu_797_p0;
wire   [3:0] grp_fu_797_p1;
wire   [4:0] grp_fu_815_p0;
wire   [3:0] grp_fu_815_p1;
wire   [4:0] grp_fu_826_p0;
wire   [3:0] grp_fu_826_p1;
wire   [4:0] grp_fu_838_p0;
wire   [3:0] grp_fu_838_p1;
wire   [4:0] grp_fu_849_p0;
wire   [3:0] grp_fu_849_p1;
wire   [0:0] icmp_ln14_fu_866_p2;
wire   [0:0] xor_ln35_fu_861_p2;
wire   [0:0] or_ln35_fu_878_p2;
wire   [4:0] mul_ln26_fu_907_p1;
wire   [11:0] mul_ln26_fu_907_p2;
wire   [3:0] tmp_1_fu_913_p4;
wire  signed [4:0] sext_ln26_fu_923_p1;
wire   [4:0] mul_ln26_3_fu_937_p1;
wire   [11:0] mul_ln26_3_fu_937_p2;
wire   [3:0] tmp_19_fu_943_p4;
wire  signed [4:0] sext_ln26_3_fu_953_p1;
wire   [4:0] select_ln35_4_fu_927_p3;
wire   [4:0] mul_ln26_1_fu_974_p1;
wire   [11:0] mul_ln26_1_fu_974_p2;
wire   [3:0] tmp_2_fu_980_p4;
wire  signed [4:0] sext_ln26_1_fu_990_p1;
wire   [4:0] mul_ln26_4_fu_1004_p1;
wire   [11:0] mul_ln26_4_fu_1004_p2;
wire   [3:0] tmp_20_fu_1010_p4;
wire  signed [4:0] sext_ln26_5_fu_1020_p1;
wire   [4:0] select_ln35_6_fu_994_p3;
wire   [4:0] mul_ln26_2_fu_1034_p1;
wire   [11:0] mul_ln26_2_fu_1034_p2;
wire   [3:0] tmp_14_fu_1040_p4;
wire  signed [4:0] sext_ln26_2_fu_1050_p1;
wire   [4:0] mul_ln26_5_fu_1064_p1;
wire   [11:0] mul_ln26_5_fu_1064_p2;
wire   [3:0] tmp_21_fu_1070_p4;
wire  signed [4:0] sext_ln26_7_fu_1080_p1;
wire   [4:0] select_ln35_8_fu_1054_p3;
wire   [2:0] grp_fu_765_p2;
wire   [4:0] r_fu_1091_p2;
wire   [7:0] tmp_16_fu_1112_p3;
wire   [8:0] zext_ln26_4_fu_1120_p1;
wire   [8:0] zext_ln35_1_fu_1108_p1;
wire   [4:0] add_ln26_fu_1130_p2;
wire   [4:0] select_ln35_2_fu_1136_p3;
wire   [7:0] tmp_17_fu_1147_p3;
wire   [8:0] zext_ln26_5_fu_1155_p1;
wire   [8:0] zext_ln35_2_fu_1143_p1;
wire   [4:0] select_ln35_3_fu_1165_p3;
wire   [2:0] trunc_ln26_fu_1097_p1;
wire   [2:0] grp_fu_797_p2;
wire   [2:0] trunc_ln35_fu_1185_p1;
wire   [2:0] select_ln35_5_fu_1178_p3;
wire   [2:0] select_ln35_13_fu_1189_p3;
wire   [8:0] add_ln26_4_fu_1200_p2;
wire   [8:0] add_ln26_5_fu_1214_p2;
wire   [2:0] grp_fu_815_p2;
wire   [2:0] trunc_ln26_1_fu_1233_p1;
wire   [2:0] grp_fu_826_p2;
wire   [2:0] trunc_ln35_1_fu_1248_p1;
wire   [2:0] select_ln35_7_fu_1237_p3;
wire   [2:0] select_ln35_15_fu_1252_p3;
wire   [8:0] add_ln26_8_fu_1263_p2;
wire   [8:0] add_ln26_9_fu_1276_p2;
wire   [31:0] tmp_fu_1289_p5;
wire   [2:0] grp_fu_838_p2;
wire   [7:0] tmp_15_fu_1311_p3;
wire   [8:0] zext_ln26_7_fu_1318_p1;
wire   [8:0] zext_ln26_6_fu_1308_p1;
wire   [2:0] trunc_ln8_fu_1304_p1;
wire   [8:0] sub_ln26_2_fu_1322_p2;
wire   [2:0] grp_fu_849_p2;
wire   [2:0] trunc_ln35_2_fu_1349_p1;
wire   [2:0] select_ln35_9_fu_1328_p3;
wire   [2:0] select_ln35_17_fu_1353_p3;
wire   [8:0] zext_ln35_9_fu_1360_p1;
wire   [8:0] add_ln26_12_fu_1364_p2;
wire   [8:0] add_ln26_13_fu_1377_p2;
wire   [31:0] tmp_7_fu_1396_p5;
wire   [31:0] tmp_8_fu_1429_p5;
wire   [9:0] grp_fu_1533_p3;
wire   [14:0] tmp_18_fu_1457_p3;
wire   [15:0] zext_ln26_8_fu_1464_p1;
wire   [15:0] zext_ln35_10_fu_1468_p1;
wire   [15:0] add_ln35_2_fu_1471_p2;
wire   [31:0] bitcast_ln34_fu_1482_p1;
wire   [7:0] tmp_12_fu_1486_p4;
wire   [22:0] trunc_ln34_fu_1496_p1;
wire   [0:0] icmp_ln34_1_fu_1506_p2;
wire   [0:0] icmp_ln34_fu_1500_p2;
wire   [0:0] or_ln34_fu_1512_p2;
wire   [0:0] tmp_13_fu_672_p2;
wire   [0:0] and_ln34_fu_1518_p2;
wire   [5:0] grp_fu_1533_p0;
wire   [4:0] grp_fu_1533_p1;
wire   [4:0] grp_fu_1533_p2;
wire    ap_block_pp0_stage4_00001;
wire    ap_CS_fsm_state32;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1533_p10;
wire   [9:0] grp_fu_1533_p20;
wire   [11:0] mul_ln26_1_fu_974_p10;
wire   [11:0] mul_ln26_2_fu_1034_p10;
wire   [11:0] mul_ln26_3_fu_937_p10;
wire   [11:0] mul_ln26_4_fu_1004_p10;
wire   [11:0] mul_ln26_5_fu_1064_p10;
wire   [11:0] mul_ln26_fu_907_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_0_address0),
    .ce0(conv_1_weights_0_0_0_ce0),
    .q0(conv_1_weights_0_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_0_address0),
    .ce0(conv_1_weights_0_1_0_ce0),
    .q0(conv_1_weights_0_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_0_address0),
    .ce0(conv_1_weights_0_2_0_ce0),
    .q0(conv_1_weights_0_2_0_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_0_address0),
    .ce0(conv_1_weights_1_0_0_ce0),
    .q0(conv_1_weights_1_0_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_0_address0),
    .ce0(conv_1_weights_1_1_0_ce0),
    .q0(conv_1_weights_1_1_0_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_0_address0),
    .ce0(conv_1_weights_1_2_0_ce0),
    .q0(conv_1_weights_1_2_0_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_0_address0),
    .ce0(conv_1_weights_2_0_0_ce0),
    .q0(conv_1_weights_2_0_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_0_address0),
    .ce0(conv_1_weights_2_1_0_ce0),
    .q0(conv_1_weights_2_1_0_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_0_address0),
    .ce0(conv_1_weights_2_2_0_ce0),
    .q0(conv_1_weights_2_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_652_p0),
    .din1(grp_fu_652_p1),
    .ce(1'b1),
    .dout(grp_fu_652_p2)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_657_p0),
    .din1(grp_fu_657_p1),
    .ce(1'b1),
    .dout(grp_fu_657_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_661_p0),
    .din1(grp_fu_661_p1),
    .ce(1'b1),
    .dout(grp_fu_661_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_666_p0),
    .din1(grp_fu_666_p1),
    .ce(1'b1),
    .dout(grp_fu_666_p2)
);

conv_1_fcmp_32ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_mb6_U5(
    .din0(grp_fu_657_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_13_fu_672_p2)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U6(
    .din0(conv_input_0_q0),
    .din1(conv_input_1_q0),
    .din2(conv_input_2_q0),
    .din3(conv_input_3_q0),
    .din4(grp_fu_678_p5),
    .dout(grp_fu_678_p6)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U7(
    .din0(conv_input_0_q1),
    .din1(conv_input_1_q1),
    .din2(conv_input_2_q1),
    .din3(conv_input_3_q1),
    .din4(grp_fu_693_p5),
    .dout(grp_fu_693_p6)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U8(
    .din0(conv_input_0_q0),
    .din1(conv_input_1_q0),
    .din2(conv_input_2_q0),
    .din3(conv_input_3_q0),
    .din4(grp_fu_708_p5),
    .dout(grp_fu_708_p6)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_c_0_phi_fu_622_p4),
    .din1(grp_fu_765_p1),
    .ce(1'b1),
    .dout(grp_fu_765_p2)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_797_p0),
    .din1(grp_fu_797_p1),
    .ce(1'b1),
    .dout(grp_fu_797_p2)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_815_p0),
    .din1(grp_fu_815_p1),
    .ce(1'b1),
    .dout(grp_fu_815_p2)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_826_p0),
    .din1(grp_fu_826_p1),
    .ce(1'b1),
    .dout(grp_fu_826_p2)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_838_p0),
    .din1(grp_fu_838_p1),
    .ce(1'b1),
    .dout(grp_fu_838_p2)
);

conv_1_urem_5ns_4ocq #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
conv_1_urem_5ns_4ocq_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_849_p0),
    .din1(grp_fu_849_p1),
    .ce(1'b1),
    .dout(grp_fu_849_p2)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U15(
    .din0(conv_input_0_q1),
    .din1(conv_input_1_q1),
    .din2(conv_input_2_q1),
    .din3(conv_input_3_q1),
    .din4(tmp_fu_1289_p5),
    .dout(tmp_fu_1289_p6)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U16(
    .din0(conv_input_0_q0),
    .din1(conv_input_1_q0),
    .din2(conv_input_2_q0),
    .din3(conv_input_3_q0),
    .din4(tmp_7_fu_1396_p5),
    .dout(tmp_7_fu_1396_p6)
);

conv_1_mux_432_32ncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_mux_432_32ncg_U17(
    .din0(conv_input_0_q1),
    .din1(conv_input_1_q1),
    .din2(conv_input_2_q1),
    .din3(conv_input_3_q1),
    .din4(tmp_8_fu_1429_p5),
    .dout(tmp_8_fu_1429_p6)
);

conv_1_mac_muladdpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_1_mac_muladdpcA_U18(
    .din0(grp_fu_1533_p0),
    .din1(grp_fu_1533_p1),
    .din2(grp_fu_1533_p2),
    .dout(grp_fu_1533_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state12)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_0_reg_618 <= select_ln35_11_reg_1627;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_618 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        f_0_reg_630 <= f_reg_1772;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_630 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten77_reg_595 <= add_ln8_reg_1605;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten77_reg_595 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_607 <= select_ln11_reg_1633;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_607 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        r_0_reg_641 <= select_ln35_1_reg_1703;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_641 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_771_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln11_reg_1576 <= add_ln11_fu_803_p2;
        add_ln26_3_reg_1569 <= add_ln26_3_fu_791_p2;
        icmp_ln11_reg_1546 <= icmp_ln11_fu_777_p2;
        select_ln35_reg_1562 <= select_ln35_fu_783_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln26_10_reg_1842 <= add_ln26_10_fu_1344_p2;
        add_ln26_14_reg_1857 <= add_ln26_14_fu_1390_p2;
        add_ln26_6_reg_1832 <= add_ln26_6_fu_1335_p2;
        zext_ln35_6_reg_1837[4 : 0] <= zext_ln35_6_fu_1340_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1542 == 1'd0))) begin
        add_ln26_11_reg_1599 <= add_ln26_11_fu_844_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln26_1_reg_1593 <= add_ln26_1_fu_832_p2;
        tmp_1_1_2_reg_2032_pp0_iter3_reg <= tmp_1_1_2_reg_2032;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1542 == 1'd0))) begin
        add_ln26_7_reg_1587 <= add_ln26_7_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0))) begin
        add_ln35_reg_1721 <= add_ln35_fu_1172_p2;
        sub_ln26_1_reg_1715 <= sub_ln26_1_fu_1159_p2;
        sub_ln26_reg_1709 <= sub_ln26_fu_1124_p2;
        zext_ln35_5_reg_1727[2 : 0] <= zext_ln35_5_fu_1196_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln8_reg_1605 <= add_ln8_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln35_reg_1610 <= and_ln35_fu_872_p2;
        select_ln35_10_reg_1620 <= select_ln35_10_fu_883_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln35_reg_1610_pp0_iter1_reg <= and_ln35_reg_1610;
        select_ln35_10_reg_1620_pp0_iter1_reg <= select_ln35_10_reg_1620;
        select_ln35_10_reg_1620_pp0_iter2_reg <= select_ln35_10_reg_1620_pp0_iter1_reg;
        select_ln35_10_reg_1620_pp0_iter3_reg <= select_ln35_10_reg_1620_pp0_iter2_reg;
        select_ln35_10_reg_1620_pp0_iter4_reg <= select_ln35_10_reg_1620_pp0_iter3_reg;
        select_ln35_11_reg_1627_pp0_iter1_reg <= select_ln35_11_reg_1627;
        select_ln35_11_reg_1627_pp0_iter2_reg <= select_ln35_11_reg_1627_pp0_iter1_reg;
        select_ln35_11_reg_1627_pp0_iter3_reg <= select_ln35_11_reg_1627_pp0_iter2_reg;
        select_ln35_11_reg_1627_pp0_iter4_reg <= select_ln35_11_reg_1627_pp0_iter3_reg;
        tmp_1_2_2_reg_2047_pp0_iter3_reg <= tmp_1_2_2_reg_2047;
        tmp_1_2_2_reg_2047_pp0_iter4_reg <= tmp_1_2_2_reg_2047_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c_reg_1581 <= c_fu_809_p2;
        tmp_1_1_1_reg_1977_pp0_iter3_reg <= tmp_1_1_1_reg_1977;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1542_pp0_iter5_reg == 1'd0))) begin
        conv_1_bias_load_reg_2062 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0))) begin
        conv_1_weights_0_0_0_2_reg_1678 <= conv_1_weights_0_0_0_q0;
        conv_1_weights_0_1_0_2_reg_1683 <= conv_1_weights_0_1_0_q0;
        conv_1_weights_1_0_0_2_reg_1688 <= conv_1_weights_1_0_0_q0;
        conv_1_weights_1_1_0_2_reg_1693 <= conv_1_weights_1_1_0_q0;
        select_ln35_14_reg_1673 <= select_ln35_14_fu_1024_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        conv_1_weights_2_0_0_2_reg_1992 <= conv_1_weights_2_0_0_q0;
        conv_1_weights_2_1_0_2_reg_1997 <= conv_1_weights_2_1_0_q0;
        conv_1_weights_2_2_0_2_reg_2002 <= conv_1_weights_2_2_0_q0;
        zext_ln35_8_reg_1967[4 : 0] <= zext_ln35_8_fu_1425_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0))) begin
        f_reg_1772 <= f_fu_1228_p2;
        select_ln35_1_reg_1703 <= select_ln35_1_fu_1101_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln11_reg_1546_pp0_iter1_reg <= icmp_ln11_reg_1546;
        icmp_ln8_reg_1542 <= icmp_ln8_fu_771_p2;
        icmp_ln8_reg_1542_pp0_iter1_reg <= icmp_ln8_reg_1542;
        icmp_ln8_reg_1542_pp0_iter2_reg <= icmp_ln8_reg_1542_pp0_iter1_reg;
        icmp_ln8_reg_1542_pp0_iter3_reg <= icmp_ln8_reg_1542_pp0_iter2_reg;
        icmp_ln8_reg_1542_pp0_iter4_reg <= icmp_ln8_reg_1542_pp0_iter3_reg;
        icmp_ln8_reg_1542_pp0_iter5_reg <= icmp_ln8_reg_1542_pp0_iter4_reg;
        tmp_1_1_reg_1897_pp0_iter3_reg <= tmp_1_1_reg_1897;
        zext_ln26_reg_1643_pp0_iter2_reg[5 : 0] <= zext_ln26_reg_1643[5 : 0];
        zext_ln26_reg_1643_pp0_iter3_reg[5 : 0] <= zext_ln26_reg_1643_pp0_iter2_reg[5 : 0];
        zext_ln26_reg_1643_pp0_iter4_reg[5 : 0] <= zext_ln26_reg_1643_pp0_iter3_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_728 <= grp_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0)))) begin
        reg_740 <= grp_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1542_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_750 <= grp_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln8_reg_1542_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_1542_pp0_iter4_reg == 1'd0)))) begin
        reg_755 <= grp_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1542_pp0_iter5_reg == 1'd0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_760 <= grp_fu_657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln11_reg_1633 <= select_ln11_fu_897_p3;
        select_ln35_11_reg_1627 <= select_ln35_11_fu_891_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln35_12_reg_1638 <= select_ln35_12_fu_957_p3;
        zext_ln26_reg_1643[5 : 0] <= zext_ln26_fu_964_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0))) begin
        select_ln35_16_reg_1698 <= select_ln35_16_fu_1084_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln35_1_reg_1703_pp0_iter2_reg <= select_ln35_1_reg_1703;
        select_ln35_1_reg_1703_pp0_iter3_reg <= select_ln35_1_reg_1703_pp0_iter2_reg;
        select_ln35_1_reg_1703_pp0_iter4_reg <= select_ln35_1_reg_1703_pp0_iter3_reg;
        select_ln35_1_reg_1703_pp0_iter5_reg <= select_ln35_1_reg_1703_pp0_iter4_reg;
        tmp_1_2_1_reg_2042_pp0_iter3_reg <= tmp_1_2_1_reg_2042;
        tmp_1_2_1_reg_2042_pp0_iter4_reg <= tmp_1_2_1_reg_2042_pp0_iter3_reg;
        tmp_1_2_reg_2037_pp0_iter3_reg <= tmp_1_2_reg_2037;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        tmp_1_0_2_reg_2027 <= grp_fu_661_p2;
        tmp_1_1_2_reg_2032 <= grp_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        tmp_1_1_1_reg_1977 <= grp_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_1_reg_1897 <= grp_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        tmp_1_2_1_reg_2042 <= grp_fu_666_p2;
        tmp_1_2_reg_2037 <= grp_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_1_2_2_reg_2047 <= grp_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        w_sum_3_1_1_reg_2052 <= grp_fu_652_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        zext_ln35_4_reg_1777[4 : 0] <= zext_ln35_4_fu_1244_p1[4 : 0];
        zext_ln35_7_reg_1782[2 : 0] <= zext_ln35_7_fu_1259_p1[2 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state12 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_622_p4 = select_ln35_11_reg_1627;
    end else begin
        ap_phi_mux_c_0_phi_fu_622_p4 = c_0_reg_618;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_634_p4 = f_reg_1772;
    end else begin
        ap_phi_mux_f_0_phi_fu_634_p4 = f_0_reg_630;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0))) begin
        ap_phi_mux_indvar_flatten77_phi_fu_599_p4 = add_ln8_reg_1605;
    end else begin
        ap_phi_mux_indvar_flatten77_phi_fu_599_p4 = indvar_flatten77_reg_595;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_1542 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_611_p4 = select_ln11_reg_1633;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_611_p4 = indvar_flatten_reg_607;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln8_reg_1542_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_645_p4 = select_ln35_1_reg_1703;
    end else begin
        ap_phi_mux_r_0_phi_fu_645_p4 = r_0_reg_641;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_0_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_1_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_1_weights_2_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_input_0_address0 = zext_ln26_18_fu_1444_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_0_address0 = sext_ln26_4_fu_1411_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_0_address0 = zext_ln26_16_fu_1369_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_0_address0 = zext_ln26_14_fu_1281_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_0_address0 = zext_ln26_11_fu_1220_p1;
    end else begin
        conv_input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_0_address1 = sext_ln26_6_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_0_address1 = zext_ln26_17_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_0_address1 = zext_ln26_13_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_0_address1 = zext_ln26_10_fu_1206_p1;
    end else begin
        conv_input_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_0_ce0 = 1'b1;
    end else begin
        conv_input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_0_ce1 = 1'b1;
    end else begin
        conv_input_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_input_1_address0 = zext_ln26_18_fu_1444_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_1_address0 = sext_ln26_4_fu_1411_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_1_address0 = zext_ln26_16_fu_1369_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_1_address0 = zext_ln26_14_fu_1281_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_1_address0 = zext_ln26_11_fu_1220_p1;
    end else begin
        conv_input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_1_address1 = sext_ln26_6_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_1_address1 = zext_ln26_17_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_1_address1 = zext_ln26_13_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_1_address1 = zext_ln26_10_fu_1206_p1;
    end else begin
        conv_input_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_1_ce0 = 1'b1;
    end else begin
        conv_input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_1_ce1 = 1'b1;
    end else begin
        conv_input_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_input_2_address0 = zext_ln26_18_fu_1444_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_2_address0 = sext_ln26_4_fu_1411_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_2_address0 = zext_ln26_16_fu_1369_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_2_address0 = zext_ln26_14_fu_1281_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_2_address0 = zext_ln26_11_fu_1220_p1;
    end else begin
        conv_input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_2_address1 = sext_ln26_6_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_2_address1 = zext_ln26_17_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_2_address1 = zext_ln26_13_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_2_address1 = zext_ln26_10_fu_1206_p1;
    end else begin
        conv_input_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_2_ce0 = 1'b1;
    end else begin
        conv_input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_2_ce1 = 1'b1;
    end else begin
        conv_input_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        conv_input_3_address0 = zext_ln26_18_fu_1444_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_3_address0 = sext_ln26_4_fu_1411_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_3_address0 = zext_ln26_16_fu_1369_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_3_address0 = zext_ln26_14_fu_1281_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_3_address0 = zext_ln26_11_fu_1220_p1;
    end else begin
        conv_input_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        conv_input_3_address1 = sext_ln26_6_fu_1418_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_input_3_address1 = zext_ln26_17_fu_1382_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_input_3_address1 = zext_ln26_13_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        conv_input_3_address1 = zext_ln26_10_fu_1206_p1;
    end else begin
        conv_input_3_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_3_ce0 = 1'b1;
    end else begin
        conv_input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        conv_input_3_ce1 = 1'b1;
    end else begin
        conv_input_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln8_reg_1542_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_652_p0 = reg_750;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_652_p0 = reg_740;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_652_p0 = grp_fu_661_p2;
    end else begin
        grp_fu_652_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_652_p1 = tmp_1_1_1_reg_1977_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_652_p1 = tmp_1_1_reg_1897_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_652_p1 = tmp_1_0_2_reg_2027;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_652_p1 = reg_728;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_652_p1 = 32'd0;
    end else begin
        grp_fu_652_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_657_p0 = reg_760;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_657_p0 = reg_755;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_657_p0 = w_sum_3_1_1_reg_2052;
    end else begin
        grp_fu_657_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_657_p1 = conv_1_bias_load_reg_2062;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_657_p1 = tmp_1_2_2_reg_2047_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_657_p1 = tmp_1_2_1_reg_2042_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_657_p1 = tmp_1_2_reg_2037_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_657_p1 = tmp_1_1_2_reg_2032_pp0_iter3_reg;
    end else begin
        grp_fu_657_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_661_p0 = conv_1_weights_2_2_0_2_reg_2002;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_661_p0 = conv_1_weights_2_0_0_2_reg_1992;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_661_p0 = conv_1_weights_0_2_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_661_p0 = conv_1_weights_0_1_0_2_reg_1683;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_661_p0 = conv_1_weights_0_0_0_2_reg_1678;
    end else begin
        grp_fu_661_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_661_p1 = grp_fu_678_p6;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        grp_fu_661_p1 = grp_fu_708_p6;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_661_p1 = grp_fu_693_p6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_661_p1 = tmp_fu_1289_p6;
    end else begin
        grp_fu_661_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_666_p0 = conv_1_weights_2_1_0_2_reg_1997;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_666_p0 = conv_1_weights_1_2_0_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_666_p0 = conv_1_weights_1_1_0_2_reg_1693;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_666_p0 = conv_1_weights_1_0_0_2_reg_1688;
    end else begin
        grp_fu_666_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_666_p1 = grp_fu_693_p6;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_666_p1 = tmp_8_fu_1429_p6;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_666_p1 = tmp_7_fu_1396_p6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_666_p1 = grp_fu_678_p6;
    end else begin
        grp_fu_666_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_678_p5 = zext_ln35_4_reg_1777;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_678_p5 = zext_ln35_4_fu_1244_p1;
    end else begin
        grp_fu_678_p5 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_693_p5 = zext_ln35_6_reg_1837;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_693_p5 = zext_ln35_6_fu_1340_p1;
        end else begin
            grp_fu_693_p5 = 'bx;
        end
    end else begin
        grp_fu_693_p5 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_708_p5 = zext_ln35_8_reg_1967;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_708_p5 = zext_ln35_8_fu_1425_p1;
        end else begin
            grp_fu_708_p5 = 'bx;
        end
    end else begin
        grp_fu_708_p5 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_803_p2 = (11'd1 + ap_phi_mux_indvar_flatten_phi_fu_611_p4);

assign add_ln26_10_fu_1344_p2 = (sub_ln26_2_fu_1322_p2 + zext_ln35_7_reg_1782);

assign add_ln26_11_fu_844_p2 = (5'd3 + select_ln35_reg_1562);

assign add_ln26_12_fu_1364_p2 = (sub_ln26_reg_1709 + zext_ln35_9_fu_1360_p1);

assign add_ln26_13_fu_1377_p2 = (sub_ln26_1_reg_1715 + zext_ln35_9_fu_1360_p1);

assign add_ln26_14_fu_1390_p2 = (sub_ln26_2_fu_1322_p2 + zext_ln35_9_fu_1360_p1);

assign add_ln26_1_fu_832_p2 = (5'd2 + c_0_reg_618);

assign add_ln26_3_fu_791_p2 = (5'd1 + select_ln35_fu_783_p3);

assign add_ln26_4_fu_1200_p2 = (sub_ln26_fu_1124_p2 + zext_ln35_5_fu_1196_p1);

assign add_ln26_5_fu_1214_p2 = (sub_ln26_1_fu_1159_p2 + zext_ln35_5_fu_1196_p1);

assign add_ln26_6_fu_1335_p2 = (sub_ln26_2_fu_1322_p2 + zext_ln35_5_reg_1727);

assign add_ln26_7_fu_821_p2 = (5'd2 + select_ln35_reg_1562);

assign add_ln26_8_fu_1263_p2 = (sub_ln26_reg_1709 + zext_ln35_7_fu_1259_p1);

assign add_ln26_9_fu_1276_p2 = (sub_ln26_1_reg_1715 + zext_ln35_7_fu_1259_p1);

assign add_ln26_fu_1130_p2 = (5'd2 + ap_phi_mux_r_0_phi_fu_645_p4);

assign add_ln35_2_fu_1471_p2 = (zext_ln26_8_fu_1464_p1 + zext_ln35_10_fu_1468_p1);

assign add_ln35_fu_1172_p2 = (ap_phi_mux_r_0_phi_fu_645_p4 + select_ln35_3_fu_1165_p3);

assign add_ln8_fu_855_p2 = (15'd1 + indvar_flatten77_reg_595);

assign and_ln34_fu_1518_p2 = (tmp_13_fu_672_p2 & or_ln34_fu_1512_p2);

assign and_ln35_fu_872_p2 = (xor_ln35_fu_861_p2 & icmp_ln14_fu_866_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_1482_p1 = grp_fu_657_p2;

assign c_fu_809_p2 = (5'd1 + c_0_reg_618);

assign conv_1_bias_address0 = zext_ln26_reg_1643_pp0_iter4_reg;

assign conv_1_weights_0_0_0_address0 = zext_ln26_fu_964_p1;

assign conv_1_weights_0_1_0_address0 = zext_ln26_fu_964_p1;

assign conv_1_weights_0_2_0_address0 = zext_ln26_reg_1643;

assign conv_1_weights_1_0_0_address0 = zext_ln26_fu_964_p1;

assign conv_1_weights_1_1_0_address0 = zext_ln26_fu_964_p1;

assign conv_1_weights_1_2_0_address0 = zext_ln26_reg_1643;

assign conv_1_weights_2_0_0_address0 = zext_ln26_reg_1643;

assign conv_1_weights_2_1_0_address0 = zext_ln26_reg_1643;

assign conv_1_weights_2_2_0_address0 = zext_ln26_reg_1643;

assign conv_out_address0 = zext_ln35_11_fu_1477_p1;

assign conv_out_d0 = ((and_ln34_fu_1518_p2[0:0] === 1'b1) ? grp_fu_657_p2 : 32'd0);

assign f_fu_1228_p2 = (6'd1 + select_ln35_10_reg_1620);

assign grp_fu_1533_p0 = 10'd26;

assign grp_fu_1533_p1 = grp_fu_1533_p10;

assign grp_fu_1533_p10 = select_ln35_1_reg_1703_pp0_iter5_reg;

assign grp_fu_1533_p2 = grp_fu_1533_p20;

assign grp_fu_1533_p20 = select_ln35_11_reg_1627_pp0_iter4_reg;

assign grp_fu_765_p1 = 5'd7;

assign grp_fu_797_p0 = (5'd1 + select_ln35_fu_783_p3);

assign grp_fu_797_p1 = 5'd7;

assign grp_fu_815_p0 = (5'd1 + c_0_reg_618);

assign grp_fu_815_p1 = 5'd7;

assign grp_fu_826_p0 = (5'd2 + select_ln35_reg_1562);

assign grp_fu_826_p1 = 5'd7;

assign grp_fu_838_p0 = (5'd2 + c_0_reg_618);

assign grp_fu_838_p1 = 5'd7;

assign grp_fu_849_p0 = (5'd3 + select_ln35_reg_1562);

assign grp_fu_849_p1 = 5'd7;

assign icmp_ln11_fu_777_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_611_p4 == 11'd832) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_866_p2 = ((ap_phi_mux_f_0_phi_fu_634_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1506_p2 = ((trunc_ln34_fu_1496_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1500_p2 = ((tmp_12_fu_1486_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_771_p2 = ((ap_phi_mux_indvar_flatten77_phi_fu_599_p4 == 15'd21632) ? 1'b1 : 1'b0);

assign mul_ln26_1_fu_974_p1 = mul_ln26_1_fu_974_p10;

assign mul_ln26_1_fu_974_p10 = c_reg_1581;

assign mul_ln26_1_fu_974_p2 = (12'd37 * mul_ln26_1_fu_974_p1);

assign mul_ln26_2_fu_1034_p1 = mul_ln26_2_fu_1034_p10;

assign mul_ln26_2_fu_1034_p10 = add_ln26_1_reg_1593;

assign mul_ln26_2_fu_1034_p2 = (12'd37 * mul_ln26_2_fu_1034_p1);

assign mul_ln26_3_fu_937_p1 = mul_ln26_3_fu_937_p10;

assign mul_ln26_3_fu_937_p10 = add_ln26_3_reg_1569;

assign mul_ln26_3_fu_937_p2 = (12'd37 * mul_ln26_3_fu_937_p1);

assign mul_ln26_4_fu_1004_p1 = mul_ln26_4_fu_1004_p10;

assign mul_ln26_4_fu_1004_p10 = add_ln26_7_reg_1587;

assign mul_ln26_4_fu_1004_p2 = (12'd37 * mul_ln26_4_fu_1004_p1);

assign mul_ln26_5_fu_1064_p1 = mul_ln26_5_fu_1064_p10;

assign mul_ln26_5_fu_1064_p10 = add_ln26_11_reg_1599;

assign mul_ln26_5_fu_1064_p2 = (12'd37 * mul_ln26_5_fu_1064_p1);

assign mul_ln26_fu_907_p1 = mul_ln26_fu_907_p10;

assign mul_ln26_fu_907_p10 = c_0_reg_618;

assign mul_ln26_fu_907_p2 = (12'd37 * mul_ln26_fu_907_p1);

assign or_ln34_fu_1512_p2 = (icmp_ln34_fu_1500_p2 | icmp_ln34_1_fu_1506_p2);

assign or_ln35_fu_878_p2 = (icmp_ln11_reg_1546 | and_ln35_fu_872_p2);

assign r_fu_1091_p2 = (5'd1 + ap_phi_mux_r_0_phi_fu_645_p4);

assign select_ln11_fu_897_p3 = ((icmp_ln11_reg_1546[0:0] === 1'b1) ? 11'd1 : add_ln11_reg_1576);

assign select_ln35_10_fu_883_p3 = ((or_ln35_fu_878_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_634_p4);

assign select_ln35_11_fu_891_p3 = ((and_ln35_fu_872_p2[0:0] === 1'b1) ? add_ln26_3_reg_1569 : select_ln35_reg_1562);

assign select_ln35_12_fu_957_p3 = ((and_ln35_reg_1610[0:0] === 1'b1) ? sext_ln26_3_fu_953_p1 : select_ln35_4_fu_927_p3);

assign select_ln35_13_fu_1189_p3 = ((and_ln35_reg_1610[0:0] === 1'b1) ? trunc_ln35_fu_1185_p1 : select_ln35_5_fu_1178_p3);

assign select_ln35_14_fu_1024_p3 = ((and_ln35_reg_1610[0:0] === 1'b1) ? sext_ln26_5_fu_1020_p1 : select_ln35_6_fu_994_p3);

assign select_ln35_15_fu_1252_p3 = ((and_ln35_reg_1610[0:0] === 1'b1) ? trunc_ln35_1_fu_1248_p1 : select_ln35_7_fu_1237_p3);

assign select_ln35_16_fu_1084_p3 = ((and_ln35_reg_1610[0:0] === 1'b1) ? sext_ln26_7_fu_1080_p1 : select_ln35_8_fu_1054_p3);

assign select_ln35_17_fu_1353_p3 = ((and_ln35_reg_1610_pp0_iter1_reg[0:0] === 1'b1) ? trunc_ln35_2_fu_1349_p1 : select_ln35_9_fu_1328_p3);

assign select_ln35_1_fu_1101_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? r_fu_1091_p2 : ap_phi_mux_r_0_phi_fu_645_p4);

assign select_ln35_2_fu_1136_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? add_ln26_fu_1130_p2 : r_fu_1091_p2);

assign select_ln35_3_fu_1165_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln35_4_fu_927_p3 = ((icmp_ln11_reg_1546[0:0] === 1'b1) ? 5'd0 : sext_ln26_fu_923_p1);

assign select_ln35_5_fu_1178_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 3'd0 : trunc_ln26_fu_1097_p1);

assign select_ln35_6_fu_994_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 5'd0 : sext_ln26_1_fu_990_p1);

assign select_ln35_7_fu_1237_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 3'd1 : trunc_ln26_1_fu_1233_p1);

assign select_ln35_8_fu_1054_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 5'd0 : sext_ln26_2_fu_1050_p1);

assign select_ln35_9_fu_1328_p3 = ((icmp_ln11_reg_1546_pp0_iter1_reg[0:0] === 1'b1) ? 3'd2 : trunc_ln8_fu_1304_p1);

assign select_ln35_fu_783_p3 = ((icmp_ln11_fu_777_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_622_p4);

assign sext_ln26_1_fu_990_p1 = $signed(tmp_2_fu_980_p4);

assign sext_ln26_2_fu_1050_p1 = $signed(tmp_14_fu_1040_p4);

assign sext_ln26_3_fu_953_p1 = $signed(tmp_19_fu_943_p4);

assign sext_ln26_4_fu_1411_p1 = $signed(add_ln26_6_reg_1832);

assign sext_ln26_5_fu_1020_p1 = $signed(tmp_20_fu_1010_p4);

assign sext_ln26_6_fu_1418_p1 = $signed(add_ln26_10_reg_1842);

assign sext_ln26_7_fu_1080_p1 = $signed(tmp_21_fu_1070_p4);

assign sext_ln26_fu_923_p1 = $signed(tmp_1_fu_913_p4);

assign sub_ln26_1_fu_1159_p2 = (zext_ln26_5_fu_1155_p1 - zext_ln35_2_fu_1143_p1);

assign sub_ln26_2_fu_1322_p2 = (zext_ln26_7_fu_1318_p1 - zext_ln26_6_fu_1308_p1);

assign sub_ln26_fu_1124_p2 = (zext_ln26_4_fu_1120_p1 - zext_ln35_1_fu_1108_p1);

assign tmp_12_fu_1486_p4 = {{bitcast_ln34_fu_1482_p1[30:23]}};

assign tmp_14_fu_1040_p4 = {{mul_ln26_2_fu_1034_p2[11:8]}};

assign tmp_15_fu_1311_p3 = {{add_ln35_reg_1721}, {3'd0}};

assign tmp_16_fu_1112_p3 = {{select_ln35_1_fu_1101_p3}, {3'd0}};

assign tmp_17_fu_1147_p3 = {{select_ln35_2_fu_1136_p3}, {3'd0}};

assign tmp_18_fu_1457_p3 = {{grp_fu_1533_p3}, {5'd0}};

assign tmp_19_fu_943_p4 = {{mul_ln26_3_fu_937_p2[11:8]}};

assign tmp_1_fu_913_p4 = {{mul_ln26_fu_907_p2[11:8]}};

assign tmp_20_fu_1010_p4 = {{mul_ln26_4_fu_1004_p2[11:8]}};

assign tmp_21_fu_1070_p4 = {{mul_ln26_5_fu_1064_p2[11:8]}};

assign tmp_2_fu_980_p4 = {{mul_ln26_1_fu_974_p2[11:8]}};

assign tmp_7_fu_1396_p5 = select_ln35_14_reg_1673;

assign tmp_8_fu_1429_p5 = select_ln35_16_reg_1698;

assign tmp_fu_1289_p5 = select_ln35_12_reg_1638;

assign trunc_ln26_1_fu_1233_p1 = grp_fu_815_p2[2:0];

assign trunc_ln26_fu_1097_p1 = grp_fu_765_p2[2:0];

assign trunc_ln34_fu_1496_p1 = bitcast_ln34_fu_1482_p1[22:0];

assign trunc_ln35_1_fu_1248_p1 = grp_fu_826_p2[2:0];

assign trunc_ln35_2_fu_1349_p1 = grp_fu_849_p2[2:0];

assign trunc_ln35_fu_1185_p1 = grp_fu_797_p2[2:0];

assign trunc_ln8_fu_1304_p1 = grp_fu_838_p2[2:0];

assign xor_ln35_fu_861_p2 = (icmp_ln11_reg_1546 ^ 1'd1);

assign zext_ln26_10_fu_1206_p1 = add_ln26_4_fu_1200_p2;

assign zext_ln26_11_fu_1220_p1 = add_ln26_5_fu_1214_p2;

assign zext_ln26_13_fu_1268_p1 = add_ln26_8_fu_1263_p2;

assign zext_ln26_14_fu_1281_p1 = add_ln26_9_fu_1276_p2;

assign zext_ln26_16_fu_1369_p1 = add_ln26_12_fu_1364_p2;

assign zext_ln26_17_fu_1382_p1 = add_ln26_13_fu_1377_p2;

assign zext_ln26_18_fu_1444_p1 = add_ln26_14_reg_1857;

assign zext_ln26_4_fu_1120_p1 = tmp_16_fu_1112_p3;

assign zext_ln26_5_fu_1155_p1 = tmp_17_fu_1147_p3;

assign zext_ln26_6_fu_1308_p1 = add_ln35_reg_1721;

assign zext_ln26_7_fu_1318_p1 = tmp_15_fu_1311_p3;

assign zext_ln26_8_fu_1464_p1 = tmp_18_fu_1457_p3;

assign zext_ln26_fu_964_p1 = select_ln35_10_reg_1620;

assign zext_ln35_10_fu_1468_p1 = select_ln35_10_reg_1620_pp0_iter4_reg;

assign zext_ln35_11_fu_1477_p1 = add_ln35_2_fu_1471_p2;

assign zext_ln35_1_fu_1108_p1 = select_ln35_1_fu_1101_p3;

assign zext_ln35_2_fu_1143_p1 = select_ln35_2_fu_1136_p3;

assign zext_ln35_4_fu_1244_p1 = select_ln35_12_reg_1638;

assign zext_ln35_5_fu_1196_p1 = select_ln35_13_fu_1189_p3;

assign zext_ln35_6_fu_1340_p1 = select_ln35_14_reg_1673;

assign zext_ln35_7_fu_1259_p1 = select_ln35_15_fu_1252_p3;

assign zext_ln35_8_fu_1425_p1 = select_ln35_16_reg_1698;

assign zext_ln35_9_fu_1360_p1 = select_ln35_17_fu_1353_p3;

always @ (posedge ap_clk) begin
    zext_ln26_reg_1643[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1643_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1643_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_1643_pp0_iter4_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln35_5_reg_1727[8:3] <= 6'b000000;
    zext_ln35_4_reg_1777[31:5] <= 27'b000000000000000000000000000;
    zext_ln35_7_reg_1782[8:3] <= 6'b000000;
    zext_ln35_6_reg_1837[31:5] <= 27'b000000000000000000000000000;
    zext_ln35_8_reg_1967[31:5] <= 27'b000000000000000000000000000;
end

endmodule //conv_1
