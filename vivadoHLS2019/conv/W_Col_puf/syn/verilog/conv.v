// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.759600,HLS_SYN_LAT=484001,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=9,HLS_SYN_FF=2176,HLS_SYN_LUT=2646,HLS_VERSION=2019_1}" *)

module conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 80'd1;
parameter    ap_ST_fsm_state2 = 80'd2;
parameter    ap_ST_fsm_pp0_stage0 = 80'd4;
parameter    ap_ST_fsm_pp0_stage1 = 80'd8;
parameter    ap_ST_fsm_pp0_stage2 = 80'd16;
parameter    ap_ST_fsm_pp0_stage3 = 80'd32;
parameter    ap_ST_fsm_pp0_stage4 = 80'd64;
parameter    ap_ST_fsm_pp0_stage5 = 80'd128;
parameter    ap_ST_fsm_pp0_stage6 = 80'd256;
parameter    ap_ST_fsm_pp0_stage7 = 80'd512;
parameter    ap_ST_fsm_pp0_stage8 = 80'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 80'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 80'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 80'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 80'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 80'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 80'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 80'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 80'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 80'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 80'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 80'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 80'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 80'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 80'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 80'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 80'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 80'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 80'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 80'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 80'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 80'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 80'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 80'd8589934592;
parameter    ap_ST_fsm_pp0_stage32 = 80'd17179869184;
parameter    ap_ST_fsm_pp0_stage33 = 80'd34359738368;
parameter    ap_ST_fsm_pp0_stage34 = 80'd68719476736;
parameter    ap_ST_fsm_pp0_stage35 = 80'd137438953472;
parameter    ap_ST_fsm_pp0_stage36 = 80'd274877906944;
parameter    ap_ST_fsm_pp0_stage37 = 80'd549755813888;
parameter    ap_ST_fsm_pp0_stage38 = 80'd1099511627776;
parameter    ap_ST_fsm_pp0_stage39 = 80'd2199023255552;
parameter    ap_ST_fsm_pp0_stage40 = 80'd4398046511104;
parameter    ap_ST_fsm_pp0_stage41 = 80'd8796093022208;
parameter    ap_ST_fsm_pp0_stage42 = 80'd17592186044416;
parameter    ap_ST_fsm_pp0_stage43 = 80'd35184372088832;
parameter    ap_ST_fsm_pp0_stage44 = 80'd70368744177664;
parameter    ap_ST_fsm_pp0_stage45 = 80'd140737488355328;
parameter    ap_ST_fsm_pp0_stage46 = 80'd281474976710656;
parameter    ap_ST_fsm_pp0_stage47 = 80'd562949953421312;
parameter    ap_ST_fsm_pp0_stage48 = 80'd1125899906842624;
parameter    ap_ST_fsm_pp0_stage49 = 80'd2251799813685248;
parameter    ap_ST_fsm_pp0_stage50 = 80'd4503599627370496;
parameter    ap_ST_fsm_pp0_stage51 = 80'd9007199254740992;
parameter    ap_ST_fsm_pp0_stage52 = 80'd18014398509481984;
parameter    ap_ST_fsm_pp0_stage53 = 80'd36028797018963968;
parameter    ap_ST_fsm_pp0_stage54 = 80'd72057594037927936;
parameter    ap_ST_fsm_pp0_stage55 = 80'd144115188075855872;
parameter    ap_ST_fsm_pp0_stage56 = 80'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage57 = 80'd576460752303423488;
parameter    ap_ST_fsm_pp0_stage58 = 80'd1152921504606846976;
parameter    ap_ST_fsm_pp0_stage59 = 80'd2305843009213693952;
parameter    ap_ST_fsm_pp0_stage60 = 80'd4611686018427387904;
parameter    ap_ST_fsm_pp0_stage61 = 80'd9223372036854775808;
parameter    ap_ST_fsm_pp0_stage62 = 80'd18446744073709551616;
parameter    ap_ST_fsm_pp0_stage63 = 80'd36893488147419103232;
parameter    ap_ST_fsm_pp0_stage64 = 80'd73786976294838206464;
parameter    ap_ST_fsm_pp0_stage65 = 80'd147573952589676412928;
parameter    ap_ST_fsm_pp0_stage66 = 80'd295147905179352825856;
parameter    ap_ST_fsm_pp0_stage67 = 80'd590295810358705651712;
parameter    ap_ST_fsm_pp0_stage68 = 80'd1180591620717411303424;
parameter    ap_ST_fsm_pp0_stage69 = 80'd2361183241434822606848;
parameter    ap_ST_fsm_pp0_stage70 = 80'd4722366482869645213696;
parameter    ap_ST_fsm_pp0_stage71 = 80'd9444732965739290427392;
parameter    ap_ST_fsm_state78 = 80'd18889465931478580854784;
parameter    ap_ST_fsm_state79 = 80'd37778931862957161709568;
parameter    ap_ST_fsm_state80 = 80'd75557863725914323419136;
parameter    ap_ST_fsm_state81 = 80'd151115727451828646838272;
parameter    ap_ST_fsm_state82 = 80'd302231454903657293676544;
parameter    ap_ST_fsm_state83 = 80'd604462909807314587353088;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [9:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [10:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_r_address0;
reg input_r_ce0;
reg[9:0] input_r_address1;
reg input_r_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [79:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] conv_weights_0_address0;
reg    conv_weights_0_ce0;
wire   [31:0] conv_weights_0_q0;
reg   [7:0] conv_weights_1_address0;
reg    conv_weights_1_ce0;
wire   [31:0] conv_weights_1_q0;
reg   [7:0] conv_weights_2_address0;
reg    conv_weights_2_ce0;
wire   [31:0] conv_weights_2_q0;
reg   [7:0] conv_weights_3_address0;
reg    conv_weights_3_ce0;
wire   [31:0] conv_weights_3_q0;
reg   [7:0] conv_weights_4_address0;
reg    conv_weights_4_ce0;
wire   [31:0] conv_weights_4_q0;
reg   [7:0] conv_weights_5_address0;
reg    conv_weights_5_ce0;
wire   [31:0] conv_weights_5_q0;
wire   [3:0] conv_bias_address0;
reg    conv_bias_ce0;
wire   [31:0] conv_bias_q0;
reg   [1:0] indvar_flatten_reg_540;
reg   [1:0] wr_0_reg_552;
reg   [1:0] wc_0_0_reg_564;
reg   [31:0] w_sum_1_0_reg_575;
reg   [31:0] w_sum_0_reg_587;
reg   [31:0] reg_618;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state76_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state77_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln18_reg_1563;
reg   [0:0] icmp_ln21_reg_1554;
reg   [31:0] reg_623;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] reg_628;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] reg_633;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [31:0] grp_fu_606_p2;
reg   [31:0] reg_639;
reg   [31:0] reg_644;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [31:0] reg_650;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] reg_655;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
reg   [31:0] reg_661;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
reg   [31:0] reg_666;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] reg_672;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state21_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire   [31:0] grp_fu_599_p2;
reg   [31:0] reg_677;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state25_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state29_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage54;
wire    ap_block_state57_pp0_stage54_iter0;
wire    ap_block_pp0_stage54_11001;
wire    ap_CS_fsm_pp0_stage58;
wire    ap_block_state61_pp0_stage58_iter0;
wire    ap_block_pp0_stage58_11001;
wire    ap_CS_fsm_pp0_stage62;
wire    ap_block_state65_pp0_stage62_iter0;
wire    ap_block_pp0_stage62_11001;
wire    ap_CS_fsm_pp0_stage66;
wire    ap_block_state69_pp0_stage66_iter0;
wire    ap_block_pp0_stage66_11001;
wire    ap_CS_fsm_pp0_stage70;
wire    ap_block_state73_pp0_stage70_iter0;
wire    ap_block_pp0_stage70_11001;
wire    ap_CS_fsm_state82;
reg   [31:0] reg_683;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state33_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state37_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state41_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_state45_pp0_stage42_iter0;
wire    ap_block_pp0_stage42_11001;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_state49_pp0_stage46_iter0;
wire    ap_block_pp0_stage46_11001;
wire   [0:0] icmp_ln8_fu_688_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln8_fu_694_p2;
reg   [10:0] add_ln8_reg_1445;
wire   [0:0] icmp_ln11_fu_706_p2;
reg   [0:0] icmp_ln11_reg_1450;
wire   [3:0] select_ln35_1_fu_720_p3;
reg   [3:0] select_ln35_1_reg_1455;
wire   [4:0] select_ln35_2_fu_762_p3;
reg   [4:0] select_ln35_2_reg_1462;
wire   [3:0] select_ln35_3_fu_770_p3;
reg   [3:0] select_ln35_3_reg_1467;
wire   [7:0] zext_ln35_1_fu_778_p1;
reg   [7:0] zext_ln35_1_reg_1474;
wire   [63:0] zext_ln26_fu_789_p1;
reg   [63:0] zext_ln26_reg_1479;
wire   [8:0] zext_ln35_2_fu_793_p1;
reg   [8:0] zext_ln35_2_reg_1484;
reg   [10:0] conv_out_addr_reg_1491;
wire   [3:0] add_ln26_fu_838_p2;
reg   [3:0] add_ln26_reg_1496;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state75_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [10:0] sub_ln26_1_fu_911_p2;
reg   [10:0] sub_ln26_1_reg_1531;
wire   [1:0] or_ln21_fu_933_p2;
reg   [1:0] or_ln21_reg_1549;
wire   [0:0] icmp_ln21_fu_939_p2;
wire   [0:0] icmp_ln18_fu_945_p2;
reg   [0:0] icmp_ln18_reg_1563_pp0_iter1_reg;
wire   [1:0] select_ln21_fu_957_p3;
reg   [1:0] select_ln21_reg_1567;
reg   [31:0] conv_weights_2_load_reg_1582;
reg   [31:0] conv_weights_3_load_reg_1587;
reg   [31:0] conv_weights_4_load_reg_1592;
reg   [31:0] conv_weights_5_load_reg_1597;
wire   [1:0] wr_fu_985_p2;
reg   [1:0] wr_reg_1602;
wire   [3:0] select_ln18_1_fu_1004_p3;
reg   [3:0] select_ln18_1_reg_1607;
wire   [7:0] grp_fu_1426_p3;
reg   [7:0] add_ln26_12_reg_1642;
wire   [1:0] select_ln18_fu_1075_p3;
reg   [1:0] select_ln18_reg_1658;
reg   [31:0] conv_weights_1_load_2_reg_1663;
reg   [31:0] conv_weights_2_load_2_reg_1668;
reg   [31:0] conv_weights_3_load_2_reg_1673;
reg   [31:0] conv_weights_4_load_2_reg_1678;
reg   [31:0] conv_weights_5_load_2_reg_1683;
wire   [7:0] grp_fu_1433_p3;
reg   [7:0] add_ln26_19_reg_1718;
wire   [10:0] sub_ln26_4_fu_1176_p2;
reg   [10:0] sub_ln26_4_reg_1724;
reg   [31:0] conv_weights_0_load_1_reg_1742;
reg   [31:0] conv_weights_2_load_1_reg_1747;
reg   [31:0] conv_weights_3_load_1_reg_1752;
reg   [31:0] conv_weights_4_load_1_reg_1757;
reg   [31:0] conv_weights_5_load_1_reg_1762;
reg   [31:0] input_load_15_reg_1787;
reg   [31:0] input_load_17_reg_1792;
wire   [10:0] sub_ln26_5_fu_1256_p2;
reg   [10:0] sub_ln26_5_reg_1797;
reg   [31:0] tmp_1_0_5_reg_1815;
reg   [31:0] input_load_7_reg_1830;
reg   [31:0] tmp_mid1_reg_1835;
reg   [31:0] input_load_9_reg_1850;
reg   [31:0] tmp_1_0_1_mid1_reg_1855;
reg   [31:0] input_load_11_reg_1860;
reg   [31:0] tmp_1_0_3_mid1_reg_1865;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
reg   [31:0] tmp_1_0_4_mid1_reg_1870;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
reg   [31:0] tmp_1_0_5_mid1_reg_1875;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
reg   [31:0] tmp_1_1_1_reg_1880;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state18_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
reg   [31:0] tmp_1_1_2_reg_1885;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_state19_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
reg   [31:0] tmp_1_1_3_reg_1890;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_state20_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
reg   [31:0] tmp_1_1_5_reg_1895;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_state22_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire   [1:0] add_ln18_fu_1318_p2;
reg   [1:0] add_ln18_reg_1900;
wire   [31:0] select_ln18_4_fu_1324_p3;
reg   [31:0] select_ln18_4_reg_1905;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_state31_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_11001;
wire   [31:0] select_ln18_2_fu_1331_p3;
reg   [31:0] select_ln18_2_reg_1910;
wire    ap_CS_fsm_pp0_stage50;
wire    ap_block_state53_pp0_stage50_iter0;
wire    ap_block_pp0_stage50_11001;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state78;
wire   [4:0] f_fu_1338_p2;
reg   [4:0] f_reg_1925;
wire   [8:0] select_ln11_fu_1349_p3;
reg   [8:0] select_ln11_reg_1930;
wire    ap_CS_fsm_state79;
wire    ap_block_pp0_stage26_subdone;
reg    ap_condition_pp0_exit_iter0_state29;
wire    ap_block_state74_pp0_stage71_iter0;
wire    ap_block_pp0_stage71_subdone;
wire    ap_CS_fsm_pp0_stage71;
reg   [10:0] indvar_flatten33_reg_484;
wire    ap_CS_fsm_state83;
reg   [3:0] r_0_reg_495;
reg   [8:0] indvar_flatten19_reg_506;
reg   [3:0] c_0_reg_518;
reg   [4:0] f_0_reg_529;
reg   [1:0] ap_phi_mux_indvar_flatten_phi_fu_544_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_556_p4;
reg   [1:0] ap_phi_mux_wc_0_0_phi_fu_568_p4;
wire   [63:0] zext_ln35_4_fu_807_p1;
wire   [63:0] zext_ln26_6_fu_874_p1;
wire   [63:0] zext_ln26_9_fu_917_p1;
wire   [63:0] zext_ln26_10_fu_928_p1;
wire   [63:0] zext_ln26_11_fu_970_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_12_fu_980_p1;
wire  signed [63:0] sext_ln26_fu_1045_p1;
wire   [63:0] zext_ln26_13_fu_1060_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_14_fu_1070_p1;
wire   [63:0] zext_ln26_28_fu_1139_p1;
wire   [63:0] zext_ln26_22_fu_1182_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln26_23_fu_1193_p1;
wire   [63:0] zext_ln26_24_fu_1203_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln26_25_fu_1213_p1;
wire   [63:0] zext_ln26_26_fu_1223_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln26_27_fu_1233_p1;
wire   [63:0] zext_ln26_31_fu_1262_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln26_32_fu_1273_p1;
wire   [63:0] zext_ln26_33_fu_1283_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln26_34_fu_1293_p1;
wire   [63:0] zext_ln26_35_fu_1303_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln26_36_fu_1313_p1;
reg   [31:0] grp_fu_599_p0;
reg   [31:0] grp_fu_599_p1;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_pp0_stage39;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_pp0_stage43;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_pp0_stage47;
wire    ap_CS_fsm_pp0_stage51;
wire    ap_block_pp0_stage51;
wire    ap_CS_fsm_pp0_stage55;
wire    ap_block_pp0_stage55;
wire    ap_CS_fsm_pp0_stage59;
wire    ap_block_pp0_stage59;
wire    ap_CS_fsm_pp0_stage63;
wire    ap_block_pp0_stage63;
wire    ap_CS_fsm_pp0_stage67;
wire    ap_block_pp0_stage67;
wire    ap_block_pp0_stage71;
reg   [31:0] grp_fu_606_p0;
reg   [31:0] grp_fu_606_p1;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage12;
wire    ap_block_pp0_stage13;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage17;
wire    ap_block_pp0_stage18;
wire   [3:0] r_fu_700_p2;
wire   [0:0] icmp_ln14_fu_738_p2;
wire   [0:0] xor_ln35_fu_732_p2;
wire   [3:0] select_ln35_fu_712_p3;
wire   [0:0] and_ln35_fu_744_p2;
wire   [0:0] or_ln35_fu_756_p2;
wire   [3:0] c_fu_750_p2;
wire   [7:0] grp_fu_1407_p3;
wire   [11:0] zext_ln35_3_fu_797_p1;
wire   [11:0] tmp_2_cast_fu_782_p3;
wire   [11:0] add_ln35_1_fu_801_p2;
wire   [3:0] tmp_4_fu_820_p3;
wire   [4:0] zext_ln26_2_fu_828_p1;
wire   [4:0] zext_ln26_1_fu_816_p1;
wire   [3:0] zext_ln18_fu_812_p1;
wire   [4:0] zext_ln26_4_fu_851_p1;
wire   [4:0] sub_ln26_fu_832_p2;
wire   [4:0] add_ln26_3_fu_855_p2;
wire   [8:0] tmp_7_cast_fu_861_p3;
wire   [8:0] add_ln26_4_fu_869_p2;
wire   [3:0] zext_ln22_fu_847_p1;
wire   [3:0] add_ln26_1_fu_884_p2;
wire   [7:0] grp_fu_1416_p3;
wire   [8:0] tmp_1_fu_900_p3;
wire   [10:0] p_shl_cast_fu_893_p3;
wire   [10:0] zext_ln26_8_fu_907_p1;
wire   [10:0] or_ln26_fu_922_p2;
wire   [1:0] xor_ln21_fu_951_p2;
wire   [10:0] add_ln26_6_fu_965_p2;
wire   [10:0] add_ln26_7_fu_975_p2;
wire   [3:0] zext_ln18_1_fu_991_p1;
wire   [3:0] add_ln26_10_fu_995_p2;
wire   [7:0] tmp_5_fu_1010_p3;
wire   [5:0] tmp_7_fu_1022_p3;
wire   [8:0] zext_ln26_19_fu_1018_p1;
wire   [8:0] zext_ln26_20_fu_1030_p1;
wire   [8:0] sub_ln26_3_fu_1034_p2;
wire   [8:0] add_ln26_11_fu_1040_p2;
wire   [10:0] add_ln26_8_fu_1055_p2;
wire   [10:0] add_ln26_9_fu_1065_p2;
wire   [3:0] tmp_2_fu_1085_p3;
wire   [4:0] zext_ln26_16_fu_1093_p1;
wire   [4:0] zext_ln26_15_fu_1081_p1;
wire   [1:0] select_ln18_3_fu_1106_p3;
wire   [4:0] zext_ln26_5_fu_1116_p1;
wire   [4:0] sub_ln26_2_fu_1097_p2;
wire   [4:0] add_ln26_17_fu_1120_p2;
wire   [8:0] tmp_16_cast_fu_1126_p3;
wire   [8:0] add_ln26_18_fu_1134_p2;
wire   [3:0] zext_ln21_fu_1112_p1;
wire   [3:0] add_ln26_2_fu_1149_p2;
wire   [8:0] tmp_8_fu_1165_p3;
wire   [10:0] p_shl5_cast_fu_1158_p3;
wire   [10:0] zext_ln26_21_fu_1172_p1;
wire   [10:0] or_ln26_1_fu_1187_p2;
wire   [10:0] add_ln26_13_fu_1198_p2;
wire   [10:0] add_ln26_14_fu_1208_p2;
wire   [10:0] add_ln26_15_fu_1218_p2;
wire   [10:0] add_ln26_16_fu_1228_p2;
wire   [8:0] tmp_9_fu_1245_p3;
wire   [10:0] p_shl3_cast_fu_1238_p3;
wire   [10:0] zext_ln26_30_fu_1252_p1;
wire   [10:0] or_ln26_2_fu_1267_p2;
wire   [10:0] add_ln26_20_fu_1278_p2;
wire   [10:0] add_ln26_21_fu_1288_p2;
wire   [10:0] add_ln26_22_fu_1298_p2;
wire   [10:0] add_ln26_23_fu_1308_p2;
wire    ap_block_pp0_stage26;
wire    ap_block_pp0_stage28;
wire    ap_block_pp0_stage50;
wire   [8:0] add_ln11_1_fu_1343_p2;
wire   [31:0] bitcast_ln34_fu_1356_p1;
wire   [7:0] tmp_fu_1360_p4;
wire   [22:0] trunc_ln34_fu_1370_p1;
wire   [0:0] icmp_ln34_1_fu_1380_p2;
wire   [0:0] icmp_ln34_fu_1374_p2;
wire   [0:0] or_ln34_fu_1386_p2;
wire   [0:0] grp_fu_612_p2;
wire   [0:0] and_ln34_fu_1392_p2;
wire   [3:0] grp_fu_1407_p0;
wire   [4:0] grp_fu_1407_p1;
wire   [3:0] grp_fu_1407_p2;
wire   [3:0] grp_fu_1416_p0;
wire   [4:0] grp_fu_1416_p1;
wire   [3:0] grp_fu_1416_p2;
wire   [3:0] grp_fu_1426_p0;
wire   [4:0] grp_fu_1426_p1;
wire   [3:0] grp_fu_1426_p2;
wire   [3:0] grp_fu_1433_p0;
wire   [4:0] grp_fu_1433_p1;
wire   [3:0] grp_fu_1433_p2;
reg   [79:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_state23_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_state24_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage21_11001;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state26_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_state27_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_state28_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage25_11001;
wire    ap_block_state30_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage27_11001;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state32_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage29_11001;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state34_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_state35_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage32_11001;
wire    ap_block_state36_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage33_11001;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state38_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage35_11001;
wire    ap_block_state39_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage36_11001;
wire    ap_block_state40_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage37_11001;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_state42_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage39_11001;
wire    ap_block_state43_pp0_stage40_iter0;
wire    ap_block_pp0_stage40_subdone;
wire    ap_block_pp0_stage40_11001;
wire    ap_block_state44_pp0_stage41_iter0;
wire    ap_block_pp0_stage41_subdone;
wire    ap_block_pp0_stage41_11001;
wire    ap_block_pp0_stage42_subdone;
wire    ap_block_state46_pp0_stage43_iter0;
wire    ap_block_pp0_stage43_subdone;
wire    ap_block_pp0_stage43_11001;
wire    ap_block_state47_pp0_stage44_iter0;
wire    ap_block_pp0_stage44_subdone;
wire    ap_block_pp0_stage44_11001;
wire    ap_block_state48_pp0_stage45_iter0;
wire    ap_block_pp0_stage45_subdone;
wire    ap_block_pp0_stage45_11001;
wire    ap_block_pp0_stage46_subdone;
wire    ap_block_state50_pp0_stage47_iter0;
wire    ap_block_pp0_stage47_subdone;
wire    ap_block_pp0_stage47_11001;
wire    ap_block_state51_pp0_stage48_iter0;
wire    ap_block_pp0_stage48_subdone;
wire    ap_block_pp0_stage48_11001;
wire    ap_block_state52_pp0_stage49_iter0;
wire    ap_block_pp0_stage49_subdone;
wire    ap_block_pp0_stage49_11001;
wire    ap_block_pp0_stage50_subdone;
wire    ap_block_state54_pp0_stage51_iter0;
wire    ap_block_pp0_stage51_subdone;
wire    ap_block_pp0_stage51_11001;
wire    ap_block_state55_pp0_stage52_iter0;
wire    ap_block_pp0_stage52_subdone;
wire    ap_block_pp0_stage52_11001;
wire    ap_block_state56_pp0_stage53_iter0;
wire    ap_block_pp0_stage53_subdone;
wire    ap_block_pp0_stage53_11001;
wire    ap_block_pp0_stage54_subdone;
wire    ap_block_state58_pp0_stage55_iter0;
wire    ap_block_pp0_stage55_subdone;
wire    ap_block_pp0_stage55_11001;
wire    ap_block_state59_pp0_stage56_iter0;
wire    ap_block_pp0_stage56_subdone;
wire    ap_block_pp0_stage56_11001;
wire    ap_block_state60_pp0_stage57_iter0;
wire    ap_block_pp0_stage57_subdone;
wire    ap_block_pp0_stage57_11001;
wire    ap_block_pp0_stage58_subdone;
wire    ap_block_state62_pp0_stage59_iter0;
wire    ap_block_pp0_stage59_subdone;
wire    ap_block_pp0_stage59_11001;
wire    ap_block_state63_pp0_stage60_iter0;
wire    ap_block_pp0_stage60_subdone;
wire    ap_block_pp0_stage60_11001;
wire    ap_block_state64_pp0_stage61_iter0;
wire    ap_block_pp0_stage61_subdone;
wire    ap_block_pp0_stage61_11001;
wire    ap_block_pp0_stage62_subdone;
wire    ap_block_state66_pp0_stage63_iter0;
wire    ap_block_pp0_stage63_subdone;
wire    ap_block_pp0_stage63_11001;
wire    ap_block_state67_pp0_stage64_iter0;
wire    ap_block_pp0_stage64_subdone;
wire    ap_block_pp0_stage64_11001;
wire    ap_block_state68_pp0_stage65_iter0;
wire    ap_block_pp0_stage65_subdone;
wire    ap_block_pp0_stage65_11001;
wire    ap_block_pp0_stage66_subdone;
wire    ap_block_state70_pp0_stage67_iter0;
wire    ap_block_pp0_stage67_subdone;
wire    ap_block_pp0_stage67_11001;
wire    ap_block_state71_pp0_stage68_iter0;
wire    ap_block_pp0_stage68_subdone;
wire    ap_block_pp0_stage68_11001;
wire    ap_block_state72_pp0_stage69_iter0;
wire    ap_block_pp0_stage69_subdone;
wire    ap_block_pp0_stage69_11001;
wire    ap_block_pp0_stage70_subdone;
wire    ap_block_pp0_stage71_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_1407_p00;
wire   [7:0] grp_fu_1407_p20;
wire   [7:0] grp_fu_1416_p00;
wire   [7:0] grp_fu_1416_p20;
wire   [7:0] grp_fu_1426_p00;
wire   [7:0] grp_fu_1433_p00;
wire   [7:0] grp_fu_1433_p20;
reg    ap_condition_667;
reg    ap_condition_684;
reg    ap_condition_2162;

// power-on initialization
initial begin
#0 ap_CS_fsm = 80'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_conv_weights_0 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_0_address0),
    .ce0(conv_weights_0_ce0),
    .q0(conv_weights_0_q0)
);

conv_conv_weights_1 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_1_address0),
    .ce0(conv_weights_1_ce0),
    .q0(conv_weights_1_q0)
);

conv_conv_weights_2 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_2_address0),
    .ce0(conv_weights_2_ce0),
    .q0(conv_weights_2_q0)
);

conv_conv_weights_3 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_3_address0),
    .ce0(conv_weights_3_ce0),
    .q0(conv_weights_3_q0)
);

conv_conv_weights_4 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_4_address0),
    .ce0(conv_weights_4_ce0),
    .q0(conv_weights_4_q0)
);

conv_conv_weights_5 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_weights_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_5_address0),
    .ce0(conv_weights_5_ce0),
    .q0(conv_weights_5_q0)
);

conv_conv_bias #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_bias_address0),
    .ce0(conv_bias_ce0),
    .q0(conv_bias_q0)
);

conv_fadd_32ns_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_fadd_32ns_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_599_p0),
    .din1(grp_fu_599_p1),
    .ce(1'b1),
    .dout(grp_fu_599_p2)
);

conv_fmul_32ns_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_fmul_32ns_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_606_p0),
    .din1(grp_fu_606_p1),
    .ce(1'b1),
    .dout(grp_fu_606_p2)
);

conv_fcmp_32ns_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_fcmp_32ns_32dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_599_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_612_p2)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U4(
    .din0(grp_fu_1407_p0),
    .din1(grp_fu_1407_p1),
    .din2(grp_fu_1407_p2),
    .dout(grp_fu_1407_p3)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U5(
    .din0(grp_fu_1416_p0),
    .din1(grp_fu_1416_p1),
    .din2(grp_fu_1416_p2),
    .dout(grp_fu_1416_p3)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U6(
    .din0(grp_fu_1426_p0),
    .din1(grp_fu_1426_p1),
    .din2(grp_fu_1426_p2),
    .dout(grp_fu_1426_p3)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U7(
    .din0(grp_fu_1433_p0),
    .din1(grp_fu_1433_p1),
    .din2(grp_fu_1433_p2),
    .dout(grp_fu_1433_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage26_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state29) & (1'b1 == ap_CS_fsm_pp0_stage26))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage71_subdone) & (1'b1 == ap_CS_fsm_pp0_stage71)) | ((1'b0 == ap_block_pp0_stage26_subdone) & (1'b1 == ap_CS_fsm_pp0_stage26)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        c_0_reg_518 <= select_ln35_3_reg_1467;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_reg_518 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        f_0_reg_529 <= f_reg_1925;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_529 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        indvar_flatten19_reg_506 <= select_ln11_reg_1930;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten19_reg_506 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        indvar_flatten33_reg_484 <= add_ln8_reg_1445;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten33_reg_484 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_540 <= add_ln18_reg_1900;
    end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_540 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        r_0_reg_495 <= select_ln35_1_reg_1455;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_reg_495 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_633 <= input_r_q0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_633 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_667)) begin
            reg_644 <= input_r_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_644 <= input_r_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_684)) begin
            reg_655 <= input_r_q0;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_655 <= input_r_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_666 <= input_r_q0;
        end else if ((1'b1 == ap_condition_2162)) begin
            reg_666 <= input_r_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1563_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_0_reg_587 <= select_ln18_4_reg_1905;
    end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        w_sum_0_reg_587 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1563_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        w_sum_1_0_reg_575 <= grp_fu_599_p2;
    end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        w_sum_1_0_reg_575 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wc_0_0_reg_564 <= select_ln21_reg_1567;
    end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wc_0_0_reg_564 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_0_reg_552 <= select_ln18_reg_1658;
    end else if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wr_0_reg_552 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln18_reg_1900 <= add_ln18_fu_1318_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln26_12_reg_1642 <= grp_fu_1426_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln26_19_reg_1718 <= grp_fu_1433_p3;
        select_ln18_reg_1658 <= select_ln18_fu_1075_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln26_reg_1496 <= add_ln26_fu_838_p2;
        icmp_ln18_reg_1563 <= icmp_ln18_fu_945_p2;
        icmp_ln18_reg_1563_pp0_iter1_reg <= icmp_ln18_reg_1563;
        icmp_ln21_reg_1554 <= icmp_ln21_fu_939_p2;
        or_ln21_reg_1549[1] <= or_ln21_fu_933_p2[1];
        sub_ln26_1_reg_1531[10 : 1] <= sub_ln26_1_fu_911_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_1445 <= add_ln8_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_688_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_out_addr_reg_1491 <= zext_ln35_4_fu_807_p1;
        icmp_ln11_reg_1450 <= icmp_ln11_fu_706_p2;
        select_ln35_1_reg_1455 <= select_ln35_1_fu_720_p3;
        select_ln35_2_reg_1462 <= select_ln35_2_fu_762_p3;
        select_ln35_3_reg_1467 <= select_ln35_3_fu_770_p3;
        zext_ln26_reg_1479[4 : 0] <= zext_ln26_fu_789_p1[4 : 0];
        zext_ln35_1_reg_1474[3 : 0] <= zext_ln35_1_fu_778_p1[3 : 0];
        zext_ln35_2_reg_1484[4 : 0] <= zext_ln35_2_fu_793_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_weights_0_load_1_reg_1742 <= conv_weights_0_q0;
        conv_weights_2_load_1_reg_1747 <= conv_weights_2_q0;
        conv_weights_3_load_1_reg_1752 <= conv_weights_3_q0;
        conv_weights_4_load_1_reg_1757 <= conv_weights_4_q0;
        conv_weights_5_load_1_reg_1762 <= conv_weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        conv_weights_1_load_2_reg_1663 <= conv_weights_1_q0;
        conv_weights_2_load_2_reg_1668 <= conv_weights_2_q0;
        conv_weights_3_load_2_reg_1673 <= conv_weights_3_q0;
        conv_weights_4_load_2_reg_1678 <= conv_weights_4_q0;
        conv_weights_5_load_2_reg_1683 <= conv_weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_weights_2_load_reg_1582 <= conv_weights_2_q0;
        conv_weights_3_load_reg_1587 <= conv_weights_3_q0;
        conv_weights_4_load_reg_1592 <= conv_weights_4_q0;
        conv_weights_5_load_reg_1597 <= conv_weights_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        f_reg_1925 <= f_fu_1338_p2;
        select_ln11_reg_1930 <= select_ln11_fu_1349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_11_reg_1860 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_15_reg_1787 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_17_reg_1792 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_7_reg_1830 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_load_9_reg_1850 <= input_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_618 <= conv_weights_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_623 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_628 <= conv_weights_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_639 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_650 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_661 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_672 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage70_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage70) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage66_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage66) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage62_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage62) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage58_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage58) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage54_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage54) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_677 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage46_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage46) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage42_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage42) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage38_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_683 <= grp_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln18_1_reg_1607 <= select_ln18_1_fu_1004_p3;
        wr_reg_1602 <= wr_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage50_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage50))) begin
        select_ln18_2_reg_1910 <= select_ln18_2_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage28) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln18_4_reg_1905 <= select_ln18_4_fu_1324_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln18_fu_945_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln21_reg_1567 <= select_ln21_fu_957_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sub_ln26_4_reg_1724[10 : 1] <= sub_ln26_4_fu_1176_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        sub_ln26_5_reg_1797[10 : 1] <= sub_ln26_5_fu_1256_p2[10 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_0_1_mid1_reg_1855 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_0_3_mid1_reg_1865 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_0_4_mid1_reg_1870 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_0_5_mid1_reg_1875 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_0_5_reg_1815 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_1_1_reg_1880 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_1_2_reg_1885 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_1_3_reg_1890 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_1_5_reg_1895 <= grp_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_mid1_reg_1835 <= grp_fu_606_p2;
    end
end

always @ (*) begin
    if ((icmp_ln18_reg_1563 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state29 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state29 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_544_p4 = add_ln18_reg_1900;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_544_p4 = indvar_flatten_reg_540;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wc_0_0_phi_fu_568_p4 = select_ln21_reg_1567;
    end else begin
        ap_phi_mux_wc_0_0_phi_fu_568_p4 = wc_0_0_reg_564;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln18_reg_1563 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wr_0_phi_fu_556_p4 = select_ln18_reg_1658;
    end else begin
        ap_phi_mux_wr_0_phi_fu_556_p4 = wr_0_reg_552;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        conv_bias_ce0 = 1'b1;
    end else begin
        conv_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_0_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_0_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_0_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_0_address0 = 'bx;
        end
    end else begin
        conv_weights_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_0_ce0 = 1'b1;
    end else begin
        conv_weights_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_1_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_1_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_1_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_1_address0 = 'bx;
        end
    end else begin
        conv_weights_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_1_ce0 = 1'b1;
    end else begin
        conv_weights_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_2_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_2_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_2_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_2_address0 = 'bx;
        end
    end else begin
        conv_weights_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_2_ce0 = 1'b1;
    end else begin
        conv_weights_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_3_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_3_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_3_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_3_address0 = 'bx;
        end
    end else begin
        conv_weights_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_3_ce0 = 1'b1;
    end else begin
        conv_weights_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_4_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_4_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_4_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_4_address0 = 'bx;
        end
    end else begin
        conv_weights_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_4_ce0 = 1'b1;
    end else begin
        conv_weights_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_weights_5_address0 = zext_ln26_28_fu_1139_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_weights_5_address0 = sext_ln26_fu_1045_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_weights_5_address0 = zext_ln26_6_fu_874_p1;
        end else begin
            conv_weights_5_address0 = 'bx;
        end
    end else begin
        conv_weights_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_weights_5_ce0 = 1'b1;
    end else begin
        conv_weights_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_599_p0 = w_sum_0_reg_587;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage51) & (1'b0 == ap_block_pp0_stage51))) begin
        grp_fu_599_p0 = select_ln18_2_reg_1910;
    end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31)))) begin
        grp_fu_599_p0 = reg_683;
    end else if ((((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage71) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage71)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage63) & (1'b0 == ap_block_pp0_stage63)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage59) & (1'b0 == ap_block_pp0_stage59)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage55) & (1'b0 == ap_block_pp0_stage55)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27)))) begin
        grp_fu_599_p0 = reg_677;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_599_p0 = w_sum_1_0_reg_575;
    end else begin
        grp_fu_599_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        grp_fu_599_p1 = conv_bias_q0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage71) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage71))) begin
        grp_fu_599_p1 = tmp_1_1_5_reg_1895;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage63) & (1'b0 == ap_block_pp0_stage63))) begin
        grp_fu_599_p1 = tmp_1_1_3_reg_1890;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage59) & (1'b0 == ap_block_pp0_stage59))) begin
        grp_fu_599_p1 = tmp_1_1_2_reg_1885;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage55) & (1'b0 == ap_block_pp0_stage55))) begin
        grp_fu_599_p1 = tmp_1_1_1_reg_1880;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47))) begin
        grp_fu_599_p1 = tmp_1_0_5_mid1_reg_1875;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43))) begin
        grp_fu_599_p1 = tmp_1_0_4_mid1_reg_1870;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39))) begin
        grp_fu_599_p1 = tmp_1_0_3_mid1_reg_1865;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31))) begin
        grp_fu_599_p1 = tmp_1_0_1_mid1_reg_1855;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
        grp_fu_599_p1 = tmp_mid1_reg_1835;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_599_p1 = tmp_1_0_5_reg_1815;
    end else if ((((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage67) & (1'b0 == ap_block_pp0_stage67)))) begin
        grp_fu_599_p1 = reg_672;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage51) & (1'b0 == ap_block_pp0_stage51)))) begin
        grp_fu_599_p1 = reg_661;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35)))) begin
        grp_fu_599_p1 = reg_650;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_599_p1 = reg_639;
    end else begin
        grp_fu_599_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_606_p0 = conv_weights_5_load_1_reg_1762;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_606_p0 = conv_weights_4_load_1_reg_1757;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_606_p0 = conv_weights_3_load_1_reg_1752;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_2_load_1_reg_1747;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_606_p0 = conv_weights_0_load_1_reg_1742;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_606_p0 = conv_weights_5_load_2_reg_1683;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_4_load_2_reg_1678;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_606_p0 = conv_weights_3_load_2_reg_1673;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_606_p0 = conv_weights_2_load_2_reg_1668;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_1_load_2_reg_1663;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = reg_618;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_5_load_reg_1597;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_4_load_reg_1592;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_3_load_reg_1587;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_606_p0 = conv_weights_2_load_reg_1582;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p0 = reg_628;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_606_p0 = conv_weights_0_q0;
    end else begin
        grp_fu_606_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_606_p1 = input_load_11_reg_1860;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_606_p1 = input_load_9_reg_1850;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_606_p1 = input_load_7_reg_1830;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_606_p1 = input_load_17_reg_1792;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_606_p1 = input_load_15_reg_1787;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p1 = reg_666;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p1 = reg_655;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p1 = reg_644;
    end else if ((((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p1 = reg_623;
    end else if ((((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_606_p1 = reg_633;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_606_p1 = input_r_q0;
    end else begin
        grp_fu_606_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_r_address0 = zext_ln26_35_fu_1303_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address0 = zext_ln26_33_fu_1283_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address0 = zext_ln26_31_fu_1262_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address0 = zext_ln26_26_fu_1223_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address0 = zext_ln26_24_fu_1203_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address0 = zext_ln26_22_fu_1182_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address0 = zext_ln26_13_fu_1060_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address0 = zext_ln26_11_fu_970_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address0 = zext_ln26_9_fu_917_p1;
        end else begin
            input_r_address0 = 'bx;
        end
    end else begin
        input_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            input_r_address1 = zext_ln26_36_fu_1313_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            input_r_address1 = zext_ln26_34_fu_1293_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            input_r_address1 = zext_ln26_32_fu_1273_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            input_r_address1 = zext_ln26_27_fu_1233_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            input_r_address1 = zext_ln26_25_fu_1213_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            input_r_address1 = zext_ln26_23_fu_1193_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            input_r_address1 = zext_ln26_14_fu_1070_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_r_address1 = zext_ln26_12_fu_980_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_r_address1 = zext_ln26_10_fu_928_p1;
        end else begin
            input_r_address1 = 'bx;
        end
    end else begin
        input_r_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        input_r_ce1 = 1'b1;
    end else begin
        input_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_688_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((~((1'b0 == ap_block_pp0_stage26_subdone) & (icmp_ln18_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage26_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else if (((1'b0 == ap_block_pp0_stage26_subdone) & (icmp_ln18_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        ap_ST_fsm_pp0_stage49 : begin
            if ((1'b0 == ap_block_pp0_stage49_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage49;
            end
        end
        ap_ST_fsm_pp0_stage50 : begin
            if ((1'b0 == ap_block_pp0_stage50_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage50;
            end
        end
        ap_ST_fsm_pp0_stage51 : begin
            if ((1'b0 == ap_block_pp0_stage51_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage51;
            end
        end
        ap_ST_fsm_pp0_stage52 : begin
            if ((1'b0 == ap_block_pp0_stage52_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage52;
            end
        end
        ap_ST_fsm_pp0_stage53 : begin
            if ((1'b0 == ap_block_pp0_stage53_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage53;
            end
        end
        ap_ST_fsm_pp0_stage54 : begin
            if ((1'b0 == ap_block_pp0_stage54_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage54;
            end
        end
        ap_ST_fsm_pp0_stage55 : begin
            if ((1'b0 == ap_block_pp0_stage55_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage55;
            end
        end
        ap_ST_fsm_pp0_stage56 : begin
            if ((1'b0 == ap_block_pp0_stage56_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage56;
            end
        end
        ap_ST_fsm_pp0_stage57 : begin
            if ((1'b0 == ap_block_pp0_stage57_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage57;
            end
        end
        ap_ST_fsm_pp0_stage58 : begin
            if ((1'b0 == ap_block_pp0_stage58_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage58;
            end
        end
        ap_ST_fsm_pp0_stage59 : begin
            if ((1'b0 == ap_block_pp0_stage59_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage59;
            end
        end
        ap_ST_fsm_pp0_stage60 : begin
            if ((1'b0 == ap_block_pp0_stage60_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage60;
            end
        end
        ap_ST_fsm_pp0_stage61 : begin
            if ((1'b0 == ap_block_pp0_stage61_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage61;
            end
        end
        ap_ST_fsm_pp0_stage62 : begin
            if ((1'b0 == ap_block_pp0_stage62_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage62;
            end
        end
        ap_ST_fsm_pp0_stage63 : begin
            if ((1'b0 == ap_block_pp0_stage63_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage63;
            end
        end
        ap_ST_fsm_pp0_stage64 : begin
            if ((1'b0 == ap_block_pp0_stage64_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage64;
            end
        end
        ap_ST_fsm_pp0_stage65 : begin
            if ((1'b0 == ap_block_pp0_stage65_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage65;
            end
        end
        ap_ST_fsm_pp0_stage66 : begin
            if ((1'b0 == ap_block_pp0_stage66_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage66;
            end
        end
        ap_ST_fsm_pp0_stage67 : begin
            if ((1'b0 == ap_block_pp0_stage67_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage67;
            end
        end
        ap_ST_fsm_pp0_stage68 : begin
            if ((1'b0 == ap_block_pp0_stage68_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage68;
            end
        end
        ap_ST_fsm_pp0_stage69 : begin
            if ((1'b0 == ap_block_pp0_stage69_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage69;
            end
        end
        ap_ST_fsm_pp0_stage70 : begin
            if ((1'b0 == ap_block_pp0_stage70_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage70;
            end
        end
        ap_ST_fsm_pp0_stage71 : begin
            if ((1'b0 == ap_block_pp0_stage71_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage71;
            end
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_1_fu_1343_p2 = (9'd1 + indvar_flatten19_reg_506);

assign add_ln18_fu_1318_p2 = (indvar_flatten_reg_540 + 2'd1);

assign add_ln26_10_fu_995_p2 = (select_ln35_1_reg_1455 + zext_ln18_1_fu_991_p1);

assign add_ln26_11_fu_1040_p2 = (zext_ln35_2_reg_1484 + sub_ln26_3_fu_1034_p2);

assign add_ln26_13_fu_1198_p2 = (sub_ln26_4_reg_1724 + 11'd2);

assign add_ln26_14_fu_1208_p2 = (sub_ln26_4_reg_1724 + 11'd3);

assign add_ln26_15_fu_1218_p2 = (sub_ln26_4_reg_1724 + 11'd4);

assign add_ln26_16_fu_1228_p2 = (sub_ln26_4_reg_1724 + 11'd5);

assign add_ln26_17_fu_1120_p2 = (zext_ln26_5_fu_1116_p1 + sub_ln26_2_fu_1097_p2);

assign add_ln26_18_fu_1134_p2 = (zext_ln35_2_reg_1484 + tmp_16_cast_fu_1126_p3);

assign add_ln26_1_fu_884_p2 = (select_ln35_3_reg_1467 + zext_ln22_fu_847_p1);

assign add_ln26_20_fu_1278_p2 = (sub_ln26_5_reg_1797 + 11'd2);

assign add_ln26_21_fu_1288_p2 = (sub_ln26_5_reg_1797 + 11'd3);

assign add_ln26_22_fu_1298_p2 = (sub_ln26_5_reg_1797 + 11'd4);

assign add_ln26_23_fu_1308_p2 = (sub_ln26_5_reg_1797 + 11'd5);

assign add_ln26_2_fu_1149_p2 = (select_ln35_3_reg_1467 + zext_ln21_fu_1112_p1);

assign add_ln26_3_fu_855_p2 = (zext_ln26_4_fu_851_p1 + sub_ln26_fu_832_p2);

assign add_ln26_4_fu_869_p2 = (zext_ln35_2_reg_1484 + tmp_7_cast_fu_861_p3);

assign add_ln26_6_fu_965_p2 = (sub_ln26_1_reg_1531 + 11'd2);

assign add_ln26_7_fu_975_p2 = (sub_ln26_1_reg_1531 + 11'd3);

assign add_ln26_8_fu_1055_p2 = (sub_ln26_1_reg_1531 + 11'd4);

assign add_ln26_9_fu_1065_p2 = (sub_ln26_1_reg_1531 + 11'd5);

assign add_ln26_fu_838_p2 = (select_ln35_1_reg_1455 + zext_ln18_fu_812_p1);

assign add_ln35_1_fu_801_p2 = (zext_ln35_3_fu_797_p1 + tmp_2_cast_fu_782_p3);

assign add_ln8_fu_694_p2 = (indvar_flatten33_reg_484 + 11'd1);

assign and_ln34_fu_1392_p2 = (or_ln34_fu_1386_p2 & grp_fu_612_p2);

assign and_ln35_fu_744_p2 = (xor_ln35_fu_732_p2 & icmp_ln14_fu_738_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage50 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_pp0_stage51 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_pp0_stage54 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp0_stage55 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp0_stage58 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_pp0_stage59 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage62 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_pp0_stage63 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_pp0_stage66 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_pp0_stage67 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage70 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_pp0_stage71 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd79];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage41_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage42_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage43_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage44_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage45_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage46_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage47_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage48_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage49_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage50_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage51_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage52_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage53_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage54_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage55_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage56_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage57_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage58_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage59_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage60_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage61_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage62_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage63_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage64_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage65_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage66_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage67_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage68_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage69_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage70_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage71_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage40_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage41_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage42_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage43_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage44_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage45_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage46_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage47_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage48_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage49_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage50_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage51_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage52_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage53_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage54_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage55_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage56_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage57_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage58_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage59_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage60_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage61_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage62_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage63_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage64_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage65_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage66_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage67_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage68_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage69_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage70_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage71_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2162 = ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln21_reg_1554 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_667 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln21_reg_1554 == 1'd1) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_684 = ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln18_reg_1563 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_1356_p1 = reg_677;

assign c_fu_750_p2 = (select_ln35_fu_712_p3 + 4'd1);

assign conv_bias_address0 = zext_ln26_reg_1479;

assign conv_out_address0 = conv_out_addr_reg_1491;

assign conv_out_d0 = ((and_ln34_fu_1392_p2[0:0] === 1'b1) ? reg_677 : 32'd0);

assign f_fu_1338_p2 = (5'd1 + select_ln35_2_reg_1462);

assign grp_fu_1407_p0 = grp_fu_1407_p00;

assign grp_fu_1407_p00 = select_ln35_1_fu_720_p3;

assign grp_fu_1407_p1 = 8'd11;

assign grp_fu_1407_p2 = grp_fu_1407_p20;

assign grp_fu_1407_p20 = select_ln35_3_fu_770_p3;

assign grp_fu_1416_p0 = grp_fu_1416_p00;

assign grp_fu_1416_p00 = add_ln26_fu_838_p2;

assign grp_fu_1416_p1 = 8'd13;

assign grp_fu_1416_p2 = grp_fu_1416_p20;

assign grp_fu_1416_p20 = add_ln26_1_fu_884_p2;

assign grp_fu_1426_p0 = grp_fu_1426_p00;

assign grp_fu_1426_p00 = add_ln26_10_fu_995_p2;

assign grp_fu_1426_p1 = 8'd13;

assign grp_fu_1426_p2 = zext_ln35_1_reg_1474;

assign grp_fu_1433_p0 = grp_fu_1433_p00;

assign grp_fu_1433_p00 = select_ln18_1_reg_1607;

assign grp_fu_1433_p1 = 8'd13;

assign grp_fu_1433_p2 = grp_fu_1433_p20;

assign grp_fu_1433_p20 = add_ln26_2_fu_1149_p2;

assign icmp_ln11_fu_706_p2 = ((indvar_flatten19_reg_506 == 9'd176) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_738_p2 = ((f_0_reg_529 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_945_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_544_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_939_p2 = ((or_ln21_fu_933_p2 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1380_p2 = ((trunc_ln34_fu_1370_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1374_p2 = ((tmp_fu_1360_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_688_p2 = ((indvar_flatten33_reg_484 == 11'd1936) ? 1'b1 : 1'b0);

assign or_ln21_fu_933_p2 = (ap_phi_mux_wc_0_0_phi_fu_568_p4 | 2'd1);

assign or_ln26_1_fu_1187_p2 = (sub_ln26_4_fu_1176_p2 | 11'd1);

assign or_ln26_2_fu_1267_p2 = (sub_ln26_5_fu_1256_p2 | 11'd1);

assign or_ln26_fu_922_p2 = (sub_ln26_1_fu_911_p2 | 11'd1);

assign or_ln34_fu_1386_p2 = (icmp_ln34_fu_1374_p2 | icmp_ln34_1_fu_1380_p2);

assign or_ln35_fu_756_p2 = (icmp_ln11_fu_706_p2 | and_ln35_fu_744_p2);

assign p_shl3_cast_fu_1238_p3 = {{add_ln26_19_reg_1718}, {3'd0}};

assign p_shl5_cast_fu_1158_p3 = {{add_ln26_12_reg_1642}, {3'd0}};

assign p_shl_cast_fu_893_p3 = {{grp_fu_1416_p3}, {3'd0}};

assign r_fu_700_p2 = (r_0_reg_495 + 4'd1);

assign select_ln11_fu_1349_p3 = ((icmp_ln11_reg_1450[0:0] === 1'b1) ? 9'd1 : add_ln11_1_fu_1343_p2);

assign select_ln18_1_fu_1004_p3 = ((icmp_ln21_reg_1554[0:0] === 1'b1) ? add_ln26_10_fu_995_p2 : add_ln26_reg_1496);

assign select_ln18_2_fu_1331_p3 = ((icmp_ln21_reg_1554[0:0] === 1'b1) ? grp_fu_599_p2 : reg_677);

assign select_ln18_3_fu_1106_p3 = ((icmp_ln21_reg_1554[0:0] === 1'b1) ? 2'd1 : or_ln21_reg_1549);

assign select_ln18_4_fu_1324_p3 = ((icmp_ln21_reg_1554[0:0] === 1'b1) ? reg_677 : w_sum_0_reg_587);

assign select_ln18_fu_1075_p3 = ((icmp_ln21_reg_1554[0:0] === 1'b1) ? wr_reg_1602 : wr_0_reg_552);

assign select_ln21_fu_957_p3 = ((icmp_ln21_fu_939_p2[0:0] === 1'b1) ? 2'd2 : xor_ln21_fu_951_p2);

assign select_ln35_1_fu_720_p3 = ((icmp_ln11_fu_706_p2[0:0] === 1'b1) ? r_fu_700_p2 : r_0_reg_495);

assign select_ln35_2_fu_762_p3 = ((or_ln35_fu_756_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_529);

assign select_ln35_3_fu_770_p3 = ((and_ln35_fu_744_p2[0:0] === 1'b1) ? c_fu_750_p2 : select_ln35_fu_712_p3);

assign select_ln35_fu_712_p3 = ((icmp_ln11_fu_706_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_518);

assign sext_ln26_fu_1045_p1 = $signed(add_ln26_11_fu_1040_p2);

assign sub_ln26_1_fu_911_p2 = (p_shl_cast_fu_893_p3 - zext_ln26_8_fu_907_p1);

assign sub_ln26_2_fu_1097_p2 = (zext_ln26_16_fu_1093_p1 - zext_ln26_15_fu_1081_p1);

assign sub_ln26_3_fu_1034_p2 = (zext_ln26_19_fu_1018_p1 - zext_ln26_20_fu_1030_p1);

assign sub_ln26_4_fu_1176_p2 = (p_shl5_cast_fu_1158_p3 - zext_ln26_21_fu_1172_p1);

assign sub_ln26_5_fu_1256_p2 = (p_shl3_cast_fu_1238_p3 - zext_ln26_30_fu_1252_p1);

assign sub_ln26_fu_832_p2 = (zext_ln26_2_fu_828_p1 - zext_ln26_1_fu_816_p1);

assign tmp_16_cast_fu_1126_p3 = {{add_ln26_17_fu_1120_p2}, {4'd0}};

assign tmp_1_fu_900_p3 = {{grp_fu_1416_p3}, {1'd0}};

assign tmp_2_cast_fu_782_p3 = {{grp_fu_1407_p3}, {4'd0}};

assign tmp_2_fu_1085_p3 = {{select_ln18_fu_1075_p3}, {2'd0}};

assign tmp_4_fu_820_p3 = {{ap_phi_mux_wr_0_phi_fu_556_p4}, {2'd0}};

assign tmp_5_fu_1010_p3 = {{wr_fu_985_p2}, {6'd0}};

assign tmp_7_cast_fu_861_p3 = {{add_ln26_3_fu_855_p2}, {4'd0}};

assign tmp_7_fu_1022_p3 = {{wr_fu_985_p2}, {4'd0}};

assign tmp_8_fu_1165_p3 = {{add_ln26_12_reg_1642}, {1'd0}};

assign tmp_9_fu_1245_p3 = {{add_ln26_19_reg_1718}, {1'd0}};

assign tmp_fu_1360_p4 = {{bitcast_ln34_fu_1356_p1[30:23]}};

assign trunc_ln34_fu_1370_p1 = bitcast_ln34_fu_1356_p1[22:0];

assign wr_fu_985_p2 = (wr_0_reg_552 + 2'd1);

assign xor_ln21_fu_951_p2 = (ap_phi_mux_wc_0_0_phi_fu_568_p4 ^ 2'd2);

assign xor_ln35_fu_732_p2 = (icmp_ln11_fu_706_p2 ^ 1'd1);

assign zext_ln18_1_fu_991_p1 = wr_fu_985_p2;

assign zext_ln18_fu_812_p1 = ap_phi_mux_wr_0_phi_fu_556_p4;

assign zext_ln21_fu_1112_p1 = select_ln18_3_fu_1106_p3;

assign zext_ln22_fu_847_p1 = ap_phi_mux_wc_0_0_phi_fu_568_p4;

assign zext_ln26_10_fu_928_p1 = or_ln26_fu_922_p2;

assign zext_ln26_11_fu_970_p1 = add_ln26_6_fu_965_p2;

assign zext_ln26_12_fu_980_p1 = add_ln26_7_fu_975_p2;

assign zext_ln26_13_fu_1060_p1 = add_ln26_8_fu_1055_p2;

assign zext_ln26_14_fu_1070_p1 = add_ln26_9_fu_1065_p2;

assign zext_ln26_15_fu_1081_p1 = select_ln18_fu_1075_p3;

assign zext_ln26_16_fu_1093_p1 = tmp_2_fu_1085_p3;

assign zext_ln26_19_fu_1018_p1 = tmp_5_fu_1010_p3;

assign zext_ln26_1_fu_816_p1 = ap_phi_mux_wr_0_phi_fu_556_p4;

assign zext_ln26_20_fu_1030_p1 = tmp_7_fu_1022_p3;

assign zext_ln26_21_fu_1172_p1 = tmp_8_fu_1165_p3;

assign zext_ln26_22_fu_1182_p1 = sub_ln26_4_fu_1176_p2;

assign zext_ln26_23_fu_1193_p1 = or_ln26_1_fu_1187_p2;

assign zext_ln26_24_fu_1203_p1 = add_ln26_13_fu_1198_p2;

assign zext_ln26_25_fu_1213_p1 = add_ln26_14_fu_1208_p2;

assign zext_ln26_26_fu_1223_p1 = add_ln26_15_fu_1218_p2;

assign zext_ln26_27_fu_1233_p1 = add_ln26_16_fu_1228_p2;

assign zext_ln26_28_fu_1139_p1 = add_ln26_18_fu_1134_p2;

assign zext_ln26_2_fu_828_p1 = tmp_4_fu_820_p3;

assign zext_ln26_30_fu_1252_p1 = tmp_9_fu_1245_p3;

assign zext_ln26_31_fu_1262_p1 = sub_ln26_5_fu_1256_p2;

assign zext_ln26_32_fu_1273_p1 = or_ln26_2_fu_1267_p2;

assign zext_ln26_33_fu_1283_p1 = add_ln26_20_fu_1278_p2;

assign zext_ln26_34_fu_1293_p1 = add_ln26_21_fu_1288_p2;

assign zext_ln26_35_fu_1303_p1 = add_ln26_22_fu_1298_p2;

assign zext_ln26_36_fu_1313_p1 = add_ln26_23_fu_1308_p2;

assign zext_ln26_4_fu_851_p1 = ap_phi_mux_wc_0_0_phi_fu_568_p4;

assign zext_ln26_5_fu_1116_p1 = select_ln18_3_fu_1106_p3;

assign zext_ln26_6_fu_874_p1 = add_ln26_4_fu_869_p2;

assign zext_ln26_8_fu_907_p1 = tmp_1_fu_900_p3;

assign zext_ln26_9_fu_917_p1 = sub_ln26_1_fu_911_p2;

assign zext_ln26_fu_789_p1 = select_ln35_2_fu_762_p3;

assign zext_ln35_1_fu_778_p1 = select_ln35_3_fu_770_p3;

assign zext_ln35_2_fu_793_p1 = select_ln35_2_fu_762_p3;

assign zext_ln35_3_fu_797_p1 = select_ln35_2_fu_762_p3;

assign zext_ln35_4_fu_807_p1 = add_ln35_1_fu_801_p2;

always @ (posedge ap_clk) begin
    zext_ln35_1_reg_1474[7:4] <= 4'b0000;
    zext_ln26_reg_1479[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln35_2_reg_1484[8:5] <= 4'b0000;
    sub_ln26_1_reg_1531[0] <= 1'b0;
    or_ln21_reg_1549[0] <= 1'b1;
    sub_ln26_4_reg_1724[0] <= 1'b0;
    sub_ln26_5_reg_1797[0] <= 1'b0;
end

endmodule //conv
