// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_4_H__
#define __conv_conv_weights_4_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_4_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_4_ram) {
        ram[0] = "0b10111110000000101010010101100011";
        ram[1] = "0b00111101010000001100011011011111";
        ram[2] = "0b00111101011000100110101110110111";
        ram[3] = "0b10111101000110010110110010111010";
        ram[4] = "0b10111101100110111001111001100100";
        ram[5] = "0b00111101000100000101100101100100";
        ram[6] = "0b10111101111110000101001010000001";
        ram[7] = "0b00111110010100001000101110111011";
        ram[8] = "0b00111110011110101100010110010110";
        ram[9] = "0b10111110001111001111010101100100";
        ram[10] = "0b10111101010011101110000001011100";
        ram[11] = "0b10111101111000101100111101110000";
        ram[12] = "0b00111110110000010110000000010000";
        ram[13] = "0b00111110011010011000100111111110";
        ram[14] = "0b10111110001111101111111001111110";
        ram[15] = "0b10111101111101100001101111111110";
        ram[16] = "0b00111101011011101001100011000010";
        ram[17] = "0b00111101110011100111000110011100";
        ram[18] = "0b10111101101010101011000101010010";
        ram[19] = "0b10111100110110111111010010111001";
        ram[20] = "0b10111110001001011110110110110101";
        ram[21] = "0b10111110110011010010010101001001";
        ram[22] = "0b00111011001011010110100101000011";
        ram[23] = "0b00111101101101010100110111001010";
        ram[24] = "0b00111110001101110011111111111001";
        ram[25] = "0b10111110011110010110110100101100";
        ram[26] = "0b00111110101010010110011111110001";
        ram[27] = "0b00111101101101001010011101011100";
        ram[28] = "0b00111111000011100010101001111100";
        ram[29] = "0b10111110111110101000001101111001";
        ram[30] = "0b10111101001101110011011000110000";
        ram[31] = "0b10111110010000101110101001001100";
        ram[32] = "0b10111110001000011101011110101100";
        ram[33] = "0b10111111001001100000100000100011";
        ram[34] = "0b00111110011111000111001100111100";
        ram[35] = "0b00111100110011010100001111000100";
        ram[36] = "0b10111110100010010000001001000100";
        ram[37] = "0b10111110000111001100101111010011";
        ram[38] = "0b10111110110010101111000101100100";
        ram[39] = "0b10111100001011110010000001100000";
        ram[40] = "0b10111101111010001110000110001010";
        ram[41] = "0b10111110110000100101101100001101";
        ram[42] = "0b10111101111001010001101101111011";
        ram[43] = "0b00111110110110111100111100110110";
        ram[44] = "0b00111110000011110011010010000000";
        ram[45] = "0b10111101111010000100000100110100";
        ram[46] = "0b10111101101110111111101001110001";
        ram[47] = "0b10111100011110100001100001011010";
        ram[48] = "0b00111110001101001101110110000110";
        ram[49] = "0b00111110100111011001101000000101";
        ram[50] = "0b00111010100000101000000101101001";
        ram[51] = "0b00111110010000110111010010010010";
        ram[52] = "0b00111110001111110100101110011010";
        ram[53] = "0b10111110001110100011101010111010";
        ram[54] = "0b10111110001111011100110110101111";
        ram[55] = "0b10111110000101000110000000100101";
        ram[56] = "0b10111101101110100001000011000010";
        ram[57] = "0b10111110100011110110110011100111";
        ram[58] = "0b00111101010100001010001010000101";
        ram[59] = "0b10111110110001111100001000010100";
        ram[60] = "0b10111110001010000001100000010111";
        ram[61] = "0b00111101111110010000000100100010";
        ram[62] = "0b00111101011000011010110011101000";
        ram[63] = "0b00111110000100000110110110001000";
        ram[64] = "0b10111101010010011011011101111010";
        ram[65] = "0b00111110110011001011110000110110";
        ram[66] = "0b10111100110001101111011100000100";
        ram[67] = "0b10111110101010101010010000100111";
        ram[68] = "0b10111110101111111111100101100111";
        ram[69] = "0b10111110000001101010111110100000";
        ram[70] = "0b10111111000100011011101011101011";
        ram[71] = "0b00111110100010011100100000111010";
        ram[72] = "0b00111110110000101101011001001111";
        ram[73] = "0b10111110100001100101000000001001";
        ram[74] = "0b00111101101101001011110000001001";
        ram[75] = "0b10111101010100101111010101001111";
        ram[76] = "0b00111110100001001000111100101110";
        ram[77] = "0b10111111000111101100111101011111";
        ram[78] = "0b10111110001001110001111110001011";
        ram[79] = "0b00111110100101111000000110010000";
        ram[80] = "0b10111101100011101001010110110011";
        ram[81] = "0b00111110101110011011111111001111";
        ram[82] = "0b10111110001000011110011010001000";
        ram[83] = "0b10111110100001011010000010100110";
        ram[84] = "0b10111111000101001001111001000010";
        ram[85] = "0b00111110110000001011100111010000";
        ram[86] = "0b10111111000011101001010100100000";
        ram[87] = "0b10111110100011110110000010101110";
        ram[88] = "0b00111110111001110000011110111111";
        ram[89] = "0b10111110110100010011100101100111";
        ram[90] = "0b00111110110001001000001100110100";
        ram[91] = "0b00111101101010001011011010000001";
        ram[92] = "0b00111101110110110010110101111101";
        ram[93] = "0b10111101001111111111101110110000";
        ram[94] = "0b10111110100000000100011100100100";
        ram[95] = "0b00111110000110100001110100101111";
        ram[96] = "0b10111101110101101011010001011110";
        ram[97] = "0b00111110000000100011001110111110";
        ram[98] = "0b00111110000001000000010101011011";
        ram[99] = "0b10111110010100111010111011100000";
        ram[100] = "0b10111111000010100011100111100001";
        ram[101] = "0b10111110101100100001111100000100";
        ram[102] = "0b10111110010001111010100000110111";
        ram[103] = "0b00111110101000111011110101111100";
        ram[104] = "0b10111110110001100001100101011000";
        ram[105] = "0b10111110100110110000111111110101";
        ram[106] = "0b00111101000001101111000101011001";
        ram[107] = "0b10111101010100011100101110000010";
        ram[108] = "0b10111110010101010111111011110101";
        ram[109] = "0b00111100111110100100101010000000";
        ram[110] = "0b10111111000011000011111010100101";
        ram[111] = "0b00111101110011011011010010101000";
        ram[112] = "0b00111101101100110011011101100011";
        ram[113] = "0b00111110010100000100110011011110";
        ram[114] = "0b10111110000010111000010111110110";
        ram[115] = "0b10111111000100010001101101010010";
        ram[116] = "0b10111111001000010111100010000110";
        ram[117] = "0b10111101110011101111010001100010";
        ram[118] = "0b10111110101001101000111110101011";
        ram[119] = "0b10111100011101010001000011110001";
        ram[120] = "0b00111100100011001011001011110011";
        ram[121] = "0b10111110011000000100111100111101";
        ram[122] = "0b00111110010111010100100111100111";
        ram[123] = "0b00111101101000101101001101101000";
        ram[124] = "0b10111110100000101100101000101100";
        ram[125] = "0b10111111000010000101001110010000";
        ram[126] = "0b10111111001011110010100011011001";
        ram[127] = "0b00111110111101010100010010101010";
        ram[128] = "0b00111111001000110100011010101100";
        ram[129] = "0b00111110110110010100001110010111";
        ram[130] = "0b10111110011101000100110110110101";
        ram[131] = "0b10111111001000011000100011101010";
        ram[132] = "0b10111110110001001000111001011011";
        ram[133] = "0b00111110111001000111000100111111";
        ram[134] = "0b00111110100101101001000000100101";
        ram[135] = "0b10111110110010010100000111111100";
        ram[136] = "0b00111111000101101100111110011100";
        ram[137] = "0b10111110010000000010111011001010";
        ram[138] = "0b00111110001111010000101010000101";
        ram[139] = "0b10111110010010011000010101110110";
        ram[140] = "0b10111101001001001100100010001011";
        ram[141] = "0b00111110001111000000111011111111";
        ram[142] = "0b10111110011001101111101000011001";
        ram[143] = "0b00111110001000111001000100101101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_4) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_4_ram* meminst;


SC_CTOR(conv_conv_weights_4) {
meminst = new conv_conv_weights_4_ram("conv_conv_weights_4_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_4() {
    delete meminst;
}


};//endmodule
#endif
