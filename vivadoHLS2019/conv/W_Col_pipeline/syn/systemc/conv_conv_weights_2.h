// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_2_H__
#define __conv_conv_weights_2_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_2_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_2_ram) {
        ram[0] = "0b00111100110000010111001110101101";
        ram[1] = "0b10111111000111010110100000100101";
        ram[2] = "0b00111110000011100100101011000100";
        ram[3] = "0b10111110001011111111010111110111";
        ram[4] = "0b00111110001000101001100000010011";
        ram[5] = "0b10111101101010110100010100011001";
        ram[6] = "0b10111110010111101101011101101101";
        ram[7] = "0b10111101100001100100010000101010";
        ram[8] = "0b00111101111010110101101000100010";
        ram[9] = "0b00111110110100100001001111010111";
        ram[10] = "0b10111111000101101000111101010101";
        ram[11] = "0b10111101110101001001110101000101";
        ram[12] = "0b00111110100010100110100100001111";
        ram[13] = "0b00111100010011101101011010010111";
        ram[14] = "0b10111101001000001011001000001000";
        ram[15] = "0b00111110001011010110011001001011";
        ram[16] = "0b10111101111011101110111011110011";
        ram[17] = "0b10111110000000111100110011010001";
        ram[18] = "0b00111100100110010101111101001001";
        ram[19] = "0b00111101101101100000011001110111";
        ram[20] = "0b00111101010010100101110110000010";
        ram[21] = "0b00111110000000110000110111011101";
        ram[22] = "0b10111101101101000110100011111011";
        ram[23] = "0b00111101001010011100010110111010";
        ram[24] = "0b00111110100000010100001000111001";
        ram[25] = "0b10111101010001111110101000011110";
        ram[26] = "0b10111110001001010100111000111100";
        ram[27] = "0b10111110110101101101011110111100";
        ram[28] = "0b00111101001100011110001010100011";
        ram[29] = "0b10111110000101110100110101100100";
        ram[30] = "0b00111011101000100101110000100010";
        ram[31] = "0b00111110001101010010010010111101";
        ram[32] = "0b00111101000100111101000101010010";
        ram[33] = "0b00111110001001101111101010001011";
        ram[34] = "0b00111110010001000001110010011100";
        ram[35] = "0b10111100100000001001010110011110";
        ram[36] = "0b00111100110101001110101101100001";
        ram[37] = "0b00111110010010100111010101100101";
        ram[38] = "0b00111101100010011000100011100111";
        ram[39] = "0b10111110001111010101100111010110";
        ram[40] = "0b10111011101101110011010110011001";
        ram[41] = "0b10111110101101110110101111101100";
        ram[42] = "0b00111101011101101100101010001010";
        ram[43] = "0b10111111000011011000000101001000";
        ram[44] = "0b00111101111110010100001001101011";
        ram[45] = "0b00111110100010101011001101101111";
        ram[46] = "0b00111100101100110011010101110100";
        ram[47] = "0b00111011010010001100000000011011";
        ram[48] = "0b10111100000101000001111100100000";
        ram[49] = "0b10111110001111001111100111101011";
        ram[50] = "0b00111101100001000010011100010010";
        ram[51] = "0b00111101111010010010111001111010";
        ram[52] = "0b00111110000100011111011010010110";
        ram[53] = "0b10111110000111001110000011001000";
        ram[54] = "0b00111101010111110011110011111111";
        ram[55] = "0b10111100000010101111010101111111";
        ram[56] = "0b10111101110000110110000111110010";
        ram[57] = "0b00111110000111111100111011001100";
        ram[58] = "0b10111101110111011111111100111001";
        ram[59] = "0b10111110100110100001111001100100";
        ram[60] = "0b10111110010010100111110001011111";
        ram[61] = "0b00111101101110111001100110011010";
        ram[62] = "0b00111101110001001010111101110010";
        ram[63] = "0b00111101110000111110010000111001";
        ram[64] = "0b00111110000010100010101110000011";
        ram[65] = "0b10111101110111100010000010011111";
        ram[66] = "0b10111110001101101111110000011001";
        ram[67] = "0b00111101001001111010111000000111";
        ram[68] = "0b10111110010010000111010101001001";
        ram[69] = "0b00111110011010100101100000101100";
        ram[70] = "0b00111110001101011110001011000000";
        ram[71] = "0b10111101100000100001110101100011";
        ram[72] = "0b00111101010010101100001000001010";
        ram[73] = "0b00111011111111000110011010001010";
        ram[74] = "0b10111110010010011111101000111111";
        ram[75] = "0b00111101011101100011110111010110";
        ram[76] = "0b00111101101111010100111000010001";
        ram[77] = "0b00111101001001001010110001000101";
        ram[78] = "0b00111110000100010011100101011010";
        ram[79] = "0b10111110000011011011100110100011";
        ram[80] = "0b00111100011011011010101110101001";
        ram[81] = "0b10111110011111010101100011010111";
        ram[82] = "0b00111110110010000010101100111111";
        ram[83] = "0b00111101110110001101100101000001";
        ram[84] = "0b00111101111101001111111010100111";
        ram[85] = "0b00111110010011110001100011111011";
        ram[86] = "0b10111100101000110001111000001100";
        ram[87] = "0b00111110100010110101101011010110";
        ram[88] = "0b10111011111011101100100110010100";
        ram[89] = "0b10111101100001000100111011010001";
        ram[90] = "0b10111110100010001111011001000001";
        ram[91] = "0b10111100111110110110010100011100";
        ram[92] = "0b00111101110111111110100010001011";
        ram[93] = "0b00111110100010000101010110100101";
        ram[94] = "0b10111101110111101100101101100101";
        ram[95] = "0b10111100111011110100110000000011";
        ram[96] = "0b00111101001001100111110011111010";
        ram[97] = "0b00111110010111111011000100010100";
        ram[98] = "0b00111110001111101101010001010010";
        ram[99] = "0b10111101010111011011001101011010";
        ram[100] = "0b10111110010110001101001111010000";
        ram[101] = "0b10111110110110101101111101001010";
        ram[102] = "0b00111110100000100111010110110010";
        ram[103] = "0b10111110101100110111111001000011";
        ram[104] = "0b10111110100000000111100001001111";
        ram[105] = "0b10111101110101000000110111100100";
        ram[106] = "0b00111110010000001000111110111101";
        ram[107] = "0b10111101110111110111110110001011";
        ram[108] = "0b10111110010000111001010111101011";
        ram[109] = "0b10111110000101011100110010111001";
        ram[110] = "0b00111110010110000010100011101100";
        ram[111] = "0b10111110010101111010010010011111";
        ram[112] = "0b00111010111110001000111111110001";
        ram[113] = "0b00111011101001100101010111001110";
        ram[114] = "0b00111100100011000001110110011000";
        ram[115] = "0b00111101001000000100000011111111";
        ram[116] = "0b10111100100100000000000011110011";
        ram[117] = "0b10111100101110100001000100111001";
        ram[118] = "0b00111101100000111011101100010110";
        ram[119] = "0b00111101100111001000110010111100";
        ram[120] = "0b00111101110011001000110110110101";
        ram[121] = "0b10111101000001100010000000101101";
        ram[122] = "0b00111101101001011100110101101010";
        ram[123] = "0b00111110001000010010100101010111";
        ram[124] = "0b00111110010101011010000101011000";
        ram[125] = "0b00111101011101100100101000101001";
        ram[126] = "0b10111110010100111001001110001100";
        ram[127] = "0b00111011110001011000000110001000";
        ram[128] = "0b00111100011011101011001110111111";
        ram[129] = "0b10111100100101110001000111001000";
        ram[130] = "0b00111101101101111000001101101011";
        ram[131] = "0b00111110000001100011010101100010";
        ram[132] = "0b00111100001110001101111101101000";
        ram[133] = "0b00111110010100011101101001101010";
        ram[134] = "0b10111100110001000000011011011000";
        ram[135] = "0b10111101101001011111110001111110";
        ram[136] = "0b00111101110010000001100010110011";
        ram[137] = "0b00111110100001000010001011101010";
        ram[138] = "0b00111110000001101101000001111111";
        ram[139] = "0b00111110001001011111111100111010";
        ram[140] = "0b10111101101001011100011101101010";
        ram[141] = "0b00111101010110011000000000101001";
        ram[142] = "0b10111110101111010001000010110100";
        ram[143] = "0b00111101000000100010101100111000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_2) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_2_ram* meminst;


SC_CTOR(conv_conv_weights_2) {
meminst = new conv_conv_weights_2_ram("conv_conv_weights_2_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_2() {
    delete meminst;
}


};//endmodule
#endif
