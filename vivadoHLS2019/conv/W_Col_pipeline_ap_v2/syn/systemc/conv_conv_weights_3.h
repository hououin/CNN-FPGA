// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_3_H__
#define __conv_conv_weights_3_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_3_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_3_ram) {
        ram[0] = "0b00111101010001000000100111100101";
        ram[1] = "0b00111101111110001110110100011100";
        ram[2] = "0b10111100100000000001111101110101";
        ram[3] = "0b10111110110100100100110001000000";
        ram[4] = "0b00111101100000001100000011110000";
        ram[5] = "0b10111110101001111100101011001001";
        ram[6] = "0b10111110010101011000000000111101";
        ram[7] = "0b00111110000101001110110010100111";
        ram[8] = "0b00111110011000110011000111100100";
        ram[9] = "0b00111101110010000110111110001011";
        ram[10] = "0b10111100101100111000001011100100";
        ram[11] = "0b00111101110000101110100110001010";
        ram[12] = "0b00111110101010111101001101011111";
        ram[13] = "0b00111101000000000101101000101101";
        ram[14] = "0b10111101101111010110111110010111";
        ram[15] = "0b10111110111110000011100011000001";
        ram[16] = "0b00111101011101110000010110000101";
        ram[17] = "0b00111110011000110110011100011011";
        ram[18] = "0b00111110000000101110100101000111";
        ram[19] = "0b10111110010100010000101100100000";
        ram[20] = "0b00111110000000111010101101000011";
        ram[21] = "0b10111110101011110010000101001111";
        ram[22] = "0b10111101100010001111100111110100";
        ram[23] = "0b00111011100010100010111011000011";
        ram[24] = "0b10111101011110001010010111001110";
        ram[25] = "0b10111110001000101110110010101111";
        ram[26] = "0b00111110000100100011111000011000";
        ram[27] = "0b00111110000011100111101110000001";
        ram[28] = "0b00111110001010100101111101000010";
        ram[29] = "0b10111110100111110001111101011000";
        ram[30] = "0b10111110001101011001001001010011";
        ram[31] = "0b10111110000111101101010011100101";
        ram[32] = "0b00111110010001001100010001001000";
        ram[33] = "0b00111101101001110100001000010100";
        ram[34] = "0b00111110101000000100011000100000";
        ram[35] = "0b10111101110111100111100001011011";
        ram[36] = "0b00111110000111011010001100111100";
        ram[37] = "0b10111110001010010000100011100110";
        ram[38] = "0b10111110010010110001001101011001";
        ram[39] = "0b00111110000000110101101010000110";
        ram[40] = "0b10111110011111111010100111000001";
        ram[41] = "0b00111110010111110000001100001000";
        ram[42] = "0b00111101110100110101010011000001";
        ram[43] = "0b00111101011001001100100000110110";
        ram[44] = "0b00111100001100100111100010001110";
        ram[45] = "0b10111110100001000101110101100100";
        ram[46] = "0b10111101111110101101111110110101";
        ram[47] = "0b00111101001101001111010100001010";
        ram[48] = "0b00111110010100011110111110110111";
        ram[49] = "0b10111110011010011010001111010011";
        ram[50] = "0b00111101001100000100101111000010";
        ram[51] = "0b10111111000001100101100000111111";
        ram[52] = "0b10111100100100011001000001001011";
        ram[53] = "0b10111110010000011110011010001010";
        ram[54] = "0b10111110100000011001100000101001";
        ram[55] = "0b00111101110111000011011100011110";
        ram[56] = "0b00111110110000100001000010011101";
        ram[57] = "0b00111110101110110100101101110011";
        ram[58] = "0b00111101001110110010110111010011";
        ram[59] = "0b10111101010000001000101101110110";
        ram[60] = "0b00111101100110111100010001001100";
        ram[61] = "0b00111110011010001111101111001010";
        ram[62] = "0b00111100111000001001000100111010";
        ram[63] = "0b00111110100010011111110010001111";
        ram[64] = "0b10111110101010110000010111111011";
        ram[65] = "0b10111110101010000000011101010111";
        ram[66] = "0b10111110000111000001000010010101";
        ram[67] = "0b00111101010100100101000000101111";
        ram[68] = "0b10111110010001111110010010011011";
        ram[69] = "0b10111110011001011010111011100110";
        ram[70] = "0b00111100010100000010010001110000";
        ram[71] = "0b00111101100110100111001010101000";
        ram[72] = "0b00111101111011011000010011010011";
        ram[73] = "0b00111101000110011011101100101000";
        ram[74] = "0b00111110100110100111101011101010";
        ram[75] = "0b10111110000011110001111111011110";
        ram[76] = "0b00111110100000111100111011001000";
        ram[77] = "0b10111110111010010100100111101001";
        ram[78] = "0b00111110001110101011010010110111";
        ram[79] = "0b10111101011100010000110110111111";
        ram[80] = "0b00111110011000011100110111100110";
        ram[81] = "0b10111110001100110001110110110100";
        ram[82] = "0b00111110100111110001110111000101";
        ram[83] = "0b00111110011101101100001100110011";
        ram[84] = "0b10111110100011001011000110101011";
        ram[85] = "0b10111111001000110010010010000101";
        ram[86] = "0b00111110000100000100000100000011";
        ram[87] = "0b00111101101010111010000001100010";
        ram[88] = "0b10111011110101111101011111000011";
        ram[89] = "0b00111101111011001000111101110101";
        ram[90] = "0b10111110100100111001110010110111";
        ram[91] = "0b10111110010011001110000010111001";
        ram[92] = "0b00111110011011100011010110000011";
        ram[93] = "0b10111110000100111010110001001111";
        ram[94] = "0b10111011101000010101000100011110";
        ram[95] = "0b00111110011011011011011000011100";
        ram[96] = "0b00111101110100011110101001111001";
        ram[97] = "0b10111101100111111111001101101011";
        ram[98] = "0b10111111000100110110010110111010";
        ram[99] = "0b00111101001000101110001111000101";
        ram[100] = "0b00111101011011011001110111111110";
        ram[101] = "0b10111011011001001101101000001010";
        ram[102] = "0b00111101110010100011010110010011";
        ram[103] = "0b10111110010001011110101100110001";
        ram[104] = "0b00111110101000011100011101111010";
        ram[105] = "0b00111110100100000100110011001111";
        ram[106] = "0b00111101110110001111111001101001";
        ram[107] = "0b00111110000010110011011010111101";
        ram[108] = "0b00111110000000010110100011111001";
        ram[109] = "0b10111011011011110001001101001001";
        ram[110] = "0b10111110101110000110100111000110";
        ram[111] = "0b00111110010001011111011011111101";
        ram[112] = "0b00111110001100001000001000000110";
        ram[113] = "0b10111110000111011110111000110101";
        ram[114] = "0b00111011111111010101010001010100";
        ram[115] = "0b00111110000110000110101100010110";
        ram[116] = "0b10111101100011000011110010011111";
        ram[117] = "0b00111110001101011010001000001110";
        ram[118] = "0b10111100101000101011011110111011";
        ram[119] = "0b10111110000110100000101100011100";
        ram[120] = "0b10111110011011110110000110101010";
        ram[121] = "0b00111110011000011110001001011000";
        ram[122] = "0b00111101110001011110010111110011";
        ram[123] = "0b10111101100000110001011100100111";
        ram[124] = "0b00111100101111111101010100000010";
        ram[125] = "0b00111100111101110111110100001111";
        ram[126] = "0b00111101100111011011101000001010";
        ram[127] = "0b00111110100000011100110111000100";
        ram[128] = "0b10111101111001100010000100110010";
        ram[129] = "0b10111110011110101010011001001100";
        ram[130] = "0b00111101101000111100101001110101";
        ram[131] = "0b00111101011111110101010100010101";
        ram[132] = "0b10111110010100000001101101000011";
        ram[133] = "0b00111110001111101010110101001111";
        ram[134] = "0b10111100011000011110001011011111";
        ram[135] = "0b10111110101111001110101101111001";
        ram[136] = "0b00111100110000010101111101000110";
        ram[137] = "0b10111100110100000111011000111010";
        ram[138] = "0b00111101100111010010111110100001";
        ram[139] = "0b10111101100010000011110100110110";
        ram[140] = "0b00111101000111111101110011011111";
        ram[141] = "0b00111101011111110010000110110100";
        ram[142] = "0b00111110110100010001110101111010";
        ram[143] = "0b00111110001100000000011111011101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_3) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_3_ram* meminst;


SC_CTOR(conv_conv_weights_3) {
meminst = new conv_conv_weights_3_ram("conv_conv_weights_3_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_3() {
    delete meminst;
}


};//endmodule
#endif
