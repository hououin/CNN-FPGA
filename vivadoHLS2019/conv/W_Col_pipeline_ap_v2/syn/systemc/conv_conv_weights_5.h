// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_5_H__
#define __conv_conv_weights_5_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_5_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_5_ram) {
        ram[0] = "0b00111110010010110100000011110110";
        ram[1] = "0b10111100010011001001111010101010";
        ram[2] = "0b00111110001110111110111000111101";
        ram[3] = "0b10111101101000011100001101101001";
        ram[4] = "0b10111101100111101101101101110011";
        ram[5] = "0b00111110101011101101010100000110";
        ram[6] = "0b00111101101111011101000110100010";
        ram[7] = "0b00111101001111111010111000110110";
        ram[8] = "0b10111110001101101101110010100000";
        ram[9] = "0b10111010101110000110101100010110";
        ram[10] = "0b00111101011101100110000011100101";
        ram[11] = "0b00111101101011001111001000000110";
        ram[12] = "0b10111101100011101110001100001101";
        ram[13] = "0b10111100111110000000010101100000";
        ram[14] = "0b00111110001010000111101000000111";
        ram[15] = "0b10111101101110001100011001010000";
        ram[16] = "0b00111101011100110001110100101110";
        ram[17] = "0b00111101000111011011111011000010";
        ram[18] = "0b00111110000010010001101100111111";
        ram[19] = "0b00111101101110110100100100010111";
        ram[20] = "0b00111101111101000110110101000000";
        ram[21] = "0b00111101100110011101010101011110";
        ram[22] = "0b10111110110101010010110101000101";
        ram[23] = "0b10111110100110011010101110110000";
        ram[24] = "0b00111110010001101111100011110000";
        ram[25] = "0b00111101100000001110011010110000";
        ram[26] = "0b00111101111010011111110011110100";
        ram[27] = "0b00111101110101101000010010001100";
        ram[28] = "0b00111110010101001100110010101011";
        ram[29] = "0b10111110000101010001001110110110";
        ram[30] = "0b10111110001011010101110011111011";
        ram[31] = "0b00111101011111101011101011110001";
        ram[32] = "0b10111101011111110001100001000100";
        ram[33] = "0b00111110100111110100101001110111";
        ram[34] = "0b10111110001100000101101100111010";
        ram[35] = "0b10111011001100111111011000111100";
        ram[36] = "0b10111110100100011011101101001001";
        ram[37] = "0b00111101111000101001010000010100";
        ram[38] = "0b10111110001010011000110111001110";
        ram[39] = "0b00111101110000000101001011010110";
        ram[40] = "0b00111110000011011010001101111111";
        ram[41] = "0b00111101101111110011111010001010";
        ram[42] = "0b00111101000110111001011100110101";
        ram[43] = "0b00111101110100111000100010101001";
        ram[44] = "0b10111101110010101111010011110001";
        ram[45] = "0b00111110100111000100001000100000";
        ram[46] = "0b10111111000001011110111111101001";
        ram[47] = "0b00111101110001101100001100110011";
        ram[48] = "0b10111110011100111110001001010000";
        ram[49] = "0b00111110000101010111010101111101";
        ram[50] = "0b00111101100101110001001000011011";
        ram[51] = "0b00111111000000010101111000000111";
        ram[52] = "0b00111101101110010011001001010001";
        ram[53] = "0b00111100111000100011010010101000";
        ram[54] = "0b10111110011100010111101100001111";
        ram[55] = "0b10111110010010101010010010111010";
        ram[56] = "0b00111101001110010111110111010000";
        ram[57] = "0b00111100011011011100001110111101";
        ram[58] = "0b00111110011000011000011000010010";
        ram[59] = "0b10111100001111111111000001000101";
        ram[60] = "0b00111110011010101010011001001100";
        ram[61] = "0b00111101100001010110100100101011";
        ram[62] = "0b00111101111011001000101010111101";
        ram[63] = "0b10111110100001000101100011101111";
        ram[64] = "0b00111110100001011011110011101101";
        ram[65] = "0b00111101111000010111100001110000";
        ram[66] = "0b00111110011101011010000101000101";
        ram[67] = "0b00111101101100100101001011001110";
        ram[68] = "0b00111110000101101110111011111010";
        ram[69] = "0b00111110010100110000110011101101";
        ram[70] = "0b10111110011000000010101001111000";
        ram[71] = "0b10111110010001001011010111011101";
        ram[72] = "0b10111110100100110000010010101011";
        ram[73] = "0b00111110100011110101000101101001";
        ram[74] = "0b00111100000000100100010011101001";
        ram[75] = "0b00111110100010110010100100111101";
        ram[76] = "0b00111110101010111100001001010101";
        ram[77] = "0b00111100011111110101110001101100";
        ram[78] = "0b10111110100110011001011001010011";
        ram[79] = "0b00111101100111101001111010100001";
        ram[80] = "0b00111110010111100001011110100000";
        ram[81] = "0b10111101100101000110101010100001";
        ram[82] = "0b10111101101111011100101111011110";
        ram[83] = "0b10111110110101111110011011010110";
        ram[84] = "0b00111110000110000010101010011001";
        ram[85] = "0b10111101001000000000001010011111";
        ram[86] = "0b10111110110110101100111010001001";
        ram[87] = "0b10111101110101110011001110101001";
        ram[88] = "0b00111110111111011110000111100011";
        ram[89] = "0b00111110000011000101111101111100";
        ram[90] = "0b00111110100000101001000011001101";
        ram[91] = "0b00111101100101011000010010110010";
        ram[92] = "0b10111110000000001001101011101101";
        ram[93] = "0b00111110100010010111000101011100";
        ram[94] = "0b10111110010110110001011100000101";
        ram[95] = "0b00111101011011001011110010001100";
        ram[96] = "0b00111101101100101010101111101111";
        ram[97] = "0b10111110000001110010111001101010";
        ram[98] = "0b00111101000000000100101001110011";
        ram[99] = "0b00111110101110100100101111011100";
        ram[100] = "0b10111110011001111010010101101110";
        ram[101] = "0b10111110000001100011101100100101";
        ram[102] = "0b10111110001001011111000010110011";
        ram[103] = "0b00111110000010000100100111001011";
        ram[104] = "0b00111110100010001011011001110100";
        ram[105] = "0b00111110001111010101011000101010";
        ram[106] = "0b10111101011000111110011011000101";
        ram[107] = "0b00111101001001001100001011111000";
        ram[108] = "0b00111110011111011110110000011100";
        ram[109] = "0b00111110001001000111010001010100";
        ram[110] = "0b00111110000010101101100010100001";
        ram[111] = "0b00111110000010111100010101011000";
        ram[112] = "0b10111110100100111101110100110011";
        ram[113] = "0b10111110111000010101101011010001";
        ram[114] = "0b00111110001110011110001111001001";
        ram[115] = "0b00111110100110000100111100001001";
        ram[116] = "0b00111110010011001010001001010101";
        ram[117] = "0b00111110000000111100000001111111";
        ram[118] = "0b10111101110110101101111010101001";
        ram[119] = "0b00111110000111101100101100110010";
        ram[120] = "0b00111110000011101000110011001110";
        ram[121] = "0b10111110100011011101001000000111";
        ram[122] = "0b00111101110001011101100111100100";
        ram[123] = "0b10111110001000100101000000101111";
        ram[124] = "0b00111110100010001110101110001001";
        ram[125] = "0b00111101111010110101000110111101";
        ram[126] = "0b00111110101011111100011000110010";
        ram[127] = "0b00111100100111001110111100100100";
        ram[128] = "0b00111110100010011010100010101100";
        ram[129] = "0b10111110111101001011100101100111";
        ram[130] = "0b00111110101100011011110010011001";
        ram[131] = "0b10111110000011101000001111100100";
        ram[132] = "0b00111011100100100000110000000111";
        ram[133] = "0b10111110100010100100110001000000";
        ram[134] = "0b10111011010100100101111011011101";
        ram[135] = "0b10111100110000101010001000111100";
        ram[136] = "0b00111110100101011111011000010010";
        ram[137] = "0b00111101100010101110011001000011";
        ram[138] = "0b00111110111010001111100011101000";
        ram[139] = "0b10111110110000101101010010010001";
        ram[140] = "0b00111110011000010101110011101010";
        ram[141] = "0b00111011001011001111001100010011";
        ram[142] = "0b00111110000001111100001100001101";
        ram[143] = "0b10111101101011000011011101100001";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_5) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_5_ram* meminst;


SC_CTOR(conv_conv_weights_5) {
meminst = new conv_conv_weights_5_ram("conv_conv_weights_5_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_5() {
    delete meminst;
}


};//endmodule
#endif
