// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_HH_
#define _conv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "conv_fadd_32ns_32bkb.h"
#include "conv_fmul_32ns_32cud.h"
#include "conv_fcmp_32ns_32dEe.h"
#include "conv_mac_muladd_4eOg.h"
#include "conv_conv_weights_0.h"
#include "conv_conv_weights_1.h"
#include "conv_conv_weights_2.h"
#include "conv_conv_weights_3.h"
#include "conv_conv_weights_4.h"
#include "conv_conv_weights_5.h"
#include "conv_conv_bias.h"
#include "conv_w_sumf.h"

namespace ap_rtl {

struct conv : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > input_0_address0;
    sc_out< sc_logic > input_0_ce0;
    sc_in< sc_lv<32> > input_0_q0;
    sc_out< sc_lv<8> > input_1_address0;
    sc_out< sc_logic > input_1_ce0;
    sc_in< sc_lv<32> > input_1_q0;
    sc_out< sc_lv<8> > input_2_address0;
    sc_out< sc_logic > input_2_ce0;
    sc_in< sc_lv<32> > input_2_q0;
    sc_out< sc_lv<8> > input_3_address0;
    sc_out< sc_logic > input_3_ce0;
    sc_in< sc_lv<32> > input_3_q0;
    sc_out< sc_lv<8> > input_4_address0;
    sc_out< sc_logic > input_4_ce0;
    sc_in< sc_lv<32> > input_4_q0;
    sc_out< sc_lv<8> > input_5_address0;
    sc_out< sc_logic > input_5_ce0;
    sc_in< sc_lv<32> > input_5_q0;
    sc_out< sc_lv<11> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_out< sc_logic > conv_out_we0;
    sc_out< sc_lv<32> > conv_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    conv(sc_module_name name);
    SC_HAS_PROCESS(conv);

    ~conv();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_conv_weights_0* conv_weights_0_U;
    conv_conv_weights_1* conv_weights_1_U;
    conv_conv_weights_2* conv_weights_2_U;
    conv_conv_weights_3* conv_weights_3_U;
    conv_conv_weights_4* conv_weights_4_U;
    conv_conv_weights_5* conv_weights_5_U;
    conv_conv_bias* conv_bias_U;
    conv_w_sumf* w_sumf_U;
    conv_fadd_32ns_32bkb<1,4,32,32,32>* conv_fadd_32ns_32bkb_U1;
    conv_fmul_32ns_32cud<1,2,32,32,32>* conv_fmul_32ns_32cud_U2;
    conv_fcmp_32ns_32dEe<1,2,32,32,1>* conv_fcmp_32ns_32dEe_U3;
    conv_mac_muladd_4eOg<1,1,4,5,4,8>* conv_mac_muladd_4eOg_U4;
    conv_mac_muladd_4eOg<1,1,4,5,4,8>* conv_mac_muladd_4eOg_U5;
    sc_signal< sc_lv<17> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > conv_weights_0_address0;
    sc_signal< sc_logic > conv_weights_0_ce0;
    sc_signal< sc_lv<32> > conv_weights_0_q0;
    sc_signal< sc_lv<8> > conv_weights_1_address0;
    sc_signal< sc_logic > conv_weights_1_ce0;
    sc_signal< sc_lv<32> > conv_weights_1_q0;
    sc_signal< sc_lv<8> > conv_weights_2_address0;
    sc_signal< sc_logic > conv_weights_2_ce0;
    sc_signal< sc_lv<32> > conv_weights_2_q0;
    sc_signal< sc_lv<8> > conv_weights_3_address0;
    sc_signal< sc_logic > conv_weights_3_ce0;
    sc_signal< sc_lv<32> > conv_weights_3_q0;
    sc_signal< sc_lv<8> > conv_weights_4_address0;
    sc_signal< sc_logic > conv_weights_4_ce0;
    sc_signal< sc_lv<32> > conv_weights_4_q0;
    sc_signal< sc_lv<8> > conv_weights_5_address0;
    sc_signal< sc_logic > conv_weights_5_ce0;
    sc_signal< sc_lv<32> > conv_weights_5_q0;
    sc_signal< sc_lv<4> > conv_bias_address0;
    sc_signal< sc_logic > conv_bias_ce0;
    sc_signal< sc_lv<32> > conv_bias_q0;
    sc_signal< sc_lv<4> > indvar_flatten_reg_465;
    sc_signal< sc_lv<2> > wr_0_reg_476;
    sc_signal< sc_lv<2> > wc_0_reg_487;
    sc_signal< sc_lv<32> > w_sumf_q1;
    sc_signal< sc_lv<32> > reg_538;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state13_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<1> > icmp_ln63_reg_1020;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<11> > add_ln51_fu_550_p2;
    sc_signal< sc_lv<11> > add_ln51_reg_960;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln54_fu_556_p2;
    sc_signal< sc_lv<1> > icmp_ln54_reg_965;
    sc_signal< sc_lv<1> > icmp_ln51_fu_544_p2;
    sc_signal< sc_lv<5> > select_ln79_2_fu_600_p3;
    sc_signal< sc_lv<5> > select_ln79_2_reg_971;
    sc_signal< sc_lv<4> > select_ln79_3_fu_608_p3;
    sc_signal< sc_lv<4> > select_ln79_3_reg_978;
    sc_signal< sc_lv<4> > select_ln79_1_fu_627_p3;
    sc_signal< sc_lv<4> > select_ln79_1_reg_990;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > zext_ln79_2_fu_648_p1;
    sc_signal< sc_lv<9> > zext_ln79_2_reg_996;
    sc_signal< sc_lv<11> > conv_out_addr_reg_1001;
    sc_signal< sc_lv<32> > w_sum_reg_1006;
    sc_signal< sc_lv<1> > icmp_ln60_fu_665_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ch_fu_671_p2;
    sc_signal< sc_lv<1> > icmp_ln63_fu_682_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln63_reg_1020_pp0_iter1_reg;
    sc_signal< sc_lv<4> > add_ln63_1_fu_688_p2;
    sc_signal< sc_lv<4> > add_ln63_1_reg_1024;
    sc_signal< sc_lv<2> > select_ln63_fu_706_p3;
    sc_signal< sc_lv<2> > select_ln63_reg_1029;
    sc_signal< sc_lv<2> > select_ln63_1_fu_714_p3;
    sc_signal< sc_lv<2> > select_ln63_1_reg_1034;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > conv_weights_1_load_reg_1109;
    sc_signal< sc_lv<32> > input_1_load_reg_1114;
    sc_signal< sc_lv<32> > conv_weights_2_load_reg_1119;
    sc_signal< sc_lv<32> > input_2_load_reg_1124;
    sc_signal< sc_lv<32> > conv_weights_3_load_reg_1129;
    sc_signal< sc_lv<32> > input_3_load_reg_1134;
    sc_signal< sc_lv<32> > conv_weights_4_load_reg_1139;
    sc_signal< sc_lv<32> > input_4_load_reg_1144;
    sc_signal< sc_lv<32> > conv_weights_5_load_reg_1149;
    sc_signal< sc_lv<32> > input_5_load_reg_1154;
    sc_signal< sc_lv<32> > grp_fu_526_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_1159;
    sc_signal< sc_lv<32> > tmp_2_1_reg_1164;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state8_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state14_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > w_sumf_load_2_reg_1169;
    sc_signal< sc_lv<32> > tmp_2_2_reg_1174;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage4;
    sc_signal< bool > ap_block_state9_pp0_stage4_iter0;
    sc_signal< bool > ap_block_state15_pp0_stage4_iter1;
    sc_signal< bool > ap_block_pp0_stage4_11001;
    sc_signal< sc_lv<32> > w_sumf_load_3_reg_1179;
    sc_signal< sc_lv<32> > tmp_2_3_reg_1184;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage5;
    sc_signal< bool > ap_block_state10_pp0_stage5_iter0;
    sc_signal< bool > ap_block_state16_pp0_stage5_iter1;
    sc_signal< bool > ap_block_pp0_stage5_11001;
    sc_signal< sc_lv<32> > w_sumf_load_4_reg_1189;
    sc_signal< sc_lv<2> > wc_fu_812_p2;
    sc_signal< sc_lv<2> > wc_reg_1194;
    sc_signal< sc_lv<32> > tmp_2_4_reg_1199;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > w_sumf_load_5_reg_1204;
    sc_signal< sc_lv<32> > tmp_2_5_reg_1209;
    sc_signal< sc_lv<32> > w_sumf_load_6_reg_1214;
    sc_signal< sc_lv<3> > ch_1_fu_823_p2;
    sc_signal< sc_lv<3> > ch_1_reg_1222;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > icmp_ln75_fu_817_p2;
    sc_signal< sc_lv<5> > f_fu_834_p2;
    sc_signal< sc_lv<5> > f_reg_1232;
    sc_signal< sc_lv<9> > select_ln54_fu_845_p3;
    sc_signal< sc_lv<9> > select_ln54_reg_1237;
    sc_signal< sc_lv<32> > grp_fu_519_p2;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< bool > ap_block_pp0_stage5_subdone;
    sc_signal< sc_lv<3> > w_sumf_address0;
    sc_signal< sc_logic > w_sumf_ce0;
    sc_signal< sc_logic > w_sumf_we0;
    sc_signal< sc_lv<32> > w_sumf_d0;
    sc_signal< sc_lv<3> > w_sumf_address1;
    sc_signal< sc_logic > w_sumf_ce1;
    sc_signal< sc_lv<11> > indvar_flatten21_reg_397;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<4> > r_0_reg_408;
    sc_signal< sc_lv<9> > indvar_flatten7_reg_420;
    sc_signal< sc_lv<4> > c_0_reg_432;
    sc_signal< sc_lv<5> > f_0_reg_443;
    sc_signal< sc_lv<3> > ch_0_reg_454;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_469_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_wr_0_phi_fu_480_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_wc_0_phi_fu_491_p4;
    sc_signal< sc_lv<32> > w_sum_0_reg_498;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<3> > ch2_0_reg_508;
    sc_signal< sc_lv<64> > zext_ln59_fu_616_p1;
    sc_signal< sc_lv<64> > zext_ln79_4_fu_660_p1;
    sc_signal< sc_lv<64> > zext_ln61_fu_677_p1;
    sc_signal< sc_lv<64> > zext_ln71_4_fu_784_p1;
    sc_signal< sc_lv<64> > zext_ln71_6_fu_803_p1;
    sc_signal< sc_lv<64> > zext_ln76_fu_829_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage4;
    sc_signal< bool > ap_block_pp0_stage5;
    sc_signal< sc_lv<32> > grp_fu_519_p0;
    sc_signal< sc_lv<32> > grp_fu_519_p1;
    sc_signal< sc_lv<32> > grp_fu_526_p0;
    sc_signal< sc_lv<32> > grp_fu_526_p1;
    sc_signal< sc_lv<1> > icmp_ln57_fu_576_p2;
    sc_signal< sc_lv<1> > xor_ln79_fu_570_p2;
    sc_signal< sc_lv<4> > select_ln79_fu_562_p3;
    sc_signal< sc_lv<1> > and_ln79_fu_582_p2;
    sc_signal< sc_lv<1> > or_ln79_fu_594_p2;
    sc_signal< sc_lv<4> > c_fu_588_p2;
    sc_signal< sc_lv<4> > r_fu_621_p2;
    sc_signal< sc_lv<8> > grp_fu_903_p3;
    sc_signal< sc_lv<12> > zext_ln79_3_fu_651_p1;
    sc_signal< sc_lv<12> > tmp_2_cast_fu_641_p3;
    sc_signal< sc_lv<12> > add_ln79_1_fu_654_p2;
    sc_signal< sc_lv<1> > icmp_ln66_fu_700_p2;
    sc_signal< sc_lv<2> > wr_fu_694_p2;
    sc_signal< sc_lv<4> > tmp_4_fu_726_p3;
    sc_signal< sc_lv<5> > zext_ln71_1_fu_734_p1;
    sc_signal< sc_lv<5> > zext_ln71_fu_722_p1;
    sc_signal< sc_lv<4> > zext_ln63_fu_744_p1;
    sc_signal< sc_lv<4> > add_ln63_fu_748_p2;
    sc_signal< sc_lv<5> > sub_ln71_fu_738_p2;
    sc_signal< sc_lv<5> > zext_ln71_3_fu_761_p1;
    sc_signal< sc_lv<5> > add_ln71_fu_765_p2;
    sc_signal< sc_lv<9> > tmp_9_cast_fu_771_p3;
    sc_signal< sc_lv<9> > add_ln71_2_fu_779_p2;
    sc_signal< sc_lv<4> > zext_ln66_fu_757_p1;
    sc_signal< sc_lv<4> > add_ln71_1_fu_794_p2;
    sc_signal< sc_lv<8> > grp_fu_912_p3;
    sc_signal< sc_lv<9> > add_ln54_1_fu_839_p2;
    sc_signal< sc_lv<32> > bitcast_ln78_fu_852_p1;
    sc_signal< sc_lv<8> > tmp_fu_856_p4;
    sc_signal< sc_lv<23> > trunc_ln78_fu_866_p1;
    sc_signal< sc_lv<1> > icmp_ln78_1_fu_876_p2;
    sc_signal< sc_lv<1> > icmp_ln78_fu_870_p2;
    sc_signal< sc_lv<1> > or_ln78_fu_882_p2;
    sc_signal< sc_lv<1> > grp_fu_532_p2;
    sc_signal< sc_lv<1> > and_ln78_fu_888_p2;
    sc_signal< sc_lv<4> > grp_fu_903_p0;
    sc_signal< sc_lv<5> > grp_fu_903_p1;
    sc_signal< sc_lv<4> > grp_fu_903_p2;
    sc_signal< sc_lv<4> > grp_fu_912_p0;
    sc_signal< sc_lv<5> > grp_fu_912_p1;
    sc_signal< sc_lv<4> > grp_fu_912_p2;
    sc_signal< sc_lv<17> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage4_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_903_p00;
    sc_signal< sc_lv<8> > grp_fu_903_p20;
    sc_signal< sc_lv<8> > grp_fu_912_p00;
    sc_signal< sc_lv<8> > grp_fu_912_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<17> ap_ST_fsm_state1;
    static const sc_lv<17> ap_ST_fsm_state2;
    static const sc_lv<17> ap_ST_fsm_state3;
    static const sc_lv<17> ap_ST_fsm_state4;
    static const sc_lv<17> ap_ST_fsm_pp0_stage0;
    static const sc_lv<17> ap_ST_fsm_pp0_stage1;
    static const sc_lv<17> ap_ST_fsm_pp0_stage2;
    static const sc_lv<17> ap_ST_fsm_pp0_stage3;
    static const sc_lv<17> ap_ST_fsm_pp0_stage4;
    static const sc_lv<17> ap_ST_fsm_pp0_stage5;
    static const sc_lv<17> ap_ST_fsm_state17;
    static const sc_lv<17> ap_ST_fsm_state18;
    static const sc_lv<17> ap_ST_fsm_state19;
    static const sc_lv<17> ap_ST_fsm_state20;
    static const sc_lv<17> ap_ST_fsm_state21;
    static const sc_lv<17> ap_ST_fsm_state22;
    static const sc_lv<17> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<11> ap_const_lv11_790;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<9> ap_const_lv9_B0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln51_fu_550_p2();
    void thread_add_ln54_1_fu_839_p2();
    void thread_add_ln63_1_fu_688_p2();
    void thread_add_ln63_fu_748_p2();
    void thread_add_ln71_1_fu_794_p2();
    void thread_add_ln71_2_fu_779_p2();
    void thread_add_ln71_fu_765_p2();
    void thread_add_ln79_1_fu_654_p2();
    void thread_and_ln78_fu_888_p2();
    void thread_and_ln79_fu_582_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp0_stage4();
    void thread_ap_CS_fsm_pp0_stage5();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp0_stage4();
    void thread_ap_block_pp0_stage4_11001();
    void thread_ap_block_pp0_stage4_subdone();
    void thread_ap_block_pp0_stage5();
    void thread_ap_block_pp0_stage5_11001();
    void thread_ap_block_pp0_stage5_subdone();
    void thread_ap_block_state10_pp0_stage5_iter0();
    void thread_ap_block_state11_pp0_stage0_iter1();
    void thread_ap_block_state12_pp0_stage1_iter1();
    void thread_ap_block_state13_pp0_stage2_iter1();
    void thread_ap_block_state14_pp0_stage3_iter1();
    void thread_ap_block_state15_pp0_stage4_iter1();
    void thread_ap_block_state16_pp0_stage5_iter1();
    void thread_ap_block_state5_pp0_stage0_iter0();
    void thread_ap_block_state6_pp0_stage1_iter0();
    void thread_ap_block_state7_pp0_stage2_iter0();
    void thread_ap_block_state8_pp0_stage3_iter0();
    void thread_ap_block_state9_pp0_stage4_iter0();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_469_p4();
    void thread_ap_phi_mux_wc_0_phi_fu_491_p4();
    void thread_ap_phi_mux_wr_0_phi_fu_480_p4();
    void thread_ap_ready();
    void thread_bitcast_ln78_fu_852_p1();
    void thread_c_fu_588_p2();
    void thread_ch_1_fu_823_p2();
    void thread_ch_fu_671_p2();
    void thread_conv_bias_address0();
    void thread_conv_bias_ce0();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_conv_out_d0();
    void thread_conv_out_we0();
    void thread_conv_weights_0_address0();
    void thread_conv_weights_0_ce0();
    void thread_conv_weights_1_address0();
    void thread_conv_weights_1_ce0();
    void thread_conv_weights_2_address0();
    void thread_conv_weights_2_ce0();
    void thread_conv_weights_3_address0();
    void thread_conv_weights_3_ce0();
    void thread_conv_weights_4_address0();
    void thread_conv_weights_4_ce0();
    void thread_conv_weights_5_address0();
    void thread_conv_weights_5_ce0();
    void thread_f_fu_834_p2();
    void thread_grp_fu_519_p0();
    void thread_grp_fu_519_p1();
    void thread_grp_fu_526_p0();
    void thread_grp_fu_526_p1();
    void thread_grp_fu_903_p0();
    void thread_grp_fu_903_p00();
    void thread_grp_fu_903_p1();
    void thread_grp_fu_903_p2();
    void thread_grp_fu_903_p20();
    void thread_grp_fu_912_p0();
    void thread_grp_fu_912_p00();
    void thread_grp_fu_912_p1();
    void thread_grp_fu_912_p2();
    void thread_grp_fu_912_p20();
    void thread_icmp_ln51_fu_544_p2();
    void thread_icmp_ln54_fu_556_p2();
    void thread_icmp_ln57_fu_576_p2();
    void thread_icmp_ln60_fu_665_p2();
    void thread_icmp_ln63_fu_682_p2();
    void thread_icmp_ln66_fu_700_p2();
    void thread_icmp_ln75_fu_817_p2();
    void thread_icmp_ln78_1_fu_876_p2();
    void thread_icmp_ln78_fu_870_p2();
    void thread_input_0_address0();
    void thread_input_0_ce0();
    void thread_input_1_address0();
    void thread_input_1_ce0();
    void thread_input_2_address0();
    void thread_input_2_ce0();
    void thread_input_3_address0();
    void thread_input_3_ce0();
    void thread_input_4_address0();
    void thread_input_4_ce0();
    void thread_input_5_address0();
    void thread_input_5_ce0();
    void thread_or_ln78_fu_882_p2();
    void thread_or_ln79_fu_594_p2();
    void thread_r_fu_621_p2();
    void thread_select_ln54_fu_845_p3();
    void thread_select_ln63_1_fu_714_p3();
    void thread_select_ln63_fu_706_p3();
    void thread_select_ln79_1_fu_627_p3();
    void thread_select_ln79_2_fu_600_p3();
    void thread_select_ln79_3_fu_608_p3();
    void thread_select_ln79_fu_562_p3();
    void thread_sub_ln71_fu_738_p2();
    void thread_tmp_2_cast_fu_641_p3();
    void thread_tmp_4_fu_726_p3();
    void thread_tmp_9_cast_fu_771_p3();
    void thread_tmp_fu_856_p4();
    void thread_trunc_ln78_fu_866_p1();
    void thread_w_sumf_address0();
    void thread_w_sumf_address1();
    void thread_w_sumf_ce0();
    void thread_w_sumf_ce1();
    void thread_w_sumf_d0();
    void thread_w_sumf_we0();
    void thread_wc_fu_812_p2();
    void thread_wr_fu_694_p2();
    void thread_xor_ln79_fu_570_p2();
    void thread_zext_ln59_fu_616_p1();
    void thread_zext_ln61_fu_677_p1();
    void thread_zext_ln63_fu_744_p1();
    void thread_zext_ln66_fu_757_p1();
    void thread_zext_ln71_1_fu_734_p1();
    void thread_zext_ln71_3_fu_761_p1();
    void thread_zext_ln71_4_fu_784_p1();
    void thread_zext_ln71_6_fu_803_p1();
    void thread_zext_ln71_fu_722_p1();
    void thread_zext_ln76_fu_829_p1();
    void thread_zext_ln79_2_fu_648_p1();
    void thread_zext_ln79_3_fu_651_p1();
    void thread_zext_ln79_4_fu_660_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
