// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_1_H__
#define __conv_conv_weights_1_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_1_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_1_ram) {
        ram[0] = "0b00111101101001010111001000010101";
        ram[1] = "0b00111101111011110011010011010111";
        ram[2] = "0b00111110001100100111000000101010";
        ram[3] = "0b10111111010000110110010110001000";
        ram[4] = "0b10111101101101101010010100001101";
        ram[5] = "0b00111110010001100101101100100001";
        ram[6] = "0b00111101110110011011010111101001";
        ram[7] = "0b10111110100110100100100100111101";
        ram[8] = "0b10111110100000011010010110000111";
        ram[9] = "0b00111110001101110001011111011111";
        ram[10] = "0b10111110000001111101101111110101";
        ram[11] = "0b10111110010110110011110101001011";
        ram[12] = "0b00111100100011010111011110111000";
        ram[13] = "0b00111101011110110010001101010111";
        ram[14] = "0b10111110011100011010110100100001";
        ram[15] = "0b00111110011110101000000100010011";
        ram[16] = "0b00111110000110011101000100101101";
        ram[17] = "0b10111100110000100001000110001000";
        ram[18] = "0b10111110011000011001011010010110";
        ram[19] = "0b10111111011100111101001111110110";
        ram[20] = "0b10111110010010111001010111100110";
        ram[21] = "0b00111110011101100100000010100111";
        ram[22] = "0b00111101110011001101000011111111";
        ram[23] = "0b00111101101001000011011011111100";
        ram[24] = "0b00111100101110110010010101110000";
        ram[25] = "0b10111011101011110111100011111111";
        ram[26] = "0b00111110100000100011010111010110";
        ram[27] = "0b10111101100000111101010111111110";
        ram[28] = "0b10111101110101111111011010110010";
        ram[29] = "0b00111101010101110000001011100110";
        ram[30] = "0b00111110100000010010001111100110";
        ram[31] = "0b00111110100101010011011100011001";
        ram[32] = "0b10111101000011000111111100110101";
        ram[33] = "0b10111110101001010101111001101100";
        ram[34] = "0b10111110011100101110011110110100";
        ram[35] = "0b00111110010110010110101111111101";
        ram[36] = "0b10111110001101000110101010100001";
        ram[37] = "0b00111110000001011110010000011101";
        ram[38] = "0b00111101100011100010111110111110";
        ram[39] = "0b10111110000001100001001101001101";
        ram[40] = "0b10111110001000110111101101001010";
        ram[41] = "0b10111101101001011010011100001001";
        ram[42] = "0b00111110001000111010001000010110";
        ram[43] = "0b10111110101010110001110011001001";
        ram[44] = "0b10111101000110101101010000101100";
        ram[45] = "0b10111110100110001001110010000000";
        ram[46] = "0b00111111000000101100101011001101";
        ram[47] = "0b10111011011001111011110000111100";
        ram[48] = "0b00111110001100111010110100011001";
        ram[49] = "0b10111101110000100111100101010111";
        ram[50] = "0b00111100111100001011100011010000";
        ram[51] = "0b10111111010101110010111011110001";
        ram[52] = "0b00111110100000100101101101010011";
        ram[53] = "0b00111101000100101000001010000100";
        ram[54] = "0b10111110100101011011000101000010";
        ram[55] = "0b10111101111001001001110010110010";
        ram[56] = "0b10111110010010001101011001001101";
        ram[57] = "0b10111101011111111010001010101101";
        ram[58] = "0b10111110100001011001111111110101";
        ram[59] = "0b10111110101110100000101110000000";
        ram[60] = "0b10111110010010010000100101101100";
        ram[61] = "0b00111110011101111000010110110110";
        ram[62] = "0b10111101111000000010000110001110";
        ram[63] = "0b00111110010100101011100010000100";
        ram[64] = "0b00111110101001100000010001011100";
        ram[65] = "0b00111100100011011100000100011110";
        ram[66] = "0b10111110100001100110110011110100";
        ram[67] = "0b10111110010100111000110000010001";
        ram[68] = "0b00111110111110000110010010101010";
        ram[69] = "0b00111110010110100000100000111010";
        ram[70] = "0b00111110100100100001000111001011";
        ram[71] = "0b10111101110110011011101000011011";
        ram[72] = "0b10111101011101010011111001110000";
        ram[73] = "0b10111100111110011011001101001010";
        ram[74] = "0b10111101101000101110000110101100";
        ram[75] = "0b10111111010010100110100010100001";
        ram[76] = "0b10111110001000000111100001010011";
        ram[77] = "0b10111100101000010010100101000101";
        ram[78] = "0b10111110110101010001101101110001";
        ram[79] = "0b00111101111100001000110000111111";
        ram[80] = "0b00111100000111000001111110000110";
        ram[81] = "0b10111110000110100001011110110001";
        ram[82] = "0b10111110111110100111111001010010";
        ram[83] = "0b00111110000110101011110000001110";
        ram[84] = "0b00111110100111111110011000101110";
        ram[85] = "0b00111110110010011010111110011111";
        ram[86] = "0b10111110110101110000010011111111";
        ram[87] = "0b10111110100010010010100110001001";
        ram[88] = "0b10111100101110100101001110111001";
        ram[89] = "0b10111110100101111010011010111101";
        ram[90] = "0b10111100000110100111011111100110";
        ram[91] = "0b10111111000101010101001100110111";
        ram[92] = "0b10111110000000100110011110000100";
        ram[93] = "0b10111110100001000110001101101011";
        ram[94] = "0b10111101111010100101011010011011";
        ram[95] = "0b10111110010001011010101010110100";
        ram[96] = "0b10111110010110011100011000101010";
        ram[97] = "0b00111110101110100011110001000011";
        ram[98] = "0b00111101100011101011000111000100";
        ram[99] = "0b10111111001010000111101101000110";
        ram[100] = "0b10111110010001110111111001011111";
        ram[101] = "0b10111101011100110101000110011100";
        ram[102] = "0b00111101110110100011001100110111";
        ram[103] = "0b00111101101010010010101111000011";
        ram[104] = "0b10111110000001001000111100010001";
        ram[105] = "0b00111101101011101110001000000000";
        ram[106] = "0b10111101101110100101111010111011";
        ram[107] = "0b10111110000000000100000011000000";
        ram[108] = "0b10111110000110001100000101010101";
        ram[109] = "0b00111110001000110000011110101111";
        ram[110] = "0b10111101001110000001101101100101";
        ram[111] = "0b10111110101000010101110101001111";
        ram[112] = "0b00111101111101101110011010010111";
        ram[113] = "0b00111110000011001101101001101110";
        ram[114] = "0b10111101111011010111001001111010";
        ram[115] = "0b10111110100110101000001011000111";
        ram[116] = "0b00111101100010010101101101111001";
        ram[117] = "0b10111110111000101011110100111100";
        ram[118] = "0b00111101011111010111001010111101";
        ram[119] = "0b00111101111011000010010110001101";
        ram[120] = "0b10111110010100001001011001111000";
        ram[121] = "0b00111110001101010101100011101010";
        ram[122] = "0b10111101111111100011110000010000";
        ram[123] = "0b10111110111001101100110010000001";
        ram[124] = "0b10111110011111101110100101010111";
        ram[125] = "0b10111101010111100001001110110010";
        ram[126] = "0b10111010100000000111001101011000";
        ram[127] = "0b10111111000101010110010100111101";
        ram[128] = "0b00111110101110001001110111110001";
        ram[129] = "0b00111110101111101100111110000101";
        ram[130] = "0b10111110110011111101100110011001";
        ram[131] = "0b10111110100100101011111000100111";
        ram[132] = "0b00111110000111010111110001110000";
        ram[133] = "0b10111110111110000110110110010100";
        ram[134] = "0b00111110010100100011110000000000";
        ram[135] = "0b00111110111101101111100110011000";
        ram[136] = "0b10111110100001010110100010100101";
        ram[137] = "0b00111011100100100001010001101010";
        ram[138] = "0b10111110100011000010000001110001";
        ram[139] = "0b10111110101100011101011010001100";
        ram[140] = "0b10111110010011110000000010101100";
        ram[141] = "0b10111110000000010011100001111010";
        ram[142] = "0b00111110000101100101010110011111";
        ram[143] = "0b10111101101100111111110010000111";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_1) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_1_ram* meminst;


SC_CTOR(conv_conv_weights_1) {
meminst = new conv_conv_weights_1_ram("conv_conv_weights_1_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_1() {
    delete meminst;
}


};//endmodule
#endif
