// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.960800,HLS_SYN_LAT=389382,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=862,HLS_SYN_LUT=1981,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_0_address0,
        conv_input_0_ce0,
        conv_input_0_q0,
        conv_input_1_address0,
        conv_input_1_ce0,
        conv_input_1_q0,
        conv_input_2_address0,
        conv_input_2_ce0,
        conv_input_2_q0,
        conv_input_3_address0,
        conv_input_3_ce0,
        conv_input_3_q0,
        conv_input_4_address0,
        conv_input_4_ce0,
        conv_input_4_q0,
        conv_input_5_address0,
        conv_input_5_ce0,
        conv_input_5_q0,
        conv_input_6_address0,
        conv_input_6_ce0,
        conv_input_6_q0,
        conv_input_7_address0,
        conv_input_7_ce0,
        conv_input_7_q0,
        conv_input_8_address0,
        conv_input_8_ce0,
        conv_input_8_q0,
        conv_input_9_address0,
        conv_input_9_ce0,
        conv_input_9_q0,
        conv_input_10_address0,
        conv_input_10_ce0,
        conv_input_10_q0,
        conv_input_11_address0,
        conv_input_11_ce0,
        conv_input_11_q0,
        conv_input_12_address0,
        conv_input_12_ce0,
        conv_input_12_q0,
        conv_input_13_address0,
        conv_input_13_ce0,
        conv_input_13_q0,
        conv_input_14_address0,
        conv_input_14_ce0,
        conv_input_14_q0,
        conv_input_15_address0,
        conv_input_15_ce0,
        conv_input_15_q0,
        conv_input_16_address0,
        conv_input_16_ce0,
        conv_input_16_q0,
        conv_input_17_address0,
        conv_input_17_ce0,
        conv_input_17_q0,
        conv_input_18_address0,
        conv_input_18_ce0,
        conv_input_18_q0,
        conv_input_19_address0,
        conv_input_19_ce0,
        conv_input_19_q0,
        conv_input_20_address0,
        conv_input_20_ce0,
        conv_input_20_q0,
        conv_input_21_address0,
        conv_input_21_ce0,
        conv_input_21_q0,
        conv_input_22_address0,
        conv_input_22_ce0,
        conv_input_22_q0,
        conv_input_23_address0,
        conv_input_23_ce0,
        conv_input_23_q0,
        conv_input_24_address0,
        conv_input_24_ce0,
        conv_input_24_q0,
        conv_input_25_address0,
        conv_input_25_ce0,
        conv_input_25_q0,
        conv_input_26_address0,
        conv_input_26_ce0,
        conv_input_26_q0,
        conv_input_27_address0,
        conv_input_27_ce0,
        conv_input_27_q0,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_pp0_stage1 = 8'd4;
parameter    ap_ST_fsm_pp0_stage2 = 8'd8;
parameter    ap_ST_fsm_pp0_stage3 = 8'd16;
parameter    ap_ST_fsm_pp0_stage4 = 8'd32;
parameter    ap_ST_fsm_pp0_stage5 = 8'd64;
parameter    ap_ST_fsm_state13 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] conv_input_0_address0;
output   conv_input_0_ce0;
input  [31:0] conv_input_0_q0;
output  [4:0] conv_input_1_address0;
output   conv_input_1_ce0;
input  [31:0] conv_input_1_q0;
output  [4:0] conv_input_2_address0;
output   conv_input_2_ce0;
input  [31:0] conv_input_2_q0;
output  [4:0] conv_input_3_address0;
output   conv_input_3_ce0;
input  [31:0] conv_input_3_q0;
output  [4:0] conv_input_4_address0;
output   conv_input_4_ce0;
input  [31:0] conv_input_4_q0;
output  [4:0] conv_input_5_address0;
output   conv_input_5_ce0;
input  [31:0] conv_input_5_q0;
output  [4:0] conv_input_6_address0;
output   conv_input_6_ce0;
input  [31:0] conv_input_6_q0;
output  [4:0] conv_input_7_address0;
output   conv_input_7_ce0;
input  [31:0] conv_input_7_q0;
output  [4:0] conv_input_8_address0;
output   conv_input_8_ce0;
input  [31:0] conv_input_8_q0;
output  [4:0] conv_input_9_address0;
output   conv_input_9_ce0;
input  [31:0] conv_input_9_q0;
output  [4:0] conv_input_10_address0;
output   conv_input_10_ce0;
input  [31:0] conv_input_10_q0;
output  [4:0] conv_input_11_address0;
output   conv_input_11_ce0;
input  [31:0] conv_input_11_q0;
output  [4:0] conv_input_12_address0;
output   conv_input_12_ce0;
input  [31:0] conv_input_12_q0;
output  [4:0] conv_input_13_address0;
output   conv_input_13_ce0;
input  [31:0] conv_input_13_q0;
output  [4:0] conv_input_14_address0;
output   conv_input_14_ce0;
input  [31:0] conv_input_14_q0;
output  [4:0] conv_input_15_address0;
output   conv_input_15_ce0;
input  [31:0] conv_input_15_q0;
output  [4:0] conv_input_16_address0;
output   conv_input_16_ce0;
input  [31:0] conv_input_16_q0;
output  [4:0] conv_input_17_address0;
output   conv_input_17_ce0;
input  [31:0] conv_input_17_q0;
output  [4:0] conv_input_18_address0;
output   conv_input_18_ce0;
input  [31:0] conv_input_18_q0;
output  [4:0] conv_input_19_address0;
output   conv_input_19_ce0;
input  [31:0] conv_input_19_q0;
output  [4:0] conv_input_20_address0;
output   conv_input_20_ce0;
input  [31:0] conv_input_20_q0;
output  [4:0] conv_input_21_address0;
output   conv_input_21_ce0;
input  [31:0] conv_input_21_q0;
output  [4:0] conv_input_22_address0;
output   conv_input_22_ce0;
input  [31:0] conv_input_22_q0;
output  [4:0] conv_input_23_address0;
output   conv_input_23_ce0;
input  [31:0] conv_input_23_q0;
output  [4:0] conv_input_24_address0;
output   conv_input_24_ce0;
input  [31:0] conv_input_24_q0;
output  [4:0] conv_input_25_address0;
output   conv_input_25_ce0;
input  [31:0] conv_input_25_q0;
output  [4:0] conv_input_26_address0;
output   conv_input_26_ce0;
input  [31:0] conv_input_26_q0;
output  [4:0] conv_input_27_address0;
output   conv_input_27_ce0;
input  [31:0] conv_input_27_q0;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg conv_input_0_ce0;
reg conv_input_1_ce0;
reg conv_input_2_ce0;
reg conv_input_3_ce0;
reg conv_input_4_ce0;
reg conv_input_5_ce0;
reg conv_input_6_ce0;
reg conv_input_7_ce0;
reg conv_input_8_ce0;
reg conv_input_9_ce0;
reg conv_input_10_ce0;
reg conv_input_11_ce0;
reg conv_input_12_ce0;
reg conv_input_13_ce0;
reg conv_input_14_ce0;
reg conv_input_15_ce0;
reg conv_input_16_ce0;
reg conv_input_17_ce0;
reg conv_input_18_ce0;
reg conv_input_19_ce0;
reg conv_input_20_ce0;
reg conv_input_21_ce0;
reg conv_input_22_ce0;
reg conv_input_23_ce0;
reg conv_input_24_ce0;
reg conv_input_25_ce0;
reg conv_input_26_ce0;
reg conv_input_27_ce0;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] conv_1_weights_1_0_address0;
reg    conv_1_weights_1_0_ce0;
wire   [31:0] conv_1_weights_1_0_q0;
wire   [6:0] conv_1_weights_2_0_address0;
reg    conv_1_weights_2_0_ce0;
wire   [31:0] conv_1_weights_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
wire   [6:0] conv_1_weights_0_0_address0;
reg    conv_1_weights_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_q0;
reg   [15:0] indvar_flatten39_reg_628;
reg   [4:0] r_0_reg_639;
reg   [11:0] indvar_flatten14_reg_650;
reg   [4:0] c_0_reg_661;
reg   [7:0] indvar_flatten_reg_672;
reg   [5:0] f_0_reg_683;
reg   [1:0] wr_0_reg_694;
reg   [31:0] w_sum_0_reg_705;
reg   [31:0] phi_ln26_2_reg_859;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_1458;
reg   [4:0] select_ln35_3_reg_1473;
wire   [31:0] grp_fu_921_p2;
reg   [31:0] reg_1086;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] grp_fu_917_p2;
reg   [31:0] reg_1091;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [0:0] icmp_ln8_fu_1096_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln8_reg_1458_pp0_iter1_reg;
wire   [15:0] add_ln8_fu_1102_p2;
reg   [15:0] add_ln8_reg_1462;
wire   [4:0] select_ln35_1_fu_1128_p3;
reg   [4:0] select_ln35_1_reg_1467;
wire   [4:0] select_ln35_3_fu_1186_p3;
wire   [0:0] or_ln26_1_fu_1224_p2;
reg   [0:0] or_ln26_1_reg_1479;
wire   [1:0] select_ln26_fu_1230_p3;
reg   [1:0] select_ln26_reg_1484;
wire   [5:0] select_ln26_2_fu_1238_p3;
reg   [5:0] select_ln26_2_reg_1489;
wire   [7:0] select_ln14_fu_1323_p3;
reg   [7:0] select_ln14_reg_1651;
wire   [11:0] select_ln11_fu_1337_p3;
reg   [11:0] select_ln11_reg_1656;
reg   [31:0] conv_1_weights_1_0_l_reg_1666;
reg   [31:0] conv_1_weights_2_0_l_reg_1676;
wire   [31:0] select_ln26_1_fu_1345_p3;
reg   [31:0] tmp_1_2_reg_1691;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state12_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [1:0] wr_fu_1353_p2;
reg   [1:0] wr_reg_1696;
reg   [14:0] conv_out_addr_reg_1702;
wire   [0:0] icmp_ln18_1_fu_1393_p2;
reg   [0:0] icmp_ln18_1_reg_1707;
reg   [31:0] w_sum_3_2_reg_1716;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] conv_1_bias_load_reg_1722;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage4_subdone;
reg   [15:0] ap_phi_mux_indvar_flatten39_phi_fu_632_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_643_p4;
reg   [11:0] ap_phi_mux_indvar_flatten14_phi_fu_654_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_665_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_676_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_687_p4;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_698_p4;
reg   [31:0] ap_phi_mux_w_sum_0_phi_fu_709_p4;
wire    ap_block_pp0_stage2;
reg   [31:0] ap_phi_mux_phi_ln26_phi_fu_720_p52;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln26_reg_717;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801;
reg   [31:0] ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859;
wire   [63:0] zext_ln26_6_fu_1272_p1;
wire   [63:0] zext_ln26_2_fu_1285_p1;
wire   [63:0] zext_ln35_2_fu_1388_p1;
wire   [63:0] zext_ln26_4_fu_1378_p1;
wire    ap_block_pp0_stage4;
reg   [31:0] grp_fu_917_p0;
reg   [31:0] grp_fu_917_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] grp_fu_921_p0;
reg   [31:0] grp_fu_921_p1;
wire   [0:0] icmp_ln11_fu_1114_p2;
wire   [4:0] r_fu_1108_p2;
wire   [0:0] icmp_ln18_fu_1142_p2;
wire   [0:0] xor_ln35_fu_1136_p2;
wire   [0:0] icmp_ln14_fu_1154_p2;
wire   [4:0] select_ln35_fu_1120_p3;
wire   [0:0] and_ln35_1_fu_1160_p2;
wire   [0:0] or_ln35_fu_1172_p2;
wire   [4:0] c_fu_1166_p2;
wire   [0:0] xor_ln35_1_fu_1194_p2;
wire   [0:0] and_ln35_fu_1148_p2;
wire   [0:0] or_ln35_1_fu_1200_p2;
wire   [5:0] select_ln35_2_fu_1178_p3;
wire   [0:0] and_ln35_2_fu_1206_p2;
wire   [0:0] or_ln26_fu_1218_p2;
wire   [5:0] f_fu_1212_p2;
wire   [6:0] tmp_3_fu_1254_p3;
wire   [7:0] zext_ln26_5_fu_1262_p1;
wire   [7:0] zext_ln26_1_fu_1246_p1;
wire   [7:0] add_ln26_1_fu_1266_p2;
wire   [4:0] zext_ln18_fu_1250_p1;
wire   [4:0] add_ln26_fu_1279_p2;
wire   [7:0] add_ln14_fu_1317_p2;
wire   [11:0] add_ln11_1_fu_1331_p2;
wire    ap_block_pp0_stage5;
wire   [9:0] grp_fu_1449_p3;
wire   [14:0] tmp_1_fu_1364_p3;
wire   [15:0] zext_ln26_fu_1371_p1;
wire   [15:0] zext_ln26_3_fu_1375_p1;
wire   [15:0] add_ln35_1_fu_1382_p2;
wire   [31:0] bitcast_ln34_fu_1398_p1;
wire   [7:0] tmp_fu_1402_p4;
wire   [22:0] trunc_ln34_fu_1412_p1;
wire   [0:0] icmp_ln34_1_fu_1422_p2;
wire   [0:0] icmp_ln34_fu_1416_p2;
wire   [0:0] or_ln34_fu_1428_p2;
wire   [0:0] tmp_5_fu_930_p2;
wire   [0:0] and_ln34_fu_1434_p2;
wire   [4:0] grp_fu_1449_p0;
wire   [5:0] grp_fu_1449_p1;
wire   [4:0] grp_fu_1449_p2;
wire    ap_block_pp0_stage4_00001;
wire    ap_CS_fsm_state13;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1449_p00;
wire   [9:0] grp_fu_1449_p20;
reg    ap_condition_447;
reg    ap_condition_694;
reg    ap_condition_268;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_address0),
    .ce0(conv_1_weights_1_0_ce0),
    .q0(conv_1_weights_1_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_address0),
    .ce0(conv_1_weights_2_0_ce0),
    .q0(conv_1_weights_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
conv_1_weights_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_address0),
    .ce0(conv_1_weights_0_0_ce0),
    .q0(conv_1_weights_0_0_q0)
);

conv_1_fadd_32ns_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_eOg_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_917_p0),
    .din1(grp_fu_917_p1),
    .ce(1'b1),
    .dout(grp_fu_917_p2)
);

conv_1_fmul_32ns_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_fYi_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_921_p0),
    .din1(grp_fu_921_p1),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

conv_1_fcmp_32ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_g8j_U3(
    .din0(grp_fu_917_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_5_fu_930_p2)
);

conv_1_mac_muladdhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_1_mac_muladdhbi_U4(
    .din0(grp_fu_1449_p0),
    .din1(grp_fu_1449_p1),
    .din2(grp_fu_1449_p2),
    .dout(grp_fu_1449_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_268)) begin
        if ((1'b1 == ap_condition_447)) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_26_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd24) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_25_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd23) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_24_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd22) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_23_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd21) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_22_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd20) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_21_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd19) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_20_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd18) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_19_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd17) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_18_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd16) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_17_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd15) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_16_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd14) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_15_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd13) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_14_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd12) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_13_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd11) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_12_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd10) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_11_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd9) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_10_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd8) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_9_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd7) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_8_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd6) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_7_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd5) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_6_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd4) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_5_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd3) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_4_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd2) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_3_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd1) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_2_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd0) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_268)) begin
        if ((1'b1 == ap_condition_447)) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_27_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd24) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_26_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd23) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_25_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd22) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_24_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd21) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_23_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd20) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_22_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd19) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_21_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd18) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_20_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd17) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_19_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd16) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_18_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd15) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_17_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd14) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_16_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd13) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_15_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd12) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_14_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd11) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_13_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd10) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_12_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd9) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_11_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd8) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_10_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd7) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_9_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd6) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_8_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd5) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_7_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd4) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_6_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd3) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_5_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd2) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_4_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd1) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_3_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd0) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_reg_661 <= select_ln35_3_reg_1473;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_661 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        f_0_reg_683 <= select_ln26_2_reg_1489;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_683 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten14_reg_650 <= select_ln11_reg_1656;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten14_reg_650 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten39_reg_628 <= add_ln8_reg_1462;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten39_reg_628 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_672 <= select_ln14_reg_1651;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_672 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_0_reg_639 <= select_ln35_1_reg_1467;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_639 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1458_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        w_sum_0_reg_705 <= w_sum_3_2_reg_1716;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        w_sum_0_reg_705 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_0_reg_694 <= wr_reg_1696;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        wr_0_reg_694 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_1462 <= add_ln8_fu_1102_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_1_reg_1707 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_1_bias_load_reg_1722 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1458 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_1_weights_1_0_l_reg_1666 <= conv_1_weights_1_0_q0;
        conv_1_weights_2_0_l_reg_1676 <= conv_1_weights_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_out_addr_reg_1702 <= zext_ln35_2_fu_1388_p1;
        icmp_ln18_1_reg_1707 <= icmp_ln18_1_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_1458 <= icmp_ln8_fu_1096_p2;
        icmp_ln8_reg_1458_pp0_iter1_reg <= icmp_ln8_reg_1458;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln26_1_reg_1479 <= or_ln26_1_fu_1224_p2;
        select_ln26_reg_1484 <= select_ln26_fu_1230_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        phi_ln26_2_reg_859 <= ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_1086 <= grp_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        reg_1091 <= grp_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        select_ln11_reg_1656 <= select_ln11_fu_1337_p3;
        select_ln14_reg_1651 <= select_ln14_fu_1323_p3;
        select_ln26_2_reg_1489 <= select_ln26_2_fu_1238_p3;
        select_ln35_1_reg_1467 <= select_ln35_1_fu_1128_p3;
        select_ln35_3_reg_1473 <= select_ln35_3_fu_1186_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_1_2_reg_1691 <= grp_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_reg_1458_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        w_sum_3_2_reg_1716 <= grp_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln8_reg_1458 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        wr_reg_1696 <= wr_fu_1353_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_1096_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_c_0_phi_fu_665_p4 = select_ln35_3_reg_1473;
    end else begin
        ap_phi_mux_c_0_phi_fu_665_p4 = c_0_reg_661;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_f_0_phi_fu_687_p4 = select_ln26_2_reg_1489;
    end else begin
        ap_phi_mux_f_0_phi_fu_687_p4 = f_0_reg_683;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten14_phi_fu_654_p4 = select_ln11_reg_1656;
    end else begin
        ap_phi_mux_indvar_flatten14_phi_fu_654_p4 = indvar_flatten14_reg_650;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten39_phi_fu_632_p4 = add_ln8_reg_1462;
    end else begin
        ap_phi_mux_indvar_flatten39_phi_fu_632_p4 = indvar_flatten39_reg_628;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_676_p4 = select_ln14_reg_1651;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_676_p4 = indvar_flatten_reg_672;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_694)) begin
        if ((1'b1 == ap_condition_447)) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_25_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd24) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_24_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd23) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_23_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd22) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_22_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd21) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_21_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd20) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_20_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd19) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_19_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd18) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_18_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd17) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_17_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd16) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_16_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd15) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_15_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd14) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_14_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd13) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_13_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd12) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_12_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd11) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_11_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd10) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_10_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd9) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_9_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd8) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_8_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd7) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_7_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd6) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_6_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd5) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_5_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd4) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_4_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd3) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_3_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd2) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_2_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd1) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_1_q0;
        end else if (((select_ln35_3_reg_1473 == 5'd0) & (icmp_ln8_reg_1458 == 1'd0))) begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = conv_input_0_q0;
        end else begin
            ap_phi_mux_phi_ln26_phi_fu_720_p52 = ap_phi_reg_pp0_iter0_phi_ln26_reg_717;
        end
    end else begin
        ap_phi_mux_phi_ln26_phi_fu_720_p52 = ap_phi_reg_pp0_iter0_phi_ln26_reg_717;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_643_p4 = select_ln35_1_reg_1467;
    end else begin
        ap_phi_mux_r_0_phi_fu_643_p4 = r_0_reg_639;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (icmp_ln8_reg_1458_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_mux_w_sum_0_phi_fu_709_p4 = w_sum_3_2_reg_1716;
    end else begin
        ap_phi_mux_w_sum_0_phi_fu_709_p4 = w_sum_0_reg_705;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln8_reg_1458 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wr_0_phi_fu_698_p4 = wr_reg_1696;
    end else begin
        ap_phi_mux_wr_0_phi_fu_698_p4 = wr_0_reg_694;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_input_0_ce0 = 1'b1;
    end else begin
        conv_input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd8) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd9) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd10) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_10_ce0 = 1'b1;
    end else begin
        conv_input_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd9) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd10) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd11) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_11_ce0 = 1'b1;
    end else begin
        conv_input_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd10) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd11) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd12) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_12_ce0 = 1'b1;
    end else begin
        conv_input_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd11) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd12) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd13) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_13_ce0 = 1'b1;
    end else begin
        conv_input_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd12) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd13) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd14) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_14_ce0 = 1'b1;
    end else begin
        conv_input_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd13) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd14) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd15) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_15_ce0 = 1'b1;
    end else begin
        conv_input_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd14) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd15) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd16) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_16_ce0 = 1'b1;
    end else begin
        conv_input_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd15) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd16) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd17) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_17_ce0 = 1'b1;
    end else begin
        conv_input_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd16) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd17) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd18) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_18_ce0 = 1'b1;
    end else begin
        conv_input_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd17) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd18) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd19) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_19_ce0 = 1'b1;
    end else begin
        conv_input_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd0) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd1) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_1_ce0 = 1'b1;
    end else begin
        conv_input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd18) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd19) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd20) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_20_ce0 = 1'b1;
    end else begin
        conv_input_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd19) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd20) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd21) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_21_ce0 = 1'b1;
    end else begin
        conv_input_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd20) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd21) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd22) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_22_ce0 = 1'b1;
    end else begin
        conv_input_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd21) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd22) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd23) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_23_ce0 = 1'b1;
    end else begin
        conv_input_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd22) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd23) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd24) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_24_ce0 = 1'b1;
    end else begin
        conv_input_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & ((((((((select_ln35_3_fu_1186_p3 == 5'd30) & (icmp_ln8_fu_1096_p2 == 1'd0)) | ((select_ln35_3_fu_1186_p3 == 5'd31) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd29) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd28) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd27) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd26) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd25) & (icmp_ln8_fu_1096_p2 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd23) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd24) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_25_ce0 = 1'b1;
    end else begin
        conv_input_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & ((((((((select_ln35_3_fu_1186_p3 == 5'd30) & (icmp_ln8_fu_1096_p2 == 1'd0)) | ((select_ln35_3_fu_1186_p3 == 5'd31) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd29) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd28) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd27) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd26) & (icmp_ln8_fu_1096_p2 == 1'd0))) | ((select_ln35_3_fu_1186_p3 == 5'd25) & (icmp_ln8_fu_1096_p2 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd24) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_26_ce0 = 1'b1;
    end else begin
        conv_input_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_input_27_ce0 = 1'b1;
    end else begin
        conv_input_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd0) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd1) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd2) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_2_ce0 = 1'b1;
    end else begin
        conv_input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd1) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd2) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd3) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_3_ce0 = 1'b1;
    end else begin
        conv_input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd2) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd3) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd4) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_4_ce0 = 1'b1;
    end else begin
        conv_input_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd3) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd4) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd5) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_5_ce0 = 1'b1;
    end else begin
        conv_input_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd4) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd5) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd6) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_6_ce0 = 1'b1;
    end else begin
        conv_input_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd5) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd6) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd7) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_7_ce0 = 1'b1;
    end else begin
        conv_input_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd6) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd7) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd8) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_8_ce0 = 1'b1;
    end else begin
        conv_input_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd7) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd8) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (select_ln35_3_fu_1186_p3 == 5'd9) & (icmp_ln8_fu_1096_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        conv_input_9_ce0 = 1'b1;
    end else begin
        conv_input_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln18_1_reg_1707 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_917_p0 = w_sum_3_2_reg_1716;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_917_p0 = reg_1091;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_917_p0 = select_ln26_1_fu_1345_p3;
    end else begin
        grp_fu_917_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_917_p1 = conv_1_bias_load_reg_1722;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_917_p1 = tmp_1_2_reg_1691;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_917_p1 = reg_1086;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_917_p1 = grp_fu_921_p2;
    end else begin
        grp_fu_917_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_921_p0 = conv_1_weights_2_0_l_reg_1676;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_921_p0 = conv_1_weights_1_0_l_reg_1666;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_921_p0 = conv_1_weights_0_0_q0;
        end else begin
            grp_fu_921_p0 = 'bx;
        end
    end else begin
        grp_fu_921_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_921_p1 = phi_ln26_2_reg_859;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_921_p1 = ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_921_p1 = ap_phi_mux_phi_ln26_phi_fu_720_p52;
        end else begin
            grp_fu_921_p1 = 'bx;
        end
    end else begin
        grp_fu_921_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln8_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln8_fu_1096_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_1_fu_1331_p2 = (ap_phi_mux_indvar_flatten14_phi_fu_654_p4 + 12'd1);

assign add_ln14_fu_1317_p2 = (ap_phi_mux_indvar_flatten_phi_fu_676_p4 + 8'd1);

assign add_ln26_1_fu_1266_p2 = (zext_ln26_5_fu_1262_p1 + zext_ln26_1_fu_1246_p1);

assign add_ln26_fu_1279_p2 = (zext_ln18_fu_1250_p1 + select_ln35_1_fu_1128_p3);

assign add_ln35_1_fu_1382_p2 = (zext_ln26_fu_1371_p1 + zext_ln26_3_fu_1375_p1);

assign add_ln8_fu_1102_p2 = (ap_phi_mux_indvar_flatten39_phi_fu_632_p4 + 16'd1);

assign and_ln34_fu_1434_p2 = (tmp_5_fu_930_p2 & or_ln34_fu_1428_p2);

assign and_ln35_1_fu_1160_p2 = (xor_ln35_fu_1136_p2 & icmp_ln14_fu_1154_p2);

assign and_ln35_2_fu_1206_p2 = (or_ln35_1_fu_1200_p2 & and_ln35_fu_1148_p2);

assign and_ln35_fu_1148_p2 = (xor_ln35_fu_1136_p2 & icmp_ln18_fu_1142_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_268 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_447 = ((((((((select_ln35_3_reg_1473 == 5'd30) & (icmp_ln8_reg_1458 == 1'd0)) | ((select_ln35_3_reg_1473 == 5'd31) & (icmp_ln8_reg_1458 == 1'd0))) | ((select_ln35_3_reg_1473 == 5'd29) & (icmp_ln8_reg_1458 == 1'd0))) | ((select_ln35_3_reg_1473 == 5'd28) & (icmp_ln8_reg_1458 == 1'd0))) | ((select_ln35_3_reg_1473 == 5'd27) & (icmp_ln8_reg_1458 == 1'd0))) | ((select_ln35_3_reg_1473 == 5'd26) & (icmp_ln8_reg_1458 == 1'd0))) | ((select_ln35_3_reg_1473 == 5'd25) & (icmp_ln8_reg_1458 == 1'd0)));
end

always @ (*) begin
    ap_condition_694 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_phi_ln26_reg_717 = 'bx;

assign bitcast_ln34_fu_1398_p1 = grp_fu_917_p2;

assign c_fu_1166_p2 = (select_ln35_fu_1120_p3 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_4_fu_1378_p1;

assign conv_1_weights_0_0_address0 = zext_ln26_6_fu_1272_p1;

assign conv_1_weights_1_0_address0 = zext_ln26_6_fu_1272_p1;

assign conv_1_weights_2_0_address0 = zext_ln26_6_fu_1272_p1;

assign conv_input_0_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_10_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_11_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_12_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_13_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_14_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_15_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_16_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_17_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_18_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_19_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_1_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_20_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_21_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_22_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_23_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_24_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_25_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_26_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_27_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_2_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_3_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_4_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_5_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_6_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_7_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_8_address0 = zext_ln26_2_fu_1285_p1;

assign conv_input_9_address0 = zext_ln26_2_fu_1285_p1;

assign conv_out_address0 = conv_out_addr_reg_1702;

assign conv_out_d0 = ((and_ln34_fu_1434_p2[0:0] === 1'b1) ? grp_fu_917_p2 : 32'd0);

assign f_fu_1212_p2 = (select_ln35_2_fu_1178_p3 + 6'd1);

assign grp_fu_1449_p0 = grp_fu_1449_p00;

assign grp_fu_1449_p00 = select_ln35_1_reg_1467;

assign grp_fu_1449_p1 = 10'd26;

assign grp_fu_1449_p2 = grp_fu_1449_p20;

assign grp_fu_1449_p20 = select_ln35_3_reg_1473;

assign icmp_ln11_fu_1114_p2 = ((ap_phi_mux_indvar_flatten14_phi_fu_654_p4 == 12'd2496) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1154_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_676_p4 == 8'd96) ? 1'b1 : 1'b0);

assign icmp_ln18_1_fu_1393_p2 = ((wr_reg_1696 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_1142_p2 = ((ap_phi_mux_wr_0_phi_fu_698_p4 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1422_p2 = ((trunc_ln34_fu_1412_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_1416_p2 = ((tmp_fu_1402_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_1096_p2 = ((ap_phi_mux_indvar_flatten39_phi_fu_632_p4 == 16'd64896) ? 1'b1 : 1'b0);

assign or_ln26_1_fu_1224_p2 = (or_ln26_fu_1218_p2 | icmp_ln11_fu_1114_p2);

assign or_ln26_fu_1218_p2 = (and_ln35_2_fu_1206_p2 | and_ln35_1_fu_1160_p2);

assign or_ln34_fu_1428_p2 = (icmp_ln34_fu_1416_p2 | icmp_ln34_1_fu_1422_p2);

assign or_ln35_1_fu_1200_p2 = (xor_ln35_1_fu_1194_p2 | icmp_ln11_fu_1114_p2);

assign or_ln35_fu_1172_p2 = (icmp_ln11_fu_1114_p2 | and_ln35_1_fu_1160_p2);

assign r_fu_1108_p2 = (ap_phi_mux_r_0_phi_fu_643_p4 + 5'd1);

assign select_ln11_fu_1337_p3 = ((icmp_ln11_fu_1114_p2[0:0] === 1'b1) ? 12'd1 : add_ln11_1_fu_1331_p2);

assign select_ln14_fu_1323_p3 = ((or_ln35_fu_1172_p2[0:0] === 1'b1) ? 8'd1 : add_ln14_fu_1317_p2);

assign select_ln26_1_fu_1345_p3 = ((or_ln26_1_reg_1479[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_w_sum_0_phi_fu_709_p4);

assign select_ln26_2_fu_1238_p3 = ((and_ln35_2_fu_1206_p2[0:0] === 1'b1) ? f_fu_1212_p2 : select_ln35_2_fu_1178_p3);

assign select_ln26_fu_1230_p3 = ((or_ln26_1_fu_1224_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wr_0_phi_fu_698_p4);

assign select_ln35_1_fu_1128_p3 = ((icmp_ln11_fu_1114_p2[0:0] === 1'b1) ? r_fu_1108_p2 : ap_phi_mux_r_0_phi_fu_643_p4);

assign select_ln35_2_fu_1178_p3 = ((or_ln35_fu_1172_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_687_p4);

assign select_ln35_3_fu_1186_p3 = ((and_ln35_1_fu_1160_p2[0:0] === 1'b1) ? c_fu_1166_p2 : select_ln35_fu_1120_p3);

assign select_ln35_fu_1120_p3 = ((icmp_ln11_fu_1114_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_665_p4);

assign tmp_1_fu_1364_p3 = {{grp_fu_1449_p3}, {5'd0}};

assign tmp_3_fu_1254_p3 = {{select_ln26_fu_1230_p3}, {5'd0}};

assign tmp_fu_1402_p4 = {{bitcast_ln34_fu_1398_p1[30:23]}};

assign trunc_ln34_fu_1412_p1 = bitcast_ln34_fu_1398_p1[22:0];

assign wr_fu_1353_p2 = (select_ln26_reg_1484 + 2'd1);

assign xor_ln35_1_fu_1194_p2 = (icmp_ln14_fu_1154_p2 ^ 1'd1);

assign xor_ln35_fu_1136_p2 = (icmp_ln11_fu_1114_p2 ^ 1'd1);

assign zext_ln18_fu_1250_p1 = select_ln26_fu_1230_p3;

assign zext_ln26_1_fu_1246_p1 = select_ln26_2_fu_1238_p3;

assign zext_ln26_2_fu_1285_p1 = add_ln26_fu_1279_p2;

assign zext_ln26_3_fu_1375_p1 = select_ln26_2_reg_1489;

assign zext_ln26_4_fu_1378_p1 = select_ln26_2_reg_1489;

assign zext_ln26_5_fu_1262_p1 = tmp_3_fu_1254_p3;

assign zext_ln26_6_fu_1272_p1 = add_ln26_1_fu_1266_p2;

assign zext_ln26_fu_1371_p1 = tmp_1_fu_1364_p3;

assign zext_ln35_2_fu_1388_p1 = add_ln35_1_fu_1382_p2;

endmodule //conv_1
