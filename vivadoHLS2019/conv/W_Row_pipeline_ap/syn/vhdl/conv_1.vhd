-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_input_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_0_ce0 : OUT STD_LOGIC;
    conv_input_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_1_ce0 : OUT STD_LOGIC;
    conv_input_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_2_ce0 : OUT STD_LOGIC;
    conv_input_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_3_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_3_ce0 : OUT STD_LOGIC;
    conv_input_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_4_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_4_ce0 : OUT STD_LOGIC;
    conv_input_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_5_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_5_ce0 : OUT STD_LOGIC;
    conv_input_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_6_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_6_ce0 : OUT STD_LOGIC;
    conv_input_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_7_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_7_ce0 : OUT STD_LOGIC;
    conv_input_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_8_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_8_ce0 : OUT STD_LOGIC;
    conv_input_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_9_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_9_ce0 : OUT STD_LOGIC;
    conv_input_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_10_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_10_ce0 : OUT STD_LOGIC;
    conv_input_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_11_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_11_ce0 : OUT STD_LOGIC;
    conv_input_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_12_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_12_ce0 : OUT STD_LOGIC;
    conv_input_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_13_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_13_ce0 : OUT STD_LOGIC;
    conv_input_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_14_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_14_ce0 : OUT STD_LOGIC;
    conv_input_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_15_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_15_ce0 : OUT STD_LOGIC;
    conv_input_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_16_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_16_ce0 : OUT STD_LOGIC;
    conv_input_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_17_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_17_ce0 : OUT STD_LOGIC;
    conv_input_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_18_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_18_ce0 : OUT STD_LOGIC;
    conv_input_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_19_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_19_ce0 : OUT STD_LOGIC;
    conv_input_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_20_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_20_ce0 : OUT STD_LOGIC;
    conv_input_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_21_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_21_ce0 : OUT STD_LOGIC;
    conv_input_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_22_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_22_ce0 : OUT STD_LOGIC;
    conv_input_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_23_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_23_ce0 : OUT STD_LOGIC;
    conv_input_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_24_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_24_ce0 : OUT STD_LOGIC;
    conv_input_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_25_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_25_ce0 : OUT STD_LOGIC;
    conv_input_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_26_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_26_ce0 : OUT STD_LOGIC;
    conv_input_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_input_27_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv_input_27_ce0 : OUT STD_LOGIC;
    conv_input_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out_address0 : OUT STD_LOGIC_VECTOR (14 downto 0);
    conv_out_ce0 : OUT STD_LOGIC;
    conv_out_we0 : OUT STD_LOGIC;
    conv_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of conv_1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=34.960800,HLS_SYN_LAT=389382,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=6,HLS_SYN_FF=862,HLS_SYN_LUT=1981,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv16_FD80 : STD_LOGIC_VECTOR (15 downto 0) := "1111110110000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv12_9C0 : STD_LOGIC_VECTOR (11 downto 0) := "100111000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_60 : STD_LOGIC_VECTOR (7 downto 0) := "01100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv_1_weights_1_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_weights_1_0_ce0 : STD_LOGIC;
    signal conv_1_weights_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_2_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_weights_2_0_ce0 : STD_LOGIC;
    signal conv_1_weights_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_bias_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal conv_1_bias_ce0 : STD_LOGIC;
    signal conv_1_bias_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_0_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_1_weights_0_0_ce0 : STD_LOGIC;
    signal conv_1_weights_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten39_reg_628 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_0_reg_639 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten14_reg_650 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_0_reg_661 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_672 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_0_reg_683 : STD_LOGIC_VECTOR (5 downto 0);
    signal wr_0_reg_694 : STD_LOGIC_VECTOR (1 downto 0);
    signal w_sum_0_reg_705 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln26_2_reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln8_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln35_3_reg_1473 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1086 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal grp_fu_917_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln8_fu_1096_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln8_reg_1458_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln8_fu_1102_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln8_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln35_1_fu_1128_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln35_1_reg_1467 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln35_3_fu_1186_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln26_1_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_1_reg_1479 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_fu_1230_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln26_reg_1484 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln26_2_fu_1238_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln26_2_reg_1489 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln14_fu_1323_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln14_reg_1651 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln11_fu_1337_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln11_reg_1656 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_1_weights_1_0_l_reg_1666 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_1_weights_2_0_l_reg_1676 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_1_fu_1345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_2_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal wr_fu_1353_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal wr_reg_1696 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv_out_addr_reg_1702 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln18_1_fu_1393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln18_1_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_sum_3_2_reg_1716 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal conv_1_bias_load_reg_1722 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_phi_mux_indvar_flatten39_phi_fu_632_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_r_0_phi_fu_643_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten14_phi_fu_654_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_c_0_phi_fu_665_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_676_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_f_0_phi_fu_687_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_wr_0_phi_fu_698_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_w_sum_0_phi_fu_709_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_phi_mux_phi_ln26_phi_fu_720_p52 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln26_reg_717 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln26_6_fu_1272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_2_fu_1285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln35_2_fu_1388_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln26_4_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal grp_fu_917_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_917_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_921_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_921_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln11_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_1108_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln18_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln35_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln14_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln35_fu_1120_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln35_1_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln35_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_fu_1166_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln35_1_fu_1194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln35_fu_1148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln35_1_fu_1200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln35_2_fu_1178_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal and_ln35_2_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_1212_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_3_fu_1254_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln26_5_fu_1262_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln26_1_fu_1246_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln26_1_fu_1266_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln18_fu_1250_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln26_fu_1279_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln14_fu_1317_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln11_1_fu_1331_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_fu_1449_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_1364_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln26_fu_1371_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln26_3_fu_1375_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln35_1_fu_1382_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal bitcast_ln34_fu_1398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1402_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln34_fu_1412_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln34_1_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln34_fu_1416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln34_fu_1428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1449_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1449_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1449_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1449_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1449_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_447 : BOOLEAN;
    signal ap_condition_694 : BOOLEAN;
    signal ap_condition_268 : BOOLEAN;

    component conv_1_fadd_32ns_eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_fmul_32ns_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_fcmp_32ns_g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component conv_1_mac_muladdhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component conv_1_conv_1_weibkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_conv_1_weicud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_conv_1_bias IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_1_conv_1_weidEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv_1_weights_1_0_U : component conv_1_conv_1_weibkb
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_1_0_address0,
        ce0 => conv_1_weights_1_0_ce0,
        q0 => conv_1_weights_1_0_q0);

    conv_1_weights_2_0_U : component conv_1_conv_1_weicud
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_2_0_address0,
        ce0 => conv_1_weights_2_0_ce0,
        q0 => conv_1_weights_2_0_q0);

    conv_1_bias_U : component conv_1_conv_1_bias
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_bias_address0,
        ce0 => conv_1_bias_ce0,
        q0 => conv_1_bias_q0);

    conv_1_weights_0_0_U : component conv_1_conv_1_weidEe
    generic map (
        DataWidth => 32,
        AddressRange => 96,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_1_weights_0_0_address0,
        ce0 => conv_1_weights_0_0_ce0,
        q0 => conv_1_weights_0_0_q0);

    conv_1_fadd_32ns_eOg_U1 : component conv_1_fadd_32ns_eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_917_p0,
        din1 => grp_fu_917_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_917_p2);

    conv_1_fmul_32ns_fYi_U2 : component conv_1_fmul_32ns_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_921_p0,
        din1 => grp_fu_921_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_921_p2);

    conv_1_fcmp_32ns_g8j_U3 : component conv_1_fcmp_32ns_g8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_917_p2,
        din1 => ap_const_lv32_0,
        opcode => ap_const_lv5_2,
        dout => tmp_5_fu_930_p2);

    conv_1_mac_muladdhbi_U4 : component conv_1_mac_muladdhbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 5,
        dout_WIDTH => 10)
    port map (
        din0 => grp_fu_1449_p0,
        din1 => grp_fu_1449_p1,
        din2 => grp_fu_1449_p2,
        dout => grp_fu_1449_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_268)) then
                if ((ap_const_boolean_1 = ap_condition_447)) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_26_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_18) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_25_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_17) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_24_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_16) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_23_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_15) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_22_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_14) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_21_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_13) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_20_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_12) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_19_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_11) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_18_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_10) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_17_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_F) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_16_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_E) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_15_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_D) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_14_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_C) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_13_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_B) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_12_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_A) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_11_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_9) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_10_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_8) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_9_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_7) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_8_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_6) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_7_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_5) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_6_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_4) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_5_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_3) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_4_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_2) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_3_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_1) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_2_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_0) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801 <= conv_input_1_q0;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_268)) then
                if ((ap_const_boolean_1 = ap_condition_447)) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_27_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_18) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_26_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_17) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_25_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_16) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_24_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_15) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_23_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_14) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_22_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_13) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_21_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_12) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_20_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_11) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_19_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_10) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_18_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_F) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_17_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_E) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_16_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_D) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_15_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_C) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_14_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_B) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_13_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_A) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_12_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_9) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_11_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_8) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_10_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_7) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_9_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_6) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_8_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_5) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_7_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_4) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_6_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_3) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_5_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_2) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_4_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_1) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_3_q0;
                elsif (((select_ln35_3_reg_1473 = ap_const_lv5_0) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859 <= conv_input_2_q0;
                end if;
            end if; 
        end if;
    end process;

    c_0_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                c_0_reg_661 <= select_ln35_3_reg_1473;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_0_reg_661 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    f_0_reg_683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                f_0_reg_683 <= select_ln26_2_reg_1489;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_683 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten14_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten14_reg_650 <= select_ln11_reg_1656;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten14_reg_650 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    indvar_flatten39_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten39_reg_628 <= add_ln8_reg_1462;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten39_reg_628 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_672 <= select_ln14_reg_1651;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_672 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    r_0_reg_639_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                r_0_reg_639 <= select_ln35_1_reg_1467;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_639 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    w_sum_0_reg_705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1458_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                w_sum_0_reg_705 <= w_sum_3_2_reg_1716;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_sum_0_reg_705 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    wr_0_reg_694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                wr_0_reg_694 <= wr_reg_1696;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                wr_0_reg_694 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln8_reg_1462 <= add_ln8_fu_1102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln18_1_reg_1707 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                conv_1_bias_load_reg_1722 <= conv_1_bias_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                conv_1_weights_1_0_l_reg_1666 <= conv_1_weights_1_0_q0;
                conv_1_weights_2_0_l_reg_1676 <= conv_1_weights_2_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                conv_out_addr_reg_1702 <= zext_ln35_2_fu_1388_p1(15 - 1 downto 0);
                icmp_ln18_1_reg_1707 <= icmp_ln18_1_fu_1393_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln8_reg_1458 <= icmp_ln8_fu_1096_p2;
                icmp_ln8_reg_1458_pp0_iter1_reg <= icmp_ln8_reg_1458;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln26_1_reg_1479 <= or_ln26_1_fu_1224_p2;
                select_ln26_reg_1484 <= select_ln26_fu_1230_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                phi_ln26_2_reg_859 <= ap_phi_reg_pp0_iter0_phi_ln26_2_reg_859;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_1086 <= grp_fu_921_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                reg_1091 <= grp_fu_917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln11_reg_1656 <= select_ln11_fu_1337_p3;
                select_ln14_reg_1651 <= select_ln14_fu_1323_p3;
                select_ln26_2_reg_1489 <= select_ln26_2_fu_1238_p3;
                select_ln35_1_reg_1467 <= select_ln35_1_fu_1128_p3;
                select_ln35_3_reg_1473 <= select_ln35_3_fu_1186_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                tmp_1_2_reg_1691 <= grp_fu_921_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln8_reg_1458_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                w_sum_3_2_reg_1716 <= grp_fu_917_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                wr_reg_1696 <= wr_fu_1353_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln11_1_fu_1331_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten14_phi_fu_654_p4) + unsigned(ap_const_lv12_1));
    add_ln14_fu_1317_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_676_p4) + unsigned(ap_const_lv8_1));
    add_ln26_1_fu_1266_p2 <= std_logic_vector(unsigned(zext_ln26_5_fu_1262_p1) + unsigned(zext_ln26_1_fu_1246_p1));
    add_ln26_fu_1279_p2 <= std_logic_vector(unsigned(zext_ln18_fu_1250_p1) + unsigned(select_ln35_1_fu_1128_p3));
    add_ln35_1_fu_1382_p2 <= std_logic_vector(unsigned(zext_ln26_fu_1371_p1) + unsigned(zext_ln26_3_fu_1375_p1));
    add_ln8_fu_1102_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten39_phi_fu_632_p4) + unsigned(ap_const_lv16_1));
    and_ln34_fu_1434_p2 <= (tmp_5_fu_930_p2 and or_ln34_fu_1428_p2);
    and_ln35_1_fu_1160_p2 <= (xor_ln35_fu_1136_p2 and icmp_ln14_fu_1154_p2);
    and_ln35_2_fu_1206_p2 <= (or_ln35_1_fu_1200_p2 and and_ln35_fu_1148_p2);
    and_ln35_fu_1148_p2 <= (xor_ln35_fu_1136_p2 and icmp_ln18_fu_1142_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_268_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
                ap_condition_268 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_447_assign_proc : process(icmp_ln8_reg_1458, select_ln35_3_reg_1473)
    begin
                ap_condition_447 <= ((((((((select_ln35_3_reg_1473 = ap_const_lv5_1E) and (icmp_ln8_reg_1458 = ap_const_lv1_0)) or ((select_ln35_3_reg_1473 = ap_const_lv5_1F) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) or ((select_ln35_3_reg_1473 = ap_const_lv5_1D) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) or ((select_ln35_3_reg_1473 = ap_const_lv5_1C) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) or ((select_ln35_3_reg_1473 = ap_const_lv5_1B) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) or ((select_ln35_3_reg_1473 = ap_const_lv5_1A) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) or ((select_ln35_3_reg_1473 = ap_const_lv5_19) and (icmp_ln8_reg_1458 = ap_const_lv1_0)));
    end process;


    ap_condition_694_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1)
    begin
                ap_condition_694 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln8_fu_1096_p2)
    begin
        if ((icmp_ln8_fu_1096_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_665_p4_assign_proc : process(c_0_reg_661, icmp_ln8_reg_1458, select_ln35_3_reg_1473, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_c_0_phi_fu_665_p4 <= select_ln35_3_reg_1473;
        else 
            ap_phi_mux_c_0_phi_fu_665_p4 <= c_0_reg_661;
        end if; 
    end process;


    ap_phi_mux_f_0_phi_fu_687_p4_assign_proc : process(f_0_reg_683, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, select_ln26_2_reg_1489, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_f_0_phi_fu_687_p4 <= select_ln26_2_reg_1489;
        else 
            ap_phi_mux_f_0_phi_fu_687_p4 <= f_0_reg_683;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten14_phi_fu_654_p4_assign_proc : process(indvar_flatten14_reg_650, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, select_ln11_reg_1656, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten14_phi_fu_654_p4 <= select_ln11_reg_1656;
        else 
            ap_phi_mux_indvar_flatten14_phi_fu_654_p4 <= indvar_flatten14_reg_650;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten39_phi_fu_632_p4_assign_proc : process(indvar_flatten39_reg_628, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, add_ln8_reg_1462, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten39_phi_fu_632_p4 <= add_ln8_reg_1462;
        else 
            ap_phi_mux_indvar_flatten39_phi_fu_632_p4 <= indvar_flatten39_reg_628;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_676_p4_assign_proc : process(indvar_flatten_reg_672, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, select_ln14_reg_1651, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_676_p4 <= select_ln14_reg_1651;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_676_p4 <= indvar_flatten_reg_672;
        end if; 
    end process;


    ap_phi_mux_phi_ln26_phi_fu_720_p52_assign_proc : process(conv_input_0_q0, conv_input_1_q0, conv_input_2_q0, conv_input_3_q0, conv_input_4_q0, conv_input_5_q0, conv_input_6_q0, conv_input_7_q0, conv_input_8_q0, conv_input_9_q0, conv_input_10_q0, conv_input_11_q0, conv_input_12_q0, conv_input_13_q0, conv_input_14_q0, conv_input_15_q0, conv_input_16_q0, conv_input_17_q0, conv_input_18_q0, conv_input_19_q0, conv_input_20_q0, conv_input_21_q0, conv_input_22_q0, conv_input_23_q0, conv_input_24_q0, conv_input_25_q0, icmp_ln8_reg_1458, select_ln35_3_reg_1473, ap_phi_reg_pp0_iter0_phi_ln26_reg_717, ap_condition_447, ap_condition_694)
    begin
        if ((ap_const_boolean_1 = ap_condition_694)) then
            if ((ap_const_boolean_1 = ap_condition_447)) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_25_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_18) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_24_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_17) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_23_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_16) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_22_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_15) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_21_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_14) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_20_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_13) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_19_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_12) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_18_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_11) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_17_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_10) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_16_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_F) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_15_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_E) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_14_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_D) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_13_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_C) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_12_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_B) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_11_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_A) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_10_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_9) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_9_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_8) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_8_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_7) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_7_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_6) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_6_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_5) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_5_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_4) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_4_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_3) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_3_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_2) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_2_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_1) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_1_q0;
            elsif (((select_ln35_3_reg_1473 = ap_const_lv5_0) and (icmp_ln8_reg_1458 = ap_const_lv1_0))) then 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= conv_input_0_q0;
            else 
                ap_phi_mux_phi_ln26_phi_fu_720_p52 <= ap_phi_reg_pp0_iter0_phi_ln26_reg_717;
            end if;
        else 
            ap_phi_mux_phi_ln26_phi_fu_720_p52 <= ap_phi_reg_pp0_iter0_phi_ln26_reg_717;
        end if; 
    end process;


    ap_phi_mux_r_0_phi_fu_643_p4_assign_proc : process(r_0_reg_639, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, select_ln35_1_reg_1467, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_r_0_phi_fu_643_p4 <= select_ln35_1_reg_1467;
        else 
            ap_phi_mux_r_0_phi_fu_643_p4 <= r_0_reg_639;
        end if; 
    end process;


    ap_phi_mux_w_sum_0_phi_fu_709_p4_assign_proc : process(w_sum_0_reg_705, ap_CS_fsm_pp0_stage2, icmp_ln8_reg_1458_pp0_iter1_reg, w_sum_3_2_reg_1716, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln8_reg_1458_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_phi_mux_w_sum_0_phi_fu_709_p4 <= w_sum_3_2_reg_1716;
        else 
            ap_phi_mux_w_sum_0_phi_fu_709_p4 <= w_sum_0_reg_705;
        end if; 
    end process;


    ap_phi_mux_wr_0_phi_fu_698_p4_assign_proc : process(wr_0_reg_694, icmp_ln8_reg_1458, ap_CS_fsm_pp0_stage0, wr_reg_1696, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln8_reg_1458 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_wr_0_phi_fu_698_p4 <= wr_reg_1696;
        else 
            ap_phi_mux_wr_0_phi_fu_698_p4 <= wr_0_reg_694;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln26_reg_717 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln34_fu_1398_p1 <= grp_fu_917_p2;
    c_fu_1166_p2 <= std_logic_vector(unsigned(select_ln35_fu_1120_p3) + unsigned(ap_const_lv5_1));
    conv_1_bias_address0 <= zext_ln26_4_fu_1378_p1(5 - 1 downto 0);

    conv_1_bias_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            conv_1_bias_ce0 <= ap_const_logic_1;
        else 
            conv_1_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_0_0_address0 <= zext_ln26_6_fu_1272_p1(7 - 1 downto 0);

    conv_1_weights_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            conv_1_weights_0_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_1_0_address0 <= zext_ln26_6_fu_1272_p1(7 - 1 downto 0);

    conv_1_weights_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            conv_1_weights_1_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_1_weights_2_0_address0 <= zext_ln26_6_fu_1272_p1(7 - 1 downto 0);

    conv_1_weights_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            conv_1_weights_2_0_ce0 <= ap_const_logic_1;
        else 
            conv_1_weights_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_0_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            conv_input_0_ce0 <= ap_const_logic_1;
        else 
            conv_input_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_10_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_8) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_9) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_A) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_10_ce0 <= ap_const_logic_1;
        else 
            conv_input_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_11_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_9) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_A) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_B) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_11_ce0 <= ap_const_logic_1;
        else 
            conv_input_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_12_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_A) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_B) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_C) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_12_ce0 <= ap_const_logic_1;
        else 
            conv_input_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_13_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_B) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_C) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_D) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_13_ce0 <= ap_const_logic_1;
        else 
            conv_input_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_14_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_C) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_D) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_E) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_14_ce0 <= ap_const_logic_1;
        else 
            conv_input_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_15_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_D) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_E) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_F) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_15_ce0 <= ap_const_logic_1;
        else 
            conv_input_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_16_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_E) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_F) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_10) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_16_ce0 <= ap_const_logic_1;
        else 
            conv_input_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_17_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_F) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_10) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_11) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_17_ce0 <= ap_const_logic_1;
        else 
            conv_input_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_18_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_10) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_11) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_12) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_18_ce0 <= ap_const_logic_1;
        else 
            conv_input_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_19_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_11) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_12) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_13) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_19_ce0 <= ap_const_logic_1;
        else 
            conv_input_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_1_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_0) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_1) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_1_ce0 <= ap_const_logic_1;
        else 
            conv_input_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_20_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_12) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_13) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_14) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_20_ce0 <= ap_const_logic_1;
        else 
            conv_input_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_21_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_13) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_14) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_15) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_21_ce0 <= ap_const_logic_1;
        else 
            conv_input_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_22_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_14) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_15) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_16) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_22_ce0 <= ap_const_logic_1;
        else 
            conv_input_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_23_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_15) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_16) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_17) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_23_ce0 <= ap_const_logic_1;
        else 
            conv_input_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_24_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_16) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_17) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_18) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_24_ce0 <= ap_const_logic_1;
        else 
            conv_input_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_25_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((((((((select_ln35_3_fu_1186_p3 = ap_const_lv5_1E) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0)) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1F) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1D) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1C) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1B) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1A) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_19) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_17) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_18) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_25_ce0 <= ap_const_logic_1;
        else 
            conv_input_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_26_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((((((((select_ln35_3_fu_1186_p3 = ap_const_lv5_1E) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0)) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1F) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1D) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1C) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1B) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_1A) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0))) or ((select_ln35_3_fu_1186_p3 = ap_const_lv5_19) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0)))) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_18) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_26_ce0 <= ap_const_logic_1;
        else 
            conv_input_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_27_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            conv_input_27_ce0 <= ap_const_logic_1;
        else 
            conv_input_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_2_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_0) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_1) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_2) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_2_ce0 <= ap_const_logic_1;
        else 
            conv_input_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_3_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_1) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_2) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_3) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_3_ce0 <= ap_const_logic_1;
        else 
            conv_input_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_4_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_2) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_3) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_4) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_4_ce0 <= ap_const_logic_1;
        else 
            conv_input_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_5_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_3) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_4) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_5) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_5_ce0 <= ap_const_logic_1;
        else 
            conv_input_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_6_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_4) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_5) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_6) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_6_ce0 <= ap_const_logic_1;
        else 
            conv_input_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_7_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_5) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_6) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_7) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_7_ce0 <= ap_const_logic_1;
        else 
            conv_input_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_8_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_6) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_7) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_8) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_8_ce0 <= ap_const_logic_1;
        else 
            conv_input_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_input_9_address0 <= zext_ln26_2_fu_1285_p1(5 - 1 downto 0);

    conv_input_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln8_fu_1096_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, select_ln35_3_fu_1186_p3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_7) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_8) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln35_3_fu_1186_p3 = ap_const_lv5_9) and (icmp_ln8_fu_1096_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            conv_input_9_ce0 <= ap_const_logic_1;
        else 
            conv_input_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_address0 <= conv_out_addr_reg_1702;

    conv_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            conv_out_ce0 <= ap_const_logic_1;
        else 
            conv_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    conv_out_d0 <= 
        grp_fu_917_p2 when (and_ln34_fu_1434_p2(0) = '1') else 
        ap_const_lv32_0;

    conv_out_we0_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, icmp_ln18_1_reg_1707, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln18_1_reg_1707 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            conv_out_we0 <= ap_const_logic_1;
        else 
            conv_out_we0 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_1212_p2 <= std_logic_vector(unsigned(select_ln35_2_fu_1178_p3) + unsigned(ap_const_lv6_1));
    grp_fu_1449_p0 <= grp_fu_1449_p00(5 - 1 downto 0);
    grp_fu_1449_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_1_reg_1467),10));
    grp_fu_1449_p1 <= ap_const_lv10_1A(6 - 1 downto 0);
    grp_fu_1449_p2 <= grp_fu_1449_p20(5 - 1 downto 0);
    grp_fu_1449_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln35_3_reg_1473),10));

    grp_fu_917_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, reg_1091, ap_CS_fsm_pp0_stage0, select_ln26_1_fu_1345_p3, ap_CS_fsm_pp0_stage4, w_sum_3_2_reg_1716, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_917_p0 <= w_sum_3_2_reg_1716;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            grp_fu_917_p0 <= reg_1091;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_917_p0 <= select_ln26_1_fu_1345_p3;
        else 
            grp_fu_917_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_917_p1_assign_proc : process(ap_enable_reg_pp0_iter0, grp_fu_921_p2, reg_1086, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, tmp_1_2_reg_1691, ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter1, conv_1_bias_load_reg_1722, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage4, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_917_p1 <= conv_1_bias_load_reg_1722;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_917_p1 <= tmp_1_2_reg_1691;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_917_p1 <= reg_1086;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_917_p1 <= grp_fu_921_p2;
        else 
            grp_fu_917_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_921_p0_assign_proc : process(conv_1_weights_0_0_q0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, conv_1_weights_1_0_l_reg_1666, conv_1_weights_2_0_l_reg_1676, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_921_p0 <= conv_1_weights_2_0_l_reg_1676;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_921_p0 <= conv_1_weights_1_0_l_reg_1666;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_921_p0 <= conv_1_weights_0_0_q0;
            else 
                grp_fu_921_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_921_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_921_p1_assign_proc : process(phi_ln26_2_reg_859, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2, ap_phi_mux_phi_ln26_phi_fu_720_p52, ap_block_pp0_stage1, ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_921_p1 <= phi_ln26_2_reg_859;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_921_p1 <= ap_phi_reg_pp0_iter0_phi_ln26_1_reg_801;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                grp_fu_921_p1 <= ap_phi_mux_phi_ln26_phi_fu_720_p52;
            else 
                grp_fu_921_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_921_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln11_fu_1114_p2 <= "1" when (ap_phi_mux_indvar_flatten14_phi_fu_654_p4 = ap_const_lv12_9C0) else "0";
    icmp_ln14_fu_1154_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_676_p4 = ap_const_lv8_60) else "0";
    icmp_ln18_1_fu_1393_p2 <= "1" when (wr_reg_1696 = ap_const_lv2_3) else "0";
    icmp_ln18_fu_1142_p2 <= "1" when (ap_phi_mux_wr_0_phi_fu_698_p4 = ap_const_lv2_3) else "0";
    icmp_ln34_1_fu_1422_p2 <= "1" when (trunc_ln34_fu_1412_p1 = ap_const_lv23_0) else "0";
    icmp_ln34_fu_1416_p2 <= "0" when (tmp_fu_1402_p4 = ap_const_lv8_FF) else "1";
    icmp_ln8_fu_1096_p2 <= "1" when (ap_phi_mux_indvar_flatten39_phi_fu_632_p4 = ap_const_lv16_FD80) else "0";
    or_ln26_1_fu_1224_p2 <= (or_ln26_fu_1218_p2 or icmp_ln11_fu_1114_p2);
    or_ln26_fu_1218_p2 <= (and_ln35_2_fu_1206_p2 or and_ln35_1_fu_1160_p2);
    or_ln34_fu_1428_p2 <= (icmp_ln34_fu_1416_p2 or icmp_ln34_1_fu_1422_p2);
    or_ln35_1_fu_1200_p2 <= (xor_ln35_1_fu_1194_p2 or icmp_ln11_fu_1114_p2);
    or_ln35_fu_1172_p2 <= (icmp_ln11_fu_1114_p2 or and_ln35_1_fu_1160_p2);
    r_fu_1108_p2 <= std_logic_vector(unsigned(ap_phi_mux_r_0_phi_fu_643_p4) + unsigned(ap_const_lv5_1));
    select_ln11_fu_1337_p3 <= 
        ap_const_lv12_1 when (icmp_ln11_fu_1114_p2(0) = '1') else 
        add_ln11_1_fu_1331_p2;
    select_ln14_fu_1323_p3 <= 
        ap_const_lv8_1 when (or_ln35_fu_1172_p2(0) = '1') else 
        add_ln14_fu_1317_p2;
    select_ln26_1_fu_1345_p3 <= 
        ap_const_lv32_0 when (or_ln26_1_reg_1479(0) = '1') else 
        ap_phi_mux_w_sum_0_phi_fu_709_p4;
    select_ln26_2_fu_1238_p3 <= 
        f_fu_1212_p2 when (and_ln35_2_fu_1206_p2(0) = '1') else 
        select_ln35_2_fu_1178_p3;
    select_ln26_fu_1230_p3 <= 
        ap_const_lv2_0 when (or_ln26_1_fu_1224_p2(0) = '1') else 
        ap_phi_mux_wr_0_phi_fu_698_p4;
    select_ln35_1_fu_1128_p3 <= 
        r_fu_1108_p2 when (icmp_ln11_fu_1114_p2(0) = '1') else 
        ap_phi_mux_r_0_phi_fu_643_p4;
    select_ln35_2_fu_1178_p3 <= 
        ap_const_lv6_0 when (or_ln35_fu_1172_p2(0) = '1') else 
        ap_phi_mux_f_0_phi_fu_687_p4;
    select_ln35_3_fu_1186_p3 <= 
        c_fu_1166_p2 when (and_ln35_1_fu_1160_p2(0) = '1') else 
        select_ln35_fu_1120_p3;
    select_ln35_fu_1120_p3 <= 
        ap_const_lv5_0 when (icmp_ln11_fu_1114_p2(0) = '1') else 
        ap_phi_mux_c_0_phi_fu_665_p4;
    tmp_1_fu_1364_p3 <= (grp_fu_1449_p3 & ap_const_lv5_0);
    tmp_3_fu_1254_p3 <= (select_ln26_fu_1230_p3 & ap_const_lv5_0);
    tmp_fu_1402_p4 <= bitcast_ln34_fu_1398_p1(30 downto 23);
    trunc_ln34_fu_1412_p1 <= bitcast_ln34_fu_1398_p1(23 - 1 downto 0);
    wr_fu_1353_p2 <= std_logic_vector(unsigned(select_ln26_reg_1484) + unsigned(ap_const_lv2_1));
    xor_ln35_1_fu_1194_p2 <= (icmp_ln14_fu_1154_p2 xor ap_const_lv1_1);
    xor_ln35_fu_1136_p2 <= (icmp_ln11_fu_1114_p2 xor ap_const_lv1_1);
    zext_ln18_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_fu_1230_p3),5));
    zext_ln26_1_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_2_fu_1238_p3),8));
    zext_ln26_2_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln26_fu_1279_p2),64));
    zext_ln26_3_fu_1375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_2_reg_1489),16));
    zext_ln26_4_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln26_2_reg_1489),64));
    zext_ln26_5_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1254_p3),8));
    zext_ln26_6_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln26_1_fu_1266_p2),64));
    zext_ln26_fu_1371_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1364_p3),16));
    zext_ln35_2_fu_1388_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln35_1_fu_1382_p2),64));
end behav;
