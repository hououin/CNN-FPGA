// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_1_conv_1_weibkb_H__
#define __conv_1_conv_1_weibkb_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_1_conv_1_weibkb_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 96;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_1_conv_1_weibkb_ram) {
        ram[0] = "0b10111110101100000001011011111101";
        ram[1] = "0b10111110101110011100001010010000";
        ram[2] = "0b00111110010110101010101111111111";
        ram[3] = "0b00111110101100001111001111111100";
        ram[4] = "0b10111110000011011110001101000101";
        ram[5] = "0b10111111000100111101101111111101";
        ram[6] = "0b00111110000100111001110000100001";
        ram[7] = "0b00111101101111001000100111010000";
        ram[8] = "0b00111110001100111100010000101100";
        ram[9] = "0b00111101100010001110001110000101";
        ram[10] = "0b00111110011001101110111100100011";
        ram[11] = "0b00111110100011110010010010001110";
        ram[12] = "0b00111110110100000000001011001110";
        ram[13] = "0b00111101001100110011100000110000";
        ram[14] = "0b00111101010110001100000001010100";
        ram[15] = "0b00111110000110111110000101010110";
        ram[16] = "0b10111110011100101001001001001111";
        ram[17] = "0b10111110111110100100111110111000";
        ram[18] = "0b10111110001111100010001111001011";
        ram[19] = "0b00111101100100011011100110010100";
        ram[20] = "0b00111110101011011011110100011010";
        ram[21] = "0b00111110011000100111100001110001";
        ram[22] = "0b00111110000111001000000101000100";
        ram[23] = "0b00111101010010111001111101100110";
        ram[24] = "0b00111100100110001000110110001100";
        ram[25] = "0b10111110010111011111001001010011";
        ram[26] = "0b00111110001111010101010010110011";
        ram[27] = "0b10111110000101110111110001011001";
        ram[28] = "0b00111101101000101101100000100111";
        ram[29] = "0b10111101001010011111111010110111";
        ram[30] = "0b00111110010010100001101000100001";
        ram[31] = "0b10111101000100111100101100010110";
        ram[32] = "0b10111110000011011100111111010010";
        ram[33] = "0b00111110100011110110110111000000";
        ram[34] = "0b00111110011100101010101101000001";
        ram[35] = "0b10111101000100101100010011010010";
        ram[36] = "0b00111101110010101101110110100011";
        ram[37] = "0b10111101011000110110011000011110";
        ram[38] = "0b00111101000110010010001101000101";
        ram[39] = "0b00111110100110011010010011101011";
        ram[40] = "0b00111110000100100100001101110111";
        ram[41] = "0b00111110001010111011101001001011";
        ram[42] = "0b00111110000000101100100110111101";
        ram[43] = "0b00111101101001111010001010110001";
        ram[44] = "0b00111101001011101001100110111110";
        ram[45] = "0b00111101101001110000001000010001";
        ram[46] = "0b10111110010010110100101011110000";
        ram[47] = "0b10111010101011000110011101101110";
        ram[48] = "0b10111101001101101010100010111101";
        ram[49] = "0b10111101000101101010000001010001";
        ram[50] = "0b10111100111101111110010000100000";
        ram[51] = "0b00111110100101011011110001001100";
        ram[52] = "0b00111110010000100001000001111001";
        ram[53] = "0b00111101101011101000110011010111";
        ram[54] = "0b10111110000001011001111000111000";
        ram[55] = "0b00111110010110001111010001011011";
        ram[56] = "0b00111110000011111001001101111010";
        ram[57] = "0b00111101110110001100100001000000";
        ram[58] = "0b00111110001111010110001110011011";
        ram[59] = "0b10111111010010101110100001101011";
        ram[60] = "0b00111101001111110000111011111011";
        ram[61] = "0b10111101011010010011101111000011";
        ram[62] = "0b10111101011010010110100111000100";
        ram[63] = "0b10111101100101011011001101011001";
        ram[64] = "0b00111110101010111000110010010000";
        ram[65] = "0b00111110000110000011011001001110";
        ram[66] = "0b00111110100010100001010001111101";
        ram[67] = "0b10111111000111010110101010100011";
        ram[68] = "0b10111110000000011111110001001010";
        ram[69] = "0b00111110001110000011110111110111";
        ram[70] = "0b10111110000111001000011111000001";
        ram[71] = "0b10111110101110000100001011011001";
        ram[72] = "0b10111110110000111010111011010011";
        ram[73] = "0b10111101011110001011010010010111";
        ram[74] = "0b00111101101110110001111101001101";
        ram[75] = "0b10111111000110100011101001011111";
        ram[76] = "0b10111110110001001000111010000000";
        ram[77] = "0b00111101111001001001110000011001";
        ram[78] = "0b10111101110111111101011011000010";
        ram[79] = "0b00111110100001101101001100000101";
        ram[80] = "0b00111110110000011001110100000110";
        ram[81] = "0b00111110110111111110110110100101";
        ram[82] = "0b00111110001101100100010110110010";
        ram[83] = "0b10111101011110010111001101111000";
        ram[84] = "0b10111110110010101100010010010000";
        ram[85] = "0b10111110101011111011011001100000";
        ram[86] = "0b10111110110001001111010110011100";
        ram[87] = "0b10111110001100011000101010110000";
        ram[88] = "0b10111110100000100101111001100000";
        ram[89] = "0b00111101101110100111011100010011";
        ram[90] = "0b10111110101100100000110010101111";
        ram[91] = "0b10111110101110101001010011101110";
        ram[92] = "0b00111110000011101101110111001000";
        ram[93] = "0b00111110011110011100010001000011";
        ram[94] = "0b00111101000101010110000101100101";
        ram[95] = "0b00111101111100101011000001101101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_1_conv_1_weibkb) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 96;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_1_conv_1_weibkb_ram* meminst;


SC_CTOR(conv_1_conv_1_weibkb) {
meminst = new conv_1_conv_1_weibkb_ram("conv_1_conv_1_weibkb_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_1_conv_1_weibkb() {
    delete meminst;
}


};//endmodule
#endif
