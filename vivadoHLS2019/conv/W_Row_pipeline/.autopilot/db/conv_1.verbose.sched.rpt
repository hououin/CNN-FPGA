

================================================================
== Vivado HLS Report for 'conv_1'
================================================================
* Date:           Tue Oct  3 19:41:55 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        conv
* Solution:       W_Row_pipeline
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    34.961|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  389382|  389382|  389382|  389382|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |                                    |     Latency     | Iteration|  Initiation Interval  |  Trip |          |
        |              Loop Name             |   min  |   max  |  Latency |  achieved |   target  | Count | Pipelined|
        +------------------------------------+--------+--------+----------+-----------+-----------+-------+----------+
        |- Row_Loop_Filter1_Loop_W_Row_Loop  |  389380|  389380|        11|          6|          1|  64896|    yes   |
        +------------------------------------+--------+--------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 6, D = 11, States = { 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 13 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 2 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([784 x float]* %conv_input) nounwind, !map !7"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([21632 x float]* %conv_out) nounwind, !map !14"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @conv_1_str) nounwind"   --->   Operation 16 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.76ns)   --->   "br label %1" [conv/conv_1.cpp:8]   --->   Operation 17 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 14.3>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten47 = phi i16 [ 0, %0 ], [ %add_ln8, %ifFalse ]" [conv/conv_1.cpp:8]   --->   Operation 18 'phi' 'indvar_flatten47' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%r_0 = phi i5 [ 0, %0 ], [ %select_ln35_1, %ifFalse ]" [conv/conv_1.cpp:35]   --->   Operation 19 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%indvar_flatten14 = phi i12 [ 0, %0 ], [ %select_ln11, %ifFalse ]" [conv/conv_1.cpp:11]   --->   Operation 20 'phi' 'indvar_flatten14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%c_0 = phi i5 [ 0, %0 ], [ %select_ln35_5, %ifFalse ]" [conv/conv_1.cpp:35]   --->   Operation 21 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %0 ], [ %select_ln14, %ifFalse ]" [conv/conv_1.cpp:14]   --->   Operation 22 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %select_ln26_2, %ifFalse ]" [conv/conv_1.cpp:26]   --->   Operation 23 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%wr_0 = phi i2 [ 0, %0 ], [ %wr, %ifFalse ]"   --->   Operation 24 'phi' 'wr_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%w_sum_0 = phi float [ 0.000000e+00, %0 ], [ %w_sum_3_2, %ifFalse ]" [conv/conv_1.cpp:26]   --->   Operation 25 'phi' 'w_sum_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.78ns)   --->   "%c = add i5 %c_0, 1" [conv/conv_1.cpp:26]   --->   Operation 26 'add' 'c' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.78ns)   --->   "%add_ln26_2 = add i5 %c_0, 2" [conv/conv_1.cpp:26]   --->   Operation 27 'add' 'add_ln26_2' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (2.42ns)   --->   "%icmp_ln8 = icmp eq i16 %indvar_flatten47, -640" [conv/conv_1.cpp:8]   --->   Operation 28 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 2.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (2.07ns)   --->   "%add_ln8 = add i16 %indvar_flatten47, 1" [conv/conv_1.cpp:8]   --->   Operation 29 'add' 'add_ln8' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "br i1 %icmp_ln8, label %2, label %W_Row_Loop" [conv/conv_1.cpp:8]   --->   Operation 30 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.78ns)   --->   "%r = add i5 %r_0, 1" [conv/conv_1.cpp:8]   --->   Operation 31 'add' 'r' <Predicate = (!icmp_ln8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (1.99ns)   --->   "%icmp_ln11 = icmp eq i12 %indvar_flatten14, -1600" [conv/conv_1.cpp:11]   --->   Operation 32 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln8)> <Delay = 1.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.21ns)   --->   "%select_ln35 = select i1 %icmp_ln11, i5 0, i5 %c_0" [conv/conv_1.cpp:35]   --->   Operation 33 'select' 'select_ln35' <Predicate = (!icmp_ln8)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.21ns)   --->   "%select_ln35_1 = select i1 %icmp_ln11, i5 %r, i5 %r_0" [conv/conv_1.cpp:35]   --->   Operation 34 'select' 'select_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_8)   --->   "%select_ln35_2 = select i1 %icmp_ln11, i5 1, i5 %c" [conv/conv_1.cpp:35]   --->   Operation 35 'select' 'select_ln35_2' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_9)   --->   "%select_ln35_3 = select i1 %icmp_ln11, i5 2, i5 %add_ln26_2" [conv/conv_1.cpp:35]   --->   Operation 36 'select' 'select_ln35_3' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.97ns)   --->   "%xor_ln35 = xor i1 %icmp_ln11, true" [conv/conv_1.cpp:35]   --->   Operation 37 'xor' 'xor_ln35' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.95ns)   --->   "%icmp_ln18 = icmp eq i2 %wr_0, -1" [conv/conv_1.cpp:18]   --->   Operation 38 'icmp' 'icmp_ln18' <Predicate = (!icmp_ln8)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node and_ln35_2)   --->   "%and_ln35 = and i1 %icmp_ln18, %xor_ln35" [conv/conv_1.cpp:35]   --->   Operation 39 'and' 'and_ln35' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.55ns)   --->   "%icmp_ln14 = icmp eq i8 %indvar_flatten, 96" [conv/conv_1.cpp:14]   --->   Operation 40 'icmp' 'icmp_ln14' <Predicate = (!icmp_ln8)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.97ns)   --->   "%and_ln35_1 = and i1 %icmp_ln14, %xor_ln35" [conv/conv_1.cpp:35]   --->   Operation 41 'and' 'and_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (1.78ns)   --->   "%add_ln26_3 = add i5 %select_ln35, 1" [conv/conv_1.cpp:26]   --->   Operation 42 'add' 'add_ln26_3' <Predicate = (!icmp_ln8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.97ns)   --->   "%or_ln35 = or i1 %and_ln35_1, %icmp_ln11" [conv/conv_1.cpp:35]   --->   Operation 43 'or' 'or_ln35' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (1.18ns)   --->   "%select_ln35_4 = select i1 %or_ln35, i6 0, i6 %f_0" [conv/conv_1.cpp:35]   --->   Operation 44 'select' 'select_ln35_4' <Predicate = (!icmp_ln8)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.21ns)   --->   "%select_ln35_5 = select i1 %and_ln35_1, i5 %add_ln26_3, i5 %select_ln35" [conv/conv_1.cpp:35]   --->   Operation 45 'select' 'select_ln35_5' <Predicate = (!icmp_ln8)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i5 %select_ln35_5 to i11" [conv/conv_1.cpp:35]   --->   Operation 46 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.78ns)   --->   "%add_ln26_4 = add i5 %select_ln35, 2" [conv/conv_1.cpp:26]   --->   Operation 47 'add' 'add_ln26_4' <Predicate = (!icmp_ln8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_8)   --->   "%select_ln35_6 = select i1 %and_ln35_1, i5 %add_ln26_4, i5 %select_ln35_2" [conv/conv_1.cpp:35]   --->   Operation 48 'select' 'select_ln35_6' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_8)   --->   "%zext_ln35_3 = zext i5 %select_ln35_6 to i11" [conv/conv_1.cpp:35]   --->   Operation 49 'zext' 'zext_ln35_3' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.78ns)   --->   "%add_ln26_5 = add i5 %select_ln35, 3" [conv/conv_1.cpp:26]   --->   Operation 50 'add' 'add_ln26_5' <Predicate = (!icmp_ln8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_9)   --->   "%select_ln35_7 = select i1 %and_ln35_1, i5 %add_ln26_5, i5 %select_ln35_3" [conv/conv_1.cpp:35]   --->   Operation 51 'select' 'select_ln35_7' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln26_9)   --->   "%zext_ln35_4 = zext i5 %select_ln35_7 to i11" [conv/conv_1.cpp:35]   --->   Operation 52 'zext' 'zext_ln35_4' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node and_ln35_2)   --->   "%xor_ln35_1 = xor i1 %icmp_ln14, true" [conv/conv_1.cpp:35]   --->   Operation 53 'xor' 'xor_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node and_ln35_2)   --->   "%or_ln35_1 = or i1 %icmp_ln11, %xor_ln35_1" [conv/conv_1.cpp:35]   --->   Operation 54 'or' 'or_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln35_2 = and i1 %and_ln35, %or_ln35_1" [conv/conv_1.cpp:35]   --->   Operation 55 'and' 'and_ln35_2' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.82ns)   --->   "%f = add i6 %select_ln35_4, 1" [conv/conv_1.cpp:14]   --->   Operation 56 'add' 'f' <Predicate = (!icmp_ln8)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node or_ln26_1)   --->   "%or_ln26 = or i1 %and_ln35_2, %and_ln35_1" [conv/conv_1.cpp:26]   --->   Operation 57 'or' 'or_ln26' <Predicate = (!icmp_ln8)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln26_1 = or i1 %or_ln26, %icmp_ln11" [conv/conv_1.cpp:26]   --->   Operation 58 'or' 'or_ln26_1' <Predicate = (!icmp_ln8)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.99ns)   --->   "%select_ln26 = select i1 %or_ln26_1, i2 0, i2 %wr_0" [conv/conv_1.cpp:26]   --->   Operation 59 'select' 'select_ln26' <Predicate = (!icmp_ln8)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (1.18ns)   --->   "%select_ln26_2 = select i1 %and_ln35_2, i6 %f, i6 %select_ln35_4" [conv/conv_1.cpp:26]   --->   Operation 60 'select' 'select_ln26_2' <Predicate = (!icmp_ln8)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln26_1 = zext i6 %select_ln26_2 to i8" [conv/conv_1.cpp:26]   --->   Operation 61 'zext' 'zext_ln26_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i2 %select_ln26 to i5" [conv/conv_1.cpp:18]   --->   Operation 62 'zext' 'zext_ln18' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_3 = call i7 @_ssdm_op_BitConcatenate.i7.i2.i5(i2 %select_ln26, i5 0)" [conv/conv_1.cpp:26]   --->   Operation 63 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln26_4 = zext i7 %tmp_3 to i8" [conv/conv_1.cpp:26]   --->   Operation 64 'zext' 'zext_ln26_4' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.87ns)   --->   "%add_ln26_6 = add i8 %zext_ln26_1, %zext_ln26_4" [conv/conv_1.cpp:26]   --->   Operation 65 'add' 'add_ln26_6' <Predicate = (!icmp_ln8)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln26_5 = zext i8 %add_ln26_6 to i64" [conv/conv_1.cpp:26]   --->   Operation 66 'zext' 'zext_ln26_5' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%conv_1_weights_0_0_a = getelementptr [96 x float]* @conv_1_weights_0_0, i64 0, i64 %zext_ln26_5" [conv/conv_1.cpp:26]   --->   Operation 67 'getelementptr' 'conv_1_weights_0_0_a' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%conv_1_weights_1_0_a = getelementptr [96 x float]* @conv_1_weights_1_0, i64 0, i64 %zext_ln26_5" [conv/conv_1.cpp:26]   --->   Operation 68 'getelementptr' 'conv_1_weights_1_0_a' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%conv_1_weights_2_0_a = getelementptr [96 x float]* @conv_1_weights_2_0, i64 0, i64 %zext_ln26_5" [conv/conv_1.cpp:26]   --->   Operation 69 'getelementptr' 'conv_1_weights_2_0_a' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (1.78ns)   --->   "%add_ln26 = add i5 %select_ln35_1, %zext_ln18" [conv/conv_1.cpp:26]   --->   Operation 70 'add' 'add_ln26' <Predicate = (!icmp_ln8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_6 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln26, i5 0)" [conv/conv_1.cpp:26]   --->   Operation 71 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln26_6 = zext i10 %tmp_6 to i11" [conv/conv_1.cpp:26]   --->   Operation 72 'zext' 'zext_ln26_6' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_7 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %add_ln26, i2 0)" [conv/conv_1.cpp:26]   --->   Operation 73 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln26_7 = zext i7 %tmp_7 to i11" [conv/conv_1.cpp:26]   --->   Operation 74 'zext' 'zext_ln26_7' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (1.73ns)   --->   "%sub_ln26 = sub i11 %zext_ln26_6, %zext_ln26_7" [conv/conv_1.cpp:26]   --->   Operation 75 'sub' 'sub_ln26' <Predicate = (!icmp_ln8)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (1.63ns)   --->   "%add_ln26_7 = add i11 %zext_ln35_1, %sub_ln26" [conv/conv_1.cpp:26]   --->   Operation 76 'add' 'add_ln26_7' <Predicate = (!icmp_ln8)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln26 = sext i11 %add_ln26_7 to i64" [conv/conv_1.cpp:26]   --->   Operation 77 'sext' 'sext_ln26' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%conv_input_addr = getelementptr [784 x float]* %conv_input, i64 0, i64 %sext_ln26" [conv/conv_1.cpp:26]   --->   Operation 78 'getelementptr' 'conv_input_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.63ns) (out node of the LUT)   --->   "%add_ln26_8 = add i11 %zext_ln35_3, %sub_ln26" [conv/conv_1.cpp:26]   --->   Operation 79 'add' 'add_ln26_8' <Predicate = (!icmp_ln8)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%sext_ln26_1 = sext i11 %add_ln26_8 to i64" [conv/conv_1.cpp:26]   --->   Operation 80 'sext' 'sext_ln26_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%conv_input_addr_1 = getelementptr [784 x float]* %conv_input, i64 0, i64 %sext_ln26_1" [conv/conv_1.cpp:26]   --->   Operation 81 'getelementptr' 'conv_input_addr_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.63ns) (out node of the LUT)   --->   "%add_ln26_9 = add i11 %zext_ln35_4, %sub_ln26" [conv/conv_1.cpp:26]   --->   Operation 82 'add' 'add_ln26_9' <Predicate = (!icmp_ln8)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [2/2] (3.25ns)   --->   "%conv_1_weights_0_0_l = load float* %conv_1_weights_0_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 83 'load' 'conv_1_weights_0_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_2 : Operation 84 [2/2] (3.25ns)   --->   "%conv_input_load = load float* %conv_input_addr, align 4" [conv/conv_1.cpp:26]   --->   Operation 84 'load' 'conv_input_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_2 : Operation 85 [2/2] (3.25ns)   --->   "%conv_1_weights_1_0_l = load float* %conv_1_weights_1_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 85 'load' 'conv_1_weights_1_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_2 : Operation 86 [2/2] (3.25ns)   --->   "%conv_input_load_1 = load float* %conv_input_addr_1, align 4" [conv/conv_1.cpp:26]   --->   Operation 86 'load' 'conv_input_load_1' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_2 : Operation 87 [2/2] (3.25ns)   --->   "%conv_1_weights_2_0_l = load float* %conv_1_weights_2_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 87 'load' 'conv_1_weights_2_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_2 : Operation 88 [1/1] (1.91ns)   --->   "%add_ln14 = add i8 %indvar_flatten, 1" [conv/conv_1.cpp:14]   --->   Operation 88 'add' 'add_ln14' <Predicate = (!icmp_ln8)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 89 [1/1] (1.24ns)   --->   "%select_ln14 = select i1 %or_ln35, i8 1, i8 %add_ln14" [conv/conv_1.cpp:14]   --->   Operation 89 'select' 'select_ln14' <Predicate = (!icmp_ln8)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 90 [1/1] (1.54ns)   --->   "%add_ln11 = add i12 %indvar_flatten14, 1" [conv/conv_1.cpp:11]   --->   Operation 90 'add' 'add_ln11' <Predicate = (!icmp_ln8)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 91 [1/1] (0.69ns)   --->   "%select_ln11 = select i1 %icmp_ln11, i12 1, i12 %add_ln11" [conv/conv_1.cpp:11]   --->   Operation 91 'select' 'select_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 92 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 92 'br' <Predicate = (!icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 15.6>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln26_8 = zext i11 %add_ln26_9 to i64" [conv/conv_1.cpp:26]   --->   Operation 93 'zext' 'zext_ln26_8' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%conv_input_addr_2 = getelementptr [784 x float]* %conv_input, i64 0, i64 %zext_ln26_8" [conv/conv_1.cpp:26]   --->   Operation 94 'getelementptr' 'conv_input_addr_2' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_3 : Operation 95 [1/2] (3.25ns)   --->   "%conv_1_weights_0_0_l = load float* %conv_1_weights_0_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 95 'load' 'conv_1_weights_0_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_3 : Operation 96 [1/2] (3.25ns)   --->   "%conv_input_load = load float* %conv_input_addr, align 4" [conv/conv_1.cpp:26]   --->   Operation 96 'load' 'conv_input_load' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_3 : Operation 97 [2/2] (12.3ns)   --->   "%tmp_s = fmul float %conv_1_weights_0_0_l, %conv_input_load" [conv/conv_1.cpp:26]   --->   Operation 97 'fmul' 'tmp_s' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/2] (3.25ns)   --->   "%conv_1_weights_1_0_l = load float* %conv_1_weights_1_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 98 'load' 'conv_1_weights_1_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_3 : Operation 99 [1/2] (3.25ns)   --->   "%conv_input_load_1 = load float* %conv_input_addr_1, align 4" [conv/conv_1.cpp:26]   --->   Operation 99 'load' 'conv_input_load_1' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_3 : Operation 100 [1/2] (3.25ns)   --->   "%conv_1_weights_2_0_l = load float* %conv_1_weights_2_0_a, align 4" [conv/conv_1.cpp:26]   --->   Operation 100 'load' 'conv_1_weights_2_0_l' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>
ST_3 : Operation 101 [2/2] (3.25ns)   --->   "%conv_input_load_2 = load float* %conv_input_addr_2, align 4" [conv/conv_1.cpp:26]   --->   Operation 101 'load' 'conv_input_load_2' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>

State 4 <SV = 3> <Delay = 34.9>
ST_4 : Operation 102 [1/1] (0.69ns)   --->   "%select_ln26_1 = select i1 %or_ln26_1, float 0.000000e+00, float %w_sum_0" [conv/conv_1.cpp:26]   --->   Operation 102 'select' 'select_ln26_1' <Predicate = (!icmp_ln8)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 103 [1/2] (12.3ns)   --->   "%tmp_s = fmul float %conv_1_weights_0_0_l, %conv_input_load" [conv/conv_1.cpp:26]   --->   Operation 103 'fmul' 'tmp_s' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [2/2] (22.5ns)   --->   "%w_sum_3 = fadd float %select_ln26_1, %tmp_s" [conv/conv_1.cpp:26]   --->   Operation 104 'fadd' 'w_sum_3' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [2/2] (12.3ns)   --->   "%tmp_1_1 = fmul float %conv_1_weights_1_0_l, %conv_input_load_1" [conv/conv_1.cpp:26]   --->   Operation 105 'fmul' 'tmp_1_1' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/2] (3.25ns)   --->   "%conv_input_load_2 = load float* %conv_input_addr_2, align 4" [conv/conv_1.cpp:26]   --->   Operation 106 'load' 'conv_input_load_2' <Predicate = (!icmp_ln8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>

State 5 <SV = 4> <Delay = 22.5>
ST_5 : Operation 107 [1/2] (22.5ns)   --->   "%w_sum_3 = fadd float %select_ln26_1, %tmp_s" [conv/conv_1.cpp:26]   --->   Operation 107 'fadd' 'w_sum_3' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/2] (12.3ns)   --->   "%tmp_1_1 = fmul float %conv_1_weights_1_0_l, %conv_input_load_1" [conv/conv_1.cpp:26]   --->   Operation 108 'fmul' 'tmp_1_1' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [2/2] (12.3ns)   --->   "%tmp_1_2 = fmul float %conv_1_weights_2_0_l, %conv_input_load_2" [conv/conv_1.cpp:26]   --->   Operation 109 'fmul' 'tmp_1_2' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 22.5>
ST_6 : Operation 110 [2/2] (22.5ns)   --->   "%w_sum_3_1 = fadd float %w_sum_3, %tmp_1_1" [conv/conv_1.cpp:26]   --->   Operation 110 'fadd' 'w_sum_3_1' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 111 [1/2] (12.3ns)   --->   "%tmp_1_2 = fmul float %conv_1_weights_2_0_l, %conv_input_load_2" [conv/conv_1.cpp:26]   --->   Operation 111 'fmul' 'tmp_1_2' <Predicate = (!icmp_ln8)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 22.5>
ST_7 : Operation 112 [1/2] (22.5ns)   --->   "%w_sum_3_1 = fadd float %w_sum_3, %tmp_1_1" [conv/conv_1.cpp:26]   --->   Operation 112 'fadd' 'w_sum_3_1' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 113 [1/1] (1.56ns)   --->   "%wr = add i2 %select_ln26, 1" [conv/conv_1.cpp:18]   --->   Operation 113 'add' 'wr' <Predicate = (!icmp_ln8)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 22.5>
ST_8 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i5 %select_ln35_1 to i10" [conv/conv_1.cpp:35]   --->   Operation 114 'zext' 'zext_ln35' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 115 [1/1] (3.36ns) (grouped into DSP with root node add_ln35)   --->   "%mul_ln35 = mul i10 %zext_ln35, 26" [conv/conv_1.cpp:35]   --->   Operation 115 'mul' 'mul_ln35' <Predicate = (!icmp_ln8)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i5 %select_ln35_5 to i10" [conv/conv_1.cpp:35]   --->   Operation 116 'zext' 'zext_ln35_2' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 117 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln35 = add i10 %zext_ln35_2, %mul_ln35" [conv/conv_1.cpp:35]   --->   Operation 117 'add' 'add_ln35' <Predicate = (!icmp_ln8)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_1 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln35, i5 0)" [conv/conv_1.cpp:26]   --->   Operation 118 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln26 = zext i15 %tmp_1 to i16" [conv/conv_1.cpp:26]   --->   Operation 119 'zext' 'zext_ln26' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln26_2 = zext i6 %select_ln26_2 to i16" [conv/conv_1.cpp:26]   --->   Operation 120 'zext' 'zext_ln26_2' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%zext_ln26_3 = zext i6 %select_ln26_2 to i64" [conv/conv_1.cpp:26]   --->   Operation 121 'zext' 'zext_ln26_3' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (1.94ns)   --->   "%add_ln35_1 = add i16 %zext_ln26_2, %zext_ln26" [conv/conv_1.cpp:35]   --->   Operation 122 'add' 'add_ln35_1' <Predicate = (!icmp_ln8)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln35_5 = zext i16 %add_ln35_1 to i64" [conv/conv_1.cpp:35]   --->   Operation 123 'zext' 'zext_ln35_5' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 124 [1/1] (0.00ns)   --->   "%conv_out_addr = getelementptr [21632 x float]* %conv_out, i64 0, i64 %zext_ln35_5" [conv/conv_1.cpp:35]   --->   Operation 124 'getelementptr' 'conv_out_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 125 [2/2] (22.5ns)   --->   "%w_sum_3_2 = fadd float %w_sum_3_1, %tmp_1_2" [conv/conv_1.cpp:26]   --->   Operation 125 'fadd' 'w_sum_3_2' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 126 [1/1] (0.95ns)   --->   "%icmp_ln18_1 = icmp eq i2 %wr, -1" [conv/conv_1.cpp:18]   --->   Operation 126 'icmp' 'icmp_ln18_1' <Predicate = (!icmp_ln8)> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 127 [1/1] (0.00ns)   --->   "br i1 %icmp_ln18_1, label %ifTrue, label %ifFalse" [conv/conv_1.cpp:18]   --->   Operation 127 'br' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%conv_1_bias_addr = getelementptr inbounds [32 x float]* @conv_1_bias, i64 0, i64 %zext_ln26_3" [conv/conv_1.cpp:31]   --->   Operation 128 'getelementptr' 'conv_1_bias_addr' <Predicate = (icmp_ln18_1)> <Delay = 0.00>
ST_8 : Operation 129 [2/2] (3.25ns)   --->   "%conv_1_bias_load = load float* %conv_1_bias_addr, align 4" [conv/conv_1.cpp:31]   --->   Operation 129 'load' 'conv_1_bias_load' <Predicate = (icmp_ln18_1)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>

State 9 <SV = 8> <Delay = 22.5>
ST_9 : Operation 130 [1/2] (22.5ns)   --->   "%w_sum_3_2 = fadd float %w_sum_3_1, %tmp_1_2" [conv/conv_1.cpp:26]   --->   Operation 130 'fadd' 'w_sum_3_2' <Predicate = (!icmp_ln8)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 131 [1/2] (3.25ns)   --->   "%conv_1_bias_load = load float* %conv_1_bias_addr, align 4" [conv/conv_1.cpp:31]   --->   Operation 131 'load' 'conv_1_bias_load' <Predicate = (icmp_ln18_1)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 32> <ROM>

State 10 <SV = 9> <Delay = 0.00>

State 11 <SV = 10> <Delay = 22.5>
ST_11 : Operation 132 [2/2] (22.5ns)   --->   "%w_sum = fadd float %w_sum_3_2, %conv_1_bias_load" [conv/conv_1.cpp:31]   --->   Operation 132 'fadd' 'w_sum' <Predicate = (icmp_ln18_1)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 33.5>
ST_12 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([33 x i8]* @Row_Loop_Filter1_Loo)"   --->   Operation 133 'specloopname' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 134 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64896, i64 64896, i64 64896) nounwind"   --->   Operation 134 'speclooptripcount' 'empty' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([33 x i8]* @Col_Loop_Filter1_Loo)"   --->   Operation 135 'specloopname' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([24 x i8]* @Filter1_Loop_W_Row_L)"   --->   Operation 136 'specloopname' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str3) nounwind" [conv/conv_1.cpp:19]   --->   Operation 137 'specloopname' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str3) nounwind" [conv/conv_1.cpp:19]   --->   Operation 138 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str4) nounwind" [conv/conv_1.cpp:20]   --->   Operation 139 'specpipeline' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 140 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str3, i32 %tmp_4) nounwind" [conv/conv_1.cpp:30]   --->   Operation 140 'specregionend' 'empty_4' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_12 : Operation 141 [1/2] (22.5ns)   --->   "%w_sum = fadd float %w_sum_3_2, %conv_1_bias_load" [conv/conv_1.cpp:31]   --->   Operation 141 'fadd' 'w_sum' <Predicate = (icmp_ln18_1)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 142 [1/1] (0.00ns)   --->   "%bitcast_ln34 = bitcast float %w_sum to i32" [conv/conv_1.cpp:34]   --->   Operation 142 'bitcast' 'bitcast_ln34' <Predicate = (icmp_ln18_1)> <Delay = 0.00>
ST_12 : Operation 143 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln34, i32 23, i32 30)" [conv/conv_1.cpp:34]   --->   Operation 143 'partselect' 'tmp' <Predicate = (icmp_ln18_1)> <Delay = 0.00>
ST_12 : Operation 144 [1/1] (0.00ns)   --->   "%trunc_ln34 = trunc i32 %bitcast_ln34 to i23" [conv/conv_1.cpp:34]   --->   Operation 144 'trunc' 'trunc_ln34' <Predicate = (icmp_ln18_1)> <Delay = 0.00>
ST_12 : Operation 145 [1/1] (1.55ns)   --->   "%icmp_ln34 = icmp ne i8 %tmp, -1" [conv/conv_1.cpp:34]   --->   Operation 145 'icmp' 'icmp_ln34' <Predicate = (icmp_ln18_1)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 146 [1/1] (2.44ns)   --->   "%icmp_ln34_1 = icmp eq i23 %trunc_ln34, 0" [conv/conv_1.cpp:34]   --->   Operation 146 'icmp' 'icmp_ln34_1' <Predicate = (icmp_ln18_1)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%or_ln34 = or i1 %icmp_ln34_1, %icmp_ln34" [conv/conv_1.cpp:34]   --->   Operation 147 'or' 'or_ln34' <Predicate = (icmp_ln18_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 148 [1/1] (6.78ns)   --->   "%tmp_5 = fcmp ogt float %w_sum, 0.000000e+00" [conv/conv_1.cpp:34]   --->   Operation 148 'fcmp' 'tmp_5' <Predicate = (icmp_ln18_1)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%and_ln34 = and i1 %or_ln34, %tmp_5" [conv/conv_1.cpp:34]   --->   Operation 149 'and' 'and_ln34' <Predicate = (icmp_ln18_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 150 [1/1] (0.97ns) (out node of the LUT)   --->   "%w_sum_1 = select i1 %and_ln34, float %w_sum, float 0.000000e+00" [conv/conv_1.cpp:34]   --->   Operation 150 'select' 'w_sum_1' <Predicate = (icmp_ln18_1)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 151 [1/1] (3.25ns)   --->   "store float %w_sum_1, float* %conv_out_addr, align 4" [conv/conv_1.cpp:35]   --->   Operation 151 'store' <Predicate = (icmp_ln18_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_12 : Operation 152 [1/1] (0.00ns)   --->   "br label %ifFalse"   --->   Operation 152 'br' <Predicate = (icmp_ln18_1)> <Delay = 0.00>

State 13 <SV = 2> <Delay = 0.00>
ST_13 : Operation 153 [1/1] (0.00ns)   --->   "ret void" [conv/conv_1.cpp:42]   --->   Operation 153 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten47', conv/conv_1.cpp:8) with incoming values : ('add_ln8', conv/conv_1.cpp:8) [12]  (1.77 ns)

 <State 2>: 14.3ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten14', conv/conv_1.cpp:11) with incoming values : ('select_ln11', conv/conv_1.cpp:11) [14]  (0 ns)
	'icmp' operation ('icmp_ln11', conv/conv_1.cpp:11) [29]  (1.99 ns)
	'xor' operation ('xor_ln35', conv/conv_1.cpp:35) [36]  (0.978 ns)
	'and' operation ('and_ln35', conv/conv_1.cpp:35) [38]  (0 ns)
	'and' operation ('and_ln35_2', conv/conv_1.cpp:35) [59]  (0.978 ns)
	'or' operation ('or_ln26', conv/conv_1.cpp:26) [62]  (0 ns)
	'or' operation ('or_ln26_1', conv/conv_1.cpp:26) [63]  (0.978 ns)
	'select' operation ('select_ln26', conv/conv_1.cpp:26) [64]  (0.993 ns)
	'add' operation ('add_ln26', conv/conv_1.cpp:26) [84]  (1.78 ns)
	'sub' operation ('sub_ln26', conv/conv_1.cpp:26) [89]  (1.73 ns)
	'add' operation ('add_ln26_7', conv/conv_1.cpp:26) [90]  (1.64 ns)
	'getelementptr' operation ('conv_input_addr', conv/conv_1.cpp:26) [92]  (0 ns)
	'load' operation ('conv_input_load', conv/conv_1.cpp:26) on array 'conv_input' [100]  (3.25 ns)

 <State 3>: 15.6ns
The critical path consists of the following:
	'load' operation ('conv_1_weights_0_0_l', conv/conv_1.cpp:26) on array 'conv_1_weights_0_0' [99]  (3.25 ns)
	'fmul' operation ('tmp_s', conv/conv_1.cpp:26) [101]  (12.4 ns)

 <State 4>: 35ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', conv/conv_1.cpp:26) [101]  (12.4 ns)
	'fadd' operation ('w_sum_3', conv/conv_1.cpp:26) [102]  (22.6 ns)

 <State 5>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3', conv/conv_1.cpp:26) [102]  (22.6 ns)

 <State 6>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_1', conv/conv_1.cpp:26) [106]  (22.6 ns)

 <State 7>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_1', conv/conv_1.cpp:26) [106]  (22.6 ns)

 <State 8>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_2', conv/conv_1.cpp:26) [110]  (22.6 ns)

 <State 9>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum_3_2', conv/conv_1.cpp:26) [110]  (22.6 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum', conv/conv_1.cpp:31) [118]  (22.6 ns)

 <State 12>: 33.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum', conv/conv_1.cpp:31) [118]  (22.6 ns)
	'fcmp' operation ('tmp_5', conv/conv_1.cpp:34) [125]  (6.79 ns)
	'and' operation ('and_ln34', conv/conv_1.cpp:34) [126]  (0 ns)
	'select' operation ('w_sum', conv/conv_1.cpp:34) [127]  (0.978 ns)
	'store' operation ('store_ln35', conv/conv_1.cpp:35) of variable 'w_sum', conv/conv_1.cpp:34 on array 'conv_out' [128]  (3.25 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
