// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_5_H__
#define __conv_conv_weights_5_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_5_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_5_ram) {
        ram[0] = "0b00111110100100000101010110000110";
        ram[1] = "0b00111101001111001010110000000001";
        ram[2] = "0b10111101100011110110101011011100";
        ram[3] = "0b00111100110111000010101111110111";
        ram[4] = "0b10111101010011010000101101111101";
        ram[5] = "0b00111110000011100010011110111010";
        ram[6] = "0b00111111000010101110101111010101";
        ram[7] = "0b10111110001101110011010110101101";
        ram[8] = "0b10111110111001101001001100010010";
        ram[9] = "0b10111110001101010111000111000010";
        ram[10] = "0b10111110001000000010110010011110";
        ram[11] = "0b00111110101110110001111101111100";
        ram[12] = "0b10111110100011001000010000001100";
        ram[13] = "0b10111110100001000001001110110000";
        ram[14] = "0b10111110010101100010010110001100";
        ram[15] = "0b10111110100010101010110011010010";
        ram[16] = "0b10111110010000110000001000010001";
        ram[17] = "0b00111101110111011001010001001100";
        ram[18] = "0b00111100101101011000011100100101";
        ram[19] = "0b10111110100100101100010000101101";
        ram[20] = "0b10111100101011011111001011010100";
        ram[21] = "0b10111110100011001011001111010010";
        ram[22] = "0b10111101011000100001101001101011";
        ram[23] = "0b10111100100011001001111010100011";
        ram[24] = "0b10111101000101100110011100111010";
        ram[25] = "0b10111110010100001010011111000000";
        ram[26] = "0b00111110110111100110010111000010";
        ram[27] = "0b00111110100001010101000001111010";
        ram[28] = "0b10111110010111000110010100100110";
        ram[29] = "0b10111111000100000011101011111010";
        ram[30] = "0b10111110000000000110011110000001";
        ram[31] = "0b10111101110010010111001101000011";
        ram[32] = "0b10111101110001100100001111010011";
        ram[33] = "0b00111110101000001100011111011011";
        ram[34] = "0b10111110110110011101101010010111";
        ram[35] = "0b10111111010101100100011011000000";
        ram[36] = "0b10111110110001010000000000010010";
        ram[37] = "0b10111110100110100000011110110001";
        ram[38] = "0b10111101100011111001110000011101";
        ram[39] = "0b10111110101101010100011001101101";
        ram[40] = "0b00111110011111010110001010101000";
        ram[41] = "0b10111110110001101000111000100100";
        ram[42] = "0b00111110100001000001011000110110";
        ram[43] = "0b00111110010000100111000100001100";
        ram[44] = "0b00111100101011010010101111010010";
        ram[45] = "0b10111110111000110000111011001111";
        ram[46] = "0b10111100010101001110000101010100";
        ram[47] = "0b10111110001111011111011001001011";
        ram[48] = "0b10111101000110111101010010000110";
        ram[49] = "0b10111101001001001011111101011000";
        ram[50] = "0b00111110100101000100111000000100";
        ram[51] = "0b10111110011011000000001100100100";
        ram[52] = "0b10111101111110111011101110101001";
        ram[53] = "0b00111101011011000101011111001010";
        ram[54] = "0b10111101010100101110000011110000";
        ram[55] = "0b00111110100001101010101110001100";
        ram[56] = "0b10111101100001100001100111101100";
        ram[57] = "0b00111100100000111110100110100111";
        ram[58] = "0b10111100101111011100001101101111";
        ram[59] = "0b10111111000010011110100000001101";
        ram[60] = "0b10111110111001101101011100110101";
        ram[61] = "0b10111110000011111110011001101100";
        ram[62] = "0b10111110100000001001111100111000";
        ram[63] = "0b10111101000010011110001110000001";
        ram[64] = "0b00111110101010000001110001110010";
        ram[65] = "0b10111110000100111101100001110000";
        ram[66] = "0b10111110111011010010101000101011";
        ram[67] = "0b10111110101011011101011001101010";
        ram[68] = "0b10111101101111111111011111110111";
        ram[69] = "0b10111111000100001100100100111110";
        ram[70] = "0b10111100110101100010111010001101";
        ram[71] = "0b00111101010111000001011111010011";
        ram[72] = "0b10111110101001001100010011001001";
        ram[73] = "0b10111110000010001001101010011101";
        ram[74] = "0b10111110101001001100001011110010";
        ram[75] = "0b00111110100110010101101011101100";
        ram[76] = "0b10111111001011111101110001010111";
        ram[77] = "0b10111111001011000000100011000001";
        ram[78] = "0b10111100010011101000111000110101";
        ram[79] = "0b10111110000011001001110001001000";
        ram[80] = "0b00111111000011010110111110110110";
        ram[81] = "0b00111101001101100111011110000010";
        ram[82] = "0b10111110100100011010011001110001";
        ram[83] = "0b00111101010110010100001001101110";
        ram[84] = "0b10111111000000000100110000011100";
        ram[85] = "0b10111110110011011010011110001001";
        ram[86] = "0b10111101111110001010101000101011";
        ram[87] = "0b00111110100000101100010110101100";
        ram[88] = "0b10111100110111100011000111100111";
        ram[89] = "0b10111110100010110110011111011010";
        ram[90] = "0b10111100110101101010000110100011";
        ram[91] = "0b00111110010111100111010000010111";
        ram[92] = "0b10111110010001010100000110010101";
        ram[93] = "0b10111111001000100110011111110111";
        ram[94] = "0b10111110101001100011101110010110";
        ram[95] = "0b10111110010101111000000101111010";
        ram[96] = "0b00111110110011101101100000100100";
        ram[97] = "0b10111101010001000001010111001001";
        ram[98] = "0b10111101101111100001010110100110";
        ram[99] = "0b00111111000001101001011001101011";
        ram[100] = "0b10111101100010010100011110111110";
        ram[101] = "0b00111100111010001011011011011111";
        ram[102] = "0b00111101101011110100000110001001";
        ram[103] = "0b00111101000010101011100000110110";
        ram[104] = "0b00111110000111011111101100011110";
        ram[105] = "0b00111100000111010110000111101011";
        ram[106] = "0b00111101101011010011101111001100";
        ram[107] = "0b10111101101110001101010100111100";
        ram[108] = "0b10111110010101001000001110000101";
        ram[109] = "0b10111100111001110011110010100100";
        ram[110] = "0b00111110001001011100011101011010";
        ram[111] = "0b00111110111101001011100011000000";
        ram[112] = "0b00111100000010100110001111101000";
        ram[113] = "0b10111110001111000011100101001010";
        ram[114] = "0b00111100101111110011101110100000";
        ram[115] = "0b00111110001010010010011000100001";
        ram[116] = "0b10111110111101111111001000010111";
        ram[117] = "0b10111110011000101000100101010100";
        ram[118] = "0b10111101101111101010011100110000";
        ram[119] = "0b00111110101001000011001000110000";
        ram[120] = "0b00111110001001110100000010000011";
        ram[121] = "0b10111110111000011001101000000101";
        ram[122] = "0b10111110001010110100100011100000";
        ram[123] = "0b00111110100100111010001000101110";
        ram[124] = "0b10111110100100100001100000100000";
        ram[125] = "0b10111111000011011001010010000001";
        ram[126] = "0b10111101001110111111111000111111";
        ram[127] = "0b00111110110111011111011111100001";
        ram[128] = "0b10111110101010100110011101110011";
        ram[129] = "0b10111110100001100110001011111001";
        ram[130] = "0b10111110110110011100110101011001";
        ram[131] = "0b10111101011110011001010010100010";
        ram[132] = "0b10111110111001011110010101000011";
        ram[133] = "0b10111110100011100100101010111000";
        ram[134] = "0b00111101100111001111011110100100";
        ram[135] = "0b00111110011111101010101010001111";
        ram[136] = "0b10111110011111100000001101001110";
        ram[137] = "0b10111110001010100000110100010100";
        ram[138] = "0b00111100011011001010011101101000";
        ram[139] = "0b00111110011110011010101111100100";
        ram[140] = "0b10111110100010010010101111000011";
        ram[141] = "0b10111111000000100110101101110110";
        ram[142] = "0b10111110011000001101111100101010";
        ram[143] = "0b00111111001101010001110001010101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_5) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_5_ram* meminst;


SC_CTOR(conv_conv_weights_5) {
meminst = new conv_conv_weights_5_ram("conv_conv_weights_5_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_5() {
    delete meminst;
}


};//endmodule
#endif
