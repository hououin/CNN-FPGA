// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_conv_weights_1_H__
#define __conv_conv_weights_1_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_conv_weights_1_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 144;
  static const unsigned AddressWidth = 8;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_conv_weights_1_ram) {
        ram[0] = "0b10111101000111000001111001000111";
        ram[1] = "0b10111101101111101100101010010110";
        ram[2] = "0b00111110010011011000110101111111";
        ram[3] = "0b10111101111000010011000010111101";
        ram[4] = "0b10111100000100000101101111000111";
        ram[5] = "0b00111110001011100110001010011100";
        ram[6] = "0b10111101101101110111111000101110";
        ram[7] = "0b10111100100010010011000101001011";
        ram[8] = "0b00111101110101000110010010111110";
        ram[9] = "0b00111110000010001000010001011111";
        ram[10] = "0b10111110111010101100100110001101";
        ram[11] = "0b10111110011001011110100110011000";
        ram[12] = "0b00111110011110100100100010101000";
        ram[13] = "0b10111110001010010001101110101010";
        ram[14] = "0b10111100010000101011001001010110";
        ram[15] = "0b10111100101100100101100100100010";
        ram[16] = "0b10111101111001100101101010101001";
        ram[17] = "0b10111101010011111110110010100111";
        ram[18] = "0b10111101010100000010110110001110";
        ram[19] = "0b00111110001000010100010111010100";
        ram[20] = "0b00111110000000001011100011110010";
        ram[21] = "0b00111101011100100000111101011011";
        ram[22] = "0b10111110000101001101000001010110";
        ram[23] = "0b00111101111001110010001110101010";
        ram[24] = "0b10111101100101110111010100110000";
        ram[25] = "0b10111101111000010111111001101001";
        ram[26] = "0b10111110001010111111100011011001";
        ram[27] = "0b10111110111011000000011101000001";
        ram[28] = "0b10111101010111111001110101000010";
        ram[29] = "0b00111100100100001010011111100001";
        ram[30] = "0b00111110101011011101010000010101";
        ram[31] = "0b00111101110010110011011100000111";
        ram[32] = "0b10111101001001001101001000010000";
        ram[33] = "0b00111101101100000000110110100101";
        ram[34] = "0b00111110000110011011000000010100";
        ram[35] = "0b00111101111000110100000110111001";
        ram[36] = "0b00111101010100000001101100010000";
        ram[37] = "0b00111110011001010010111100000101";
        ram[38] = "0b00111110000111100110110010011010";
        ram[39] = "0b00111101100011011100110001110100";
        ram[40] = "0b10111100010101011010001100000001";
        ram[41] = "0b10111110101111110100000001011110";
        ram[42] = "0b10111101100110101010011011001011";
        ram[43] = "0b10111110101000100000101011011010";
        ram[44] = "0b10111101110010111000000110111000";
        ram[45] = "0b00111101111000010000101100100001";
        ram[46] = "0b10111101111011101000111010101011";
        ram[47] = "0b10111101001100111001100001001000";
        ram[48] = "0b00111101111010000101011010001101";
        ram[49] = "0b10111110011011100011110100111101";
        ram[50] = "0b10111110001111010011111110100110";
        ram[51] = "0b00111101101001001001110100010010";
        ram[52] = "0b00111101100101110000101010010100";
        ram[53] = "0b10111100011000011000101011001011";
        ram[54] = "0b00111110011110110101111110111010";
        ram[55] = "0b00111101000111100000001010101110";
        ram[56] = "0b00111101100101101011101101010100";
        ram[57] = "0b00111101101110010001001010110111";
        ram[58] = "0b00111101000001000010100111011110";
        ram[59] = "0b00111101101000111011110101010000";
        ram[60] = "0b00111101000111100100100111111110";
        ram[61] = "0b10111110010100000000110010111111";
        ram[62] = "0b00111110010011111100001010000100";
        ram[63] = "0b10111100111100110011110011001000";
        ram[64] = "0b10111101011100010111000000110011";
        ram[65] = "0b10111100011011011111011111101101";
        ram[66] = "0b00111101110111111011001110001000";
        ram[67] = "0b10111101101101100000010101101100";
        ram[68] = "0b00111100101000010110101011010101";
        ram[69] = "0b10111011111010011001101100000001";
        ram[70] = "0b00111110010101001011000010010001";
        ram[71] = "0b00111110010011010011010111011111";
        ram[72] = "0b00111101111111101000101000011110";
        ram[73] = "0b10111110100001101010001101011000";
        ram[74] = "0b10111100100100000010100011111001";
        ram[75] = "0b00111100011010110000111100011010";
        ram[76] = "0b00111101000110000100011100101111";
        ram[77] = "0b10111100010001101001100000010010";
        ram[78] = "0b00111110010011100011011000101110";
        ram[79] = "0b00111100111101110100011100000010";
        ram[80] = "0b10111110001010001110111111011011";
        ram[81] = "0b10111101101111110010010001101011";
        ram[82] = "0b00111110001010101111001000111001";
        ram[83] = "0b00111110000111010001100011000101";
        ram[84] = "0b00111110100111100000010010000000";
        ram[85] = "0b00111101011100100010111000000011";
        ram[86] = "0b00111101000111100011101011001101";
        ram[87] = "0b00111101110010110010101010000011";
        ram[88] = "0b10111101010101110000100100111000";
        ram[89] = "0b00111100101100001010101101100101";
        ram[90] = "0b10111101101010110101110100010000";
        ram[91] = "0b00111101111110101000010001110101";
        ram[92] = "0b10111110000110100110111000011010";
        ram[93] = "0b00111110010111000010110000001101";
        ram[94] = "0b10111110110011000011001111101101";
        ram[95] = "0b00111101101110010001110000111001";
        ram[96] = "0b10111110001001101010101111011011";
        ram[97] = "0b10111101110010011010001011001110";
        ram[98] = "0b10111100000110000100001000100111";
        ram[99] = "0b00111101100011101101100011111011";
        ram[100] = "0b10111110101111010111111001000111";
        ram[101] = "0b10111110101001101001010100010110";
        ram[102] = "0b00111101100101101100100011111101";
        ram[103] = "0b10111110011101001000010011111100";
        ram[104] = "0b10111101100011100011110011010101";
        ram[105] = "0b10111110001110000010010100010100";
        ram[106] = "0b00111101011100011010111001111011";
        ram[107] = "0b10111110000010111110010011000110";
        ram[108] = "0b00111100111011001101000011000001";
        ram[109] = "0b10111101110100111111000000101010";
        ram[110] = "0b00111101011000010001001100011110";
        ram[111] = "0b00111101000010110011000000011010";
        ram[112] = "0b10111110000001001011000000011000";
        ram[113] = "0b10111110000011010100001011100101";
        ram[114] = "0b00111110000011001001101100101011";
        ram[115] = "0b10111101000011011101111111110010";
        ram[116] = "0b10111101000110000000001000001110";
        ram[117] = "0b10111100001100111000111100000011";
        ram[118] = "0b10111100100111101111001001000101";
        ram[119] = "0b10111101111100001001010101100100";
        ram[120] = "0b10111101111001010100001100011000";
        ram[121] = "0b00111101101001101110110011101111";
        ram[122] = "0b10111101101100101111100001001100";
        ram[123] = "0b00111101111010101110010001010111";
        ram[124] = "0b00111100111000010011000110011100";
        ram[125] = "0b10111101100011101110101100101000";
        ram[126] = "0b00111100100010001011101010111001";
        ram[127] = "0b00111100100110110001011000110001";
        ram[128] = "0b10111101110001011111100101001111";
        ram[129] = "0b10111101110110110101010101011010";
        ram[130] = "0b10111110010011000101001100110011";
        ram[131] = "0b00111101010011111110010111010101";
        ram[132] = "0b00111110001001110011101101010101";
        ram[133] = "0b10111011101001111100001100111100";
        ram[134] = "0b10111100100010100111010110011100";
        ram[135] = "0b10111110110101001001000011011100";
        ram[136] = "0b00111110000010001011010001011000";
        ram[137] = "0b00111110010110001001110111110001";
        ram[138] = "0b00111101110100011101100101010110";
        ram[139] = "0b00111110000010101010101000000110";
        ram[140] = "0b10111101010100001100110111000011";
        ram[141] = "0b00111101000001101100111001100100";
        ram[142] = "0b10111101100011010111111111101011";
        ram[143] = "0b00111110001011101111001010010101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_conv_weights_1) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 144;
static const unsigned AddressWidth = 8;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_conv_weights_1_ram* meminst;


SC_CTOR(conv_conv_weights_1) {
meminst = new conv_conv_weights_1_ram("conv_conv_weights_1_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_conv_weights_1() {
    delete meminst;
}


};//endmodule
#endif
