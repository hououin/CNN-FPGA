// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> conv::ap_ST_fsm_state1 = "1";
const sc_lv<37> conv::ap_ST_fsm_state2 = "10";
const sc_lv<37> conv::ap_ST_fsm_state3 = "100";
const sc_lv<37> conv::ap_ST_fsm_state4 = "1000";
const sc_lv<37> conv::ap_ST_fsm_state5 = "10000";
const sc_lv<37> conv::ap_ST_fsm_state6 = "100000";
const sc_lv<37> conv::ap_ST_fsm_state7 = "1000000";
const sc_lv<37> conv::ap_ST_fsm_state8 = "10000000";
const sc_lv<37> conv::ap_ST_fsm_state9 = "100000000";
const sc_lv<37> conv::ap_ST_fsm_state10 = "1000000000";
const sc_lv<37> conv::ap_ST_fsm_state11 = "10000000000";
const sc_lv<37> conv::ap_ST_fsm_state12 = "100000000000";
const sc_lv<37> conv::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<37> conv::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<37> conv::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<37> conv::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<37> conv::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<32> conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv::ap_const_lv32_6 = "110";
const sc_lv<32> conv::ap_const_lv32_A = "1010";
const sc_lv<32> conv::ap_const_lv32_E = "1110";
const sc_lv<32> conv::ap_const_lv32_12 = "10010";
const sc_lv<32> conv::ap_const_lv32_13 = "10011";
const sc_lv<32> conv::ap_const_lv32_7 = "111";
const sc_lv<32> conv::ap_const_lv32_B = "1011";
const sc_lv<32> conv::ap_const_lv32_F = "1111";
const sc_lv<32> conv::ap_const_lv32_17 = "10111";
const sc_lv<32> conv::ap_const_lv32_1B = "11011";
const sc_lv<32> conv::ap_const_lv32_23 = "100011";
const sc_lv<32> conv::ap_const_lv32_1 = "1";
const sc_lv<32> conv::ap_const_lv32_2 = "10";
const sc_lv<1> conv::ap_const_lv1_0 = "0";
const sc_lv<32> conv::ap_const_lv32_3 = "11";
const sc_lv<32> conv::ap_const_lv32_4 = "100";
const sc_lv<1> conv::ap_const_lv1_1 = "1";
const sc_lv<32> conv::ap_const_lv32_5 = "101";
const sc_lv<32> conv::ap_const_lv32_9 = "1001";
const sc_lv<32> conv::ap_const_lv32_D = "1101";
const sc_lv<32> conv::ap_const_lv32_11 = "10001";
const sc_lv<32> conv::ap_const_lv32_14 = "10100";
const sc_lv<32> conv::ap_const_lv32_1F = "11111";
const sc_lv<32> conv::ap_const_lv32_20 = "100000";
const sc_lv<4> conv::ap_const_lv4_0 = "0000";
const sc_lv<7> conv::ap_const_lv7_0 = "0000000";
const sc_lv<5> conv::ap_const_lv5_0 = "00000";
const sc_lv<32> conv::ap_const_lv32_24 = "100100";
const sc_lv<2> conv::ap_const_lv2_0 = "00";
const sc_lv<32> conv::ap_const_lv32_8 = "1000";
const sc_lv<32> conv::ap_const_lv32_C = "1100";
const sc_lv<32> conv::ap_const_lv32_10 = "10000";
const sc_lv<32> conv::ap_const_lv32_18 = "11000";
const sc_lv<32> conv::ap_const_lv32_1C = "11100";
const sc_lv<7> conv::ap_const_lv7_B = "1011";
const sc_lv<4> conv::ap_const_lv4_B = "1011";
const sc_lv<4> conv::ap_const_lv4_1 = "1";
const sc_lv<5> conv::ap_const_lv5_10 = "10000";
const sc_lv<5> conv::ap_const_lv5_1 = "1";
const sc_lv<2> conv::ap_const_lv2_3 = "11";
const sc_lv<2> conv::ap_const_lv2_1 = "1";
const sc_lv<8> conv::ap_const_lv8_D = "1101";
const sc_lv<3> conv::ap_const_lv3_0 = "000";
const sc_lv<11> conv::ap_const_lv11_1 = "1";
const sc_lv<11> conv::ap_const_lv11_2 = "10";
const sc_lv<11> conv::ap_const_lv11_3 = "11";
const sc_lv<11> conv::ap_const_lv11_4 = "100";
const sc_lv<11> conv::ap_const_lv11_5 = "101";
const sc_lv<32> conv::ap_const_lv32_1E = "11110";
const sc_lv<8> conv::ap_const_lv8_FF = "11111111";
const sc_lv<23> conv::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> conv::ap_const_lv5_2 = "10";
const bool conv::ap_const_boolean_1 = true;

conv::conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_weights_0_U = new conv_conv_weights_0("conv_weights_0_U");
    conv_weights_0_U->clk(ap_clk);
    conv_weights_0_U->reset(ap_rst);
    conv_weights_0_U->address0(conv_weights_0_address0);
    conv_weights_0_U->ce0(conv_weights_0_ce0);
    conv_weights_0_U->q0(conv_weights_0_q0);
    conv_weights_1_U = new conv_conv_weights_1("conv_weights_1_U");
    conv_weights_1_U->clk(ap_clk);
    conv_weights_1_U->reset(ap_rst);
    conv_weights_1_U->address0(conv_weights_1_address0);
    conv_weights_1_U->ce0(conv_weights_1_ce0);
    conv_weights_1_U->q0(conv_weights_1_q0);
    conv_weights_2_U = new conv_conv_weights_2("conv_weights_2_U");
    conv_weights_2_U->clk(ap_clk);
    conv_weights_2_U->reset(ap_rst);
    conv_weights_2_U->address0(conv_weights_2_address0);
    conv_weights_2_U->ce0(conv_weights_2_ce0);
    conv_weights_2_U->q0(conv_weights_2_q0);
    conv_weights_3_U = new conv_conv_weights_3("conv_weights_3_U");
    conv_weights_3_U->clk(ap_clk);
    conv_weights_3_U->reset(ap_rst);
    conv_weights_3_U->address0(conv_weights_3_address0);
    conv_weights_3_U->ce0(conv_weights_3_ce0);
    conv_weights_3_U->q0(conv_weights_3_q0);
    conv_weights_4_U = new conv_conv_weights_4("conv_weights_4_U");
    conv_weights_4_U->clk(ap_clk);
    conv_weights_4_U->reset(ap_rst);
    conv_weights_4_U->address0(conv_weights_4_address0);
    conv_weights_4_U->ce0(conv_weights_4_ce0);
    conv_weights_4_U->q0(conv_weights_4_q0);
    conv_weights_5_U = new conv_conv_weights_5("conv_weights_5_U");
    conv_weights_5_U->clk(ap_clk);
    conv_weights_5_U->reset(ap_rst);
    conv_weights_5_U->address0(conv_weights_5_address0);
    conv_weights_5_U->ce0(conv_weights_5_ce0);
    conv_weights_5_U->q0(conv_weights_5_q0);
    conv_bias_U = new conv_conv_bias("conv_bias_U");
    conv_bias_U->clk(ap_clk);
    conv_bias_U->reset(ap_rst);
    conv_bias_U->address0(conv_bias_address0);
    conv_bias_U->ce0(conv_bias_ce0);
    conv_bias_U->q0(conv_bias_q0);
    conv_fadd_32ns_32bkb_U1 = new conv_fadd_32ns_32bkb<1,4,32,32,32>("conv_fadd_32ns_32bkb_U1");
    conv_fadd_32ns_32bkb_U1->clk(ap_clk);
    conv_fadd_32ns_32bkb_U1->reset(ap_rst);
    conv_fadd_32ns_32bkb_U1->din0(grp_fu_363_p0);
    conv_fadd_32ns_32bkb_U1->din1(grp_fu_363_p1);
    conv_fadd_32ns_32bkb_U1->ce(ap_var_for_const0);
    conv_fadd_32ns_32bkb_U1->dout(grp_fu_363_p2);
    conv_fmul_32ns_32cud_U2 = new conv_fmul_32ns_32cud<1,2,32,32,32>("conv_fmul_32ns_32cud_U2");
    conv_fmul_32ns_32cud_U2->clk(ap_clk);
    conv_fmul_32ns_32cud_U2->reset(ap_rst);
    conv_fmul_32ns_32cud_U2->din0(grp_fu_370_p0);
    conv_fmul_32ns_32cud_U2->din1(input_r_q0);
    conv_fmul_32ns_32cud_U2->ce(ap_var_for_const0);
    conv_fmul_32ns_32cud_U2->dout(grp_fu_370_p2);
    conv_fmul_32ns_32cud_U3 = new conv_fmul_32ns_32cud<1,2,32,32,32>("conv_fmul_32ns_32cud_U3");
    conv_fmul_32ns_32cud_U3->clk(ap_clk);
    conv_fmul_32ns_32cud_U3->reset(ap_rst);
    conv_fmul_32ns_32cud_U3->din0(conv_weights_5_q0);
    conv_fmul_32ns_32cud_U3->din1(input_r_q1);
    conv_fmul_32ns_32cud_U3->ce(ap_var_for_const0);
    conv_fmul_32ns_32cud_U3->dout(grp_fu_380_p2);
    conv_fcmp_32ns_32dEe_U4 = new conv_fcmp_32ns_32dEe<1,2,32,32,1>("conv_fcmp_32ns_32dEe_U4");
    conv_fcmp_32ns_32dEe_U4->clk(ap_clk);
    conv_fcmp_32ns_32dEe_U4->reset(ap_rst);
    conv_fcmp_32ns_32dEe_U4->din0(grp_fu_363_p2);
    conv_fcmp_32ns_32dEe_U4->din1(ap_var_for_const1);
    conv_fcmp_32ns_32dEe_U4->ce(ap_var_for_const0);
    conv_fcmp_32ns_32dEe_U4->opcode(ap_var_for_const2);
    conv_fcmp_32ns_32dEe_U4->dout(grp_fu_386_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln26_1_fu_591_p2);
    sensitive << ( c_0_reg_294 );
    sensitive << ( zext_ln21_fu_548_p1 );

    SC_METHOD(thread_add_ln26_2_fu_568_p2);
    sensitive << ( sub_ln26_reg_795 );
    sensitive << ( zext_ln26_4_fu_564_p1 );

    SC_METHOD(thread_add_ln26_3_fu_581_p2);
    sensitive << ( zext_ln35_1_reg_777 );
    sensitive << ( tmp_10_cast_fu_573_p3 );

    SC_METHOD(thread_add_ln26_4_fu_601_p2);
    sensitive << ( mul_ln26_reg_800 );
    sensitive << ( zext_ln26_6_fu_597_p1 );

    SC_METHOD(thread_add_ln26_5_fu_647_p2);
    sensitive << ( sub_ln26_1_reg_832 );

    SC_METHOD(thread_add_ln26_6_fu_657_p2);
    sensitive << ( sub_ln26_1_reg_832 );

    SC_METHOD(thread_add_ln26_7_fu_667_p2);
    sensitive << ( sub_ln26_1_reg_832 );

    SC_METHOD(thread_add_ln26_8_fu_677_p2);
    sensitive << ( sub_ln26_1_reg_832 );

    SC_METHOD(thread_add_ln26_fu_532_p2);
    sensitive << ( r_0_reg_270 );
    sensitive << ( zext_ln18_fu_494_p1 );

    SC_METHOD(thread_add_ln35_1_fu_484_p2);
    sensitive << ( zext_ln14_reg_759 );
    sensitive << ( zext_ln35_2_fu_480_p1 );

    SC_METHOD(thread_add_ln35_fu_442_p2);
    sensitive << ( phi_mul_reg_282 );
    sensitive << ( zext_ln35_fu_438_p1 );

    SC_METHOD(thread_add_ln8_fu_408_p2);
    sensitive << ( phi_mul_reg_282 );

    SC_METHOD(thread_and_ln34_fu_723_p2);
    sensitive << ( or_ln34_fu_717_p2 );
    sensitive << ( grp_fu_386_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_414_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln8_fu_414_p2 );

    SC_METHOD(thread_bitcast_ln34_fu_687_p1);
    sensitive << ( reg_402 );

    SC_METHOD(thread_c_fu_432_p2);
    sensitive << ( c_0_reg_294 );

    SC_METHOD(thread_conv_bias_address0);
    sensitive << ( zext_ln26_reg_772 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_conv_bias_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_conv_out_address0);
    sensitive << ( conv_out_addr_reg_782 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_conv_out_ce0);
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_conv_out_d0);
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( and_ln34_fu_723_p2 );

    SC_METHOD(thread_conv_out_we0);
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_conv_weights_0_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln26_5_fu_586_p1 );

    SC_METHOD(thread_conv_weights_0_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_conv_weights_1_address0);
    sensitive << ( zext_ln26_5_reg_818 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_conv_weights_1_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_conv_weights_2_address0);
    sensitive << ( zext_ln26_5_reg_818 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_conv_weights_2_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_conv_weights_3_address0);
    sensitive << ( zext_ln26_5_reg_818 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_conv_weights_3_ce0);
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_conv_weights_4_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln26_5_reg_818 );

    SC_METHOD(thread_conv_weights_4_ce0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_conv_weights_5_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln26_5_reg_818 );

    SC_METHOD(thread_conv_weights_5_ce0);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_f_fu_466_p2);
    sensitive << ( f_0_reg_306 );

    SC_METHOD(thread_grp_fu_363_p0);
    sensitive << ( reg_402 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( w_sum_0_reg_328 );
    sensitive << ( w_sum_1_reg_340 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_363_p1);
    sensitive << ( conv_bias_q0 );
    sensitive << ( reg_397 );
    sensitive << ( tmp_1_4_reg_931 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_1_5_reg_936 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_370_p0);
    sensitive << ( conv_weights_0_q0 );
    sensitive << ( conv_weights_1_q0 );
    sensitive << ( conv_weights_2_q0 );
    sensitive << ( conv_weights_3_q0 );
    sensitive << ( conv_weights_4_q0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_icmp_ln11_fu_426_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_294 );

    SC_METHOD(thread_icmp_ln14_fu_460_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( f_0_reg_306 );

    SC_METHOD(thread_icmp_ln18_fu_498_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( wr_0_reg_317 );

    SC_METHOD(thread_icmp_ln21_fu_552_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( wc_0_reg_352 );

    SC_METHOD(thread_icmp_ln34_1_fu_711_p2);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( trunc_ln34_fu_701_p1 );

    SC_METHOD(thread_icmp_ln34_fu_705_p2);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( tmp_fu_691_p4 );

    SC_METHOD(thread_icmp_ln8_fu_414_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_270 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( zext_ln26_8_fu_632_p1 );
    sensitive << ( zext_ln26_9_fu_642_p1 );
    sensitive << ( zext_ln26_10_fu_652_p1 );
    sensitive << ( zext_ln26_11_fu_662_p1 );
    sensitive << ( zext_ln26_12_fu_672_p1 );

    SC_METHOD(thread_input_r_address1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( zext_ln26_13_fu_682_p1 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_input_r_ce1);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_mul_ln26_fu_542_p0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( mul_ln26_fu_542_p00 );

    SC_METHOD(thread_mul_ln26_fu_542_p00);
    sensitive << ( add_ln26_fu_532_p2 );

    SC_METHOD(thread_mul_ln26_fu_542_p2);
    sensitive << ( mul_ln26_fu_542_p0 );

    SC_METHOD(thread_or_ln26_fu_637_p2);
    sensitive << ( sub_ln26_1_reg_832 );

    SC_METHOD(thread_or_ln34_fu_717_p2);
    sensitive << ( icmp_ln34_1_fu_711_p2 );
    sensitive << ( icmp_ln34_fu_705_p2 );

    SC_METHOD(thread_p_shl1_cast_fu_606_p3);
    sensitive << ( add_ln26_4_fu_601_p2 );

    SC_METHOD(thread_r_fu_420_p2);
    sensitive << ( r_0_reg_270 );

    SC_METHOD(thread_sub_ln26_1_fu_626_p2);
    sensitive << ( p_shl1_cast_fu_606_p3 );
    sensitive << ( zext_ln26_7_fu_622_p1 );

    SC_METHOD(thread_sub_ln26_fu_526_p2);
    sensitive << ( zext_ln26_2_fu_522_p1 );
    sensitive << ( zext_ln26_1_fu_510_p1 );

    SC_METHOD(thread_tmp_10_cast_fu_573_p3);
    sensitive << ( add_ln26_2_fu_568_p2 );

    SC_METHOD(thread_tmp_6_fu_448_p3);
    sensitive << ( add_ln35_fu_442_p2 );

    SC_METHOD(thread_tmp_7_fu_614_p3);
    sensitive << ( add_ln26_4_fu_601_p2 );

    SC_METHOD(thread_tmp_8_fu_514_p3);
    sensitive << ( wr_0_reg_317 );

    SC_METHOD(thread_tmp_fu_691_p4);
    sensitive << ( bitcast_ln34_fu_687_p1 );

    SC_METHOD(thread_trunc_ln34_fu_701_p1);
    sensitive << ( bitcast_ln34_fu_687_p1 );

    SC_METHOD(thread_wc_fu_558_p2);
    sensitive << ( wc_0_reg_352 );

    SC_METHOD(thread_wr_fu_504_p2);
    sensitive << ( wr_0_reg_317 );

    SC_METHOD(thread_zext_ln14_fu_456_p1);
    sensitive << ( tmp_6_fu_448_p3 );

    SC_METHOD(thread_zext_ln18_fu_494_p1);
    sensitive << ( wr_0_reg_317 );

    SC_METHOD(thread_zext_ln21_fu_548_p1);
    sensitive << ( wc_0_reg_352 );

    SC_METHOD(thread_zext_ln26_10_fu_652_p1);
    sensitive << ( add_ln26_5_fu_647_p2 );

    SC_METHOD(thread_zext_ln26_11_fu_662_p1);
    sensitive << ( add_ln26_6_fu_657_p2 );

    SC_METHOD(thread_zext_ln26_12_fu_672_p1);
    sensitive << ( add_ln26_7_fu_667_p2 );

    SC_METHOD(thread_zext_ln26_13_fu_682_p1);
    sensitive << ( add_ln26_8_fu_677_p2 );

    SC_METHOD(thread_zext_ln26_1_fu_510_p1);
    sensitive << ( wr_0_reg_317 );

    SC_METHOD(thread_zext_ln26_2_fu_522_p1);
    sensitive << ( tmp_8_fu_514_p3 );

    SC_METHOD(thread_zext_ln26_4_fu_564_p1);
    sensitive << ( wc_0_reg_352 );

    SC_METHOD(thread_zext_ln26_5_fu_586_p1);
    sensitive << ( add_ln26_3_fu_581_p2 );

    SC_METHOD(thread_zext_ln26_6_fu_597_p1);
    sensitive << ( add_ln26_1_fu_591_p2 );

    SC_METHOD(thread_zext_ln26_7_fu_622_p1);
    sensitive << ( tmp_7_fu_614_p3 );

    SC_METHOD(thread_zext_ln26_8_fu_632_p1);
    sensitive << ( sub_ln26_1_fu_626_p2 );

    SC_METHOD(thread_zext_ln26_9_fu_642_p1);
    sensitive << ( or_ln26_fu_637_p2 );

    SC_METHOD(thread_zext_ln26_fu_472_p1);
    sensitive << ( f_0_reg_306 );

    SC_METHOD(thread_zext_ln35_1_fu_476_p1);
    sensitive << ( f_0_reg_306 );

    SC_METHOD(thread_zext_ln35_2_fu_480_p1);
    sensitive << ( f_0_reg_306 );

    SC_METHOD(thread_zext_ln35_3_fu_489_p1);
    sensitive << ( add_ln35_1_fu_484_p2 );

    SC_METHOD(thread_zext_ln35_fu_438_p1);
    sensitive << ( c_0_reg_294 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln11_fu_426_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln14_fu_460_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln18_fu_498_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln21_fu_552_p2 );
    sensitive << ( icmp_ln8_fu_414_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, input_r_address1, "(port)input_r_address1");
    sc_trace(mVcdFile, input_r_ce1, "(port)input_r_ce1");
    sc_trace(mVcdFile, input_r_q1, "(port)input_r_q1");
    sc_trace(mVcdFile, conv_out_address0, "(port)conv_out_address0");
    sc_trace(mVcdFile, conv_out_ce0, "(port)conv_out_ce0");
    sc_trace(mVcdFile, conv_out_we0, "(port)conv_out_we0");
    sc_trace(mVcdFile, conv_out_d0, "(port)conv_out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, conv_weights_0_address0, "conv_weights_0_address0");
    sc_trace(mVcdFile, conv_weights_0_ce0, "conv_weights_0_ce0");
    sc_trace(mVcdFile, conv_weights_0_q0, "conv_weights_0_q0");
    sc_trace(mVcdFile, conv_weights_1_address0, "conv_weights_1_address0");
    sc_trace(mVcdFile, conv_weights_1_ce0, "conv_weights_1_ce0");
    sc_trace(mVcdFile, conv_weights_1_q0, "conv_weights_1_q0");
    sc_trace(mVcdFile, conv_weights_2_address0, "conv_weights_2_address0");
    sc_trace(mVcdFile, conv_weights_2_ce0, "conv_weights_2_ce0");
    sc_trace(mVcdFile, conv_weights_2_q0, "conv_weights_2_q0");
    sc_trace(mVcdFile, conv_weights_3_address0, "conv_weights_3_address0");
    sc_trace(mVcdFile, conv_weights_3_ce0, "conv_weights_3_ce0");
    sc_trace(mVcdFile, conv_weights_3_q0, "conv_weights_3_q0");
    sc_trace(mVcdFile, conv_weights_4_address0, "conv_weights_4_address0");
    sc_trace(mVcdFile, conv_weights_4_ce0, "conv_weights_4_ce0");
    sc_trace(mVcdFile, conv_weights_4_q0, "conv_weights_4_q0");
    sc_trace(mVcdFile, conv_weights_5_address0, "conv_weights_5_address0");
    sc_trace(mVcdFile, conv_weights_5_ce0, "conv_weights_5_ce0");
    sc_trace(mVcdFile, conv_weights_5_q0, "conv_weights_5_q0");
    sc_trace(mVcdFile, conv_bias_address0, "conv_bias_address0");
    sc_trace(mVcdFile, conv_bias_ce0, "conv_bias_ce0");
    sc_trace(mVcdFile, conv_bias_q0, "conv_bias_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, grp_fu_370_p2, "grp_fu_370_p2");
    sc_trace(mVcdFile, reg_397, "reg_397");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, reg_402, "reg_402");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, add_ln8_fu_408_p2, "add_ln8_fu_408_p2");
    sc_trace(mVcdFile, add_ln8_reg_738, "add_ln8_reg_738");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, r_fu_420_p2, "r_fu_420_p2");
    sc_trace(mVcdFile, r_reg_746, "r_reg_746");
    sc_trace(mVcdFile, c_fu_432_p2, "c_fu_432_p2");
    sc_trace(mVcdFile, c_reg_754, "c_reg_754");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln14_fu_456_p1, "zext_ln14_fu_456_p1");
    sc_trace(mVcdFile, zext_ln14_reg_759, "zext_ln14_reg_759");
    sc_trace(mVcdFile, icmp_ln11_fu_426_p2, "icmp_ln11_fu_426_p2");
    sc_trace(mVcdFile, f_fu_466_p2, "f_fu_466_p2");
    sc_trace(mVcdFile, f_reg_767, "f_reg_767");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln26_fu_472_p1, "zext_ln26_fu_472_p1");
    sc_trace(mVcdFile, zext_ln26_reg_772, "zext_ln26_reg_772");
    sc_trace(mVcdFile, icmp_ln14_fu_460_p2, "icmp_ln14_fu_460_p2");
    sc_trace(mVcdFile, zext_ln35_1_fu_476_p1, "zext_ln35_1_fu_476_p1");
    sc_trace(mVcdFile, zext_ln35_1_reg_777, "zext_ln35_1_reg_777");
    sc_trace(mVcdFile, conv_out_addr_reg_782, "conv_out_addr_reg_782");
    sc_trace(mVcdFile, wr_fu_504_p2, "wr_fu_504_p2");
    sc_trace(mVcdFile, wr_reg_790, "wr_reg_790");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, sub_ln26_fu_526_p2, "sub_ln26_fu_526_p2");
    sc_trace(mVcdFile, sub_ln26_reg_795, "sub_ln26_reg_795");
    sc_trace(mVcdFile, icmp_ln18_fu_498_p2, "icmp_ln18_fu_498_p2");
    sc_trace(mVcdFile, mul_ln26_fu_542_p2, "mul_ln26_fu_542_p2");
    sc_trace(mVcdFile, mul_ln26_reg_800, "mul_ln26_reg_800");
    sc_trace(mVcdFile, wc_fu_558_p2, "wc_fu_558_p2");
    sc_trace(mVcdFile, wc_reg_813, "wc_reg_813");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln26_5_fu_586_p1, "zext_ln26_5_fu_586_p1");
    sc_trace(mVcdFile, zext_ln26_5_reg_818, "zext_ln26_5_reg_818");
    sc_trace(mVcdFile, icmp_ln21_fu_552_p2, "icmp_ln21_fu_552_p2");
    sc_trace(mVcdFile, sub_ln26_1_fu_626_p2, "sub_ln26_1_fu_626_p2");
    sc_trace(mVcdFile, sub_ln26_1_reg_832, "sub_ln26_1_reg_832");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_1_4_reg_931, "tmp_1_4_reg_931");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_380_p2, "grp_fu_380_p2");
    sc_trace(mVcdFile, tmp_1_5_reg_936, "tmp_1_5_reg_936");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, r_0_reg_270, "r_0_reg_270");
    sc_trace(mVcdFile, phi_mul_reg_282, "phi_mul_reg_282");
    sc_trace(mVcdFile, c_0_reg_294, "c_0_reg_294");
    sc_trace(mVcdFile, icmp_ln8_fu_414_p2, "icmp_ln8_fu_414_p2");
    sc_trace(mVcdFile, f_0_reg_306, "f_0_reg_306");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, wr_0_reg_317, "wr_0_reg_317");
    sc_trace(mVcdFile, w_sum_0_reg_328, "w_sum_0_reg_328");
    sc_trace(mVcdFile, w_sum_1_reg_340, "w_sum_1_reg_340");
    sc_trace(mVcdFile, wc_0_reg_352, "wc_0_reg_352");
    sc_trace(mVcdFile, zext_ln35_3_fu_489_p1, "zext_ln35_3_fu_489_p1");
    sc_trace(mVcdFile, zext_ln26_8_fu_632_p1, "zext_ln26_8_fu_632_p1");
    sc_trace(mVcdFile, zext_ln26_9_fu_642_p1, "zext_ln26_9_fu_642_p1");
    sc_trace(mVcdFile, zext_ln26_10_fu_652_p1, "zext_ln26_10_fu_652_p1");
    sc_trace(mVcdFile, zext_ln26_11_fu_662_p1, "zext_ln26_11_fu_662_p1");
    sc_trace(mVcdFile, zext_ln26_12_fu_672_p1, "zext_ln26_12_fu_672_p1");
    sc_trace(mVcdFile, zext_ln26_13_fu_682_p1, "zext_ln26_13_fu_682_p1");
    sc_trace(mVcdFile, grp_fu_363_p0, "grp_fu_363_p0");
    sc_trace(mVcdFile, grp_fu_363_p1, "grp_fu_363_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, grp_fu_370_p0, "grp_fu_370_p0");
    sc_trace(mVcdFile, zext_ln35_fu_438_p1, "zext_ln35_fu_438_p1");
    sc_trace(mVcdFile, add_ln35_fu_442_p2, "add_ln35_fu_442_p2");
    sc_trace(mVcdFile, tmp_6_fu_448_p3, "tmp_6_fu_448_p3");
    sc_trace(mVcdFile, zext_ln35_2_fu_480_p1, "zext_ln35_2_fu_480_p1");
    sc_trace(mVcdFile, add_ln35_1_fu_484_p2, "add_ln35_1_fu_484_p2");
    sc_trace(mVcdFile, tmp_8_fu_514_p3, "tmp_8_fu_514_p3");
    sc_trace(mVcdFile, zext_ln26_2_fu_522_p1, "zext_ln26_2_fu_522_p1");
    sc_trace(mVcdFile, zext_ln26_1_fu_510_p1, "zext_ln26_1_fu_510_p1");
    sc_trace(mVcdFile, zext_ln18_fu_494_p1, "zext_ln18_fu_494_p1");
    sc_trace(mVcdFile, add_ln26_fu_532_p2, "add_ln26_fu_532_p2");
    sc_trace(mVcdFile, mul_ln26_fu_542_p0, "mul_ln26_fu_542_p0");
    sc_trace(mVcdFile, zext_ln26_4_fu_564_p1, "zext_ln26_4_fu_564_p1");
    sc_trace(mVcdFile, add_ln26_2_fu_568_p2, "add_ln26_2_fu_568_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_573_p3, "tmp_10_cast_fu_573_p3");
    sc_trace(mVcdFile, add_ln26_3_fu_581_p2, "add_ln26_3_fu_581_p2");
    sc_trace(mVcdFile, zext_ln21_fu_548_p1, "zext_ln21_fu_548_p1");
    sc_trace(mVcdFile, add_ln26_1_fu_591_p2, "add_ln26_1_fu_591_p2");
    sc_trace(mVcdFile, zext_ln26_6_fu_597_p1, "zext_ln26_6_fu_597_p1");
    sc_trace(mVcdFile, add_ln26_4_fu_601_p2, "add_ln26_4_fu_601_p2");
    sc_trace(mVcdFile, tmp_7_fu_614_p3, "tmp_7_fu_614_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_606_p3, "p_shl1_cast_fu_606_p3");
    sc_trace(mVcdFile, zext_ln26_7_fu_622_p1, "zext_ln26_7_fu_622_p1");
    sc_trace(mVcdFile, or_ln26_fu_637_p2, "or_ln26_fu_637_p2");
    sc_trace(mVcdFile, add_ln26_5_fu_647_p2, "add_ln26_5_fu_647_p2");
    sc_trace(mVcdFile, add_ln26_6_fu_657_p2, "add_ln26_6_fu_657_p2");
    sc_trace(mVcdFile, add_ln26_7_fu_667_p2, "add_ln26_7_fu_667_p2");
    sc_trace(mVcdFile, add_ln26_8_fu_677_p2, "add_ln26_8_fu_677_p2");
    sc_trace(mVcdFile, bitcast_ln34_fu_687_p1, "bitcast_ln34_fu_687_p1");
    sc_trace(mVcdFile, tmp_fu_691_p4, "tmp_fu_691_p4");
    sc_trace(mVcdFile, trunc_ln34_fu_701_p1, "trunc_ln34_fu_701_p1");
    sc_trace(mVcdFile, icmp_ln34_1_fu_711_p2, "icmp_ln34_1_fu_711_p2");
    sc_trace(mVcdFile, icmp_ln34_fu_705_p2, "icmp_ln34_fu_705_p2");
    sc_trace(mVcdFile, or_ln34_fu_717_p2, "or_ln34_fu_717_p2");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, and_ln34_fu_723_p2, "and_ln34_fu_723_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln26_fu_542_p00, "mul_ln26_fu_542_p00");
#endif

    }
    mHdltvinHandle.open("conv.hdltvin.dat");
    mHdltvoutHandle.open("conv.hdltvout.dat");
}

conv::~conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete conv_weights_0_U;
    delete conv_weights_1_U;
    delete conv_weights_2_U;
    delete conv_weights_3_U;
    delete conv_weights_4_U;
    delete conv_weights_5_U;
    delete conv_bias_U;
    delete conv_fadd_32ns_32bkb_U1;
    delete conv_fmul_32ns_32cud_U2;
    delete conv_fmul_32ns_32cud_U3;
    delete conv_fcmp_32ns_32dEe_U4;
}

void conv::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void conv::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void conv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln14_fu_460_p2.read(), ap_const_lv1_1))) {
        c_0_reg_294 = c_reg_754.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln8_fu_414_p2.read()))) {
        c_0_reg_294 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        f_0_reg_306 = f_reg_767.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln11_fu_426_p2.read(), ap_const_lv1_0))) {
        f_0_reg_306 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_426_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_282 = add_ln8_reg_738.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_282 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln11_fu_426_p2.read(), ap_const_lv1_1))) {
        r_0_reg_270 = r_reg_746.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_270 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_552_p2.read()))) {
        w_sum_0_reg_328 = w_sum_1_reg_340.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_460_p2.read()))) {
        w_sum_0_reg_328 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        w_sum_1_reg_340 = grp_fu_363_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_498_p2.read()))) {
        w_sum_1_reg_340 = w_sum_0_reg_328.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        wc_0_reg_352 = wc_reg_813.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_498_p2.read()))) {
        wc_0_reg_352 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_552_p2.read()))) {
        wr_0_reg_317 = wr_reg_790.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_460_p2.read()))) {
        wr_0_reg_317 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln8_reg_738 = add_ln8_fu_408_p2.read();
        r_reg_746 = r_fu_420_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_754 = c_fu_432_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_460_p2.read()))) {
        conv_out_addr_reg_782 =  (sc_lv<11>) (zext_ln35_3_fu_489_p1.read());
        zext_ln26_reg_772 = zext_ln26_fu_472_p1.read();
        zext_ln35_1_reg_777 = zext_ln35_1_fu_476_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        f_reg_767 = f_fu_466_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_498_p2.read()))) {
        mul_ln26_reg_800 = mul_ln26_fu_542_p2.read();
        sub_ln26_reg_795 = sub_ln26_fu_526_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        reg_397 = grp_fu_370_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        reg_402 = grp_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln21_fu_552_p2.read()))) {
        sub_ln26_1_reg_832 = sub_ln26_1_fu_626_p2.read();
        zext_ln26_5_reg_818 = zext_ln26_5_fu_586_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        tmp_1_4_reg_931 = grp_fu_370_p2.read();
        tmp_1_5_reg_936 = grp_fu_380_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        wc_reg_813 = wc_fu_558_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        wr_reg_790 = wr_fu_504_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_426_p2.read(), ap_const_lv1_0))) {
        zext_ln14_reg_759 = zext_ln14_fu_456_p1.read();
    }
}

void conv::thread_add_ln26_1_fu_591_p2() {
    add_ln26_1_fu_591_p2 = (!c_0_reg_294.read().is_01() || !zext_ln21_fu_548_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_294.read()) + sc_biguint<4>(zext_ln21_fu_548_p1.read()));
}

void conv::thread_add_ln26_2_fu_568_p2() {
    add_ln26_2_fu_568_p2 = (!zext_ln26_4_fu_564_p1.read().is_01() || !sub_ln26_reg_795.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln26_4_fu_564_p1.read()) + sc_biguint<5>(sub_ln26_reg_795.read()));
}

void conv::thread_add_ln26_3_fu_581_p2() {
    add_ln26_3_fu_581_p2 = (!zext_ln35_1_reg_777.read().is_01() || !tmp_10_cast_fu_573_p3.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln35_1_reg_777.read()) + sc_biguint<9>(tmp_10_cast_fu_573_p3.read()));
}

void conv::thread_add_ln26_4_fu_601_p2() {
    add_ln26_4_fu_601_p2 = (!zext_ln26_6_fu_597_p1.read().is_01() || !mul_ln26_reg_800.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln26_6_fu_597_p1.read()) + sc_biguint<8>(mul_ln26_reg_800.read()));
}

void conv::thread_add_ln26_5_fu_647_p2() {
    add_ln26_5_fu_647_p2 = (!sub_ln26_1_reg_832.read().is_01() || !ap_const_lv11_2.is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln26_1_reg_832.read()) + sc_biguint<11>(ap_const_lv11_2));
}

void conv::thread_add_ln26_6_fu_657_p2() {
    add_ln26_6_fu_657_p2 = (!sub_ln26_1_reg_832.read().is_01() || !ap_const_lv11_3.is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln26_1_reg_832.read()) + sc_biguint<11>(ap_const_lv11_3));
}

void conv::thread_add_ln26_7_fu_667_p2() {
    add_ln26_7_fu_667_p2 = (!sub_ln26_1_reg_832.read().is_01() || !ap_const_lv11_4.is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln26_1_reg_832.read()) + sc_biguint<11>(ap_const_lv11_4));
}

void conv::thread_add_ln26_8_fu_677_p2() {
    add_ln26_8_fu_677_p2 = (!sub_ln26_1_reg_832.read().is_01() || !ap_const_lv11_5.is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln26_1_reg_832.read()) + sc_biguint<11>(ap_const_lv11_5));
}

void conv::thread_add_ln26_fu_532_p2() {
    add_ln26_fu_532_p2 = (!zext_ln18_fu_494_p1.read().is_01() || !r_0_reg_270.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln18_fu_494_p1.read()) + sc_biguint<4>(r_0_reg_270.read()));
}

void conv::thread_add_ln35_1_fu_484_p2() {
    add_ln35_1_fu_484_p2 = (!zext_ln14_reg_759.read().is_01() || !zext_ln35_2_fu_480_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln14_reg_759.read()) + sc_biguint<12>(zext_ln35_2_fu_480_p1.read()));
}

void conv::thread_add_ln35_fu_442_p2() {
    add_ln35_fu_442_p2 = (!phi_mul_reg_282.read().is_01() || !zext_ln35_fu_438_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul_reg_282.read()) + sc_biguint<7>(zext_ln35_fu_438_p1.read()));
}

void conv::thread_add_ln8_fu_408_p2() {
    add_ln8_fu_408_p2 = (!phi_mul_reg_282.read().is_01() || !ap_const_lv7_B.is_01())? sc_lv<7>(): (sc_biguint<7>(phi_mul_reg_282.read()) + sc_biguint<7>(ap_const_lv7_B));
}

void conv::thread_and_ln34_fu_723_p2() {
    and_ln34_fu_723_p2 = (or_ln34_fu_717_p2.read() & grp_fu_386_p2.read());
}

void conv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void conv::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void conv::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void conv::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void conv::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void conv::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void conv::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void conv::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void conv::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void conv::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void conv::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void conv::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void conv::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void conv::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void conv::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void conv::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void conv::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void conv::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void conv::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_414_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_414_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv::thread_bitcast_ln34_fu_687_p1() {
    bitcast_ln34_fu_687_p1 = reg_402.read();
}

void conv::thread_c_fu_432_p2() {
    c_fu_432_p2 = (!c_0_reg_294.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_294.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv::thread_conv_bias_address0() {
    conv_bias_address0 =  (sc_lv<4>) (zext_ln26_reg_772.read());
}

void conv::thread_conv_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        conv_bias_ce0 = ap_const_logic_1;
    } else {
        conv_bias_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_out_address0() {
    conv_out_address0 = conv_out_addr_reg_782.read();
}

void conv::thread_conv_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        conv_out_ce0 = ap_const_logic_1;
    } else {
        conv_out_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_out_d0() {
    conv_out_d0 = (!and_ln34_fu_723_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln34_fu_723_p2.read()[0].to_bool())? reg_402.read(): ap_const_lv32_0);
}

void conv::thread_conv_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        conv_out_we0 = ap_const_logic_1;
    } else {
        conv_out_we0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_0_address0() {
    conv_weights_0_address0 =  (sc_lv<8>) (zext_ln26_5_fu_586_p1.read());
}

void conv::thread_conv_weights_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv_weights_0_ce0 = ap_const_logic_1;
    } else {
        conv_weights_0_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_1_address0() {
    conv_weights_1_address0 =  (sc_lv<8>) (zext_ln26_5_reg_818.read());
}

void conv::thread_conv_weights_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        conv_weights_1_ce0 = ap_const_logic_1;
    } else {
        conv_weights_1_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_2_address0() {
    conv_weights_2_address0 =  (sc_lv<8>) (zext_ln26_5_reg_818.read());
}

void conv::thread_conv_weights_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        conv_weights_2_ce0 = ap_const_logic_1;
    } else {
        conv_weights_2_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_3_address0() {
    conv_weights_3_address0 =  (sc_lv<8>) (zext_ln26_5_reg_818.read());
}

void conv::thread_conv_weights_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        conv_weights_3_ce0 = ap_const_logic_1;
    } else {
        conv_weights_3_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_4_address0() {
    conv_weights_4_address0 =  (sc_lv<8>) (zext_ln26_5_reg_818.read());
}

void conv::thread_conv_weights_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        conv_weights_4_ce0 = ap_const_logic_1;
    } else {
        conv_weights_4_ce0 = ap_const_logic_0;
    }
}

void conv::thread_conv_weights_5_address0() {
    conv_weights_5_address0 =  (sc_lv<8>) (zext_ln26_5_reg_818.read());
}

void conv::thread_conv_weights_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        conv_weights_5_ce0 = ap_const_logic_1;
    } else {
        conv_weights_5_ce0 = ap_const_logic_0;
    }
}

void conv::thread_f_fu_466_p2() {
    f_fu_466_p2 = (!f_0_reg_306.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(f_0_reg_306.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv::thread_grp_fu_363_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_363_p0 = w_sum_0_reg_328.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        grp_fu_363_p0 = reg_402.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_363_p0 = w_sum_1_reg_340.read();
    } else {
        grp_fu_363_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv::thread_grp_fu_363_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_363_p1 = conv_bias_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_363_p1 = tmp_1_5_reg_936.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        grp_fu_363_p1 = tmp_1_4_reg_931.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        grp_fu_363_p1 = reg_397.read();
    } else {
        grp_fu_363_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv::thread_grp_fu_370_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_370_p0 = conv_weights_4_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_370_p0 = conv_weights_3_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        grp_fu_370_p0 = conv_weights_2_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_370_p0 = conv_weights_1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_370_p0 = conv_weights_0_q0.read();
    } else {
        grp_fu_370_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void conv::thread_icmp_ln11_fu_426_p2() {
    icmp_ln11_fu_426_p2 = (!c_0_reg_294.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_294.read() == ap_const_lv4_B);
}

void conv::thread_icmp_ln14_fu_460_p2() {
    icmp_ln14_fu_460_p2 = (!f_0_reg_306.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(f_0_reg_306.read() == ap_const_lv5_10);
}

void conv::thread_icmp_ln18_fu_498_p2() {
    icmp_ln18_fu_498_p2 = (!wr_0_reg_317.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(wr_0_reg_317.read() == ap_const_lv2_3);
}

void conv::thread_icmp_ln21_fu_552_p2() {
    icmp_ln21_fu_552_p2 = (!wc_0_reg_352.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(wc_0_reg_352.read() == ap_const_lv2_3);
}

void conv::thread_icmp_ln34_1_fu_711_p2() {
    icmp_ln34_1_fu_711_p2 = (!trunc_ln34_fu_701_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln34_fu_701_p1.read() == ap_const_lv23_0);
}

void conv::thread_icmp_ln34_fu_705_p2() {
    icmp_ln34_fu_705_p2 = (!tmp_fu_691_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_691_p4.read() != ap_const_lv8_FF);
}

void conv::thread_icmp_ln8_fu_414_p2() {
    icmp_ln8_fu_414_p2 = (!r_0_reg_270.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_270.read() == ap_const_lv4_B);
}

void conv::thread_input_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        input_r_address0 =  (sc_lv<10>) (zext_ln26_12_fu_672_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        input_r_address0 =  (sc_lv<10>) (zext_ln26_11_fu_662_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        input_r_address0 =  (sc_lv<10>) (zext_ln26_10_fu_652_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        input_r_address0 =  (sc_lv<10>) (zext_ln26_9_fu_642_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        input_r_address0 =  (sc_lv<10>) (zext_ln26_8_fu_632_p1.read());
    } else {
        input_r_address0 =  (sc_lv<10>) ("XXXXXXXXXX");
    }
}

void conv::thread_input_r_address1() {
    input_r_address1 =  (sc_lv<10>) (zext_ln26_13_fu_682_p1.read());
}

void conv::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void conv::thread_input_r_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        input_r_ce1 = ap_const_logic_1;
    } else {
        input_r_ce1 = ap_const_logic_0;
    }
}

void conv::thread_mul_ln26_fu_542_p0() {
    mul_ln26_fu_542_p0 =  (sc_lv<4>) (mul_ln26_fu_542_p00.read());
}

void conv::thread_mul_ln26_fu_542_p00() {
    mul_ln26_fu_542_p00 = esl_zext<8,4>(add_ln26_fu_532_p2.read());
}

void conv::thread_mul_ln26_fu_542_p2() {
    mul_ln26_fu_542_p2 = (!mul_ln26_fu_542_p0.read().is_01() || !ap_const_lv8_D.is_01())? sc_lv<8>(): sc_biguint<4>(mul_ln26_fu_542_p0.read()) * sc_biguint<8>(ap_const_lv8_D);
}

void conv::thread_or_ln26_fu_637_p2() {
    or_ln26_fu_637_p2 = (sub_ln26_1_reg_832.read() | ap_const_lv11_1);
}

void conv::thread_or_ln34_fu_717_p2() {
    or_ln34_fu_717_p2 = (icmp_ln34_1_fu_711_p2.read() | icmp_ln34_fu_705_p2.read());
}

void conv::thread_p_shl1_cast_fu_606_p3() {
    p_shl1_cast_fu_606_p3 = esl_concat<8,3>(add_ln26_4_fu_601_p2.read(), ap_const_lv3_0);
}

void conv::thread_r_fu_420_p2() {
    r_fu_420_p2 = (!r_0_reg_270.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_270.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv::thread_sub_ln26_1_fu_626_p2() {
    sub_ln26_1_fu_626_p2 = (!p_shl1_cast_fu_606_p3.read().is_01() || !zext_ln26_7_fu_622_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl1_cast_fu_606_p3.read()) - sc_biguint<11>(zext_ln26_7_fu_622_p1.read()));
}

void conv::thread_sub_ln26_fu_526_p2() {
    sub_ln26_fu_526_p2 = (!zext_ln26_2_fu_522_p1.read().is_01() || !zext_ln26_1_fu_510_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln26_2_fu_522_p1.read()) - sc_biguint<5>(zext_ln26_1_fu_510_p1.read()));
}

void conv::thread_tmp_10_cast_fu_573_p3() {
    tmp_10_cast_fu_573_p3 = esl_concat<5,4>(add_ln26_2_fu_568_p2.read(), ap_const_lv4_0);
}

void conv::thread_tmp_6_fu_448_p3() {
    tmp_6_fu_448_p3 = esl_concat<7,4>(add_ln35_fu_442_p2.read(), ap_const_lv4_0);
}

void conv::thread_tmp_7_fu_614_p3() {
    tmp_7_fu_614_p3 = esl_concat<8,1>(add_ln26_4_fu_601_p2.read(), ap_const_lv1_0);
}

void conv::thread_tmp_8_fu_514_p3() {
    tmp_8_fu_514_p3 = esl_concat<2,2>(wr_0_reg_317.read(), ap_const_lv2_0);
}

void conv::thread_tmp_fu_691_p4() {
    tmp_fu_691_p4 = bitcast_ln34_fu_687_p1.read().range(30, 23);
}

void conv::thread_trunc_ln34_fu_701_p1() {
    trunc_ln34_fu_701_p1 = bitcast_ln34_fu_687_p1.read().range(23-1, 0);
}

void conv::thread_wc_fu_558_p2() {
    wc_fu_558_p2 = (!wc_0_reg_352.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(wc_0_reg_352.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv::thread_wr_fu_504_p2() {
    wr_fu_504_p2 = (!wr_0_reg_317.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(wr_0_reg_317.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv::thread_zext_ln14_fu_456_p1() {
    zext_ln14_fu_456_p1 = esl_zext<12,11>(tmp_6_fu_448_p3.read());
}

void conv::thread_zext_ln18_fu_494_p1() {
    zext_ln18_fu_494_p1 = esl_zext<4,2>(wr_0_reg_317.read());
}

void conv::thread_zext_ln21_fu_548_p1() {
    zext_ln21_fu_548_p1 = esl_zext<4,2>(wc_0_reg_352.read());
}

void conv::thread_zext_ln26_10_fu_652_p1() {
    zext_ln26_10_fu_652_p1 = esl_zext<64,11>(add_ln26_5_fu_647_p2.read());
}

void conv::thread_zext_ln26_11_fu_662_p1() {
    zext_ln26_11_fu_662_p1 = esl_zext<64,11>(add_ln26_6_fu_657_p2.read());
}

void conv::thread_zext_ln26_12_fu_672_p1() {
    zext_ln26_12_fu_672_p1 = esl_zext<64,11>(add_ln26_7_fu_667_p2.read());
}

void conv::thread_zext_ln26_13_fu_682_p1() {
    zext_ln26_13_fu_682_p1 = esl_zext<64,11>(add_ln26_8_fu_677_p2.read());
}

void conv::thread_zext_ln26_1_fu_510_p1() {
    zext_ln26_1_fu_510_p1 = esl_zext<5,2>(wr_0_reg_317.read());
}

void conv::thread_zext_ln26_2_fu_522_p1() {
    zext_ln26_2_fu_522_p1 = esl_zext<5,4>(tmp_8_fu_514_p3.read());
}

void conv::thread_zext_ln26_4_fu_564_p1() {
    zext_ln26_4_fu_564_p1 = esl_zext<5,2>(wc_0_reg_352.read());
}

void conv::thread_zext_ln26_5_fu_586_p1() {
    zext_ln26_5_fu_586_p1 = esl_zext<64,9>(add_ln26_3_fu_581_p2.read());
}

void conv::thread_zext_ln26_6_fu_597_p1() {
    zext_ln26_6_fu_597_p1 = esl_zext<8,4>(add_ln26_1_fu_591_p2.read());
}

void conv::thread_zext_ln26_7_fu_622_p1() {
    zext_ln26_7_fu_622_p1 = esl_zext<11,9>(tmp_7_fu_614_p3.read());
}

void conv::thread_zext_ln26_8_fu_632_p1() {
    zext_ln26_8_fu_632_p1 = esl_zext<64,11>(sub_ln26_1_fu_626_p2.read());
}

void conv::thread_zext_ln26_9_fu_642_p1() {
    zext_ln26_9_fu_642_p1 = esl_zext<64,11>(or_ln26_fu_637_p2.read());
}

void conv::thread_zext_ln26_fu_472_p1() {
    zext_ln26_fu_472_p1 = esl_zext<64,5>(f_0_reg_306.read());
}

void conv::thread_zext_ln35_1_fu_476_p1() {
    zext_ln35_1_fu_476_p1 = esl_zext<9,5>(f_0_reg_306.read());
}

void conv::thread_zext_ln35_2_fu_480_p1() {
    zext_ln35_2_fu_480_p1 = esl_zext<12,5>(f_0_reg_306.read());
}

void conv::thread_zext_ln35_3_fu_489_p1() {
    zext_ln35_3_fu_489_p1 = esl_zext<64,12>(add_ln35_1_fu_484_p2.read());
}

void conv::thread_zext_ln35_fu_438_p1() {
    zext_ln35_fu_438_p1 = esl_zext<7,4>(c_0_reg_294.read());
}

void conv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_414_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln11_fu_426_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln14_fu_460_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln18_fu_498_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state33;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_552_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address1\" :  \"" << input_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce1\" :  \"" << input_r_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q1\" :  \"" << input_r_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_address0\" :  \"" << conv_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_ce0\" :  \"" << conv_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_we0\" :  \"" << conv_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_d0\" :  \"" << conv_out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

