// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.964200,HLS_SYN_LAT=439473,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=7,HLS_SYN_FF=739,HLS_SYN_LUT=1673,HLS_VERSION=2019_1}" *)

module conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_pp0_stage0 = 12'd4;
parameter    ap_ST_fsm_pp0_stage1 = 12'd8;
parameter    ap_ST_fsm_pp0_stage2 = 12'd16;
parameter    ap_ST_fsm_pp0_stage3 = 12'd32;
parameter    ap_ST_fsm_state11 = 12'd64;
parameter    ap_ST_fsm_state12 = 12'd128;
parameter    ap_ST_fsm_state13 = 12'd256;
parameter    ap_ST_fsm_state14 = 12'd512;
parameter    ap_ST_fsm_state15 = 12'd1024;
parameter    ap_ST_fsm_state16 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [10:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] conv_weights_address0;
reg    conv_weights_ce0;
wire   [31:0] conv_weights_q0;
wire   [3:0] conv_bias_address0;
reg    conv_bias_ce0;
wire   [31:0] conv_bias_q0;
reg   [5:0] indvar_flatten21_reg_231;
reg   [1:0] wr_0_reg_242;
reg   [4:0] indvar_flatten_reg_253;
reg   [1:0] wc_0_reg_264;
reg   [31:0] w_sum_2_reg_275;
reg   [2:0] ch_0_reg_287;
wire   [0:0] icmp_ln8_fu_315_p2;
wire    ap_CS_fsm_state2;
wire   [10:0] add_ln8_fu_321_p2;
reg   [10:0] add_ln8_reg_808;
wire   [0:0] icmp_ln11_fu_333_p2;
reg   [0:0] icmp_ln11_reg_813;
wire   [3:0] select_ln35_1_fu_347_p3;
reg   [3:0] select_ln35_1_reg_818;
wire   [4:0] select_ln35_2_fu_389_p3;
reg   [4:0] select_ln35_2_reg_824;
wire   [3:0] select_ln35_3_fu_397_p3;
reg   [3:0] select_ln35_3_reg_829;
wire   [63:0] zext_ln26_fu_416_p1;
reg   [63:0] zext_ln26_reg_837;
wire   [10:0] zext_ln35_2_fu_420_p1;
reg   [10:0] zext_ln35_2_reg_842;
reg   [10:0] conv_out_addr_reg_847;
wire   [0:0] icmp_ln18_fu_448_p2;
reg   [0:0] icmp_ln18_reg_852;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln18_reg_852_pp0_iter1_reg;
wire   [5:0] add_ln18_1_fu_454_p2;
reg   [5:0] add_ln18_1_reg_856;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln21_fu_466_p2;
reg   [0:0] icmp_ln21_reg_861;
wire   [1:0] select_ln18_1_fu_480_p3;
reg   [1:0] select_ln18_1_reg_866;
wire   [2:0] select_ln21_fu_544_p3;
reg   [2:0] select_ln21_reg_872;
wire   [1:0] select_ln21_1_fu_556_p3;
reg   [1:0] select_ln21_1_reg_878;
wire   [3:0] select_ln21_2_fu_612_p3;
reg   [3:0] select_ln21_2_reg_883;
wire   [4:0] add_ln21_fu_648_p2;
reg   [4:0] add_ln21_reg_893;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] conv_weights_load_reg_903;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] grp_fu_304_p2;
reg   [31:0] tmp_1_reg_913;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [2:0] ch_fu_707_p2;
reg   [2:0] ch_reg_918;
wire   [4:0] select_ln21_3_fu_712_p3;
reg   [4:0] select_ln21_3_reg_923;
wire   [31:0] grp_fu_298_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state11;
wire   [4:0] f_fu_718_p2;
reg   [4:0] f_reg_938;
wire   [8:0] select_ln11_fu_729_p3;
reg   [8:0] select_ln11_reg_943;
wire    ap_CS_fsm_state12;
reg   [31:0] w_sum_reg_953;
wire    ap_CS_fsm_state15;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage3_subdone;
reg   [10:0] indvar_flatten43_reg_175;
wire    ap_CS_fsm_state16;
reg   [3:0] r_0_reg_186;
reg   [8:0] indvar_flatten29_reg_197;
reg   [3:0] c_0_reg_209;
reg   [4:0] f_0_reg_220;
reg   [5:0] ap_phi_mux_indvar_flatten21_phi_fu_235_p4;
wire    ap_block_pp0_stage0;
reg   [1:0] ap_phi_mux_wr_0_phi_fu_246_p4;
reg   [4:0] ap_phi_mux_indvar_flatten_phi_fu_257_p4;
reg   [1:0] ap_phi_mux_wc_0_phi_fu_268_p4;
wire   [31:0] ap_phi_mux_w_sum_2_phi_fu_279_p4;
reg   [2:0] ap_phi_mux_ch_0_phi_fu_291_p4;
wire   [63:0] zext_ln35_4_fu_434_p1;
wire   [63:0] zext_ln26_8_fu_643_p1;
wire   [63:0] zext_ln26_9_fu_702_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_298_p0;
reg   [31:0] grp_fu_298_p1;
wire    ap_block_pp0_stage2;
wire   [3:0] r_fu_327_p2;
wire   [0:0] icmp_ln14_fu_365_p2;
wire   [0:0] xor_ln35_fu_359_p2;
wire   [3:0] select_ln35_fu_339_p3;
wire   [0:0] and_ln35_fu_371_p2;
wire   [0:0] or_ln35_fu_383_p2;
wire   [3:0] c_fu_377_p2;
wire   [7:0] grp_fu_785_p3;
wire   [11:0] zext_ln35_3_fu_424_p1;
wire   [11:0] tmp_3_cast_fu_409_p3;
wire   [11:0] add_ln35_1_fu_428_p2;
wire   [3:0] zext_ln21_fu_439_p1;
wire   [1:0] wr_fu_460_p2;
wire   [3:0] tmp_5_fu_492_p3;
wire   [4:0] zext_ln26_2_fu_500_p1;
wire   [4:0] zext_ln26_1_fu_488_p1;
wire   [4:0] sub_ln26_fu_504_p2;
wire   [0:0] icmp_ln24_fu_520_p2;
wire   [0:0] xor_ln18_fu_514_p2;
wire   [1:0] select_ln18_fu_472_p3;
wire   [0:0] and_ln18_fu_526_p2;
wire   [0:0] or_ln21_fu_538_p2;
wire   [1:0] wc_fu_532_p2;
wire   [5:0] zext_ln21_2_fu_564_p1;
wire  signed [5:0] sext_ln26_fu_510_p1;
wire   [5:0] add_ln26_1_fu_568_p2;
wire   [3:0] trunc_ln26_fu_574_p1;
wire   [6:0] p_shl_fu_578_p3;
wire   [6:0] tmp_2_fu_586_p3;
wire   [3:0] zext_ln21_1_fu_552_p1;
wire   [3:0] add_ln26_fu_443_p2;
wire   [3:0] add_ln26_2_fu_600_p2;
wire   [3:0] select_ln18_2_fu_605_p3;
wire   [6:0] zext_ln26_4_fu_620_p1;
wire   [6:0] sub_ln26_1_fu_594_p2;
wire   [6:0] add_ln26_4_fu_624_p2;
wire   [10:0] tmp_13_cast_fu_630_p3;
wire   [10:0] add_ln26_5_fu_638_p2;
wire   [3:0] zext_ln18_fu_654_p1;
wire   [3:0] add_ln18_fu_657_p2;
wire   [7:0] grp_fu_794_p3;
wire   [8:0] tmp_3_fu_676_p3;
wire   [10:0] p_shl_cast_fu_669_p3;
wire   [10:0] zext_ln26_6_fu_683_p1;
wire   [10:0] zext_ln26_7_fu_693_p1;
wire   [10:0] sub_ln26_2_fu_687_p2;
wire   [10:0] add_ln26_6_fu_696_p2;
wire    ap_block_pp0_stage3;
wire   [8:0] add_ln11_1_fu_723_p2;
wire   [31:0] bitcast_ln34_fu_736_p1;
wire   [7:0] tmp_fu_739_p4;
wire   [22:0] trunc_ln34_fu_749_p1;
wire   [0:0] icmp_ln34_1_fu_759_p2;
wire   [0:0] icmp_ln34_fu_753_p2;
wire   [0:0] or_ln34_fu_765_p2;
wire   [0:0] grp_fu_309_p2;
wire   [0:0] and_ln34_fu_771_p2;
wire   [3:0] grp_fu_785_p0;
wire   [4:0] grp_fu_785_p1;
wire   [3:0] grp_fu_785_p2;
wire   [3:0] grp_fu_794_p0;
wire   [4:0] grp_fu_794_p1;
wire   [3:0] grp_fu_794_p2;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [7:0] grp_fu_785_p00;
wire   [7:0] grp_fu_785_p20;
wire   [7:0] grp_fu_794_p00;
wire   [7:0] grp_fu_794_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

conv_conv_weights #(
    .DataWidth( 32 ),
    .AddressRange( 864 ),
    .AddressWidth( 10 ))
conv_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_weights_address0),
    .ce0(conv_weights_ce0),
    .q0(conv_weights_q0)
);

conv_conv_bias #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
conv_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_bias_address0),
    .ce0(conv_bias_ce0),
    .q0(conv_bias_q0)
);

conv_fadd_32ns_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_fadd_32ns_32bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_298_p0),
    .din1(grp_fu_298_p1),
    .ce(1'b1),
    .dout(grp_fu_298_p2)
);

conv_fmul_32ns_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_fmul_32ns_32cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_weights_load_reg_903),
    .din1(input_r_q0),
    .ce(1'b1),
    .dout(grp_fu_304_p2)
);

conv_fcmp_32ns_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_fcmp_32ns_32dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_298_p2),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_309_p2)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U4(
    .din0(grp_fu_785_p0),
    .din1(grp_fu_785_p1),
    .din2(grp_fu_785_p2),
    .dout(grp_fu_785_p3)
);

conv_mac_muladd_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
conv_mac_muladd_4eOg_U5(
    .din0(grp_fu_794_p0),
    .din1(grp_fu_794_p1),
    .din2(grp_fu_794_p2),
    .dout(grp_fu_794_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        c_0_reg_209 <= select_ln35_3_reg_829;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_209 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ch_0_reg_287 <= ch_reg_918;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ch_0_reg_287 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        f_0_reg_220 <= f_reg_938;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_220 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten21_reg_231 <= add_ln18_1_reg_856;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten21_reg_231 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten29_reg_197 <= select_ln11_reg_943;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten29_reg_197 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten43_reg_175 <= add_ln8_reg_808;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten43_reg_175 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_253 <= select_ln21_3_reg_923;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_253 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        r_0_reg_186 <= select_ln35_1_reg_818;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_186 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        w_sum_2_reg_275 <= grp_fu_298_p2;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        w_sum_2_reg_275 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wc_0_reg_264 <= select_ln21_1_reg_878;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wc_0_reg_264 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        wr_0_reg_242 <= select_ln18_1_reg_866;
    end else if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        wr_0_reg_242 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln18_1_reg_856 <= add_ln18_1_fu_454_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_448_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln21_reg_893 <= add_ln21_fu_648_p2;
        icmp_ln21_reg_861 <= icmp_ln21_fu_466_p2;
        select_ln21_2_reg_883 <= select_ln21_2_fu_612_p3;
        select_ln21_reg_872 <= select_ln21_fu_544_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln8_reg_808 <= add_ln8_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ch_reg_918 <= ch_fu_707_p2;
        select_ln21_3_reg_923 <= select_ln21_3_fu_712_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        conv_out_addr_reg_847 <= zext_ln35_4_fu_434_p1;
        icmp_ln11_reg_813 <= icmp_ln11_fu_333_p2;
        select_ln35_1_reg_818 <= select_ln35_1_fu_347_p3;
        select_ln35_2_reg_824 <= select_ln35_2_fu_389_p3;
        select_ln35_3_reg_829 <= select_ln35_3_fu_397_p3;
        zext_ln26_reg_837[4 : 0] <= zext_ln26_fu_416_p1[4 : 0];
        zext_ln35_2_reg_842[4 : 0] <= zext_ln35_2_fu_420_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_weights_load_reg_903 <= conv_weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        f_reg_938 <= f_fu_718_p2;
        select_ln11_reg_943 <= select_ln11_fu_729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln18_reg_852 <= icmp_ln18_fu_448_p2;
        icmp_ln18_reg_852_pp0_iter1_reg <= icmp_ln18_reg_852;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_fu_448_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln18_1_reg_866 <= select_ln18_1_fu_480_p3;
        select_ln21_1_reg_878 <= select_ln21_1_fu_556_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        tmp_1_reg_913 <= grp_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        w_sum_reg_953 <= grp_fu_298_p2;
    end
end

always @ (*) begin
    if ((icmp_ln18_fu_448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ch_0_phi_fu_291_p4 = ch_reg_918;
    end else begin
        ap_phi_mux_ch_0_phi_fu_291_p4 = ch_0_reg_287;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten21_phi_fu_235_p4 = add_ln18_1_reg_856;
    end else begin
        ap_phi_mux_indvar_flatten21_phi_fu_235_p4 = indvar_flatten21_reg_231;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_257_p4 = select_ln21_3_reg_923;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_257_p4 = indvar_flatten_reg_253;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wc_0_phi_fu_268_p4 = select_ln21_1_reg_878;
    end else begin
        ap_phi_mux_wc_0_phi_fu_268_p4 = wc_0_reg_264;
    end
end

always @ (*) begin
    if (((icmp_ln18_reg_852 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_wr_0_phi_fu_246_p4 = select_ln18_1_reg_866;
    end else begin
        ap_phi_mux_wr_0_phi_fu_246_p4 = wr_0_reg_242;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_bias_ce0 = 1'b1;
    end else begin
        conv_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv_weights_ce0 = 1'b1;
    end else begin
        conv_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_298_p0 = w_sum_2_reg_275;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_298_p0 = ap_phi_mux_w_sum_2_phi_fu_279_p4;
    end else begin
        grp_fu_298_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_298_p1 = conv_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_298_p1 = tmp_1_reg_913;
    end else begin
        grp_fu_298_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln18_fu_448_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln18_fu_448_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_1_fu_723_p2 = (9'd1 + indvar_flatten29_reg_197);

assign add_ln18_1_fu_454_p2 = (ap_phi_mux_indvar_flatten21_phi_fu_235_p4 + 6'd1);

assign add_ln18_fu_657_p2 = (select_ln35_1_reg_818 + zext_ln18_fu_654_p1);

assign add_ln21_fu_648_p2 = (ap_phi_mux_indvar_flatten_phi_fu_257_p4 + 5'd1);

assign add_ln26_1_fu_568_p2 = ($signed(zext_ln21_2_fu_564_p1) + $signed(sext_ln26_fu_510_p1));

assign add_ln26_2_fu_600_p2 = (select_ln35_3_reg_829 + zext_ln21_1_fu_552_p1);

assign add_ln26_4_fu_624_p2 = (zext_ln26_4_fu_620_p1 + sub_ln26_1_fu_594_p2);

assign add_ln26_5_fu_638_p2 = (zext_ln35_2_reg_842 + tmp_13_cast_fu_630_p3);

assign add_ln26_6_fu_696_p2 = (zext_ln26_7_fu_693_p1 + sub_ln26_2_fu_687_p2);

assign add_ln26_fu_443_p2 = (select_ln35_3_reg_829 + zext_ln21_fu_439_p1);

assign add_ln35_1_fu_428_p2 = (zext_ln35_3_fu_424_p1 + tmp_3_cast_fu_409_p3);

assign add_ln8_fu_321_p2 = (indvar_flatten43_reg_175 + 11'd1);

assign and_ln18_fu_526_p2 = (xor_ln18_fu_514_p2 & icmp_ln24_fu_520_p2);

assign and_ln34_fu_771_p2 = (or_ln34_fu_765_p2 & grp_fu_309_p2);

assign and_ln35_fu_371_p2 = (xor_ln35_fu_359_p2 & icmp_ln14_fu_365_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_w_sum_2_phi_fu_279_p4 = w_sum_2_reg_275;

assign bitcast_ln34_fu_736_p1 = w_sum_reg_953;

assign c_fu_377_p2 = (select_ln35_fu_339_p3 + 4'd1);

assign ch_fu_707_p2 = (select_ln21_reg_872 + 3'd1);

assign conv_bias_address0 = zext_ln26_reg_837;

assign conv_out_address0 = conv_out_addr_reg_847;

assign conv_out_d0 = ((and_ln34_fu_771_p2[0:0] === 1'b1) ? w_sum_reg_953 : 32'd0);

assign conv_weights_address0 = zext_ln26_8_fu_643_p1;

assign f_fu_718_p2 = (5'd1 + select_ln35_2_reg_824);

assign grp_fu_785_p0 = grp_fu_785_p00;

assign grp_fu_785_p00 = select_ln35_1_fu_347_p3;

assign grp_fu_785_p1 = 8'd11;

assign grp_fu_785_p2 = grp_fu_785_p20;

assign grp_fu_785_p20 = select_ln35_3_fu_397_p3;

assign grp_fu_794_p0 = grp_fu_794_p00;

assign grp_fu_794_p00 = add_ln18_fu_657_p2;

assign grp_fu_794_p1 = 8'd13;

assign grp_fu_794_p2 = grp_fu_794_p20;

assign grp_fu_794_p20 = select_ln21_2_reg_883;

assign icmp_ln11_fu_333_p2 = ((indvar_flatten29_reg_197 == 9'd176) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_365_p2 = ((f_0_reg_220 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln18_fu_448_p2 = ((ap_phi_mux_indvar_flatten21_phi_fu_235_p4 == 6'd54) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_466_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_257_p4 == 5'd18) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_520_p2 = ((ap_phi_mux_ch_0_phi_fu_291_p4 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_759_p2 = ((trunc_ln34_fu_749_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_753_p2 = ((tmp_fu_739_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_315_p2 = ((indvar_flatten43_reg_175 == 11'd1936) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln26_9_fu_702_p1;

assign or_ln21_fu_538_p2 = (icmp_ln21_fu_466_p2 | and_ln18_fu_526_p2);

assign or_ln34_fu_765_p2 = (icmp_ln34_fu_753_p2 | icmp_ln34_1_fu_759_p2);

assign or_ln35_fu_383_p2 = (icmp_ln11_fu_333_p2 | and_ln35_fu_371_p2);

assign p_shl_cast_fu_669_p3 = {{grp_fu_794_p3}, {3'd0}};

assign p_shl_fu_578_p3 = {{trunc_ln26_fu_574_p1}, {3'd0}};

assign r_fu_327_p2 = (r_0_reg_186 + 4'd1);

assign select_ln11_fu_729_p3 = ((icmp_ln11_reg_813[0:0] === 1'b1) ? 9'd1 : add_ln11_1_fu_723_p2);

assign select_ln18_1_fu_480_p3 = ((icmp_ln21_fu_466_p2[0:0] === 1'b1) ? wr_fu_460_p2 : ap_phi_mux_wr_0_phi_fu_246_p4);

assign select_ln18_2_fu_605_p3 = ((icmp_ln21_fu_466_p2[0:0] === 1'b1) ? select_ln35_3_reg_829 : add_ln26_fu_443_p2);

assign select_ln18_fu_472_p3 = ((icmp_ln21_fu_466_p2[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_wc_0_phi_fu_268_p4);

assign select_ln21_1_fu_556_p3 = ((and_ln18_fu_526_p2[0:0] === 1'b1) ? wc_fu_532_p2 : select_ln18_fu_472_p3);

assign select_ln21_2_fu_612_p3 = ((and_ln18_fu_526_p2[0:0] === 1'b1) ? add_ln26_2_fu_600_p2 : select_ln18_2_fu_605_p3);

assign select_ln21_3_fu_712_p3 = ((icmp_ln21_reg_861[0:0] === 1'b1) ? 5'd1 : add_ln21_reg_893);

assign select_ln21_fu_544_p3 = ((or_ln21_fu_538_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_ch_0_phi_fu_291_p4);

assign select_ln35_1_fu_347_p3 = ((icmp_ln11_fu_333_p2[0:0] === 1'b1) ? r_fu_327_p2 : r_0_reg_186);

assign select_ln35_2_fu_389_p3 = ((or_ln35_fu_383_p2[0:0] === 1'b1) ? 5'd0 : f_0_reg_220);

assign select_ln35_3_fu_397_p3 = ((and_ln35_fu_371_p2[0:0] === 1'b1) ? c_fu_377_p2 : select_ln35_fu_339_p3);

assign select_ln35_fu_339_p3 = ((icmp_ln11_fu_333_p2[0:0] === 1'b1) ? 4'd0 : c_0_reg_209);

assign sext_ln26_fu_510_p1 = $signed(sub_ln26_fu_504_p2);

assign sub_ln26_1_fu_594_p2 = (p_shl_fu_578_p3 - tmp_2_fu_586_p3);

assign sub_ln26_2_fu_687_p2 = (p_shl_cast_fu_669_p3 - zext_ln26_6_fu_683_p1);

assign sub_ln26_fu_504_p2 = (zext_ln26_2_fu_500_p1 - zext_ln26_1_fu_488_p1);

assign tmp_13_cast_fu_630_p3 = {{add_ln26_4_fu_624_p2}, {4'd0}};

assign tmp_2_fu_586_p3 = {{add_ln26_1_fu_568_p2}, {1'd0}};

assign tmp_3_cast_fu_409_p3 = {{grp_fu_785_p3}, {4'd0}};

assign tmp_3_fu_676_p3 = {{grp_fu_794_p3}, {1'd0}};

assign tmp_5_fu_492_p3 = {{select_ln18_1_fu_480_p3}, {2'd0}};

assign tmp_fu_739_p4 = {{bitcast_ln34_fu_736_p1[30:23]}};

assign trunc_ln26_fu_574_p1 = add_ln26_1_fu_568_p2[3:0];

assign trunc_ln34_fu_749_p1 = bitcast_ln34_fu_736_p1[22:0];

assign wc_fu_532_p2 = (select_ln18_fu_472_p3 + 2'd1);

assign wr_fu_460_p2 = (ap_phi_mux_wr_0_phi_fu_246_p4 + 2'd1);

assign xor_ln18_fu_514_p2 = (icmp_ln21_fu_466_p2 ^ 1'd1);

assign xor_ln35_fu_359_p2 = (icmp_ln11_fu_333_p2 ^ 1'd1);

assign zext_ln18_fu_654_p1 = select_ln18_1_reg_866;

assign zext_ln21_1_fu_552_p1 = wc_fu_532_p2;

assign zext_ln21_2_fu_564_p1 = select_ln21_1_fu_556_p3;

assign zext_ln21_fu_439_p1 = ap_phi_mux_wc_0_phi_fu_268_p4;

assign zext_ln26_1_fu_488_p1 = select_ln18_1_fu_480_p3;

assign zext_ln26_2_fu_500_p1 = tmp_5_fu_492_p3;

assign zext_ln26_4_fu_620_p1 = select_ln21_fu_544_p3;

assign zext_ln26_6_fu_683_p1 = tmp_3_fu_676_p3;

assign zext_ln26_7_fu_693_p1 = select_ln21_reg_872;

assign zext_ln26_8_fu_643_p1 = add_ln26_5_fu_638_p2;

assign zext_ln26_9_fu_702_p1 = add_ln26_6_fu_696_p2;

assign zext_ln26_fu_416_p1 = select_ln35_2_fu_389_p3;

assign zext_ln35_2_fu_420_p1 = select_ln35_2_fu_389_p3;

assign zext_ln35_3_fu_424_p1 = select_ln35_2_fu_389_p3;

assign zext_ln35_4_fu_434_p1 = add_ln35_1_fu_428_p2;

always @ (posedge ap_clk) begin
    zext_ln26_reg_837[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln35_2_reg_842[10:5] <= 6'b000000;
end

endmodule //conv
