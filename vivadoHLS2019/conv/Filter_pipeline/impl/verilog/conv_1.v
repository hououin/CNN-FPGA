// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=36.104550,HLS_SYN_LAT=108178,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=11,HLS_SYN_FF=2082,HLS_SYN_LUT=2758,HLS_VERSION=2019_1}" *)

module conv_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_input_address0,
        conv_input_ce0,
        conv_input_q0,
        conv_input_address1,
        conv_input_ce1,
        conv_input_q1,
        conv_out_address0,
        conv_out_ce0,
        conv_out_we0,
        conv_out_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state24 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv_input_address0;
output   conv_input_ce0;
input  [31:0] conv_input_q0;
output  [9:0] conv_input_address1;
output   conv_input_ce1;
input  [31:0] conv_input_q1;
output  [14:0] conv_out_address0;
output   conv_out_ce0;
output   conv_out_we0;
output  [31:0] conv_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] conv_input_address0;
reg conv_input_ce0;
reg[9:0] conv_input_address1;
reg conv_input_ce1;
reg conv_out_ce0;
reg conv_out_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] conv_1_weights_0_0_0_address0;
reg    conv_1_weights_0_0_0_ce0;
wire   [31:0] conv_1_weights_0_0_0_q0;
wire   [4:0] conv_1_weights_0_1_0_address0;
reg    conv_1_weights_0_1_0_ce0;
wire   [31:0] conv_1_weights_0_1_0_q0;
wire   [4:0] conv_1_weights_0_2_0_address0;
reg    conv_1_weights_0_2_0_ce0;
wire   [31:0] conv_1_weights_0_2_0_q0;
wire   [4:0] conv_1_weights_1_0_0_address0;
reg    conv_1_weights_1_0_0_ce0;
wire   [31:0] conv_1_weights_1_0_0_q0;
wire   [4:0] conv_1_weights_1_1_0_address0;
reg    conv_1_weights_1_1_0_ce0;
wire   [31:0] conv_1_weights_1_1_0_q0;
wire   [4:0] conv_1_weights_1_2_0_address0;
reg    conv_1_weights_1_2_0_ce0;
wire   [31:0] conv_1_weights_1_2_0_q0;
wire   [4:0] conv_1_weights_2_0_0_address0;
reg    conv_1_weights_2_0_0_ce0;
wire   [31:0] conv_1_weights_2_0_0_q0;
wire   [4:0] conv_1_weights_2_1_0_address0;
reg    conv_1_weights_2_1_0_ce0;
wire   [31:0] conv_1_weights_2_1_0_q0;
wire   [4:0] conv_1_weights_2_2_0_address0;
reg    conv_1_weights_2_2_0_ce0;
wire   [31:0] conv_1_weights_2_2_0_q0;
wire   [4:0] conv_1_bias_address0;
reg    conv_1_bias_ce0;
wire   [31:0] conv_1_bias_q0;
reg   [14:0] indvar_flatten30_reg_332;
reg   [4:0] r_0_reg_343;
reg   [10:0] indvar_flatten_reg_354;
reg   [4:0] c_0_reg_365;
reg   [5:0] f_0_reg_376;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln8_reg_928;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [31:0] grp_fu_396_p2;
reg   [31:0] reg_425;
wire   [31:0] grp_fu_387_p2;
reg   [31:0] reg_431;
reg   [31:0] reg_436;
reg   [0:0] icmp_ln8_reg_928_pp0_iter1_reg;
wire   [31:0] grp_fu_392_p2;
reg   [31:0] reg_441;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln8_reg_928_pp0_iter2_reg;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] reg_446;
reg   [0:0] icmp_ln8_reg_928_pp0_iter3_reg;
wire   [0:0] icmp_ln8_fu_469_p2;
reg   [0:0] icmp_ln8_reg_928_pp0_iter4_reg;
wire   [14:0] add_ln8_fu_475_p2;
reg   [14:0] add_ln8_reg_932;
wire   [4:0] select_ln35_1_fu_495_p3;
reg   [4:0] select_ln35_1_reg_937;
reg   [4:0] select_ln35_1_reg_937_pp0_iter1_reg;
reg   [4:0] select_ln35_1_reg_937_pp0_iter2_reg;
reg   [4:0] select_ln35_1_reg_937_pp0_iter3_reg;
reg   [4:0] select_ln35_1_reg_937_pp0_iter4_reg;
wire   [10:0] sub_ln26_fu_527_p2;
reg   [10:0] sub_ln26_reg_943;
wire   [4:0] select_ln35_2_fu_539_p3;
reg   [4:0] select_ln35_2_reg_948;
wire   [4:0] add_ln35_fu_555_p2;
reg   [4:0] add_ln35_reg_954;
wire   [5:0] select_ln35_6_fu_607_p3;
reg   [5:0] select_ln35_6_reg_960;
reg   [5:0] select_ln35_6_reg_960_pp0_iter1_reg;
reg   [5:0] select_ln35_6_reg_960_pp0_iter2_reg;
reg   [5:0] select_ln35_6_reg_960_pp0_iter3_reg;
reg   [5:0] select_ln35_6_reg_960_pp0_iter4_reg;
wire   [4:0] select_ln35_7_fu_615_p3;
reg   [4:0] select_ln35_7_reg_966;
reg   [4:0] select_ln35_7_reg_966_pp0_iter1_reg;
reg   [4:0] select_ln35_7_reg_966_pp0_iter2_reg;
reg   [4:0] select_ln35_7_reg_966_pp0_iter3_reg;
reg   [4:0] select_ln35_7_reg_966_pp0_iter4_reg;
wire   [10:0] zext_ln35_2_fu_623_p1;
reg   [10:0] zext_ln35_2_reg_972;
wire   [10:0] zext_ln35_3_fu_652_p1;
reg   [10:0] zext_ln35_3_reg_983;
wire   [4:0] select_ln35_9_fu_673_p3;
reg   [4:0] select_ln35_9_reg_994;
wire   [63:0] zext_ln26_fu_681_p1;
reg   [63:0] zext_ln26_reg_999;
reg   [63:0] zext_ln26_reg_999_pp0_iter1_reg;
reg   [63:0] zext_ln26_reg_999_pp0_iter2_reg;
wire   [10:0] select_ln11_fu_700_p3;
reg   [10:0] select_ln11_reg_1049;
wire   [10:0] sub_ln26_1_fu_730_p2;
reg   [10:0] sub_ln26_1_reg_1054;
wire   [10:0] zext_ln35_4_fu_746_p1;
reg   [10:0] zext_ln35_4_reg_1065;
reg   [31:0] conv_1_weights_0_2_0_2_reg_1086;
reg   [31:0] conv_1_weights_1_0_0_2_reg_1091;
reg   [31:0] conv_1_weights_1_1_0_2_reg_1096;
reg   [31:0] conv_1_weights_1_2_0_2_reg_1101;
reg   [31:0] conv_1_weights_2_0_0_2_reg_1106;
reg   [31:0] conv_1_weights_2_1_0_2_reg_1111;
reg   [31:0] conv_1_weights_2_2_0_2_reg_1116;
wire   [10:0] add_ln26_6_fu_787_p2;
reg   [10:0] add_ln26_6_reg_1121;
wire   [10:0] add_ln26_10_fu_801_p2;
reg   [10:0] add_ln26_10_reg_1131;
wire   [10:0] add_ln26_14_fu_815_p2;
reg   [10:0] add_ln26_14_reg_1141;
wire   [31:0] grp_fu_403_p2;
reg   [31:0] tmp_1_0_1_reg_1146;
reg   [31:0] tmp_1_1_reg_1161;
reg   [31:0] tmp_1_1_1_reg_1171;
reg   [31:0] tmp_1_1_1_reg_1171_pp0_iter1_reg;
reg   [31:0] tmp_1_1_2_reg_1176;
reg   [31:0] tmp_1_1_2_reg_1176_pp0_iter1_reg;
wire   [5:0] f_fu_832_p2;
reg   [5:0] f_reg_1181;
reg   [31:0] tmp_1_2_reg_1186;
reg   [31:0] tmp_1_2_reg_1186_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1191;
reg   [31:0] tmp_1_2_1_reg_1191_pp0_iter2_reg;
reg   [31:0] tmp_1_2_1_reg_1191_pp0_iter3_reg;
reg   [31:0] tmp_1_2_2_reg_1196;
reg   [31:0] tmp_1_2_2_reg_1196_pp0_iter2_reg;
reg   [31:0] tmp_1_2_2_reg_1196_pp0_iter3_reg;
reg   [31:0] w_sum_3_1_1_reg_1201;
reg   [31:0] conv_1_bias_load_reg_1211;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter4;
reg   [14:0] ap_phi_mux_indvar_flatten30_phi_fu_336_p4;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_r_0_phi_fu_347_p4;
reg   [10:0] ap_phi_mux_indvar_flatten_phi_fu_358_p4;
reg   [4:0] ap_phi_mux_c_0_phi_fu_369_p4;
reg   [5:0] ap_phi_mux_f_0_phi_fu_380_p4;
wire   [63:0] zext_ln26_7_fu_633_p1;
wire   [63:0] zext_ln26_10_fu_662_p1;
wire   [63:0] zext_ln26_8_fu_741_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln26_12_fu_754_p1;
wire   [63:0] zext_ln26_11_fu_796_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_13_fu_810_p1;
wire  signed [63:0] sext_ln26_fu_820_p1;
wire    ap_block_pp0_stage3;
wire  signed [63:0] sext_ln26_1_fu_824_p1;
wire   [63:0] zext_ln26_14_fu_828_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln35_6_fu_863_p1;
reg   [31:0] grp_fu_387_p0;
reg   [31:0] grp_fu_387_p1;
reg   [31:0] grp_fu_392_p0;
reg   [31:0] grp_fu_392_p1;
reg   [31:0] grp_fu_396_p0;
reg   [31:0] grp_fu_403_p0;
wire   [0:0] icmp_ln11_fu_481_p2;
wire   [4:0] r_fu_451_p2;
wire   [9:0] tmp_1_fu_503_p3;
wire   [6:0] tmp_2_fu_515_p3;
wire   [10:0] zext_ln26_1_fu_511_p1;
wire   [10:0] zext_ln26_2_fu_523_p1;
wire   [4:0] add_ln26_fu_533_p2;
wire   [4:0] select_ln35_3_fu_547_p3;
wire   [4:0] c_fu_457_p2;
wire   [4:0] add_ln26_1_fu_463_p2;
wire   [0:0] icmp_ln14_fu_583_p2;
wire   [0:0] xor_ln35_fu_577_p2;
wire   [4:0] select_ln35_fu_487_p3;
wire   [0:0] and_ln35_fu_589_p2;
wire   [0:0] or_ln35_fu_601_p2;
wire   [4:0] add_ln26_3_fu_595_p2;
wire   [10:0] add_ln26_4_fu_627_p2;
wire   [4:0] add_ln26_7_fu_638_p2;
wire   [4:0] select_ln35_4_fu_561_p3;
wire   [4:0] select_ln35_8_fu_644_p3;
wire   [10:0] add_ln26_8_fu_656_p2;
wire   [4:0] add_ln26_11_fu_667_p2;
wire   [4:0] select_ln35_5_fu_569_p3;
wire   [10:0] add_ln11_fu_694_p2;
wire   [9:0] tmp_5_fu_708_p3;
wire   [6:0] tmp_6_fu_719_p3;
wire   [10:0] zext_ln26_3_fu_715_p1;
wire   [10:0] zext_ln26_4_fu_726_p1;
wire   [10:0] add_ln26_5_fu_736_p2;
wire   [10:0] add_ln26_12_fu_749_p2;
wire   [9:0] tmp_7_fu_759_p3;
wire   [6:0] tmp_8_fu_770_p3;
wire   [10:0] zext_ln26_5_fu_766_p1;
wire   [10:0] zext_ln26_6_fu_777_p1;
wire   [10:0] sub_ln26_2_fu_781_p2;
wire   [10:0] add_ln26_9_fu_792_p2;
wire   [10:0] add_ln26_13_fu_806_p2;
wire   [9:0] grp_fu_919_p3;
wire   [14:0] tmp_9_fu_843_p3;
wire   [15:0] zext_ln26_9_fu_850_p1;
wire   [15:0] zext_ln35_5_fu_854_p1;
wire   [15:0] add_ln35_2_fu_857_p2;
wire   [31:0] bitcast_ln34_fu_868_p1;
wire   [7:0] tmp_fu_872_p4;
wire   [22:0] trunc_ln34_fu_882_p1;
wire   [0:0] icmp_ln34_1_fu_892_p2;
wire   [0:0] icmp_ln34_fu_886_p2;
wire   [0:0] or_ln34_fu_898_p2;
wire   [0:0] tmp_4_fu_409_p2;
wire   [0:0] and_ln34_fu_904_p2;
wire   [5:0] grp_fu_919_p0;
wire   [4:0] grp_fu_919_p1;
wire   [4:0] grp_fu_919_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_CS_fsm_state24;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_919_p10;
wire   [9:0] grp_fu_919_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

conv_1_conv_1_weibkb #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_0_0_address0),
    .ce0(conv_1_weights_0_0_0_ce0),
    .q0(conv_1_weights_0_0_0_q0)
);

conv_1_conv_1_weicud #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_1_0_address0),
    .ce0(conv_1_weights_0_1_0_ce0),
    .q0(conv_1_weights_0_1_0_q0)
);

conv_1_conv_1_weidEe #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_0_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_0_2_0_address0),
    .ce0(conv_1_weights_0_2_0_ce0),
    .q0(conv_1_weights_0_2_0_q0)
);

conv_1_conv_1_weieOg #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_0_0_address0),
    .ce0(conv_1_weights_1_0_0_ce0),
    .q0(conv_1_weights_1_0_0_q0)
);

conv_1_conv_1_weifYi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_1_0_address0),
    .ce0(conv_1_weights_1_1_0_ce0),
    .q0(conv_1_weights_1_1_0_q0)
);

conv_1_conv_1_weig8j #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_1_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_1_2_0_address0),
    .ce0(conv_1_weights_1_2_0_ce0),
    .q0(conv_1_weights_1_2_0_q0)
);

conv_1_conv_1_weihbi #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_0_0_address0),
    .ce0(conv_1_weights_2_0_0_ce0),
    .q0(conv_1_weights_2_0_0_q0)
);

conv_1_conv_1_weiibs #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_1_0_address0),
    .ce0(conv_1_weights_2_1_0_ce0),
    .q0(conv_1_weights_2_1_0_q0)
);

conv_1_conv_1_weijbC #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_weights_2_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_weights_2_2_0_address0),
    .ce0(conv_1_weights_2_2_0_ce0),
    .q0(conv_1_weights_2_2_0_q0)
);

conv_1_conv_1_bias #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
conv_1_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_1_bias_address0),
    .ce0(conv_1_bias_ce0),
    .q0(conv_1_bias_q0)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_387_p0),
    .din1(grp_fu_387_p1),
    .ce(1'b1),
    .dout(grp_fu_387_p2)
);

conv_1_fadd_32ns_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fadd_32ns_kbM_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_392_p0),
    .din1(grp_fu_392_p1),
    .ce(1'b1),
    .dout(grp_fu_392_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_396_p0),
    .din1(conv_input_q0),
    .ce(1'b1),
    .dout(grp_fu_396_p2)
);

conv_1_fmul_32ns_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
conv_1_fmul_32ns_lbW_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_403_p0),
    .din1(conv_input_q1),
    .ce(1'b1),
    .dout(grp_fu_403_p2)
);

conv_1_fcmp_32ns_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
conv_1_fcmp_32ns_mb6_U5(
    .din0(grp_fu_392_p2),
    .din1(32'd0),
    .opcode(5'd2),
    .dout(tmp_4_fu_409_p2)
);

conv_1_mac_muladdncg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_1_mac_muladdncg_U6(
    .din0(grp_fu_919_p0),
    .din1(grp_fu_919_p1),
    .din2(grp_fu_919_p2),
    .dout(grp_fu_919_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        c_0_reg_365 <= select_ln35_7_reg_966;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_365 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        f_0_reg_376 <= f_reg_1181;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_376 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        indvar_flatten30_reg_332 <= add_ln8_reg_932;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten30_reg_332 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        indvar_flatten_reg_354 <= select_ln11_reg_1049;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_354 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        r_0_reg_343 <= select_ln35_1_reg_937;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_343 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_928 == 1'd0))) begin
        add_ln26_10_reg_1131 <= add_ln26_10_fu_801_p2;
        add_ln26_14_reg_1141 <= add_ln26_14_fu_815_p2;
        add_ln26_6_reg_1121 <= add_ln26_6_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_fu_469_p2 == 1'd0))) begin
        add_ln35_reg_954 <= add_ln35_fu_555_p2;
        select_ln35_2_reg_948 <= select_ln35_2_fu_539_p3;
        select_ln35_6_reg_960 <= select_ln35_6_fu_607_p3;
        select_ln35_9_reg_994 <= select_ln35_9_fu_673_p3;
        sub_ln26_reg_943[10 : 2] <= sub_ln26_fu_527_p2[10 : 2];
        zext_ln26_reg_999[5 : 0] <= zext_ln26_fu_681_p1[5 : 0];
        zext_ln35_2_reg_972[4 : 0] <= zext_ln35_2_fu_623_p1[4 : 0];
        zext_ln35_3_reg_983[4 : 0] <= zext_ln35_3_fu_652_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln8_reg_932 <= add_ln8_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_928_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_bias_load_reg_1211 <= conv_1_bias_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_928 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_1_weights_0_2_0_2_reg_1086 <= conv_1_weights_0_2_0_q0;
        conv_1_weights_1_0_0_2_reg_1091 <= conv_1_weights_1_0_0_q0;
        conv_1_weights_1_1_0_2_reg_1096 <= conv_1_weights_1_1_0_q0;
        conv_1_weights_1_2_0_2_reg_1101 <= conv_1_weights_1_2_0_q0;
        conv_1_weights_2_0_0_2_reg_1106 <= conv_1_weights_2_0_0_q0;
        conv_1_weights_2_1_0_2_reg_1111 <= conv_1_weights_2_1_0_q0;
        conv_1_weights_2_2_0_2_reg_1116 <= conv_1_weights_2_2_0_q0;
        sub_ln26_1_reg_1054[10 : 2] <= sub_ln26_1_fu_730_p2[10 : 2];
        zext_ln35_4_reg_1065[4 : 0] <= zext_ln35_4_fu_746_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_928 == 1'd0))) begin
        f_reg_1181 <= f_fu_832_p2;
        tmp_1_1_1_reg_1171 <= grp_fu_396_p2;
        tmp_1_1_2_reg_1176 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln8_reg_928 <= icmp_ln8_fu_469_p2;
        icmp_ln8_reg_928_pp0_iter1_reg <= icmp_ln8_reg_928;
        icmp_ln8_reg_928_pp0_iter2_reg <= icmp_ln8_reg_928_pp0_iter1_reg;
        icmp_ln8_reg_928_pp0_iter3_reg <= icmp_ln8_reg_928_pp0_iter2_reg;
        icmp_ln8_reg_928_pp0_iter4_reg <= icmp_ln8_reg_928_pp0_iter3_reg;
        select_ln35_1_reg_937_pp0_iter1_reg <= select_ln35_1_reg_937;
        select_ln35_1_reg_937_pp0_iter2_reg <= select_ln35_1_reg_937_pp0_iter1_reg;
        select_ln35_1_reg_937_pp0_iter3_reg <= select_ln35_1_reg_937_pp0_iter2_reg;
        select_ln35_1_reg_937_pp0_iter4_reg <= select_ln35_1_reg_937_pp0_iter3_reg;
        select_ln35_6_reg_960_pp0_iter1_reg <= select_ln35_6_reg_960;
        select_ln35_6_reg_960_pp0_iter2_reg <= select_ln35_6_reg_960_pp0_iter1_reg;
        select_ln35_6_reg_960_pp0_iter3_reg <= select_ln35_6_reg_960_pp0_iter2_reg;
        select_ln35_6_reg_960_pp0_iter4_reg <= select_ln35_6_reg_960_pp0_iter3_reg;
        select_ln35_7_reg_966_pp0_iter1_reg <= select_ln35_7_reg_966;
        select_ln35_7_reg_966_pp0_iter2_reg <= select_ln35_7_reg_966_pp0_iter1_reg;
        select_ln35_7_reg_966_pp0_iter3_reg <= select_ln35_7_reg_966_pp0_iter2_reg;
        select_ln35_7_reg_966_pp0_iter4_reg <= select_ln35_7_reg_966_pp0_iter3_reg;
        tmp_1_2_1_reg_1191_pp0_iter2_reg <= tmp_1_2_1_reg_1191;
        tmp_1_2_1_reg_1191_pp0_iter3_reg <= tmp_1_2_1_reg_1191_pp0_iter2_reg;
        tmp_1_2_reg_1186_pp0_iter2_reg <= tmp_1_2_reg_1186;
        zext_ln26_reg_999_pp0_iter1_reg[5 : 0] <= zext_ln26_reg_999[5 : 0];
        zext_ln26_reg_999_pp0_iter2_reg[5 : 0] <= zext_ln26_reg_999_pp0_iter1_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_928 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_928 == 1'd0)))) begin
        reg_425 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_928 == 1'd0)))) begin
        reg_431 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_928_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_928_pp0_iter1_reg == 1'd0)))) begin
        reg_436 <= grp_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_928_pp0_iter2_reg == 1'd0)))) begin
        reg_441 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln8_reg_928_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_928_pp0_iter3_reg == 1'd0)))) begin
        reg_446 <= grp_fu_392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln8_fu_469_p2 == 1'd0))) begin
        select_ln11_reg_1049 <= select_ln11_fu_700_p3;
        select_ln35_1_reg_937 <= select_ln35_1_fu_495_p3;
        select_ln35_7_reg_966 <= select_ln35_7_fu_615_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln8_reg_928 == 1'd0))) begin
        tmp_1_0_1_reg_1146 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        tmp_1_1_1_reg_1171_pp0_iter1_reg <= tmp_1_1_1_reg_1171;
        tmp_1_1_2_reg_1176_pp0_iter1_reg <= tmp_1_1_2_reg_1176;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln8_reg_928 == 1'd0))) begin
        tmp_1_1_reg_1161 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        tmp_1_2_1_reg_1191 <= grp_fu_403_p2;
        tmp_1_2_reg_1186 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_928_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_reg_1196 <= grp_fu_396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_2_2_reg_1196_pp0_iter2_reg <= tmp_1_2_2_reg_1196;
        tmp_1_2_2_reg_1196_pp0_iter3_reg <= tmp_1_2_2_reg_1196_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_928_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        w_sum_3_1_1_reg_1201 <= grp_fu_387_p2;
    end
end

always @ (*) begin
    if ((icmp_ln8_fu_469_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_369_p4 = select_ln35_7_reg_966;
    end else begin
        ap_phi_mux_c_0_phi_fu_369_p4 = c_0_reg_365;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        ap_phi_mux_f_0_phi_fu_380_p4 = f_reg_1181;
    end else begin
        ap_phi_mux_f_0_phi_fu_380_p4 = f_0_reg_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        ap_phi_mux_indvar_flatten30_phi_fu_336_p4 = add_ln8_reg_932;
    end else begin
        ap_phi_mux_indvar_flatten30_phi_fu_336_p4 = indvar_flatten30_reg_332;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_358_p4 = select_ln11_reg_1049;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_358_p4 = indvar_flatten_reg_354;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln8_reg_928 == 1'd0))) begin
        ap_phi_mux_r_0_phi_fu_347_p4 = select_ln35_1_reg_937;
    end else begin
        ap_phi_mux_r_0_phi_fu_347_p4 = r_0_reg_343;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_bias_ce0 = 1'b1;
    end else begin
        conv_1_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_0_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_0_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_1_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_1_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_0_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_1_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        conv_1_weights_2_2_0_ce0 = 1'b1;
    end else begin
        conv_1_weights_2_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv_input_address0 = zext_ln26_14_fu_828_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address0 = sext_ln26_fu_820_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address0 = zext_ln26_11_fu_796_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address0 = zext_ln26_12_fu_754_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address0 = zext_ln26_7_fu_633_p1;
        end else begin
            conv_input_address0 = 'bx;
        end
    end else begin
        conv_input_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_input_address1 = sext_ln26_1_fu_824_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_input_address1 = zext_ln26_13_fu_810_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_input_address1 = zext_ln26_8_fu_741_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_input_address1 = zext_ln26_10_fu_662_p1;
        end else begin
            conv_input_address1 = 'bx;
        end
    end else begin
        conv_input_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce0 = 1'b1;
    end else begin
        conv_input_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        conv_input_ce1 = 1'b1;
    end else begin
        conv_input_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln8_reg_928_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        conv_out_we0 = 1'b1;
    end else begin
        conv_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_387_p0 = reg_436;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_387_p0 = reg_431;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_387_p0 = grp_fu_396_p2;
    end else begin
        grp_fu_387_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_387_p1 = tmp_1_1_1_reg_1171_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_387_p1 = tmp_1_1_reg_1161;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_387_p1 = reg_425;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_387_p1 = tmp_1_0_1_reg_1146;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_387_p1 = 32'd0;
    end else begin
        grp_fu_387_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_392_p0 = reg_446;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_392_p0 = reg_441;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_392_p0 = w_sum_3_1_1_reg_1201;
    end else begin
        grp_fu_392_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_392_p1 = conv_1_bias_load_reg_1211;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_392_p1 = tmp_1_2_2_reg_1196_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_392_p1 = tmp_1_2_1_reg_1191_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_392_p1 = tmp_1_2_reg_1186_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_392_p1 = tmp_1_1_2_reg_1176_pp0_iter1_reg;
    end else begin
        grp_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_396_p0 = conv_1_weights_2_2_0_2_reg_1116;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_2_0_0_2_reg_1106;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_1_1_0_2_reg_1096;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_396_p0 = conv_1_weights_0_2_0_2_reg_1086;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_396_p0 = conv_1_weights_0_0_0_q0;
    end else begin
        grp_fu_396_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_403_p0 = conv_1_weights_2_1_0_2_reg_1111;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_403_p0 = conv_1_weights_1_2_0_2_reg_1101;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_403_p0 = conv_1_weights_1_0_0_2_reg_1091;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_403_p0 = conv_1_weights_0_1_0_q0;
        end else begin
            grp_fu_403_p0 = 'bx;
        end
    end else begin
        grp_fu_403_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_469_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln8_fu_469_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln11_fu_694_p2 = (11'd1 + ap_phi_mux_indvar_flatten_phi_fu_358_p4);

assign add_ln26_10_fu_801_p2 = (sub_ln26_2_fu_781_p2 + zext_ln35_3_reg_983);

assign add_ln26_11_fu_667_p2 = (5'd3 + select_ln35_fu_487_p3);

assign add_ln26_12_fu_749_p2 = (sub_ln26_reg_943 + zext_ln35_4_fu_746_p1);

assign add_ln26_13_fu_806_p2 = (sub_ln26_1_reg_1054 + zext_ln35_4_reg_1065);

assign add_ln26_14_fu_815_p2 = (sub_ln26_2_fu_781_p2 + zext_ln35_4_reg_1065);

assign add_ln26_1_fu_463_p2 = (ap_phi_mux_c_0_phi_fu_369_p4 + 5'd2);

assign add_ln26_3_fu_595_p2 = (5'd1 + select_ln35_fu_487_p3);

assign add_ln26_4_fu_627_p2 = (sub_ln26_fu_527_p2 + zext_ln35_2_fu_623_p1);

assign add_ln26_5_fu_736_p2 = (sub_ln26_1_fu_730_p2 + zext_ln35_2_reg_972);

assign add_ln26_6_fu_787_p2 = (sub_ln26_2_fu_781_p2 + zext_ln35_2_reg_972);

assign add_ln26_7_fu_638_p2 = (5'd2 + select_ln35_fu_487_p3);

assign add_ln26_8_fu_656_p2 = (sub_ln26_fu_527_p2 + zext_ln35_3_fu_652_p1);

assign add_ln26_9_fu_792_p2 = (sub_ln26_1_reg_1054 + zext_ln35_3_reg_983);

assign add_ln26_fu_533_p2 = (5'd2 + ap_phi_mux_r_0_phi_fu_347_p4);

assign add_ln35_2_fu_857_p2 = (zext_ln26_9_fu_850_p1 + zext_ln35_5_fu_854_p1);

assign add_ln35_fu_555_p2 = (ap_phi_mux_r_0_phi_fu_347_p4 + select_ln35_3_fu_547_p3);

assign add_ln8_fu_475_p2 = (ap_phi_mux_indvar_flatten30_phi_fu_336_p4 + 15'd1);

assign and_ln34_fu_904_p2 = (tmp_4_fu_409_p2 & or_ln34_fu_898_p2);

assign and_ln35_fu_589_p2 = (xor_ln35_fu_577_p2 & icmp_ln14_fu_583_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln34_fu_868_p1 = grp_fu_392_p2;

assign c_fu_457_p2 = (ap_phi_mux_c_0_phi_fu_369_p4 + 5'd1);

assign conv_1_bias_address0 = zext_ln26_reg_999_pp0_iter2_reg;

assign conv_1_weights_0_0_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_0_1_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_0_2_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_1_0_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_1_1_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_1_2_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_2_0_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_2_1_0_address0 = zext_ln26_fu_681_p1;

assign conv_1_weights_2_2_0_address0 = zext_ln26_fu_681_p1;

assign conv_out_address0 = zext_ln35_6_fu_863_p1;

assign conv_out_d0 = ((and_ln34_fu_904_p2[0:0] === 1'b1) ? grp_fu_392_p2 : 32'd0);

assign f_fu_832_p2 = (6'd1 + select_ln35_6_reg_960);

assign grp_fu_919_p0 = 10'd26;

assign grp_fu_919_p1 = grp_fu_919_p10;

assign grp_fu_919_p10 = select_ln35_1_reg_937_pp0_iter4_reg;

assign grp_fu_919_p2 = grp_fu_919_p20;

assign grp_fu_919_p20 = select_ln35_7_reg_966_pp0_iter4_reg;

assign icmp_ln11_fu_481_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_358_p4 == 11'd832) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_583_p2 = ((ap_phi_mux_f_0_phi_fu_380_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_892_p2 = ((trunc_ln34_fu_882_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_886_p2 = ((tmp_fu_872_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_469_p2 = ((ap_phi_mux_indvar_flatten30_phi_fu_336_p4 == 15'd21632) ? 1'b1 : 1'b0);

assign or_ln34_fu_898_p2 = (icmp_ln34_fu_886_p2 | icmp_ln34_1_fu_892_p2);

assign or_ln35_fu_601_p2 = (icmp_ln11_fu_481_p2 | and_ln35_fu_589_p2);

assign r_fu_451_p2 = (ap_phi_mux_r_0_phi_fu_347_p4 + 5'd1);

assign select_ln11_fu_700_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 11'd1 : add_ln11_fu_694_p2);

assign select_ln35_1_fu_495_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? r_fu_451_p2 : ap_phi_mux_r_0_phi_fu_347_p4);

assign select_ln35_2_fu_539_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? add_ln26_fu_533_p2 : r_fu_451_p2);

assign select_ln35_3_fu_547_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 5'd3 : 5'd2);

assign select_ln35_4_fu_561_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 5'd1 : c_fu_457_p2);

assign select_ln35_5_fu_569_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 5'd2 : add_ln26_1_fu_463_p2);

assign select_ln35_6_fu_607_p3 = ((or_ln35_fu_601_p2[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_f_0_phi_fu_380_p4);

assign select_ln35_7_fu_615_p3 = ((and_ln35_fu_589_p2[0:0] === 1'b1) ? add_ln26_3_fu_595_p2 : select_ln35_fu_487_p3);

assign select_ln35_8_fu_644_p3 = ((and_ln35_fu_589_p2[0:0] === 1'b1) ? add_ln26_7_fu_638_p2 : select_ln35_4_fu_561_p3);

assign select_ln35_9_fu_673_p3 = ((and_ln35_fu_589_p2[0:0] === 1'b1) ? add_ln26_11_fu_667_p2 : select_ln35_5_fu_569_p3);

assign select_ln35_fu_487_p3 = ((icmp_ln11_fu_481_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_c_0_phi_fu_369_p4);

assign sext_ln26_1_fu_824_p1 = $signed(add_ln26_10_reg_1131);

assign sext_ln26_fu_820_p1 = $signed(add_ln26_6_reg_1121);

assign sub_ln26_1_fu_730_p2 = (zext_ln26_3_fu_715_p1 - zext_ln26_4_fu_726_p1);

assign sub_ln26_2_fu_781_p2 = (zext_ln26_5_fu_766_p1 - zext_ln26_6_fu_777_p1);

assign sub_ln26_fu_527_p2 = (zext_ln26_1_fu_511_p1 - zext_ln26_2_fu_523_p1);

assign tmp_1_fu_503_p3 = {{select_ln35_1_fu_495_p3}, {5'd0}};

assign tmp_2_fu_515_p3 = {{select_ln35_1_fu_495_p3}, {2'd0}};

assign tmp_5_fu_708_p3 = {{select_ln35_2_reg_948}, {5'd0}};

assign tmp_6_fu_719_p3 = {{select_ln35_2_reg_948}, {2'd0}};

assign tmp_7_fu_759_p3 = {{add_ln35_reg_954}, {5'd0}};

assign tmp_8_fu_770_p3 = {{add_ln35_reg_954}, {2'd0}};

assign tmp_9_fu_843_p3 = {{grp_fu_919_p3}, {5'd0}};

assign tmp_fu_872_p4 = {{bitcast_ln34_fu_868_p1[30:23]}};

assign trunc_ln34_fu_882_p1 = bitcast_ln34_fu_868_p1[22:0];

assign xor_ln35_fu_577_p2 = (icmp_ln11_fu_481_p2 ^ 1'd1);

assign zext_ln26_10_fu_662_p1 = add_ln26_8_fu_656_p2;

assign zext_ln26_11_fu_796_p1 = add_ln26_9_fu_792_p2;

assign zext_ln26_12_fu_754_p1 = add_ln26_12_fu_749_p2;

assign zext_ln26_13_fu_810_p1 = add_ln26_13_fu_806_p2;

assign zext_ln26_14_fu_828_p1 = add_ln26_14_reg_1141;

assign zext_ln26_1_fu_511_p1 = tmp_1_fu_503_p3;

assign zext_ln26_2_fu_523_p1 = tmp_2_fu_515_p3;

assign zext_ln26_3_fu_715_p1 = tmp_5_fu_708_p3;

assign zext_ln26_4_fu_726_p1 = tmp_6_fu_719_p3;

assign zext_ln26_5_fu_766_p1 = tmp_7_fu_759_p3;

assign zext_ln26_6_fu_777_p1 = tmp_8_fu_770_p3;

assign zext_ln26_7_fu_633_p1 = add_ln26_4_fu_627_p2;

assign zext_ln26_8_fu_741_p1 = add_ln26_5_fu_736_p2;

assign zext_ln26_9_fu_850_p1 = tmp_9_fu_843_p3;

assign zext_ln26_fu_681_p1 = select_ln35_6_fu_607_p3;

assign zext_ln35_2_fu_623_p1 = select_ln35_7_fu_615_p3;

assign zext_ln35_3_fu_652_p1 = select_ln35_8_fu_644_p3;

assign zext_ln35_4_fu_746_p1 = select_ln35_9_reg_994;

assign zext_ln35_5_fu_854_p1 = select_ln35_6_reg_960_pp0_iter4_reg;

assign zext_ln35_6_fu_863_p1 = add_ln35_2_fu_857_p2;

always @ (posedge ap_clk) begin
    sub_ln26_reg_943[1:0] <= 2'b00;
    zext_ln35_2_reg_972[10:5] <= 6'b000000;
    zext_ln35_3_reg_983[10:5] <= 6'b000000;
    zext_ln26_reg_999[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_999_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln26_reg_999_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    sub_ln26_1_reg_1054[1:0] <= 2'b00;
    zext_ln35_4_reg_1065[10:5] <= 6'b000000;
end

endmodule //conv_1
