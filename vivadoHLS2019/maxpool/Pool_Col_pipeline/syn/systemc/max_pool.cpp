// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> max_pool::ap_ST_fsm_state1 = "1";
const sc_lv<4> max_pool::ap_ST_fsm_state2 = "10";
const sc_lv<4> max_pool::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> max_pool::ap_ST_fsm_state7 = "1000";
const sc_lv<32> max_pool::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool max_pool::ap_const_boolean_1 = true;
const sc_lv<32> max_pool::ap_const_lv32_1 = "1";
const sc_lv<1> max_pool::ap_const_lv1_0 = "0";
const sc_lv<32> max_pool::ap_const_lv32_2 = "10";
const bool max_pool::ap_const_boolean_0 = false;
const sc_lv<32> max_pool::ap_const_lv32_3 = "11";
const sc_lv<1> max_pool::ap_const_lv1_1 = "1";
const sc_lv<10> max_pool::ap_const_lv10_0 = "0000000000";
const sc_lv<3> max_pool::ap_const_lv3_0 = "000";
const sc_lv<8> max_pool::ap_const_lv8_0 = "00000000";
const sc_lv<4> max_pool::ap_const_lv4_0 = "0000";
const sc_lv<2> max_pool::ap_const_lv2_0 = "00";
const sc_lv<32> max_pool::ap_const_lv32_800000 = "100000000000000000000000";
const sc_lv<10> max_pool::ap_const_lv10_3F6 = "1111110110";
const sc_lv<10> max_pool::ap_const_lv10_1 = "1";
const sc_lv<3> max_pool::ap_const_lv3_1 = "1";
const sc_lv<8> max_pool::ap_const_lv8_A9 = "10101001";
const sc_lv<5> max_pool::ap_const_lv5_0 = "00000";
const sc_lv<4> max_pool::ap_const_lv4_D = "1101";
const sc_lv<4> max_pool::ap_const_lv4_1 = "1";
const sc_lv<8> max_pool::ap_const_lv8_D = "1101";
const sc_lv<3> max_pool::ap_const_lv3_4 = "100";
const sc_lv<2> max_pool::ap_const_lv2_1 = "1";
const sc_lv<2> max_pool::ap_const_lv2_2 = "10";
const sc_lv<32> max_pool::ap_const_lv32_17 = "10111";
const sc_lv<32> max_pool::ap_const_lv32_1E = "11110";
const sc_lv<8> max_pool::ap_const_lv8_FF = "11111111";
const sc_lv<23> max_pool::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> max_pool::ap_const_lv8_1 = "1";
const sc_lv<10> max_pool::ap_const_lv10_1A = "11010";
const sc_lv<5> max_pool::ap_const_lv5_2 = "10";

max_pool::max_pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    max_pool_fcmp_32nbkb_U1 = new max_pool_fcmp_32nbkb<1,2,32,32,1>("max_pool_fcmp_32nbkb_U1");
    max_pool_fcmp_32nbkb_U1->clk(ap_clk);
    max_pool_fcmp_32nbkb_U1->reset(ap_rst);
    max_pool_fcmp_32nbkb_U1->din0(conv_out_q0);
    max_pool_fcmp_32nbkb_U1->din1(ap_phi_mux_max_1_phi_fu_215_p4);
    max_pool_fcmp_32nbkb_U1->ce(ap_var_for_const0);
    max_pool_fcmp_32nbkb_U1->opcode(ap_var_for_const1);
    max_pool_fcmp_32nbkb_U1->dout(grp_fu_234_p2);
    max_pool_mac_mulacud_U2 = new max_pool_mac_mulacud<1,1,6,5,5,10>("max_pool_mac_mulacud_U2");
    max_pool_mac_mulacud_U2->din0(grp_fu_640_p0);
    max_pool_mac_mulacud_U2->din1(grp_fu_640_p1);
    max_pool_mac_mulacud_U2->din2(grp_fu_640_p2);
    max_pool_mac_mulacud_U2->dout(grp_fu_640_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln10_fu_246_p2);
    sensitive << ( indvar_flatten25_reg_132 );

    SC_METHOD(thread_add_ln13_1_fu_627_p2);
    sensitive << ( indvar_flatten7_reg_154 );

    SC_METHOD(thread_add_ln20_1_fu_390_p2);
    sensitive << ( indvar_flatten_reg_188 );

    SC_METHOD(thread_add_ln20_fu_433_p2);
    sensitive << ( select_ln13_1_reg_685 );
    sensitive << ( zext_ln20_fu_430_p1 );

    SC_METHOD(thread_add_ln29_1_fu_478_p2);
    sensitive << ( zext_ln26_reg_669 );
    sensitive << ( sub_ln29_fu_472_p2 );

    SC_METHOD(thread_add_ln36_1_fu_612_p2);
    sensitive << ( zext_ln26_1_reg_674 );
    sensitive << ( sub_ln36_fu_606_p2 );

    SC_METHOD(thread_add_ln36_fu_581_p2);
    sensitive << ( mul_ln36_reg_695 );
    sensitive << ( zext_ln36_1_fu_578_p1 );

    SC_METHOD(thread_and_ln29_1_fu_565_p2);
    sensitive << ( and_ln29_fu_559_p2 );
    sensitive << ( grp_fu_234_p2 );

    SC_METHOD(thread_and_ln29_2_fu_316_p2);
    sensitive << ( icmp_ln16_fu_310_p2 );
    sensitive << ( xor_ln29_fu_304_p2 );

    SC_METHOD(thread_and_ln29_fu_559_p2);
    sensitive << ( or_ln29_fu_535_p2 );
    sensitive << ( or_ln29_1_fu_553_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln20_fu_384_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( icmp_ln10_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_phi_mux_max_1_phi_fu_215_p4);
    sensitive << ( max_1_reg_210 );
    sensitive << ( icmp_ln20_reg_705_pp0_iter2_reg );
    sensitive << ( max_2_fu_571_p3 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_mpr_0_phi_fu_203_p4);
    sensitive << ( mpr_0_reg_199 );
    sensitive << ( icmp_ln20_reg_705 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln20_1_reg_719 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln10_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bitcast_ln29_1_fu_505_p1);
    sensitive << ( max_1_reg_210 );

    SC_METHOD(thread_bitcast_ln29_fu_488_p1);
    sensitive << ( max_reg_735 );

    SC_METHOD(thread_c_fu_622_p2);
    sensitive << ( select_ln13_reg_679 );

    SC_METHOD(thread_conv_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln29_3_fu_483_p1 );

    SC_METHOD(thread_conv_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_f_fu_252_p2);
    sensitive << ( f_0_reg_143 );

    SC_METHOD(thread_grp_fu_640_p0);
    sensitive << ( icmp_ln20_reg_705 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_640_p1);
    sensitive << ( icmp_ln20_reg_705 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_640_p10 );

    SC_METHOD(thread_grp_fu_640_p10);
    sensitive << ( add_ln20_fu_433_p2 );

    SC_METHOD(thread_grp_fu_640_p2);
    sensitive << ( icmp_ln20_reg_705 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( grp_fu_640_p20 );

    SC_METHOD(thread_grp_fu_640_p20);
    sensitive << ( j_fu_445_p2 );

    SC_METHOD(thread_icmp_ln10_fu_240_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten25_reg_132 );

    SC_METHOD(thread_icmp_ln13_fu_258_p2);
    sensitive << ( icmp_ln10_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten7_reg_154 );

    SC_METHOD(thread_icmp_ln16_fu_310_p2);
    sensitive << ( icmp_ln10_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( c_0_reg_177 );

    SC_METHOD(thread_icmp_ln20_fu_384_p2);
    sensitive << ( indvar_flatten_reg_188 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln23_fu_402_p2);
    sensitive << ( mpc_0_reg_223 );
    sensitive << ( icmp_ln20_fu_384_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln29_1_fu_529_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln20_reg_705_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( trunc_ln29_fu_501_p1 );

    SC_METHOD(thread_icmp_ln29_2_fu_541_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln20_reg_705_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_6_fu_509_p4 );

    SC_METHOD(thread_icmp_ln29_3_fu_547_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln20_reg_705_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( trunc_ln29_1_fu_519_p1 );

    SC_METHOD(thread_icmp_ln29_fu_523_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln20_reg_705_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( tmp_fu_491_p4 );

    SC_METHOD(thread_j_fu_445_p2);
    sensitive << ( shl_ln1_reg_700 );
    sensitive << ( zext_ln23_fu_442_p1 );

    SC_METHOD(thread_max_2_fu_571_p3);
    sensitive << ( max_1_reg_210 );
    sensitive << ( max_reg_735 );
    sensitive << ( and_ln29_1_fu_565_p2 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln36_3_fu_617_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_max_pool_out_d0);
    sensitive << ( max_1_reg_210 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_max_pool_out_we0);
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_mpc_fu_424_p2);
    sensitive << ( select_ln20_fu_408_p3 );

    SC_METHOD(thread_mpr_fu_396_p2);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_203_p4 );

    SC_METHOD(thread_mul_ln36_fu_370_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln36_fu_370_p00 );

    SC_METHOD(thread_mul_ln36_fu_370_p00);
    sensitive << ( select_ln13_2_fu_358_p3 );

    SC_METHOD(thread_mul_ln36_fu_370_p2);
    sensitive << ( mul_ln36_fu_370_p0 );

    SC_METHOD(thread_or_ln13_fu_328_p2);
    sensitive << ( icmp_ln13_fu_258_p2 );
    sensitive << ( and_ln29_2_fu_316_p2 );

    SC_METHOD(thread_or_ln29_1_fu_553_p2);
    sensitive << ( icmp_ln29_3_fu_547_p2 );
    sensitive << ( icmp_ln29_2_fu_541_p2 );

    SC_METHOD(thread_or_ln29_fu_535_p2);
    sensitive << ( icmp_ln29_1_fu_529_p2 );
    sensitive << ( icmp_ln29_fu_523_p2 );

    SC_METHOD(thread_p_shl2_cast_fu_586_p3);
    sensitive << ( add_ln36_fu_581_p2 );

    SC_METHOD(thread_p_shl_cast_fu_454_p3);
    sensitive << ( grp_fu_640_p3 );

    SC_METHOD(thread_r_fu_322_p2);
    sensitive << ( select_ln29_fu_264_p3 );

    SC_METHOD(thread_select_ln13_1_fu_350_p3);
    sensitive << ( and_ln29_2_fu_316_p2 );
    sensitive << ( shl_ln26_mid1_fu_342_p3 );
    sensitive << ( select_ln29_2_fu_296_p3 );

    SC_METHOD(thread_select_ln13_2_fu_358_p3);
    sensitive << ( select_ln29_fu_264_p3 );
    sensitive << ( and_ln29_2_fu_316_p2 );
    sensitive << ( r_fu_322_p2 );

    SC_METHOD(thread_select_ln13_3_fu_633_p3);
    sensitive << ( icmp_ln13_reg_659 );
    sensitive << ( add_ln13_1_fu_627_p2 );

    SC_METHOD(thread_select_ln13_fu_334_p3);
    sensitive << ( c_0_reg_177 );
    sensitive << ( or_ln13_fu_328_p2 );

    SC_METHOD(thread_select_ln20_1_fu_416_p3);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_203_p4 );
    sensitive << ( icmp_ln23_fu_402_p2 );
    sensitive << ( mpr_fu_396_p2 );

    SC_METHOD(thread_select_ln20_fu_408_p3);
    sensitive << ( mpc_0_reg_223 );
    sensitive << ( icmp_ln23_fu_402_p2 );

    SC_METHOD(thread_select_ln29_1_fu_272_p3);
    sensitive << ( icmp_ln13_fu_258_p2 );
    sensitive << ( f_0_reg_143 );
    sensitive << ( f_fu_252_p2 );

    SC_METHOD(thread_select_ln29_2_fu_296_p3);
    sensitive << ( icmp_ln13_fu_258_p2 );
    sensitive << ( shl_ln_fu_288_p3 );

    SC_METHOD(thread_select_ln29_fu_264_p3);
    sensitive << ( icmp_ln13_fu_258_p2 );
    sensitive << ( r_0_reg_166 );

    SC_METHOD(thread_shl_ln1_fu_376_p3);
    sensitive << ( select_ln13_fu_334_p3 );

    SC_METHOD(thread_shl_ln26_mid1_fu_342_p3);
    sensitive << ( r_fu_322_p2 );

    SC_METHOD(thread_shl_ln_fu_288_p3);
    sensitive << ( r_0_reg_166 );

    SC_METHOD(thread_sub_ln29_fu_472_p2);
    sensitive << ( p_shl_cast_fu_454_p3 );
    sensitive << ( zext_ln29_2_fu_468_p1 );

    SC_METHOD(thread_sub_ln36_fu_606_p2);
    sensitive << ( p_shl2_cast_fu_586_p3 );
    sensitive << ( zext_ln36_2_fu_602_p1 );

    SC_METHOD(thread_tmp_1_fu_594_p3);
    sensitive << ( add_ln36_fu_581_p2 );

    SC_METHOD(thread_tmp_2_fu_461_p3);
    sensitive << ( grp_fu_640_p3 );

    SC_METHOD(thread_tmp_6_fu_509_p4);
    sensitive << ( bitcast_ln29_1_fu_505_p1 );

    SC_METHOD(thread_tmp_fu_491_p4);
    sensitive << ( bitcast_ln29_fu_488_p1 );

    SC_METHOD(thread_trunc_ln29_1_fu_519_p1);
    sensitive << ( bitcast_ln29_1_fu_505_p1 );

    SC_METHOD(thread_trunc_ln29_fu_501_p1);
    sensitive << ( bitcast_ln29_fu_488_p1 );

    SC_METHOD(thread_xor_ln29_fu_304_p2);
    sensitive << ( icmp_ln13_fu_258_p2 );

    SC_METHOD(thread_zext_ln20_fu_430_p1);
    sensitive << ( select_ln20_1_reg_719 );

    SC_METHOD(thread_zext_ln23_fu_442_p1);
    sensitive << ( select_ln20_reg_714 );

    SC_METHOD(thread_zext_ln26_1_fu_284_p1);
    sensitive << ( select_ln29_1_fu_272_p3 );

    SC_METHOD(thread_zext_ln26_fu_280_p1);
    sensitive << ( select_ln29_1_fu_272_p3 );

    SC_METHOD(thread_zext_ln29_2_fu_468_p1);
    sensitive << ( tmp_2_fu_461_p3 );

    SC_METHOD(thread_zext_ln29_3_fu_483_p1);
    sensitive << ( add_ln29_1_fu_478_p2 );

    SC_METHOD(thread_zext_ln36_1_fu_578_p1);
    sensitive << ( select_ln13_reg_679 );

    SC_METHOD(thread_zext_ln36_2_fu_602_p1);
    sensitive << ( tmp_1_fu_594_p3 );

    SC_METHOD(thread_zext_ln36_3_fu_617_p1);
    sensitive << ( add_ln36_1_fu_612_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln10_fu_240_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln20_fu_384_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv_out_address0, "(port)conv_out_address0");
    sc_trace(mVcdFile, conv_out_ce0, "(port)conv_out_ce0");
    sc_trace(mVcdFile, conv_out_q0, "(port)conv_out_q0");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_we0, "(port)max_pool_out_we0");
    sc_trace(mVcdFile, max_pool_out_d0, "(port)max_pool_out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_188, "indvar_flatten_reg_188");
    sc_trace(mVcdFile, mpr_0_reg_199, "mpr_0_reg_199");
    sc_trace(mVcdFile, max_1_reg_210, "max_1_reg_210");
    sc_trace(mVcdFile, mpc_0_reg_223, "mpc_0_reg_223");
    sc_trace(mVcdFile, icmp_ln10_fu_240_p2, "icmp_ln10_fu_240_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln10_fu_246_p2, "add_ln10_fu_246_p2");
    sc_trace(mVcdFile, add_ln10_reg_654, "add_ln10_reg_654");
    sc_trace(mVcdFile, icmp_ln13_fu_258_p2, "icmp_ln13_fu_258_p2");
    sc_trace(mVcdFile, icmp_ln13_reg_659, "icmp_ln13_reg_659");
    sc_trace(mVcdFile, select_ln29_1_fu_272_p3, "select_ln29_1_fu_272_p3");
    sc_trace(mVcdFile, select_ln29_1_reg_664, "select_ln29_1_reg_664");
    sc_trace(mVcdFile, zext_ln26_fu_280_p1, "zext_ln26_fu_280_p1");
    sc_trace(mVcdFile, zext_ln26_reg_669, "zext_ln26_reg_669");
    sc_trace(mVcdFile, zext_ln26_1_fu_284_p1, "zext_ln26_1_fu_284_p1");
    sc_trace(mVcdFile, zext_ln26_1_reg_674, "zext_ln26_1_reg_674");
    sc_trace(mVcdFile, select_ln13_fu_334_p3, "select_ln13_fu_334_p3");
    sc_trace(mVcdFile, select_ln13_reg_679, "select_ln13_reg_679");
    sc_trace(mVcdFile, select_ln13_1_fu_350_p3, "select_ln13_1_fu_350_p3");
    sc_trace(mVcdFile, select_ln13_1_reg_685, "select_ln13_1_reg_685");
    sc_trace(mVcdFile, select_ln13_2_fu_358_p3, "select_ln13_2_fu_358_p3");
    sc_trace(mVcdFile, select_ln13_2_reg_690, "select_ln13_2_reg_690");
    sc_trace(mVcdFile, mul_ln36_fu_370_p2, "mul_ln36_fu_370_p2");
    sc_trace(mVcdFile, mul_ln36_reg_695, "mul_ln36_reg_695");
    sc_trace(mVcdFile, shl_ln1_fu_376_p3, "shl_ln1_fu_376_p3");
    sc_trace(mVcdFile, shl_ln1_reg_700, "shl_ln1_reg_700");
    sc_trace(mVcdFile, icmp_ln20_fu_384_p2, "icmp_ln20_fu_384_p2");
    sc_trace(mVcdFile, icmp_ln20_reg_705, "icmp_ln20_reg_705");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln20_reg_705_pp0_iter1_reg, "icmp_ln20_reg_705_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln20_reg_705_pp0_iter2_reg, "icmp_ln20_reg_705_pp0_iter2_reg");
    sc_trace(mVcdFile, add_ln20_1_fu_390_p2, "add_ln20_1_fu_390_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln20_fu_408_p3, "select_ln20_fu_408_p3");
    sc_trace(mVcdFile, select_ln20_reg_714, "select_ln20_reg_714");
    sc_trace(mVcdFile, select_ln20_1_fu_416_p3, "select_ln20_1_fu_416_p3");
    sc_trace(mVcdFile, select_ln20_1_reg_719, "select_ln20_1_reg_719");
    sc_trace(mVcdFile, mpc_fu_424_p2, "mpc_fu_424_p2");
    sc_trace(mVcdFile, max_reg_735, "max_reg_735");
    sc_trace(mVcdFile, max_2_fu_571_p3, "max_2_fu_571_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, c_fu_622_p2, "c_fu_622_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, select_ln13_3_fu_633_p3, "select_ln13_3_fu_633_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, indvar_flatten25_reg_132, "indvar_flatten25_reg_132");
    sc_trace(mVcdFile, f_0_reg_143, "f_0_reg_143");
    sc_trace(mVcdFile, indvar_flatten7_reg_154, "indvar_flatten7_reg_154");
    sc_trace(mVcdFile, r_0_reg_166, "r_0_reg_166");
    sc_trace(mVcdFile, c_0_reg_177, "c_0_reg_177");
    sc_trace(mVcdFile, ap_phi_mux_mpr_0_phi_fu_203_p4, "ap_phi_mux_mpr_0_phi_fu_203_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_max_1_phi_fu_215_p4, "ap_phi_mux_max_1_phi_fu_215_p4");
    sc_trace(mVcdFile, zext_ln29_3_fu_483_p1, "zext_ln29_3_fu_483_p1");
    sc_trace(mVcdFile, zext_ln36_3_fu_617_p1, "zext_ln36_3_fu_617_p1");
    sc_trace(mVcdFile, f_fu_252_p2, "f_fu_252_p2");
    sc_trace(mVcdFile, shl_ln_fu_288_p3, "shl_ln_fu_288_p3");
    sc_trace(mVcdFile, icmp_ln16_fu_310_p2, "icmp_ln16_fu_310_p2");
    sc_trace(mVcdFile, xor_ln29_fu_304_p2, "xor_ln29_fu_304_p2");
    sc_trace(mVcdFile, select_ln29_fu_264_p3, "select_ln29_fu_264_p3");
    sc_trace(mVcdFile, and_ln29_2_fu_316_p2, "and_ln29_2_fu_316_p2");
    sc_trace(mVcdFile, or_ln13_fu_328_p2, "or_ln13_fu_328_p2");
    sc_trace(mVcdFile, r_fu_322_p2, "r_fu_322_p2");
    sc_trace(mVcdFile, shl_ln26_mid1_fu_342_p3, "shl_ln26_mid1_fu_342_p3");
    sc_trace(mVcdFile, select_ln29_2_fu_296_p3, "select_ln29_2_fu_296_p3");
    sc_trace(mVcdFile, mul_ln36_fu_370_p0, "mul_ln36_fu_370_p0");
    sc_trace(mVcdFile, icmp_ln23_fu_402_p2, "icmp_ln23_fu_402_p2");
    sc_trace(mVcdFile, mpr_fu_396_p2, "mpr_fu_396_p2");
    sc_trace(mVcdFile, zext_ln20_fu_430_p1, "zext_ln20_fu_430_p1");
    sc_trace(mVcdFile, add_ln20_fu_433_p2, "add_ln20_fu_433_p2");
    sc_trace(mVcdFile, zext_ln23_fu_442_p1, "zext_ln23_fu_442_p1");
    sc_trace(mVcdFile, j_fu_445_p2, "j_fu_445_p2");
    sc_trace(mVcdFile, grp_fu_640_p3, "grp_fu_640_p3");
    sc_trace(mVcdFile, tmp_2_fu_461_p3, "tmp_2_fu_461_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_454_p3, "p_shl_cast_fu_454_p3");
    sc_trace(mVcdFile, zext_ln29_2_fu_468_p1, "zext_ln29_2_fu_468_p1");
    sc_trace(mVcdFile, sub_ln29_fu_472_p2, "sub_ln29_fu_472_p2");
    sc_trace(mVcdFile, add_ln29_1_fu_478_p2, "add_ln29_1_fu_478_p2");
    sc_trace(mVcdFile, bitcast_ln29_fu_488_p1, "bitcast_ln29_fu_488_p1");
    sc_trace(mVcdFile, bitcast_ln29_1_fu_505_p1, "bitcast_ln29_1_fu_505_p1");
    sc_trace(mVcdFile, tmp_fu_491_p4, "tmp_fu_491_p4");
    sc_trace(mVcdFile, trunc_ln29_fu_501_p1, "trunc_ln29_fu_501_p1");
    sc_trace(mVcdFile, icmp_ln29_1_fu_529_p2, "icmp_ln29_1_fu_529_p2");
    sc_trace(mVcdFile, icmp_ln29_fu_523_p2, "icmp_ln29_fu_523_p2");
    sc_trace(mVcdFile, tmp_6_fu_509_p4, "tmp_6_fu_509_p4");
    sc_trace(mVcdFile, trunc_ln29_1_fu_519_p1, "trunc_ln29_1_fu_519_p1");
    sc_trace(mVcdFile, icmp_ln29_3_fu_547_p2, "icmp_ln29_3_fu_547_p2");
    sc_trace(mVcdFile, icmp_ln29_2_fu_541_p2, "icmp_ln29_2_fu_541_p2");
    sc_trace(mVcdFile, or_ln29_fu_535_p2, "or_ln29_fu_535_p2");
    sc_trace(mVcdFile, or_ln29_1_fu_553_p2, "or_ln29_1_fu_553_p2");
    sc_trace(mVcdFile, and_ln29_fu_559_p2, "and_ln29_fu_559_p2");
    sc_trace(mVcdFile, grp_fu_234_p2, "grp_fu_234_p2");
    sc_trace(mVcdFile, and_ln29_1_fu_565_p2, "and_ln29_1_fu_565_p2");
    sc_trace(mVcdFile, zext_ln36_1_fu_578_p1, "zext_ln36_1_fu_578_p1");
    sc_trace(mVcdFile, add_ln36_fu_581_p2, "add_ln36_fu_581_p2");
    sc_trace(mVcdFile, tmp_1_fu_594_p3, "tmp_1_fu_594_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_586_p3, "p_shl2_cast_fu_586_p3");
    sc_trace(mVcdFile, zext_ln36_2_fu_602_p1, "zext_ln36_2_fu_602_p1");
    sc_trace(mVcdFile, sub_ln36_fu_606_p2, "sub_ln36_fu_606_p2");
    sc_trace(mVcdFile, add_ln36_1_fu_612_p2, "add_ln36_1_fu_612_p2");
    sc_trace(mVcdFile, add_ln13_1_fu_627_p2, "add_ln13_1_fu_627_p2");
    sc_trace(mVcdFile, grp_fu_640_p0, "grp_fu_640_p0");
    sc_trace(mVcdFile, grp_fu_640_p1, "grp_fu_640_p1");
    sc_trace(mVcdFile, grp_fu_640_p2, "grp_fu_640_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_640_p10, "grp_fu_640_p10");
    sc_trace(mVcdFile, grp_fu_640_p20, "grp_fu_640_p20");
    sc_trace(mVcdFile, mul_ln36_fu_370_p00, "mul_ln36_fu_370_p00");
#endif

    }
    mHdltvinHandle.open("max_pool.hdltvin.dat");
    mHdltvoutHandle.open("max_pool.hdltvout.dat");
}

max_pool::~max_pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete max_pool_fcmp_32nbkb_U1;
    delete max_pool_mac_mulacud_U2;
}

void max_pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void max_pool::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void max_pool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_0_reg_177 = c_fu_622_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_177 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        f_0_reg_143 = select_ln29_1_reg_664.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_143 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten25_reg_132 = add_ln10_reg_654.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten25_reg_132 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        indvar_flatten7_reg_154 = select_ln13_3_fu_633_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten7_reg_154 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_384_p2.read()))) {
        indvar_flatten_reg_188 = add_ln20_1_fu_390_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_188 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_705_pp0_iter2_reg.read()))) {
        max_1_reg_210 = max_2_fu_571_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
        max_1_reg_210 = ap_const_lv32_800000;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_384_p2.read()))) {
        mpc_0_reg_223 = mpc_fu_424_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
        mpc_0_reg_223 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_705.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mpr_0_reg_199 = select_ln20_1_reg_719.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
        mpr_0_reg_199 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_0_reg_166 = select_ln13_2_reg_690.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_166 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln10_reg_654 = add_ln10_fu_246_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_0))) {
        icmp_ln13_reg_659 = icmp_ln13_fu_258_p2.read();
        mul_ln36_reg_695 = mul_ln36_fu_370_p2.read();
        select_ln13_1_reg_685 = select_ln13_1_fu_350_p3.read();
        select_ln13_2_reg_690 = select_ln13_2_fu_358_p3.read();
        select_ln13_reg_679 = select_ln13_fu_334_p3.read();
        select_ln29_1_reg_664 = select_ln29_1_fu_272_p3.read();
        shl_ln1_reg_700 = shl_ln1_fu_376_p3.read();
        zext_ln26_1_reg_674 = zext_ln26_1_fu_284_p1.read();
        zext_ln26_reg_669 = zext_ln26_fu_280_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln20_reg_705 = icmp_ln20_fu_384_p2.read();
        icmp_ln20_reg_705_pp0_iter1_reg = icmp_ln20_reg_705.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln20_reg_705_pp0_iter2_reg = icmp_ln20_reg_705_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_705_pp0_iter1_reg.read()))) {
        max_reg_735 = conv_out_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_384_p2.read()))) {
        select_ln20_1_reg_719 = select_ln20_1_fu_416_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_fu_384_p2.read()))) {
        select_ln20_reg_714 = select_ln20_fu_408_p3.read();
    }
}

void max_pool::thread_add_ln10_fu_246_p2() {
    add_ln10_fu_246_p2 = (!indvar_flatten25_reg_132.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten25_reg_132.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void max_pool::thread_add_ln13_1_fu_627_p2() {
    add_ln13_1_fu_627_p2 = (!indvar_flatten7_reg_154.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(indvar_flatten7_reg_154.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void max_pool::thread_add_ln20_1_fu_390_p2() {
    add_ln20_1_fu_390_p2 = (!indvar_flatten_reg_188.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(indvar_flatten_reg_188.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pool::thread_add_ln20_fu_433_p2() {
    add_ln20_fu_433_p2 = (!zext_ln20_fu_430_p1.read().is_01() || !select_ln13_1_reg_685.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln20_fu_430_p1.read()) + sc_biguint<5>(select_ln13_1_reg_685.read()));
}

void max_pool::thread_add_ln29_1_fu_478_p2() {
    add_ln29_1_fu_478_p2 = (!sub_ln29_fu_472_p2.read().is_01() || !zext_ln26_reg_669.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln29_fu_472_p2.read()) + sc_biguint<13>(zext_ln26_reg_669.read()));
}

void max_pool::thread_add_ln36_1_fu_612_p2() {
    add_ln36_1_fu_612_p2 = (!zext_ln26_1_reg_674.read().is_01() || !sub_ln36_fu_606_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln26_1_reg_674.read()) + sc_biguint<11>(sub_ln36_fu_606_p2.read()));
}

void max_pool::thread_add_ln36_fu_581_p2() {
    add_ln36_fu_581_p2 = (!zext_ln36_1_fu_578_p1.read().is_01() || !mul_ln36_reg_695.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln36_1_fu_578_p1.read()) + sc_biguint<8>(mul_ln36_reg_695.read()));
}

void max_pool::thread_and_ln29_1_fu_565_p2() {
    and_ln29_1_fu_565_p2 = (and_ln29_fu_559_p2.read() & grp_fu_234_p2.read());
}

void max_pool::thread_and_ln29_2_fu_316_p2() {
    and_ln29_2_fu_316_p2 = (icmp_ln16_fu_310_p2.read() & xor_ln29_fu_304_p2.read());
}

void max_pool::thread_and_ln29_fu_559_p2() {
    and_ln29_fu_559_p2 = (or_ln29_fu_535_p2.read() & or_ln29_1_fu_553_p2.read());
}

void max_pool::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void max_pool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[3];
}

void max_pool::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln20_fu_384_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void max_pool::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pool::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void max_pool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void max_pool::thread_ap_phi_mux_max_1_phi_fu_215_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_705_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_max_1_phi_fu_215_p4 = max_2_fu_571_p3.read();
    } else {
        ap_phi_mux_max_1_phi_fu_215_p4 = max_1_reg_210.read();
    }
}

void max_pool::thread_ap_phi_mux_mpr_0_phi_fu_203_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_705.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_mpr_0_phi_fu_203_p4 = select_ln20_1_reg_719.read();
    } else {
        ap_phi_mux_mpr_0_phi_fu_203_p4 = mpr_0_reg_199.read();
    }
}

void max_pool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pool::thread_bitcast_ln29_1_fu_505_p1() {
    bitcast_ln29_1_fu_505_p1 = max_1_reg_210.read();
}

void max_pool::thread_bitcast_ln29_fu_488_p1() {
    bitcast_ln29_fu_488_p1 = max_reg_735.read();
}

void max_pool::thread_c_fu_622_p2() {
    c_fu_622_p2 = (!select_ln13_reg_679.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln13_reg_679.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool::thread_conv_out_address0() {
    conv_out_address0 =  (sc_lv<12>) (zext_ln29_3_fu_483_p1.read());
}

void max_pool::thread_conv_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        conv_out_ce0 = ap_const_logic_1;
    } else {
        conv_out_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_f_fu_252_p2() {
    f_fu_252_p2 = (!f_0_reg_143.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(f_0_reg_143.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pool::thread_grp_fu_640_p0() {
    grp_fu_640_p0 =  (sc_lv<6>) (ap_const_lv10_1A);
}

void max_pool::thread_grp_fu_640_p1() {
    grp_fu_640_p1 =  (sc_lv<5>) (grp_fu_640_p10.read());
}

void max_pool::thread_grp_fu_640_p10() {
    grp_fu_640_p10 = esl_zext<10,5>(add_ln20_fu_433_p2.read());
}

void max_pool::thread_grp_fu_640_p2() {
    grp_fu_640_p2 =  (sc_lv<5>) (grp_fu_640_p20.read());
}

void max_pool::thread_grp_fu_640_p20() {
    grp_fu_640_p20 = esl_zext<10,5>(j_fu_445_p2.read());
}

void max_pool::thread_icmp_ln10_fu_240_p2() {
    icmp_ln10_fu_240_p2 = (!indvar_flatten25_reg_132.read().is_01() || !ap_const_lv10_3F6.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten25_reg_132.read() == ap_const_lv10_3F6);
}

void max_pool::thread_icmp_ln13_fu_258_p2() {
    icmp_ln13_fu_258_p2 = (!indvar_flatten7_reg_154.read().is_01() || !ap_const_lv8_A9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten7_reg_154.read() == ap_const_lv8_A9);
}

void max_pool::thread_icmp_ln16_fu_310_p2() {
    icmp_ln16_fu_310_p2 = (!c_0_reg_177.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_177.read() == ap_const_lv4_D);
}

void max_pool::thread_icmp_ln20_fu_384_p2() {
    icmp_ln20_fu_384_p2 = (!indvar_flatten_reg_188.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_188.read() == ap_const_lv3_4);
}

void max_pool::thread_icmp_ln23_fu_402_p2() {
    icmp_ln23_fu_402_p2 = (!mpc_0_reg_223.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(mpc_0_reg_223.read() == ap_const_lv2_2);
}

void max_pool::thread_icmp_ln29_1_fu_529_p2() {
    icmp_ln29_1_fu_529_p2 = (!trunc_ln29_fu_501_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_fu_501_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_2_fu_541_p2() {
    icmp_ln29_2_fu_541_p2 = (!tmp_6_fu_509_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_509_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_icmp_ln29_3_fu_547_p2() {
    icmp_ln29_3_fu_547_p2 = (!trunc_ln29_1_fu_519_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_1_fu_519_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_fu_523_p2() {
    icmp_ln29_fu_523_p2 = (!tmp_fu_491_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_491_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_j_fu_445_p2() {
    j_fu_445_p2 = (!zext_ln23_fu_442_p1.read().is_01() || !shl_ln1_reg_700.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln23_fu_442_p1.read()) + sc_biguint<5>(shl_ln1_reg_700.read()));
}

void max_pool::thread_max_2_fu_571_p3() {
    max_2_fu_571_p3 = (!and_ln29_1_fu_565_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln29_1_fu_565_p2.read()[0].to_bool())? max_reg_735.read(): max_1_reg_210.read());
}

void max_pool::thread_max_pool_out_address0() {
    max_pool_out_address0 =  (sc_lv<10>) (zext_ln36_3_fu_617_p1.read());
}

void max_pool::thread_max_pool_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_max_pool_out_d0() {
    max_pool_out_d0 = max_1_reg_210.read();
}

void max_pool::thread_max_pool_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        max_pool_out_we0 = ap_const_logic_1;
    } else {
        max_pool_out_we0 = ap_const_logic_0;
    }
}

void max_pool::thread_mpc_fu_424_p2() {
    mpc_fu_424_p2 = (!ap_const_lv2_1.is_01() || !select_ln20_fu_408_p3.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(select_ln20_fu_408_p3.read()));
}

void max_pool::thread_mpr_fu_396_p2() {
    mpr_fu_396_p2 = (!ap_const_lv2_1.is_01() || !ap_phi_mux_mpr_0_phi_fu_203_p4.read().is_01())? sc_lv<2>(): (sc_biguint<2>(ap_const_lv2_1) + sc_biguint<2>(ap_phi_mux_mpr_0_phi_fu_203_p4.read()));
}

void max_pool::thread_mul_ln36_fu_370_p0() {
    mul_ln36_fu_370_p0 =  (sc_lv<4>) (mul_ln36_fu_370_p00.read());
}

void max_pool::thread_mul_ln36_fu_370_p00() {
    mul_ln36_fu_370_p00 = esl_zext<8,4>(select_ln13_2_fu_358_p3.read());
}

void max_pool::thread_mul_ln36_fu_370_p2() {
    mul_ln36_fu_370_p2 = (!mul_ln36_fu_370_p0.read().is_01() || !ap_const_lv8_D.is_01())? sc_lv<8>(): sc_biguint<4>(mul_ln36_fu_370_p0.read()) * sc_biguint<8>(ap_const_lv8_D);
}

void max_pool::thread_or_ln13_fu_328_p2() {
    or_ln13_fu_328_p2 = (and_ln29_2_fu_316_p2.read() | icmp_ln13_fu_258_p2.read());
}

void max_pool::thread_or_ln29_1_fu_553_p2() {
    or_ln29_1_fu_553_p2 = (icmp_ln29_3_fu_547_p2.read() | icmp_ln29_2_fu_541_p2.read());
}

void max_pool::thread_or_ln29_fu_535_p2() {
    or_ln29_fu_535_p2 = (icmp_ln29_1_fu_529_p2.read() | icmp_ln29_fu_523_p2.read());
}

void max_pool::thread_p_shl2_cast_fu_586_p3() {
    p_shl2_cast_fu_586_p3 = esl_concat<8,3>(add_ln36_fu_581_p2.read(), ap_const_lv3_0);
}

void max_pool::thread_p_shl_cast_fu_454_p3() {
    p_shl_cast_fu_454_p3 = esl_concat<10,3>(grp_fu_640_p3.read(), ap_const_lv3_0);
}

void max_pool::thread_r_fu_322_p2() {
    r_fu_322_p2 = (!select_ln29_fu_264_p3.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(select_ln29_fu_264_p3.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool::thread_select_ln13_1_fu_350_p3() {
    select_ln13_1_fu_350_p3 = (!and_ln29_2_fu_316_p2.read()[0].is_01())? sc_lv<5>(): ((and_ln29_2_fu_316_p2.read()[0].to_bool())? shl_ln26_mid1_fu_342_p3.read(): select_ln29_2_fu_296_p3.read());
}

void max_pool::thread_select_ln13_2_fu_358_p3() {
    select_ln13_2_fu_358_p3 = (!and_ln29_2_fu_316_p2.read()[0].is_01())? sc_lv<4>(): ((and_ln29_2_fu_316_p2.read()[0].to_bool())? r_fu_322_p2.read(): select_ln29_fu_264_p3.read());
}

void max_pool::thread_select_ln13_3_fu_633_p3() {
    select_ln13_3_fu_633_p3 = (!icmp_ln13_reg_659.read()[0].is_01())? sc_lv<8>(): ((icmp_ln13_reg_659.read()[0].to_bool())? ap_const_lv8_1: add_ln13_1_fu_627_p2.read());
}

void max_pool::thread_select_ln13_fu_334_p3() {
    select_ln13_fu_334_p3 = (!or_ln13_fu_328_p2.read()[0].is_01())? sc_lv<4>(): ((or_ln13_fu_328_p2.read()[0].to_bool())? ap_const_lv4_0: c_0_reg_177.read());
}

void max_pool::thread_select_ln20_1_fu_416_p3() {
    select_ln20_1_fu_416_p3 = (!icmp_ln23_fu_402_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln23_fu_402_p2.read()[0].to_bool())? mpr_fu_396_p2.read(): ap_phi_mux_mpr_0_phi_fu_203_p4.read());
}

void max_pool::thread_select_ln20_fu_408_p3() {
    select_ln20_fu_408_p3 = (!icmp_ln23_fu_402_p2.read()[0].is_01())? sc_lv<2>(): ((icmp_ln23_fu_402_p2.read()[0].to_bool())? ap_const_lv2_0: mpc_0_reg_223.read());
}

void max_pool::thread_select_ln29_1_fu_272_p3() {
    select_ln29_1_fu_272_p3 = (!icmp_ln13_fu_258_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln13_fu_258_p2.read()[0].to_bool())? f_fu_252_p2.read(): f_0_reg_143.read());
}

void max_pool::thread_select_ln29_2_fu_296_p3() {
    select_ln29_2_fu_296_p3 = (!icmp_ln13_fu_258_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln13_fu_258_p2.read()[0].to_bool())? ap_const_lv5_0: shl_ln_fu_288_p3.read());
}

void max_pool::thread_select_ln29_fu_264_p3() {
    select_ln29_fu_264_p3 = (!icmp_ln13_fu_258_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln13_fu_258_p2.read()[0].to_bool())? ap_const_lv4_0: r_0_reg_166.read());
}

void max_pool::thread_shl_ln1_fu_376_p3() {
    shl_ln1_fu_376_p3 = esl_concat<4,1>(select_ln13_fu_334_p3.read(), ap_const_lv1_0);
}

void max_pool::thread_shl_ln26_mid1_fu_342_p3() {
    shl_ln26_mid1_fu_342_p3 = esl_concat<4,1>(r_fu_322_p2.read(), ap_const_lv1_0);
}

void max_pool::thread_shl_ln_fu_288_p3() {
    shl_ln_fu_288_p3 = esl_concat<4,1>(r_0_reg_166.read(), ap_const_lv1_0);
}

void max_pool::thread_sub_ln29_fu_472_p2() {
    sub_ln29_fu_472_p2 = (!p_shl_cast_fu_454_p3.read().is_01() || !zext_ln29_2_fu_468_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_454_p3.read()) - sc_biguint<13>(zext_ln29_2_fu_468_p1.read()));
}

void max_pool::thread_sub_ln36_fu_606_p2() {
    sub_ln36_fu_606_p2 = (!p_shl2_cast_fu_586_p3.read().is_01() || !zext_ln36_2_fu_602_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl2_cast_fu_586_p3.read()) - sc_biguint<11>(zext_ln36_2_fu_602_p1.read()));
}

void max_pool::thread_tmp_1_fu_594_p3() {
    tmp_1_fu_594_p3 = esl_concat<8,1>(add_ln36_fu_581_p2.read(), ap_const_lv1_0);
}

void max_pool::thread_tmp_2_fu_461_p3() {
    tmp_2_fu_461_p3 = esl_concat<10,1>(grp_fu_640_p3.read(), ap_const_lv1_0);
}

void max_pool::thread_tmp_6_fu_509_p4() {
    tmp_6_fu_509_p4 = bitcast_ln29_1_fu_505_p1.read().range(30, 23);
}

void max_pool::thread_tmp_fu_491_p4() {
    tmp_fu_491_p4 = bitcast_ln29_fu_488_p1.read().range(30, 23);
}

void max_pool::thread_trunc_ln29_1_fu_519_p1() {
    trunc_ln29_1_fu_519_p1 = bitcast_ln29_1_fu_505_p1.read().range(23-1, 0);
}

void max_pool::thread_trunc_ln29_fu_501_p1() {
    trunc_ln29_fu_501_p1 = bitcast_ln29_fu_488_p1.read().range(23-1, 0);
}

void max_pool::thread_xor_ln29_fu_304_p2() {
    xor_ln29_fu_304_p2 = (icmp_ln13_fu_258_p2.read() ^ ap_const_lv1_1);
}

void max_pool::thread_zext_ln20_fu_430_p1() {
    zext_ln20_fu_430_p1 = esl_zext<5,2>(select_ln20_1_reg_719.read());
}

void max_pool::thread_zext_ln23_fu_442_p1() {
    zext_ln23_fu_442_p1 = esl_zext<5,2>(select_ln20_reg_714.read());
}

void max_pool::thread_zext_ln26_1_fu_284_p1() {
    zext_ln26_1_fu_284_p1 = esl_zext<11,3>(select_ln29_1_fu_272_p3.read());
}

void max_pool::thread_zext_ln26_fu_280_p1() {
    zext_ln26_fu_280_p1 = esl_zext<13,3>(select_ln29_1_fu_272_p3.read());
}

void max_pool::thread_zext_ln29_2_fu_468_p1() {
    zext_ln29_2_fu_468_p1 = esl_zext<13,11>(tmp_2_fu_461_p3.read());
}

void max_pool::thread_zext_ln29_3_fu_483_p1() {
    zext_ln29_3_fu_483_p1 = esl_zext<64,13>(add_ln29_1_fu_478_p2.read());
}

void max_pool::thread_zext_ln36_1_fu_578_p1() {
    zext_ln36_1_fu_578_p1 = esl_zext<8,4>(select_ln13_reg_679.read());
}

void max_pool::thread_zext_ln36_2_fu_602_p1() {
    zext_ln36_2_fu_602_p1 = esl_zext<11,9>(tmp_1_fu_594_p3.read());
}

void max_pool::thread_zext_ln36_3_fu_617_p1() {
    zext_ln36_3_fu_617_p1 = esl_zext<64,11>(add_ln36_1_fu_612_p2.read());
}

void max_pool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_240_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_384_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln20_fu_384_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void max_pool::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_address0\" :  \"" << conv_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_ce0\" :  \"" << conv_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_out_q0\" :  \"" << conv_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_we0\" :  \"" << max_pool_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_d0\" :  \"" << max_pool_out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

