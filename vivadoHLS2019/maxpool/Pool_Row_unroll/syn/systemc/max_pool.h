// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_HH_
#define _max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_fcmp_32nbkb.h"

namespace ap_rtl {

struct max_pool : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<10> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool(sc_module_name name);
    SC_HAS_PROCESS(max_pool);

    ~max_pool();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_fcmp_32nbkb<1,2,32,32,1>* max_pool_fcmp_32nbkb_U1;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_219;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > f_fu_230_p2;
    sc_signal< sc_lv<3> > f_reg_681;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > zext_ln13_fu_236_p1;
    sc_signal< sc_lv<13> > zext_ln13_reg_686;
    sc_signal< sc_lv<1> > icmp_ln10_fu_224_p2;
    sc_signal< sc_lv<11> > zext_ln13_1_fu_240_p1;
    sc_signal< sc_lv<11> > zext_ln13_1_reg_692;
    sc_signal< sc_lv<8> > add_ln13_fu_244_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_697;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_256_p2;
    sc_signal< sc_lv<4> > r_reg_705;
    sc_signal< sc_lv<10> > mul_ln29_fu_274_p2;
    sc_signal< sc_lv<10> > mul_ln29_reg_710;
    sc_signal< sc_lv<1> > icmp_ln13_fu_250_p2;
    sc_signal< sc_lv<10> > mul_ln29_1_fu_290_p2;
    sc_signal< sc_lv<10> > mul_ln29_1_reg_715;
    sc_signal< sc_lv<4> > c_fu_302_p2;
    sc_signal< sc_lv<4> > c_reg_723;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > shl_ln1_fu_308_p3;
    sc_signal< sc_lv<5> > shl_ln1_reg_728;
    sc_signal< sc_lv<1> > icmp_ln16_fu_296_p2;
    sc_signal< sc_lv<2> > add_ln23_fu_326_p2;
    sc_signal< sc_lv<2> > add_ln23_reg_737;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln23_fu_320_p2;
    sc_signal< sc_lv<32> > select_ln29_fu_466_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > add_ln23_1_fu_484_p2;
    sc_signal< sc_lv<2> > add_ln23_1_reg_755;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln23_1_fu_478_p2;
    sc_signal< sc_lv<32> > select_ln29_1_fu_670_p3;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > f_0_reg_120;
    sc_signal< sc_lv<4> > r_0_reg_131;
    sc_signal< sc_lv<8> > phi_mul_reg_142;
    sc_signal< sc_lv<4> > c_0_reg_154;
    sc_signal< sc_lv<32> > max_1_0_reg_166;
    sc_signal< sc_lv<2> > mpc_0_0_reg_178;
    sc_signal< sc_lv<32> > max_1_1_reg_189;
    sc_signal< sc_lv<2> > mpc_0_1_reg_201;
    sc_signal< sc_lv<64> > zext_ln29_4_fu_377_p1;
    sc_signal< sc_lv<64> > zext_ln29_7_fu_535_p1;
    sc_signal< sc_lv<64> > zext_ln36_2_fu_581_p1;
    sc_signal< sc_lv<32> > grp_fu_212_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_262_p3;
    sc_signal< sc_lv<5> > mul_ln29_fu_274_p0;
    sc_signal< sc_lv<5> > or_ln26_fu_280_p2;
    sc_signal< sc_lv<5> > mul_ln29_1_fu_290_p0;
    sc_signal< sc_lv<5> > zext_ln23_fu_316_p1;
    sc_signal< sc_lv<5> > add_ln27_fu_332_p2;
    sc_signal< sc_lv<10> > zext_ln29_2_fu_337_p1;
    sc_signal< sc_lv<10> > add_ln29_fu_341_p2;
    sc_signal< sc_lv<11> > tmp_10_fu_354_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_346_p3;
    sc_signal< sc_lv<13> > zext_ln29_3_fu_362_p1;
    sc_signal< sc_lv<13> > sub_ln29_fu_366_p2;
    sc_signal< sc_lv<13> > add_ln29_1_fu_372_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_382_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_1_fu_400_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_386_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_396_p1;
    sc_signal< sc_lv<1> > icmp_ln29_1_fu_424_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_418_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_404_p4;
    sc_signal< sc_lv<23> > trunc_ln29_1_fu_414_p1;
    sc_signal< sc_lv<1> > icmp_ln29_3_fu_442_p2;
    sc_signal< sc_lv<1> > icmp_ln29_2_fu_436_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_430_p2;
    sc_signal< sc_lv<1> > or_ln29_1_fu_448_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_454_p2;
    sc_signal< sc_lv<1> > grp_fu_212_p2;
    sc_signal< sc_lv<1> > and_ln29_1_fu_460_p2;
    sc_signal< sc_lv<5> > zext_ln23_1_fu_474_p1;
    sc_signal< sc_lv<5> > add_ln27_1_fu_490_p2;
    sc_signal< sc_lv<10> > zext_ln29_5_fu_495_p1;
    sc_signal< sc_lv<10> > add_ln29_2_fu_499_p2;
    sc_signal< sc_lv<11> > tmp_12_fu_512_p3;
    sc_signal< sc_lv<13> > p_shl4_cast_fu_504_p3;
    sc_signal< sc_lv<13> > zext_ln29_6_fu_520_p1;
    sc_signal< sc_lv<13> > sub_ln29_1_fu_524_p2;
    sc_signal< sc_lv<13> > add_ln29_3_fu_530_p2;
    sc_signal< sc_lv<8> > zext_ln36_fu_540_p1;
    sc_signal< sc_lv<8> > add_ln36_fu_544_p2;
    sc_signal< sc_lv<9> > tmp_11_fu_558_p3;
    sc_signal< sc_lv<11> > p_shl2_cast_fu_550_p3;
    sc_signal< sc_lv<11> > zext_ln36_1_fu_566_p1;
    sc_signal< sc_lv<11> > sub_ln36_fu_570_p2;
    sc_signal< sc_lv<11> > add_ln36_1_fu_576_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_2_fu_586_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_3_fu_604_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_590_p4;
    sc_signal< sc_lv<23> > trunc_ln29_2_fu_600_p1;
    sc_signal< sc_lv<1> > icmp_ln29_5_fu_628_p2;
    sc_signal< sc_lv<1> > icmp_ln29_4_fu_622_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_608_p4;
    sc_signal< sc_lv<23> > trunc_ln29_3_fu_618_p1;
    sc_signal< sc_lv<1> > icmp_ln29_7_fu_646_p2;
    sc_signal< sc_lv<1> > icmp_ln29_6_fu_640_p2;
    sc_signal< sc_lv<1> > or_ln29_2_fu_634_p2;
    sc_signal< sc_lv<1> > or_ln29_3_fu_652_p2;
    sc_signal< sc_lv<1> > and_ln29_2_fu_658_p2;
    sc_signal< sc_lv<1> > and_ln29_3_fu_664_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln29_1_fu_290_p00;
    sc_signal< sc_lv<10> > mul_ln29_fu_274_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_244_p2();
    void thread_add_ln23_1_fu_484_p2();
    void thread_add_ln23_fu_326_p2();
    void thread_add_ln27_1_fu_490_p2();
    void thread_add_ln27_fu_332_p2();
    void thread_add_ln29_1_fu_372_p2();
    void thread_add_ln29_2_fu_499_p2();
    void thread_add_ln29_3_fu_530_p2();
    void thread_add_ln29_fu_341_p2();
    void thread_add_ln36_1_fu_576_p2();
    void thread_add_ln36_fu_544_p2();
    void thread_and_ln29_1_fu_460_p2();
    void thread_and_ln29_2_fu_658_p2();
    void thread_and_ln29_3_fu_664_p2();
    void thread_and_ln29_fu_454_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln29_1_fu_400_p1();
    void thread_bitcast_ln29_2_fu_586_p1();
    void thread_bitcast_ln29_3_fu_604_p1();
    void thread_bitcast_ln29_fu_382_p1();
    void thread_c_fu_302_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_230_p2();
    void thread_grp_fu_212_p1();
    void thread_icmp_ln10_fu_224_p2();
    void thread_icmp_ln13_fu_250_p2();
    void thread_icmp_ln16_fu_296_p2();
    void thread_icmp_ln23_1_fu_478_p2();
    void thread_icmp_ln23_fu_320_p2();
    void thread_icmp_ln29_1_fu_424_p2();
    void thread_icmp_ln29_2_fu_436_p2();
    void thread_icmp_ln29_3_fu_442_p2();
    void thread_icmp_ln29_4_fu_622_p2();
    void thread_icmp_ln29_5_fu_628_p2();
    void thread_icmp_ln29_6_fu_640_p2();
    void thread_icmp_ln29_7_fu_646_p2();
    void thread_icmp_ln29_fu_418_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mul_ln29_1_fu_290_p0();
    void thread_mul_ln29_1_fu_290_p00();
    void thread_mul_ln29_1_fu_290_p2();
    void thread_mul_ln29_fu_274_p0();
    void thread_mul_ln29_fu_274_p00();
    void thread_mul_ln29_fu_274_p2();
    void thread_or_ln26_fu_280_p2();
    void thread_or_ln29_1_fu_448_p2();
    void thread_or_ln29_2_fu_634_p2();
    void thread_or_ln29_3_fu_652_p2();
    void thread_or_ln29_fu_430_p2();
    void thread_p_shl2_cast_fu_550_p3();
    void thread_p_shl4_cast_fu_504_p3();
    void thread_p_shl_cast_fu_346_p3();
    void thread_r_fu_256_p2();
    void thread_select_ln29_1_fu_670_p3();
    void thread_select_ln29_fu_466_p3();
    void thread_shl_ln1_fu_308_p3();
    void thread_shl_ln_fu_262_p3();
    void thread_sub_ln29_1_fu_524_p2();
    void thread_sub_ln29_fu_366_p2();
    void thread_sub_ln36_fu_570_p2();
    void thread_tmp_10_fu_354_p3();
    void thread_tmp_11_fu_558_p3();
    void thread_tmp_12_fu_512_p3();
    void thread_tmp_1_fu_386_p4();
    void thread_tmp_5_fu_404_p4();
    void thread_tmp_7_fu_590_p4();
    void thread_tmp_8_fu_608_p4();
    void thread_trunc_ln29_1_fu_414_p1();
    void thread_trunc_ln29_2_fu_600_p1();
    void thread_trunc_ln29_3_fu_618_p1();
    void thread_trunc_ln29_fu_396_p1();
    void thread_zext_ln13_1_fu_240_p1();
    void thread_zext_ln13_fu_236_p1();
    void thread_zext_ln23_1_fu_474_p1();
    void thread_zext_ln23_fu_316_p1();
    void thread_zext_ln29_2_fu_337_p1();
    void thread_zext_ln29_3_fu_362_p1();
    void thread_zext_ln29_4_fu_377_p1();
    void thread_zext_ln29_5_fu_495_p1();
    void thread_zext_ln29_6_fu_520_p1();
    void thread_zext_ln29_7_fu_535_p1();
    void thread_zext_ln36_1_fu_566_p1();
    void thread_zext_ln36_2_fu_581_p1();
    void thread_zext_ln36_fu_540_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
