// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.580250,HLS_SYN_LAT=17329,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1380,HLS_SYN_LUT=4350,HLS_VERSION=2019_1}" *)

module max_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_address0,
        conv_out_ce0,
        conv_out_q0,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_we0,
        max_pool_out_d0
);

parameter    ap_ST_fsm_state1 = 55'd1;
parameter    ap_ST_fsm_state2 = 55'd2;
parameter    ap_ST_fsm_state3 = 55'd4;
parameter    ap_ST_fsm_state4 = 55'd8;
parameter    ap_ST_fsm_state5 = 55'd16;
parameter    ap_ST_fsm_state6 = 55'd32;
parameter    ap_ST_fsm_state7 = 55'd64;
parameter    ap_ST_fsm_state8 = 55'd128;
parameter    ap_ST_fsm_state9 = 55'd256;
parameter    ap_ST_fsm_state10 = 55'd512;
parameter    ap_ST_fsm_state11 = 55'd1024;
parameter    ap_ST_fsm_state12 = 55'd2048;
parameter    ap_ST_fsm_state13 = 55'd4096;
parameter    ap_ST_fsm_state14 = 55'd8192;
parameter    ap_ST_fsm_state15 = 55'd16384;
parameter    ap_ST_fsm_state16 = 55'd32768;
parameter    ap_ST_fsm_state17 = 55'd65536;
parameter    ap_ST_fsm_state18 = 55'd131072;
parameter    ap_ST_fsm_state19 = 55'd262144;
parameter    ap_ST_fsm_state20 = 55'd524288;
parameter    ap_ST_fsm_state21 = 55'd1048576;
parameter    ap_ST_fsm_state22 = 55'd2097152;
parameter    ap_ST_fsm_state23 = 55'd4194304;
parameter    ap_ST_fsm_state24 = 55'd8388608;
parameter    ap_ST_fsm_state25 = 55'd16777216;
parameter    ap_ST_fsm_state26 = 55'd33554432;
parameter    ap_ST_fsm_state27 = 55'd67108864;
parameter    ap_ST_fsm_state28 = 55'd134217728;
parameter    ap_ST_fsm_state29 = 55'd268435456;
parameter    ap_ST_fsm_state30 = 55'd536870912;
parameter    ap_ST_fsm_state31 = 55'd1073741824;
parameter    ap_ST_fsm_state32 = 55'd2147483648;
parameter    ap_ST_fsm_state33 = 55'd4294967296;
parameter    ap_ST_fsm_state34 = 55'd8589934592;
parameter    ap_ST_fsm_state35 = 55'd17179869184;
parameter    ap_ST_fsm_state36 = 55'd34359738368;
parameter    ap_ST_fsm_state37 = 55'd68719476736;
parameter    ap_ST_fsm_state38 = 55'd137438953472;
parameter    ap_ST_fsm_state39 = 55'd274877906944;
parameter    ap_ST_fsm_state40 = 55'd549755813888;
parameter    ap_ST_fsm_state41 = 55'd1099511627776;
parameter    ap_ST_fsm_state42 = 55'd2199023255552;
parameter    ap_ST_fsm_state43 = 55'd4398046511104;
parameter    ap_ST_fsm_state44 = 55'd8796093022208;
parameter    ap_ST_fsm_state45 = 55'd17592186044416;
parameter    ap_ST_fsm_state46 = 55'd35184372088832;
parameter    ap_ST_fsm_state47 = 55'd70368744177664;
parameter    ap_ST_fsm_state48 = 55'd140737488355328;
parameter    ap_ST_fsm_state49 = 55'd281474976710656;
parameter    ap_ST_fsm_state50 = 55'd562949953421312;
parameter    ap_ST_fsm_state51 = 55'd1125899906842624;
parameter    ap_ST_fsm_state52 = 55'd2251799813685248;
parameter    ap_ST_fsm_state53 = 55'd4503599627370496;
parameter    ap_ST_fsm_state54 = 55'd9007199254740992;
parameter    ap_ST_fsm_state55 = 55'd18014398509481984;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
input  [31:0] conv_out_q0;
output  [9:0] max_pool_out_address0;
output   max_pool_out_ce0;
output   max_pool_out_we0;
output  [31:0] max_pool_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_out_address0;
reg conv_out_ce0;
reg[9:0] max_pool_out_address0;
reg max_pool_out_ce0;
reg max_pool_out_we0;
reg[31:0] max_pool_out_d0;

(* fsm_encoding = "none" *) reg   [54:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_989;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state54;
wire   [2:0] f_fu_1000_p2;
reg   [2:0] f_reg_3697;
wire    ap_CS_fsm_state2;
wire   [12:0] zext_ln13_fu_1006_p1;
reg   [12:0] zext_ln13_reg_3702;
wire   [0:0] icmp_ln10_fu_994_p2;
wire   [9:0] zext_ln13_1_fu_1010_p1;
reg   [9:0] zext_ln13_1_reg_3719;
wire   [9:0] add_ln13_fu_1014_p2;
reg   [9:0] add_ln13_reg_3736;
wire    ap_CS_fsm_state3;
wire   [3:0] r_fu_1026_p2;
reg   [3:0] r_reg_3744;
wire   [4:0] shl_ln_fu_1032_p3;
reg   [4:0] shl_ln_reg_3749;
wire   [0:0] icmp_ln13_fu_1020_p2;
reg   [9:0] max_pool_out_addr_reg_3766;
reg   [9:0] max_pool_out_addr_1_reg_3771;
reg   [9:0] max_pool_out_addr_2_reg_3776;
reg   [9:0] max_pool_out_addr_3_reg_3781;
reg   [9:0] max_pool_out_addr_4_reg_3786;
reg   [9:0] max_pool_out_addr_5_reg_3791;
reg   [9:0] max_pool_out_addr_6_reg_3796;
reg   [9:0] max_pool_out_addr_7_reg_3801;
reg   [9:0] max_pool_out_addr_8_reg_3806;
reg   [9:0] max_pool_out_addr_9_reg_3811;
reg   [9:0] max_pool_out_addr_10_reg_3816;
reg   [9:0] max_pool_out_addr_11_reg_3821;
reg   [9:0] max_pool_out_addr_12_reg_3826;
wire   [1:0] add_ln20_fu_1252_p2;
reg   [1:0] add_ln20_reg_3834;
wire    ap_CS_fsm_state4;
wire   [9:0] mul_ln29_fu_1267_p2;
reg   [9:0] mul_ln29_reg_3839;
wire   [0:0] icmp_ln20_fu_1246_p2;
wire   [1:0] add_ln23_fu_1279_p2;
reg   [1:0] add_ln23_reg_3847;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln23_fu_1273_p2;
wire   [31:0] select_ln29_fu_1414_p3;
wire    ap_CS_fsm_state7;
wire   [1:0] add_ln20_1_fu_1432_p2;
reg   [1:0] add_ln20_1_reg_3865;
wire    ap_CS_fsm_state8;
wire   [9:0] mul_ln29_1_fu_1447_p2;
reg   [9:0] mul_ln29_1_reg_3870;
wire   [0:0] icmp_ln20_1_fu_1426_p2;
wire   [1:0] add_ln23_1_fu_1459_p2;
reg   [1:0] add_ln23_1_reg_3878;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln23_1_fu_1453_p2;
wire   [31:0] select_ln29_1_fu_1600_p3;
wire    ap_CS_fsm_state11;
wire   [1:0] add_ln20_2_fu_1618_p2;
reg   [1:0] add_ln20_2_reg_3896;
wire    ap_CS_fsm_state12;
wire   [9:0] mul_ln29_2_fu_1633_p2;
reg   [9:0] mul_ln29_2_reg_3901;
wire   [0:0] icmp_ln20_2_fu_1612_p2;
wire   [1:0] add_ln23_2_fu_1645_p2;
reg   [1:0] add_ln23_2_reg_3909;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln23_2_fu_1639_p2;
wire   [31:0] select_ln29_2_fu_1788_p3;
wire    ap_CS_fsm_state15;
wire   [1:0] add_ln20_3_fu_1806_p2;
reg   [1:0] add_ln20_3_reg_3927;
wire    ap_CS_fsm_state16;
wire   [9:0] mul_ln29_3_fu_1821_p2;
reg   [9:0] mul_ln29_3_reg_3932;
wire   [0:0] icmp_ln20_3_fu_1800_p2;
wire   [1:0] add_ln23_3_fu_1833_p2;
reg   [1:0] add_ln23_3_reg_3940;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln23_3_fu_1827_p2;
wire   [31:0] select_ln29_3_fu_1978_p3;
wire    ap_CS_fsm_state19;
wire   [1:0] add_ln20_4_fu_1996_p2;
reg   [1:0] add_ln20_4_reg_3958;
wire    ap_CS_fsm_state20;
wire   [9:0] mul_ln29_4_fu_2011_p2;
reg   [9:0] mul_ln29_4_reg_3963;
wire   [0:0] icmp_ln20_4_fu_1990_p2;
wire   [1:0] add_ln23_4_fu_2023_p2;
reg   [1:0] add_ln23_4_reg_3971;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln23_4_fu_2017_p2;
wire   [31:0] select_ln29_4_fu_2166_p3;
wire    ap_CS_fsm_state23;
wire   [1:0] add_ln20_5_fu_2184_p2;
reg   [1:0] add_ln20_5_reg_3989;
wire    ap_CS_fsm_state24;
wire   [9:0] mul_ln29_5_fu_2199_p2;
reg   [9:0] mul_ln29_5_reg_3994;
wire   [0:0] icmp_ln20_5_fu_2178_p2;
wire   [1:0] add_ln23_5_fu_2215_p2;
reg   [1:0] add_ln23_5_reg_4002;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln23_5_fu_2209_p2;
wire   [31:0] select_ln29_5_fu_2356_p3;
wire    ap_CS_fsm_state27;
wire   [1:0] add_ln20_6_fu_2374_p2;
reg   [1:0] add_ln20_6_reg_4020;
wire    ap_CS_fsm_state28;
wire   [9:0] mul_ln29_6_fu_2389_p2;
reg   [9:0] mul_ln29_6_reg_4025;
wire   [0:0] icmp_ln20_6_fu_2368_p2;
wire   [1:0] add_ln23_6_fu_2401_p2;
reg   [1:0] add_ln23_6_reg_4033;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln23_6_fu_2395_p2;
wire   [31:0] select_ln29_6_fu_2548_p3;
wire    ap_CS_fsm_state31;
wire   [1:0] add_ln20_7_fu_2566_p2;
reg   [1:0] add_ln20_7_reg_4051;
wire    ap_CS_fsm_state32;
wire   [9:0] mul_ln29_7_fu_2581_p2;
reg   [9:0] mul_ln29_7_reg_4056;
wire   [0:0] icmp_ln20_7_fu_2560_p2;
wire   [1:0] add_ln23_7_fu_2593_p2;
reg   [1:0] add_ln23_7_reg_4064;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln23_7_fu_2587_p2;
wire   [31:0] select_ln29_7_fu_2738_p3;
wire    ap_CS_fsm_state35;
wire   [1:0] add_ln20_8_fu_2756_p2;
reg   [1:0] add_ln20_8_reg_4082;
wire    ap_CS_fsm_state36;
wire   [9:0] mul_ln29_8_fu_2771_p2;
reg   [9:0] mul_ln29_8_reg_4087;
wire   [0:0] icmp_ln20_8_fu_2750_p2;
wire   [1:0] add_ln23_8_fu_2783_p2;
reg   [1:0] add_ln23_8_reg_4095;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln23_8_fu_2777_p2;
wire   [31:0] select_ln29_8_fu_2926_p3;
wire    ap_CS_fsm_state39;
wire   [1:0] add_ln20_9_fu_2944_p2;
reg   [1:0] add_ln20_9_reg_4113;
wire    ap_CS_fsm_state40;
wire   [9:0] mul_ln29_9_fu_2959_p2;
reg   [9:0] mul_ln29_9_reg_4118;
wire   [0:0] icmp_ln20_9_fu_2938_p2;
wire   [1:0] add_ln23_9_fu_2975_p2;
reg   [1:0] add_ln23_9_reg_4126;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln23_9_fu_2969_p2;
wire   [31:0] select_ln29_9_fu_3116_p3;
wire    ap_CS_fsm_state43;
wire   [1:0] add_ln20_10_fu_3134_p2;
reg   [1:0] add_ln20_10_reg_4144;
wire    ap_CS_fsm_state44;
wire   [9:0] mul_ln29_10_fu_3149_p2;
reg   [9:0] mul_ln29_10_reg_4149;
wire   [0:0] icmp_ln20_10_fu_3128_p2;
wire   [1:0] add_ln23_10_fu_3161_p2;
reg   [1:0] add_ln23_10_reg_4157;
wire    ap_CS_fsm_state45;
wire   [0:0] icmp_ln23_10_fu_3155_p2;
wire   [31:0] select_ln29_10_fu_3304_p3;
wire    ap_CS_fsm_state47;
wire   [1:0] add_ln20_11_fu_3322_p2;
reg   [1:0] add_ln20_11_reg_4175;
wire    ap_CS_fsm_state48;
wire   [9:0] mul_ln29_11_fu_3337_p2;
reg   [9:0] mul_ln29_11_reg_4180;
wire   [0:0] icmp_ln20_11_fu_3316_p2;
wire   [1:0] add_ln23_11_fu_3353_p2;
reg   [1:0] add_ln23_11_reg_4188;
wire    ap_CS_fsm_state49;
wire   [0:0] icmp_ln23_11_fu_3347_p2;
wire   [31:0] select_ln29_11_fu_3494_p3;
wire    ap_CS_fsm_state51;
wire   [1:0] add_ln20_12_fu_3512_p2;
reg   [1:0] add_ln20_12_reg_4206;
wire    ap_CS_fsm_state52;
wire   [9:0] mul_ln29_12_fu_3527_p2;
reg   [9:0] mul_ln29_12_reg_4211;
wire   [0:0] icmp_ln20_12_fu_3506_p2;
wire   [1:0] add_ln23_12_fu_3539_p2;
reg   [1:0] add_ln23_12_reg_4219;
wire    ap_CS_fsm_state53;
wire   [0:0] icmp_ln23_12_fu_3533_p2;
wire   [31:0] select_ln29_12_fu_3686_p3;
wire    ap_CS_fsm_state55;
reg   [2:0] f_0_reg_327;
reg   [3:0] r_0_reg_338;
reg   [9:0] phi_mul_reg_349;
reg   [31:0] max_0_0_reg_360;
reg   [1:0] mpr_0_0_reg_373;
reg   [31:0] max_1_0_reg_384;
reg   [1:0] mpc_0_0_reg_396;
reg   [31:0] max_0_1_reg_407;
reg   [1:0] mpr_0_1_reg_420;
reg   [31:0] max_1_1_reg_431;
reg   [1:0] mpc_0_1_reg_443;
reg   [31:0] max_0_2_reg_454;
reg   [1:0] mpr_0_2_reg_467;
reg   [31:0] max_1_2_reg_478;
reg   [1:0] mpc_0_2_reg_490;
reg   [31:0] max_0_3_reg_501;
reg   [1:0] mpr_0_3_reg_514;
reg   [31:0] max_1_3_reg_525;
reg   [1:0] mpc_0_3_reg_537;
reg   [31:0] max_0_4_reg_548;
reg   [1:0] mpr_0_4_reg_561;
reg   [31:0] max_1_4_reg_572;
reg   [1:0] mpc_0_4_reg_584;
reg   [31:0] max_0_5_reg_595;
reg   [1:0] mpr_0_5_reg_608;
reg   [31:0] max_1_5_reg_619;
reg   [1:0] mpc_0_5_reg_631;
reg   [31:0] max_0_6_reg_642;
reg   [1:0] mpr_0_6_reg_655;
reg   [31:0] max_1_6_reg_666;
reg   [1:0] mpc_0_6_reg_678;
reg   [31:0] max_0_7_reg_689;
reg   [1:0] mpr_0_7_reg_702;
reg   [31:0] max_1_7_reg_713;
reg   [1:0] mpc_0_7_reg_725;
reg   [31:0] max_0_8_reg_736;
reg   [1:0] mpr_0_8_reg_749;
reg   [31:0] max_1_8_reg_760;
reg   [1:0] mpc_0_8_reg_772;
reg   [31:0] max_0_9_reg_783;
reg   [1:0] mpr_0_9_reg_796;
reg   [31:0] max_1_9_reg_807;
reg   [1:0] mpc_0_9_reg_819;
reg   [31:0] max_0_10_reg_830;
reg   [1:0] mpr_0_10_reg_843;
reg   [31:0] max_1_10_reg_854;
reg   [1:0] mpc_0_10_reg_866;
reg   [31:0] max_0_11_reg_877;
reg   [1:0] mpr_0_11_reg_890;
reg   [31:0] max_1_11_reg_901;
reg   [1:0] mpc_0_11_reg_913;
reg   [31:0] max_0_12_reg_924;
reg   [1:0] mpr_0_12_reg_937;
reg   [31:0] max_1_12_reg_948;
reg   [1:0] mpc_0_12_reg_960;
wire   [63:0] zext_ln36_fu_1045_p1;
wire   [63:0] zext_ln36_1_fu_1061_p1;
wire   [63:0] zext_ln36_2_fu_1077_p1;
wire   [63:0] zext_ln36_3_fu_1093_p1;
wire   [63:0] zext_ln36_4_fu_1109_p1;
wire   [63:0] zext_ln36_5_fu_1125_p1;
wire   [63:0] zext_ln36_6_fu_1141_p1;
wire   [63:0] zext_ln36_7_fu_1157_p1;
wire   [63:0] zext_ln36_8_fu_1173_p1;
wire   [63:0] zext_ln36_9_fu_1189_p1;
wire   [63:0] zext_ln36_10_fu_1205_p1;
wire   [63:0] zext_ln36_11_fu_1221_p1;
wire   [63:0] zext_ln36_12_fu_1237_p1;
wire   [63:0] zext_ln29_4_fu_1325_p1;
wire   [63:0] zext_ln29_8_fu_1511_p1;
wire   [63:0] zext_ln29_12_fu_1699_p1;
wire   [63:0] zext_ln29_16_fu_1889_p1;
wire   [63:0] zext_ln29_20_fu_2077_p1;
wire   [63:0] zext_ln29_24_fu_2267_p1;
wire   [63:0] zext_ln29_28_fu_2459_p1;
wire   [63:0] zext_ln29_32_fu_2649_p1;
wire   [63:0] zext_ln29_36_fu_2837_p1;
wire   [63:0] zext_ln29_40_fu_3027_p1;
wire   [63:0] zext_ln29_44_fu_3215_p1;
wire   [63:0] zext_ln29_48_fu_3405_p1;
wire   [63:0] zext_ln29_51_fu_3597_p1;
reg   [31:0] grp_fu_971_p1;
wire   [9:0] add_ln36_fu_1040_p2;
wire   [9:0] add_ln36_1_fu_1050_p2;
wire   [9:0] add_ln36_2_fu_1056_p2;
wire   [9:0] add_ln36_3_fu_1066_p2;
wire   [9:0] add_ln36_4_fu_1072_p2;
wire   [9:0] add_ln36_5_fu_1082_p2;
wire   [9:0] add_ln36_6_fu_1088_p2;
wire   [9:0] add_ln36_7_fu_1098_p2;
wire   [9:0] add_ln36_8_fu_1104_p2;
wire   [9:0] add_ln36_9_fu_1114_p2;
wire   [9:0] add_ln36_10_fu_1120_p2;
wire   [9:0] add_ln36_11_fu_1130_p2;
wire   [9:0] add_ln36_12_fu_1136_p2;
wire   [9:0] add_ln36_13_fu_1146_p2;
wire   [9:0] add_ln36_14_fu_1152_p2;
wire   [9:0] add_ln36_15_fu_1162_p2;
wire   [9:0] add_ln36_16_fu_1168_p2;
wire   [9:0] add_ln36_17_fu_1178_p2;
wire   [9:0] add_ln36_18_fu_1184_p2;
wire   [9:0] add_ln36_19_fu_1194_p2;
wire   [9:0] add_ln36_20_fu_1200_p2;
wire   [9:0] add_ln36_21_fu_1210_p2;
wire   [9:0] add_ln36_22_fu_1216_p2;
wire   [9:0] add_ln36_23_fu_1226_p2;
wire   [9:0] add_ln36_24_fu_1232_p2;
wire   [4:0] zext_ln20_fu_1242_p1;
wire   [4:0] add_ln26_fu_1258_p2;
wire   [4:0] mul_ln29_fu_1267_p0;
wire   [9:0] zext_ln29_2_fu_1285_p1;
wire   [9:0] add_ln29_fu_1289_p2;
wire   [10:0] tmp_65_fu_1302_p3;
wire   [12:0] p_shl_cast_fu_1294_p3;
wire   [12:0] zext_ln29_3_fu_1310_p1;
wire   [12:0] sub_ln29_fu_1314_p2;
wire   [12:0] add_ln29_1_fu_1320_p2;
wire   [31:0] bitcast_ln29_fu_1330_p1;
wire   [31:0] bitcast_ln29_1_fu_1348_p1;
wire   [7:0] tmp_5_fu_1334_p4;
wire   [22:0] trunc_ln29_fu_1344_p1;
wire   [0:0] icmp_ln29_1_fu_1372_p2;
wire   [0:0] icmp_ln29_fu_1366_p2;
wire   [7:0] tmp_6_fu_1352_p4;
wire   [22:0] trunc_ln29_1_fu_1362_p1;
wire   [0:0] icmp_ln29_3_fu_1390_p2;
wire   [0:0] icmp_ln29_2_fu_1384_p2;
wire   [0:0] or_ln29_fu_1378_p2;
wire   [0:0] or_ln29_1_fu_1396_p2;
wire   [0:0] and_ln29_fu_1402_p2;
wire   [0:0] grp_fu_971_p2;
wire   [0:0] and_ln29_1_fu_1408_p2;
wire   [4:0] zext_ln20_1_fu_1422_p1;
wire   [4:0] add_ln26_1_fu_1438_p2;
wire   [4:0] mul_ln29_1_fu_1447_p0;
wire   [1:0] xor_ln27_fu_1465_p2;
wire   [9:0] zext_ln29_6_fu_1471_p1;
wire   [9:0] add_ln29_2_fu_1475_p2;
wire   [10:0] tmp_66_fu_1488_p3;
wire   [12:0] p_shl2_cast_fu_1480_p3;
wire   [12:0] zext_ln29_7_fu_1496_p1;
wire   [12:0] sub_ln29_1_fu_1500_p2;
wire   [12:0] add_ln29_3_fu_1506_p2;
wire   [31:0] bitcast_ln29_2_fu_1516_p1;
wire   [31:0] bitcast_ln29_3_fu_1534_p1;
wire   [7:0] tmp_10_fu_1520_p4;
wire   [22:0] trunc_ln29_2_fu_1530_p1;
wire   [0:0] icmp_ln29_5_fu_1558_p2;
wire   [0:0] icmp_ln29_4_fu_1552_p2;
wire   [7:0] tmp_11_fu_1538_p4;
wire   [22:0] trunc_ln29_3_fu_1548_p1;
wire   [0:0] icmp_ln29_7_fu_1576_p2;
wire   [0:0] icmp_ln29_6_fu_1570_p2;
wire   [0:0] or_ln29_2_fu_1564_p2;
wire   [0:0] or_ln29_3_fu_1582_p2;
wire   [0:0] and_ln29_2_fu_1588_p2;
wire   [0:0] and_ln29_3_fu_1594_p2;
wire   [4:0] zext_ln20_2_fu_1608_p1;
wire   [4:0] add_ln26_2_fu_1624_p2;
wire   [4:0] mul_ln29_2_fu_1633_p0;
wire   [2:0] or_ln_fu_1651_p3;
wire   [9:0] zext_ln29_10_fu_1659_p1;
wire   [9:0] add_ln29_4_fu_1663_p2;
wire   [10:0] tmp_67_fu_1676_p3;
wire   [12:0] p_shl4_cast_fu_1668_p3;
wire   [12:0] zext_ln29_11_fu_1684_p1;
wire   [12:0] sub_ln29_2_fu_1688_p2;
wire   [12:0] add_ln29_5_fu_1694_p2;
wire   [31:0] bitcast_ln29_4_fu_1704_p1;
wire   [31:0] bitcast_ln29_5_fu_1722_p1;
wire   [7:0] tmp_15_fu_1708_p4;
wire   [22:0] trunc_ln29_4_fu_1718_p1;
wire   [0:0] icmp_ln29_9_fu_1746_p2;
wire   [0:0] icmp_ln29_8_fu_1740_p2;
wire   [7:0] tmp_16_fu_1726_p4;
wire   [22:0] trunc_ln29_5_fu_1736_p1;
wire   [0:0] icmp_ln29_11_fu_1764_p2;
wire   [0:0] icmp_ln29_10_fu_1758_p2;
wire   [0:0] or_ln29_4_fu_1752_p2;
wire   [0:0] or_ln29_5_fu_1770_p2;
wire   [0:0] and_ln29_4_fu_1776_p2;
wire   [0:0] and_ln29_5_fu_1782_p2;
wire   [4:0] zext_ln20_3_fu_1796_p1;
wire   [4:0] add_ln26_3_fu_1812_p2;
wire   [4:0] mul_ln29_3_fu_1821_p0;
wire   [1:0] xor_ln27_1_fu_1839_p2;
wire  signed [2:0] sext_ln27_fu_1845_p1;
wire   [9:0] zext_ln29_14_fu_1849_p1;
wire   [9:0] add_ln29_6_fu_1853_p2;
wire   [10:0] tmp_68_fu_1866_p3;
wire   [12:0] p_shl6_cast_fu_1858_p3;
wire   [12:0] zext_ln29_15_fu_1874_p1;
wire   [12:0] sub_ln29_3_fu_1878_p2;
wire   [12:0] add_ln29_7_fu_1884_p2;
wire   [31:0] bitcast_ln29_6_fu_1894_p1;
wire   [31:0] bitcast_ln29_7_fu_1912_p1;
wire   [7:0] tmp_20_fu_1898_p4;
wire   [22:0] trunc_ln29_6_fu_1908_p1;
wire   [0:0] icmp_ln29_13_fu_1936_p2;
wire   [0:0] icmp_ln29_12_fu_1930_p2;
wire   [7:0] tmp_21_fu_1916_p4;
wire   [22:0] trunc_ln29_7_fu_1926_p1;
wire   [0:0] icmp_ln29_15_fu_1954_p2;
wire   [0:0] icmp_ln29_14_fu_1948_p2;
wire   [0:0] or_ln29_6_fu_1942_p2;
wire   [0:0] or_ln29_7_fu_1960_p2;
wire   [0:0] and_ln29_6_fu_1966_p2;
wire   [0:0] and_ln29_7_fu_1972_p2;
wire   [4:0] zext_ln20_4_fu_1986_p1;
wire   [4:0] add_ln26_4_fu_2002_p2;
wire   [4:0] mul_ln29_4_fu_2011_p0;
wire   [3:0] or_ln27_1_fu_2029_p3;
wire   [9:0] zext_ln29_18_fu_2037_p1;
wire   [9:0] add_ln29_8_fu_2041_p2;
wire   [10:0] tmp_69_fu_2054_p3;
wire   [12:0] p_shl8_cast_fu_2046_p3;
wire   [12:0] zext_ln29_19_fu_2062_p1;
wire   [12:0] sub_ln29_4_fu_2066_p2;
wire   [12:0] add_ln29_9_fu_2072_p2;
wire   [31:0] bitcast_ln29_8_fu_2082_p1;
wire   [31:0] bitcast_ln29_9_fu_2100_p1;
wire   [7:0] tmp_38_fu_2086_p4;
wire   [22:0] trunc_ln29_8_fu_2096_p1;
wire   [0:0] icmp_ln29_17_fu_2124_p2;
wire   [0:0] icmp_ln29_16_fu_2118_p2;
wire   [7:0] tmp_39_fu_2104_p4;
wire   [22:0] trunc_ln29_9_fu_2114_p1;
wire   [0:0] icmp_ln29_19_fu_2142_p2;
wire   [0:0] icmp_ln29_18_fu_2136_p2;
wire   [0:0] or_ln29_8_fu_2130_p2;
wire   [0:0] or_ln29_9_fu_2148_p2;
wire   [0:0] and_ln29_8_fu_2154_p2;
wire   [0:0] and_ln29_9_fu_2160_p2;
wire   [4:0] zext_ln20_5_fu_2174_p1;
wire   [4:0] add_ln26_5_fu_2190_p2;
wire   [4:0] mul_ln29_5_fu_2199_p0;
wire   [3:0] zext_ln23_fu_2205_p1;
wire   [3:0] add_ln27_fu_2221_p2;
wire   [9:0] zext_ln29_22_fu_2227_p1;
wire   [9:0] add_ln29_10_fu_2231_p2;
wire   [10:0] tmp_70_fu_2244_p3;
wire   [12:0] p_shl10_cast_fu_2236_p3;
wire   [12:0] zext_ln29_23_fu_2252_p1;
wire   [12:0] sub_ln29_5_fu_2256_p2;
wire   [12:0] add_ln29_11_fu_2262_p2;
wire   [31:0] bitcast_ln29_10_fu_2272_p1;
wire   [31:0] bitcast_ln29_11_fu_2290_p1;
wire   [7:0] tmp_41_fu_2276_p4;
wire   [22:0] trunc_ln29_10_fu_2286_p1;
wire   [0:0] icmp_ln29_21_fu_2314_p2;
wire   [0:0] icmp_ln29_20_fu_2308_p2;
wire   [7:0] tmp_42_fu_2294_p4;
wire   [22:0] trunc_ln29_11_fu_2304_p1;
wire   [0:0] icmp_ln29_23_fu_2332_p2;
wire   [0:0] icmp_ln29_22_fu_2326_p2;
wire   [0:0] or_ln29_10_fu_2320_p2;
wire   [0:0] or_ln29_11_fu_2338_p2;
wire   [0:0] and_ln29_10_fu_2344_p2;
wire   [0:0] and_ln29_11_fu_2350_p2;
wire   [4:0] zext_ln20_6_fu_2364_p1;
wire   [4:0] add_ln26_6_fu_2380_p2;
wire   [4:0] mul_ln29_6_fu_2389_p0;
wire   [2:0] or_ln27_2_fu_2407_p3;
wire  signed [3:0] sext_ln27_1_fu_2415_p1;
wire   [9:0] zext_ln29_26_fu_2419_p1;
wire   [9:0] add_ln29_12_fu_2423_p2;
wire   [10:0] tmp_71_fu_2436_p3;
wire   [12:0] p_shl12_cast_fu_2428_p3;
wire   [12:0] zext_ln29_27_fu_2444_p1;
wire   [12:0] sub_ln29_6_fu_2448_p2;
wire   [12:0] add_ln29_13_fu_2454_p2;
wire   [31:0] bitcast_ln29_12_fu_2464_p1;
wire   [31:0] bitcast_ln29_13_fu_2482_p1;
wire   [7:0] tmp_44_fu_2468_p4;
wire   [22:0] trunc_ln29_12_fu_2478_p1;
wire   [0:0] icmp_ln29_25_fu_2506_p2;
wire   [0:0] icmp_ln29_24_fu_2500_p2;
wire   [7:0] tmp_45_fu_2486_p4;
wire   [22:0] trunc_ln29_13_fu_2496_p1;
wire   [0:0] icmp_ln29_27_fu_2524_p2;
wire   [0:0] icmp_ln29_26_fu_2518_p2;
wire   [0:0] or_ln29_12_fu_2512_p2;
wire   [0:0] or_ln29_13_fu_2530_p2;
wire   [0:0] and_ln29_12_fu_2536_p2;
wire   [0:0] and_ln29_13_fu_2542_p2;
wire   [4:0] zext_ln20_7_fu_2556_p1;
wire   [4:0] add_ln26_7_fu_2572_p2;
wire   [4:0] mul_ln29_7_fu_2581_p0;
wire   [1:0] xor_ln27_2_fu_2599_p2;
wire  signed [3:0] sext_ln27_2_fu_2605_p1;
wire   [9:0] zext_ln29_30_fu_2609_p1;
wire   [9:0] add_ln29_14_fu_2613_p2;
wire   [10:0] tmp_72_fu_2626_p3;
wire   [12:0] p_shl14_cast_fu_2618_p3;
wire   [12:0] zext_ln29_31_fu_2634_p1;
wire   [12:0] sub_ln29_7_fu_2638_p2;
wire   [12:0] add_ln29_15_fu_2644_p2;
wire   [31:0] bitcast_ln29_14_fu_2654_p1;
wire   [31:0] bitcast_ln29_15_fu_2672_p1;
wire   [7:0] tmp_47_fu_2658_p4;
wire   [22:0] trunc_ln29_14_fu_2668_p1;
wire   [0:0] icmp_ln29_29_fu_2696_p2;
wire   [0:0] icmp_ln29_28_fu_2690_p2;
wire   [7:0] tmp_48_fu_2676_p4;
wire   [22:0] trunc_ln29_15_fu_2686_p1;
wire   [0:0] icmp_ln29_31_fu_2714_p2;
wire   [0:0] icmp_ln29_30_fu_2708_p2;
wire   [0:0] or_ln29_14_fu_2702_p2;
wire   [0:0] or_ln29_15_fu_2720_p2;
wire   [0:0] and_ln29_14_fu_2726_p2;
wire   [0:0] and_ln29_15_fu_2732_p2;
wire   [4:0] zext_ln20_8_fu_2746_p1;
wire   [4:0] add_ln26_8_fu_2762_p2;
wire   [4:0] mul_ln29_8_fu_2771_p0;
wire   [4:0] or_ln27_3_fu_2789_p3;
wire   [9:0] zext_ln29_34_fu_2797_p1;
wire   [9:0] add_ln29_16_fu_2801_p2;
wire   [10:0] tmp_73_fu_2814_p3;
wire   [12:0] p_shl16_cast_fu_2806_p3;
wire   [12:0] zext_ln29_35_fu_2822_p1;
wire   [12:0] sub_ln29_8_fu_2826_p2;
wire   [12:0] add_ln29_17_fu_2832_p2;
wire   [31:0] bitcast_ln29_16_fu_2842_p1;
wire   [31:0] bitcast_ln29_17_fu_2860_p1;
wire   [7:0] tmp_50_fu_2846_p4;
wire   [22:0] trunc_ln29_16_fu_2856_p1;
wire   [0:0] icmp_ln29_33_fu_2884_p2;
wire   [0:0] icmp_ln29_32_fu_2878_p2;
wire   [7:0] tmp_51_fu_2864_p4;
wire   [22:0] trunc_ln29_17_fu_2874_p1;
wire   [0:0] icmp_ln29_35_fu_2902_p2;
wire   [0:0] icmp_ln29_34_fu_2896_p2;
wire   [0:0] or_ln29_16_fu_2890_p2;
wire   [0:0] or_ln29_17_fu_2908_p2;
wire   [0:0] and_ln29_16_fu_2914_p2;
wire   [0:0] and_ln29_17_fu_2920_p2;
wire   [4:0] zext_ln20_9_fu_2934_p1;
wire   [4:0] add_ln26_9_fu_2950_p2;
wire   [4:0] mul_ln29_9_fu_2959_p0;
wire   [4:0] zext_ln23_1_fu_2965_p1;
wire   [4:0] add_ln27_1_fu_2981_p2;
wire   [9:0] zext_ln29_38_fu_2987_p1;
wire   [9:0] add_ln29_18_fu_2991_p2;
wire   [10:0] tmp_74_fu_3004_p3;
wire   [12:0] p_shl18_cast_fu_2996_p3;
wire   [12:0] zext_ln29_39_fu_3012_p1;
wire   [12:0] sub_ln29_9_fu_3016_p2;
wire   [12:0] add_ln29_19_fu_3022_p2;
wire   [31:0] bitcast_ln29_18_fu_3032_p1;
wire   [31:0] bitcast_ln29_19_fu_3050_p1;
wire   [7:0] tmp_53_fu_3036_p4;
wire   [22:0] trunc_ln29_18_fu_3046_p1;
wire   [0:0] icmp_ln29_37_fu_3074_p2;
wire   [0:0] icmp_ln29_36_fu_3068_p2;
wire   [7:0] tmp_54_fu_3054_p4;
wire   [22:0] trunc_ln29_19_fu_3064_p1;
wire   [0:0] icmp_ln29_39_fu_3092_p2;
wire   [0:0] icmp_ln29_38_fu_3086_p2;
wire   [0:0] or_ln29_18_fu_3080_p2;
wire   [0:0] or_ln29_19_fu_3098_p2;
wire   [0:0] and_ln29_18_fu_3104_p2;
wire   [0:0] and_ln29_19_fu_3110_p2;
wire   [4:0] zext_ln20_10_fu_3124_p1;
wire   [4:0] add_ln26_10_fu_3140_p2;
wire   [4:0] mul_ln29_10_fu_3149_p0;
wire   [4:0] or_ln27_4_fu_3167_p3;
wire   [9:0] zext_ln29_42_fu_3175_p1;
wire   [9:0] add_ln29_20_fu_3179_p2;
wire   [10:0] tmp_75_fu_3192_p3;
wire   [12:0] p_shl20_cast_fu_3184_p3;
wire   [12:0] zext_ln29_43_fu_3200_p1;
wire   [12:0] sub_ln29_10_fu_3204_p2;
wire   [12:0] add_ln29_21_fu_3210_p2;
wire   [31:0] bitcast_ln29_20_fu_3220_p1;
wire   [31:0] bitcast_ln29_21_fu_3238_p1;
wire   [7:0] tmp_56_fu_3224_p4;
wire   [22:0] trunc_ln29_20_fu_3234_p1;
wire   [0:0] icmp_ln29_41_fu_3262_p2;
wire   [0:0] icmp_ln29_40_fu_3256_p2;
wire   [7:0] tmp_57_fu_3242_p4;
wire   [22:0] trunc_ln29_21_fu_3252_p1;
wire   [0:0] icmp_ln29_43_fu_3280_p2;
wire   [0:0] icmp_ln29_42_fu_3274_p2;
wire   [0:0] or_ln29_20_fu_3268_p2;
wire   [0:0] or_ln29_21_fu_3286_p2;
wire   [0:0] and_ln29_20_fu_3292_p2;
wire   [0:0] and_ln29_21_fu_3298_p2;
wire   [4:0] zext_ln20_11_fu_3312_p1;
wire   [4:0] add_ln26_11_fu_3328_p2;
wire   [4:0] mul_ln29_11_fu_3337_p0;
wire   [4:0] zext_ln23_2_fu_3343_p1;
wire   [4:0] add_ln27_2_fu_3359_p2;
wire   [9:0] zext_ln29_46_fu_3365_p1;
wire   [9:0] add_ln29_22_fu_3369_p2;
wire   [10:0] tmp_76_fu_3382_p3;
wire   [12:0] p_shl22_cast_fu_3374_p3;
wire   [12:0] zext_ln29_47_fu_3390_p1;
wire   [12:0] sub_ln29_11_fu_3394_p2;
wire   [12:0] add_ln29_23_fu_3400_p2;
wire   [31:0] bitcast_ln29_22_fu_3410_p1;
wire   [31:0] bitcast_ln29_23_fu_3428_p1;
wire   [7:0] tmp_59_fu_3414_p4;
wire   [22:0] trunc_ln29_22_fu_3424_p1;
wire   [0:0] icmp_ln29_45_fu_3452_p2;
wire   [0:0] icmp_ln29_44_fu_3446_p2;
wire   [7:0] tmp_60_fu_3432_p4;
wire   [22:0] trunc_ln29_23_fu_3442_p1;
wire   [0:0] icmp_ln29_47_fu_3470_p2;
wire   [0:0] icmp_ln29_46_fu_3464_p2;
wire   [0:0] or_ln29_22_fu_3458_p2;
wire   [0:0] or_ln29_23_fu_3476_p2;
wire   [0:0] and_ln29_22_fu_3482_p2;
wire   [0:0] and_ln29_23_fu_3488_p2;
wire   [4:0] zext_ln20_12_fu_3502_p1;
wire   [4:0] add_ln26_12_fu_3518_p2;
wire   [4:0] mul_ln29_12_fu_3527_p0;
wire   [3:0] or_ln27_5_fu_3545_p3;
wire  signed [4:0] sext_ln27_3_fu_3553_p1;
wire   [9:0] zext_ln29_49_fu_3557_p1;
wire   [9:0] add_ln29_24_fu_3561_p2;
wire   [10:0] tmp_77_fu_3574_p3;
wire   [12:0] p_shl24_cast_fu_3566_p3;
wire   [12:0] zext_ln29_50_fu_3582_p1;
wire   [12:0] sub_ln29_12_fu_3586_p2;
wire   [12:0] add_ln29_25_fu_3592_p2;
wire   [31:0] bitcast_ln29_24_fu_3602_p1;
wire   [31:0] bitcast_ln29_25_fu_3620_p1;
wire   [7:0] tmp_62_fu_3606_p4;
wire   [22:0] trunc_ln29_24_fu_3616_p1;
wire   [0:0] icmp_ln29_49_fu_3644_p2;
wire   [0:0] icmp_ln29_48_fu_3638_p2;
wire   [7:0] tmp_63_fu_3624_p4;
wire   [22:0] trunc_ln29_25_fu_3634_p1;
wire   [0:0] icmp_ln29_51_fu_3662_p2;
wire   [0:0] icmp_ln29_50_fu_3656_p2;
wire   [0:0] or_ln29_24_fu_3650_p2;
wire   [0:0] or_ln29_25_fu_3668_p2;
wire   [0:0] and_ln29_24_fu_3674_p2;
wire   [0:0] and_ln29_25_fu_3680_p2;
reg   [54:0] ap_NS_fsm;
wire   [9:0] mul_ln29_10_fu_3149_p00;
wire   [9:0] mul_ln29_11_fu_3337_p00;
wire   [9:0] mul_ln29_12_fu_3527_p00;
wire   [9:0] mul_ln29_1_fu_1447_p00;
wire   [9:0] mul_ln29_2_fu_1633_p00;
wire   [9:0] mul_ln29_3_fu_1821_p00;
wire   [9:0] mul_ln29_4_fu_2011_p00;
wire   [9:0] mul_ln29_5_fu_2199_p00;
wire   [9:0] mul_ln29_6_fu_2389_p00;
wire   [9:0] mul_ln29_7_fu_2581_p00;
wire   [9:0] mul_ln29_8_fu_2771_p00;
wire   [9:0] mul_ln29_9_fu_2959_p00;
wire   [9:0] mul_ln29_fu_1267_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 55'd1;
end

max_pool_fcmp_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_fcmp_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_out_q0),
    .din1(grp_fu_971_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_971_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1020_p2 == 1'd1))) begin
        f_0_reg_327 <= f_reg_3697;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_327 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1273_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        max_0_0_reg_360 <= max_1_0_reg_384;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1020_p2 == 1'd0))) begin
        max_0_0_reg_360 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_10_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        max_0_10_reg_830 <= max_1_10_reg_854;
    end else if (((icmp_ln20_9_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        max_0_10_reg_830 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_11_fu_3347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        max_0_11_reg_877 <= max_1_11_reg_901;
    end else if (((icmp_ln20_10_fu_3128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        max_0_11_reg_877 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_12_fu_3533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        max_0_12_reg_924 <= max_1_12_reg_948;
    end else if (((icmp_ln20_11_fu_3316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        max_0_12_reg_924 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_1_fu_1453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        max_0_1_reg_407 <= max_1_1_reg_431;
    end else if (((icmp_ln20_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        max_0_1_reg_407 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        max_0_2_reg_454 <= max_1_2_reg_478;
    end else if (((icmp_ln20_1_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        max_0_2_reg_454 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        max_0_3_reg_501 <= max_1_3_reg_525;
    end else if (((icmp_ln20_2_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        max_0_3_reg_501 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_2017_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        max_0_4_reg_548 <= max_1_4_reg_572;
    end else if (((icmp_ln20_3_fu_1800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        max_0_4_reg_548 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        max_0_5_reg_595 <= max_1_5_reg_619;
    end else if (((icmp_ln20_4_fu_1990_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        max_0_5_reg_595 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_6_fu_2395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        max_0_6_reg_642 <= max_1_6_reg_666;
    end else if (((icmp_ln20_5_fu_2178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        max_0_6_reg_642 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_7_fu_2587_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        max_0_7_reg_689 <= max_1_7_reg_713;
    end else if (((icmp_ln20_6_fu_2368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        max_0_7_reg_689 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_8_fu_2777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        max_0_8_reg_736 <= max_1_8_reg_760;
    end else if (((icmp_ln20_7_fu_2560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        max_0_8_reg_736 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_9_fu_2969_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        max_0_9_reg_783 <= max_1_9_reg_807;
    end else if (((icmp_ln20_8_fu_2750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        max_0_9_reg_783 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_1_0_reg_384 <= select_ln29_fu_1414_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1246_p2 == 1'd0))) begin
        max_1_0_reg_384 <= max_0_0_reg_360;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        max_1_10_reg_854 <= select_ln29_10_fu_3304_p3;
    end else if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln20_10_fu_3128_p2 == 1'd0))) begin
        max_1_10_reg_854 <= max_0_10_reg_830;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        max_1_11_reg_901 <= select_ln29_11_fu_3494_p3;
    end else if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln20_11_fu_3316_p2 == 1'd0))) begin
        max_1_11_reg_901 <= max_0_11_reg_877;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        max_1_12_reg_948 <= select_ln29_12_fu_3686_p3;
    end else if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln20_12_fu_3506_p2 == 1'd0))) begin
        max_1_12_reg_948 <= max_0_12_reg_924;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        max_1_1_reg_431 <= select_ln29_1_fu_1600_p3;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln20_1_fu_1426_p2 == 1'd0))) begin
        max_1_1_reg_431 <= max_0_1_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        max_1_2_reg_478 <= select_ln29_2_fu_1788_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln20_2_fu_1612_p2 == 1'd0))) begin
        max_1_2_reg_478 <= max_0_2_reg_454;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max_1_3_reg_525 <= select_ln29_3_fu_1978_p3;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_3_fu_1800_p2 == 1'd0))) begin
        max_1_3_reg_525 <= max_0_3_reg_501;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        max_1_4_reg_572 <= select_ln29_4_fu_2166_p3;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln20_4_fu_1990_p2 == 1'd0))) begin
        max_1_4_reg_572 <= max_0_4_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        max_1_5_reg_619 <= select_ln29_5_fu_2356_p3;
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln20_5_fu_2178_p2 == 1'd0))) begin
        max_1_5_reg_619 <= max_0_5_reg_595;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        max_1_6_reg_666 <= select_ln29_6_fu_2548_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_6_fu_2368_p2 == 1'd0))) begin
        max_1_6_reg_666 <= max_0_6_reg_642;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        max_1_7_reg_713 <= select_ln29_7_fu_2738_p3;
    end else if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln20_7_fu_2560_p2 == 1'd0))) begin
        max_1_7_reg_713 <= max_0_7_reg_689;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        max_1_8_reg_760 <= select_ln29_8_fu_2926_p3;
    end else if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln20_8_fu_2750_p2 == 1'd0))) begin
        max_1_8_reg_760 <= max_0_8_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        max_1_9_reg_807 <= select_ln29_9_fu_3116_p3;
    end else if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln20_9_fu_2938_p2 == 1'd0))) begin
        max_1_9_reg_807 <= max_0_9_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mpc_0_0_reg_396 <= add_ln23_reg_3847;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1246_p2 == 1'd0))) begin
        mpc_0_0_reg_396 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        mpc_0_10_reg_866 <= add_ln23_10_reg_4157;
    end else if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln20_10_fu_3128_p2 == 1'd0))) begin
        mpc_0_10_reg_866 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        mpc_0_11_reg_913 <= add_ln23_11_reg_4188;
    end else if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln20_11_fu_3316_p2 == 1'd0))) begin
        mpc_0_11_reg_913 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        mpc_0_12_reg_960 <= add_ln23_12_reg_4219;
    end else if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln20_12_fu_3506_p2 == 1'd0))) begin
        mpc_0_12_reg_960 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        mpc_0_1_reg_443 <= add_ln23_1_reg_3878;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln20_1_fu_1426_p2 == 1'd0))) begin
        mpc_0_1_reg_443 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mpc_0_2_reg_490 <= add_ln23_2_reg_3909;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln20_2_fu_1612_p2 == 1'd0))) begin
        mpc_0_2_reg_490 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mpc_0_3_reg_537 <= add_ln23_3_reg_3940;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_3_fu_1800_p2 == 1'd0))) begin
        mpc_0_3_reg_537 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        mpc_0_4_reg_584 <= add_ln23_4_reg_3971;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln20_4_fu_1990_p2 == 1'd0))) begin
        mpc_0_4_reg_584 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mpc_0_5_reg_631 <= add_ln23_5_reg_4002;
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln20_5_fu_2178_p2 == 1'd0))) begin
        mpc_0_5_reg_631 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        mpc_0_6_reg_678 <= add_ln23_6_reg_4033;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_6_fu_2368_p2 == 1'd0))) begin
        mpc_0_6_reg_678 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        mpc_0_7_reg_725 <= add_ln23_7_reg_4064;
    end else if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln20_7_fu_2560_p2 == 1'd0))) begin
        mpc_0_7_reg_725 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        mpc_0_8_reg_772 <= add_ln23_8_reg_4095;
    end else if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln20_8_fu_2750_p2 == 1'd0))) begin
        mpc_0_8_reg_772 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        mpc_0_9_reg_819 <= add_ln23_9_reg_4126;
    end else if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln20_9_fu_2938_p2 == 1'd0))) begin
        mpc_0_9_reg_819 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1273_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        mpr_0_0_reg_373 <= add_ln20_reg_3834;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1020_p2 == 1'd0))) begin
        mpr_0_0_reg_373 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_10_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        mpr_0_10_reg_843 <= add_ln20_10_reg_4144;
    end else if (((icmp_ln20_9_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        mpr_0_10_reg_843 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_11_fu_3347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        mpr_0_11_reg_890 <= add_ln20_11_reg_4175;
    end else if (((icmp_ln20_10_fu_3128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        mpr_0_11_reg_890 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_12_fu_3533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        mpr_0_12_reg_937 <= add_ln20_12_reg_4206;
    end else if (((icmp_ln20_11_fu_3316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        mpr_0_12_reg_937 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_1_fu_1453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        mpr_0_1_reg_420 <= add_ln20_1_reg_3865;
    end else if (((icmp_ln20_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        mpr_0_1_reg_420 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        mpr_0_2_reg_467 <= add_ln20_2_reg_3896;
    end else if (((icmp_ln20_1_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        mpr_0_2_reg_467 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        mpr_0_3_reg_514 <= add_ln20_3_reg_3927;
    end else if (((icmp_ln20_2_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        mpr_0_3_reg_514 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_2017_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        mpr_0_4_reg_561 <= add_ln20_4_reg_3958;
    end else if (((icmp_ln20_3_fu_1800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        mpr_0_4_reg_561 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        mpr_0_5_reg_608 <= add_ln20_5_reg_3989;
    end else if (((icmp_ln20_4_fu_1990_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        mpr_0_5_reg_608 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_6_fu_2395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        mpr_0_6_reg_655 <= add_ln20_6_reg_4020;
    end else if (((icmp_ln20_5_fu_2178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        mpr_0_6_reg_655 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_7_fu_2587_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        mpr_0_7_reg_702 <= add_ln20_7_reg_4051;
    end else if (((icmp_ln20_6_fu_2368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        mpr_0_7_reg_702 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_8_fu_2777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        mpr_0_8_reg_749 <= add_ln20_8_reg_4082;
    end else if (((icmp_ln20_7_fu_2560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        mpr_0_8_reg_749 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_9_fu_2969_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        mpr_0_9_reg_796 <= add_ln20_9_reg_4113;
    end else if (((icmp_ln20_8_fu_2750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        mpr_0_9_reg_796 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_12_fu_3506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        phi_mul_reg_349 <= add_ln13_reg_3736;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd0))) begin
        phi_mul_reg_349 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_12_fu_3506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        r_0_reg_338 <= r_reg_3744;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd0))) begin
        r_0_reg_338 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln13_reg_3736 <= add_ln13_fu_1014_p2;
        r_reg_3744 <= r_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        add_ln20_10_reg_4144 <= add_ln20_10_fu_3134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln20_11_reg_4175 <= add_ln20_11_fu_3322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        add_ln20_12_reg_4206 <= add_ln20_12_fu_3512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln20_1_reg_3865 <= add_ln20_1_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln20_2_reg_3896 <= add_ln20_2_fu_1618_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln20_3_reg_3927 <= add_ln20_3_fu_1806_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln20_4_reg_3958 <= add_ln20_4_fu_1996_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln20_5_reg_3989 <= add_ln20_5_fu_2184_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln20_6_reg_4020 <= add_ln20_6_fu_2374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln20_7_reg_4051 <= add_ln20_7_fu_2566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln20_8_reg_4082 <= add_ln20_8_fu_2756_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        add_ln20_9_reg_4113 <= add_ln20_9_fu_2944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln20_reg_3834 <= add_ln20_fu_1252_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        add_ln23_10_reg_4157 <= add_ln23_10_fu_3161_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln23_11_reg_4188 <= add_ln23_11_fu_3353_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        add_ln23_12_reg_4219 <= add_ln23_12_fu_3539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln23_1_reg_3878 <= add_ln23_1_fu_1459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln23_2_reg_3909 <= add_ln23_2_fu_1645_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln23_3_reg_3940 <= add_ln23_3_fu_1833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln23_4_reg_3971 <= add_ln23_4_fu_2023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln23_5_reg_4002 <= add_ln23_5_fu_2215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln23_6_reg_4033 <= add_ln23_6_fu_2401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln23_7_reg_4064 <= add_ln23_7_fu_2593_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln23_8_reg_4095 <= add_ln23_8_fu_2783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        add_ln23_9_reg_4126 <= add_ln23_9_fu_2975_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln23_reg_3847 <= add_ln23_fu_1279_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_reg_3697 <= f_fu_1000_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1020_p2 == 1'd0))) begin
        max_pool_out_addr_10_reg_3816 <= zext_ln36_10_fu_1205_p1;
        max_pool_out_addr_11_reg_3821 <= zext_ln36_11_fu_1221_p1;
        max_pool_out_addr_12_reg_3826 <= zext_ln36_12_fu_1237_p1;
        max_pool_out_addr_1_reg_3771 <= zext_ln36_1_fu_1061_p1;
        max_pool_out_addr_2_reg_3776 <= zext_ln36_2_fu_1077_p1;
        max_pool_out_addr_3_reg_3781 <= zext_ln36_3_fu_1093_p1;
        max_pool_out_addr_4_reg_3786 <= zext_ln36_4_fu_1109_p1;
        max_pool_out_addr_5_reg_3791 <= zext_ln36_5_fu_1125_p1;
        max_pool_out_addr_6_reg_3796 <= zext_ln36_6_fu_1141_p1;
        max_pool_out_addr_7_reg_3801 <= zext_ln36_7_fu_1157_p1;
        max_pool_out_addr_8_reg_3806 <= zext_ln36_8_fu_1173_p1;
        max_pool_out_addr_9_reg_3811 <= zext_ln36_9_fu_1189_p1;
        max_pool_out_addr_reg_3766 <= zext_ln36_fu_1045_p1;
        shl_ln_reg_3749[4 : 1] <= shl_ln_fu_1032_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (icmp_ln20_10_fu_3128_p2 == 1'd0))) begin
        mul_ln29_10_reg_4149[9 : 1] <= mul_ln29_10_fu_3149_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (icmp_ln20_11_fu_3316_p2 == 1'd0))) begin
        mul_ln29_11_reg_4180[9 : 1] <= mul_ln29_11_fu_3337_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln20_12_fu_3506_p2 == 1'd0))) begin
        mul_ln29_12_reg_4211[9 : 1] <= mul_ln29_12_fu_3527_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln20_1_fu_1426_p2 == 1'd0))) begin
        mul_ln29_1_reg_3870[9 : 1] <= mul_ln29_1_fu_1447_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln20_2_fu_1612_p2 == 1'd0))) begin
        mul_ln29_2_reg_3901[9 : 1] <= mul_ln29_2_fu_1633_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_3_fu_1800_p2 == 1'd0))) begin
        mul_ln29_3_reg_3932[9 : 1] <= mul_ln29_3_fu_1821_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln20_4_fu_1990_p2 == 1'd0))) begin
        mul_ln29_4_reg_3963[9 : 1] <= mul_ln29_4_fu_2011_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln20_5_fu_2178_p2 == 1'd0))) begin
        mul_ln29_5_reg_3994[9 : 1] <= mul_ln29_5_fu_2199_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_6_fu_2368_p2 == 1'd0))) begin
        mul_ln29_6_reg_4025[9 : 1] <= mul_ln29_6_fu_2389_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln20_7_fu_2560_p2 == 1'd0))) begin
        mul_ln29_7_reg_4056[9 : 1] <= mul_ln29_7_fu_2581_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (icmp_ln20_8_fu_2750_p2 == 1'd0))) begin
        mul_ln29_8_reg_4087[9 : 1] <= mul_ln29_8_fu_2771_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (icmp_ln20_9_fu_2938_p2 == 1'd0))) begin
        mul_ln29_9_reg_4118[9 : 1] <= mul_ln29_9_fu_2959_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1246_p2 == 1'd0))) begin
        mul_ln29_reg_3839[9 : 1] <= mul_ln29_fu_1267_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_989 <= conv_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd0))) begin
        zext_ln13_1_reg_3719[2 : 0] <= zext_ln13_1_fu_1010_p1[2 : 0];
        zext_ln13_reg_3702[2 : 0] <= zext_ln13_fu_1006_p1[2 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        conv_out_address0 = zext_ln29_51_fu_3597_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        conv_out_address0 = zext_ln29_48_fu_3405_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        conv_out_address0 = zext_ln29_44_fu_3215_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        conv_out_address0 = zext_ln29_40_fu_3027_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        conv_out_address0 = zext_ln29_36_fu_2837_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        conv_out_address0 = zext_ln29_32_fu_2649_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_out_address0 = zext_ln29_28_fu_2459_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        conv_out_address0 = zext_ln29_24_fu_2267_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        conv_out_address0 = zext_ln29_20_fu_2077_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv_out_address0 = zext_ln29_16_fu_1889_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        conv_out_address0 = zext_ln29_12_fu_1699_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        conv_out_address0 = zext_ln29_8_fu_1511_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_out_address0 = zext_ln29_4_fu_1325_p1;
    end else begin
        conv_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_971_p1 = max_1_12_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_971_p1 = max_1_11_reg_901;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_971_p1 = max_1_10_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_971_p1 = max_1_9_reg_807;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_971_p1 = max_1_8_reg_760;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_971_p1 = max_1_7_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_971_p1 = max_1_6_reg_666;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_971_p1 = max_1_5_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_971_p1 = max_1_4_reg_572;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_971_p1 = max_1_3_reg_525;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_971_p1 = max_1_2_reg_478;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_971_p1 = max_1_1_reg_431;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_971_p1 = max_1_0_reg_384;
    end else begin
        grp_fu_971_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        max_pool_out_address0 = max_pool_out_addr_12_reg_3826;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        max_pool_out_address0 = max_pool_out_addr_11_reg_3821;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        max_pool_out_address0 = max_pool_out_addr_10_reg_3816;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        max_pool_out_address0 = max_pool_out_addr_9_reg_3811;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        max_pool_out_address0 = max_pool_out_addr_8_reg_3806;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        max_pool_out_address0 = max_pool_out_addr_7_reg_3801;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_out_address0 = max_pool_out_addr_6_reg_3796;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        max_pool_out_address0 = max_pool_out_addr_5_reg_3791;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        max_pool_out_address0 = max_pool_out_addr_4_reg_3786;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_out_address0 = max_pool_out_addr_3_reg_3781;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_out_address0 = max_pool_out_addr_2_reg_3776;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_out_address0 = max_pool_out_addr_1_reg_3771;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_out_address0 = max_pool_out_addr_reg_3766;
    end else begin
        max_pool_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state4))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        max_pool_out_d0 = max_0_12_reg_924;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        max_pool_out_d0 = max_0_11_reg_877;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        max_pool_out_d0 = max_0_10_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        max_pool_out_d0 = max_0_9_reg_783;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        max_pool_out_d0 = max_0_8_reg_736;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        max_pool_out_d0 = max_0_7_reg_689;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_out_d0 = max_0_6_reg_642;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        max_pool_out_d0 = max_0_5_reg_595;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        max_pool_out_d0 = max_0_4_reg_548;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_out_d0 = max_0_3_reg_501;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        max_pool_out_d0 = max_0_2_reg_454;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_pool_out_d0 = max_0_1_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_out_d0 = max_0_0_reg_360;
    end else begin
        max_pool_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln20_12_fu_3506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52)) | ((icmp_ln20_11_fu_3316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48)) | ((icmp_ln20_10_fu_3128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44)) | ((icmp_ln20_9_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((icmp_ln20_8_fu_2750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((icmp_ln20_7_fu_2560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32)) | ((icmp_ln20_6_fu_2368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln20_5_fu_2178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln20_4_fu_1990_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln20_3_fu_1800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln20_2_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln20_1_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln20_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
        max_pool_out_we0 = 1'b1;
    end else begin
        max_pool_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_994_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1020_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln20_fu_1246_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln23_fu_1273_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln20_1_fu_1426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln23_1_fu_1453_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln20_2_fu_1612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln23_2_fu_1639_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln20_3_fu_1800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln23_3_fu_1827_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln20_4_fu_1990_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln23_4_fu_2017_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln20_5_fu_2178_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln23_5_fu_2209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln20_6_fu_2368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln23_6_fu_2395_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln20_7_fu_2560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln23_7_fu_2587_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln20_8_fu_2750_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln23_8_fu_2777_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln20_9_fu_2938_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln23_9_fu_2969_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln20_10_fu_3128_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln23_10_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln20_11_fu_3316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln23_11_fu_3347_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln20_12_fu_3506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((icmp_ln23_12_fu_3533_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_fu_1014_p2 = (phi_mul_reg_349 + 10'd78);

assign add_ln20_10_fu_3134_p2 = (mpr_0_10_reg_843 + 2'd1);

assign add_ln20_11_fu_3322_p2 = (mpr_0_11_reg_890 + 2'd1);

assign add_ln20_12_fu_3512_p2 = (mpr_0_12_reg_937 + 2'd1);

assign add_ln20_1_fu_1432_p2 = (mpr_0_1_reg_420 + 2'd1);

assign add_ln20_2_fu_1618_p2 = (mpr_0_2_reg_467 + 2'd1);

assign add_ln20_3_fu_1806_p2 = (mpr_0_3_reg_514 + 2'd1);

assign add_ln20_4_fu_1996_p2 = (mpr_0_4_reg_561 + 2'd1);

assign add_ln20_5_fu_2184_p2 = (mpr_0_5_reg_608 + 2'd1);

assign add_ln20_6_fu_2374_p2 = (mpr_0_6_reg_655 + 2'd1);

assign add_ln20_7_fu_2566_p2 = (mpr_0_7_reg_702 + 2'd1);

assign add_ln20_8_fu_2756_p2 = (mpr_0_8_reg_749 + 2'd1);

assign add_ln20_9_fu_2944_p2 = (mpr_0_9_reg_796 + 2'd1);

assign add_ln20_fu_1252_p2 = (mpr_0_0_reg_373 + 2'd1);

assign add_ln23_10_fu_3161_p2 = (mpc_0_10_reg_866 + 2'd1);

assign add_ln23_11_fu_3353_p2 = (mpc_0_11_reg_913 + 2'd1);

assign add_ln23_12_fu_3539_p2 = (mpc_0_12_reg_960 + 2'd1);

assign add_ln23_1_fu_1459_p2 = (mpc_0_1_reg_443 + 2'd1);

assign add_ln23_2_fu_1645_p2 = (mpc_0_2_reg_490 + 2'd1);

assign add_ln23_3_fu_1833_p2 = (mpc_0_3_reg_537 + 2'd1);

assign add_ln23_4_fu_2023_p2 = (mpc_0_4_reg_584 + 2'd1);

assign add_ln23_5_fu_2215_p2 = (mpc_0_5_reg_631 + 2'd1);

assign add_ln23_6_fu_2401_p2 = (mpc_0_6_reg_678 + 2'd1);

assign add_ln23_7_fu_2593_p2 = (mpc_0_7_reg_725 + 2'd1);

assign add_ln23_8_fu_2783_p2 = (mpc_0_8_reg_772 + 2'd1);

assign add_ln23_9_fu_2975_p2 = (mpc_0_9_reg_819 + 2'd1);

assign add_ln23_fu_1279_p2 = (mpc_0_0_reg_396 + 2'd1);

assign add_ln26_10_fu_3140_p2 = (zext_ln20_10_fu_3124_p1 + shl_ln_reg_3749);

assign add_ln26_11_fu_3328_p2 = (zext_ln20_11_fu_3312_p1 + shl_ln_reg_3749);

assign add_ln26_12_fu_3518_p2 = (zext_ln20_12_fu_3502_p1 + shl_ln_reg_3749);

assign add_ln26_1_fu_1438_p2 = (zext_ln20_1_fu_1422_p1 + shl_ln_reg_3749);

assign add_ln26_2_fu_1624_p2 = (zext_ln20_2_fu_1608_p1 + shl_ln_reg_3749);

assign add_ln26_3_fu_1812_p2 = (zext_ln20_3_fu_1796_p1 + shl_ln_reg_3749);

assign add_ln26_4_fu_2002_p2 = (zext_ln20_4_fu_1986_p1 + shl_ln_reg_3749);

assign add_ln26_5_fu_2190_p2 = (zext_ln20_5_fu_2174_p1 + shl_ln_reg_3749);

assign add_ln26_6_fu_2380_p2 = (zext_ln20_6_fu_2364_p1 + shl_ln_reg_3749);

assign add_ln26_7_fu_2572_p2 = (zext_ln20_7_fu_2556_p1 + shl_ln_reg_3749);

assign add_ln26_8_fu_2762_p2 = (zext_ln20_8_fu_2746_p1 + shl_ln_reg_3749);

assign add_ln26_9_fu_2950_p2 = (zext_ln20_9_fu_2934_p1 + shl_ln_reg_3749);

assign add_ln26_fu_1258_p2 = (zext_ln20_fu_1242_p1 + shl_ln_reg_3749);

assign add_ln27_1_fu_2981_p2 = ($signed(5'd18) + $signed(zext_ln23_1_fu_2965_p1));

assign add_ln27_2_fu_3359_p2 = ($signed(5'd22) + $signed(zext_ln23_2_fu_3343_p1));

assign add_ln27_fu_2221_p2 = ($signed(4'd10) + $signed(zext_ln23_fu_2205_p1));

assign add_ln29_10_fu_2231_p2 = (mul_ln29_5_reg_3994 + zext_ln29_22_fu_2227_p1);

assign add_ln29_11_fu_2262_p2 = (sub_ln29_5_fu_2256_p2 + zext_ln13_reg_3702);

assign add_ln29_12_fu_2423_p2 = (mul_ln29_6_reg_4025 + zext_ln29_26_fu_2419_p1);

assign add_ln29_13_fu_2454_p2 = (sub_ln29_6_fu_2448_p2 + zext_ln13_reg_3702);

assign add_ln29_14_fu_2613_p2 = (mul_ln29_7_reg_4056 + zext_ln29_30_fu_2609_p1);

assign add_ln29_15_fu_2644_p2 = (sub_ln29_7_fu_2638_p2 + zext_ln13_reg_3702);

assign add_ln29_16_fu_2801_p2 = (mul_ln29_8_reg_4087 + zext_ln29_34_fu_2797_p1);

assign add_ln29_17_fu_2832_p2 = (sub_ln29_8_fu_2826_p2 + zext_ln13_reg_3702);

assign add_ln29_18_fu_2991_p2 = (mul_ln29_9_reg_4118 + zext_ln29_38_fu_2987_p1);

assign add_ln29_19_fu_3022_p2 = (sub_ln29_9_fu_3016_p2 + zext_ln13_reg_3702);

assign add_ln29_1_fu_1320_p2 = (sub_ln29_fu_1314_p2 + zext_ln13_reg_3702);

assign add_ln29_20_fu_3179_p2 = (mul_ln29_10_reg_4149 + zext_ln29_42_fu_3175_p1);

assign add_ln29_21_fu_3210_p2 = (sub_ln29_10_fu_3204_p2 + zext_ln13_reg_3702);

assign add_ln29_22_fu_3369_p2 = (mul_ln29_11_reg_4180 + zext_ln29_46_fu_3365_p1);

assign add_ln29_23_fu_3400_p2 = (sub_ln29_11_fu_3394_p2 + zext_ln13_reg_3702);

assign add_ln29_24_fu_3561_p2 = (mul_ln29_12_reg_4211 + zext_ln29_49_fu_3557_p1);

assign add_ln29_25_fu_3592_p2 = (sub_ln29_12_fu_3586_p2 + zext_ln13_reg_3702);

assign add_ln29_2_fu_1475_p2 = (mul_ln29_1_reg_3870 + zext_ln29_6_fu_1471_p1);

assign add_ln29_3_fu_1506_p2 = (sub_ln29_1_fu_1500_p2 + zext_ln13_reg_3702);

assign add_ln29_4_fu_1663_p2 = (mul_ln29_2_reg_3901 + zext_ln29_10_fu_1659_p1);

assign add_ln29_5_fu_1694_p2 = (sub_ln29_2_fu_1688_p2 + zext_ln13_reg_3702);

assign add_ln29_6_fu_1853_p2 = (mul_ln29_3_reg_3932 + zext_ln29_14_fu_1849_p1);

assign add_ln29_7_fu_1884_p2 = (sub_ln29_3_fu_1878_p2 + zext_ln13_reg_3702);

assign add_ln29_8_fu_2041_p2 = (mul_ln29_4_reg_3963 + zext_ln29_18_fu_2037_p1);

assign add_ln29_9_fu_2072_p2 = (sub_ln29_4_fu_2066_p2 + zext_ln13_reg_3702);

assign add_ln29_fu_1289_p2 = (mul_ln29_reg_3839 + zext_ln29_2_fu_1285_p1);

assign add_ln36_10_fu_1120_p2 = (add_ln36_9_fu_1114_p2 + zext_ln13_1_reg_3719);

assign add_ln36_11_fu_1130_p2 = (phi_mul_reg_349 + 10'd36);

assign add_ln36_12_fu_1136_p2 = (add_ln36_11_fu_1130_p2 + zext_ln13_1_reg_3719);

assign add_ln36_13_fu_1146_p2 = (phi_mul_reg_349 + 10'd42);

assign add_ln36_14_fu_1152_p2 = (add_ln36_13_fu_1146_p2 + zext_ln13_1_reg_3719);

assign add_ln36_15_fu_1162_p2 = (phi_mul_reg_349 + 10'd48);

assign add_ln36_16_fu_1168_p2 = (add_ln36_15_fu_1162_p2 + zext_ln13_1_reg_3719);

assign add_ln36_17_fu_1178_p2 = (phi_mul_reg_349 + 10'd54);

assign add_ln36_18_fu_1184_p2 = (add_ln36_17_fu_1178_p2 + zext_ln13_1_reg_3719);

assign add_ln36_19_fu_1194_p2 = (phi_mul_reg_349 + 10'd60);

assign add_ln36_1_fu_1050_p2 = (phi_mul_reg_349 + 10'd6);

assign add_ln36_20_fu_1200_p2 = (add_ln36_19_fu_1194_p2 + zext_ln13_1_reg_3719);

assign add_ln36_21_fu_1210_p2 = (phi_mul_reg_349 + 10'd66);

assign add_ln36_22_fu_1216_p2 = (add_ln36_21_fu_1210_p2 + zext_ln13_1_reg_3719);

assign add_ln36_23_fu_1226_p2 = (phi_mul_reg_349 + 10'd72);

assign add_ln36_24_fu_1232_p2 = (add_ln36_23_fu_1226_p2 + zext_ln13_1_reg_3719);

assign add_ln36_2_fu_1056_p2 = (add_ln36_1_fu_1050_p2 + zext_ln13_1_reg_3719);

assign add_ln36_3_fu_1066_p2 = (phi_mul_reg_349 + 10'd12);

assign add_ln36_4_fu_1072_p2 = (add_ln36_3_fu_1066_p2 + zext_ln13_1_reg_3719);

assign add_ln36_5_fu_1082_p2 = (phi_mul_reg_349 + 10'd18);

assign add_ln36_6_fu_1088_p2 = (add_ln36_5_fu_1082_p2 + zext_ln13_1_reg_3719);

assign add_ln36_7_fu_1098_p2 = (phi_mul_reg_349 + 10'd24);

assign add_ln36_8_fu_1104_p2 = (add_ln36_7_fu_1098_p2 + zext_ln13_1_reg_3719);

assign add_ln36_9_fu_1114_p2 = (phi_mul_reg_349 + 10'd30);

assign add_ln36_fu_1040_p2 = (phi_mul_reg_349 + zext_ln13_1_reg_3719);

assign and_ln29_10_fu_2344_p2 = (or_ln29_11_fu_2338_p2 & or_ln29_10_fu_2320_p2);

assign and_ln29_11_fu_2350_p2 = (grp_fu_971_p2 & and_ln29_10_fu_2344_p2);

assign and_ln29_12_fu_2536_p2 = (or_ln29_13_fu_2530_p2 & or_ln29_12_fu_2512_p2);

assign and_ln29_13_fu_2542_p2 = (grp_fu_971_p2 & and_ln29_12_fu_2536_p2);

assign and_ln29_14_fu_2726_p2 = (or_ln29_15_fu_2720_p2 & or_ln29_14_fu_2702_p2);

assign and_ln29_15_fu_2732_p2 = (grp_fu_971_p2 & and_ln29_14_fu_2726_p2);

assign and_ln29_16_fu_2914_p2 = (or_ln29_17_fu_2908_p2 & or_ln29_16_fu_2890_p2);

assign and_ln29_17_fu_2920_p2 = (grp_fu_971_p2 & and_ln29_16_fu_2914_p2);

assign and_ln29_18_fu_3104_p2 = (or_ln29_19_fu_3098_p2 & or_ln29_18_fu_3080_p2);

assign and_ln29_19_fu_3110_p2 = (grp_fu_971_p2 & and_ln29_18_fu_3104_p2);

assign and_ln29_1_fu_1408_p2 = (grp_fu_971_p2 & and_ln29_fu_1402_p2);

assign and_ln29_20_fu_3292_p2 = (or_ln29_21_fu_3286_p2 & or_ln29_20_fu_3268_p2);

assign and_ln29_21_fu_3298_p2 = (grp_fu_971_p2 & and_ln29_20_fu_3292_p2);

assign and_ln29_22_fu_3482_p2 = (or_ln29_23_fu_3476_p2 & or_ln29_22_fu_3458_p2);

assign and_ln29_23_fu_3488_p2 = (grp_fu_971_p2 & and_ln29_22_fu_3482_p2);

assign and_ln29_24_fu_3674_p2 = (or_ln29_25_fu_3668_p2 & or_ln29_24_fu_3650_p2);

assign and_ln29_25_fu_3680_p2 = (grp_fu_971_p2 & and_ln29_24_fu_3674_p2);

assign and_ln29_2_fu_1588_p2 = (or_ln29_3_fu_1582_p2 & or_ln29_2_fu_1564_p2);

assign and_ln29_3_fu_1594_p2 = (grp_fu_971_p2 & and_ln29_2_fu_1588_p2);

assign and_ln29_4_fu_1776_p2 = (or_ln29_5_fu_1770_p2 & or_ln29_4_fu_1752_p2);

assign and_ln29_5_fu_1782_p2 = (grp_fu_971_p2 & and_ln29_4_fu_1776_p2);

assign and_ln29_6_fu_1966_p2 = (or_ln29_7_fu_1960_p2 & or_ln29_6_fu_1942_p2);

assign and_ln29_7_fu_1972_p2 = (grp_fu_971_p2 & and_ln29_6_fu_1966_p2);

assign and_ln29_8_fu_2154_p2 = (or_ln29_9_fu_2148_p2 & or_ln29_8_fu_2130_p2);

assign and_ln29_9_fu_2160_p2 = (grp_fu_971_p2 & and_ln29_8_fu_2154_p2);

assign and_ln29_fu_1402_p2 = (or_ln29_fu_1378_p2 & or_ln29_1_fu_1396_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln29_10_fu_2272_p1 = reg_989;

assign bitcast_ln29_11_fu_2290_p1 = max_1_5_reg_619;

assign bitcast_ln29_12_fu_2464_p1 = reg_989;

assign bitcast_ln29_13_fu_2482_p1 = max_1_6_reg_666;

assign bitcast_ln29_14_fu_2654_p1 = reg_989;

assign bitcast_ln29_15_fu_2672_p1 = max_1_7_reg_713;

assign bitcast_ln29_16_fu_2842_p1 = reg_989;

assign bitcast_ln29_17_fu_2860_p1 = max_1_8_reg_760;

assign bitcast_ln29_18_fu_3032_p1 = reg_989;

assign bitcast_ln29_19_fu_3050_p1 = max_1_9_reg_807;

assign bitcast_ln29_1_fu_1348_p1 = max_1_0_reg_384;

assign bitcast_ln29_20_fu_3220_p1 = reg_989;

assign bitcast_ln29_21_fu_3238_p1 = max_1_10_reg_854;

assign bitcast_ln29_22_fu_3410_p1 = reg_989;

assign bitcast_ln29_23_fu_3428_p1 = max_1_11_reg_901;

assign bitcast_ln29_24_fu_3602_p1 = reg_989;

assign bitcast_ln29_25_fu_3620_p1 = max_1_12_reg_948;

assign bitcast_ln29_2_fu_1516_p1 = reg_989;

assign bitcast_ln29_3_fu_1534_p1 = max_1_1_reg_431;

assign bitcast_ln29_4_fu_1704_p1 = reg_989;

assign bitcast_ln29_5_fu_1722_p1 = max_1_2_reg_478;

assign bitcast_ln29_6_fu_1894_p1 = reg_989;

assign bitcast_ln29_7_fu_1912_p1 = max_1_3_reg_525;

assign bitcast_ln29_8_fu_2082_p1 = reg_989;

assign bitcast_ln29_9_fu_2100_p1 = max_1_4_reg_572;

assign bitcast_ln29_fu_1330_p1 = reg_989;

assign f_fu_1000_p2 = (f_0_reg_327 + 3'd1);

assign icmp_ln10_fu_994_p2 = ((f_0_reg_327 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1020_p2 = ((r_0_reg_338 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln20_10_fu_3128_p2 = ((mpr_0_10_reg_843 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_11_fu_3316_p2 = ((mpr_0_11_reg_890 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_12_fu_3506_p2 = ((mpr_0_12_reg_937 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_1426_p2 = ((mpr_0_1_reg_420 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_2_fu_1612_p2 = ((mpr_0_2_reg_467 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_3_fu_1800_p2 = ((mpr_0_3_reg_514 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_4_fu_1990_p2 = ((mpr_0_4_reg_561 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_5_fu_2178_p2 = ((mpr_0_5_reg_608 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_6_fu_2368_p2 = ((mpr_0_6_reg_655 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_7_fu_2560_p2 = ((mpr_0_7_reg_702 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_8_fu_2750_p2 = ((mpr_0_8_reg_749 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_9_fu_2938_p2 = ((mpr_0_9_reg_796 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_1246_p2 = ((mpr_0_0_reg_373 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_10_fu_3155_p2 = ((mpc_0_10_reg_866 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_11_fu_3347_p2 = ((mpc_0_11_reg_913 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_12_fu_3533_p2 = ((mpc_0_12_reg_960 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_1453_p2 = ((mpc_0_1_reg_443 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_1639_p2 = ((mpc_0_2_reg_490 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_1827_p2 = ((mpc_0_3_reg_537 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_4_fu_2017_p2 = ((mpc_0_4_reg_584 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_5_fu_2209_p2 = ((mpc_0_5_reg_631 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_6_fu_2395_p2 = ((mpc_0_6_reg_678 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_7_fu_2587_p2 = ((mpc_0_7_reg_725 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_8_fu_2777_p2 = ((mpc_0_8_reg_772 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_9_fu_2969_p2 = ((mpc_0_9_reg_819 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1273_p2 = ((mpc_0_0_reg_396 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln29_10_fu_1758_p2 = ((tmp_16_fu_1726_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_11_fu_1764_p2 = ((trunc_ln29_5_fu_1736_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_12_fu_1930_p2 = ((tmp_20_fu_1898_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_13_fu_1936_p2 = ((trunc_ln29_6_fu_1908_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_14_fu_1948_p2 = ((tmp_21_fu_1916_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_15_fu_1954_p2 = ((trunc_ln29_7_fu_1926_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_16_fu_2118_p2 = ((tmp_38_fu_2086_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_17_fu_2124_p2 = ((trunc_ln29_8_fu_2096_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_18_fu_2136_p2 = ((tmp_39_fu_2104_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_19_fu_2142_p2 = ((trunc_ln29_9_fu_2114_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_1_fu_1372_p2 = ((trunc_ln29_fu_1344_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_20_fu_2308_p2 = ((tmp_41_fu_2276_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_21_fu_2314_p2 = ((trunc_ln29_10_fu_2286_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_22_fu_2326_p2 = ((tmp_42_fu_2294_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_23_fu_2332_p2 = ((trunc_ln29_11_fu_2304_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_24_fu_2500_p2 = ((tmp_44_fu_2468_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_25_fu_2506_p2 = ((trunc_ln29_12_fu_2478_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_26_fu_2518_p2 = ((tmp_45_fu_2486_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_27_fu_2524_p2 = ((trunc_ln29_13_fu_2496_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_28_fu_2690_p2 = ((tmp_47_fu_2658_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_29_fu_2696_p2 = ((trunc_ln29_14_fu_2668_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_2_fu_1384_p2 = ((tmp_6_fu_1352_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_30_fu_2708_p2 = ((tmp_48_fu_2676_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_31_fu_2714_p2 = ((trunc_ln29_15_fu_2686_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_32_fu_2878_p2 = ((tmp_50_fu_2846_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_33_fu_2884_p2 = ((trunc_ln29_16_fu_2856_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_34_fu_2896_p2 = ((tmp_51_fu_2864_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_35_fu_2902_p2 = ((trunc_ln29_17_fu_2874_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_36_fu_3068_p2 = ((tmp_53_fu_3036_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_37_fu_3074_p2 = ((trunc_ln29_18_fu_3046_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_38_fu_3086_p2 = ((tmp_54_fu_3054_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_39_fu_3092_p2 = ((trunc_ln29_19_fu_3064_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_3_fu_1390_p2 = ((trunc_ln29_1_fu_1362_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_40_fu_3256_p2 = ((tmp_56_fu_3224_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_41_fu_3262_p2 = ((trunc_ln29_20_fu_3234_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_42_fu_3274_p2 = ((tmp_57_fu_3242_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_43_fu_3280_p2 = ((trunc_ln29_21_fu_3252_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_44_fu_3446_p2 = ((tmp_59_fu_3414_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_45_fu_3452_p2 = ((trunc_ln29_22_fu_3424_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_46_fu_3464_p2 = ((tmp_60_fu_3432_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_47_fu_3470_p2 = ((trunc_ln29_23_fu_3442_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_48_fu_3638_p2 = ((tmp_62_fu_3606_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_49_fu_3644_p2 = ((trunc_ln29_24_fu_3616_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_4_fu_1552_p2 = ((tmp_10_fu_1520_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_50_fu_3656_p2 = ((tmp_63_fu_3624_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_51_fu_3662_p2 = ((trunc_ln29_25_fu_3634_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_5_fu_1558_p2 = ((trunc_ln29_2_fu_1530_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_6_fu_1570_p2 = ((tmp_11_fu_1538_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1576_p2 = ((trunc_ln29_3_fu_1548_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_1740_p2 = ((tmp_15_fu_1708_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_1746_p2 = ((trunc_ln29_4_fu_1718_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_1366_p2 = ((tmp_5_fu_1334_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mul_ln29_10_fu_3149_p0 = mul_ln29_10_fu_3149_p00;

assign mul_ln29_10_fu_3149_p00 = add_ln26_10_fu_3140_p2;

assign mul_ln29_10_fu_3149_p2 = (mul_ln29_10_fu_3149_p0 * $signed('h1A));

assign mul_ln29_11_fu_3337_p0 = mul_ln29_11_fu_3337_p00;

assign mul_ln29_11_fu_3337_p00 = add_ln26_11_fu_3328_p2;

assign mul_ln29_11_fu_3337_p2 = (mul_ln29_11_fu_3337_p0 * $signed('h1A));

assign mul_ln29_12_fu_3527_p0 = mul_ln29_12_fu_3527_p00;

assign mul_ln29_12_fu_3527_p00 = add_ln26_12_fu_3518_p2;

assign mul_ln29_12_fu_3527_p2 = (mul_ln29_12_fu_3527_p0 * $signed('h1A));

assign mul_ln29_1_fu_1447_p0 = mul_ln29_1_fu_1447_p00;

assign mul_ln29_1_fu_1447_p00 = add_ln26_1_fu_1438_p2;

assign mul_ln29_1_fu_1447_p2 = (mul_ln29_1_fu_1447_p0 * $signed('h1A));

assign mul_ln29_2_fu_1633_p0 = mul_ln29_2_fu_1633_p00;

assign mul_ln29_2_fu_1633_p00 = add_ln26_2_fu_1624_p2;

assign mul_ln29_2_fu_1633_p2 = (mul_ln29_2_fu_1633_p0 * $signed('h1A));

assign mul_ln29_3_fu_1821_p0 = mul_ln29_3_fu_1821_p00;

assign mul_ln29_3_fu_1821_p00 = add_ln26_3_fu_1812_p2;

assign mul_ln29_3_fu_1821_p2 = (mul_ln29_3_fu_1821_p0 * $signed('h1A));

assign mul_ln29_4_fu_2011_p0 = mul_ln29_4_fu_2011_p00;

assign mul_ln29_4_fu_2011_p00 = add_ln26_4_fu_2002_p2;

assign mul_ln29_4_fu_2011_p2 = (mul_ln29_4_fu_2011_p0 * $signed('h1A));

assign mul_ln29_5_fu_2199_p0 = mul_ln29_5_fu_2199_p00;

assign mul_ln29_5_fu_2199_p00 = add_ln26_5_fu_2190_p2;

assign mul_ln29_5_fu_2199_p2 = (mul_ln29_5_fu_2199_p0 * $signed('h1A));

assign mul_ln29_6_fu_2389_p0 = mul_ln29_6_fu_2389_p00;

assign mul_ln29_6_fu_2389_p00 = add_ln26_6_fu_2380_p2;

assign mul_ln29_6_fu_2389_p2 = (mul_ln29_6_fu_2389_p0 * $signed('h1A));

assign mul_ln29_7_fu_2581_p0 = mul_ln29_7_fu_2581_p00;

assign mul_ln29_7_fu_2581_p00 = add_ln26_7_fu_2572_p2;

assign mul_ln29_7_fu_2581_p2 = (mul_ln29_7_fu_2581_p0 * $signed('h1A));

assign mul_ln29_8_fu_2771_p0 = mul_ln29_8_fu_2771_p00;

assign mul_ln29_8_fu_2771_p00 = add_ln26_8_fu_2762_p2;

assign mul_ln29_8_fu_2771_p2 = (mul_ln29_8_fu_2771_p0 * $signed('h1A));

assign mul_ln29_9_fu_2959_p0 = mul_ln29_9_fu_2959_p00;

assign mul_ln29_9_fu_2959_p00 = add_ln26_9_fu_2950_p2;

assign mul_ln29_9_fu_2959_p2 = (mul_ln29_9_fu_2959_p0 * $signed('h1A));

assign mul_ln29_fu_1267_p0 = mul_ln29_fu_1267_p00;

assign mul_ln29_fu_1267_p00 = add_ln26_fu_1258_p2;

assign mul_ln29_fu_1267_p2 = (mul_ln29_fu_1267_p0 * $signed('h1A));

assign or_ln27_1_fu_2029_p3 = {{2'd2}, {mpc_0_4_reg_584}};

assign or_ln27_2_fu_2407_p3 = {{1'd1}, {mpc_0_6_reg_678}};

assign or_ln27_3_fu_2789_p3 = {{3'd4}, {mpc_0_8_reg_772}};

assign or_ln27_4_fu_3167_p3 = {{3'd5}, {mpc_0_10_reg_866}};

assign or_ln27_5_fu_3545_p3 = {{2'd2}, {mpc_0_12_reg_960}};

assign or_ln29_10_fu_2320_p2 = (icmp_ln29_21_fu_2314_p2 | icmp_ln29_20_fu_2308_p2);

assign or_ln29_11_fu_2338_p2 = (icmp_ln29_23_fu_2332_p2 | icmp_ln29_22_fu_2326_p2);

assign or_ln29_12_fu_2512_p2 = (icmp_ln29_25_fu_2506_p2 | icmp_ln29_24_fu_2500_p2);

assign or_ln29_13_fu_2530_p2 = (icmp_ln29_27_fu_2524_p2 | icmp_ln29_26_fu_2518_p2);

assign or_ln29_14_fu_2702_p2 = (icmp_ln29_29_fu_2696_p2 | icmp_ln29_28_fu_2690_p2);

assign or_ln29_15_fu_2720_p2 = (icmp_ln29_31_fu_2714_p2 | icmp_ln29_30_fu_2708_p2);

assign or_ln29_16_fu_2890_p2 = (icmp_ln29_33_fu_2884_p2 | icmp_ln29_32_fu_2878_p2);

assign or_ln29_17_fu_2908_p2 = (icmp_ln29_35_fu_2902_p2 | icmp_ln29_34_fu_2896_p2);

assign or_ln29_18_fu_3080_p2 = (icmp_ln29_37_fu_3074_p2 | icmp_ln29_36_fu_3068_p2);

assign or_ln29_19_fu_3098_p2 = (icmp_ln29_39_fu_3092_p2 | icmp_ln29_38_fu_3086_p2);

assign or_ln29_1_fu_1396_p2 = (icmp_ln29_3_fu_1390_p2 | icmp_ln29_2_fu_1384_p2);

assign or_ln29_20_fu_3268_p2 = (icmp_ln29_41_fu_3262_p2 | icmp_ln29_40_fu_3256_p2);

assign or_ln29_21_fu_3286_p2 = (icmp_ln29_43_fu_3280_p2 | icmp_ln29_42_fu_3274_p2);

assign or_ln29_22_fu_3458_p2 = (icmp_ln29_45_fu_3452_p2 | icmp_ln29_44_fu_3446_p2);

assign or_ln29_23_fu_3476_p2 = (icmp_ln29_47_fu_3470_p2 | icmp_ln29_46_fu_3464_p2);

assign or_ln29_24_fu_3650_p2 = (icmp_ln29_49_fu_3644_p2 | icmp_ln29_48_fu_3638_p2);

assign or_ln29_25_fu_3668_p2 = (icmp_ln29_51_fu_3662_p2 | icmp_ln29_50_fu_3656_p2);

assign or_ln29_2_fu_1564_p2 = (icmp_ln29_5_fu_1558_p2 | icmp_ln29_4_fu_1552_p2);

assign or_ln29_3_fu_1582_p2 = (icmp_ln29_7_fu_1576_p2 | icmp_ln29_6_fu_1570_p2);

assign or_ln29_4_fu_1752_p2 = (icmp_ln29_9_fu_1746_p2 | icmp_ln29_8_fu_1740_p2);

assign or_ln29_5_fu_1770_p2 = (icmp_ln29_11_fu_1764_p2 | icmp_ln29_10_fu_1758_p2);

assign or_ln29_6_fu_1942_p2 = (icmp_ln29_13_fu_1936_p2 | icmp_ln29_12_fu_1930_p2);

assign or_ln29_7_fu_1960_p2 = (icmp_ln29_15_fu_1954_p2 | icmp_ln29_14_fu_1948_p2);

assign or_ln29_8_fu_2130_p2 = (icmp_ln29_17_fu_2124_p2 | icmp_ln29_16_fu_2118_p2);

assign or_ln29_9_fu_2148_p2 = (icmp_ln29_19_fu_2142_p2 | icmp_ln29_18_fu_2136_p2);

assign or_ln29_fu_1378_p2 = (icmp_ln29_fu_1366_p2 | icmp_ln29_1_fu_1372_p2);

assign or_ln_fu_1651_p3 = {{1'd1}, {mpc_0_2_reg_490}};

assign p_shl10_cast_fu_2236_p3 = {{add_ln29_10_fu_2231_p2}, {3'd0}};

assign p_shl12_cast_fu_2428_p3 = {{add_ln29_12_fu_2423_p2}, {3'd0}};

assign p_shl14_cast_fu_2618_p3 = {{add_ln29_14_fu_2613_p2}, {3'd0}};

assign p_shl16_cast_fu_2806_p3 = {{add_ln29_16_fu_2801_p2}, {3'd0}};

assign p_shl18_cast_fu_2996_p3 = {{add_ln29_18_fu_2991_p2}, {3'd0}};

assign p_shl20_cast_fu_3184_p3 = {{add_ln29_20_fu_3179_p2}, {3'd0}};

assign p_shl22_cast_fu_3374_p3 = {{add_ln29_22_fu_3369_p2}, {3'd0}};

assign p_shl24_cast_fu_3566_p3 = {{add_ln29_24_fu_3561_p2}, {3'd0}};

assign p_shl2_cast_fu_1480_p3 = {{add_ln29_2_fu_1475_p2}, {3'd0}};

assign p_shl4_cast_fu_1668_p3 = {{add_ln29_4_fu_1663_p2}, {3'd0}};

assign p_shl6_cast_fu_1858_p3 = {{add_ln29_6_fu_1853_p2}, {3'd0}};

assign p_shl8_cast_fu_2046_p3 = {{add_ln29_8_fu_2041_p2}, {3'd0}};

assign p_shl_cast_fu_1294_p3 = {{add_ln29_fu_1289_p2}, {3'd0}};

assign r_fu_1026_p2 = (r_0_reg_338 + 4'd1);

assign select_ln29_10_fu_3304_p3 = ((and_ln29_21_fu_3298_p2[0:0] === 1'b1) ? reg_989 : max_1_10_reg_854);

assign select_ln29_11_fu_3494_p3 = ((and_ln29_23_fu_3488_p2[0:0] === 1'b1) ? reg_989 : max_1_11_reg_901);

assign select_ln29_12_fu_3686_p3 = ((and_ln29_25_fu_3680_p2[0:0] === 1'b1) ? reg_989 : max_1_12_reg_948);

assign select_ln29_1_fu_1600_p3 = ((and_ln29_3_fu_1594_p2[0:0] === 1'b1) ? reg_989 : max_1_1_reg_431);

assign select_ln29_2_fu_1788_p3 = ((and_ln29_5_fu_1782_p2[0:0] === 1'b1) ? reg_989 : max_1_2_reg_478);

assign select_ln29_3_fu_1978_p3 = ((and_ln29_7_fu_1972_p2[0:0] === 1'b1) ? reg_989 : max_1_3_reg_525);

assign select_ln29_4_fu_2166_p3 = ((and_ln29_9_fu_2160_p2[0:0] === 1'b1) ? reg_989 : max_1_4_reg_572);

assign select_ln29_5_fu_2356_p3 = ((and_ln29_11_fu_2350_p2[0:0] === 1'b1) ? reg_989 : max_1_5_reg_619);

assign select_ln29_6_fu_2548_p3 = ((and_ln29_13_fu_2542_p2[0:0] === 1'b1) ? reg_989 : max_1_6_reg_666);

assign select_ln29_7_fu_2738_p3 = ((and_ln29_15_fu_2732_p2[0:0] === 1'b1) ? reg_989 : max_1_7_reg_713);

assign select_ln29_8_fu_2926_p3 = ((and_ln29_17_fu_2920_p2[0:0] === 1'b1) ? reg_989 : max_1_8_reg_760);

assign select_ln29_9_fu_3116_p3 = ((and_ln29_19_fu_3110_p2[0:0] === 1'b1) ? reg_989 : max_1_9_reg_807);

assign select_ln29_fu_1414_p3 = ((and_ln29_1_fu_1408_p2[0:0] === 1'b1) ? reg_989 : max_1_0_reg_384);

assign sext_ln27_1_fu_2415_p1 = $signed(or_ln27_2_fu_2407_p3);

assign sext_ln27_2_fu_2605_p1 = $signed(xor_ln27_2_fu_2599_p2);

assign sext_ln27_3_fu_3553_p1 = $signed(or_ln27_5_fu_3545_p3);

assign sext_ln27_fu_1845_p1 = $signed(xor_ln27_1_fu_1839_p2);

assign shl_ln_fu_1032_p3 = {{r_0_reg_338}, {1'd0}};

assign sub_ln29_10_fu_3204_p2 = (p_shl20_cast_fu_3184_p3 - zext_ln29_43_fu_3200_p1);

assign sub_ln29_11_fu_3394_p2 = (p_shl22_cast_fu_3374_p3 - zext_ln29_47_fu_3390_p1);

assign sub_ln29_12_fu_3586_p2 = (p_shl24_cast_fu_3566_p3 - zext_ln29_50_fu_3582_p1);

assign sub_ln29_1_fu_1500_p2 = (p_shl2_cast_fu_1480_p3 - zext_ln29_7_fu_1496_p1);

assign sub_ln29_2_fu_1688_p2 = (p_shl4_cast_fu_1668_p3 - zext_ln29_11_fu_1684_p1);

assign sub_ln29_3_fu_1878_p2 = (p_shl6_cast_fu_1858_p3 - zext_ln29_15_fu_1874_p1);

assign sub_ln29_4_fu_2066_p2 = (p_shl8_cast_fu_2046_p3 - zext_ln29_19_fu_2062_p1);

assign sub_ln29_5_fu_2256_p2 = (p_shl10_cast_fu_2236_p3 - zext_ln29_23_fu_2252_p1);

assign sub_ln29_6_fu_2448_p2 = (p_shl12_cast_fu_2428_p3 - zext_ln29_27_fu_2444_p1);

assign sub_ln29_7_fu_2638_p2 = (p_shl14_cast_fu_2618_p3 - zext_ln29_31_fu_2634_p1);

assign sub_ln29_8_fu_2826_p2 = (p_shl16_cast_fu_2806_p3 - zext_ln29_35_fu_2822_p1);

assign sub_ln29_9_fu_3016_p2 = (p_shl18_cast_fu_2996_p3 - zext_ln29_39_fu_3012_p1);

assign sub_ln29_fu_1314_p2 = (p_shl_cast_fu_1294_p3 - zext_ln29_3_fu_1310_p1);

assign tmp_10_fu_1520_p4 = {{bitcast_ln29_2_fu_1516_p1[30:23]}};

assign tmp_11_fu_1538_p4 = {{bitcast_ln29_3_fu_1534_p1[30:23]}};

assign tmp_15_fu_1708_p4 = {{bitcast_ln29_4_fu_1704_p1[30:23]}};

assign tmp_16_fu_1726_p4 = {{bitcast_ln29_5_fu_1722_p1[30:23]}};

assign tmp_20_fu_1898_p4 = {{bitcast_ln29_6_fu_1894_p1[30:23]}};

assign tmp_21_fu_1916_p4 = {{bitcast_ln29_7_fu_1912_p1[30:23]}};

assign tmp_38_fu_2086_p4 = {{bitcast_ln29_8_fu_2082_p1[30:23]}};

assign tmp_39_fu_2104_p4 = {{bitcast_ln29_9_fu_2100_p1[30:23]}};

assign tmp_41_fu_2276_p4 = {{bitcast_ln29_10_fu_2272_p1[30:23]}};

assign tmp_42_fu_2294_p4 = {{bitcast_ln29_11_fu_2290_p1[30:23]}};

assign tmp_44_fu_2468_p4 = {{bitcast_ln29_12_fu_2464_p1[30:23]}};

assign tmp_45_fu_2486_p4 = {{bitcast_ln29_13_fu_2482_p1[30:23]}};

assign tmp_47_fu_2658_p4 = {{bitcast_ln29_14_fu_2654_p1[30:23]}};

assign tmp_48_fu_2676_p4 = {{bitcast_ln29_15_fu_2672_p1[30:23]}};

assign tmp_50_fu_2846_p4 = {{bitcast_ln29_16_fu_2842_p1[30:23]}};

assign tmp_51_fu_2864_p4 = {{bitcast_ln29_17_fu_2860_p1[30:23]}};

assign tmp_53_fu_3036_p4 = {{bitcast_ln29_18_fu_3032_p1[30:23]}};

assign tmp_54_fu_3054_p4 = {{bitcast_ln29_19_fu_3050_p1[30:23]}};

assign tmp_56_fu_3224_p4 = {{bitcast_ln29_20_fu_3220_p1[30:23]}};

assign tmp_57_fu_3242_p4 = {{bitcast_ln29_21_fu_3238_p1[30:23]}};

assign tmp_59_fu_3414_p4 = {{bitcast_ln29_22_fu_3410_p1[30:23]}};

assign tmp_5_fu_1334_p4 = {{bitcast_ln29_fu_1330_p1[30:23]}};

assign tmp_60_fu_3432_p4 = {{bitcast_ln29_23_fu_3428_p1[30:23]}};

assign tmp_62_fu_3606_p4 = {{bitcast_ln29_24_fu_3602_p1[30:23]}};

assign tmp_63_fu_3624_p4 = {{bitcast_ln29_25_fu_3620_p1[30:23]}};

assign tmp_65_fu_1302_p3 = {{add_ln29_fu_1289_p2}, {1'd0}};

assign tmp_66_fu_1488_p3 = {{add_ln29_2_fu_1475_p2}, {1'd0}};

assign tmp_67_fu_1676_p3 = {{add_ln29_4_fu_1663_p2}, {1'd0}};

assign tmp_68_fu_1866_p3 = {{add_ln29_6_fu_1853_p2}, {1'd0}};

assign tmp_69_fu_2054_p3 = {{add_ln29_8_fu_2041_p2}, {1'd0}};

assign tmp_6_fu_1352_p4 = {{bitcast_ln29_1_fu_1348_p1[30:23]}};

assign tmp_70_fu_2244_p3 = {{add_ln29_10_fu_2231_p2}, {1'd0}};

assign tmp_71_fu_2436_p3 = {{add_ln29_12_fu_2423_p2}, {1'd0}};

assign tmp_72_fu_2626_p3 = {{add_ln29_14_fu_2613_p2}, {1'd0}};

assign tmp_73_fu_2814_p3 = {{add_ln29_16_fu_2801_p2}, {1'd0}};

assign tmp_74_fu_3004_p3 = {{add_ln29_18_fu_2991_p2}, {1'd0}};

assign tmp_75_fu_3192_p3 = {{add_ln29_20_fu_3179_p2}, {1'd0}};

assign tmp_76_fu_3382_p3 = {{add_ln29_22_fu_3369_p2}, {1'd0}};

assign tmp_77_fu_3574_p3 = {{add_ln29_24_fu_3561_p2}, {1'd0}};

assign trunc_ln29_10_fu_2286_p1 = bitcast_ln29_10_fu_2272_p1[22:0];

assign trunc_ln29_11_fu_2304_p1 = bitcast_ln29_11_fu_2290_p1[22:0];

assign trunc_ln29_12_fu_2478_p1 = bitcast_ln29_12_fu_2464_p1[22:0];

assign trunc_ln29_13_fu_2496_p1 = bitcast_ln29_13_fu_2482_p1[22:0];

assign trunc_ln29_14_fu_2668_p1 = bitcast_ln29_14_fu_2654_p1[22:0];

assign trunc_ln29_15_fu_2686_p1 = bitcast_ln29_15_fu_2672_p1[22:0];

assign trunc_ln29_16_fu_2856_p1 = bitcast_ln29_16_fu_2842_p1[22:0];

assign trunc_ln29_17_fu_2874_p1 = bitcast_ln29_17_fu_2860_p1[22:0];

assign trunc_ln29_18_fu_3046_p1 = bitcast_ln29_18_fu_3032_p1[22:0];

assign trunc_ln29_19_fu_3064_p1 = bitcast_ln29_19_fu_3050_p1[22:0];

assign trunc_ln29_1_fu_1362_p1 = bitcast_ln29_1_fu_1348_p1[22:0];

assign trunc_ln29_20_fu_3234_p1 = bitcast_ln29_20_fu_3220_p1[22:0];

assign trunc_ln29_21_fu_3252_p1 = bitcast_ln29_21_fu_3238_p1[22:0];

assign trunc_ln29_22_fu_3424_p1 = bitcast_ln29_22_fu_3410_p1[22:0];

assign trunc_ln29_23_fu_3442_p1 = bitcast_ln29_23_fu_3428_p1[22:0];

assign trunc_ln29_24_fu_3616_p1 = bitcast_ln29_24_fu_3602_p1[22:0];

assign trunc_ln29_25_fu_3634_p1 = bitcast_ln29_25_fu_3620_p1[22:0];

assign trunc_ln29_2_fu_1530_p1 = bitcast_ln29_2_fu_1516_p1[22:0];

assign trunc_ln29_3_fu_1548_p1 = bitcast_ln29_3_fu_1534_p1[22:0];

assign trunc_ln29_4_fu_1718_p1 = bitcast_ln29_4_fu_1704_p1[22:0];

assign trunc_ln29_5_fu_1736_p1 = bitcast_ln29_5_fu_1722_p1[22:0];

assign trunc_ln29_6_fu_1908_p1 = bitcast_ln29_6_fu_1894_p1[22:0];

assign trunc_ln29_7_fu_1926_p1 = bitcast_ln29_7_fu_1912_p1[22:0];

assign trunc_ln29_8_fu_2096_p1 = bitcast_ln29_8_fu_2082_p1[22:0];

assign trunc_ln29_9_fu_2114_p1 = bitcast_ln29_9_fu_2100_p1[22:0];

assign trunc_ln29_fu_1344_p1 = bitcast_ln29_fu_1330_p1[22:0];

assign xor_ln27_1_fu_1839_p2 = (mpc_0_3_reg_537 ^ 2'd2);

assign xor_ln27_2_fu_2599_p2 = (mpc_0_7_reg_725 ^ 2'd2);

assign xor_ln27_fu_1465_p2 = (mpc_0_1_reg_443 ^ 2'd2);

assign zext_ln13_1_fu_1010_p1 = f_0_reg_327;

assign zext_ln13_fu_1006_p1 = f_0_reg_327;

assign zext_ln20_10_fu_3124_p1 = mpr_0_10_reg_843;

assign zext_ln20_11_fu_3312_p1 = mpr_0_11_reg_890;

assign zext_ln20_12_fu_3502_p1 = mpr_0_12_reg_937;

assign zext_ln20_1_fu_1422_p1 = mpr_0_1_reg_420;

assign zext_ln20_2_fu_1608_p1 = mpr_0_2_reg_467;

assign zext_ln20_3_fu_1796_p1 = mpr_0_3_reg_514;

assign zext_ln20_4_fu_1986_p1 = mpr_0_4_reg_561;

assign zext_ln20_5_fu_2174_p1 = mpr_0_5_reg_608;

assign zext_ln20_6_fu_2364_p1 = mpr_0_6_reg_655;

assign zext_ln20_7_fu_2556_p1 = mpr_0_7_reg_702;

assign zext_ln20_8_fu_2746_p1 = mpr_0_8_reg_749;

assign zext_ln20_9_fu_2934_p1 = mpr_0_9_reg_796;

assign zext_ln20_fu_1242_p1 = mpr_0_0_reg_373;

assign zext_ln23_1_fu_2965_p1 = mpc_0_9_reg_819;

assign zext_ln23_2_fu_3343_p1 = mpc_0_11_reg_913;

assign zext_ln23_fu_2205_p1 = mpc_0_5_reg_631;

assign zext_ln29_10_fu_1659_p1 = or_ln_fu_1651_p3;

assign zext_ln29_11_fu_1684_p1 = tmp_67_fu_1676_p3;

assign zext_ln29_12_fu_1699_p1 = add_ln29_5_fu_1694_p2;

assign zext_ln29_14_fu_1849_p1 = $unsigned(sext_ln27_fu_1845_p1);

assign zext_ln29_15_fu_1874_p1 = tmp_68_fu_1866_p3;

assign zext_ln29_16_fu_1889_p1 = add_ln29_7_fu_1884_p2;

assign zext_ln29_18_fu_2037_p1 = or_ln27_1_fu_2029_p3;

assign zext_ln29_19_fu_2062_p1 = tmp_69_fu_2054_p3;

assign zext_ln29_20_fu_2077_p1 = add_ln29_9_fu_2072_p2;

assign zext_ln29_22_fu_2227_p1 = add_ln27_fu_2221_p2;

assign zext_ln29_23_fu_2252_p1 = tmp_70_fu_2244_p3;

assign zext_ln29_24_fu_2267_p1 = add_ln29_11_fu_2262_p2;

assign zext_ln29_26_fu_2419_p1 = $unsigned(sext_ln27_1_fu_2415_p1);

assign zext_ln29_27_fu_2444_p1 = tmp_71_fu_2436_p3;

assign zext_ln29_28_fu_2459_p1 = add_ln29_13_fu_2454_p2;

assign zext_ln29_2_fu_1285_p1 = mpc_0_0_reg_396;

assign zext_ln29_30_fu_2609_p1 = $unsigned(sext_ln27_2_fu_2605_p1);

assign zext_ln29_31_fu_2634_p1 = tmp_72_fu_2626_p3;

assign zext_ln29_32_fu_2649_p1 = add_ln29_15_fu_2644_p2;

assign zext_ln29_34_fu_2797_p1 = or_ln27_3_fu_2789_p3;

assign zext_ln29_35_fu_2822_p1 = tmp_73_fu_2814_p3;

assign zext_ln29_36_fu_2837_p1 = add_ln29_17_fu_2832_p2;

assign zext_ln29_38_fu_2987_p1 = add_ln27_1_fu_2981_p2;

assign zext_ln29_39_fu_3012_p1 = tmp_74_fu_3004_p3;

assign zext_ln29_3_fu_1310_p1 = tmp_65_fu_1302_p3;

assign zext_ln29_40_fu_3027_p1 = add_ln29_19_fu_3022_p2;

assign zext_ln29_42_fu_3175_p1 = or_ln27_4_fu_3167_p3;

assign zext_ln29_43_fu_3200_p1 = tmp_75_fu_3192_p3;

assign zext_ln29_44_fu_3215_p1 = add_ln29_21_fu_3210_p2;

assign zext_ln29_46_fu_3365_p1 = add_ln27_2_fu_3359_p2;

assign zext_ln29_47_fu_3390_p1 = tmp_76_fu_3382_p3;

assign zext_ln29_48_fu_3405_p1 = add_ln29_23_fu_3400_p2;

assign zext_ln29_49_fu_3557_p1 = $unsigned(sext_ln27_3_fu_3553_p1);

assign zext_ln29_4_fu_1325_p1 = add_ln29_1_fu_1320_p2;

assign zext_ln29_50_fu_3582_p1 = tmp_77_fu_3574_p3;

assign zext_ln29_51_fu_3597_p1 = add_ln29_25_fu_3592_p2;

assign zext_ln29_6_fu_1471_p1 = xor_ln27_fu_1465_p2;

assign zext_ln29_7_fu_1496_p1 = tmp_66_fu_1488_p3;

assign zext_ln29_8_fu_1511_p1 = add_ln29_3_fu_1506_p2;

assign zext_ln36_10_fu_1205_p1 = add_ln36_20_fu_1200_p2;

assign zext_ln36_11_fu_1221_p1 = add_ln36_22_fu_1216_p2;

assign zext_ln36_12_fu_1237_p1 = add_ln36_24_fu_1232_p2;

assign zext_ln36_1_fu_1061_p1 = add_ln36_2_fu_1056_p2;

assign zext_ln36_2_fu_1077_p1 = add_ln36_4_fu_1072_p2;

assign zext_ln36_3_fu_1093_p1 = add_ln36_6_fu_1088_p2;

assign zext_ln36_4_fu_1109_p1 = add_ln36_8_fu_1104_p2;

assign zext_ln36_5_fu_1125_p1 = add_ln36_10_fu_1120_p2;

assign zext_ln36_6_fu_1141_p1 = add_ln36_12_fu_1136_p2;

assign zext_ln36_7_fu_1157_p1 = add_ln36_14_fu_1152_p2;

assign zext_ln36_8_fu_1173_p1 = add_ln36_16_fu_1168_p2;

assign zext_ln36_9_fu_1189_p1 = add_ln36_18_fu_1184_p2;

assign zext_ln36_fu_1045_p1 = add_ln36_fu_1040_p2;

always @ (posedge ap_clk) begin
    zext_ln13_reg_3702[12:3] <= 10'b0000000000;
    zext_ln13_1_reg_3719[9:3] <= 7'b0000000;
    shl_ln_reg_3749[0] <= 1'b0;
    mul_ln29_reg_3839[0] <= 1'b0;
    mul_ln29_1_reg_3870[0] <= 1'b0;
    mul_ln29_2_reg_3901[0] <= 1'b0;
    mul_ln29_3_reg_3932[0] <= 1'b0;
    mul_ln29_4_reg_3963[0] <= 1'b0;
    mul_ln29_5_reg_3994[0] <= 1'b0;
    mul_ln29_6_reg_4025[0] <= 1'b0;
    mul_ln29_7_reg_4056[0] <= 1'b0;
    mul_ln29_8_reg_4087[0] <= 1'b0;
    mul_ln29_9_reg_4118[0] <= 1'b0;
    mul_ln29_10_reg_4149[0] <= 1'b0;
    mul_ln29_11_reg_4180[0] <= 1'b0;
    mul_ln29_12_reg_4211[0] <= 1'b0;
end

endmodule //max_pool
