// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_HH_
#define _max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_fcmp_32nbkb.h"

namespace ap_rtl {

struct max_pool : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<10> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool(sc_module_name name);
    SC_HAS_PROCESS(max_pool);

    ~max_pool();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_fcmp_32nbkb<1,2,32,32,1>* max_pool_fcmp_32nbkb_U1;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_194;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > f_fu_205_p2;
    sc_signal< sc_lv<3> > f_reg_623;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > zext_ln13_fu_211_p1;
    sc_signal< sc_lv<13> > zext_ln13_reg_628;
    sc_signal< sc_lv<1> > icmp_ln10_fu_199_p2;
    sc_signal< sc_lv<11> > zext_ln13_1_fu_215_p1;
    sc_signal< sc_lv<11> > zext_ln13_1_reg_634;
    sc_signal< sc_lv<8> > add_ln13_fu_219_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_639;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_231_p2;
    sc_signal< sc_lv<4> > r_reg_647;
    sc_signal< sc_lv<5> > shl_ln_fu_237_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_652;
    sc_signal< sc_lv<1> > icmp_ln13_fu_225_p2;
    sc_signal< sc_lv<4> > c_fu_251_p2;
    sc_signal< sc_lv<4> > c_reg_660;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > zext_ln27_fu_265_p1;
    sc_signal< sc_lv<10> > zext_ln27_reg_665;
    sc_signal< sc_lv<1> > icmp_ln16_fu_245_p2;
    sc_signal< sc_lv<10> > zext_ln20_1_fu_275_p1;
    sc_signal< sc_lv<10> > zext_ln20_1_reg_670;
    sc_signal< sc_lv<2> > mpr_fu_289_p2;
    sc_signal< sc_lv<2> > mpr_reg_678;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln20_fu_283_p2;
    sc_signal< sc_lv<13> > add_ln29_3_fu_382_p2;
    sc_signal< sc_lv<13> > add_ln29_3_reg_688;
    sc_signal< sc_lv<32> > select_ln29_fu_521_p3;
    sc_signal< sc_lv<32> > select_ln29_reg_698;
    sc_signal< sc_lv<32> > select_ln29_1_fu_613_p3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > f_0_reg_118;
    sc_signal< sc_lv<4> > r_0_reg_129;
    sc_signal< sc_lv<8> > phi_mul_reg_140;
    sc_signal< sc_lv<4> > c_0_reg_152;
    sc_signal< sc_lv<32> > max_0_reg_164;
    sc_signal< sc_lv<2> > mpr_0_reg_177;
    sc_signal< sc_lv<64> > zext_ln29_2_fu_346_p1;
    sc_signal< sc_lv<64> > zext_ln36_2_fu_428_p1;
    sc_signal< sc_lv<64> > zext_ln29_4_fu_433_p1;
    sc_signal< sc_lv<32> > grp_fu_188_p1;
    sc_signal< sc_lv<5> > shl_ln1_fu_257_p3;
    sc_signal< sc_lv<5> > or_ln27_fu_269_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_279_p1;
    sc_signal< sc_lv<5> > i_fu_295_p2;
    sc_signal< sc_lv<5> > mul_ln29_fu_304_p1;
    sc_signal< sc_lv<10> > mul_ln29_fu_304_p2;
    sc_signal< sc_lv<10> > add_ln29_fu_310_p2;
    sc_signal< sc_lv<11> > tmp_10_fu_323_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_315_p3;
    sc_signal< sc_lv<13> > zext_ln29_1_fu_331_p1;
    sc_signal< sc_lv<13> > sub_ln29_fu_335_p2;
    sc_signal< sc_lv<13> > add_ln29_1_fu_341_p2;
    sc_signal< sc_lv<10> > add_ln29_2_fu_351_p2;
    sc_signal< sc_lv<11> > tmp_11_fu_364_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_356_p3;
    sc_signal< sc_lv<13> > zext_ln29_3_fu_372_p1;
    sc_signal< sc_lv<13> > sub_ln29_1_fu_376_p2;
    sc_signal< sc_lv<8> > zext_ln36_fu_387_p1;
    sc_signal< sc_lv<8> > add_ln36_fu_391_p2;
    sc_signal< sc_lv<9> > tmp_9_fu_405_p3;
    sc_signal< sc_lv<11> > p_shl4_cast_fu_397_p3;
    sc_signal< sc_lv<11> > zext_ln36_1_fu_413_p1;
    sc_signal< sc_lv<11> > sub_ln36_fu_417_p2;
    sc_signal< sc_lv<11> > add_ln36_1_fu_423_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_437_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_1_fu_455_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_441_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_451_p1;
    sc_signal< sc_lv<1> > icmp_ln29_1_fu_479_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_473_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_459_p4;
    sc_signal< sc_lv<23> > trunc_ln29_1_fu_469_p1;
    sc_signal< sc_lv<1> > icmp_ln29_3_fu_497_p2;
    sc_signal< sc_lv<1> > icmp_ln29_2_fu_491_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_485_p2;
    sc_signal< sc_lv<1> > or_ln29_1_fu_503_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_509_p2;
    sc_signal< sc_lv<1> > grp_fu_188_p2;
    sc_signal< sc_lv<1> > and_ln29_1_fu_515_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_2_fu_530_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_3_fu_548_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_534_p4;
    sc_signal< sc_lv<23> > trunc_ln29_2_fu_544_p1;
    sc_signal< sc_lv<1> > icmp_ln29_5_fu_571_p2;
    sc_signal< sc_lv<1> > icmp_ln29_4_fu_565_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_551_p4;
    sc_signal< sc_lv<23> > trunc_ln29_3_fu_561_p1;
    sc_signal< sc_lv<1> > icmp_ln29_7_fu_589_p2;
    sc_signal< sc_lv<1> > icmp_ln29_6_fu_583_p2;
    sc_signal< sc_lv<1> > or_ln29_2_fu_577_p2;
    sc_signal< sc_lv<1> > or_ln29_3_fu_595_p2;
    sc_signal< sc_lv<1> > and_ln29_2_fu_601_p2;
    sc_signal< sc_lv<1> > and_ln29_3_fu_607_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln29_fu_304_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_219_p2();
    void thread_add_ln29_1_fu_341_p2();
    void thread_add_ln29_2_fu_351_p2();
    void thread_add_ln29_3_fu_382_p2();
    void thread_add_ln29_fu_310_p2();
    void thread_add_ln36_1_fu_423_p2();
    void thread_add_ln36_fu_391_p2();
    void thread_and_ln29_1_fu_515_p2();
    void thread_and_ln29_2_fu_601_p2();
    void thread_and_ln29_3_fu_607_p2();
    void thread_and_ln29_fu_509_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln29_1_fu_455_p1();
    void thread_bitcast_ln29_2_fu_530_p1();
    void thread_bitcast_ln29_3_fu_548_p1();
    void thread_bitcast_ln29_fu_437_p1();
    void thread_c_fu_251_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_205_p2();
    void thread_grp_fu_188_p1();
    void thread_i_fu_295_p2();
    void thread_icmp_ln10_fu_199_p2();
    void thread_icmp_ln13_fu_225_p2();
    void thread_icmp_ln16_fu_245_p2();
    void thread_icmp_ln20_fu_283_p2();
    void thread_icmp_ln29_1_fu_479_p2();
    void thread_icmp_ln29_2_fu_491_p2();
    void thread_icmp_ln29_3_fu_497_p2();
    void thread_icmp_ln29_4_fu_565_p2();
    void thread_icmp_ln29_5_fu_571_p2();
    void thread_icmp_ln29_6_fu_583_p2();
    void thread_icmp_ln29_7_fu_589_p2();
    void thread_icmp_ln29_fu_473_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpr_fu_289_p2();
    void thread_mul_ln29_fu_304_p1();
    void thread_mul_ln29_fu_304_p10();
    void thread_mul_ln29_fu_304_p2();
    void thread_or_ln27_fu_269_p2();
    void thread_or_ln29_1_fu_503_p2();
    void thread_or_ln29_2_fu_577_p2();
    void thread_or_ln29_3_fu_595_p2();
    void thread_or_ln29_fu_485_p2();
    void thread_p_shl2_cast_fu_315_p3();
    void thread_p_shl4_cast_fu_397_p3();
    void thread_p_shl_cast_fu_356_p3();
    void thread_r_fu_231_p2();
    void thread_select_ln29_1_fu_613_p3();
    void thread_select_ln29_fu_521_p3();
    void thread_shl_ln1_fu_257_p3();
    void thread_shl_ln_fu_237_p3();
    void thread_sub_ln29_1_fu_376_p2();
    void thread_sub_ln29_fu_335_p2();
    void thread_sub_ln36_fu_417_p2();
    void thread_tmp_10_fu_323_p3();
    void thread_tmp_11_fu_364_p3();
    void thread_tmp_1_fu_441_p4();
    void thread_tmp_4_fu_459_p4();
    void thread_tmp_6_fu_534_p4();
    void thread_tmp_7_fu_551_p4();
    void thread_tmp_9_fu_405_p3();
    void thread_trunc_ln29_1_fu_469_p1();
    void thread_trunc_ln29_2_fu_544_p1();
    void thread_trunc_ln29_3_fu_561_p1();
    void thread_trunc_ln29_fu_451_p1();
    void thread_zext_ln13_1_fu_215_p1();
    void thread_zext_ln13_fu_211_p1();
    void thread_zext_ln20_1_fu_275_p1();
    void thread_zext_ln20_fu_279_p1();
    void thread_zext_ln27_fu_265_p1();
    void thread_zext_ln29_1_fu_331_p1();
    void thread_zext_ln29_2_fu_346_p1();
    void thread_zext_ln29_3_fu_372_p1();
    void thread_zext_ln29_4_fu_433_p1();
    void thread_zext_ln36_1_fu_413_p1();
    void thread_zext_ln36_2_fu_428_p1();
    void thread_zext_ln36_fu_387_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
