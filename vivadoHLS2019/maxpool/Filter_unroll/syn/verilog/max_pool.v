// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.580250,HLS_SYN_LAT=18414,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=861,HLS_SYN_LUT=2824,HLS_VERSION=2019_1}" *)

module max_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_address0,
        conv_out_ce0,
        conv_out_q0,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_we0,
        max_pool_out_d0
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
input  [31:0] conv_out_q0;
output  [9:0] max_pool_out_address0;
output   max_pool_out_ce0;
output   max_pool_out_we0;
output  [31:0] max_pool_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_out_address0;
reg conv_out_ce0;
reg[9:0] max_pool_out_address0;
reg max_pool_out_ce0;
reg max_pool_out_we0;
reg[31:0] max_pool_out_d0;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_707;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state36;
wire   [7:0] add_ln13_6_fu_712_p2;
reg   [7:0] add_ln13_6_reg_2398;
wire    ap_CS_fsm_state2;
wire   [3:0] add_ln13_fu_724_p2;
reg   [3:0] add_ln13_reg_2406;
wire   [4:0] shl_ln_fu_730_p3;
reg   [4:0] shl_ln_reg_2411;
wire   [0:0] icmp_ln13_fu_718_p2;
wire   [3:0] add_ln16_fu_744_p2;
reg   [3:0] add_ln16_reg_2419;
wire    ap_CS_fsm_state3;
wire   [4:0] shl_ln1_fu_750_p3;
reg   [4:0] shl_ln1_reg_2424;
wire   [0:0] icmp_ln16_fu_738_p2;
wire   [1:0] add_ln20_fu_768_p2;
reg   [1:0] add_ln20_reg_2432;
wire    ap_CS_fsm_state4;
wire   [9:0] mul_ln29_fu_783_p2;
reg   [9:0] mul_ln29_reg_2437;
wire   [0:0] icmp_ln20_fu_762_p2;
wire   [1:0] add_ln23_fu_840_p2;
reg   [1:0] add_ln23_reg_2445;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln23_fu_834_p2;
wire   [31:0] select_ln29_fu_975_p3;
wire    ap_CS_fsm_state7;
wire   [7:0] add_ln13_7_fu_983_p2;
reg   [7:0] add_ln13_7_reg_2460;
wire    ap_CS_fsm_state8;
wire   [3:0] add_ln13_1_fu_995_p2;
reg   [3:0] add_ln13_1_reg_2468;
wire   [4:0] shl_ln26_1_fu_1001_p3;
reg   [4:0] shl_ln26_1_reg_2473;
wire   [0:0] icmp_ln13_1_fu_989_p2;
wire   [3:0] add_ln16_1_fu_1015_p2;
reg   [3:0] add_ln16_1_reg_2481;
wire    ap_CS_fsm_state9;
wire   [4:0] shl_ln27_1_fu_1021_p3;
reg   [4:0] shl_ln27_1_reg_2486;
wire   [0:0] icmp_ln16_1_fu_1009_p2;
wire   [1:0] add_ln20_1_fu_1039_p2;
reg   [1:0] add_ln20_1_reg_2494;
wire    ap_CS_fsm_state10;
wire   [9:0] mul_ln29_1_fu_1054_p2;
reg   [9:0] mul_ln29_1_reg_2499;
wire   [0:0] icmp_ln20_1_fu_1033_p2;
wire   [1:0] add_ln23_1_fu_1117_p2;
reg   [1:0] add_ln23_1_reg_2507;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln23_1_fu_1111_p2;
wire   [31:0] select_ln29_1_fu_1258_p3;
wire    ap_CS_fsm_state13;
wire   [7:0] add_ln13_8_fu_1266_p2;
reg   [7:0] add_ln13_8_reg_2522;
wire    ap_CS_fsm_state14;
wire   [3:0] add_ln13_2_fu_1278_p2;
reg   [3:0] add_ln13_2_reg_2530;
wire   [4:0] shl_ln26_2_fu_1284_p3;
reg   [4:0] shl_ln26_2_reg_2535;
wire   [0:0] icmp_ln13_2_fu_1272_p2;
wire   [3:0] add_ln16_2_fu_1298_p2;
reg   [3:0] add_ln16_2_reg_2543;
wire    ap_CS_fsm_state15;
wire   [4:0] shl_ln27_2_fu_1304_p3;
reg   [4:0] shl_ln27_2_reg_2548;
wire   [0:0] icmp_ln16_2_fu_1292_p2;
wire   [1:0] add_ln20_2_fu_1322_p2;
reg   [1:0] add_ln20_2_reg_2556;
wire    ap_CS_fsm_state16;
wire   [9:0] mul_ln29_2_fu_1337_p2;
reg   [9:0] mul_ln29_2_reg_2561;
wire   [0:0] icmp_ln20_2_fu_1316_p2;
wire   [1:0] add_ln23_2_fu_1400_p2;
reg   [1:0] add_ln23_2_reg_2569;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln23_2_fu_1394_p2;
wire   [31:0] select_ln29_2_fu_1541_p3;
wire    ap_CS_fsm_state19;
wire   [7:0] add_ln13_9_fu_1549_p2;
reg   [7:0] add_ln13_9_reg_2584;
wire    ap_CS_fsm_state20;
wire   [3:0] add_ln13_3_fu_1561_p2;
reg   [3:0] add_ln13_3_reg_2592;
wire   [4:0] shl_ln26_3_fu_1567_p3;
reg   [4:0] shl_ln26_3_reg_2597;
wire   [0:0] icmp_ln13_3_fu_1555_p2;
wire   [3:0] add_ln16_3_fu_1581_p2;
reg   [3:0] add_ln16_3_reg_2605;
wire    ap_CS_fsm_state21;
wire   [4:0] shl_ln27_3_fu_1587_p3;
reg   [4:0] shl_ln27_3_reg_2610;
wire   [0:0] icmp_ln16_3_fu_1575_p2;
wire   [1:0] add_ln20_3_fu_1605_p2;
reg   [1:0] add_ln20_3_reg_2618;
wire    ap_CS_fsm_state22;
wire   [9:0] mul_ln29_3_fu_1620_p2;
reg   [9:0] mul_ln29_3_reg_2623;
wire   [0:0] icmp_ln20_3_fu_1599_p2;
wire   [1:0] add_ln23_3_fu_1683_p2;
reg   [1:0] add_ln23_3_reg_2631;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln23_3_fu_1677_p2;
wire   [31:0] select_ln29_3_fu_1824_p3;
wire    ap_CS_fsm_state25;
wire   [7:0] add_ln13_10_fu_1832_p2;
reg   [7:0] add_ln13_10_reg_2646;
wire    ap_CS_fsm_state26;
wire   [3:0] add_ln13_4_fu_1844_p2;
reg   [3:0] add_ln13_4_reg_2654;
wire   [4:0] shl_ln26_4_fu_1850_p3;
reg   [4:0] shl_ln26_4_reg_2659;
wire   [0:0] icmp_ln13_4_fu_1838_p2;
wire   [3:0] add_ln16_4_fu_1864_p2;
reg   [3:0] add_ln16_4_reg_2667;
wire    ap_CS_fsm_state27;
wire   [4:0] shl_ln27_4_fu_1870_p3;
reg   [4:0] shl_ln27_4_reg_2672;
wire   [0:0] icmp_ln16_4_fu_1858_p2;
wire   [1:0] add_ln20_4_fu_1888_p2;
reg   [1:0] add_ln20_4_reg_2680;
wire    ap_CS_fsm_state28;
wire   [9:0] mul_ln29_4_fu_1903_p2;
reg   [9:0] mul_ln29_4_reg_2685;
wire   [0:0] icmp_ln20_4_fu_1882_p2;
wire   [1:0] add_ln23_4_fu_1966_p2;
reg   [1:0] add_ln23_4_reg_2693;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln23_4_fu_1960_p2;
wire   [31:0] select_ln29_4_fu_2107_p3;
wire    ap_CS_fsm_state31;
wire   [7:0] add_ln13_11_fu_2115_p2;
reg   [7:0] add_ln13_11_reg_2708;
wire    ap_CS_fsm_state32;
wire   [3:0] add_ln13_5_fu_2127_p2;
reg   [3:0] add_ln13_5_reg_2716;
wire   [4:0] shl_ln26_5_fu_2133_p3;
reg   [4:0] shl_ln26_5_reg_2721;
wire   [0:0] icmp_ln13_5_fu_2121_p2;
wire   [3:0] add_ln16_5_fu_2147_p2;
reg   [3:0] add_ln16_5_reg_2729;
wire    ap_CS_fsm_state33;
wire   [4:0] shl_ln27_5_fu_2153_p3;
reg   [4:0] shl_ln27_5_reg_2734;
wire   [0:0] icmp_ln16_5_fu_2141_p2;
wire   [1:0] add_ln20_5_fu_2171_p2;
reg   [1:0] add_ln20_5_reg_2742;
wire    ap_CS_fsm_state34;
wire   [9:0] mul_ln29_5_fu_2186_p2;
reg   [9:0] mul_ln29_5_reg_2747;
wire   [0:0] icmp_ln20_5_fu_2165_p2;
wire   [1:0] add_ln23_5_fu_2249_p2;
reg   [1:0] add_ln23_5_reg_2755;
wire    ap_CS_fsm_state35;
wire   [0:0] icmp_ln23_5_fu_2243_p2;
wire   [31:0] select_ln29_5_fu_2390_p3;
wire    ap_CS_fsm_state37;
reg   [3:0] r_0_0_reg_204;
reg   [7:0] phi_mul_reg_215;
reg   [3:0] c_0_0_reg_227;
reg   [31:0] max_0_0_reg_239;
reg   [1:0] mpr_0_0_reg_252;
reg   [31:0] max_1_0_reg_263;
reg   [1:0] mpc_0_0_reg_275;
reg   [3:0] r_0_1_reg_286;
reg   [7:0] phi_mul24_reg_297;
reg   [3:0] c_0_1_reg_309;
reg   [31:0] max_0_1_reg_321;
reg   [1:0] mpr_0_1_reg_334;
reg   [31:0] max_1_1_reg_345;
reg   [1:0] mpc_0_1_reg_357;
reg   [3:0] r_0_2_reg_368;
reg   [7:0] phi_mul26_reg_379;
reg   [3:0] c_0_2_reg_391;
reg   [31:0] max_0_2_reg_403;
reg   [1:0] mpr_0_2_reg_416;
reg   [31:0] max_1_2_reg_427;
reg   [1:0] mpc_0_2_reg_439;
reg   [3:0] r_0_3_reg_450;
reg   [7:0] phi_mul28_reg_461;
reg   [3:0] c_0_3_reg_473;
reg   [31:0] max_0_3_reg_485;
reg   [1:0] mpr_0_3_reg_498;
reg   [31:0] max_1_3_reg_509;
reg   [1:0] mpc_0_3_reg_521;
reg   [3:0] r_0_4_reg_532;
reg   [7:0] phi_mul30_reg_543;
reg   [3:0] c_0_4_reg_555;
reg   [31:0] max_0_4_reg_567;
reg   [1:0] mpr_0_4_reg_580;
reg   [31:0] max_1_4_reg_591;
reg   [1:0] mpc_0_4_reg_603;
reg   [3:0] r_0_5_reg_614;
reg   [7:0] phi_mul32_reg_625;
reg   [3:0] c_0_5_reg_637;
reg   [31:0] max_0_5_reg_649;
reg   [1:0] mpr_0_5_reg_662;
reg   [31:0] max_1_5_reg_673;
reg   [1:0] mpc_0_5_reg_685;
wire   [63:0] zext_ln36_2_fu_825_p1;
wire   [63:0] zext_ln29_4_fu_886_p1;
wire   [63:0] zext_ln36_5_fu_1102_p1;
wire   [63:0] zext_ln29_8_fu_1169_p1;
wire   [63:0] zext_ln36_8_fu_1385_p1;
wire   [63:0] zext_ln29_12_fu_1452_p1;
wire   [63:0] zext_ln36_11_fu_1668_p1;
wire   [63:0] zext_ln29_16_fu_1735_p1;
wire   [63:0] zext_ln36_14_fu_1951_p1;
wire   [63:0] zext_ln29_20_fu_2018_p1;
wire   [63:0] zext_ln36_17_fu_2234_p1;
wire   [63:0] zext_ln29_23_fu_2301_p1;
reg   [31:0] grp_fu_696_p1;
wire   [4:0] zext_ln20_fu_758_p1;
wire   [4:0] add_ln26_fu_774_p2;
wire   [4:0] mul_ln29_fu_783_p0;
wire   [7:0] zext_ln36_fu_789_p1;
wire   [7:0] add_ln36_fu_793_p2;
wire   [8:0] tmp_41_fu_807_p3;
wire   [10:0] p_shl_cast_fu_799_p3;
wire   [10:0] zext_ln36_1_fu_815_p1;
wire   [10:0] sub_ln36_fu_819_p2;
wire   [4:0] zext_ln23_fu_830_p1;
wire   [4:0] add_ln27_fu_846_p2;
wire   [9:0] zext_ln29_2_fu_851_p1;
wire   [9:0] add_ln29_fu_855_p2;
wire   [10:0] tmp_43_fu_868_p3;
wire   [12:0] p_shl2_cast_fu_860_p3;
wire   [12:0] zext_ln29_3_fu_876_p1;
wire   [12:0] sub_ln29_fu_880_p2;
wire   [31:0] bitcast_ln29_fu_891_p1;
wire   [31:0] bitcast_ln29_1_fu_909_p1;
wire   [7:0] tmp_13_fu_895_p4;
wire   [22:0] trunc_ln29_fu_905_p1;
wire   [0:0] icmp_ln29_1_fu_933_p2;
wire   [0:0] icmp_ln29_fu_927_p2;
wire   [7:0] tmp_14_fu_913_p4;
wire   [22:0] trunc_ln29_1_fu_923_p1;
wire   [0:0] icmp_ln29_3_fu_951_p2;
wire   [0:0] icmp_ln29_2_fu_945_p2;
wire   [0:0] or_ln29_fu_939_p2;
wire   [0:0] or_ln29_1_fu_957_p2;
wire   [0:0] and_ln29_fu_963_p2;
wire   [0:0] grp_fu_696_p2;
wire   [0:0] and_ln29_1_fu_969_p2;
wire   [4:0] zext_ln20_1_fu_1029_p1;
wire   [4:0] add_ln26_1_fu_1045_p2;
wire   [4:0] mul_ln29_1_fu_1054_p0;
wire   [7:0] zext_ln36_3_fu_1060_p1;
wire   [7:0] add_ln36_1_fu_1064_p2;
wire   [8:0] tmp_42_fu_1078_p3;
wire   [10:0] p_shl4_cast_fu_1070_p3;
wire   [10:0] zext_ln36_4_fu_1086_p1;
wire   [10:0] sub_ln36_1_fu_1090_p2;
wire   [10:0] or_ln36_fu_1096_p2;
wire   [4:0] zext_ln23_1_fu_1107_p1;
wire   [4:0] add_ln27_1_fu_1123_p2;
wire   [9:0] zext_ln29_6_fu_1128_p1;
wire   [9:0] add_ln29_1_fu_1132_p2;
wire   [10:0] tmp_45_fu_1145_p3;
wire   [12:0] p_shl6_cast_fu_1137_p3;
wire   [12:0] zext_ln29_7_fu_1153_p1;
wire   [12:0] sub_ln29_1_fu_1157_p2;
wire   [12:0] or_ln29_12_fu_1163_p2;
wire   [31:0] bitcast_ln29_2_fu_1174_p1;
wire   [31:0] bitcast_ln29_3_fu_1192_p1;
wire   [7:0] tmp_20_fu_1178_p4;
wire   [22:0] trunc_ln29_2_fu_1188_p1;
wire   [0:0] icmp_ln29_5_fu_1216_p2;
wire   [0:0] icmp_ln29_4_fu_1210_p2;
wire   [7:0] tmp_21_fu_1196_p4;
wire   [22:0] trunc_ln29_3_fu_1206_p1;
wire   [0:0] icmp_ln29_7_fu_1234_p2;
wire   [0:0] icmp_ln29_6_fu_1228_p2;
wire   [0:0] or_ln29_2_fu_1222_p2;
wire   [0:0] or_ln29_3_fu_1240_p2;
wire   [0:0] and_ln29_2_fu_1246_p2;
wire   [0:0] and_ln29_3_fu_1252_p2;
wire   [4:0] zext_ln20_2_fu_1312_p1;
wire   [4:0] add_ln26_2_fu_1328_p2;
wire   [4:0] mul_ln29_2_fu_1337_p0;
wire   [7:0] zext_ln36_6_fu_1343_p1;
wire   [7:0] add_ln36_2_fu_1347_p2;
wire   [8:0] tmp_44_fu_1361_p3;
wire   [10:0] p_shl8_cast_fu_1353_p3;
wire   [10:0] zext_ln36_7_fu_1369_p1;
wire   [10:0] sub_ln36_2_fu_1373_p2;
wire   [10:0] add_ln36_3_fu_1379_p2;
wire   [4:0] zext_ln23_2_fu_1390_p1;
wire   [4:0] add_ln27_2_fu_1406_p2;
wire   [9:0] zext_ln29_10_fu_1411_p1;
wire   [9:0] add_ln29_2_fu_1415_p2;
wire   [10:0] tmp_47_fu_1428_p3;
wire   [12:0] p_shl10_cast_fu_1420_p3;
wire   [12:0] zext_ln29_11_fu_1436_p1;
wire   [12:0] sub_ln29_2_fu_1440_p2;
wire   [12:0] add_ln29_3_fu_1446_p2;
wire   [31:0] bitcast_ln29_4_fu_1457_p1;
wire   [31:0] bitcast_ln29_5_fu_1475_p1;
wire   [7:0] tmp_29_fu_1461_p4;
wire   [22:0] trunc_ln29_4_fu_1471_p1;
wire   [0:0] icmp_ln29_9_fu_1499_p2;
wire   [0:0] icmp_ln29_8_fu_1493_p2;
wire   [7:0] tmp_30_fu_1479_p4;
wire   [22:0] trunc_ln29_5_fu_1489_p1;
wire   [0:0] icmp_ln29_11_fu_1517_p2;
wire   [0:0] icmp_ln29_10_fu_1511_p2;
wire   [0:0] or_ln29_4_fu_1505_p2;
wire   [0:0] or_ln29_5_fu_1523_p2;
wire   [0:0] and_ln29_4_fu_1529_p2;
wire   [0:0] and_ln29_5_fu_1535_p2;
wire   [4:0] zext_ln20_3_fu_1595_p1;
wire   [4:0] add_ln26_3_fu_1611_p2;
wire   [4:0] mul_ln29_3_fu_1620_p0;
wire   [7:0] zext_ln36_9_fu_1626_p1;
wire   [7:0] add_ln36_4_fu_1630_p2;
wire   [8:0] tmp_46_fu_1644_p3;
wire   [10:0] p_shl12_cast_fu_1636_p3;
wire   [10:0] zext_ln36_10_fu_1652_p1;
wire   [10:0] sub_ln36_3_fu_1656_p2;
wire   [10:0] add_ln36_5_fu_1662_p2;
wire   [4:0] zext_ln23_3_fu_1673_p1;
wire   [4:0] add_ln27_3_fu_1689_p2;
wire   [9:0] zext_ln29_14_fu_1694_p1;
wire   [9:0] add_ln29_4_fu_1698_p2;
wire   [10:0] tmp_49_fu_1711_p3;
wire   [12:0] p_shl14_cast_fu_1703_p3;
wire   [12:0] zext_ln29_15_fu_1719_p1;
wire   [12:0] sub_ln29_3_fu_1723_p2;
wire   [12:0] add_ln29_5_fu_1729_p2;
wire   [31:0] bitcast_ln29_6_fu_1740_p1;
wire   [31:0] bitcast_ln29_7_fu_1758_p1;
wire   [7:0] tmp_32_fu_1744_p4;
wire   [22:0] trunc_ln29_6_fu_1754_p1;
wire   [0:0] icmp_ln29_13_fu_1782_p2;
wire   [0:0] icmp_ln29_12_fu_1776_p2;
wire   [7:0] tmp_33_fu_1762_p4;
wire   [22:0] trunc_ln29_7_fu_1772_p1;
wire   [0:0] icmp_ln29_15_fu_1800_p2;
wire   [0:0] icmp_ln29_14_fu_1794_p2;
wire   [0:0] or_ln29_6_fu_1788_p2;
wire   [0:0] or_ln29_7_fu_1806_p2;
wire   [0:0] and_ln29_6_fu_1812_p2;
wire   [0:0] and_ln29_7_fu_1818_p2;
wire   [4:0] zext_ln20_4_fu_1878_p1;
wire   [4:0] add_ln26_4_fu_1894_p2;
wire   [4:0] mul_ln29_4_fu_1903_p0;
wire   [7:0] zext_ln36_12_fu_1909_p1;
wire   [7:0] add_ln36_6_fu_1913_p2;
wire   [8:0] tmp_48_fu_1927_p3;
wire   [10:0] p_shl16_cast_fu_1919_p3;
wire   [10:0] zext_ln36_13_fu_1935_p1;
wire   [10:0] sub_ln36_4_fu_1939_p2;
wire   [10:0] add_ln36_7_fu_1945_p2;
wire   [4:0] zext_ln23_4_fu_1956_p1;
wire   [4:0] add_ln27_4_fu_1972_p2;
wire   [9:0] zext_ln29_18_fu_1977_p1;
wire   [9:0] add_ln29_6_fu_1981_p2;
wire   [10:0] tmp_51_fu_1994_p3;
wire   [12:0] p_shl18_cast_fu_1986_p3;
wire   [12:0] zext_ln29_19_fu_2002_p1;
wire   [12:0] sub_ln29_4_fu_2006_p2;
wire   [12:0] add_ln29_7_fu_2012_p2;
wire   [31:0] bitcast_ln29_8_fu_2023_p1;
wire   [31:0] bitcast_ln29_9_fu_2041_p1;
wire   [7:0] tmp_35_fu_2027_p4;
wire   [22:0] trunc_ln29_8_fu_2037_p1;
wire   [0:0] icmp_ln29_17_fu_2065_p2;
wire   [0:0] icmp_ln29_16_fu_2059_p2;
wire   [7:0] tmp_36_fu_2045_p4;
wire   [22:0] trunc_ln29_9_fu_2055_p1;
wire   [0:0] icmp_ln29_19_fu_2083_p2;
wire   [0:0] icmp_ln29_18_fu_2077_p2;
wire   [0:0] or_ln29_8_fu_2071_p2;
wire   [0:0] or_ln29_9_fu_2089_p2;
wire   [0:0] and_ln29_8_fu_2095_p2;
wire   [0:0] and_ln29_9_fu_2101_p2;
wire   [4:0] zext_ln20_5_fu_2161_p1;
wire   [4:0] add_ln26_5_fu_2177_p2;
wire   [4:0] mul_ln29_5_fu_2186_p0;
wire   [7:0] zext_ln36_15_fu_2192_p1;
wire   [7:0] add_ln36_8_fu_2196_p2;
wire   [8:0] tmp_50_fu_2210_p3;
wire   [10:0] p_shl20_cast_fu_2202_p3;
wire   [10:0] zext_ln36_16_fu_2218_p1;
wire   [10:0] sub_ln36_5_fu_2222_p2;
wire   [10:0] add_ln36_9_fu_2228_p2;
wire   [4:0] zext_ln23_5_fu_2239_p1;
wire   [4:0] add_ln27_5_fu_2255_p2;
wire   [9:0] zext_ln29_21_fu_2260_p1;
wire   [9:0] add_ln29_8_fu_2264_p2;
wire   [10:0] tmp_52_fu_2277_p3;
wire   [12:0] p_shl22_cast_fu_2269_p3;
wire   [12:0] zext_ln29_22_fu_2285_p1;
wire   [12:0] sub_ln29_5_fu_2289_p2;
wire   [12:0] add_ln29_9_fu_2295_p2;
wire   [31:0] bitcast_ln29_10_fu_2306_p1;
wire   [31:0] bitcast_ln29_11_fu_2324_p1;
wire   [7:0] tmp_38_fu_2310_p4;
wire   [22:0] trunc_ln29_10_fu_2320_p1;
wire   [0:0] icmp_ln29_21_fu_2348_p2;
wire   [0:0] icmp_ln29_20_fu_2342_p2;
wire   [7:0] tmp_39_fu_2328_p4;
wire   [22:0] trunc_ln29_11_fu_2338_p1;
wire   [0:0] icmp_ln29_23_fu_2366_p2;
wire   [0:0] icmp_ln29_22_fu_2360_p2;
wire   [0:0] or_ln29_10_fu_2354_p2;
wire   [0:0] or_ln29_11_fu_2372_p2;
wire   [0:0] and_ln29_10_fu_2378_p2;
wire   [0:0] and_ln29_11_fu_2384_p2;
reg   [36:0] ap_NS_fsm;
wire   [9:0] mul_ln29_1_fu_1054_p00;
wire   [9:0] mul_ln29_2_fu_1337_p00;
wire   [9:0] mul_ln29_3_fu_1620_p00;
wire   [9:0] mul_ln29_4_fu_1903_p00;
wire   [9:0] mul_ln29_5_fu_2186_p00;
wire   [9:0] mul_ln29_fu_783_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
end

max_pool_fcmp_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_fcmp_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_out_q0),
    .din1(grp_fu_696_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_696_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd1))) begin
        c_0_0_reg_227 <= add_ln16_reg_2419;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln13_fu_718_p2 == 1'd0))) begin
        c_0_0_reg_227 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd1))) begin
        c_0_1_reg_309 <= add_ln16_1_reg_2481;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln13_1_fu_989_p2 == 1'd0))) begin
        c_0_1_reg_309 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_2_fu_1316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        c_0_2_reg_391 <= add_ln16_2_reg_2543;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln13_2_fu_1272_p2 == 1'd0))) begin
        c_0_2_reg_391 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_3_fu_1599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        c_0_3_reg_473 <= add_ln16_3_reg_2605;
    end else if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln13_3_fu_1555_p2 == 1'd0))) begin
        c_0_3_reg_473 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_4_fu_1882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        c_0_4_reg_555 <= add_ln16_4_reg_2667;
    end else if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln13_4_fu_1838_p2 == 1'd0))) begin
        c_0_4_reg_555 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_5_fu_2165_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        c_0_5_reg_637 <= add_ln16_5_reg_2729;
    end else if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln13_5_fu_2121_p2 == 1'd0))) begin
        c_0_5_reg_637 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        max_0_0_reg_239 <= max_1_0_reg_263;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd0))) begin
        max_0_0_reg_239 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_1_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        max_0_1_reg_321 <= max_1_1_reg_345;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd0))) begin
        max_0_1_reg_321 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        max_0_2_reg_403 <= max_1_2_reg_427;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln16_2_fu_1292_p2 == 1'd0))) begin
        max_0_2_reg_403 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        max_0_3_reg_485 <= max_1_3_reg_509;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln16_3_fu_1575_p2 == 1'd0))) begin
        max_0_3_reg_485 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_1960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        max_0_4_reg_567 <= max_1_4_reg_591;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln16_4_fu_1858_p2 == 1'd0))) begin
        max_0_4_reg_567 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        max_0_5_reg_649 <= max_1_5_reg_673;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln16_5_fu_2141_p2 == 1'd0))) begin
        max_0_5_reg_649 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        max_1_0_reg_263 <= select_ln29_fu_975_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd0))) begin
        max_1_0_reg_263 <= max_0_0_reg_239;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        max_1_1_reg_345 <= select_ln29_1_fu_1258_p3;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd0))) begin
        max_1_1_reg_345 <= max_0_1_reg_321;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        max_1_2_reg_427 <= select_ln29_2_fu_1541_p3;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_2_fu_1316_p2 == 1'd0))) begin
        max_1_2_reg_427 <= max_0_2_reg_403;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        max_1_3_reg_509 <= select_ln29_3_fu_1824_p3;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln20_3_fu_1599_p2 == 1'd0))) begin
        max_1_3_reg_509 <= max_0_3_reg_485;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        max_1_4_reg_591 <= select_ln29_4_fu_2107_p3;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_4_fu_1882_p2 == 1'd0))) begin
        max_1_4_reg_591 <= max_0_4_reg_567;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        max_1_5_reg_673 <= select_ln29_5_fu_2390_p3;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln20_5_fu_2165_p2 == 1'd0))) begin
        max_1_5_reg_673 <= max_0_5_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mpc_0_0_reg_275 <= add_ln23_reg_2445;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd0))) begin
        mpc_0_0_reg_275 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mpc_0_1_reg_357 <= add_ln23_1_reg_2507;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd0))) begin
        mpc_0_1_reg_357 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        mpc_0_2_reg_439 <= add_ln23_2_reg_2569;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_2_fu_1316_p2 == 1'd0))) begin
        mpc_0_2_reg_439 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        mpc_0_3_reg_521 <= add_ln23_3_reg_2631;
    end else if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln20_3_fu_1599_p2 == 1'd0))) begin
        mpc_0_3_reg_521 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        mpc_0_4_reg_603 <= add_ln23_4_reg_2693;
    end else if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_4_fu_1882_p2 == 1'd0))) begin
        mpc_0_4_reg_603 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        mpc_0_5_reg_685 <= add_ln23_5_reg_2755;
    end else if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln20_5_fu_2165_p2 == 1'd0))) begin
        mpc_0_5_reg_685 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
        mpr_0_0_reg_252 <= add_ln20_reg_2432;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd0))) begin
        mpr_0_0_reg_252 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_1_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        mpr_0_1_reg_334 <= add_ln20_1_reg_2494;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd0))) begin
        mpr_0_1_reg_334 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        mpr_0_2_reg_416 <= add_ln20_2_reg_2556;
    end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln16_2_fu_1292_p2 == 1'd0))) begin
        mpr_0_2_reg_416 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        mpr_0_3_reg_498 <= add_ln20_3_reg_2618;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln16_3_fu_1575_p2 == 1'd0))) begin
        mpr_0_3_reg_498 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_1960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        mpr_0_4_reg_580 <= add_ln20_4_reg_2680;
    end else if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln16_4_fu_1858_p2 == 1'd0))) begin
        mpr_0_4_reg_580 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        mpr_0_5_reg_662 <= add_ln20_5_reg_2742;
    end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln16_5_fu_2141_p2 == 1'd0))) begin
        mpr_0_5_reg_662 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd1))) begin
        phi_mul24_reg_297 <= add_ln13_7_reg_2460;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln13_fu_718_p2 == 1'd1))) begin
        phi_mul24_reg_297 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_2_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        phi_mul26_reg_379 <= add_ln13_8_reg_2522;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln13_1_fu_989_p2 == 1'd1))) begin
        phi_mul26_reg_379 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_3_fu_1575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        phi_mul28_reg_461 <= add_ln13_9_reg_2584;
    end else if (((icmp_ln13_2_fu_1272_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        phi_mul28_reg_461 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_4_fu_1858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        phi_mul30_reg_543 <= add_ln13_10_reg_2646;
    end else if (((icmp_ln13_3_fu_1555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        phi_mul30_reg_543 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_5_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        phi_mul32_reg_625 <= add_ln13_11_reg_2708;
    end else if (((icmp_ln13_4_fu_1838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        phi_mul32_reg_625 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd1))) begin
        phi_mul_reg_215 <= add_ln13_6_reg_2398;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_215 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd1))) begin
        r_0_0_reg_204 <= add_ln13_reg_2406;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_0_0_reg_204 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd1))) begin
        r_0_1_reg_286 <= add_ln13_1_reg_2468;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln13_fu_718_p2 == 1'd1))) begin
        r_0_1_reg_286 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_2_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        r_0_2_reg_368 <= add_ln13_2_reg_2530;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln13_1_fu_989_p2 == 1'd1))) begin
        r_0_2_reg_368 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_3_fu_1575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        r_0_3_reg_450 <= add_ln13_3_reg_2592;
    end else if (((icmp_ln13_2_fu_1272_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        r_0_3_reg_450 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_4_fu_1858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        r_0_4_reg_532 <= add_ln13_4_reg_2654;
    end else if (((icmp_ln13_3_fu_1555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        r_0_4_reg_532 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_5_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        r_0_5_reg_614 <= add_ln13_5_reg_2716;
    end else if (((icmp_ln13_4_fu_1838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        r_0_5_reg_614 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln13_10_reg_2646 <= add_ln13_10_fu_1832_p2;
        add_ln13_4_reg_2654 <= add_ln13_4_fu_1844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln13_11_reg_2708 <= add_ln13_11_fu_2115_p2;
        add_ln13_5_reg_2716 <= add_ln13_5_fu_2127_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln13_1_reg_2468 <= add_ln13_1_fu_995_p2;
        add_ln13_7_reg_2460 <= add_ln13_7_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln13_2_reg_2530 <= add_ln13_2_fu_1278_p2;
        add_ln13_8_reg_2522 <= add_ln13_8_fu_1266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln13_3_reg_2592 <= add_ln13_3_fu_1561_p2;
        add_ln13_9_reg_2584 <= add_ln13_9_fu_1549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln13_6_reg_2398 <= add_ln13_6_fu_712_p2;
        add_ln13_reg_2406 <= add_ln13_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln16_1_reg_2481 <= add_ln16_1_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln16_2_reg_2543 <= add_ln16_2_fu_1298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln16_3_reg_2605 <= add_ln16_3_fu_1581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add_ln16_4_reg_2667 <= add_ln16_4_fu_1864_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln16_5_reg_2729 <= add_ln16_5_fu_2147_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln16_reg_2419 <= add_ln16_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln20_1_reg_2494 <= add_ln20_1_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln20_2_reg_2556 <= add_ln20_2_fu_1322_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln20_3_reg_2618 <= add_ln20_3_fu_1605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln20_4_reg_2680 <= add_ln20_4_fu_1888_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln20_5_reg_2742 <= add_ln20_5_fu_2171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln20_reg_2432 <= add_ln20_fu_768_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln23_1_reg_2507 <= add_ln23_1_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln23_2_reg_2569 <= add_ln23_2_fu_1400_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln23_3_reg_2631 <= add_ln23_3_fu_1683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln23_4_reg_2693 <= add_ln23_4_fu_1966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln23_5_reg_2755 <= add_ln23_5_fu_2249_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln23_reg_2445 <= add_ln23_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd0))) begin
        mul_ln29_1_reg_2499[9 : 1] <= mul_ln29_1_fu_1054_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln20_2_fu_1316_p2 == 1'd0))) begin
        mul_ln29_2_reg_2561[9 : 1] <= mul_ln29_2_fu_1337_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) & (icmp_ln20_3_fu_1599_p2 == 1'd0))) begin
        mul_ln29_3_reg_2623[9 : 1] <= mul_ln29_3_fu_1620_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln20_4_fu_1882_p2 == 1'd0))) begin
        mul_ln29_4_reg_2685[9 : 1] <= mul_ln29_4_fu_1903_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (icmp_ln20_5_fu_2165_p2 == 1'd0))) begin
        mul_ln29_5_reg_2747[9 : 1] <= mul_ln29_5_fu_2186_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd0))) begin
        mul_ln29_reg_2437[9 : 1] <= mul_ln29_fu_783_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state36))) begin
        reg_707 <= conv_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd0))) begin
        shl_ln1_reg_2424[4 : 1] <= shl_ln1_fu_750_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln13_1_fu_989_p2 == 1'd0))) begin
        shl_ln26_1_reg_2473[4 : 1] <= shl_ln26_1_fu_1001_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln13_2_fu_1272_p2 == 1'd0))) begin
        shl_ln26_2_reg_2535[4 : 1] <= shl_ln26_2_fu_1284_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln13_3_fu_1555_p2 == 1'd0))) begin
        shl_ln26_3_reg_2597[4 : 1] <= shl_ln26_3_fu_1567_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (icmp_ln13_4_fu_1838_p2 == 1'd0))) begin
        shl_ln26_4_reg_2659[4 : 1] <= shl_ln26_4_fu_1850_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) & (icmp_ln13_5_fu_2121_p2 == 1'd0))) begin
        shl_ln26_5_reg_2721[4 : 1] <= shl_ln26_5_fu_2133_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd0))) begin
        shl_ln27_1_reg_2486[4 : 1] <= shl_ln27_1_fu_1021_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln16_2_fu_1292_p2 == 1'd0))) begin
        shl_ln27_2_reg_2548[4 : 1] <= shl_ln27_2_fu_1304_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln16_3_fu_1575_p2 == 1'd0))) begin
        shl_ln27_3_reg_2610[4 : 1] <= shl_ln27_3_fu_1587_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (icmp_ln16_4_fu_1858_p2 == 1'd0))) begin
        shl_ln27_4_reg_2672[4 : 1] <= shl_ln27_4_fu_1870_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln16_5_fu_2141_p2 == 1'd0))) begin
        shl_ln27_5_reg_2734[4 : 1] <= shl_ln27_5_fu_2153_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln13_fu_718_p2 == 1'd0))) begin
        shl_ln_reg_2411[4 : 1] <= shl_ln_fu_730_p3[4 : 1];
    end
end

always @ (*) begin
    if (((icmp_ln13_5_fu_2121_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_5_fu_2121_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        conv_out_address0 = zext_ln29_23_fu_2301_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_out_address0 = zext_ln29_20_fu_2018_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv_out_address0 = zext_ln29_16_fu_1735_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv_out_address0 = zext_ln29_12_fu_1452_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_out_address0 = zext_ln29_8_fu_1169_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_out_address0 = zext_ln29_4_fu_886_p1;
    end else begin
        conv_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_696_p1 = max_1_5_reg_673;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_696_p1 = max_1_4_reg_591;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_696_p1 = max_1_3_reg_509;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_696_p1 = max_1_2_reg_427;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_696_p1 = max_1_1_reg_345;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_696_p1 = max_1_0_reg_263;
    end else begin
        grp_fu_696_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        max_pool_out_address0 = zext_ln36_17_fu_2234_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_out_address0 = zext_ln36_14_fu_1951_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        max_pool_out_address0 = zext_ln36_11_fu_1668_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_out_address0 = zext_ln36_8_fu_1385_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_out_address0 = zext_ln36_5_fu_1102_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_out_address0 = zext_ln36_2_fu_825_p1;
    end else begin
        max_pool_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state4))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        max_pool_out_d0 = max_0_5_reg_649;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_out_d0 = max_0_4_reg_567;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        max_pool_out_d0 = max_0_3_reg_485;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_out_d0 = max_0_2_reg_403;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_out_d0 = max_0_1_reg_321;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_out_d0 = max_0_0_reg_239;
    end else begin
        max_pool_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln20_5_fu_2165_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((icmp_ln20_4_fu_1882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln20_3_fu_1599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln20_2_fu_1316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd1)))) begin
        max_pool_out_we0 = 1'b1;
    end else begin
        max_pool_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln13_fu_718_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln16_fu_738_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_762_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_834_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln13_1_fu_989_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln16_1_fu_1009_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln20_1_fu_1033_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln23_1_fu_1111_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln13_2_fu_1272_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln16_2_fu_1292_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln20_2_fu_1316_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln23_2_fu_1394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln13_3_fu_1555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln16_3_fu_1575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln20_3_fu_1599_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln23_3_fu_1677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln13_4_fu_1838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln16_4_fu_1858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln20_4_fu_1882_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln23_4_fu_1960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln13_5_fu_2121_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln16_5_fu_2141_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln20_5_fu_2165_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln23_5_fu_2243_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_10_fu_1832_p2 = (phi_mul30_reg_543 + 8'd13);

assign add_ln13_11_fu_2115_p2 = (phi_mul32_reg_625 + 8'd13);

assign add_ln13_1_fu_995_p2 = (r_0_1_reg_286 + 4'd1);

assign add_ln13_2_fu_1278_p2 = (r_0_2_reg_368 + 4'd1);

assign add_ln13_3_fu_1561_p2 = (r_0_3_reg_450 + 4'd1);

assign add_ln13_4_fu_1844_p2 = (r_0_4_reg_532 + 4'd1);

assign add_ln13_5_fu_2127_p2 = (r_0_5_reg_614 + 4'd1);

assign add_ln13_6_fu_712_p2 = (phi_mul_reg_215 + 8'd13);

assign add_ln13_7_fu_983_p2 = (phi_mul24_reg_297 + 8'd13);

assign add_ln13_8_fu_1266_p2 = (phi_mul26_reg_379 + 8'd13);

assign add_ln13_9_fu_1549_p2 = (phi_mul28_reg_461 + 8'd13);

assign add_ln13_fu_724_p2 = (r_0_0_reg_204 + 4'd1);

assign add_ln16_1_fu_1015_p2 = (c_0_1_reg_309 + 4'd1);

assign add_ln16_2_fu_1298_p2 = (c_0_2_reg_391 + 4'd1);

assign add_ln16_3_fu_1581_p2 = (c_0_3_reg_473 + 4'd1);

assign add_ln16_4_fu_1864_p2 = (c_0_4_reg_555 + 4'd1);

assign add_ln16_5_fu_2147_p2 = (c_0_5_reg_637 + 4'd1);

assign add_ln16_fu_744_p2 = (c_0_0_reg_227 + 4'd1);

assign add_ln20_1_fu_1039_p2 = (mpr_0_1_reg_334 + 2'd1);

assign add_ln20_2_fu_1322_p2 = (mpr_0_2_reg_416 + 2'd1);

assign add_ln20_3_fu_1605_p2 = (mpr_0_3_reg_498 + 2'd1);

assign add_ln20_4_fu_1888_p2 = (mpr_0_4_reg_580 + 2'd1);

assign add_ln20_5_fu_2171_p2 = (mpr_0_5_reg_662 + 2'd1);

assign add_ln20_fu_768_p2 = (mpr_0_0_reg_252 + 2'd1);

assign add_ln23_1_fu_1117_p2 = (mpc_0_1_reg_357 + 2'd1);

assign add_ln23_2_fu_1400_p2 = (mpc_0_2_reg_439 + 2'd1);

assign add_ln23_3_fu_1683_p2 = (mpc_0_3_reg_521 + 2'd1);

assign add_ln23_4_fu_1966_p2 = (mpc_0_4_reg_603 + 2'd1);

assign add_ln23_5_fu_2249_p2 = (mpc_0_5_reg_685 + 2'd1);

assign add_ln23_fu_840_p2 = (mpc_0_0_reg_275 + 2'd1);

assign add_ln26_1_fu_1045_p2 = (zext_ln20_1_fu_1029_p1 + shl_ln26_1_reg_2473);

assign add_ln26_2_fu_1328_p2 = (zext_ln20_2_fu_1312_p1 + shl_ln26_2_reg_2535);

assign add_ln26_3_fu_1611_p2 = (zext_ln20_3_fu_1595_p1 + shl_ln26_3_reg_2597);

assign add_ln26_4_fu_1894_p2 = (zext_ln20_4_fu_1878_p1 + shl_ln26_4_reg_2659);

assign add_ln26_5_fu_2177_p2 = (zext_ln20_5_fu_2161_p1 + shl_ln26_5_reg_2721);

assign add_ln26_fu_774_p2 = (zext_ln20_fu_758_p1 + shl_ln_reg_2411);

assign add_ln27_1_fu_1123_p2 = (zext_ln23_1_fu_1107_p1 + shl_ln27_1_reg_2486);

assign add_ln27_2_fu_1406_p2 = (zext_ln23_2_fu_1390_p1 + shl_ln27_2_reg_2548);

assign add_ln27_3_fu_1689_p2 = (zext_ln23_3_fu_1673_p1 + shl_ln27_3_reg_2610);

assign add_ln27_4_fu_1972_p2 = (zext_ln23_4_fu_1956_p1 + shl_ln27_4_reg_2672);

assign add_ln27_5_fu_2255_p2 = (zext_ln23_5_fu_2239_p1 + shl_ln27_5_reg_2734);

assign add_ln27_fu_846_p2 = (zext_ln23_fu_830_p1 + shl_ln1_reg_2424);

assign add_ln29_1_fu_1132_p2 = (mul_ln29_1_reg_2499 + zext_ln29_6_fu_1128_p1);

assign add_ln29_2_fu_1415_p2 = (mul_ln29_2_reg_2561 + zext_ln29_10_fu_1411_p1);

assign add_ln29_3_fu_1446_p2 = (13'd2 + sub_ln29_2_fu_1440_p2);

assign add_ln29_4_fu_1698_p2 = (mul_ln29_3_reg_2623 + zext_ln29_14_fu_1694_p1);

assign add_ln29_5_fu_1729_p2 = (13'd3 + sub_ln29_3_fu_1723_p2);

assign add_ln29_6_fu_1981_p2 = (mul_ln29_4_reg_2685 + zext_ln29_18_fu_1977_p1);

assign add_ln29_7_fu_2012_p2 = (13'd4 + sub_ln29_4_fu_2006_p2);

assign add_ln29_8_fu_2264_p2 = (mul_ln29_5_reg_2747 + zext_ln29_21_fu_2260_p1);

assign add_ln29_9_fu_2295_p2 = (13'd5 + sub_ln29_5_fu_2289_p2);

assign add_ln29_fu_855_p2 = (mul_ln29_reg_2437 + zext_ln29_2_fu_851_p1);

assign add_ln36_1_fu_1064_p2 = (zext_ln36_3_fu_1060_p1 + phi_mul24_reg_297);

assign add_ln36_2_fu_1347_p2 = (zext_ln36_6_fu_1343_p1 + phi_mul26_reg_379);

assign add_ln36_3_fu_1379_p2 = (sub_ln36_2_fu_1373_p2 + 11'd2);

assign add_ln36_4_fu_1630_p2 = (zext_ln36_9_fu_1626_p1 + phi_mul28_reg_461);

assign add_ln36_5_fu_1662_p2 = (sub_ln36_3_fu_1656_p2 + 11'd3);

assign add_ln36_6_fu_1913_p2 = (zext_ln36_12_fu_1909_p1 + phi_mul30_reg_543);

assign add_ln36_7_fu_1945_p2 = (sub_ln36_4_fu_1939_p2 + 11'd4);

assign add_ln36_8_fu_2196_p2 = (zext_ln36_15_fu_2192_p1 + phi_mul32_reg_625);

assign add_ln36_9_fu_2228_p2 = (sub_ln36_5_fu_2222_p2 + 11'd5);

assign add_ln36_fu_793_p2 = (zext_ln36_fu_789_p1 + phi_mul_reg_215);

assign and_ln29_10_fu_2378_p2 = (or_ln29_11_fu_2372_p2 & or_ln29_10_fu_2354_p2);

assign and_ln29_11_fu_2384_p2 = (grp_fu_696_p2 & and_ln29_10_fu_2378_p2);

assign and_ln29_1_fu_969_p2 = (grp_fu_696_p2 & and_ln29_fu_963_p2);

assign and_ln29_2_fu_1246_p2 = (or_ln29_3_fu_1240_p2 & or_ln29_2_fu_1222_p2);

assign and_ln29_3_fu_1252_p2 = (grp_fu_696_p2 & and_ln29_2_fu_1246_p2);

assign and_ln29_4_fu_1529_p2 = (or_ln29_5_fu_1523_p2 & or_ln29_4_fu_1505_p2);

assign and_ln29_5_fu_1535_p2 = (grp_fu_696_p2 & and_ln29_4_fu_1529_p2);

assign and_ln29_6_fu_1812_p2 = (or_ln29_7_fu_1806_p2 & or_ln29_6_fu_1788_p2);

assign and_ln29_7_fu_1818_p2 = (grp_fu_696_p2 & and_ln29_6_fu_1812_p2);

assign and_ln29_8_fu_2095_p2 = (or_ln29_9_fu_2089_p2 & or_ln29_8_fu_2071_p2);

assign and_ln29_9_fu_2101_p2 = (grp_fu_696_p2 & and_ln29_8_fu_2095_p2);

assign and_ln29_fu_963_p2 = (or_ln29_fu_939_p2 & or_ln29_1_fu_957_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln29_10_fu_2306_p1 = reg_707;

assign bitcast_ln29_11_fu_2324_p1 = max_1_5_reg_673;

assign bitcast_ln29_1_fu_909_p1 = max_1_0_reg_263;

assign bitcast_ln29_2_fu_1174_p1 = reg_707;

assign bitcast_ln29_3_fu_1192_p1 = max_1_1_reg_345;

assign bitcast_ln29_4_fu_1457_p1 = reg_707;

assign bitcast_ln29_5_fu_1475_p1 = max_1_2_reg_427;

assign bitcast_ln29_6_fu_1740_p1 = reg_707;

assign bitcast_ln29_7_fu_1758_p1 = max_1_3_reg_509;

assign bitcast_ln29_8_fu_2023_p1 = reg_707;

assign bitcast_ln29_9_fu_2041_p1 = max_1_4_reg_591;

assign bitcast_ln29_fu_891_p1 = reg_707;

assign icmp_ln13_1_fu_989_p2 = ((r_0_1_reg_286 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln13_2_fu_1272_p2 = ((r_0_2_reg_368 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln13_3_fu_1555_p2 = ((r_0_3_reg_450 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln13_4_fu_1838_p2 = ((r_0_4_reg_532 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln13_5_fu_2121_p2 = ((r_0_5_reg_614 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_718_p2 = ((r_0_0_reg_204 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_1_fu_1009_p2 = ((c_0_1_reg_309 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_2_fu_1292_p2 = ((c_0_2_reg_391 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_3_fu_1575_p2 = ((c_0_3_reg_473 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_4_fu_1858_p2 = ((c_0_4_reg_555 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_5_fu_2141_p2 = ((c_0_5_reg_637 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_738_p2 = ((c_0_0_reg_227 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_1033_p2 = ((mpr_0_1_reg_334 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_2_fu_1316_p2 = ((mpr_0_2_reg_416 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_3_fu_1599_p2 = ((mpr_0_3_reg_498 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_4_fu_1882_p2 = ((mpr_0_4_reg_580 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_5_fu_2165_p2 = ((mpr_0_5_reg_662 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_762_p2 = ((mpr_0_0_reg_252 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_1111_p2 = ((mpc_0_1_reg_357 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_1394_p2 = ((mpc_0_2_reg_439 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_1677_p2 = ((mpc_0_3_reg_521 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_4_fu_1960_p2 = ((mpc_0_4_reg_603 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_5_fu_2243_p2 = ((mpc_0_5_reg_685 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_834_p2 = ((mpc_0_0_reg_275 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln29_10_fu_1511_p2 = ((tmp_30_fu_1479_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_11_fu_1517_p2 = ((trunc_ln29_5_fu_1489_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_12_fu_1776_p2 = ((tmp_32_fu_1744_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_13_fu_1782_p2 = ((trunc_ln29_6_fu_1754_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_14_fu_1794_p2 = ((tmp_33_fu_1762_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_15_fu_1800_p2 = ((trunc_ln29_7_fu_1772_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_16_fu_2059_p2 = ((tmp_35_fu_2027_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_17_fu_2065_p2 = ((trunc_ln29_8_fu_2037_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_18_fu_2077_p2 = ((tmp_36_fu_2045_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_19_fu_2083_p2 = ((trunc_ln29_9_fu_2055_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_1_fu_933_p2 = ((trunc_ln29_fu_905_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_20_fu_2342_p2 = ((tmp_38_fu_2310_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_21_fu_2348_p2 = ((trunc_ln29_10_fu_2320_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_22_fu_2360_p2 = ((tmp_39_fu_2328_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_23_fu_2366_p2 = ((trunc_ln29_11_fu_2338_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_2_fu_945_p2 = ((tmp_14_fu_913_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_3_fu_951_p2 = ((trunc_ln29_1_fu_923_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_4_fu_1210_p2 = ((tmp_20_fu_1178_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_5_fu_1216_p2 = ((trunc_ln29_2_fu_1188_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_6_fu_1228_p2 = ((tmp_21_fu_1196_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1234_p2 = ((trunc_ln29_3_fu_1206_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_1493_p2 = ((tmp_29_fu_1461_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_1499_p2 = ((trunc_ln29_4_fu_1471_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_927_p2 = ((tmp_13_fu_895_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mul_ln29_1_fu_1054_p0 = mul_ln29_1_fu_1054_p00;

assign mul_ln29_1_fu_1054_p00 = add_ln26_1_fu_1045_p2;

assign mul_ln29_1_fu_1054_p2 = (mul_ln29_1_fu_1054_p0 * $signed('h1A));

assign mul_ln29_2_fu_1337_p0 = mul_ln29_2_fu_1337_p00;

assign mul_ln29_2_fu_1337_p00 = add_ln26_2_fu_1328_p2;

assign mul_ln29_2_fu_1337_p2 = (mul_ln29_2_fu_1337_p0 * $signed('h1A));

assign mul_ln29_3_fu_1620_p0 = mul_ln29_3_fu_1620_p00;

assign mul_ln29_3_fu_1620_p00 = add_ln26_3_fu_1611_p2;

assign mul_ln29_3_fu_1620_p2 = (mul_ln29_3_fu_1620_p0 * $signed('h1A));

assign mul_ln29_4_fu_1903_p0 = mul_ln29_4_fu_1903_p00;

assign mul_ln29_4_fu_1903_p00 = add_ln26_4_fu_1894_p2;

assign mul_ln29_4_fu_1903_p2 = (mul_ln29_4_fu_1903_p0 * $signed('h1A));

assign mul_ln29_5_fu_2186_p0 = mul_ln29_5_fu_2186_p00;

assign mul_ln29_5_fu_2186_p00 = add_ln26_5_fu_2177_p2;

assign mul_ln29_5_fu_2186_p2 = (mul_ln29_5_fu_2186_p0 * $signed('h1A));

assign mul_ln29_fu_783_p0 = mul_ln29_fu_783_p00;

assign mul_ln29_fu_783_p00 = add_ln26_fu_774_p2;

assign mul_ln29_fu_783_p2 = (mul_ln29_fu_783_p0 * $signed('h1A));

assign or_ln29_10_fu_2354_p2 = (icmp_ln29_21_fu_2348_p2 | icmp_ln29_20_fu_2342_p2);

assign or_ln29_11_fu_2372_p2 = (icmp_ln29_23_fu_2366_p2 | icmp_ln29_22_fu_2360_p2);

assign or_ln29_12_fu_1163_p2 = (sub_ln29_1_fu_1157_p2 | 13'd1);

assign or_ln29_1_fu_957_p2 = (icmp_ln29_3_fu_951_p2 | icmp_ln29_2_fu_945_p2);

assign or_ln29_2_fu_1222_p2 = (icmp_ln29_5_fu_1216_p2 | icmp_ln29_4_fu_1210_p2);

assign or_ln29_3_fu_1240_p2 = (icmp_ln29_7_fu_1234_p2 | icmp_ln29_6_fu_1228_p2);

assign or_ln29_4_fu_1505_p2 = (icmp_ln29_9_fu_1499_p2 | icmp_ln29_8_fu_1493_p2);

assign or_ln29_5_fu_1523_p2 = (icmp_ln29_11_fu_1517_p2 | icmp_ln29_10_fu_1511_p2);

assign or_ln29_6_fu_1788_p2 = (icmp_ln29_13_fu_1782_p2 | icmp_ln29_12_fu_1776_p2);

assign or_ln29_7_fu_1806_p2 = (icmp_ln29_15_fu_1800_p2 | icmp_ln29_14_fu_1794_p2);

assign or_ln29_8_fu_2071_p2 = (icmp_ln29_17_fu_2065_p2 | icmp_ln29_16_fu_2059_p2);

assign or_ln29_9_fu_2089_p2 = (icmp_ln29_19_fu_2083_p2 | icmp_ln29_18_fu_2077_p2);

assign or_ln29_fu_939_p2 = (icmp_ln29_fu_927_p2 | icmp_ln29_1_fu_933_p2);

assign or_ln36_fu_1096_p2 = (sub_ln36_1_fu_1090_p2 | 11'd1);

assign p_shl10_cast_fu_1420_p3 = {{add_ln29_2_fu_1415_p2}, {3'd0}};

assign p_shl12_cast_fu_1636_p3 = {{add_ln36_4_fu_1630_p2}, {3'd0}};

assign p_shl14_cast_fu_1703_p3 = {{add_ln29_4_fu_1698_p2}, {3'd0}};

assign p_shl16_cast_fu_1919_p3 = {{add_ln36_6_fu_1913_p2}, {3'd0}};

assign p_shl18_cast_fu_1986_p3 = {{add_ln29_6_fu_1981_p2}, {3'd0}};

assign p_shl20_cast_fu_2202_p3 = {{add_ln36_8_fu_2196_p2}, {3'd0}};

assign p_shl22_cast_fu_2269_p3 = {{add_ln29_8_fu_2264_p2}, {3'd0}};

assign p_shl2_cast_fu_860_p3 = {{add_ln29_fu_855_p2}, {3'd0}};

assign p_shl4_cast_fu_1070_p3 = {{add_ln36_1_fu_1064_p2}, {3'd0}};

assign p_shl6_cast_fu_1137_p3 = {{add_ln29_1_fu_1132_p2}, {3'd0}};

assign p_shl8_cast_fu_1353_p3 = {{add_ln36_2_fu_1347_p2}, {3'd0}};

assign p_shl_cast_fu_799_p3 = {{add_ln36_fu_793_p2}, {3'd0}};

assign select_ln29_1_fu_1258_p3 = ((and_ln29_3_fu_1252_p2[0:0] === 1'b1) ? reg_707 : max_1_1_reg_345);

assign select_ln29_2_fu_1541_p3 = ((and_ln29_5_fu_1535_p2[0:0] === 1'b1) ? reg_707 : max_1_2_reg_427);

assign select_ln29_3_fu_1824_p3 = ((and_ln29_7_fu_1818_p2[0:0] === 1'b1) ? reg_707 : max_1_3_reg_509);

assign select_ln29_4_fu_2107_p3 = ((and_ln29_9_fu_2101_p2[0:0] === 1'b1) ? reg_707 : max_1_4_reg_591);

assign select_ln29_5_fu_2390_p3 = ((and_ln29_11_fu_2384_p2[0:0] === 1'b1) ? reg_707 : max_1_5_reg_673);

assign select_ln29_fu_975_p3 = ((and_ln29_1_fu_969_p2[0:0] === 1'b1) ? reg_707 : max_1_0_reg_263);

assign shl_ln1_fu_750_p3 = {{c_0_0_reg_227}, {1'd0}};

assign shl_ln26_1_fu_1001_p3 = {{r_0_1_reg_286}, {1'd0}};

assign shl_ln26_2_fu_1284_p3 = {{r_0_2_reg_368}, {1'd0}};

assign shl_ln26_3_fu_1567_p3 = {{r_0_3_reg_450}, {1'd0}};

assign shl_ln26_4_fu_1850_p3 = {{r_0_4_reg_532}, {1'd0}};

assign shl_ln26_5_fu_2133_p3 = {{r_0_5_reg_614}, {1'd0}};

assign shl_ln27_1_fu_1021_p3 = {{c_0_1_reg_309}, {1'd0}};

assign shl_ln27_2_fu_1304_p3 = {{c_0_2_reg_391}, {1'd0}};

assign shl_ln27_3_fu_1587_p3 = {{c_0_3_reg_473}, {1'd0}};

assign shl_ln27_4_fu_1870_p3 = {{c_0_4_reg_555}, {1'd0}};

assign shl_ln27_5_fu_2153_p3 = {{c_0_5_reg_637}, {1'd0}};

assign shl_ln_fu_730_p3 = {{r_0_0_reg_204}, {1'd0}};

assign sub_ln29_1_fu_1157_p2 = (p_shl6_cast_fu_1137_p3 - zext_ln29_7_fu_1153_p1);

assign sub_ln29_2_fu_1440_p2 = (p_shl10_cast_fu_1420_p3 - zext_ln29_11_fu_1436_p1);

assign sub_ln29_3_fu_1723_p2 = (p_shl14_cast_fu_1703_p3 - zext_ln29_15_fu_1719_p1);

assign sub_ln29_4_fu_2006_p2 = (p_shl18_cast_fu_1986_p3 - zext_ln29_19_fu_2002_p1);

assign sub_ln29_5_fu_2289_p2 = (p_shl22_cast_fu_2269_p3 - zext_ln29_22_fu_2285_p1);

assign sub_ln29_fu_880_p2 = (p_shl2_cast_fu_860_p3 - zext_ln29_3_fu_876_p1);

assign sub_ln36_1_fu_1090_p2 = (p_shl4_cast_fu_1070_p3 - zext_ln36_4_fu_1086_p1);

assign sub_ln36_2_fu_1373_p2 = (p_shl8_cast_fu_1353_p3 - zext_ln36_7_fu_1369_p1);

assign sub_ln36_3_fu_1656_p2 = (p_shl12_cast_fu_1636_p3 - zext_ln36_10_fu_1652_p1);

assign sub_ln36_4_fu_1939_p2 = (p_shl16_cast_fu_1919_p3 - zext_ln36_13_fu_1935_p1);

assign sub_ln36_5_fu_2222_p2 = (p_shl20_cast_fu_2202_p3 - zext_ln36_16_fu_2218_p1);

assign sub_ln36_fu_819_p2 = (p_shl_cast_fu_799_p3 - zext_ln36_1_fu_815_p1);

assign tmp_13_fu_895_p4 = {{bitcast_ln29_fu_891_p1[30:23]}};

assign tmp_14_fu_913_p4 = {{bitcast_ln29_1_fu_909_p1[30:23]}};

assign tmp_20_fu_1178_p4 = {{bitcast_ln29_2_fu_1174_p1[30:23]}};

assign tmp_21_fu_1196_p4 = {{bitcast_ln29_3_fu_1192_p1[30:23]}};

assign tmp_29_fu_1461_p4 = {{bitcast_ln29_4_fu_1457_p1[30:23]}};

assign tmp_30_fu_1479_p4 = {{bitcast_ln29_5_fu_1475_p1[30:23]}};

assign tmp_32_fu_1744_p4 = {{bitcast_ln29_6_fu_1740_p1[30:23]}};

assign tmp_33_fu_1762_p4 = {{bitcast_ln29_7_fu_1758_p1[30:23]}};

assign tmp_35_fu_2027_p4 = {{bitcast_ln29_8_fu_2023_p1[30:23]}};

assign tmp_36_fu_2045_p4 = {{bitcast_ln29_9_fu_2041_p1[30:23]}};

assign tmp_38_fu_2310_p4 = {{bitcast_ln29_10_fu_2306_p1[30:23]}};

assign tmp_39_fu_2328_p4 = {{bitcast_ln29_11_fu_2324_p1[30:23]}};

assign tmp_41_fu_807_p3 = {{add_ln36_fu_793_p2}, {1'd0}};

assign tmp_42_fu_1078_p3 = {{add_ln36_1_fu_1064_p2}, {1'd0}};

assign tmp_43_fu_868_p3 = {{add_ln29_fu_855_p2}, {1'd0}};

assign tmp_44_fu_1361_p3 = {{add_ln36_2_fu_1347_p2}, {1'd0}};

assign tmp_45_fu_1145_p3 = {{add_ln29_1_fu_1132_p2}, {1'd0}};

assign tmp_46_fu_1644_p3 = {{add_ln36_4_fu_1630_p2}, {1'd0}};

assign tmp_47_fu_1428_p3 = {{add_ln29_2_fu_1415_p2}, {1'd0}};

assign tmp_48_fu_1927_p3 = {{add_ln36_6_fu_1913_p2}, {1'd0}};

assign tmp_49_fu_1711_p3 = {{add_ln29_4_fu_1698_p2}, {1'd0}};

assign tmp_50_fu_2210_p3 = {{add_ln36_8_fu_2196_p2}, {1'd0}};

assign tmp_51_fu_1994_p3 = {{add_ln29_6_fu_1981_p2}, {1'd0}};

assign tmp_52_fu_2277_p3 = {{add_ln29_8_fu_2264_p2}, {1'd0}};

assign trunc_ln29_10_fu_2320_p1 = bitcast_ln29_10_fu_2306_p1[22:0];

assign trunc_ln29_11_fu_2338_p1 = bitcast_ln29_11_fu_2324_p1[22:0];

assign trunc_ln29_1_fu_923_p1 = bitcast_ln29_1_fu_909_p1[22:0];

assign trunc_ln29_2_fu_1188_p1 = bitcast_ln29_2_fu_1174_p1[22:0];

assign trunc_ln29_3_fu_1206_p1 = bitcast_ln29_3_fu_1192_p1[22:0];

assign trunc_ln29_4_fu_1471_p1 = bitcast_ln29_4_fu_1457_p1[22:0];

assign trunc_ln29_5_fu_1489_p1 = bitcast_ln29_5_fu_1475_p1[22:0];

assign trunc_ln29_6_fu_1754_p1 = bitcast_ln29_6_fu_1740_p1[22:0];

assign trunc_ln29_7_fu_1772_p1 = bitcast_ln29_7_fu_1758_p1[22:0];

assign trunc_ln29_8_fu_2037_p1 = bitcast_ln29_8_fu_2023_p1[22:0];

assign trunc_ln29_9_fu_2055_p1 = bitcast_ln29_9_fu_2041_p1[22:0];

assign trunc_ln29_fu_905_p1 = bitcast_ln29_fu_891_p1[22:0];

assign zext_ln20_1_fu_1029_p1 = mpr_0_1_reg_334;

assign zext_ln20_2_fu_1312_p1 = mpr_0_2_reg_416;

assign zext_ln20_3_fu_1595_p1 = mpr_0_3_reg_498;

assign zext_ln20_4_fu_1878_p1 = mpr_0_4_reg_580;

assign zext_ln20_5_fu_2161_p1 = mpr_0_5_reg_662;

assign zext_ln20_fu_758_p1 = mpr_0_0_reg_252;

assign zext_ln23_1_fu_1107_p1 = mpc_0_1_reg_357;

assign zext_ln23_2_fu_1390_p1 = mpc_0_2_reg_439;

assign zext_ln23_3_fu_1673_p1 = mpc_0_3_reg_521;

assign zext_ln23_4_fu_1956_p1 = mpc_0_4_reg_603;

assign zext_ln23_5_fu_2239_p1 = mpc_0_5_reg_685;

assign zext_ln23_fu_830_p1 = mpc_0_0_reg_275;

assign zext_ln29_10_fu_1411_p1 = add_ln27_2_fu_1406_p2;

assign zext_ln29_11_fu_1436_p1 = tmp_47_fu_1428_p3;

assign zext_ln29_12_fu_1452_p1 = add_ln29_3_fu_1446_p2;

assign zext_ln29_14_fu_1694_p1 = add_ln27_3_fu_1689_p2;

assign zext_ln29_15_fu_1719_p1 = tmp_49_fu_1711_p3;

assign zext_ln29_16_fu_1735_p1 = add_ln29_5_fu_1729_p2;

assign zext_ln29_18_fu_1977_p1 = add_ln27_4_fu_1972_p2;

assign zext_ln29_19_fu_2002_p1 = tmp_51_fu_1994_p3;

assign zext_ln29_20_fu_2018_p1 = add_ln29_7_fu_2012_p2;

assign zext_ln29_21_fu_2260_p1 = add_ln27_5_fu_2255_p2;

assign zext_ln29_22_fu_2285_p1 = tmp_52_fu_2277_p3;

assign zext_ln29_23_fu_2301_p1 = add_ln29_9_fu_2295_p2;

assign zext_ln29_2_fu_851_p1 = add_ln27_fu_846_p2;

assign zext_ln29_3_fu_876_p1 = tmp_43_fu_868_p3;

assign zext_ln29_4_fu_886_p1 = sub_ln29_fu_880_p2;

assign zext_ln29_6_fu_1128_p1 = add_ln27_1_fu_1123_p2;

assign zext_ln29_7_fu_1153_p1 = tmp_45_fu_1145_p3;

assign zext_ln29_8_fu_1169_p1 = or_ln29_12_fu_1163_p2;

assign zext_ln36_10_fu_1652_p1 = tmp_46_fu_1644_p3;

assign zext_ln36_11_fu_1668_p1 = add_ln36_5_fu_1662_p2;

assign zext_ln36_12_fu_1909_p1 = c_0_4_reg_555;

assign zext_ln36_13_fu_1935_p1 = tmp_48_fu_1927_p3;

assign zext_ln36_14_fu_1951_p1 = add_ln36_7_fu_1945_p2;

assign zext_ln36_15_fu_2192_p1 = c_0_5_reg_637;

assign zext_ln36_16_fu_2218_p1 = tmp_50_fu_2210_p3;

assign zext_ln36_17_fu_2234_p1 = add_ln36_9_fu_2228_p2;

assign zext_ln36_1_fu_815_p1 = tmp_41_fu_807_p3;

assign zext_ln36_2_fu_825_p1 = sub_ln36_fu_819_p2;

assign zext_ln36_3_fu_1060_p1 = c_0_1_reg_309;

assign zext_ln36_4_fu_1086_p1 = tmp_42_fu_1078_p3;

assign zext_ln36_5_fu_1102_p1 = or_ln36_fu_1096_p2;

assign zext_ln36_6_fu_1343_p1 = c_0_2_reg_391;

assign zext_ln36_7_fu_1369_p1 = tmp_44_fu_1361_p3;

assign zext_ln36_8_fu_1385_p1 = add_ln36_3_fu_1379_p2;

assign zext_ln36_9_fu_1626_p1 = c_0_3_reg_473;

assign zext_ln36_fu_789_p1 = c_0_0_reg_227;

always @ (posedge ap_clk) begin
    shl_ln_reg_2411[0] <= 1'b0;
    shl_ln1_reg_2424[0] <= 1'b0;
    mul_ln29_reg_2437[0] <= 1'b0;
    shl_ln26_1_reg_2473[0] <= 1'b0;
    shl_ln27_1_reg_2486[0] <= 1'b0;
    mul_ln29_1_reg_2499[0] <= 1'b0;
    shl_ln26_2_reg_2535[0] <= 1'b0;
    shl_ln27_2_reg_2548[0] <= 1'b0;
    mul_ln29_2_reg_2561[0] <= 1'b0;
    shl_ln26_3_reg_2597[0] <= 1'b0;
    shl_ln27_3_reg_2610[0] <= 1'b0;
    mul_ln29_3_reg_2623[0] <= 1'b0;
    shl_ln26_4_reg_2659[0] <= 1'b0;
    shl_ln27_4_reg_2672[0] <= 1'b0;
    mul_ln29_4_reg_2685[0] <= 1'b0;
    shl_ln26_5_reg_2721[0] <= 1'b0;
    shl_ln27_5_reg_2734[0] <= 1'b0;
    mul_ln29_5_reg_2747[0] <= 1'b0;
end

endmodule //max_pool
