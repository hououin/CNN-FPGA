-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv_out_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv_out_ce0 : OUT STD_LOGIC;
    conv_out_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv_out_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv_out_ce1 : OUT STD_LOGIC;
    conv_out_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    max_pool_out_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    max_pool_out_ce0 : OUT STD_LOGIC;
    max_pool_out_we0 : OUT STD_LOGIC;
    max_pool_out_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    max_pool_out_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    max_pool_out_ce1 : OUT STD_LOGIC;
    max_pool_out_we1 : OUT STD_LOGIC;
    max_pool_out_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of max_pool is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.538400,HLS_SYN_LAT=2497,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=531,HLS_SYN_LUT=1970,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_800000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv10_1A : STD_LOGIC_VECTOR (9 downto 0) := "0000011010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal c_0_0_reg_227 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln16_reg_1572 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln10_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln10_fu_267_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln10_reg_1497 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln29_8_fu_285_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln29_8_reg_1502 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln29_9_fu_293_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln29_9_reg_1507 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln14_fu_301_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln14_reg_1513 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln14_1_fu_305_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln14_1_reg_1519 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln36_fu_321_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln36_reg_1530 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln29_fu_331_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln29_reg_1536 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln29_1_fu_347_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln29_1_reg_1544 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1_fu_353_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1_reg_1552 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln29_2_fu_361_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln29_2_reg_1557 : STD_LOGIC_VECTOR (9 downto 0);
    signal or_ln16_fu_428_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln16_reg_1567 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln16_reg_1567_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln16_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln16_reg_1572_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln27_1_fu_440_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln27_1_reg_1576 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln29_12_fu_448_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln29_12_reg_1581 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_1_fu_493_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_1_reg_1591 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_5_fu_547_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_5_reg_1602 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_9_fu_552_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_9_reg_1608 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_13_fu_606_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_13_reg_1619 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln29_fu_687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_reg_1630 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_4_fu_772_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_4_reg_1642 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_1_fu_898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_1_reg_1654 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln36_fu_910_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_reg_1661 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln29_5_fu_1032_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_5_reg_1672 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_fu_1040_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln16_reg_1679 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln29_2_fu_1129_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_2_reg_1684 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_6_fu_1220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln29_6_reg_1691 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_1488_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal indvar_flatten_reg_194 : STD_LOGIC_VECTOR (6 downto 0);
    signal f_0_reg_205 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_0_reg_216 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_c_0_0_phi_fu_231_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_26_fu_419_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_14_fu_488_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_9_fu_542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln29_19_fu_601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_6_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln29_16_fu_725_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_11_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln29_21_fu_944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_3_fu_1348_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln36_6_fu_1483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln13_fu_279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal f_fu_273_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln36_fu_321_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_309_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln29_fu_331_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln26_fu_337_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln29_1_fu_347_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln29_fu_365_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_370_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_382_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln29_3_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln29_4_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln29_fu_394_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln29_fu_400_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_25_fu_409_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal or_ln29_14_fu_404_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln29_7_fu_452_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_465_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl18_cast_fu_457_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_13_fu_473_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_4_fu_477_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_8_fu_483_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln27_fu_497_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln29_7_fu_502_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_3_fu_506_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_519_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl4_cast_fu_511_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_8_fu_527_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_2_fu_531_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_4_fu_537_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln27_1_fu_556_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln29_17_fu_561_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln29_11_fu_565_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_33_fu_578_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl14_cast_fu_570_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_18_fu_586_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_6_fu_590_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_12_fu_596_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_fu_618_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl6_cast_fu_611_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_5_fu_625_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_1_fu_629_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_2_fu_635_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_649_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_1_fu_659_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_1_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_703_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl16_cast_fu_696_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_15_fu_710_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_5_fu_714_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_10_fu_720_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_7_fu_730_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_734_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_8_fu_744_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_15_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_14_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_7_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_7_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_788_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl2_cast_fu_781_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_10_fu_795_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_3_fu_799_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_6_fu_805_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_1_fu_815_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_2_fu_833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_819_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_2_fu_829_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_3_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_2_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_836_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_3_fu_846_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_5_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_4_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_1_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_2_fu_880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_1_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_2_fu_892_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln36_1_fu_906_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_922_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl12_cast_fu_915_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln29_20_fu_929_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln29_7_fu_933_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln29_14_fu_939_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln29_8_fu_949_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_9_fu_967_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_953_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_9_fu_963_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_17_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_16_fu_984_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_970_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_10_fu_980_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_19_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_18_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_8_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_9_fu_1014_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_8_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_9_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln29_3_fu_1046_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_4_fu_1064_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1050_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_4_fu_1060_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_7_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_6_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1067_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_5_fu_1077_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_9_fu_1105_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_8_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_3_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_4_fu_1111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_3_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_4_fu_1123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln29_10_fu_1137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_11_fu_1155_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1141_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_11_fu_1151_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_21_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_20_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1158_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_12_fu_1168_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_23_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_22_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_10_fu_1184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_11_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_10_fu_1208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_11_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln29_5_fu_1228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_6_fu_1246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1232_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_6_fu_1242_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_11_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_10_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1249_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_7_fu_1259_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_13_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_12_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_5_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_6_fu_1293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_5_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_6_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1326_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_1319_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln36_2_fu_1333_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln36_fu_1337_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_1_fu_1343_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln29_12_fu_1353_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln29_13_fu_1371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1357_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_13_fu_1367_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_25_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_24_fu_1388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_1374_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_14_fu_1384_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln29_27_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_26_fu_1406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_12_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln29_13_fu_1418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_12_fu_1424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln29_13_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln36_4_fu_1444_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln36_2_fu_1447_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_1460_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl10_cast_fu_1452_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln36_5_fu_1468_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln36_1_fu_1472_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln36_3_fu_1478_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln29_1_fu_347_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln29_fu_331_p00 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln36_fu_321_p00 : STD_LOGIC_VECTOR (7 downto 0);

    component max_pool_fcmp_32nbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool_fcmp_32nbkb_U1 : component max_pool_fcmp_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_out_q0,
        din1 => grp_fu_239_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_239_p2);

    max_pool_fcmp_32nbkb_U2 : component max_pool_fcmp_32nbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => conv_out_q1,
        din1 => grp_fu_245_p1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_245_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln16_reg_1572 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_0_0_reg_227_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then 
                c_0_0_reg_227 <= add_ln16_reg_1679;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_0))) then 
                c_0_0_reg_227 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    f_0_reg_205_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                f_0_reg_205 <= select_ln29_9_reg_1507;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                f_0_reg_205 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                indvar_flatten_reg_194 <= add_ln10_reg_1497;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_194 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    r_0_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                r_0_reg_216 <= r_fu_1488_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                r_0_reg_216 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln10_reg_1497 <= add_ln10_fu_267_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then
                add_ln16_reg_1679 <= add_ln16_fu_1040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then
                    add_ln29_13_reg_1619(9 downto 1) <= add_ln29_13_fu_606_p2(9 downto 1);
                    add_ln29_9_reg_1608(9 downto 1) <= add_ln29_9_fu_552_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    add_ln29_1_reg_1591(9 downto 1) <= add_ln29_1_fu_493_p2(9 downto 1);
                    add_ln29_5_reg_1602(9 downto 1) <= add_ln29_5_fu_547_p2(9 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                add_ln36_reg_1661 <= add_ln36_fu_910_p2;
                select_ln29_1_reg_1654 <= select_ln29_1_fu_898_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln16_reg_1572 <= icmp_ln16_fu_434_p2;
                icmp_ln16_reg_1572_pp0_iter1_reg <= icmp_ln16_reg_1572;
                    or_ln16_reg_1567(3 downto 1) <= or_ln16_fu_428_p2(3 downto 1);
                    or_ln16_reg_1567_pp0_iter1_reg(3 downto 1) <= or_ln16_reg_1567(3 downto 1);
                select_ln29_2_reg_1684 <= select_ln29_2_fu_1129_p3;
                    shl_ln1_reg_1552(4 downto 1) <= shl_ln1_fu_353_p3(4 downto 1);
                    zext_ln29_2_reg_1557(4 downto 1) <= zext_ln29_2_fu_361_p1(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_0))) then
                    mul_ln29_1_reg_1544(9 downto 1) <= mul_ln29_1_fu_347_p2(9 downto 1);
                    mul_ln29_reg_1536(9 downto 1) <= mul_ln29_fu_331_p2(9 downto 1);
                mul_ln36_reg_1530 <= mul_ln36_fu_321_p2;
                select_ln29_8_reg_1502 <= select_ln29_8_fu_285_p3;
                select_ln29_9_reg_1507 <= select_ln29_9_fu_293_p3;
                    zext_ln14_1_reg_1519(2 downto 0) <= zext_ln14_1_fu_305_p1(2 downto 0);
                    zext_ln14_reg_1513(2 downto 0) <= zext_ln14_fu_301_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_251 <= conv_out_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_reg_1572 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln16_reg_1572 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln16_reg_1572 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln16_reg_1572 = ap_const_lv1_0)))) then
                reg_256 <= conv_out_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then
                select_ln29_4_reg_1642 <= select_ln29_4_fu_772_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then
                select_ln29_5_reg_1672 <= select_ln29_5_fu_1032_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then
                select_ln29_6_reg_1691 <= select_ln29_6_fu_1220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                select_ln29_reg_1630 <= select_ln29_fu_687_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_fu_434_p2 = ap_const_lv1_0))) then
                    shl_ln27_1_reg_1576(4 downto 2) <= shl_ln27_1_fu_440_p3(4 downto 2);
                    zext_ln29_12_reg_1581(4 downto 2) <= zext_ln29_12_fu_448_p1(4 downto 2);
            end if;
        end if;
    end process;
    zext_ln14_reg_1513(10 downto 3) <= "00000000";
    zext_ln14_1_reg_1519(12 downto 3) <= "0000000000";
    mul_ln29_reg_1536(0) <= '0';
    mul_ln29_1_reg_1544(0) <= '0';
    shl_ln1_reg_1552(0) <= '0';
    zext_ln29_2_reg_1557(0) <= '0';
    zext_ln29_2_reg_1557(9 downto 5) <= "00000";
    or_ln16_reg_1567(0) <= '1';
    or_ln16_reg_1567_pp0_iter1_reg(0) <= '1';
    shl_ln27_1_reg_1576(1 downto 0) <= "10";
    zext_ln29_12_reg_1581(1 downto 0) <= "10";
    zext_ln29_12_reg_1581(9 downto 5) <= "00000";
    add_ln29_1_reg_1591(0) <= '0';
    add_ln29_5_reg_1602(0) <= '1';
    add_ln29_9_reg_1608(0) <= '0';
    add_ln29_13_reg_1619(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, icmp_ln10_fu_261_p2, ap_CS_fsm_state2, ap_block_pp0_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln10_fu_267_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_194) + unsigned(ap_const_lv7_1));
    add_ln16_fu_1040_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(c_0_0_reg_227));
    add_ln29_10_fu_720_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_5_fu_714_p2));
    add_ln29_11_fu_565_p2 <= std_logic_vector(unsigned(zext_ln29_17_fu_561_p1) + unsigned(mul_ln29_reg_1536));
    add_ln29_12_fu_596_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_6_fu_590_p2));
    add_ln29_13_fu_606_p2 <= std_logic_vector(unsigned(zext_ln29_17_fu_561_p1) + unsigned(mul_ln29_1_reg_1544));
    add_ln29_14_fu_939_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_7_fu_933_p2));
    add_ln29_1_fu_493_p2 <= std_logic_vector(unsigned(zext_ln29_2_reg_1557) + unsigned(mul_ln29_1_reg_1544));
    add_ln29_2_fu_635_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_1_fu_629_p2));
    add_ln29_3_fu_506_p2 <= std_logic_vector(unsigned(zext_ln29_7_fu_502_p1) + unsigned(mul_ln29_reg_1536));
    add_ln29_4_fu_537_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_2_fu_531_p2));
    add_ln29_5_fu_547_p2 <= std_logic_vector(unsigned(zext_ln29_7_fu_502_p1) + unsigned(mul_ln29_1_reg_1544));
    add_ln29_6_fu_805_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_3_fu_799_p2));
    add_ln29_7_fu_452_p2 <= std_logic_vector(unsigned(zext_ln29_12_fu_448_p1) + unsigned(mul_ln29_reg_1536));
    add_ln29_8_fu_483_p2 <= std_logic_vector(unsigned(zext_ln14_1_reg_1519) + unsigned(sub_ln29_4_fu_477_p2));
    add_ln29_9_fu_552_p2 <= std_logic_vector(unsigned(zext_ln29_12_reg_1581) + unsigned(mul_ln29_1_reg_1544));
    add_ln29_fu_365_p2 <= std_logic_vector(unsigned(zext_ln29_2_fu_361_p1) + unsigned(mul_ln29_reg_1536));
    add_ln36_1_fu_1343_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1513) + unsigned(sub_ln36_fu_1337_p2));
    add_ln36_2_fu_1447_p2 <= std_logic_vector(unsigned(zext_ln36_4_fu_1444_p1) + unsigned(mul_ln36_reg_1530));
    add_ln36_3_fu_1478_p2 <= std_logic_vector(unsigned(zext_ln14_reg_1513) + unsigned(sub_ln36_1_fu_1472_p2));
    add_ln36_fu_910_p2 <= std_logic_vector(unsigned(zext_ln36_1_fu_906_p1) + unsigned(mul_ln36_reg_1530));
    and_ln29_10_fu_1208_p2 <= (or_ln29_11_fu_1202_p2 and or_ln29_10_fu_1184_p2);
    and_ln29_11_fu_1214_p2 <= (grp_fu_245_p2 and and_ln29_10_fu_1208_p2);
    and_ln29_12_fu_1424_p2 <= (or_ln29_13_fu_1418_p2 and or_ln29_12_fu_1400_p2);
    and_ln29_13_fu_1430_p2 <= (grp_fu_245_p2 and and_ln29_12_fu_1424_p2);
    and_ln29_1_fu_886_p2 <= (or_ln29_2_fu_880_p2 and or_ln29_1_fu_862_p2);
    and_ln29_2_fu_892_p2 <= (grp_fu_239_p2 and and_ln29_1_fu_886_p2);
    and_ln29_3_fu_1117_p2 <= (or_ln29_4_fu_1111_p2 and or_ln29_3_fu_1093_p2);
    and_ln29_4_fu_1123_p2 <= (grp_fu_239_p2 and and_ln29_3_fu_1117_p2);
    and_ln29_5_fu_1299_p2 <= (or_ln29_6_fu_1293_p2 and or_ln29_5_fu_1275_p2);
    and_ln29_6_fu_1305_p2 <= (grp_fu_239_p2 and and_ln29_5_fu_1299_p2);
    and_ln29_7_fu_766_p2 <= (or_ln29_7_fu_760_p2 and grp_fu_245_p2);
    and_ln29_8_fu_1020_p2 <= (or_ln29_9_fu_1014_p2 and or_ln29_8_fu_996_p2);
    and_ln29_9_fu_1026_p2 <= (grp_fu_245_p2 and and_ln29_8_fu_1020_p2);
    and_ln29_fu_681_p2 <= (or_ln29_fu_675_p2 and grp_fu_239_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(icmp_ln10_fu_261_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_0_phi_fu_231_p4_assign_proc : process(c_0_0_reg_227, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln16_reg_1572, add_ln16_reg_1679, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln16_reg_1572 = ap_const_lv1_0))) then 
            ap_phi_mux_c_0_0_phi_fu_231_p4 <= add_ln16_reg_1679;
        else 
            ap_phi_mux_c_0_0_phi_fu_231_p4 <= c_0_0_reg_227;
        end if; 
    end process;


    ap_ready_assign_proc : process(icmp_ln10_fu_261_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln10_fu_261_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln29_10_fu_1137_p1 <= reg_256;
    bitcast_ln29_11_fu_1155_p1 <= select_ln29_5_reg_1672;
    bitcast_ln29_12_fu_1353_p1 <= reg_256;
    bitcast_ln29_13_fu_1371_p1 <= select_ln29_6_reg_1691;
    bitcast_ln29_1_fu_815_p1 <= reg_251;
    bitcast_ln29_2_fu_833_p1 <= select_ln29_reg_1630;
    bitcast_ln29_3_fu_1046_p1 <= reg_251;
    bitcast_ln29_4_fu_1064_p1 <= select_ln29_1_reg_1654;
    bitcast_ln29_5_fu_1228_p1 <= reg_251;
    bitcast_ln29_6_fu_1246_p1 <= select_ln29_2_reg_1684;
    bitcast_ln29_7_fu_730_p1 <= reg_256;
    bitcast_ln29_8_fu_949_p1 <= reg_256;
    bitcast_ln29_9_fu_967_p1 <= select_ln29_4_reg_1642;
    bitcast_ln29_fu_645_p1 <= reg_251;

    conv_out_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_26_fu_419_p3, zext_ln29_9_fu_542_p1, ap_block_pp0_stage1, zext_ln29_6_fu_640_p1, ap_block_pp0_stage2, zext_ln29_11_fu_810_p1, ap_block_pp0_stage3)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_address0 <= zext_ln29_11_fu_810_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_out_address0 <= zext_ln29_6_fu_640_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_out_address0 <= zext_ln29_9_fu_542_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_out_address0 <= tmp_26_fu_419_p3(12 - 1 downto 0);
            else 
                conv_out_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            conv_out_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, zext_ln29_14_fu_488_p1, ap_block_pp0_stage1, zext_ln29_19_fu_601_p1, ap_block_pp0_stage2, zext_ln29_16_fu_725_p1, ap_block_pp0_stage3, zext_ln29_21_fu_944_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                conv_out_address1 <= zext_ln29_21_fu_944_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                conv_out_address1 <= zext_ln29_16_fu_725_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                conv_out_address1 <= zext_ln29_19_fu_601_p1(12 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                conv_out_address1 <= zext_ln29_14_fu_488_p1(12 - 1 downto 0);
            else 
                conv_out_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            conv_out_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_out_ce0 <= ap_const_logic_1;
        else 
            conv_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            conv_out_ce1 <= ap_const_logic_1;
        else 
            conv_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    f_fu_273_p2 <= std_logic_vector(unsigned(f_0_reg_205) + unsigned(ap_const_lv3_1));

    grp_fu_239_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln29_fu_687_p3, select_ln29_1_fu_898_p3, select_ln29_2_fu_1129_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_239_p1 <= select_ln29_2_fu_1129_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_239_p1 <= select_ln29_1_fu_898_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_239_p1 <= select_ln29_fu_687_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_239_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_239_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_245_p1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, select_ln29_4_fu_772_p3, select_ln29_5_fu_1032_p3, select_ln29_6_fu_1220_p3, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_245_p1 <= select_ln29_6_fu_1220_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_245_p1 <= select_ln29_5_fu_1032_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            grp_fu_245_p1 <= select_ln29_4_fu_772_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_245_p1 <= ap_const_lv32_800000;
        else 
            grp_fu_245_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln10_fu_261_p2 <= "1" when (indvar_flatten_reg_194 = ap_const_lv7_4E) else "0";
    icmp_ln13_fu_279_p2 <= "1" when (r_0_reg_216 = ap_const_lv4_D) else "0";
    icmp_ln16_fu_434_p2 <= "1" when (or_ln16_fu_428_p2 = ap_const_lv4_D) else "0";
    icmp_ln29_10_fu_1263_p2 <= "0" when (tmp_10_fu_1232_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_11_fu_1269_p2 <= "1" when (trunc_ln29_6_fu_1242_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_12_fu_1281_p2 <= "0" when (tmp_11_fu_1249_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_13_fu_1287_p2 <= "1" when (trunc_ln29_7_fu_1259_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_14_fu_748_p2 <= "0" when (tmp_13_fu_734_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_15_fu_754_p2 <= "1" when (trunc_ln29_8_fu_744_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_16_fu_984_p2 <= "0" when (tmp_15_fu_953_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_17_fu_990_p2 <= "1" when (trunc_ln29_9_fu_963_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_18_fu_1002_p2 <= "0" when (tmp_16_fu_970_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_19_fu_1008_p2 <= "1" when (trunc_ln29_10_fu_980_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_1_fu_669_p2 <= "1" when (trunc_ln29_1_fu_659_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_20_fu_1172_p2 <= "0" when (tmp_18_fu_1141_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_21_fu_1178_p2 <= "1" when (trunc_ln29_11_fu_1151_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_22_fu_1190_p2 <= "0" when (tmp_19_fu_1158_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_23_fu_1196_p2 <= "1" when (trunc_ln29_12_fu_1168_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_24_fu_1388_p2 <= "0" when (tmp_21_fu_1357_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_25_fu_1394_p2 <= "1" when (trunc_ln29_13_fu_1367_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_26_fu_1406_p2 <= "0" when (tmp_22_fu_1374_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_27_fu_1412_p2 <= "1" when (trunc_ln29_14_fu_1384_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_2_fu_850_p2 <= "0" when (tmp_5_fu_819_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_3_fu_856_p2 <= "1" when (trunc_ln29_2_fu_829_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_4_fu_868_p2 <= "0" when (tmp_6_fu_836_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_5_fu_874_p2 <= "1" when (trunc_ln29_3_fu_846_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_6_fu_1081_p2 <= "0" when (tmp_8_fu_1050_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_7_fu_1087_p2 <= "1" when (trunc_ln29_4_fu_1060_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_8_fu_1099_p2 <= "0" when (tmp_9_fu_1067_p4 = ap_const_lv8_FF) else "1";
    icmp_ln29_9_fu_1105_p2 <= "1" when (trunc_ln29_5_fu_1077_p1 = ap_const_lv23_0) else "0";
    icmp_ln29_fu_663_p2 <= "0" when (tmp_3_fu_649_p4 = ap_const_lv8_FF) else "1";
    max_pool_out_address0 <= zext_ln36_3_fu_1348_p1(10 - 1 downto 0);
    max_pool_out_address1 <= zext_ln36_6_fu_1483_p1(10 - 1 downto 0);

    max_pool_out_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            max_pool_out_ce0 <= ap_const_logic_1;
        else 
            max_pool_out_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            max_pool_out_ce1 <= ap_const_logic_1;
        else 
            max_pool_out_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    max_pool_out_d0 <= 
        reg_251 when (and_ln29_6_fu_1305_p2(0) = '1') else 
        select_ln29_2_reg_1684;
    max_pool_out_d1 <= 
        reg_256 when (and_ln29_13_fu_1430_p2(0) = '1') else 
        select_ln29_6_reg_1691;

    max_pool_out_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            max_pool_out_we0 <= ap_const_logic_1;
        else 
            max_pool_out_we0 <= ap_const_logic_0;
        end if; 
    end process;


    max_pool_out_we1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1, icmp_ln16_reg_1572_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln16_reg_1572_pp0_iter1_reg = ap_const_lv1_0))) then 
            max_pool_out_we1 <= ap_const_logic_1;
        else 
            max_pool_out_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln29_1_fu_347_p0 <= mul_ln29_1_fu_347_p00(5 - 1 downto 0);
    mul_ln29_1_fu_347_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln26_fu_337_p2),10));
    mul_ln29_1_fu_347_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln29_1_fu_347_p0) * unsigned(ap_const_lv10_1A), 10));
    mul_ln29_fu_331_p0 <= mul_ln29_fu_331_p00(5 - 1 downto 0);
    mul_ln29_fu_331_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_309_p3),10));
    mul_ln29_fu_331_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln29_fu_331_p0) * unsigned(ap_const_lv10_1A), 10));
    mul_ln36_fu_321_p0 <= mul_ln36_fu_321_p00(4 - 1 downto 0);
    mul_ln36_fu_321_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_8_fu_285_p3),8));
    mul_ln36_fu_321_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln36_fu_321_p0) * unsigned(ap_const_lv8_D), 8));
    or_ln16_fu_428_p2 <= (ap_phi_mux_c_0_0_phi_fu_231_p4 or ap_const_lv4_1);
    or_ln26_fu_337_p2 <= (shl_ln_fu_309_p3 or ap_const_lv5_1);
    or_ln27_1_fu_556_p2 <= (shl_ln27_1_reg_1576 or ap_const_lv5_1);
    or_ln27_fu_497_p2 <= (shl_ln1_reg_1552 or ap_const_lv5_1);
    or_ln29_10_fu_1184_p2 <= (icmp_ln29_21_fu_1178_p2 or icmp_ln29_20_fu_1172_p2);
    or_ln29_11_fu_1202_p2 <= (icmp_ln29_23_fu_1196_p2 or icmp_ln29_22_fu_1190_p2);
    or_ln29_12_fu_1400_p2 <= (icmp_ln29_25_fu_1394_p2 or icmp_ln29_24_fu_1388_p2);
    or_ln29_13_fu_1418_p2 <= (icmp_ln29_27_fu_1412_p2 or icmp_ln29_26_fu_1406_p2);
    or_ln29_14_fu_404_p2 <= (trunc_ln29_fu_400_p1 or select_ln29_9_reg_1507);
    or_ln29_1_fu_862_p2 <= (icmp_ln29_3_fu_856_p2 or icmp_ln29_2_fu_850_p2);
    or_ln29_2_fu_880_p2 <= (icmp_ln29_5_fu_874_p2 or icmp_ln29_4_fu_868_p2);
    or_ln29_3_fu_1093_p2 <= (icmp_ln29_7_fu_1087_p2 or icmp_ln29_6_fu_1081_p2);
    or_ln29_4_fu_1111_p2 <= (icmp_ln29_9_fu_1105_p2 or icmp_ln29_8_fu_1099_p2);
    or_ln29_5_fu_1275_p2 <= (icmp_ln29_11_fu_1269_p2 or icmp_ln29_10_fu_1263_p2);
    or_ln29_6_fu_1293_p2 <= (icmp_ln29_13_fu_1287_p2 or icmp_ln29_12_fu_1281_p2);
    or_ln29_7_fu_760_p2 <= (icmp_ln29_15_fu_754_p2 or icmp_ln29_14_fu_748_p2);
    or_ln29_8_fu_996_p2 <= (icmp_ln29_17_fu_990_p2 or icmp_ln29_16_fu_984_p2);
    or_ln29_9_fu_1014_p2 <= (icmp_ln29_19_fu_1008_p2 or icmp_ln29_18_fu_1002_p2);
    or_ln29_fu_675_p2 <= (icmp_ln29_fu_663_p2 or icmp_ln29_1_fu_669_p2);
    p_shl10_cast_fu_1452_p3 <= (add_ln36_2_fu_1447_p2 & ap_const_lv3_0);
    p_shl12_cast_fu_915_p3 <= (add_ln29_13_reg_1619 & ap_const_lv3_0);
    p_shl14_cast_fu_570_p3 <= (add_ln29_11_fu_565_p2 & ap_const_lv3_0);
    p_shl16_cast_fu_696_p3 <= (add_ln29_9_reg_1608 & ap_const_lv3_0);
    p_shl18_cast_fu_457_p3 <= (add_ln29_7_fu_452_p2 & ap_const_lv3_0);
    p_shl2_cast_fu_781_p3 <= (add_ln29_5_reg_1602 & ap_const_lv3_0);
    p_shl4_cast_fu_511_p3 <= (add_ln29_3_fu_506_p2 & ap_const_lv3_0);
    p_shl6_cast_fu_611_p3 <= (add_ln29_1_reg_1591 & ap_const_lv3_0);
    p_shl_cast_fu_1319_p3 <= (add_ln36_reg_1661 & ap_const_lv3_0);
    r_fu_1488_p2 <= std_logic_vector(unsigned(select_ln29_8_reg_1502) + unsigned(ap_const_lv4_1));
    select_ln29_1_fu_898_p3 <= 
        reg_251 when (and_ln29_2_fu_892_p2(0) = '1') else 
        select_ln29_reg_1630;
    select_ln29_2_fu_1129_p3 <= 
        reg_251 when (and_ln29_4_fu_1123_p2(0) = '1') else 
        select_ln29_1_reg_1654;
    select_ln29_4_fu_772_p3 <= 
        reg_256 when (and_ln29_7_fu_766_p2(0) = '1') else 
        ap_const_lv32_800000;
    select_ln29_5_fu_1032_p3 <= 
        reg_256 when (and_ln29_9_fu_1026_p2(0) = '1') else 
        select_ln29_4_reg_1642;
    select_ln29_6_fu_1220_p3 <= 
        reg_256 when (and_ln29_11_fu_1214_p2(0) = '1') else 
        select_ln29_5_reg_1672;
    select_ln29_8_fu_285_p3 <= 
        ap_const_lv4_0 when (icmp_ln13_fu_279_p2(0) = '1') else 
        r_0_reg_216;
    select_ln29_9_fu_293_p3 <= 
        f_fu_273_p2 when (icmp_ln13_fu_279_p2(0) = '1') else 
        f_0_reg_205;
    select_ln29_fu_687_p3 <= 
        reg_251 when (and_ln29_fu_681_p2(0) = '1') else 
        ap_const_lv32_800000;
    shl_ln1_fu_353_p3 <= (ap_phi_mux_c_0_0_phi_fu_231_p4 & ap_const_lv1_0);
    shl_ln27_1_fu_440_p3 <= (or_ln16_fu_428_p2 & ap_const_lv1_0);
    shl_ln_fu_309_p3 <= (select_ln29_8_fu_285_p3 & ap_const_lv1_0);
    sub_ln29_1_fu_629_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_611_p3) - unsigned(zext_ln29_5_fu_625_p1));
    sub_ln29_2_fu_531_p2 <= std_logic_vector(unsigned(p_shl4_cast_fu_511_p3) - unsigned(zext_ln29_8_fu_527_p1));
    sub_ln29_3_fu_799_p2 <= std_logic_vector(unsigned(p_shl2_cast_fu_781_p3) - unsigned(zext_ln29_10_fu_795_p1));
    sub_ln29_4_fu_477_p2 <= std_logic_vector(unsigned(p_shl18_cast_fu_457_p3) - unsigned(zext_ln29_13_fu_473_p1));
    sub_ln29_5_fu_714_p2 <= std_logic_vector(unsigned(p_shl16_cast_fu_696_p3) - unsigned(zext_ln29_15_fu_710_p1));
    sub_ln29_6_fu_590_p2 <= std_logic_vector(unsigned(p_shl14_cast_fu_570_p3) - unsigned(zext_ln29_18_fu_586_p1));
    sub_ln29_7_fu_933_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_915_p3) - unsigned(zext_ln29_20_fu_929_p1));
    sub_ln29_fu_394_p2 <= std_logic_vector(unsigned(zext_ln29_3_fu_378_p1) - unsigned(zext_ln29_4_fu_390_p1));
    sub_ln36_1_fu_1472_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_1452_p3) - unsigned(zext_ln36_5_fu_1468_p1));
    sub_ln36_fu_1337_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1319_p3) - unsigned(zext_ln36_2_fu_1333_p1));
    tmp_10_fu_1232_p4 <= bitcast_ln29_5_fu_1228_p1(30 downto 23);
    tmp_11_fu_1249_p4 <= bitcast_ln29_6_fu_1246_p1(30 downto 23);
    tmp_13_fu_734_p4 <= bitcast_ln29_7_fu_730_p1(30 downto 23);
    tmp_15_fu_953_p4 <= bitcast_ln29_8_fu_949_p1(30 downto 23);
    tmp_16_fu_970_p4 <= bitcast_ln29_9_fu_967_p1(30 downto 23);
    tmp_18_fu_1141_p4 <= bitcast_ln29_10_fu_1137_p1(30 downto 23);
    tmp_19_fu_1158_p4 <= bitcast_ln29_11_fu_1155_p1(30 downto 23);
    tmp_21_fu_1357_p4 <= bitcast_ln29_12_fu_1353_p1(30 downto 23);
    tmp_22_fu_1374_p4 <= bitcast_ln29_13_fu_1371_p1(30 downto 23);
    tmp_24_fu_382_p3 <= (add_ln29_fu_365_p2 & ap_const_lv1_0);
    tmp_25_fu_409_p4 <= sub_ln29_fu_394_p2(63 downto 3);
    tmp_26_fu_419_p3 <= (tmp_25_fu_409_p4 & or_ln29_14_fu_404_p2);
    tmp_27_fu_618_p3 <= (add_ln29_1_reg_1591 & ap_const_lv1_0);
    tmp_28_fu_519_p3 <= (add_ln29_3_fu_506_p2 & ap_const_lv1_0);
    tmp_29_fu_788_p3 <= (add_ln29_5_reg_1602 & ap_const_lv1_0);
    tmp_30_fu_1326_p3 <= (add_ln36_reg_1661 & ap_const_lv1_0);
    tmp_31_fu_465_p3 <= (add_ln29_7_fu_452_p2 & ap_const_lv1_0);
    tmp_32_fu_703_p3 <= (add_ln29_9_reg_1608 & ap_const_lv1_0);
    tmp_33_fu_578_p3 <= (add_ln29_11_fu_565_p2 & ap_const_lv1_0);
    tmp_34_fu_922_p3 <= (add_ln29_13_reg_1619 & ap_const_lv1_0);
    tmp_35_fu_1460_p3 <= (add_ln36_2_fu_1447_p2 & ap_const_lv1_0);
    tmp_3_fu_649_p4 <= bitcast_ln29_fu_645_p1(30 downto 23);
    tmp_5_fu_819_p4 <= bitcast_ln29_1_fu_815_p1(30 downto 23);
    tmp_6_fu_836_p4 <= bitcast_ln29_2_fu_833_p1(30 downto 23);
    tmp_8_fu_1050_p4 <= bitcast_ln29_3_fu_1046_p1(30 downto 23);
    tmp_9_fu_1067_p4 <= bitcast_ln29_4_fu_1064_p1(30 downto 23);
    tmp_fu_370_p3 <= (add_ln29_fu_365_p2 & ap_const_lv3_0);
    trunc_ln29_10_fu_980_p1 <= bitcast_ln29_9_fu_967_p1(23 - 1 downto 0);
    trunc_ln29_11_fu_1151_p1 <= bitcast_ln29_10_fu_1137_p1(23 - 1 downto 0);
    trunc_ln29_12_fu_1168_p1 <= bitcast_ln29_11_fu_1155_p1(23 - 1 downto 0);
    trunc_ln29_13_fu_1367_p1 <= bitcast_ln29_12_fu_1353_p1(23 - 1 downto 0);
    trunc_ln29_14_fu_1384_p1 <= bitcast_ln29_13_fu_1371_p1(23 - 1 downto 0);
    trunc_ln29_1_fu_659_p1 <= bitcast_ln29_fu_645_p1(23 - 1 downto 0);
    trunc_ln29_2_fu_829_p1 <= bitcast_ln29_1_fu_815_p1(23 - 1 downto 0);
    trunc_ln29_3_fu_846_p1 <= bitcast_ln29_2_fu_833_p1(23 - 1 downto 0);
    trunc_ln29_4_fu_1060_p1 <= bitcast_ln29_3_fu_1046_p1(23 - 1 downto 0);
    trunc_ln29_5_fu_1077_p1 <= bitcast_ln29_4_fu_1064_p1(23 - 1 downto 0);
    trunc_ln29_6_fu_1242_p1 <= bitcast_ln29_5_fu_1228_p1(23 - 1 downto 0);
    trunc_ln29_7_fu_1259_p1 <= bitcast_ln29_6_fu_1246_p1(23 - 1 downto 0);
    trunc_ln29_8_fu_744_p1 <= bitcast_ln29_7_fu_730_p1(23 - 1 downto 0);
    trunc_ln29_9_fu_963_p1 <= bitcast_ln29_8_fu_949_p1(23 - 1 downto 0);
    trunc_ln29_fu_400_p1 <= sub_ln29_fu_394_p2(3 - 1 downto 0);
    zext_ln14_1_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_9_fu_293_p3),13));
    zext_ln14_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln29_9_fu_293_p3),11));
    zext_ln29_10_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_788_p3),13));
    zext_ln29_11_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_6_fu_805_p2),64));
    zext_ln29_12_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln27_1_fu_440_p3),10));
    zext_ln29_13_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_465_p3),13));
    zext_ln29_14_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_8_fu_483_p2),64));
    zext_ln29_15_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_703_p3),13));
    zext_ln29_16_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_10_fu_720_p2),64));
    zext_ln29_17_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln27_1_fu_556_p2),10));
    zext_ln29_18_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_578_p3),13));
    zext_ln29_19_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_12_fu_596_p2),64));
    zext_ln29_20_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_922_p3),13));
    zext_ln29_21_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_14_fu_939_p2),64));
    zext_ln29_2_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_353_p3),10));
    zext_ln29_3_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_370_p3),64));
    zext_ln29_4_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_382_p3),64));
    zext_ln29_5_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_618_p3),13));
    zext_ln29_6_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_2_fu_635_p2),64));
    zext_ln29_7_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln27_fu_497_p2),10));
    zext_ln29_8_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_519_p3),13));
    zext_ln29_9_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln29_4_fu_537_p2),64));
    zext_ln36_1_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_0_0_reg_227),8));
    zext_ln36_2_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1326_p3),11));
    zext_ln36_3_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_1_fu_1343_p2),64));
    zext_ln36_4_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln16_reg_1567_pp0_iter1_reg),8));
    zext_ln36_5_fu_1468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1460_p3),11));
    zext_ln36_6_fu_1483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln36_3_fu_1478_p2),64));
end behav;
