// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=12.538400,HLS_SYN_LAT=2497,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=531,HLS_SYN_LUT=1970,HLS_VERSION=2019_1}" *)

module max_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_out_address0,
        conv_out_ce0,
        conv_out_q0,
        conv_out_address1,
        conv_out_ce1,
        conv_out_q1,
        max_pool_out_address0,
        max_pool_out_ce0,
        max_pool_out_we0,
        max_pool_out_d0,
        max_pool_out_address1,
        max_pool_out_ce1,
        max_pool_out_we1,
        max_pool_out_d1
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_pp0_stage1 = 7'd8;
parameter    ap_ST_fsm_pp0_stage2 = 7'd16;
parameter    ap_ST_fsm_pp0_stage3 = 7'd32;
parameter    ap_ST_fsm_state9 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] conv_out_address0;
output   conv_out_ce0;
input  [31:0] conv_out_q0;
output  [11:0] conv_out_address1;
output   conv_out_ce1;
input  [31:0] conv_out_q1;
output  [9:0] max_pool_out_address0;
output   max_pool_out_ce0;
output   max_pool_out_we0;
output  [31:0] max_pool_out_d0;
output  [9:0] max_pool_out_address1;
output   max_pool_out_ce1;
output   max_pool_out_we1;
output  [31:0] max_pool_out_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] conv_out_address0;
reg conv_out_ce0;
reg[11:0] conv_out_address1;
reg conv_out_ce1;
reg max_pool_out_ce0;
reg max_pool_out_we0;
reg max_pool_out_ce1;
reg max_pool_out_we1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] c_0_0_reg_227;
reg   [31:0] reg_251;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_256;
reg   [0:0] icmp_ln16_reg_1572;
wire   [0:0] icmp_ln10_fu_261_p2;
wire    ap_CS_fsm_state2;
wire   [6:0] add_ln10_fu_267_p2;
reg   [6:0] add_ln10_reg_1497;
wire   [3:0] select_ln29_8_fu_285_p3;
reg   [3:0] select_ln29_8_reg_1502;
wire   [2:0] select_ln29_9_fu_293_p3;
reg   [2:0] select_ln29_9_reg_1507;
wire   [10:0] zext_ln14_fu_301_p1;
reg   [10:0] zext_ln14_reg_1513;
wire   [12:0] zext_ln14_1_fu_305_p1;
reg   [12:0] zext_ln14_1_reg_1519;
wire   [7:0] mul_ln36_fu_321_p2;
reg   [7:0] mul_ln36_reg_1530;
wire   [9:0] mul_ln29_fu_331_p2;
reg   [9:0] mul_ln29_reg_1536;
wire   [9:0] mul_ln29_1_fu_347_p2;
reg   [9:0] mul_ln29_1_reg_1544;
wire   [4:0] shl_ln1_fu_353_p3;
reg   [4:0] shl_ln1_reg_1552;
wire   [9:0] zext_ln29_2_fu_361_p1;
reg   [9:0] zext_ln29_2_reg_1557;
wire   [3:0] or_ln16_fu_428_p2;
reg   [3:0] or_ln16_reg_1567;
reg   [3:0] or_ln16_reg_1567_pp0_iter1_reg;
wire   [0:0] icmp_ln16_fu_434_p2;
reg   [0:0] icmp_ln16_reg_1572_pp0_iter1_reg;
wire   [4:0] shl_ln27_1_fu_440_p3;
reg   [4:0] shl_ln27_1_reg_1576;
wire   [9:0] zext_ln29_12_fu_448_p1;
reg   [9:0] zext_ln29_12_reg_1581;
wire   [9:0] add_ln29_1_fu_493_p2;
reg   [9:0] add_ln29_1_reg_1591;
wire   [9:0] add_ln29_5_fu_547_p2;
reg   [9:0] add_ln29_5_reg_1602;
wire   [9:0] add_ln29_9_fu_552_p2;
reg   [9:0] add_ln29_9_reg_1608;
wire   [9:0] add_ln29_13_fu_606_p2;
reg   [9:0] add_ln29_13_reg_1619;
wire   [31:0] select_ln29_fu_687_p3;
reg   [31:0] select_ln29_reg_1630;
wire   [31:0] select_ln29_4_fu_772_p3;
reg   [31:0] select_ln29_4_reg_1642;
wire   [31:0] select_ln29_1_fu_898_p3;
reg   [31:0] select_ln29_1_reg_1654;
wire   [7:0] add_ln36_fu_910_p2;
reg   [7:0] add_ln36_reg_1661;
wire   [31:0] select_ln29_5_fu_1032_p3;
reg   [31:0] select_ln29_5_reg_1672;
wire   [3:0] add_ln16_fu_1040_p2;
reg   [3:0] add_ln16_reg_1679;
wire   [31:0] select_ln29_2_fu_1129_p3;
reg   [31:0] select_ln29_2_reg_1684;
wire   [31:0] select_ln29_6_fu_1220_p3;
reg   [31:0] select_ln29_6_reg_1691;
wire   [3:0] r_fu_1488_p2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage1_subdone;
reg   [6:0] indvar_flatten_reg_194;
reg   [2:0] f_0_reg_205;
reg   [3:0] r_0_reg_216;
reg   [3:0] ap_phi_mux_c_0_0_phi_fu_231_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] tmp_26_fu_419_p3;
wire   [63:0] zext_ln29_14_fu_488_p1;
wire   [63:0] zext_ln29_9_fu_542_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln29_19_fu_601_p1;
wire   [63:0] zext_ln29_6_fu_640_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln29_16_fu_725_p1;
wire   [63:0] zext_ln29_11_fu_810_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln29_21_fu_944_p1;
wire   [63:0] zext_ln36_3_fu_1348_p1;
wire   [63:0] zext_ln36_6_fu_1483_p1;
reg   [31:0] grp_fu_239_p1;
reg   [31:0] grp_fu_245_p1;
wire   [0:0] icmp_ln13_fu_279_p2;
wire   [2:0] f_fu_273_p2;
wire   [3:0] mul_ln36_fu_321_p0;
wire   [4:0] shl_ln_fu_309_p3;
wire   [4:0] mul_ln29_fu_331_p0;
wire   [4:0] or_ln26_fu_337_p2;
wire   [4:0] mul_ln29_1_fu_347_p0;
wire   [9:0] add_ln29_fu_365_p2;
wire   [12:0] tmp_fu_370_p3;
wire   [10:0] tmp_24_fu_382_p3;
wire   [63:0] zext_ln29_3_fu_378_p1;
wire   [63:0] zext_ln29_4_fu_390_p1;
wire   [63:0] sub_ln29_fu_394_p2;
wire   [2:0] trunc_ln29_fu_400_p1;
wire   [60:0] tmp_25_fu_409_p4;
wire   [2:0] or_ln29_14_fu_404_p2;
wire   [9:0] add_ln29_7_fu_452_p2;
wire   [10:0] tmp_31_fu_465_p3;
wire   [12:0] p_shl18_cast_fu_457_p3;
wire   [12:0] zext_ln29_13_fu_473_p1;
wire   [12:0] sub_ln29_4_fu_477_p2;
wire   [12:0] add_ln29_8_fu_483_p2;
wire   [4:0] or_ln27_fu_497_p2;
wire   [9:0] zext_ln29_7_fu_502_p1;
wire   [9:0] add_ln29_3_fu_506_p2;
wire   [10:0] tmp_28_fu_519_p3;
wire   [12:0] p_shl4_cast_fu_511_p3;
wire   [12:0] zext_ln29_8_fu_527_p1;
wire   [12:0] sub_ln29_2_fu_531_p2;
wire   [12:0] add_ln29_4_fu_537_p2;
wire   [4:0] or_ln27_1_fu_556_p2;
wire   [9:0] zext_ln29_17_fu_561_p1;
wire   [9:0] add_ln29_11_fu_565_p2;
wire   [10:0] tmp_33_fu_578_p3;
wire   [12:0] p_shl14_cast_fu_570_p3;
wire   [12:0] zext_ln29_18_fu_586_p1;
wire   [12:0] sub_ln29_6_fu_590_p2;
wire   [12:0] add_ln29_12_fu_596_p2;
wire   [10:0] tmp_27_fu_618_p3;
wire   [12:0] p_shl6_cast_fu_611_p3;
wire   [12:0] zext_ln29_5_fu_625_p1;
wire   [12:0] sub_ln29_1_fu_629_p2;
wire   [12:0] add_ln29_2_fu_635_p2;
wire   [31:0] bitcast_ln29_fu_645_p1;
wire   [7:0] tmp_3_fu_649_p4;
wire   [22:0] trunc_ln29_1_fu_659_p1;
wire   [0:0] icmp_ln29_1_fu_669_p2;
wire   [0:0] icmp_ln29_fu_663_p2;
wire   [0:0] or_ln29_fu_675_p2;
wire   [0:0] grp_fu_239_p2;
wire   [0:0] and_ln29_fu_681_p2;
wire   [10:0] tmp_32_fu_703_p3;
wire   [12:0] p_shl16_cast_fu_696_p3;
wire   [12:0] zext_ln29_15_fu_710_p1;
wire   [12:0] sub_ln29_5_fu_714_p2;
wire   [12:0] add_ln29_10_fu_720_p2;
wire   [31:0] bitcast_ln29_7_fu_730_p1;
wire   [7:0] tmp_13_fu_734_p4;
wire   [22:0] trunc_ln29_8_fu_744_p1;
wire   [0:0] icmp_ln29_15_fu_754_p2;
wire   [0:0] icmp_ln29_14_fu_748_p2;
wire   [0:0] or_ln29_7_fu_760_p2;
wire   [0:0] grp_fu_245_p2;
wire   [0:0] and_ln29_7_fu_766_p2;
wire   [10:0] tmp_29_fu_788_p3;
wire   [12:0] p_shl2_cast_fu_781_p3;
wire   [12:0] zext_ln29_10_fu_795_p1;
wire   [12:0] sub_ln29_3_fu_799_p2;
wire   [12:0] add_ln29_6_fu_805_p2;
wire   [31:0] bitcast_ln29_1_fu_815_p1;
wire   [31:0] bitcast_ln29_2_fu_833_p1;
wire   [7:0] tmp_5_fu_819_p4;
wire   [22:0] trunc_ln29_2_fu_829_p1;
wire   [0:0] icmp_ln29_3_fu_856_p2;
wire   [0:0] icmp_ln29_2_fu_850_p2;
wire   [7:0] tmp_6_fu_836_p4;
wire   [22:0] trunc_ln29_3_fu_846_p1;
wire   [0:0] icmp_ln29_5_fu_874_p2;
wire   [0:0] icmp_ln29_4_fu_868_p2;
wire   [0:0] or_ln29_1_fu_862_p2;
wire   [0:0] or_ln29_2_fu_880_p2;
wire   [0:0] and_ln29_1_fu_886_p2;
wire   [0:0] and_ln29_2_fu_892_p2;
wire   [7:0] zext_ln36_1_fu_906_p1;
wire   [10:0] tmp_34_fu_922_p3;
wire   [12:0] p_shl12_cast_fu_915_p3;
wire   [12:0] zext_ln29_20_fu_929_p1;
wire   [12:0] sub_ln29_7_fu_933_p2;
wire   [12:0] add_ln29_14_fu_939_p2;
wire   [31:0] bitcast_ln29_8_fu_949_p1;
wire   [31:0] bitcast_ln29_9_fu_967_p1;
wire   [7:0] tmp_15_fu_953_p4;
wire   [22:0] trunc_ln29_9_fu_963_p1;
wire   [0:0] icmp_ln29_17_fu_990_p2;
wire   [0:0] icmp_ln29_16_fu_984_p2;
wire   [7:0] tmp_16_fu_970_p4;
wire   [22:0] trunc_ln29_10_fu_980_p1;
wire   [0:0] icmp_ln29_19_fu_1008_p2;
wire   [0:0] icmp_ln29_18_fu_1002_p2;
wire   [0:0] or_ln29_8_fu_996_p2;
wire   [0:0] or_ln29_9_fu_1014_p2;
wire   [0:0] and_ln29_8_fu_1020_p2;
wire   [0:0] and_ln29_9_fu_1026_p2;
wire   [31:0] bitcast_ln29_3_fu_1046_p1;
wire   [31:0] bitcast_ln29_4_fu_1064_p1;
wire   [7:0] tmp_8_fu_1050_p4;
wire   [22:0] trunc_ln29_4_fu_1060_p1;
wire   [0:0] icmp_ln29_7_fu_1087_p2;
wire   [0:0] icmp_ln29_6_fu_1081_p2;
wire   [7:0] tmp_9_fu_1067_p4;
wire   [22:0] trunc_ln29_5_fu_1077_p1;
wire   [0:0] icmp_ln29_9_fu_1105_p2;
wire   [0:0] icmp_ln29_8_fu_1099_p2;
wire   [0:0] or_ln29_3_fu_1093_p2;
wire   [0:0] or_ln29_4_fu_1111_p2;
wire   [0:0] and_ln29_3_fu_1117_p2;
wire   [0:0] and_ln29_4_fu_1123_p2;
wire   [31:0] bitcast_ln29_10_fu_1137_p1;
wire   [31:0] bitcast_ln29_11_fu_1155_p1;
wire   [7:0] tmp_18_fu_1141_p4;
wire   [22:0] trunc_ln29_11_fu_1151_p1;
wire   [0:0] icmp_ln29_21_fu_1178_p2;
wire   [0:0] icmp_ln29_20_fu_1172_p2;
wire   [7:0] tmp_19_fu_1158_p4;
wire   [22:0] trunc_ln29_12_fu_1168_p1;
wire   [0:0] icmp_ln29_23_fu_1196_p2;
wire   [0:0] icmp_ln29_22_fu_1190_p2;
wire   [0:0] or_ln29_10_fu_1184_p2;
wire   [0:0] or_ln29_11_fu_1202_p2;
wire   [0:0] and_ln29_10_fu_1208_p2;
wire   [0:0] and_ln29_11_fu_1214_p2;
wire   [31:0] bitcast_ln29_5_fu_1228_p1;
wire   [31:0] bitcast_ln29_6_fu_1246_p1;
wire   [7:0] tmp_10_fu_1232_p4;
wire   [22:0] trunc_ln29_6_fu_1242_p1;
wire   [0:0] icmp_ln29_11_fu_1269_p2;
wire   [0:0] icmp_ln29_10_fu_1263_p2;
wire   [7:0] tmp_11_fu_1249_p4;
wire   [22:0] trunc_ln29_7_fu_1259_p1;
wire   [0:0] icmp_ln29_13_fu_1287_p2;
wire   [0:0] icmp_ln29_12_fu_1281_p2;
wire   [0:0] or_ln29_5_fu_1275_p2;
wire   [0:0] or_ln29_6_fu_1293_p2;
wire   [0:0] and_ln29_5_fu_1299_p2;
wire   [0:0] and_ln29_6_fu_1305_p2;
wire   [8:0] tmp_30_fu_1326_p3;
wire   [10:0] p_shl_cast_fu_1319_p3;
wire   [10:0] zext_ln36_2_fu_1333_p1;
wire   [10:0] sub_ln36_fu_1337_p2;
wire   [10:0] add_ln36_1_fu_1343_p2;
wire   [31:0] bitcast_ln29_12_fu_1353_p1;
wire   [31:0] bitcast_ln29_13_fu_1371_p1;
wire   [7:0] tmp_21_fu_1357_p4;
wire   [22:0] trunc_ln29_13_fu_1367_p1;
wire   [0:0] icmp_ln29_25_fu_1394_p2;
wire   [0:0] icmp_ln29_24_fu_1388_p2;
wire   [7:0] tmp_22_fu_1374_p4;
wire   [22:0] trunc_ln29_14_fu_1384_p1;
wire   [0:0] icmp_ln29_27_fu_1412_p2;
wire   [0:0] icmp_ln29_26_fu_1406_p2;
wire   [0:0] or_ln29_12_fu_1400_p2;
wire   [0:0] or_ln29_13_fu_1418_p2;
wire   [0:0] and_ln29_12_fu_1424_p2;
wire   [0:0] and_ln29_13_fu_1430_p2;
wire   [7:0] zext_ln36_4_fu_1444_p1;
wire   [7:0] add_ln36_2_fu_1447_p2;
wire   [8:0] tmp_35_fu_1460_p3;
wire   [10:0] p_shl10_cast_fu_1452_p3;
wire   [10:0] zext_ln36_5_fu_1468_p1;
wire   [10:0] sub_ln36_1_fu_1472_p2;
wire   [10:0] add_ln36_3_fu_1478_p2;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] mul_ln29_1_fu_347_p00;
wire   [9:0] mul_ln29_fu_331_p00;
wire   [7:0] mul_ln36_fu_321_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

max_pool_fcmp_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_fcmp_32nbkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_out_q0),
    .din1(grp_fu_239_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_239_p2)
);

max_pool_fcmp_32nbkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_fcmp_32nbkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_out_q1),
    .din1(grp_fu_245_p1),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_245_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln16_reg_1572 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_reg_1572 == 1'd0))) begin
        c_0_0_reg_227 <= add_ln16_reg_1679;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd0))) begin
        c_0_0_reg_227 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        f_0_reg_205 <= select_ln29_9_reg_1507;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        f_0_reg_205 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_flatten_reg_194 <= add_ln10_reg_1497;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_194 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        r_0_reg_216 <= r_fu_1488_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_reg_216 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln10_reg_1497 <= add_ln10_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_reg_1572 == 1'd0))) begin
        add_ln16_reg_1679 <= add_ln16_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_1572 == 1'd0))) begin
        add_ln29_13_reg_1619[9 : 1] <= add_ln29_13_fu_606_p2[9 : 1];
        add_ln29_9_reg_1608[9 : 1] <= add_ln29_9_fu_552_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln29_1_reg_1591[9 : 1] <= add_ln29_1_fu_493_p2[9 : 1];
        add_ln29_5_reg_1602[9 : 1] <= add_ln29_5_fu_547_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln36_reg_1661 <= add_ln36_fu_910_p2;
        select_ln29_1_reg_1654 <= select_ln29_1_fu_898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln16_reg_1572 <= icmp_ln16_fu_434_p2;
        icmp_ln16_reg_1572_pp0_iter1_reg <= icmp_ln16_reg_1572;
        or_ln16_reg_1567[3 : 1] <= or_ln16_fu_428_p2[3 : 1];
        or_ln16_reg_1567_pp0_iter1_reg[3 : 1] <= or_ln16_reg_1567[3 : 1];
        select_ln29_2_reg_1684 <= select_ln29_2_fu_1129_p3;
        shl_ln1_reg_1552[4 : 1] <= shl_ln1_fu_353_p3[4 : 1];
        zext_ln29_2_reg_1557[4 : 1] <= zext_ln29_2_fu_361_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd0))) begin
        mul_ln29_1_reg_1544[9 : 1] <= mul_ln29_1_fu_347_p2[9 : 1];
        mul_ln29_reg_1536[9 : 1] <= mul_ln29_fu_331_p2[9 : 1];
        mul_ln36_reg_1530 <= mul_ln36_fu_321_p2;
        select_ln29_8_reg_1502 <= select_ln29_8_fu_285_p3;
        select_ln29_9_reg_1507 <= select_ln29_9_fu_293_p3;
        zext_ln14_1_reg_1519[2 : 0] <= zext_ln14_1_fu_305_p1[2 : 0];
        zext_ln14_reg_1513[2 : 0] <= zext_ln14_fu_301_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_251 <= conv_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_reg_1572 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_reg_1572 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln16_reg_1572 == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_1572 == 1'd0)))) begin
        reg_256 <= conv_out_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln16_reg_1572 == 1'd0))) begin
        select_ln29_4_reg_1642 <= select_ln29_4_fu_772_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln16_reg_1572 == 1'd0))) begin
        select_ln29_5_reg_1672 <= select_ln29_5_fu_1032_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_reg_1572 == 1'd0))) begin
        select_ln29_6_reg_1691 <= select_ln29_6_fu_1220_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln29_reg_1630 <= select_ln29_fu_687_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_fu_434_p2 == 1'd0))) begin
        shl_ln27_1_reg_1576[4 : 2] <= shl_ln27_1_fu_440_p3[4 : 2];
        zext_ln29_12_reg_1581[4 : 2] <= zext_ln29_12_fu_448_p1[4 : 2];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln16_reg_1572 == 1'd0))) begin
        ap_phi_mux_c_0_0_phi_fu_231_p4 = add_ln16_reg_1679;
    end else begin
        ap_phi_mux_c_0_0_phi_fu_231_p4 = c_0_0_reg_227;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_address0 = zext_ln29_11_fu_810_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_out_address0 = zext_ln29_6_fu_640_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_address0 = zext_ln29_9_fu_542_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_address0 = tmp_26_fu_419_p3;
        end else begin
            conv_out_address0 = 'bx;
        end
    end else begin
        conv_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv_out_address1 = zext_ln29_21_fu_944_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            conv_out_address1 = zext_ln29_16_fu_725_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv_out_address1 = zext_ln29_19_fu_601_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv_out_address1 = zext_ln29_14_fu_488_p1;
        end else begin
            conv_out_address1 = 'bx;
        end
    end else begin
        conv_out_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_out_ce0 = 1'b1;
    end else begin
        conv_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        conv_out_ce1 = 1'b1;
    end else begin
        conv_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_239_p1 = select_ln29_2_fu_1129_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_239_p1 = select_ln29_1_fu_898_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_239_p1 = select_ln29_fu_687_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_239_p1 = 32'd8388608;
    end else begin
        grp_fu_239_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_245_p1 = select_ln29_6_fu_1220_p3;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_245_p1 = select_ln29_5_fu_1032_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_245_p1 = select_ln29_4_fu_772_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_245_p1 = 32'd8388608;
    end else begin
        grp_fu_245_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        max_pool_out_ce0 = 1'b1;
    end else begin
        max_pool_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        max_pool_out_ce1 = 1'b1;
    end else begin
        max_pool_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        max_pool_out_we0 = 1'b1;
    end else begin
        max_pool_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln16_reg_1572_pp0_iter1_reg == 1'd0))) begin
        max_pool_out_we1 = 1'b1;
    end else begin
        max_pool_out_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln10_fu_261_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln10_fu_267_p2 = (indvar_flatten_reg_194 + 7'd1);

assign add_ln16_fu_1040_p2 = (4'd2 + c_0_0_reg_227);

assign add_ln29_10_fu_720_p2 = (zext_ln14_1_reg_1519 + sub_ln29_5_fu_714_p2);

assign add_ln29_11_fu_565_p2 = (zext_ln29_17_fu_561_p1 + mul_ln29_reg_1536);

assign add_ln29_12_fu_596_p2 = (zext_ln14_1_reg_1519 + sub_ln29_6_fu_590_p2);

assign add_ln29_13_fu_606_p2 = (zext_ln29_17_fu_561_p1 + mul_ln29_1_reg_1544);

assign add_ln29_14_fu_939_p2 = (zext_ln14_1_reg_1519 + sub_ln29_7_fu_933_p2);

assign add_ln29_1_fu_493_p2 = (zext_ln29_2_reg_1557 + mul_ln29_1_reg_1544);

assign add_ln29_2_fu_635_p2 = (zext_ln14_1_reg_1519 + sub_ln29_1_fu_629_p2);

assign add_ln29_3_fu_506_p2 = (zext_ln29_7_fu_502_p1 + mul_ln29_reg_1536);

assign add_ln29_4_fu_537_p2 = (zext_ln14_1_reg_1519 + sub_ln29_2_fu_531_p2);

assign add_ln29_5_fu_547_p2 = (zext_ln29_7_fu_502_p1 + mul_ln29_1_reg_1544);

assign add_ln29_6_fu_805_p2 = (zext_ln14_1_reg_1519 + sub_ln29_3_fu_799_p2);

assign add_ln29_7_fu_452_p2 = (zext_ln29_12_fu_448_p1 + mul_ln29_reg_1536);

assign add_ln29_8_fu_483_p2 = (zext_ln14_1_reg_1519 + sub_ln29_4_fu_477_p2);

assign add_ln29_9_fu_552_p2 = (zext_ln29_12_reg_1581 + mul_ln29_1_reg_1544);

assign add_ln29_fu_365_p2 = (zext_ln29_2_fu_361_p1 + mul_ln29_reg_1536);

assign add_ln36_1_fu_1343_p2 = (zext_ln14_reg_1513 + sub_ln36_fu_1337_p2);

assign add_ln36_2_fu_1447_p2 = (zext_ln36_4_fu_1444_p1 + mul_ln36_reg_1530);

assign add_ln36_3_fu_1478_p2 = (zext_ln14_reg_1513 + sub_ln36_1_fu_1472_p2);

assign add_ln36_fu_910_p2 = (zext_ln36_1_fu_906_p1 + mul_ln36_reg_1530);

assign and_ln29_10_fu_1208_p2 = (or_ln29_11_fu_1202_p2 & or_ln29_10_fu_1184_p2);

assign and_ln29_11_fu_1214_p2 = (grp_fu_245_p2 & and_ln29_10_fu_1208_p2);

assign and_ln29_12_fu_1424_p2 = (or_ln29_13_fu_1418_p2 & or_ln29_12_fu_1400_p2);

assign and_ln29_13_fu_1430_p2 = (grp_fu_245_p2 & and_ln29_12_fu_1424_p2);

assign and_ln29_1_fu_886_p2 = (or_ln29_2_fu_880_p2 & or_ln29_1_fu_862_p2);

assign and_ln29_2_fu_892_p2 = (grp_fu_239_p2 & and_ln29_1_fu_886_p2);

assign and_ln29_3_fu_1117_p2 = (or_ln29_4_fu_1111_p2 & or_ln29_3_fu_1093_p2);

assign and_ln29_4_fu_1123_p2 = (grp_fu_239_p2 & and_ln29_3_fu_1117_p2);

assign and_ln29_5_fu_1299_p2 = (or_ln29_6_fu_1293_p2 & or_ln29_5_fu_1275_p2);

assign and_ln29_6_fu_1305_p2 = (grp_fu_239_p2 & and_ln29_5_fu_1299_p2);

assign and_ln29_7_fu_766_p2 = (or_ln29_7_fu_760_p2 & grp_fu_245_p2);

assign and_ln29_8_fu_1020_p2 = (or_ln29_9_fu_1014_p2 & or_ln29_8_fu_996_p2);

assign and_ln29_9_fu_1026_p2 = (grp_fu_245_p2 & and_ln29_8_fu_1020_p2);

assign and_ln29_fu_681_p2 = (or_ln29_fu_675_p2 & grp_fu_239_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln29_10_fu_1137_p1 = reg_256;

assign bitcast_ln29_11_fu_1155_p1 = select_ln29_5_reg_1672;

assign bitcast_ln29_12_fu_1353_p1 = reg_256;

assign bitcast_ln29_13_fu_1371_p1 = select_ln29_6_reg_1691;

assign bitcast_ln29_1_fu_815_p1 = reg_251;

assign bitcast_ln29_2_fu_833_p1 = select_ln29_reg_1630;

assign bitcast_ln29_3_fu_1046_p1 = reg_251;

assign bitcast_ln29_4_fu_1064_p1 = select_ln29_1_reg_1654;

assign bitcast_ln29_5_fu_1228_p1 = reg_251;

assign bitcast_ln29_6_fu_1246_p1 = select_ln29_2_reg_1684;

assign bitcast_ln29_7_fu_730_p1 = reg_256;

assign bitcast_ln29_8_fu_949_p1 = reg_256;

assign bitcast_ln29_9_fu_967_p1 = select_ln29_4_reg_1642;

assign bitcast_ln29_fu_645_p1 = reg_251;

assign f_fu_273_p2 = (f_0_reg_205 + 3'd1);

assign icmp_ln10_fu_261_p2 = ((indvar_flatten_reg_194 == 7'd78) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_279_p2 = ((r_0_reg_216 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln16_fu_434_p2 = ((or_ln16_fu_428_p2 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln29_10_fu_1263_p2 = ((tmp_10_fu_1232_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_11_fu_1269_p2 = ((trunc_ln29_6_fu_1242_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_12_fu_1281_p2 = ((tmp_11_fu_1249_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_13_fu_1287_p2 = ((trunc_ln29_7_fu_1259_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_14_fu_748_p2 = ((tmp_13_fu_734_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_15_fu_754_p2 = ((trunc_ln29_8_fu_744_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_16_fu_984_p2 = ((tmp_15_fu_953_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_17_fu_990_p2 = ((trunc_ln29_9_fu_963_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_18_fu_1002_p2 = ((tmp_16_fu_970_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_19_fu_1008_p2 = ((trunc_ln29_10_fu_980_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_1_fu_669_p2 = ((trunc_ln29_1_fu_659_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_20_fu_1172_p2 = ((tmp_18_fu_1141_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_21_fu_1178_p2 = ((trunc_ln29_11_fu_1151_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_22_fu_1190_p2 = ((tmp_19_fu_1158_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_23_fu_1196_p2 = ((trunc_ln29_12_fu_1168_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_24_fu_1388_p2 = ((tmp_21_fu_1357_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_25_fu_1394_p2 = ((trunc_ln29_13_fu_1367_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_26_fu_1406_p2 = ((tmp_22_fu_1374_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_27_fu_1412_p2 = ((trunc_ln29_14_fu_1384_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_2_fu_850_p2 = ((tmp_5_fu_819_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_3_fu_856_p2 = ((trunc_ln29_2_fu_829_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_4_fu_868_p2 = ((tmp_6_fu_836_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_5_fu_874_p2 = ((trunc_ln29_3_fu_846_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_6_fu_1081_p2 = ((tmp_8_fu_1050_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_7_fu_1087_p2 = ((trunc_ln29_4_fu_1060_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_8_fu_1099_p2 = ((tmp_9_fu_1067_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln29_9_fu_1105_p2 = ((trunc_ln29_5_fu_1077_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_663_p2 = ((tmp_3_fu_649_p4 != 8'd255) ? 1'b1 : 1'b0);

assign max_pool_out_address0 = zext_ln36_3_fu_1348_p1;

assign max_pool_out_address1 = zext_ln36_6_fu_1483_p1;

assign max_pool_out_d0 = ((and_ln29_6_fu_1305_p2[0:0] === 1'b1) ? reg_251 : select_ln29_2_reg_1684);

assign max_pool_out_d1 = ((and_ln29_13_fu_1430_p2[0:0] === 1'b1) ? reg_256 : select_ln29_6_reg_1691);

assign mul_ln29_1_fu_347_p0 = mul_ln29_1_fu_347_p00;

assign mul_ln29_1_fu_347_p00 = or_ln26_fu_337_p2;

assign mul_ln29_1_fu_347_p2 = (mul_ln29_1_fu_347_p0 * $signed('h1A));

assign mul_ln29_fu_331_p0 = mul_ln29_fu_331_p00;

assign mul_ln29_fu_331_p00 = shl_ln_fu_309_p3;

assign mul_ln29_fu_331_p2 = (mul_ln29_fu_331_p0 * $signed('h1A));

assign mul_ln36_fu_321_p0 = mul_ln36_fu_321_p00;

assign mul_ln36_fu_321_p00 = select_ln29_8_fu_285_p3;

assign mul_ln36_fu_321_p2 = (mul_ln36_fu_321_p0 * $signed('hD));

assign or_ln16_fu_428_p2 = (ap_phi_mux_c_0_0_phi_fu_231_p4 | 4'd1);

assign or_ln26_fu_337_p2 = (shl_ln_fu_309_p3 | 5'd1);

assign or_ln27_1_fu_556_p2 = (shl_ln27_1_reg_1576 | 5'd1);

assign or_ln27_fu_497_p2 = (shl_ln1_reg_1552 | 5'd1);

assign or_ln29_10_fu_1184_p2 = (icmp_ln29_21_fu_1178_p2 | icmp_ln29_20_fu_1172_p2);

assign or_ln29_11_fu_1202_p2 = (icmp_ln29_23_fu_1196_p2 | icmp_ln29_22_fu_1190_p2);

assign or_ln29_12_fu_1400_p2 = (icmp_ln29_25_fu_1394_p2 | icmp_ln29_24_fu_1388_p2);

assign or_ln29_13_fu_1418_p2 = (icmp_ln29_27_fu_1412_p2 | icmp_ln29_26_fu_1406_p2);

assign or_ln29_14_fu_404_p2 = (trunc_ln29_fu_400_p1 | select_ln29_9_reg_1507);

assign or_ln29_1_fu_862_p2 = (icmp_ln29_3_fu_856_p2 | icmp_ln29_2_fu_850_p2);

assign or_ln29_2_fu_880_p2 = (icmp_ln29_5_fu_874_p2 | icmp_ln29_4_fu_868_p2);

assign or_ln29_3_fu_1093_p2 = (icmp_ln29_7_fu_1087_p2 | icmp_ln29_6_fu_1081_p2);

assign or_ln29_4_fu_1111_p2 = (icmp_ln29_9_fu_1105_p2 | icmp_ln29_8_fu_1099_p2);

assign or_ln29_5_fu_1275_p2 = (icmp_ln29_11_fu_1269_p2 | icmp_ln29_10_fu_1263_p2);

assign or_ln29_6_fu_1293_p2 = (icmp_ln29_13_fu_1287_p2 | icmp_ln29_12_fu_1281_p2);

assign or_ln29_7_fu_760_p2 = (icmp_ln29_15_fu_754_p2 | icmp_ln29_14_fu_748_p2);

assign or_ln29_8_fu_996_p2 = (icmp_ln29_17_fu_990_p2 | icmp_ln29_16_fu_984_p2);

assign or_ln29_9_fu_1014_p2 = (icmp_ln29_19_fu_1008_p2 | icmp_ln29_18_fu_1002_p2);

assign or_ln29_fu_675_p2 = (icmp_ln29_fu_663_p2 | icmp_ln29_1_fu_669_p2);

assign p_shl10_cast_fu_1452_p3 = {{add_ln36_2_fu_1447_p2}, {3'd0}};

assign p_shl12_cast_fu_915_p3 = {{add_ln29_13_reg_1619}, {3'd0}};

assign p_shl14_cast_fu_570_p3 = {{add_ln29_11_fu_565_p2}, {3'd0}};

assign p_shl16_cast_fu_696_p3 = {{add_ln29_9_reg_1608}, {3'd0}};

assign p_shl18_cast_fu_457_p3 = {{add_ln29_7_fu_452_p2}, {3'd0}};

assign p_shl2_cast_fu_781_p3 = {{add_ln29_5_reg_1602}, {3'd0}};

assign p_shl4_cast_fu_511_p3 = {{add_ln29_3_fu_506_p2}, {3'd0}};

assign p_shl6_cast_fu_611_p3 = {{add_ln29_1_reg_1591}, {3'd0}};

assign p_shl_cast_fu_1319_p3 = {{add_ln36_reg_1661}, {3'd0}};

assign r_fu_1488_p2 = (select_ln29_8_reg_1502 + 4'd1);

assign select_ln29_1_fu_898_p3 = ((and_ln29_2_fu_892_p2[0:0] === 1'b1) ? reg_251 : select_ln29_reg_1630);

assign select_ln29_2_fu_1129_p3 = ((and_ln29_4_fu_1123_p2[0:0] === 1'b1) ? reg_251 : select_ln29_1_reg_1654);

assign select_ln29_4_fu_772_p3 = ((and_ln29_7_fu_766_p2[0:0] === 1'b1) ? reg_256 : 32'd8388608);

assign select_ln29_5_fu_1032_p3 = ((and_ln29_9_fu_1026_p2[0:0] === 1'b1) ? reg_256 : select_ln29_4_reg_1642);

assign select_ln29_6_fu_1220_p3 = ((and_ln29_11_fu_1214_p2[0:0] === 1'b1) ? reg_256 : select_ln29_5_reg_1672);

assign select_ln29_8_fu_285_p3 = ((icmp_ln13_fu_279_p2[0:0] === 1'b1) ? 4'd0 : r_0_reg_216);

assign select_ln29_9_fu_293_p3 = ((icmp_ln13_fu_279_p2[0:0] === 1'b1) ? f_fu_273_p2 : f_0_reg_205);

assign select_ln29_fu_687_p3 = ((and_ln29_fu_681_p2[0:0] === 1'b1) ? reg_251 : 32'd8388608);

assign shl_ln1_fu_353_p3 = {{ap_phi_mux_c_0_0_phi_fu_231_p4}, {1'd0}};

assign shl_ln27_1_fu_440_p3 = {{or_ln16_fu_428_p2}, {1'd0}};

assign shl_ln_fu_309_p3 = {{select_ln29_8_fu_285_p3}, {1'd0}};

assign sub_ln29_1_fu_629_p2 = (p_shl6_cast_fu_611_p3 - zext_ln29_5_fu_625_p1);

assign sub_ln29_2_fu_531_p2 = (p_shl4_cast_fu_511_p3 - zext_ln29_8_fu_527_p1);

assign sub_ln29_3_fu_799_p2 = (p_shl2_cast_fu_781_p3 - zext_ln29_10_fu_795_p1);

assign sub_ln29_4_fu_477_p2 = (p_shl18_cast_fu_457_p3 - zext_ln29_13_fu_473_p1);

assign sub_ln29_5_fu_714_p2 = (p_shl16_cast_fu_696_p3 - zext_ln29_15_fu_710_p1);

assign sub_ln29_6_fu_590_p2 = (p_shl14_cast_fu_570_p3 - zext_ln29_18_fu_586_p1);

assign sub_ln29_7_fu_933_p2 = (p_shl12_cast_fu_915_p3 - zext_ln29_20_fu_929_p1);

assign sub_ln29_fu_394_p2 = (zext_ln29_3_fu_378_p1 - zext_ln29_4_fu_390_p1);

assign sub_ln36_1_fu_1472_p2 = (p_shl10_cast_fu_1452_p3 - zext_ln36_5_fu_1468_p1);

assign sub_ln36_fu_1337_p2 = (p_shl_cast_fu_1319_p3 - zext_ln36_2_fu_1333_p1);

assign tmp_10_fu_1232_p4 = {{bitcast_ln29_5_fu_1228_p1[30:23]}};

assign tmp_11_fu_1249_p4 = {{bitcast_ln29_6_fu_1246_p1[30:23]}};

assign tmp_13_fu_734_p4 = {{bitcast_ln29_7_fu_730_p1[30:23]}};

assign tmp_15_fu_953_p4 = {{bitcast_ln29_8_fu_949_p1[30:23]}};

assign tmp_16_fu_970_p4 = {{bitcast_ln29_9_fu_967_p1[30:23]}};

assign tmp_18_fu_1141_p4 = {{bitcast_ln29_10_fu_1137_p1[30:23]}};

assign tmp_19_fu_1158_p4 = {{bitcast_ln29_11_fu_1155_p1[30:23]}};

assign tmp_21_fu_1357_p4 = {{bitcast_ln29_12_fu_1353_p1[30:23]}};

assign tmp_22_fu_1374_p4 = {{bitcast_ln29_13_fu_1371_p1[30:23]}};

assign tmp_24_fu_382_p3 = {{add_ln29_fu_365_p2}, {1'd0}};

assign tmp_25_fu_409_p4 = {{sub_ln29_fu_394_p2[63:3]}};

assign tmp_26_fu_419_p3 = {{tmp_25_fu_409_p4}, {or_ln29_14_fu_404_p2}};

assign tmp_27_fu_618_p3 = {{add_ln29_1_reg_1591}, {1'd0}};

assign tmp_28_fu_519_p3 = {{add_ln29_3_fu_506_p2}, {1'd0}};

assign tmp_29_fu_788_p3 = {{add_ln29_5_reg_1602}, {1'd0}};

assign tmp_30_fu_1326_p3 = {{add_ln36_reg_1661}, {1'd0}};

assign tmp_31_fu_465_p3 = {{add_ln29_7_fu_452_p2}, {1'd0}};

assign tmp_32_fu_703_p3 = {{add_ln29_9_reg_1608}, {1'd0}};

assign tmp_33_fu_578_p3 = {{add_ln29_11_fu_565_p2}, {1'd0}};

assign tmp_34_fu_922_p3 = {{add_ln29_13_reg_1619}, {1'd0}};

assign tmp_35_fu_1460_p3 = {{add_ln36_2_fu_1447_p2}, {1'd0}};

assign tmp_3_fu_649_p4 = {{bitcast_ln29_fu_645_p1[30:23]}};

assign tmp_5_fu_819_p4 = {{bitcast_ln29_1_fu_815_p1[30:23]}};

assign tmp_6_fu_836_p4 = {{bitcast_ln29_2_fu_833_p1[30:23]}};

assign tmp_8_fu_1050_p4 = {{bitcast_ln29_3_fu_1046_p1[30:23]}};

assign tmp_9_fu_1067_p4 = {{bitcast_ln29_4_fu_1064_p1[30:23]}};

assign tmp_fu_370_p3 = {{add_ln29_fu_365_p2}, {3'd0}};

assign trunc_ln29_10_fu_980_p1 = bitcast_ln29_9_fu_967_p1[22:0];

assign trunc_ln29_11_fu_1151_p1 = bitcast_ln29_10_fu_1137_p1[22:0];

assign trunc_ln29_12_fu_1168_p1 = bitcast_ln29_11_fu_1155_p1[22:0];

assign trunc_ln29_13_fu_1367_p1 = bitcast_ln29_12_fu_1353_p1[22:0];

assign trunc_ln29_14_fu_1384_p1 = bitcast_ln29_13_fu_1371_p1[22:0];

assign trunc_ln29_1_fu_659_p1 = bitcast_ln29_fu_645_p1[22:0];

assign trunc_ln29_2_fu_829_p1 = bitcast_ln29_1_fu_815_p1[22:0];

assign trunc_ln29_3_fu_846_p1 = bitcast_ln29_2_fu_833_p1[22:0];

assign trunc_ln29_4_fu_1060_p1 = bitcast_ln29_3_fu_1046_p1[22:0];

assign trunc_ln29_5_fu_1077_p1 = bitcast_ln29_4_fu_1064_p1[22:0];

assign trunc_ln29_6_fu_1242_p1 = bitcast_ln29_5_fu_1228_p1[22:0];

assign trunc_ln29_7_fu_1259_p1 = bitcast_ln29_6_fu_1246_p1[22:0];

assign trunc_ln29_8_fu_744_p1 = bitcast_ln29_7_fu_730_p1[22:0];

assign trunc_ln29_9_fu_963_p1 = bitcast_ln29_8_fu_949_p1[22:0];

assign trunc_ln29_fu_400_p1 = sub_ln29_fu_394_p2[2:0];

assign zext_ln14_1_fu_305_p1 = select_ln29_9_fu_293_p3;

assign zext_ln14_fu_301_p1 = select_ln29_9_fu_293_p3;

assign zext_ln29_10_fu_795_p1 = tmp_29_fu_788_p3;

assign zext_ln29_11_fu_810_p1 = add_ln29_6_fu_805_p2;

assign zext_ln29_12_fu_448_p1 = shl_ln27_1_fu_440_p3;

assign zext_ln29_13_fu_473_p1 = tmp_31_fu_465_p3;

assign zext_ln29_14_fu_488_p1 = add_ln29_8_fu_483_p2;

assign zext_ln29_15_fu_710_p1 = tmp_32_fu_703_p3;

assign zext_ln29_16_fu_725_p1 = add_ln29_10_fu_720_p2;

assign zext_ln29_17_fu_561_p1 = or_ln27_1_fu_556_p2;

assign zext_ln29_18_fu_586_p1 = tmp_33_fu_578_p3;

assign zext_ln29_19_fu_601_p1 = add_ln29_12_fu_596_p2;

assign zext_ln29_20_fu_929_p1 = tmp_34_fu_922_p3;

assign zext_ln29_21_fu_944_p1 = add_ln29_14_fu_939_p2;

assign zext_ln29_2_fu_361_p1 = shl_ln1_fu_353_p3;

assign zext_ln29_3_fu_378_p1 = tmp_fu_370_p3;

assign zext_ln29_4_fu_390_p1 = tmp_24_fu_382_p3;

assign zext_ln29_5_fu_625_p1 = tmp_27_fu_618_p3;

assign zext_ln29_6_fu_640_p1 = add_ln29_2_fu_635_p2;

assign zext_ln29_7_fu_502_p1 = or_ln27_fu_497_p2;

assign zext_ln29_8_fu_527_p1 = tmp_28_fu_519_p3;

assign zext_ln29_9_fu_542_p1 = add_ln29_4_fu_537_p2;

assign zext_ln36_1_fu_906_p1 = c_0_0_reg_227;

assign zext_ln36_2_fu_1333_p1 = tmp_30_fu_1326_p3;

assign zext_ln36_3_fu_1348_p1 = add_ln36_1_fu_1343_p2;

assign zext_ln36_4_fu_1444_p1 = or_ln16_reg_1567_pp0_iter1_reg;

assign zext_ln36_5_fu_1468_p1 = tmp_35_fu_1460_p3;

assign zext_ln36_6_fu_1483_p1 = add_ln36_3_fu_1478_p2;

always @ (posedge ap_clk) begin
    zext_ln14_reg_1513[10:3] <= 8'b00000000;
    zext_ln14_1_reg_1519[12:3] <= 10'b0000000000;
    mul_ln29_reg_1536[0] <= 1'b0;
    mul_ln29_1_reg_1544[0] <= 1'b0;
    shl_ln1_reg_1552[0] <= 1'b0;
    zext_ln29_2_reg_1557[0] <= 1'b0;
    zext_ln29_2_reg_1557[9:5] <= 5'b00000;
    or_ln16_reg_1567[0] <= 1'b1;
    or_ln16_reg_1567_pp0_iter1_reg[0] <= 1'b1;
    shl_ln27_1_reg_1576[1:0] <= 2'b10;
    zext_ln29_12_reg_1581[1:0] <= 2'b10;
    zext_ln29_12_reg_1581[9:5] <= 5'b00000;
    add_ln29_1_reg_1591[0] <= 1'b0;
    add_ln29_5_reg_1602[0] <= 1'b1;
    add_ln29_9_reg_1608[0] <= 1'b0;
    add_ln29_13_reg_1619[0] <= 1'b1;
end

endmodule //max_pool
