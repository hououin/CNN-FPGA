// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_HH_
#define _max_pool_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_fcmp_32nbkb.h"

namespace ap_rtl {

struct max_pool : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<12> > conv_out_address1;
    sc_out< sc_logic > conv_out_ce1;
    sc_in< sc_lv<32> > conv_out_q1;
    sc_out< sc_lv<10> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool(sc_module_name name);
    SC_HAS_PROCESS(max_pool);

    ~max_pool();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_fcmp_32nbkb<1,2,32,32,1>* max_pool_fcmp_32nbkb_U1;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > max_0_reg_178;
    sc_signal< sc_lv<2> > mpr_0_reg_191;
    sc_signal< sc_lv<3> > f_fu_214_p2;
    sc_signal< sc_lv<3> > f_reg_629;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > zext_ln13_fu_220_p1;
    sc_signal< sc_lv<13> > zext_ln13_reg_634;
    sc_signal< sc_lv<1> > icmp_ln10_fu_208_p2;
    sc_signal< sc_lv<11> > zext_ln13_1_fu_224_p1;
    sc_signal< sc_lv<11> > zext_ln13_1_reg_640;
    sc_signal< sc_lv<8> > add_ln13_fu_228_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_645;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_240_p2;
    sc_signal< sc_lv<4> > r_reg_653;
    sc_signal< sc_lv<5> > shl_ln_fu_246_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_658;
    sc_signal< sc_lv<1> > icmp_ln13_fu_234_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_254_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > c_fu_260_p2;
    sc_signal< sc_lv<4> > c_reg_667;
    sc_signal< sc_lv<10> > zext_ln27_fu_274_p1;
    sc_signal< sc_lv<10> > zext_ln27_reg_672;
    sc_signal< sc_lv<10> > zext_ln20_1_fu_284_p1;
    sc_signal< sc_lv<10> > zext_ln20_1_reg_677;
    sc_signal< sc_lv<1> > icmp_ln20_fu_288_p2;
    sc_signal< sc_lv<1> > icmp_ln20_reg_682;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln20_reg_682_pp0_iter1_reg;
    sc_signal< sc_lv<2> > mpr_fu_294_p2;
    sc_signal< sc_lv<2> > mpr_reg_686;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > conv_out_load_reg_701;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > conv_out_load_1_reg_708;
    sc_signal< sc_lv<32> > select_ln29_fu_484_p3;
    sc_signal< sc_lv<32> > select_ln29_reg_715;
    sc_signal< sc_lv<32> > select_ln29_1_fu_574_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<3> > f_0_reg_132;
    sc_signal< sc_lv<4> > r_0_reg_143;
    sc_signal< sc_lv<8> > phi_mul_reg_154;
    sc_signal< sc_lv<4> > c_0_reg_166;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > ap_phi_mux_max_0_phi_fu_183_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_195_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln29_2_fu_355_p1;
    sc_signal< sc_lv<64> > zext_ln29_4_fu_396_p1;
    sc_signal< sc_lv<64> > zext_ln36_2_fu_621_p1;
    sc_signal< sc_lv<32> > grp_fu_202_p0;
    sc_signal< sc_lv<32> > grp_fu_202_p1;
    sc_signal< sc_lv<5> > shl_ln1_fu_266_p3;
    sc_signal< sc_lv<5> > or_ln27_fu_278_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_300_p1;
    sc_signal< sc_lv<5> > i_fu_304_p2;
    sc_signal< sc_lv<5> > mul_ln29_fu_313_p1;
    sc_signal< sc_lv<10> > mul_ln29_fu_313_p2;
    sc_signal< sc_lv<10> > add_ln29_fu_319_p2;
    sc_signal< sc_lv<11> > tmp_11_fu_332_p3;
    sc_signal< sc_lv<13> > p_shl2_cast_fu_324_p3;
    sc_signal< sc_lv<13> > zext_ln29_1_fu_340_p1;
    sc_signal< sc_lv<13> > sub_ln29_fu_344_p2;
    sc_signal< sc_lv<13> > add_ln29_1_fu_350_p2;
    sc_signal< sc_lv<10> > add_ln29_2_fu_360_p2;
    sc_signal< sc_lv<11> > tmp_12_fu_373_p3;
    sc_signal< sc_lv<13> > p_shl_cast_fu_365_p3;
    sc_signal< sc_lv<13> > zext_ln29_3_fu_381_p1;
    sc_signal< sc_lv<13> > sub_ln29_1_fu_385_p2;
    sc_signal< sc_lv<13> > add_ln29_3_fu_391_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_fu_401_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_1_fu_418_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_404_p4;
    sc_signal< sc_lv<23> > trunc_ln29_fu_414_p1;
    sc_signal< sc_lv<1> > icmp_ln29_1_fu_442_p2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_436_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_422_p4;
    sc_signal< sc_lv<23> > trunc_ln29_1_fu_432_p1;
    sc_signal< sc_lv<1> > icmp_ln29_3_fu_460_p2;
    sc_signal< sc_lv<1> > icmp_ln29_2_fu_454_p2;
    sc_signal< sc_lv<1> > or_ln29_fu_448_p2;
    sc_signal< sc_lv<1> > or_ln29_1_fu_466_p2;
    sc_signal< sc_lv<1> > and_ln29_fu_472_p2;
    sc_signal< sc_lv<1> > grp_fu_202_p2;
    sc_signal< sc_lv<1> > and_ln29_1_fu_478_p2;
    sc_signal< sc_lv<32> > bitcast_ln29_2_fu_492_p1;
    sc_signal< sc_lv<32> > bitcast_ln29_3_fu_509_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_495_p4;
    sc_signal< sc_lv<23> > trunc_ln29_2_fu_505_p1;
    sc_signal< sc_lv<1> > icmp_ln29_5_fu_532_p2;
    sc_signal< sc_lv<1> > icmp_ln29_4_fu_526_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_512_p4;
    sc_signal< sc_lv<23> > trunc_ln29_3_fu_522_p1;
    sc_signal< sc_lv<1> > icmp_ln29_7_fu_550_p2;
    sc_signal< sc_lv<1> > icmp_ln29_6_fu_544_p2;
    sc_signal< sc_lv<1> > or_ln29_2_fu_538_p2;
    sc_signal< sc_lv<1> > or_ln29_3_fu_556_p2;
    sc_signal< sc_lv<1> > and_ln29_2_fu_562_p2;
    sc_signal< sc_lv<1> > and_ln29_3_fu_568_p2;
    sc_signal< sc_lv<8> > zext_ln36_fu_580_p1;
    sc_signal< sc_lv<8> > add_ln36_fu_584_p2;
    sc_signal< sc_lv<9> > tmp_10_fu_598_p3;
    sc_signal< sc_lv<11> > p_shl4_cast_fu_590_p3;
    sc_signal< sc_lv<11> > zext_ln36_1_fu_606_p1;
    sc_signal< sc_lv<11> > sub_ln36_fu_610_p2;
    sc_signal< sc_lv<11> > add_ln36_1_fu_616_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln29_fu_313_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_228_p2();
    void thread_add_ln29_1_fu_350_p2();
    void thread_add_ln29_2_fu_360_p2();
    void thread_add_ln29_3_fu_391_p2();
    void thread_add_ln29_fu_319_p2();
    void thread_add_ln36_1_fu_616_p2();
    void thread_add_ln36_fu_584_p2();
    void thread_and_ln29_1_fu_478_p2();
    void thread_and_ln29_2_fu_562_p2();
    void thread_and_ln29_3_fu_568_p2();
    void thread_and_ln29_fu_472_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state5_pp0_stage0_iter0();
    void thread_ap_block_state6_pp0_stage1_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_max_0_phi_fu_183_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_195_p4();
    void thread_ap_ready();
    void thread_bitcast_ln29_1_fu_418_p1();
    void thread_bitcast_ln29_2_fu_492_p1();
    void thread_bitcast_ln29_3_fu_509_p1();
    void thread_bitcast_ln29_fu_401_p1();
    void thread_c_fu_260_p2();
    void thread_conv_out_address0();
    void thread_conv_out_address1();
    void thread_conv_out_ce0();
    void thread_conv_out_ce1();
    void thread_f_fu_214_p2();
    void thread_grp_fu_202_p0();
    void thread_grp_fu_202_p1();
    void thread_i_fu_304_p2();
    void thread_icmp_ln10_fu_208_p2();
    void thread_icmp_ln13_fu_234_p2();
    void thread_icmp_ln16_fu_254_p2();
    void thread_icmp_ln20_fu_288_p2();
    void thread_icmp_ln29_1_fu_442_p2();
    void thread_icmp_ln29_2_fu_454_p2();
    void thread_icmp_ln29_3_fu_460_p2();
    void thread_icmp_ln29_4_fu_526_p2();
    void thread_icmp_ln29_5_fu_532_p2();
    void thread_icmp_ln29_6_fu_544_p2();
    void thread_icmp_ln29_7_fu_550_p2();
    void thread_icmp_ln29_fu_436_p2();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpr_fu_294_p2();
    void thread_mul_ln29_fu_313_p1();
    void thread_mul_ln29_fu_313_p10();
    void thread_mul_ln29_fu_313_p2();
    void thread_or_ln27_fu_278_p2();
    void thread_or_ln29_1_fu_466_p2();
    void thread_or_ln29_2_fu_538_p2();
    void thread_or_ln29_3_fu_556_p2();
    void thread_or_ln29_fu_448_p2();
    void thread_p_shl2_cast_fu_324_p3();
    void thread_p_shl4_cast_fu_590_p3();
    void thread_p_shl_cast_fu_365_p3();
    void thread_r_fu_240_p2();
    void thread_select_ln29_1_fu_574_p3();
    void thread_select_ln29_fu_484_p3();
    void thread_shl_ln1_fu_266_p3();
    void thread_shl_ln_fu_246_p3();
    void thread_sub_ln29_1_fu_385_p2();
    void thread_sub_ln29_fu_344_p2();
    void thread_sub_ln36_fu_610_p2();
    void thread_tmp_10_fu_598_p3();
    void thread_tmp_11_fu_332_p3();
    void thread_tmp_12_fu_373_p3();
    void thread_tmp_1_fu_404_p4();
    void thread_tmp_5_fu_422_p4();
    void thread_tmp_7_fu_495_p4();
    void thread_tmp_8_fu_512_p4();
    void thread_trunc_ln29_1_fu_432_p1();
    void thread_trunc_ln29_2_fu_505_p1();
    void thread_trunc_ln29_3_fu_522_p1();
    void thread_trunc_ln29_fu_414_p1();
    void thread_zext_ln13_1_fu_224_p1();
    void thread_zext_ln13_fu_220_p1();
    void thread_zext_ln20_1_fu_284_p1();
    void thread_zext_ln20_fu_300_p1();
    void thread_zext_ln27_fu_274_p1();
    void thread_zext_ln29_1_fu_340_p1();
    void thread_zext_ln29_2_fu_355_p1();
    void thread_zext_ln29_3_fu_381_p1();
    void thread_zext_ln29_4_fu_396_p1();
    void thread_zext_ln36_1_fu_606_p1();
    void thread_zext_ln36_2_fu_621_p1();
    void thread_zext_ln36_fu_580_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
