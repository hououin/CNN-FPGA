// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "max_pool.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic max_pool::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic max_pool::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> max_pool::ap_ST_fsm_state1 = "1";
const sc_lv<7> max_pool::ap_ST_fsm_state2 = "10";
const sc_lv<7> max_pool::ap_ST_fsm_state3 = "100";
const sc_lv<7> max_pool::ap_ST_fsm_state4 = "1000";
const sc_lv<7> max_pool::ap_ST_fsm_pp0_stage0 = "10000";
const sc_lv<7> max_pool::ap_ST_fsm_pp0_stage1 = "100000";
const sc_lv<7> max_pool::ap_ST_fsm_state9 = "1000000";
const sc_lv<32> max_pool::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool max_pool::ap_const_boolean_1 = true;
const sc_lv<32> max_pool::ap_const_lv32_1 = "1";
const sc_lv<1> max_pool::ap_const_lv1_0 = "0";
const sc_lv<32> max_pool::ap_const_lv32_2 = "10";
const sc_lv<32> max_pool::ap_const_lv32_3 = "11";
const sc_lv<32> max_pool::ap_const_lv32_4 = "100";
const bool max_pool::ap_const_boolean_0 = false;
const sc_lv<32> max_pool::ap_const_lv32_5 = "101";
const sc_lv<1> max_pool::ap_const_lv1_1 = "1";
const sc_lv<3> max_pool::ap_const_lv3_0 = "000";
const sc_lv<4> max_pool::ap_const_lv4_0 = "0000";
const sc_lv<8> max_pool::ap_const_lv8_0 = "00000000";
const sc_lv<32> max_pool::ap_const_lv32_6 = "110";
const sc_lv<32> max_pool::ap_const_lv32_800000 = "100000000000000000000000";
const sc_lv<2> max_pool::ap_const_lv2_0 = "00";
const sc_lv<3> max_pool::ap_const_lv3_6 = "110";
const sc_lv<3> max_pool::ap_const_lv3_1 = "1";
const sc_lv<8> max_pool::ap_const_lv8_D = "1101";
const sc_lv<4> max_pool::ap_const_lv4_D = "1101";
const sc_lv<4> max_pool::ap_const_lv4_1 = "1";
const sc_lv<5> max_pool::ap_const_lv5_1 = "1";
const sc_lv<2> max_pool::ap_const_lv2_2 = "10";
const sc_lv<2> max_pool::ap_const_lv2_1 = "1";
const sc_lv<10> max_pool::ap_const_lv10_1A = "11010";
const sc_lv<32> max_pool::ap_const_lv32_17 = "10111";
const sc_lv<32> max_pool::ap_const_lv32_1E = "11110";
const sc_lv<8> max_pool::ap_const_lv8_FF = "11111111";
const sc_lv<23> max_pool::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> max_pool::ap_const_lv5_2 = "10";

max_pool::max_pool(sc_module_name name) : sc_module(name), mVcdFile(0) {
    max_pool_fcmp_32nbkb_U1 = new max_pool_fcmp_32nbkb<1,2,32,32,1>("max_pool_fcmp_32nbkb_U1");
    max_pool_fcmp_32nbkb_U1->clk(ap_clk);
    max_pool_fcmp_32nbkb_U1->reset(ap_rst);
    max_pool_fcmp_32nbkb_U1->din0(grp_fu_202_p0);
    max_pool_fcmp_32nbkb_U1->din1(grp_fu_202_p1);
    max_pool_fcmp_32nbkb_U1->ce(ap_var_for_const0);
    max_pool_fcmp_32nbkb_U1->opcode(ap_var_for_const1);
    max_pool_fcmp_32nbkb_U1->dout(grp_fu_202_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln13_fu_228_p2);
    sensitive << ( phi_mul_reg_154 );

    SC_METHOD(thread_add_ln29_1_fu_350_p2);
    sensitive << ( zext_ln13_reg_634 );
    sensitive << ( sub_ln29_fu_344_p2 );

    SC_METHOD(thread_add_ln29_2_fu_360_p2);
    sensitive << ( zext_ln20_1_reg_677 );
    sensitive << ( mul_ln29_fu_313_p2 );

    SC_METHOD(thread_add_ln29_3_fu_391_p2);
    sensitive << ( zext_ln13_reg_634 );
    sensitive << ( sub_ln29_1_fu_385_p2 );

    SC_METHOD(thread_add_ln29_fu_319_p2);
    sensitive << ( zext_ln27_reg_672 );
    sensitive << ( mul_ln29_fu_313_p2 );

    SC_METHOD(thread_add_ln36_1_fu_616_p2);
    sensitive << ( zext_ln13_1_reg_640 );
    sensitive << ( sub_ln36_fu_610_p2 );

    SC_METHOD(thread_add_ln36_fu_584_p2);
    sensitive << ( phi_mul_reg_154 );
    sensitive << ( zext_ln36_fu_580_p1 );

    SC_METHOD(thread_and_ln29_1_fu_478_p2);
    sensitive << ( and_ln29_fu_472_p2 );
    sensitive << ( grp_fu_202_p2 );

    SC_METHOD(thread_and_ln29_2_fu_562_p2);
    sensitive << ( or_ln29_2_fu_538_p2 );
    sensitive << ( or_ln29_3_fu_556_p2 );

    SC_METHOD(thread_and_ln29_3_fu_568_p2);
    sensitive << ( grp_fu_202_p2 );
    sensitive << ( and_ln29_2_fu_562_p2 );

    SC_METHOD(thread_and_ln29_fu_472_p2);
    sensitive << ( or_ln29_fu_448_p2 );
    sensitive << ( or_ln29_1_fu_466_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_00001);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state5);
    sensitive << ( icmp_ln20_fu_288_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_208_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_max_0_phi_fu_183_p4);
    sensitive << ( max_0_reg_178 );
    sensitive << ( icmp_ln20_reg_682_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( select_ln29_1_fu_574_p3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );

    SC_METHOD(thread_ap_phi_mux_mpr_0_phi_fu_195_p4);
    sensitive << ( mpr_0_reg_191 );
    sensitive << ( icmp_ln20_reg_682 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( mpr_reg_686 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_208_p2 );

    SC_METHOD(thread_bitcast_ln29_1_fu_418_p1);
    sensitive << ( max_0_reg_178 );

    SC_METHOD(thread_bitcast_ln29_2_fu_492_p1);
    sensitive << ( conv_out_load_1_reg_708 );

    SC_METHOD(thread_bitcast_ln29_3_fu_509_p1);
    sensitive << ( select_ln29_reg_715 );

    SC_METHOD(thread_bitcast_ln29_fu_401_p1);
    sensitive << ( conv_out_load_reg_701 );

    SC_METHOD(thread_c_fu_260_p2);
    sensitive << ( c_0_reg_166 );

    SC_METHOD(thread_conv_out_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln29_2_fu_355_p1 );

    SC_METHOD(thread_conv_out_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln29_4_fu_396_p1 );

    SC_METHOD(thread_conv_out_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_conv_out_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_214_p2);
    sensitive << ( f_0_reg_132 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( conv_out_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( conv_out_load_1_reg_708 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_202_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( select_ln29_fu_484_p3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_phi_mux_max_0_phi_fu_183_p4 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_i_fu_304_p2);
    sensitive << ( shl_ln_reg_658 );
    sensitive << ( zext_ln20_fu_300_p1 );

    SC_METHOD(thread_icmp_ln10_fu_208_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( f_0_reg_132 );

    SC_METHOD(thread_icmp_ln13_fu_234_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( r_0_reg_143 );

    SC_METHOD(thread_icmp_ln16_fu_254_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( c_0_reg_166 );

    SC_METHOD(thread_icmp_ln20_fu_288_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_195_p4 );

    SC_METHOD(thread_icmp_ln29_1_fu_442_p2);
    sensitive << ( icmp_ln20_reg_682 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln29_fu_414_p1 );

    SC_METHOD(thread_icmp_ln29_2_fu_454_p2);
    sensitive << ( icmp_ln20_reg_682 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_5_fu_422_p4 );

    SC_METHOD(thread_icmp_ln29_3_fu_460_p2);
    sensitive << ( icmp_ln20_reg_682 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln29_1_fu_432_p1 );

    SC_METHOD(thread_icmp_ln29_4_fu_526_p2);
    sensitive << ( icmp_ln20_reg_682_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_7_fu_495_p4 );

    SC_METHOD(thread_icmp_ln29_5_fu_532_p2);
    sensitive << ( icmp_ln20_reg_682_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln29_2_fu_505_p1 );

    SC_METHOD(thread_icmp_ln29_6_fu_544_p2);
    sensitive << ( icmp_ln20_reg_682_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_8_fu_512_p4 );

    SC_METHOD(thread_icmp_ln29_7_fu_550_p2);
    sensitive << ( icmp_ln20_reg_682_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( trunc_ln29_3_fu_522_p1 );

    SC_METHOD(thread_icmp_ln29_fu_436_p2);
    sensitive << ( icmp_ln20_reg_682 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_1_fu_404_p4 );

    SC_METHOD(thread_max_pool_out_address0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln36_2_fu_621_p1 );

    SC_METHOD(thread_max_pool_out_ce0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_max_pool_out_d0);
    sensitive << ( max_0_reg_178 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_max_pool_out_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_mpr_fu_294_p2);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_195_p4 );

    SC_METHOD(thread_mul_ln29_fu_313_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln29_fu_313_p10 );

    SC_METHOD(thread_mul_ln29_fu_313_p10);
    sensitive << ( i_fu_304_p2 );

    SC_METHOD(thread_mul_ln29_fu_313_p2);
    sensitive << ( mul_ln29_fu_313_p1 );

    SC_METHOD(thread_or_ln27_fu_278_p2);
    sensitive << ( shl_ln1_fu_266_p3 );

    SC_METHOD(thread_or_ln29_1_fu_466_p2);
    sensitive << ( icmp_ln29_3_fu_460_p2 );
    sensitive << ( icmp_ln29_2_fu_454_p2 );

    SC_METHOD(thread_or_ln29_2_fu_538_p2);
    sensitive << ( icmp_ln29_5_fu_532_p2 );
    sensitive << ( icmp_ln29_4_fu_526_p2 );

    SC_METHOD(thread_or_ln29_3_fu_556_p2);
    sensitive << ( icmp_ln29_7_fu_550_p2 );
    sensitive << ( icmp_ln29_6_fu_544_p2 );

    SC_METHOD(thread_or_ln29_fu_448_p2);
    sensitive << ( icmp_ln29_1_fu_442_p2 );
    sensitive << ( icmp_ln29_fu_436_p2 );

    SC_METHOD(thread_p_shl2_cast_fu_324_p3);
    sensitive << ( add_ln29_fu_319_p2 );

    SC_METHOD(thread_p_shl4_cast_fu_590_p3);
    sensitive << ( add_ln36_fu_584_p2 );

    SC_METHOD(thread_p_shl_cast_fu_365_p3);
    sensitive << ( add_ln29_2_fu_360_p2 );

    SC_METHOD(thread_r_fu_240_p2);
    sensitive << ( r_0_reg_143 );

    SC_METHOD(thread_select_ln29_1_fu_574_p3);
    sensitive << ( conv_out_load_1_reg_708 );
    sensitive << ( select_ln29_reg_715 );
    sensitive << ( and_ln29_3_fu_568_p2 );

    SC_METHOD(thread_select_ln29_fu_484_p3);
    sensitive << ( max_0_reg_178 );
    sensitive << ( conv_out_load_reg_701 );
    sensitive << ( and_ln29_1_fu_478_p2 );

    SC_METHOD(thread_shl_ln1_fu_266_p3);
    sensitive << ( c_0_reg_166 );

    SC_METHOD(thread_shl_ln_fu_246_p3);
    sensitive << ( r_0_reg_143 );

    SC_METHOD(thread_sub_ln29_1_fu_385_p2);
    sensitive << ( p_shl_cast_fu_365_p3 );
    sensitive << ( zext_ln29_3_fu_381_p1 );

    SC_METHOD(thread_sub_ln29_fu_344_p2);
    sensitive << ( p_shl2_cast_fu_324_p3 );
    sensitive << ( zext_ln29_1_fu_340_p1 );

    SC_METHOD(thread_sub_ln36_fu_610_p2);
    sensitive << ( p_shl4_cast_fu_590_p3 );
    sensitive << ( zext_ln36_1_fu_606_p1 );

    SC_METHOD(thread_tmp_10_fu_598_p3);
    sensitive << ( add_ln36_fu_584_p2 );

    SC_METHOD(thread_tmp_11_fu_332_p3);
    sensitive << ( add_ln29_fu_319_p2 );

    SC_METHOD(thread_tmp_12_fu_373_p3);
    sensitive << ( add_ln29_2_fu_360_p2 );

    SC_METHOD(thread_tmp_1_fu_404_p4);
    sensitive << ( bitcast_ln29_fu_401_p1 );

    SC_METHOD(thread_tmp_5_fu_422_p4);
    sensitive << ( bitcast_ln29_1_fu_418_p1 );

    SC_METHOD(thread_tmp_7_fu_495_p4);
    sensitive << ( bitcast_ln29_2_fu_492_p1 );

    SC_METHOD(thread_tmp_8_fu_512_p4);
    sensitive << ( bitcast_ln29_3_fu_509_p1 );

    SC_METHOD(thread_trunc_ln29_1_fu_432_p1);
    sensitive << ( bitcast_ln29_1_fu_418_p1 );

    SC_METHOD(thread_trunc_ln29_2_fu_505_p1);
    sensitive << ( bitcast_ln29_2_fu_492_p1 );

    SC_METHOD(thread_trunc_ln29_3_fu_522_p1);
    sensitive << ( bitcast_ln29_3_fu_509_p1 );

    SC_METHOD(thread_trunc_ln29_fu_414_p1);
    sensitive << ( bitcast_ln29_fu_401_p1 );

    SC_METHOD(thread_zext_ln13_1_fu_224_p1);
    sensitive << ( f_0_reg_132 );

    SC_METHOD(thread_zext_ln13_fu_220_p1);
    sensitive << ( f_0_reg_132 );

    SC_METHOD(thread_zext_ln20_1_fu_284_p1);
    sensitive << ( or_ln27_fu_278_p2 );

    SC_METHOD(thread_zext_ln20_fu_300_p1);
    sensitive << ( ap_phi_mux_mpr_0_phi_fu_195_p4 );

    SC_METHOD(thread_zext_ln27_fu_274_p1);
    sensitive << ( shl_ln1_fu_266_p3 );

    SC_METHOD(thread_zext_ln29_1_fu_340_p1);
    sensitive << ( tmp_11_fu_332_p3 );

    SC_METHOD(thread_zext_ln29_2_fu_355_p1);
    sensitive << ( add_ln29_1_fu_350_p2 );

    SC_METHOD(thread_zext_ln29_3_fu_381_p1);
    sensitive << ( tmp_12_fu_373_p3 );

    SC_METHOD(thread_zext_ln29_4_fu_396_p1);
    sensitive << ( add_ln29_3_fu_391_p2 );

    SC_METHOD(thread_zext_ln36_1_fu_606_p1);
    sensitive << ( tmp_10_fu_598_p3 );

    SC_METHOD(thread_zext_ln36_2_fu_621_p1);
    sensitive << ( add_ln36_1_fu_616_p2 );

    SC_METHOD(thread_zext_ln36_fu_580_p1);
    sensitive << ( c_0_reg_166 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln10_fu_208_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln13_fu_234_p2 );
    sensitive << ( icmp_ln16_fu_254_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln20_fu_288_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "max_pool_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, conv_out_address0, "(port)conv_out_address0");
    sc_trace(mVcdFile, conv_out_ce0, "(port)conv_out_ce0");
    sc_trace(mVcdFile, conv_out_q0, "(port)conv_out_q0");
    sc_trace(mVcdFile, conv_out_address1, "(port)conv_out_address1");
    sc_trace(mVcdFile, conv_out_ce1, "(port)conv_out_ce1");
    sc_trace(mVcdFile, conv_out_q1, "(port)conv_out_q1");
    sc_trace(mVcdFile, max_pool_out_address0, "(port)max_pool_out_address0");
    sc_trace(mVcdFile, max_pool_out_ce0, "(port)max_pool_out_ce0");
    sc_trace(mVcdFile, max_pool_out_we0, "(port)max_pool_out_we0");
    sc_trace(mVcdFile, max_pool_out_d0, "(port)max_pool_out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, max_0_reg_178, "max_0_reg_178");
    sc_trace(mVcdFile, mpr_0_reg_191, "mpr_0_reg_191");
    sc_trace(mVcdFile, f_fu_214_p2, "f_fu_214_p2");
    sc_trace(mVcdFile, f_reg_629, "f_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln13_fu_220_p1, "zext_ln13_fu_220_p1");
    sc_trace(mVcdFile, zext_ln13_reg_634, "zext_ln13_reg_634");
    sc_trace(mVcdFile, icmp_ln10_fu_208_p2, "icmp_ln10_fu_208_p2");
    sc_trace(mVcdFile, zext_ln13_1_fu_224_p1, "zext_ln13_1_fu_224_p1");
    sc_trace(mVcdFile, zext_ln13_1_reg_640, "zext_ln13_1_reg_640");
    sc_trace(mVcdFile, add_ln13_fu_228_p2, "add_ln13_fu_228_p2");
    sc_trace(mVcdFile, add_ln13_reg_645, "add_ln13_reg_645");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, r_fu_240_p2, "r_fu_240_p2");
    sc_trace(mVcdFile, r_reg_653, "r_reg_653");
    sc_trace(mVcdFile, shl_ln_fu_246_p3, "shl_ln_fu_246_p3");
    sc_trace(mVcdFile, shl_ln_reg_658, "shl_ln_reg_658");
    sc_trace(mVcdFile, icmp_ln13_fu_234_p2, "icmp_ln13_fu_234_p2");
    sc_trace(mVcdFile, icmp_ln16_fu_254_p2, "icmp_ln16_fu_254_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, c_fu_260_p2, "c_fu_260_p2");
    sc_trace(mVcdFile, c_reg_667, "c_reg_667");
    sc_trace(mVcdFile, zext_ln27_fu_274_p1, "zext_ln27_fu_274_p1");
    sc_trace(mVcdFile, zext_ln27_reg_672, "zext_ln27_reg_672");
    sc_trace(mVcdFile, zext_ln20_1_fu_284_p1, "zext_ln20_1_fu_284_p1");
    sc_trace(mVcdFile, zext_ln20_1_reg_677, "zext_ln20_1_reg_677");
    sc_trace(mVcdFile, icmp_ln20_fu_288_p2, "icmp_ln20_fu_288_p2");
    sc_trace(mVcdFile, icmp_ln20_reg_682, "icmp_ln20_reg_682");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter0, "ap_block_state5_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln20_reg_682_pp0_iter1_reg, "icmp_ln20_reg_682_pp0_iter1_reg");
    sc_trace(mVcdFile, mpr_fu_294_p2, "mpr_fu_294_p2");
    sc_trace(mVcdFile, mpr_reg_686, "mpr_reg_686");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, conv_out_load_reg_701, "conv_out_load_reg_701");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter0, "ap_block_state6_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, conv_out_load_1_reg_708, "conv_out_load_1_reg_708");
    sc_trace(mVcdFile, select_ln29_fu_484_p3, "select_ln29_fu_484_p3");
    sc_trace(mVcdFile, select_ln29_reg_715, "select_ln29_reg_715");
    sc_trace(mVcdFile, select_ln29_1_fu_574_p3, "select_ln29_1_fu_574_p3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state5, "ap_condition_pp0_exit_iter0_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, f_0_reg_132, "f_0_reg_132");
    sc_trace(mVcdFile, r_0_reg_143, "r_0_reg_143");
    sc_trace(mVcdFile, phi_mul_reg_154, "phi_mul_reg_154");
    sc_trace(mVcdFile, c_0_reg_166, "c_0_reg_166");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_phi_mux_max_0_phi_fu_183_p4, "ap_phi_mux_max_0_phi_fu_183_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_phi_mux_mpr_0_phi_fu_195_p4, "ap_phi_mux_mpr_0_phi_fu_195_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln29_2_fu_355_p1, "zext_ln29_2_fu_355_p1");
    sc_trace(mVcdFile, zext_ln29_4_fu_396_p1, "zext_ln29_4_fu_396_p1");
    sc_trace(mVcdFile, zext_ln36_2_fu_621_p1, "zext_ln36_2_fu_621_p1");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_202_p1, "grp_fu_202_p1");
    sc_trace(mVcdFile, shl_ln1_fu_266_p3, "shl_ln1_fu_266_p3");
    sc_trace(mVcdFile, or_ln27_fu_278_p2, "or_ln27_fu_278_p2");
    sc_trace(mVcdFile, zext_ln20_fu_300_p1, "zext_ln20_fu_300_p1");
    sc_trace(mVcdFile, i_fu_304_p2, "i_fu_304_p2");
    sc_trace(mVcdFile, mul_ln29_fu_313_p1, "mul_ln29_fu_313_p1");
    sc_trace(mVcdFile, mul_ln29_fu_313_p2, "mul_ln29_fu_313_p2");
    sc_trace(mVcdFile, add_ln29_fu_319_p2, "add_ln29_fu_319_p2");
    sc_trace(mVcdFile, tmp_11_fu_332_p3, "tmp_11_fu_332_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_324_p3, "p_shl2_cast_fu_324_p3");
    sc_trace(mVcdFile, zext_ln29_1_fu_340_p1, "zext_ln29_1_fu_340_p1");
    sc_trace(mVcdFile, sub_ln29_fu_344_p2, "sub_ln29_fu_344_p2");
    sc_trace(mVcdFile, add_ln29_1_fu_350_p2, "add_ln29_1_fu_350_p2");
    sc_trace(mVcdFile, add_ln29_2_fu_360_p2, "add_ln29_2_fu_360_p2");
    sc_trace(mVcdFile, tmp_12_fu_373_p3, "tmp_12_fu_373_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_365_p3, "p_shl_cast_fu_365_p3");
    sc_trace(mVcdFile, zext_ln29_3_fu_381_p1, "zext_ln29_3_fu_381_p1");
    sc_trace(mVcdFile, sub_ln29_1_fu_385_p2, "sub_ln29_1_fu_385_p2");
    sc_trace(mVcdFile, add_ln29_3_fu_391_p2, "add_ln29_3_fu_391_p2");
    sc_trace(mVcdFile, bitcast_ln29_fu_401_p1, "bitcast_ln29_fu_401_p1");
    sc_trace(mVcdFile, bitcast_ln29_1_fu_418_p1, "bitcast_ln29_1_fu_418_p1");
    sc_trace(mVcdFile, tmp_1_fu_404_p4, "tmp_1_fu_404_p4");
    sc_trace(mVcdFile, trunc_ln29_fu_414_p1, "trunc_ln29_fu_414_p1");
    sc_trace(mVcdFile, icmp_ln29_1_fu_442_p2, "icmp_ln29_1_fu_442_p2");
    sc_trace(mVcdFile, icmp_ln29_fu_436_p2, "icmp_ln29_fu_436_p2");
    sc_trace(mVcdFile, tmp_5_fu_422_p4, "tmp_5_fu_422_p4");
    sc_trace(mVcdFile, trunc_ln29_1_fu_432_p1, "trunc_ln29_1_fu_432_p1");
    sc_trace(mVcdFile, icmp_ln29_3_fu_460_p2, "icmp_ln29_3_fu_460_p2");
    sc_trace(mVcdFile, icmp_ln29_2_fu_454_p2, "icmp_ln29_2_fu_454_p2");
    sc_trace(mVcdFile, or_ln29_fu_448_p2, "or_ln29_fu_448_p2");
    sc_trace(mVcdFile, or_ln29_1_fu_466_p2, "or_ln29_1_fu_466_p2");
    sc_trace(mVcdFile, and_ln29_fu_472_p2, "and_ln29_fu_472_p2");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, and_ln29_1_fu_478_p2, "and_ln29_1_fu_478_p2");
    sc_trace(mVcdFile, bitcast_ln29_2_fu_492_p1, "bitcast_ln29_2_fu_492_p1");
    sc_trace(mVcdFile, bitcast_ln29_3_fu_509_p1, "bitcast_ln29_3_fu_509_p1");
    sc_trace(mVcdFile, tmp_7_fu_495_p4, "tmp_7_fu_495_p4");
    sc_trace(mVcdFile, trunc_ln29_2_fu_505_p1, "trunc_ln29_2_fu_505_p1");
    sc_trace(mVcdFile, icmp_ln29_5_fu_532_p2, "icmp_ln29_5_fu_532_p2");
    sc_trace(mVcdFile, icmp_ln29_4_fu_526_p2, "icmp_ln29_4_fu_526_p2");
    sc_trace(mVcdFile, tmp_8_fu_512_p4, "tmp_8_fu_512_p4");
    sc_trace(mVcdFile, trunc_ln29_3_fu_522_p1, "trunc_ln29_3_fu_522_p1");
    sc_trace(mVcdFile, icmp_ln29_7_fu_550_p2, "icmp_ln29_7_fu_550_p2");
    sc_trace(mVcdFile, icmp_ln29_6_fu_544_p2, "icmp_ln29_6_fu_544_p2");
    sc_trace(mVcdFile, or_ln29_2_fu_538_p2, "or_ln29_2_fu_538_p2");
    sc_trace(mVcdFile, or_ln29_3_fu_556_p2, "or_ln29_3_fu_556_p2");
    sc_trace(mVcdFile, and_ln29_2_fu_562_p2, "and_ln29_2_fu_562_p2");
    sc_trace(mVcdFile, and_ln29_3_fu_568_p2, "and_ln29_3_fu_568_p2");
    sc_trace(mVcdFile, zext_ln36_fu_580_p1, "zext_ln36_fu_580_p1");
    sc_trace(mVcdFile, add_ln36_fu_584_p2, "add_ln36_fu_584_p2");
    sc_trace(mVcdFile, tmp_10_fu_598_p3, "tmp_10_fu_598_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_590_p3, "p_shl4_cast_fu_590_p3");
    sc_trace(mVcdFile, zext_ln36_1_fu_606_p1, "zext_ln36_1_fu_606_p1");
    sc_trace(mVcdFile, sub_ln36_fu_610_p2, "sub_ln36_fu_610_p2");
    sc_trace(mVcdFile, add_ln36_1_fu_616_p2, "add_ln36_1_fu_616_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_00001, "ap_block_pp0_stage1_00001");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, mul_ln29_fu_313_p10, "mul_ln29_fu_313_p10");
#endif

    }
    mHdltvinHandle.open("max_pool.hdltvin.dat");
    mHdltvoutHandle.open("max_pool.hdltvout.dat");
}

max_pool::~max_pool() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete max_pool_fcmp_32nbkb_U1;
}

void max_pool::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void max_pool::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void max_pool::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state5.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_254_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_254_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        c_0_reg_166 = c_reg_667.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_234_p2.read()))) {
        c_0_reg_166 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln13_fu_234_p2.read(), ap_const_lv1_1))) {
        f_0_reg_132 = f_reg_629.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_132 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682_pp0_iter1_reg.read()))) {
        max_0_reg_178 = select_ln29_1_fu_574_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_254_p2.read()))) {
        max_0_reg_178 = ap_const_lv32_800000;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        mpr_0_reg_191 = mpr_reg_686.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_254_p2.read()))) {
        mpr_0_reg_191 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_254_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_154 = add_ln13_reg_645.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_154 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln16_fu_254_p2.read(), ap_const_lv1_1))) {
        r_0_reg_143 = r_reg_653.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_0))) {
        r_0_reg_143 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        add_ln13_reg_645 = add_ln13_fu_228_p2.read();
        r_reg_653 = r_fu_240_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_reg_667 = c_fu_260_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682.read()))) {
        conv_out_load_1_reg_708 = conv_out_q1.read();
        conv_out_load_reg_701 = conv_out_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        f_reg_629 = f_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln20_reg_682 = icmp_ln20_fu_288_p2.read();
        icmp_ln20_reg_682_pp0_iter1_reg = icmp_ln20_reg_682.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        mpr_reg_686 = mpr_fu_294_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682.read()))) {
        select_ln29_reg_715 = select_ln29_fu_484_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln13_fu_234_p2.read()))) {
        shl_ln_reg_658 = shl_ln_fu_246_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_0))) {
        zext_ln13_1_reg_640 = zext_ln13_1_fu_224_p1.read();
        zext_ln13_reg_634 = zext_ln13_fu_220_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_254_p2.read()))) {
        zext_ln20_1_reg_677 = zext_ln20_1_fu_284_p1.read();
        zext_ln27_reg_672 = zext_ln27_fu_274_p1.read();
    }
}

void max_pool::thread_add_ln13_fu_228_p2() {
    add_ln13_fu_228_p2 = (!phi_mul_reg_154.read().is_01() || !ap_const_lv8_D.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_mul_reg_154.read()) + sc_biguint<8>(ap_const_lv8_D));
}

void max_pool::thread_add_ln29_1_fu_350_p2() {
    add_ln29_1_fu_350_p2 = (!sub_ln29_fu_344_p2.read().is_01() || !zext_ln13_reg_634.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln29_fu_344_p2.read()) + sc_biguint<13>(zext_ln13_reg_634.read()));
}

void max_pool::thread_add_ln29_2_fu_360_p2() {
    add_ln29_2_fu_360_p2 = (!mul_ln29_fu_313_p2.read().is_01() || !zext_ln20_1_reg_677.read().is_01())? sc_lv<10>(): (sc_biguint<10>(mul_ln29_fu_313_p2.read()) + sc_biguint<10>(zext_ln20_1_reg_677.read()));
}

void max_pool::thread_add_ln29_3_fu_391_p2() {
    add_ln29_3_fu_391_p2 = (!sub_ln29_1_fu_385_p2.read().is_01() || !zext_ln13_reg_634.read().is_01())? sc_lv<13>(): (sc_biguint<13>(sub_ln29_1_fu_385_p2.read()) + sc_biguint<13>(zext_ln13_reg_634.read()));
}

void max_pool::thread_add_ln29_fu_319_p2() {
    add_ln29_fu_319_p2 = (!mul_ln29_fu_313_p2.read().is_01() || !zext_ln27_reg_672.read().is_01())? sc_lv<10>(): (sc_biguint<10>(mul_ln29_fu_313_p2.read()) + sc_biguint<10>(zext_ln27_reg_672.read()));
}

void max_pool::thread_add_ln36_1_fu_616_p2() {
    add_ln36_1_fu_616_p2 = (!zext_ln13_1_reg_640.read().is_01() || !sub_ln36_fu_610_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln13_1_reg_640.read()) + sc_biguint<11>(sub_ln36_fu_610_p2.read()));
}

void max_pool::thread_add_ln36_fu_584_p2() {
    add_ln36_fu_584_p2 = (!zext_ln36_fu_580_p1.read().is_01() || !phi_mul_reg_154.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln36_fu_580_p1.read()) + sc_biguint<8>(phi_mul_reg_154.read()));
}

void max_pool::thread_and_ln29_1_fu_478_p2() {
    and_ln29_1_fu_478_p2 = (and_ln29_fu_472_p2.read() & grp_fu_202_p2.read());
}

void max_pool::thread_and_ln29_2_fu_562_p2() {
    and_ln29_2_fu_562_p2 = (or_ln29_2_fu_538_p2.read() & or_ln29_3_fu_556_p2.read());
}

void max_pool::thread_and_ln29_3_fu_568_p2() {
    and_ln29_3_fu_568_p2 = (and_ln29_2_fu_562_p2.read() & grp_fu_202_p2.read());
}

void max_pool::thread_and_ln29_fu_472_p2() {
    and_ln29_fu_472_p2 = (or_ln29_fu_448_p2.read() & or_ln29_1_fu_466_p2.read());
}

void max_pool::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[4];
}

void max_pool::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[5];
}

void max_pool::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void max_pool::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void max_pool::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void max_pool::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void max_pool::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[6];
}

void max_pool::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage1_00001() {
    ap_block_pp0_stage1_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state5_pp0_stage0_iter0() {
    ap_block_state5_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state6_pp0_stage1_iter0() {
    ap_block_state6_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void max_pool::thread_ap_condition_pp0_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(icmp_ln20_fu_288_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state5 = ap_const_logic_0;
    }
}

void max_pool::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void max_pool::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void max_pool::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void max_pool::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void max_pool::thread_ap_phi_mux_max_0_phi_fu_183_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        ap_phi_mux_max_0_phi_fu_183_p4 = select_ln29_1_fu_574_p3.read();
    } else {
        ap_phi_mux_max_0_phi_fu_183_p4 = max_0_reg_178.read();
    }
}

void max_pool::thread_ap_phi_mux_mpr_0_phi_fu_195_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln20_reg_682.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_mpr_0_phi_fu_195_p4 = mpr_reg_686.read();
    } else {
        ap_phi_mux_mpr_0_phi_fu_195_p4 = mpr_0_reg_191.read();
    }
}

void max_pool::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void max_pool::thread_bitcast_ln29_1_fu_418_p1() {
    bitcast_ln29_1_fu_418_p1 = max_0_reg_178.read();
}

void max_pool::thread_bitcast_ln29_2_fu_492_p1() {
    bitcast_ln29_2_fu_492_p1 = conv_out_load_1_reg_708.read();
}

void max_pool::thread_bitcast_ln29_3_fu_509_p1() {
    bitcast_ln29_3_fu_509_p1 = select_ln29_reg_715.read();
}

void max_pool::thread_bitcast_ln29_fu_401_p1() {
    bitcast_ln29_fu_401_p1 = conv_out_load_reg_701.read();
}

void max_pool::thread_c_fu_260_p2() {
    c_fu_260_p2 = (!c_0_reg_166.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(c_0_reg_166.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool::thread_conv_out_address0() {
    conv_out_address0 =  (sc_lv<12>) (zext_ln29_2_fu_355_p1.read());
}

void max_pool::thread_conv_out_address1() {
    conv_out_address1 =  (sc_lv<12>) (zext_ln29_4_fu_396_p1.read());
}

void max_pool::thread_conv_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_out_ce0 = ap_const_logic_1;
    } else {
        conv_out_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_conv_out_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        conv_out_ce1 = ap_const_logic_1;
    } else {
        conv_out_ce1 = ap_const_logic_0;
    }
}

void max_pool::thread_f_fu_214_p2() {
    f_fu_214_p2 = (!f_0_reg_132.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(f_0_reg_132.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void max_pool::thread_grp_fu_202_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_202_p0 = conv_out_load_1_reg_708.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_202_p0 = conv_out_q0.read();
    } else {
        grp_fu_202_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void max_pool::thread_grp_fu_202_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_202_p1 = select_ln29_fu_484_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_202_p1 = ap_phi_mux_max_0_phi_fu_183_p4.read();
    } else {
        grp_fu_202_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void max_pool::thread_i_fu_304_p2() {
    i_fu_304_p2 = (!zext_ln20_fu_300_p1.read().is_01() || !shl_ln_reg_658.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln20_fu_300_p1.read()) + sc_biguint<5>(shl_ln_reg_658.read()));
}

void max_pool::thread_icmp_ln10_fu_208_p2() {
    icmp_ln10_fu_208_p2 = (!f_0_reg_132.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(f_0_reg_132.read() == ap_const_lv3_6);
}

void max_pool::thread_icmp_ln13_fu_234_p2() {
    icmp_ln13_fu_234_p2 = (!r_0_reg_143.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_143.read() == ap_const_lv4_D);
}

void max_pool::thread_icmp_ln16_fu_254_p2() {
    icmp_ln16_fu_254_p2 = (!c_0_reg_166.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_166.read() == ap_const_lv4_D);
}

void max_pool::thread_icmp_ln20_fu_288_p2() {
    icmp_ln20_fu_288_p2 = (!ap_phi_mux_mpr_0_phi_fu_195_p4.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_mpr_0_phi_fu_195_p4.read() == ap_const_lv2_2);
}

void max_pool::thread_icmp_ln29_1_fu_442_p2() {
    icmp_ln29_1_fu_442_p2 = (!trunc_ln29_fu_414_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_fu_414_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_2_fu_454_p2() {
    icmp_ln29_2_fu_454_p2 = (!tmp_5_fu_422_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_422_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_icmp_ln29_3_fu_460_p2() {
    icmp_ln29_3_fu_460_p2 = (!trunc_ln29_1_fu_432_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_1_fu_432_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_4_fu_526_p2() {
    icmp_ln29_4_fu_526_p2 = (!tmp_7_fu_495_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_495_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_icmp_ln29_5_fu_532_p2() {
    icmp_ln29_5_fu_532_p2 = (!trunc_ln29_2_fu_505_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_2_fu_505_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_6_fu_544_p2() {
    icmp_ln29_6_fu_544_p2 = (!tmp_8_fu_512_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_512_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_icmp_ln29_7_fu_550_p2() {
    icmp_ln29_7_fu_550_p2 = (!trunc_ln29_3_fu_522_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln29_3_fu_522_p1.read() == ap_const_lv23_0);
}

void max_pool::thread_icmp_ln29_fu_436_p2() {
    icmp_ln29_fu_436_p2 = (!tmp_1_fu_404_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_404_p4.read() != ap_const_lv8_FF);
}

void max_pool::thread_max_pool_out_address0() {
    max_pool_out_address0 =  (sc_lv<10>) (zext_ln36_2_fu_621_p1.read());
}

void max_pool::thread_max_pool_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_pool_out_ce0 = ap_const_logic_1;
    } else {
        max_pool_out_ce0 = ap_const_logic_0;
    }
}

void max_pool::thread_max_pool_out_d0() {
    max_pool_out_d0 = max_0_reg_178.read();
}

void max_pool::thread_max_pool_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        max_pool_out_we0 = ap_const_logic_1;
    } else {
        max_pool_out_we0 = ap_const_logic_0;
    }
}

void max_pool::thread_mpr_fu_294_p2() {
    mpr_fu_294_p2 = (!ap_phi_mux_mpr_0_phi_fu_195_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(ap_phi_mux_mpr_0_phi_fu_195_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void max_pool::thread_mul_ln29_fu_313_p1() {
    mul_ln29_fu_313_p1 =  (sc_lv<5>) (mul_ln29_fu_313_p10.read());
}

void max_pool::thread_mul_ln29_fu_313_p10() {
    mul_ln29_fu_313_p10 = esl_zext<10,5>(i_fu_304_p2.read());
}

void max_pool::thread_mul_ln29_fu_313_p2() {
    mul_ln29_fu_313_p2 = (!ap_const_lv10_1A.is_01() || !mul_ln29_fu_313_p1.read().is_01())? sc_lv<10>(): sc_biguint<10>(ap_const_lv10_1A) * sc_biguint<5>(mul_ln29_fu_313_p1.read());
}

void max_pool::thread_or_ln27_fu_278_p2() {
    or_ln27_fu_278_p2 = (shl_ln1_fu_266_p3.read() | ap_const_lv5_1);
}

void max_pool::thread_or_ln29_1_fu_466_p2() {
    or_ln29_1_fu_466_p2 = (icmp_ln29_3_fu_460_p2.read() | icmp_ln29_2_fu_454_p2.read());
}

void max_pool::thread_or_ln29_2_fu_538_p2() {
    or_ln29_2_fu_538_p2 = (icmp_ln29_5_fu_532_p2.read() | icmp_ln29_4_fu_526_p2.read());
}

void max_pool::thread_or_ln29_3_fu_556_p2() {
    or_ln29_3_fu_556_p2 = (icmp_ln29_7_fu_550_p2.read() | icmp_ln29_6_fu_544_p2.read());
}

void max_pool::thread_or_ln29_fu_448_p2() {
    or_ln29_fu_448_p2 = (icmp_ln29_1_fu_442_p2.read() | icmp_ln29_fu_436_p2.read());
}

void max_pool::thread_p_shl2_cast_fu_324_p3() {
    p_shl2_cast_fu_324_p3 = esl_concat<10,3>(add_ln29_fu_319_p2.read(), ap_const_lv3_0);
}

void max_pool::thread_p_shl4_cast_fu_590_p3() {
    p_shl4_cast_fu_590_p3 = esl_concat<8,3>(add_ln36_fu_584_p2.read(), ap_const_lv3_0);
}

void max_pool::thread_p_shl_cast_fu_365_p3() {
    p_shl_cast_fu_365_p3 = esl_concat<10,3>(add_ln29_2_fu_360_p2.read(), ap_const_lv3_0);
}

void max_pool::thread_r_fu_240_p2() {
    r_fu_240_p2 = (!r_0_reg_143.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(r_0_reg_143.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void max_pool::thread_select_ln29_1_fu_574_p3() {
    select_ln29_1_fu_574_p3 = (!and_ln29_3_fu_568_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln29_3_fu_568_p2.read()[0].to_bool())? conv_out_load_1_reg_708.read(): select_ln29_reg_715.read());
}

void max_pool::thread_select_ln29_fu_484_p3() {
    select_ln29_fu_484_p3 = (!and_ln29_1_fu_478_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln29_1_fu_478_p2.read()[0].to_bool())? conv_out_load_reg_701.read(): max_0_reg_178.read());
}

void max_pool::thread_shl_ln1_fu_266_p3() {
    shl_ln1_fu_266_p3 = esl_concat<4,1>(c_0_reg_166.read(), ap_const_lv1_0);
}

void max_pool::thread_shl_ln_fu_246_p3() {
    shl_ln_fu_246_p3 = esl_concat<4,1>(r_0_reg_143.read(), ap_const_lv1_0);
}

void max_pool::thread_sub_ln29_1_fu_385_p2() {
    sub_ln29_1_fu_385_p2 = (!p_shl_cast_fu_365_p3.read().is_01() || !zext_ln29_3_fu_381_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl_cast_fu_365_p3.read()) - sc_biguint<13>(zext_ln29_3_fu_381_p1.read()));
}

void max_pool::thread_sub_ln29_fu_344_p2() {
    sub_ln29_fu_344_p2 = (!p_shl2_cast_fu_324_p3.read().is_01() || !zext_ln29_1_fu_340_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(p_shl2_cast_fu_324_p3.read()) - sc_biguint<13>(zext_ln29_1_fu_340_p1.read()));
}

void max_pool::thread_sub_ln36_fu_610_p2() {
    sub_ln36_fu_610_p2 = (!p_shl4_cast_fu_590_p3.read().is_01() || !zext_ln36_1_fu_606_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl4_cast_fu_590_p3.read()) - sc_biguint<11>(zext_ln36_1_fu_606_p1.read()));
}

void max_pool::thread_tmp_10_fu_598_p3() {
    tmp_10_fu_598_p3 = esl_concat<8,1>(add_ln36_fu_584_p2.read(), ap_const_lv1_0);
}

void max_pool::thread_tmp_11_fu_332_p3() {
    tmp_11_fu_332_p3 = esl_concat<10,1>(add_ln29_fu_319_p2.read(), ap_const_lv1_0);
}

void max_pool::thread_tmp_12_fu_373_p3() {
    tmp_12_fu_373_p3 = esl_concat<10,1>(add_ln29_2_fu_360_p2.read(), ap_const_lv1_0);
}

void max_pool::thread_tmp_1_fu_404_p4() {
    tmp_1_fu_404_p4 = bitcast_ln29_fu_401_p1.read().range(30, 23);
}

void max_pool::thread_tmp_5_fu_422_p4() {
    tmp_5_fu_422_p4 = bitcast_ln29_1_fu_418_p1.read().range(30, 23);
}

void max_pool::thread_tmp_7_fu_495_p4() {
    tmp_7_fu_495_p4 = bitcast_ln29_2_fu_492_p1.read().range(30, 23);
}

void max_pool::thread_tmp_8_fu_512_p4() {
    tmp_8_fu_512_p4 = bitcast_ln29_3_fu_509_p1.read().range(30, 23);
}

void max_pool::thread_trunc_ln29_1_fu_432_p1() {
    trunc_ln29_1_fu_432_p1 = bitcast_ln29_1_fu_418_p1.read().range(23-1, 0);
}

void max_pool::thread_trunc_ln29_2_fu_505_p1() {
    trunc_ln29_2_fu_505_p1 = bitcast_ln29_2_fu_492_p1.read().range(23-1, 0);
}

void max_pool::thread_trunc_ln29_3_fu_522_p1() {
    trunc_ln29_3_fu_522_p1 = bitcast_ln29_3_fu_509_p1.read().range(23-1, 0);
}

void max_pool::thread_trunc_ln29_fu_414_p1() {
    trunc_ln29_fu_414_p1 = bitcast_ln29_fu_401_p1.read().range(23-1, 0);
}

void max_pool::thread_zext_ln13_1_fu_224_p1() {
    zext_ln13_1_fu_224_p1 = esl_zext<11,3>(f_0_reg_132.read());
}

void max_pool::thread_zext_ln13_fu_220_p1() {
    zext_ln13_fu_220_p1 = esl_zext<13,3>(f_0_reg_132.read());
}

void max_pool::thread_zext_ln20_1_fu_284_p1() {
    zext_ln20_1_fu_284_p1 = esl_zext<10,5>(or_ln27_fu_278_p2.read());
}

void max_pool::thread_zext_ln20_fu_300_p1() {
    zext_ln20_fu_300_p1 = esl_zext<5,2>(ap_phi_mux_mpr_0_phi_fu_195_p4.read());
}

void max_pool::thread_zext_ln27_fu_274_p1() {
    zext_ln27_fu_274_p1 = esl_zext<10,5>(shl_ln1_fu_266_p3.read());
}

void max_pool::thread_zext_ln29_1_fu_340_p1() {
    zext_ln29_1_fu_340_p1 = esl_zext<13,11>(tmp_11_fu_332_p3.read());
}

void max_pool::thread_zext_ln29_2_fu_355_p1() {
    zext_ln29_2_fu_355_p1 = esl_zext<64,13>(add_ln29_1_fu_350_p2.read());
}

void max_pool::thread_zext_ln29_3_fu_381_p1() {
    zext_ln29_3_fu_381_p1 = esl_zext<13,11>(tmp_12_fu_373_p3.read());
}

void max_pool::thread_zext_ln29_4_fu_396_p1() {
    zext_ln29_4_fu_396_p1 = esl_zext<64,13>(add_ln29_3_fu_391_p2.read());
}

void max_pool::thread_zext_ln36_1_fu_606_p1() {
    zext_ln36_1_fu_606_p1 = esl_zext<11,9>(tmp_10_fu_598_p3.read());
}

void max_pool::thread_zext_ln36_2_fu_621_p1() {
    zext_ln36_2_fu_621_p1 = esl_zext<64,11>(add_ln36_1_fu_616_p2.read());
}

void max_pool::thread_zext_ln36_fu_580_p1() {
    zext_ln36_fu_580_p1 = esl_zext<8,4>(c_0_reg_166.read());
}

void max_pool::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln10_fu_208_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln13_fu_234_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln16_fu_254_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_288_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln20_fu_288_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<7>) ("XXXXXXX");
            break;
    }
}

void max_pool::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_address0\" :  \"" << conv_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_ce0\" :  \"" << conv_out_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_out_q0\" :  \"" << conv_out_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_address1\" :  \"" << conv_out_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"conv_out_ce1\" :  \"" << conv_out_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"conv_out_q1\" :  \"" << conv_out_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_address0\" :  \"" << max_pool_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_ce0\" :  \"" << max_pool_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_we0\" :  \"" << max_pool_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"max_pool_out_d0\" :  \"" << max_pool_out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

