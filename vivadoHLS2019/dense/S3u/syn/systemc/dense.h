// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_fadd_32ns_3bkb.h"
#include "dense_fmul_32ns_3cud.h"
#include "dense_fdiv_32ns_3dEe.h"
#include "dense_fexp_32ns_3eOg.h"
#include "dense_dense_weights.h"
#include "dense_dense_array.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_out< sc_lv<4> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_out< sc_lv<4> > prediction_address1;
    sc_out< sc_logic > prediction_ce1;
    sc_out< sc_logic > prediction_we1;
    sc_out< sc_lv<32> > prediction_d1;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dense_dense_weights* dense_weights_U;
    dense_dense_array* dense_array_U;
    dense_fadd_32ns_3bkb<1,2,32,32,32>* dense_fadd_32ns_3bkb_U1;
    dense_fmul_32ns_3cud<1,2,32,32,32>* dense_fmul_32ns_3cud_U2;
    dense_fdiv_32ns_3dEe<1,6,32,32,32>* dense_fdiv_32ns_3dEe_U3;
    dense_fdiv_32ns_3dEe<1,6,32,32,32>* dense_fdiv_32ns_3dEe_U4;
    dense_fexp_32ns_3eOg<1,4,32,32,32>* dense_fexp_32ns_3eOg_U5;
    dense_fexp_32ns_3eOg<1,4,32,32,32>* dense_fexp_32ns_3eOg_U6;
    sc_signal< sc_lv<22> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > dense_weights_address0;
    sc_signal< sc_logic > dense_weights_ce0;
    sc_signal< sc_lv<32> > dense_weights_q0;
    sc_signal< sc_lv<14> > indvar_flatten_reg_349;
    sc_signal< sc_lv<4> > d_0_reg_360;
    sc_signal< sc_lv<11> > f_0_reg_371;
    sc_signal< sc_lv<32> > w_sum_0_reg_382;
    sc_signal< sc_lv<32> > sum_0_reg_394;
    sc_signal< sc_lv<4> > i_0_reg_406;
    sc_signal< sc_lv<32> > grp_fu_417_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln11_reg_645;
    sc_signal< sc_lv<1> > icmp_ln11_reg_645_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln27_reg_710;
    sc_signal< sc_lv<1> > icmp_ln27_reg_710_pp1_iter2_reg;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state11_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state13_pp1_stage1_iter2;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > dense_array_q1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > grp_fu_442_p2;
    sc_signal< sc_lv<32> > reg_468;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > icmp_ln27_reg_710_pp1_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<4> > add_ln8_fu_490_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln8_fu_501_p2;
    sc_signal< sc_lv<1> > icmp_ln11_fu_507_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<14> > add_ln11_fu_513_p2;
    sc_signal< sc_lv<14> > add_ln11_reg_649;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln16_fu_525_p2;
    sc_signal< sc_lv<1> > icmp_ln16_reg_654;
    sc_signal< sc_lv<11> > select_ln18_fu_531_p3;
    sc_signal< sc_lv<11> > select_ln18_reg_659;
    sc_signal< sc_lv<4> > select_ln18_2_fu_539_p3;
    sc_signal< sc_lv<4> > select_ln18_2_reg_664;
    sc_signal< sc_lv<4> > select_ln18_2_reg_664_pp0_iter1_reg;
    sc_signal< sc_lv<11> > f_fu_597_p2;
    sc_signal< sc_lv<11> > f_reg_690;
    sc_signal< sc_lv<32> > select_ln18_1_fu_602_p3;
    sc_signal< sc_lv<32> > grp_fu_423_p2;
    sc_signal< sc_lv<1> > icmp_ln16_1_fu_610_p2;
    sc_signal< sc_lv<1> > icmp_ln16_1_reg_706;
    sc_signal< sc_lv<1> > icmp_ln27_fu_619_p2;
    sc_signal< sc_lv<4> > i_fu_625_p2;
    sc_signal< sc_lv<4> > i_reg_714;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<32> > grp_fu_448_p2;
    sc_signal< sc_lv<32> > tmp_4_1_reg_774;
    sc_signal< sc_lv<32> > tmp_4_2_reg_789;
    sc_signal< sc_lv<32> > tmp_4_3_reg_794;
    sc_signal< sc_lv<32> > tmp_4_4_reg_799;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > tmp_4_5_reg_804;
    sc_signal< sc_lv<32> > tmp_4_6_reg_809;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > tmp_4_7_reg_814;
    sc_signal< sc_lv<32> > tmp_4_8_reg_819;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > tmp_4_9_reg_824;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<32> > dense_array_d0;
    sc_signal< sc_lv<4> > dense_array_address1;
    sc_signal< sc_logic > dense_array_ce1;
    sc_signal< sc_lv<4> > phi_ln8_reg_338;
    sc_signal< sc_lv<14> > ap_phi_mux_indvar_flatten_phi_fu_353_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_d_0_phi_fu_364_p4;
    sc_signal< sc_lv<11> > ap_phi_mux_f_0_phi_fu_375_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_phi_fu_410_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > zext_ln8_fu_496_p1;
    sc_signal< sc_lv<64> > zext_ln18_4_fu_592_p1;
    sc_signal< sc_lv<64> > zext_ln18_1_fu_551_p1;
    sc_signal< sc_lv<64> > zext_ln18_fu_615_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln29_fu_631_p1;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_lv<32> > grp_fu_430_p2;
    sc_signal< sc_lv<32> > grp_fu_436_p2;
    sc_signal< sc_lv<32> > grp_fu_417_p0;
    sc_signal< sc_lv<32> > grp_fu_417_p1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<32> > grp_fu_430_p0;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<32> > grp_fu_436_p0;
    sc_signal< sc_lv<32> > grp_fu_442_p1;
    sc_signal< sc_lv<32> > grp_fu_448_p1;
    sc_signal< sc_lv<4> > d_fu_519_p2;
    sc_signal< sc_lv<14> > tmp_3_fu_556_p3;
    sc_signal< sc_lv<12> > tmp_8_fu_568_p3;
    sc_signal< sc_lv<15> > zext_ln18_3_fu_576_p1;
    sc_signal< sc_lv<15> > zext_ln18_2_fu_564_p1;
    sc_signal< sc_lv<15> > add_ln18_fu_580_p2;
    sc_signal< sc_lv<15> > zext_ln17_fu_547_p1;
    sc_signal< sc_lv<15> > add_ln18_1_fu_586_p2;
    sc_signal< sc_lv<22> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<22> ap_ST_fsm_state1;
    static const sc_lv<22> ap_ST_fsm_state2;
    static const sc_lv<22> ap_ST_fsm_pp0_stage0;
    static const sc_lv<22> ap_ST_fsm_pp0_stage1;
    static const sc_lv<22> ap_ST_fsm_state7;
    static const sc_lv<22> ap_ST_fsm_pp1_stage0;
    static const sc_lv<22> ap_ST_fsm_pp1_stage1;
    static const sc_lv<22> ap_ST_fsm_state15;
    static const sc_lv<22> ap_ST_fsm_state16;
    static const sc_lv<22> ap_ST_fsm_state17;
    static const sc_lv<22> ap_ST_fsm_state18;
    static const sc_lv<22> ap_ST_fsm_state19;
    static const sc_lv<22> ap_ST_fsm_state20;
    static const sc_lv<22> ap_ST_fsm_state21;
    static const sc_lv<22> ap_ST_fsm_state22;
    static const sc_lv<22> ap_ST_fsm_state23;
    static const sc_lv<22> ap_ST_fsm_state24;
    static const sc_lv<22> ap_ST_fsm_state25;
    static const sc_lv<22> ap_ST_fsm_state26;
    static const sc_lv<22> ap_ST_fsm_state27;
    static const sc_lv<22> ap_ST_fsm_state28;
    static const sc_lv<22> ap_ST_fsm_state29;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<64> ap_const_lv64_8;
    static const sc_lv<64> ap_const_lv64_9;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<14> ap_const_lv14_3E80;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<11> ap_const_lv11_640;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<4> ap_const_lv4_A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln11_fu_513_p2();
    void thread_add_ln18_1_fu_586_p2();
    void thread_add_ln18_fu_580_p2();
    void thread_add_ln8_fu_490_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_state10_pp1_stage0_iter1();
    void thread_ap_block_state11_pp1_stage1_iter1();
    void thread_ap_block_state12_pp1_stage0_iter2();
    void thread_ap_block_state13_pp1_stage1_iter2();
    void thread_ap_block_state14_pp1_stage0_iter3();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage1_iter1();
    void thread_ap_block_state8_pp1_stage0_iter0();
    void thread_ap_block_state9_pp1_stage1_iter0();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state8();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_d_0_phi_fu_364_p4();
    void thread_ap_phi_mux_f_0_phi_fu_375_p4();
    void thread_ap_phi_mux_i_0_phi_fu_410_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_353_p4();
    void thread_ap_ready();
    void thread_d_fu_519_p2();
    void thread_dense_array_address0();
    void thread_dense_array_address1();
    void thread_dense_array_ce0();
    void thread_dense_array_ce1();
    void thread_dense_array_d0();
    void thread_dense_array_we0();
    void thread_dense_weights_address0();
    void thread_dense_weights_ce0();
    void thread_f_fu_597_p2();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_grp_fu_417_p0();
    void thread_grp_fu_417_p1();
    void thread_grp_fu_430_p0();
    void thread_grp_fu_436_p0();
    void thread_grp_fu_442_p1();
    void thread_grp_fu_448_p1();
    void thread_i_fu_625_p2();
    void thread_icmp_ln11_fu_507_p2();
    void thread_icmp_ln16_1_fu_610_p2();
    void thread_icmp_ln16_fu_525_p2();
    void thread_icmp_ln27_fu_619_p2();
    void thread_icmp_ln8_fu_501_p2();
    void thread_prediction_address0();
    void thread_prediction_address1();
    void thread_prediction_ce0();
    void thread_prediction_ce1();
    void thread_prediction_d0();
    void thread_prediction_d1();
    void thread_prediction_we0();
    void thread_prediction_we1();
    void thread_select_ln18_1_fu_602_p3();
    void thread_select_ln18_2_fu_539_p3();
    void thread_select_ln18_fu_531_p3();
    void thread_tmp_3_fu_556_p3();
    void thread_tmp_8_fu_568_p3();
    void thread_zext_ln17_fu_547_p1();
    void thread_zext_ln18_1_fu_551_p1();
    void thread_zext_ln18_2_fu_564_p1();
    void thread_zext_ln18_3_fu_576_p1();
    void thread_zext_ln18_4_fu_592_p1();
    void thread_zext_ln18_fu_615_p1();
    void thread_zext_ln29_fu_631_p1();
    void thread_zext_ln8_fu_496_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
