#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("fully_connected_0", 32, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("fully_connected_1", 32, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("fully_connected_2", 32, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("fully_connected_3", 32, hls_in, 3, "ap_none", "in_data", 1),
	Port_Property("fully_connected_4", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("fully_connected_5", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("fully_connected_6", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("fully_connected_7", 32, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("fully_connected_8", 32, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("fully_connected_9", 32, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("fully_connected_10", 32, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("fully_connected_11", 32, hls_in, 11, "ap_none", "in_data", 1),
	Port_Property("fully_connected_12", 32, hls_in, 12, "ap_none", "in_data", 1),
	Port_Property("fully_connected_13", 32, hls_in, 13, "ap_none", "in_data", 1),
	Port_Property("fully_connected_14", 32, hls_in, 14, "ap_none", "in_data", 1),
	Port_Property("fully_connected_15", 32, hls_in, 15, "ap_none", "in_data", 1),
	Port_Property("fully_connected_16", 32, hls_in, 16, "ap_none", "in_data", 1),
	Port_Property("fully_connected_17", 32, hls_in, 17, "ap_none", "in_data", 1),
	Port_Property("fully_connected_18", 32, hls_in, 18, "ap_none", "in_data", 1),
	Port_Property("fully_connected_19", 32, hls_in, 19, "ap_none", "in_data", 1),
	Port_Property("fully_connected_20", 32, hls_in, 20, "ap_none", "in_data", 1),
	Port_Property("fully_connected_21", 32, hls_in, 21, "ap_none", "in_data", 1),
	Port_Property("fully_connected_22", 32, hls_in, 22, "ap_none", "in_data", 1),
	Port_Property("fully_connected_23", 32, hls_in, 23, "ap_none", "in_data", 1),
	Port_Property("fully_connected_24", 32, hls_in, 24, "ap_none", "in_data", 1),
	Port_Property("fully_connected_25", 32, hls_in, 25, "ap_none", "in_data", 1),
	Port_Property("fully_connected_26", 32, hls_in, 26, "ap_none", "in_data", 1),
	Port_Property("fully_connected_27", 32, hls_in, 27, "ap_none", "in_data", 1),
	Port_Property("fully_connected_28", 32, hls_in, 28, "ap_none", "in_data", 1),
	Port_Property("fully_connected_29", 32, hls_in, 29, "ap_none", "in_data", 1),
	Port_Property("prediction_address0", 4, hls_out, 30, "ap_memory", "mem_address", 1),
	Port_Property("prediction_ce0", 1, hls_out, 30, "ap_memory", "mem_ce", 1),
	Port_Property("prediction_we0", 1, hls_out, 30, "ap_memory", "mem_we", 1),
	Port_Property("prediction_d0", 32, hls_out, 30, "ap_memory", "mem_din", 1),
};
const char* HLS_Design_Meta::dut_name = "dense";
