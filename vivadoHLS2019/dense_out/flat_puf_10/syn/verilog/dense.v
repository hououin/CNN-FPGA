// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dense,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=17.393000,HLS_SYN_LAT=1363,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=12,HLS_SYN_FF=2013,HLS_SYN_LUT=3750,HLS_VERSION=2019_1}" *)

module dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fully_connected_address0,
        fully_connected_ce0,
        fully_connected_q0,
        fully_connected_address1,
        fully_connected_ce1,
        fully_connected_q1,
        prediction_address0,
        prediction_ce0,
        prediction_we0,
        prediction_d0
);

parameter    ap_ST_fsm_state1 = 54'd1;
parameter    ap_ST_fsm_state2 = 54'd2;
parameter    ap_ST_fsm_pp0_stage0 = 54'd4;
parameter    ap_ST_fsm_pp0_stage1 = 54'd8;
parameter    ap_ST_fsm_pp0_stage2 = 54'd16;
parameter    ap_ST_fsm_pp0_stage3 = 54'd32;
parameter    ap_ST_fsm_pp0_stage4 = 54'd64;
parameter    ap_ST_fsm_pp0_stage5 = 54'd128;
parameter    ap_ST_fsm_pp0_stage6 = 54'd256;
parameter    ap_ST_fsm_pp0_stage7 = 54'd512;
parameter    ap_ST_fsm_pp0_stage8 = 54'd1024;
parameter    ap_ST_fsm_pp0_stage9 = 54'd2048;
parameter    ap_ST_fsm_pp0_stage10 = 54'd4096;
parameter    ap_ST_fsm_pp0_stage11 = 54'd8192;
parameter    ap_ST_fsm_pp0_stage12 = 54'd16384;
parameter    ap_ST_fsm_pp0_stage13 = 54'd32768;
parameter    ap_ST_fsm_pp0_stage14 = 54'd65536;
parameter    ap_ST_fsm_pp0_stage15 = 54'd131072;
parameter    ap_ST_fsm_pp0_stage16 = 54'd262144;
parameter    ap_ST_fsm_pp0_stage17 = 54'd524288;
parameter    ap_ST_fsm_pp0_stage18 = 54'd1048576;
parameter    ap_ST_fsm_pp0_stage19 = 54'd2097152;
parameter    ap_ST_fsm_pp0_stage20 = 54'd4194304;
parameter    ap_ST_fsm_pp0_stage21 = 54'd8388608;
parameter    ap_ST_fsm_pp0_stage22 = 54'd16777216;
parameter    ap_ST_fsm_pp0_stage23 = 54'd33554432;
parameter    ap_ST_fsm_pp0_stage24 = 54'd67108864;
parameter    ap_ST_fsm_pp0_stage25 = 54'd134217728;
parameter    ap_ST_fsm_pp0_stage26 = 54'd268435456;
parameter    ap_ST_fsm_pp0_stage27 = 54'd536870912;
parameter    ap_ST_fsm_pp0_stage28 = 54'd1073741824;
parameter    ap_ST_fsm_pp0_stage29 = 54'd2147483648;
parameter    ap_ST_fsm_pp0_stage30 = 54'd4294967296;
parameter    ap_ST_fsm_pp0_stage31 = 54'd8589934592;
parameter    ap_ST_fsm_pp0_stage32 = 54'd17179869184;
parameter    ap_ST_fsm_pp0_stage33 = 54'd34359738368;
parameter    ap_ST_fsm_pp0_stage34 = 54'd68719476736;
parameter    ap_ST_fsm_pp0_stage35 = 54'd137438953472;
parameter    ap_ST_fsm_pp0_stage36 = 54'd274877906944;
parameter    ap_ST_fsm_pp0_stage37 = 54'd549755813888;
parameter    ap_ST_fsm_pp0_stage38 = 54'd1099511627776;
parameter    ap_ST_fsm_pp0_stage39 = 54'd2199023255552;
parameter    ap_ST_fsm_state46 = 54'd4398046511104;
parameter    ap_ST_fsm_state47 = 54'd8796093022208;
parameter    ap_ST_fsm_state48 = 54'd17592186044416;
parameter    ap_ST_fsm_state49 = 54'd35184372088832;
parameter    ap_ST_fsm_state50 = 54'd70368744177664;
parameter    ap_ST_fsm_pp1_stage0 = 54'd140737488355328;
parameter    ap_ST_fsm_pp1_stage1 = 54'd281474976710656;
parameter    ap_ST_fsm_pp1_stage2 = 54'd562949953421312;
parameter    ap_ST_fsm_pp1_stage3 = 54'd1125899906842624;
parameter    ap_ST_fsm_state61 = 54'd2251799813685248;
parameter    ap_ST_fsm_pp2_stage0 = 54'd4503599627370496;
parameter    ap_ST_fsm_state77 = 54'd9007199254740992;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] fully_connected_address0;
output   fully_connected_ce0;
input  [31:0] fully_connected_q0;
output  [4:0] fully_connected_address1;
output   fully_connected_ce1;
input  [31:0] fully_connected_q1;
output  [3:0] prediction_address0;
output   prediction_ce0;
output   prediction_we0;
output  [31:0] prediction_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] fully_connected_address0;
reg fully_connected_ce0;
reg[4:0] fully_connected_address1;
reg fully_connected_ce1;
reg prediction_ce0;
reg prediction_we0;

(* fsm_encoding = "none" *) reg   [53:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] dense_out_weights_address0;
reg    dense_out_weights_ce0;
wire   [31:0] dense_out_weights_q0;
wire   [3:0] dense_out_bias_address0;
reg    dense_out_bias_ce0;
wire   [31:0] dense_out_bias_q0;
reg   [4:0] f_0_0_reg_335;
reg   [31:0] w_sum_0_0_reg_347;
reg   [31:0] sum_0_reg_359;
reg   [3:0] i_0_reg_371;
reg   [3:0] j_0_reg_382;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state4_pp0_stage1_iter0;
wire    ap_block_state44_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln21_reg_1054;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state5_pp0_stage2_iter0;
wire    ap_block_state45_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state6_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state7_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state8_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state9_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state10_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state11_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state12_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state13_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] reg_423;
reg   [31:0] reg_428;
wire   [31:0] grp_fu_401_p2;
reg   [31:0] reg_434;
reg   [31:0] reg_439;
reg   [31:0] reg_445;
wire   [31:0] grp_fu_393_p2;
reg   [31:0] reg_450;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state17_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_state21_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_state25_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_state29_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state33_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_state37_pp0_stage34_iter0;
wire    ap_block_pp0_stage34_11001;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_state41_pp0_stage38_iter0;
wire    ap_block_pp0_stage38_11001;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_state52_pp1_stage1_iter0;
wire    ap_block_state56_pp1_stage1_iter1;
wire    ap_block_state60_pp1_stage1_iter2;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln31_reg_1291;
reg   [0:0] icmp_ln31_reg_1291_pp1_iter2_reg;
wire   [31:0] dense_array_q0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state62_pp2_stage0_iter0;
wire    ap_block_state63_pp2_stage0_iter1;
wire    ap_block_state64_pp2_stage0_iter2;
wire    ap_block_state65_pp2_stage0_iter3;
wire    ap_block_state66_pp2_stage0_iter4;
wire    ap_block_state67_pp2_stage0_iter5;
wire    ap_block_state68_pp2_stage0_iter6;
wire    ap_block_state69_pp2_stage0_iter7;
wire    ap_block_state70_pp2_stage0_iter8;
wire    ap_block_state71_pp2_stage0_iter9;
wire    ap_block_state72_pp2_stage0_iter10;
wire    ap_block_state73_pp2_stage0_iter11;
wire    ap_block_state74_pp2_stage0_iter12;
wire    ap_block_state75_pp2_stage0_iter13;
wire    ap_block_state76_pp2_stage0_iter14;
wire    ap_block_pp2_stage0_11001;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] icmp_ln37_reg_1305;
wire   [31:0] grp_fu_412_p2;
reg   [31:0] reg_461;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln31_reg_1291_pp1_iter1_reg;
reg    ap_enable_reg_pp2_iter5;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter4_reg;
wire   [0:0] icmp_ln16_fu_467_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] d_fu_473_p2;
reg   [3:0] d_reg_1025;
wire   [63:0] zext_ln23_fu_479_p1;
reg   [63:0] zext_ln23_reg_1030;
wire   [9:0] zext_ln21_fu_483_p1;
reg   [9:0] zext_ln21_reg_1036;
wire   [8:0] zext_ln21_1_fu_487_p1;
reg   [8:0] zext_ln21_1_reg_1047;
wire   [0:0] icmp_ln21_fu_491_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state43_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln21_reg_1054_pp0_iter1_reg;
wire   [4:0] or_ln21_fu_542_p2;
reg   [4:0] or_ln21_reg_1068;
wire   [5:0] f_0_0_cast1_fu_553_p1;
reg   [5:0] f_0_0_cast1_reg_1079;
wire   [8:0] add_ln23_5_fu_636_p2;
reg   [8:0] add_ln23_5_reg_1094;
wire   [5:0] add_ln21_1_fu_641_p2;
reg   [5:0] add_ln21_1_reg_1104;
wire   [5:0] add_ln21_2_fu_656_p2;
reg   [5:0] add_ln21_2_reg_1120;
wire   [5:0] add_ln21_3_fu_666_p2;
reg   [5:0] add_ln21_3_reg_1131;
reg   [31:0] fully_connected_load_5_reg_1147;
wire   [5:0] add_ln21_4_fu_714_p2;
reg   [5:0] add_ln21_4_reg_1152;
wire   [5:0] add_ln21_5_fu_724_p2;
reg   [5:0] add_ln21_5_reg_1163;
reg   [31:0] tmp_3_2_reg_1174;
reg   [31:0] fully_connected_load_7_reg_1184;
wire   [5:0] add_ln21_6_fu_772_p2;
reg   [5:0] add_ln21_6_reg_1189;
wire   [5:0] add_ln21_7_fu_782_p2;
reg   [5:0] add_ln21_7_reg_1200;
reg   [31:0] tmp_3_3_reg_1211;
reg   [31:0] fully_connected_load_9_reg_1221;
reg   [31:0] tmp_3_5_reg_1231;
reg   [31:0] tmp_3_6_reg_1241;
wire   [9:0] add_ln23_19_fu_972_p2;
reg   [9:0] add_ln23_19_reg_1251;
reg   [31:0] tmp_3_7_reg_1256;
reg   [31:0] tmp_3_9_reg_1266;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state14_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [4:0] add_ln21_8_fu_981_p2;
reg   [4:0] add_ln21_8_reg_1271;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_state42_pp0_stage39_iter0;
wire    ap_block_pp0_stage39_11001;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire   [0:0] icmp_ln31_fu_987_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state51_pp1_stage0_iter0;
wire    ap_block_state55_pp1_stage0_iter1;
wire    ap_block_state59_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
wire   [3:0] i_fu_993_p2;
reg   [3:0] i_reg_1295;
wire   [0:0] icmp_ln37_fu_1004_p2;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter1_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter2_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter3_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter5_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter6_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter7_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter8_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter9_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter10_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter11_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter12_reg;
reg   [0:0] icmp_ln37_reg_1305_pp2_iter13_reg;
wire   [3:0] j_fu_1010_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] zext_ln39_fu_1016_p1;
reg   [63:0] zext_ln39_reg_1314;
reg   [63:0] zext_ln39_reg_1314_pp2_iter1_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter2_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter3_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter4_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter5_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter6_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter7_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter8_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter9_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter10_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter11_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter12_reg;
reg   [63:0] zext_ln39_reg_1314_pp2_iter13_reg;
wire   [31:0] grp_fu_407_p2;
reg   [31:0] tmp_6_reg_1324;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_block_pp0_stage39_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state51;
wire    ap_block_state54_pp1_stage3_iter0;
wire    ap_block_state58_pp1_stage3_iter1;
wire    ap_block_pp1_stage3_subdone;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage1_subdone;
wire    ap_CS_fsm_state61;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state62;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg   [3:0] dense_array_address0;
reg    dense_array_ce0;
reg    dense_array_we0;
reg   [3:0] d_0_reg_324;
wire    ap_CS_fsm_state50;
reg   [4:0] ap_phi_mux_f_0_0_phi_fu_339_p4;
wire    ap_block_pp0_stage0;
wire   [31:0] ap_phi_mux_w_sum_0_0_phi_fu_351_p4;
reg   [3:0] ap_phi_mux_i_0_phi_fu_375_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln23_13_fu_537_p1;
wire   [63:0] zext_ln23_1_fu_497_p1;
wire   [63:0] zext_ln23_2_fu_548_p1;
wire   [63:0] zext_ln23_16_fu_590_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln23_3_fu_601_p1;
wire   [63:0] zext_ln23_4_fu_647_p1;
wire   [63:0] zext_ln23_19_fu_652_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln23_5_fu_661_p1;
wire   [63:0] zext_ln23_6_fu_671_p1;
wire   [63:0] zext_ln23_22_fu_709_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln23_7_fu_719_p1;
wire   [63:0] zext_ln23_8_fu_729_p1;
wire   [63:0] zext_ln23_25_fu_767_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln23_9_fu_777_p1;
wire   [63:0] zext_ln23_10_fu_787_p1;
wire   [63:0] zext_ln23_28_fu_825_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln23_31_fu_863_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln23_34_fu_901_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln23_37_fu_939_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln23_40_fu_977_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln33_fu_999_p1;
wire    ap_block_pp2_stage0;
reg   [31:0] grp_fu_393_p0;
reg   [31:0] grp_fu_393_p1;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire    ap_block_pp0_stage39;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
reg   [31:0] grp_fu_401_p1;
wire    ap_block_pp0_stage10;
wire    ap_block_pp1_stage1;
wire   [7:0] tmp_8_fu_502_p3;
wire   [5:0] tmp_9_fu_514_p3;
wire   [8:0] zext_ln23_12_fu_522_p1;
wire   [8:0] zext_ln23_11_fu_510_p1;
wire   [8:0] add_ln23_fu_526_p2;
wire   [8:0] add_ln23_1_fu_532_p2;
wire   [7:0] tmp_10_fu_557_p3;
wire   [5:0] tmp_11_fu_568_p3;
wire   [8:0] zext_ln23_15_fu_575_p1;
wire   [8:0] zext_ln23_14_fu_564_p1;
wire   [8:0] add_ln23_2_fu_579_p2;
wire   [8:0] add_ln23_3_fu_585_p2;
wire   [4:0] add_ln21_fu_595_p2;
wire   [7:0] tmp_12_fu_606_p3;
wire   [5:0] tmp_13_fu_618_p3;
wire   [8:0] zext_ln23_18_fu_626_p1;
wire   [8:0] zext_ln23_17_fu_614_p1;
wire   [8:0] add_ln23_4_fu_630_p2;
wire   [8:0] tmp_14_fu_676_p3;
wire   [6:0] tmp_15_fu_687_p3;
wire   [9:0] zext_ln23_21_fu_694_p1;
wire   [9:0] zext_ln23_20_fu_683_p1;
wire   [9:0] add_ln23_6_fu_698_p2;
wire   [9:0] add_ln23_7_fu_704_p2;
wire   [8:0] tmp_16_fu_734_p3;
wire   [6:0] tmp_17_fu_745_p3;
wire   [9:0] zext_ln23_24_fu_752_p1;
wire   [9:0] zext_ln23_23_fu_741_p1;
wire   [9:0] add_ln23_8_fu_756_p2;
wire   [9:0] add_ln23_9_fu_762_p2;
wire   [8:0] tmp_18_fu_792_p3;
wire   [6:0] tmp_19_fu_803_p3;
wire   [9:0] zext_ln23_27_fu_810_p1;
wire   [9:0] zext_ln23_26_fu_799_p1;
wire   [9:0] add_ln23_10_fu_814_p2;
wire   [9:0] add_ln23_11_fu_820_p2;
wire   [8:0] tmp_20_fu_830_p3;
wire   [6:0] tmp_21_fu_841_p3;
wire   [9:0] zext_ln23_30_fu_848_p1;
wire   [9:0] zext_ln23_29_fu_837_p1;
wire   [9:0] add_ln23_12_fu_852_p2;
wire   [9:0] add_ln23_13_fu_858_p2;
wire   [8:0] tmp_22_fu_868_p3;
wire   [6:0] tmp_23_fu_879_p3;
wire   [9:0] zext_ln23_33_fu_886_p1;
wire   [9:0] zext_ln23_32_fu_875_p1;
wire   [9:0] add_ln23_14_fu_890_p2;
wire   [9:0] add_ln23_15_fu_896_p2;
wire   [8:0] tmp_24_fu_906_p3;
wire   [6:0] tmp_25_fu_917_p3;
wire   [9:0] zext_ln23_36_fu_924_p1;
wire   [9:0] zext_ln23_35_fu_913_p1;
wire   [9:0] add_ln23_16_fu_928_p2;
wire   [9:0] add_ln23_17_fu_934_p2;
wire   [8:0] tmp_26_fu_944_p3;
wire   [6:0] tmp_27_fu_955_p3;
wire   [9:0] zext_ln23_39_fu_962_p1;
wire   [9:0] zext_ln23_38_fu_951_p1;
wire   [9:0] add_ln23_18_fu_966_p2;
wire    ap_CS_fsm_state77;
reg   [53:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state15_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state16_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state18_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state19_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_state20_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage17_11001;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state22_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage19_11001;
wire    ap_block_state23_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_state24_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage21_11001;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state26_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_state27_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_state28_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage25_11001;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_state30_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage27_11001;
wire    ap_block_state31_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage28_11001;
wire    ap_block_state32_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage29_11001;
wire    ap_block_pp0_stage30_subdone;
wire    ap_block_state34_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_block_pp0_stage31_11001;
wire    ap_block_state35_pp0_stage32_iter0;
wire    ap_block_pp0_stage32_subdone;
wire    ap_block_pp0_stage32_11001;
wire    ap_block_state36_pp0_stage33_iter0;
wire    ap_block_pp0_stage33_subdone;
wire    ap_block_pp0_stage33_11001;
wire    ap_block_pp0_stage34_subdone;
wire    ap_block_state38_pp0_stage35_iter0;
wire    ap_block_pp0_stage35_subdone;
wire    ap_block_pp0_stage35_11001;
wire    ap_block_state39_pp0_stage36_iter0;
wire    ap_block_pp0_stage36_subdone;
wire    ap_block_pp0_stage36_11001;
wire    ap_block_state40_pp0_stage37_iter0;
wire    ap_block_pp0_stage37_subdone;
wire    ap_block_pp0_stage37_11001;
wire    ap_block_pp0_stage38_subdone;
wire    ap_block_state53_pp1_stage2_iter0;
wire    ap_block_state57_pp1_stage2_iter1;
wire    ap_block_pp1_stage2_subdone;
wire    ap_block_pp1_stage2_11001;
wire    ap_block_pp1_stage3_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 54'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
end

dense_dense_out_wbkb #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
dense_out_weights_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_weights_address0),
    .ce0(dense_out_weights_ce0),
    .q0(dense_out_weights_q0)
);

dense_dense_out_bcud #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_out_bias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_out_bias_address0),
    .ce0(dense_out_bias_ce0),
    .q0(dense_out_bias_q0)
);

dense_dense_array #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_array_address0),
    .ce0(dense_array_ce0),
    .we0(dense_array_we0),
    .d0(grp_fu_393_p2),
    .q0(dense_array_q0)
);

dense_fadd_32ns_3dEe #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_fadd_32ns_3dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_393_p0),
    .din1(grp_fu_393_p1),
    .ce(1'b1),
    .dout(grp_fu_393_p2)
);

dense_fmul_32ns_3eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_fmul_32ns_3eOg_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(dense_out_weights_q0),
    .din1(grp_fu_401_p1),
    .ce(1'b1),
    .dout(grp_fu_401_p2)
);

dense_fdiv_32ns_3fYi #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_fdiv_32ns_3fYi_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_461),
    .din1(sum_0_reg_359),
    .ce(1'b1),
    .dout(grp_fu_407_p2)
);

dense_fexp_32ns_3g8j #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dense_fexp_32ns_3g8j_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(dense_array_q0),
    .ce(1'b1),
    .dout(grp_fu_412_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_467_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage39_subdone) & (1'b1 == ap_CS_fsm_pp0_stage39)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_467_p2 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln16_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((icmp_ln16_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state62) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state62)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state62);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp2_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        d_0_reg_324 <= d_reg_1025;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_0_reg_324 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln21_reg_1054 == 1'd0))) begin
        f_0_0_reg_335 <= add_ln21_8_reg_1271;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_467_p2 == 1'd0))) begin
        f_0_0_reg_335 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_371 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_1291 == 1'd0))) begin
        i_0_reg_371 <= i_reg_1295;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        j_0_reg_382 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln37_fu_1004_p2 == 1'd0))) begin
        j_0_reg_382 <= j_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_428 <= fully_connected_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            reg_428 <= fully_connected_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            reg_439 <= fully_connected_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            reg_439 <= fully_connected_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln16_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        sum_0_reg_359 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln31_reg_1291_pp1_iter2_reg == 1'd0))) begin
        sum_0_reg_359 <= grp_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln21_reg_1054_pp0_iter1_reg == 1'd0))) begin
        w_sum_0_0_reg_347 <= grp_fu_393_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_467_p2 == 1'd0))) begin
        w_sum_0_0_reg_347 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln21_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln21_1_reg_1104 <= add_ln21_1_fu_641_p2;
        add_ln23_5_reg_1094 <= add_ln23_5_fu_636_p2;
        f_0_0_cast1_reg_1079[4 : 0] <= f_0_0_cast1_fu_553_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        add_ln21_2_reg_1120 <= add_ln21_2_fu_656_p2;
        add_ln21_3_reg_1131 <= add_ln21_3_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        add_ln21_4_reg_1152 <= add_ln21_4_fu_714_p2;
        add_ln21_5_reg_1163 <= add_ln21_5_fu_724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        add_ln21_6_reg_1189 <= add_ln21_6_fu_772_p2;
        add_ln21_7_reg_1200 <= add_ln21_7_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage39_11001) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        add_ln21_8_reg_1271 <= add_ln21_8_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln21_reg_1054 == 1'd0))) begin
        add_ln23_19_reg_1251 <= add_ln23_19_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        d_reg_1025 <= d_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        fully_connected_load_5_reg_1147 <= fully_connected_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        fully_connected_load_7_reg_1184 <= fully_connected_q1;
        tmp_3_2_reg_1174 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln21_reg_1054 == 1'd0))) begin
        fully_connected_load_9_reg_1221 <= fully_connected_q1;
        tmp_3_3_reg_1211 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_reg_1295 <= i_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln21_reg_1054 <= icmp_ln21_fu_491_p2;
        icmp_ln21_reg_1054_pp0_iter1_reg <= icmp_ln21_reg_1054;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln31_reg_1291 <= icmp_ln31_fu_987_p2;
        icmp_ln31_reg_1291_pp1_iter1_reg <= icmp_ln31_reg_1291;
        icmp_ln31_reg_1291_pp1_iter2_reg <= icmp_ln31_reg_1291_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln37_reg_1305 <= icmp_ln37_fu_1004_p2;
        icmp_ln37_reg_1305_pp2_iter1_reg <= icmp_ln37_reg_1305;
        zext_ln39_reg_1314_pp2_iter1_reg[3 : 0] <= zext_ln39_reg_1314[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln37_reg_1305_pp2_iter10_reg <= icmp_ln37_reg_1305_pp2_iter9_reg;
        icmp_ln37_reg_1305_pp2_iter11_reg <= icmp_ln37_reg_1305_pp2_iter10_reg;
        icmp_ln37_reg_1305_pp2_iter12_reg <= icmp_ln37_reg_1305_pp2_iter11_reg;
        icmp_ln37_reg_1305_pp2_iter13_reg <= icmp_ln37_reg_1305_pp2_iter12_reg;
        icmp_ln37_reg_1305_pp2_iter2_reg <= icmp_ln37_reg_1305_pp2_iter1_reg;
        icmp_ln37_reg_1305_pp2_iter3_reg <= icmp_ln37_reg_1305_pp2_iter2_reg;
        icmp_ln37_reg_1305_pp2_iter4_reg <= icmp_ln37_reg_1305_pp2_iter3_reg;
        icmp_ln37_reg_1305_pp2_iter5_reg <= icmp_ln37_reg_1305_pp2_iter4_reg;
        icmp_ln37_reg_1305_pp2_iter6_reg <= icmp_ln37_reg_1305_pp2_iter5_reg;
        icmp_ln37_reg_1305_pp2_iter7_reg <= icmp_ln37_reg_1305_pp2_iter6_reg;
        icmp_ln37_reg_1305_pp2_iter8_reg <= icmp_ln37_reg_1305_pp2_iter7_reg;
        icmp_ln37_reg_1305_pp2_iter9_reg <= icmp_ln37_reg_1305_pp2_iter8_reg;
        zext_ln39_reg_1314_pp2_iter10_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter9_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter11_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter10_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter12_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter11_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter13_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter12_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter2_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter1_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter3_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter2_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter4_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter3_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter5_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter4_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter6_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter5_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter7_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter6_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter8_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter7_reg[3 : 0];
        zext_ln39_reg_1314_pp2_iter9_reg[3 : 0] <= zext_ln39_reg_1314_pp2_iter8_reg[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln21_fu_491_p2 == 1'd0))) begin
        or_ln21_reg_1068[4 : 1] <= or_ln21_fu_542_p2[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln21_reg_1054 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln21_reg_1054 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_423 <= fully_connected_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln21_reg_1054 == 1'd0)))) begin
        reg_434 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln21_reg_1054 == 1'd0)))) begin
        reg_445 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln31_reg_1291_pp1_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage38_11001) & (1'b1 == ap_CS_fsm_pp0_stage38) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage34_11001) & (1'b1 == ap_CS_fsm_pp0_stage34) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage30_11001) & (1'b1 == ap_CS_fsm_pp0_stage30) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage26_11001) & (1'b1 == ap_CS_fsm_pp0_stage26) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage22_11001) & (1'b1 == ap_CS_fsm_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage18_11001) & (1'b1 == ap_CS_fsm_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln21_reg_1054 == 1'd0)))) begin
        reg_450 <= grp_fu_393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1) & (icmp_ln37_reg_1305_pp2_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln31_reg_1291_pp1_iter1_reg == 1'd0)))) begin
        reg_461 <= grp_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        tmp_3_5_reg_1231 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        tmp_3_6_reg_1241 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        tmp_3_7_reg_1256 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln21_reg_1054 == 1'd0))) begin
        tmp_3_9_reg_1266 <= grp_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln37_reg_1305_pp2_iter12_reg == 1'd0))) begin
        tmp_6_reg_1324 <= grp_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln16_fu_467_p2 == 1'd0))) begin
        zext_ln21_1_reg_1047[3 : 0] <= zext_ln21_1_fu_487_p1[3 : 0];
        zext_ln21_reg_1036[3 : 0] <= zext_ln21_fu_483_p1[3 : 0];
        zext_ln23_reg_1030[3 : 0] <= zext_ln23_fu_479_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln37_fu_1004_p2 == 1'd0))) begin
        zext_ln39_reg_1314[3 : 0] <= zext_ln39_fu_1016_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln21_fu_491_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln31_fu_987_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_1004_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state62 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state62 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln21_reg_1054 == 1'd0))) begin
        ap_phi_mux_f_0_0_phi_fu_339_p4 = add_ln21_8_reg_1271;
    end else begin
        ap_phi_mux_f_0_0_phi_fu_339_p4 = f_0_0_reg_335;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_1291 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_375_p4 = i_reg_1295;
    end else begin
        ap_phi_mux_i_0_phi_fu_375_p4 = i_0_reg_371;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        dense_array_address0 = zext_ln39_fu_1016_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        dense_array_address0 = zext_ln33_fu_999_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        dense_array_address0 = zext_ln23_reg_1030;
    end else begin
        dense_array_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        dense_array_ce0 = 1'b1;
    end else begin
        dense_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        dense_array_we0 = 1'b1;
    end else begin
        dense_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        dense_out_bias_ce0 = 1'b1;
    end else begin
        dense_out_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            dense_out_weights_address0 = zext_ln23_40_fu_977_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            dense_out_weights_address0 = zext_ln23_37_fu_939_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            dense_out_weights_address0 = zext_ln23_34_fu_901_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            dense_out_weights_address0 = zext_ln23_31_fu_863_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            dense_out_weights_address0 = zext_ln23_28_fu_825_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            dense_out_weights_address0 = zext_ln23_25_fu_767_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            dense_out_weights_address0 = zext_ln23_22_fu_709_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            dense_out_weights_address0 = zext_ln23_19_fu_652_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            dense_out_weights_address0 = zext_ln23_16_fu_590_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            dense_out_weights_address0 = zext_ln23_13_fu_537_p1;
        end else begin
            dense_out_weights_address0 = 'bx;
        end
    end else begin
        dense_out_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        dense_out_weights_ce0 = 1'b1;
    end else begin
        dense_out_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            fully_connected_address0 = zext_ln23_9_fu_777_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            fully_connected_address0 = zext_ln23_7_fu_719_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            fully_connected_address0 = zext_ln23_5_fu_661_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            fully_connected_address0 = zext_ln23_3_fu_601_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            fully_connected_address0 = zext_ln23_1_fu_497_p1;
        end else begin
            fully_connected_address0 = 'bx;
        end
    end else begin
        fully_connected_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            fully_connected_address1 = zext_ln23_10_fu_787_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            fully_connected_address1 = zext_ln23_8_fu_729_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            fully_connected_address1 = zext_ln23_6_fu_671_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            fully_connected_address1 = zext_ln23_4_fu_647_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            fully_connected_address1 = zext_ln23_2_fu_548_p1;
        end else begin
            fully_connected_address1 = 'bx;
        end
    end else begin
        fully_connected_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        fully_connected_ce0 = 1'b1;
    end else begin
        fully_connected_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        fully_connected_ce1 = 1'b1;
    end else begin
        fully_connected_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_393_p0 = sum_0_reg_359;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_393_p0 = w_sum_0_0_reg_347;
    end else if ((((1'b0 == ap_block_pp0_stage35) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage39) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_393_p0 = reg_450;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p0 = ap_phi_mux_w_sum_0_0_phi_fu_351_p4;
    end else begin
        grp_fu_393_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        grp_fu_393_p1 = reg_461;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_393_p1 = dense_out_bias_q0;
    end else if (((1'b0 == ap_block_pp0_stage39) & (1'b1 == ap_CS_fsm_pp0_stage39) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_9_reg_1266;
    end else if (((1'b0 == ap_block_pp0_stage31) & (1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_7_reg_1256;
    end else if (((1'b0 == ap_block_pp0_stage27) & (1'b1 == ap_CS_fsm_pp0_stage27) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_6_reg_1241;
    end else if (((1'b0 == ap_block_pp0_stage23) & (1'b1 == ap_CS_fsm_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_5_reg_1231;
    end else if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_3_reg_1211;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_393_p1 = tmp_3_2_reg_1174;
    end else if ((((1'b0 == ap_block_pp0_stage35) & (1'b1 == ap_CS_fsm_pp0_stage35) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_393_p1 = reg_445;
    end else if ((((1'b0 == ap_block_pp0_stage19) & (1'b1 == ap_CS_fsm_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_393_p1 = reg_434;
    end else begin
        grp_fu_393_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_401_p1 = fully_connected_load_9_reg_1221;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_401_p1 = fully_connected_load_7_reg_1184;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_401_p1 = fully_connected_load_5_reg_1147;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_401_p1 = reg_439;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_401_p1 = reg_423;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        grp_fu_401_p1 = reg_428;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_401_p1 = fully_connected_q0;
    end else begin
        grp_fu_401_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1))) begin
        prediction_ce0 = 1'b1;
    end else begin
        prediction_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1) & (icmp_ln37_reg_1305_pp2_iter13_reg == 1'd0))) begin
        prediction_we0 = 1'b1;
    end else begin
        prediction_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln16_fu_467_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln21_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln21_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln31_fu_987_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln31_fu_987_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln37_fu_1004_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter13 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter13 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter14 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln37_fu_1004_p2 == 1'd1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_1_fu_641_p2 = (f_0_0_cast1_fu_553_p1 + 6'd3);

assign add_ln21_2_fu_656_p2 = (f_0_0_cast1_reg_1079 + 6'd4);

assign add_ln21_3_fu_666_p2 = (f_0_0_cast1_reg_1079 + 6'd5);

assign add_ln21_4_fu_714_p2 = (f_0_0_cast1_reg_1079 + 6'd6);

assign add_ln21_5_fu_724_p2 = (f_0_0_cast1_reg_1079 + 6'd7);

assign add_ln21_6_fu_772_p2 = (f_0_0_cast1_reg_1079 + 6'd8);

assign add_ln21_7_fu_782_p2 = (f_0_0_cast1_reg_1079 + 6'd9);

assign add_ln21_8_fu_981_p2 = (f_0_0_reg_335 + 5'd10);

assign add_ln21_fu_595_p2 = (f_0_0_reg_335 + 5'd2);

assign add_ln23_10_fu_814_p2 = (zext_ln23_27_fu_810_p1 + zext_ln23_26_fu_799_p1);

assign add_ln23_11_fu_820_p2 = (add_ln23_10_fu_814_p2 + zext_ln21_reg_1036);

assign add_ln23_12_fu_852_p2 = (zext_ln23_30_fu_848_p1 + zext_ln23_29_fu_837_p1);

assign add_ln23_13_fu_858_p2 = (add_ln23_12_fu_852_p2 + zext_ln21_reg_1036);

assign add_ln23_14_fu_890_p2 = (zext_ln23_33_fu_886_p1 + zext_ln23_32_fu_875_p1);

assign add_ln23_15_fu_896_p2 = (add_ln23_14_fu_890_p2 + zext_ln21_reg_1036);

assign add_ln23_16_fu_928_p2 = (zext_ln23_36_fu_924_p1 + zext_ln23_35_fu_913_p1);

assign add_ln23_17_fu_934_p2 = (add_ln23_16_fu_928_p2 + zext_ln21_reg_1036);

assign add_ln23_18_fu_966_p2 = (zext_ln23_39_fu_962_p1 + zext_ln23_38_fu_951_p1);

assign add_ln23_19_fu_972_p2 = (add_ln23_18_fu_966_p2 + zext_ln21_reg_1036);

assign add_ln23_1_fu_532_p2 = (add_ln23_fu_526_p2 + zext_ln21_1_reg_1047);

assign add_ln23_2_fu_579_p2 = (zext_ln23_15_fu_575_p1 + zext_ln23_14_fu_564_p1);

assign add_ln23_3_fu_585_p2 = (add_ln23_2_fu_579_p2 + zext_ln21_1_reg_1047);

assign add_ln23_4_fu_630_p2 = (zext_ln23_18_fu_626_p1 + zext_ln23_17_fu_614_p1);

assign add_ln23_5_fu_636_p2 = (add_ln23_4_fu_630_p2 + zext_ln21_1_reg_1047);

assign add_ln23_6_fu_698_p2 = (zext_ln23_21_fu_694_p1 + zext_ln23_20_fu_683_p1);

assign add_ln23_7_fu_704_p2 = (add_ln23_6_fu_698_p2 + zext_ln21_reg_1036);

assign add_ln23_8_fu_756_p2 = (zext_ln23_24_fu_752_p1 + zext_ln23_23_fu_741_p1);

assign add_ln23_9_fu_762_p2 = (add_ln23_8_fu_756_p2 + zext_ln21_reg_1036);

assign add_ln23_fu_526_p2 = (zext_ln23_12_fu_522_p1 + zext_ln23_11_fu_510_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd53];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage32_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage33_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage34_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage35_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage36_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage37_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage38_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage39_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage32_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage33_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage34_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage35_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage36_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage37_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage38_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage39_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp1_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp1_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_mux_w_sum_0_0_phi_fu_351_p4 = w_sum_0_0_reg_347;

assign d_fu_473_p2 = (d_0_reg_324 + 4'd1);

assign dense_out_bias_address0 = zext_ln23_reg_1030;

assign f_0_0_cast1_fu_553_p1 = f_0_0_reg_335;

assign i_fu_993_p2 = (ap_phi_mux_i_0_phi_fu_375_p4 + 4'd1);

assign icmp_ln16_fu_467_p2 = ((d_0_reg_324 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln21_fu_491_p2 = ((ap_phi_mux_f_0_0_phi_fu_339_p4 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_987_p2 = ((ap_phi_mux_i_0_phi_fu_375_p4 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1004_p2 = ((j_0_reg_382 == 4'd10) ? 1'b1 : 1'b0);

assign j_fu_1010_p2 = (j_0_reg_382 + 4'd1);

assign or_ln21_fu_542_p2 = (ap_phi_mux_f_0_0_phi_fu_339_p4 | 5'd1);

assign prediction_address0 = zext_ln39_reg_1314_pp2_iter13_reg;

assign prediction_d0 = tmp_6_reg_1324;

assign tmp_10_fu_557_p3 = {{or_ln21_reg_1068}, {3'd0}};

assign tmp_11_fu_568_p3 = {{or_ln21_reg_1068}, {1'd0}};

assign tmp_12_fu_606_p3 = {{add_ln21_fu_595_p2}, {3'd0}};

assign tmp_13_fu_618_p3 = {{add_ln21_fu_595_p2}, {1'd0}};

assign tmp_14_fu_676_p3 = {{add_ln21_1_reg_1104}, {3'd0}};

assign tmp_15_fu_687_p3 = {{add_ln21_1_reg_1104}, {1'd0}};

assign tmp_16_fu_734_p3 = {{add_ln21_2_reg_1120}, {3'd0}};

assign tmp_17_fu_745_p3 = {{add_ln21_2_reg_1120}, {1'd0}};

assign tmp_18_fu_792_p3 = {{add_ln21_3_reg_1131}, {3'd0}};

assign tmp_19_fu_803_p3 = {{add_ln21_3_reg_1131}, {1'd0}};

assign tmp_20_fu_830_p3 = {{add_ln21_4_reg_1152}, {3'd0}};

assign tmp_21_fu_841_p3 = {{add_ln21_4_reg_1152}, {1'd0}};

assign tmp_22_fu_868_p3 = {{add_ln21_5_reg_1163}, {3'd0}};

assign tmp_23_fu_879_p3 = {{add_ln21_5_reg_1163}, {1'd0}};

assign tmp_24_fu_906_p3 = {{add_ln21_6_reg_1189}, {3'd0}};

assign tmp_25_fu_917_p3 = {{add_ln21_6_reg_1189}, {1'd0}};

assign tmp_26_fu_944_p3 = {{add_ln21_7_reg_1200}, {3'd0}};

assign tmp_27_fu_955_p3 = {{add_ln21_7_reg_1200}, {1'd0}};

assign tmp_8_fu_502_p3 = {{ap_phi_mux_f_0_0_phi_fu_339_p4}, {3'd0}};

assign tmp_9_fu_514_p3 = {{ap_phi_mux_f_0_0_phi_fu_339_p4}, {1'd0}};

assign zext_ln21_1_fu_487_p1 = d_0_reg_324;

assign zext_ln21_fu_483_p1 = d_0_reg_324;

assign zext_ln23_10_fu_787_p1 = add_ln21_7_fu_782_p2;

assign zext_ln23_11_fu_510_p1 = tmp_8_fu_502_p3;

assign zext_ln23_12_fu_522_p1 = tmp_9_fu_514_p3;

assign zext_ln23_13_fu_537_p1 = add_ln23_1_fu_532_p2;

assign zext_ln23_14_fu_564_p1 = tmp_10_fu_557_p3;

assign zext_ln23_15_fu_575_p1 = tmp_11_fu_568_p3;

assign zext_ln23_16_fu_590_p1 = add_ln23_3_fu_585_p2;

assign zext_ln23_17_fu_614_p1 = tmp_12_fu_606_p3;

assign zext_ln23_18_fu_626_p1 = tmp_13_fu_618_p3;

assign zext_ln23_19_fu_652_p1 = add_ln23_5_reg_1094;

assign zext_ln23_1_fu_497_p1 = ap_phi_mux_f_0_0_phi_fu_339_p4;

assign zext_ln23_20_fu_683_p1 = tmp_14_fu_676_p3;

assign zext_ln23_21_fu_694_p1 = tmp_15_fu_687_p3;

assign zext_ln23_22_fu_709_p1 = add_ln23_7_fu_704_p2;

assign zext_ln23_23_fu_741_p1 = tmp_16_fu_734_p3;

assign zext_ln23_24_fu_752_p1 = tmp_17_fu_745_p3;

assign zext_ln23_25_fu_767_p1 = add_ln23_9_fu_762_p2;

assign zext_ln23_26_fu_799_p1 = tmp_18_fu_792_p3;

assign zext_ln23_27_fu_810_p1 = tmp_19_fu_803_p3;

assign zext_ln23_28_fu_825_p1 = add_ln23_11_fu_820_p2;

assign zext_ln23_29_fu_837_p1 = tmp_20_fu_830_p3;

assign zext_ln23_2_fu_548_p1 = or_ln21_fu_542_p2;

assign zext_ln23_30_fu_848_p1 = tmp_21_fu_841_p3;

assign zext_ln23_31_fu_863_p1 = add_ln23_13_fu_858_p2;

assign zext_ln23_32_fu_875_p1 = tmp_22_fu_868_p3;

assign zext_ln23_33_fu_886_p1 = tmp_23_fu_879_p3;

assign zext_ln23_34_fu_901_p1 = add_ln23_15_fu_896_p2;

assign zext_ln23_35_fu_913_p1 = tmp_24_fu_906_p3;

assign zext_ln23_36_fu_924_p1 = tmp_25_fu_917_p3;

assign zext_ln23_37_fu_939_p1 = add_ln23_17_fu_934_p2;

assign zext_ln23_38_fu_951_p1 = tmp_26_fu_944_p3;

assign zext_ln23_39_fu_962_p1 = tmp_27_fu_955_p3;

assign zext_ln23_3_fu_601_p1 = add_ln21_fu_595_p2;

assign zext_ln23_40_fu_977_p1 = add_ln23_19_reg_1251;

assign zext_ln23_4_fu_647_p1 = add_ln21_1_fu_641_p2;

assign zext_ln23_5_fu_661_p1 = add_ln21_2_fu_656_p2;

assign zext_ln23_6_fu_671_p1 = add_ln21_3_fu_666_p2;

assign zext_ln23_7_fu_719_p1 = add_ln21_4_fu_714_p2;

assign zext_ln23_8_fu_729_p1 = add_ln21_5_fu_724_p2;

assign zext_ln23_9_fu_777_p1 = add_ln21_6_fu_772_p2;

assign zext_ln23_fu_479_p1 = d_0_reg_324;

assign zext_ln33_fu_999_p1 = ap_phi_mux_i_0_phi_fu_375_p4;

assign zext_ln39_fu_1016_p1 = j_0_reg_382;

always @ (posedge ap_clk) begin
    zext_ln23_reg_1030[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln21_reg_1036[9:4] <= 6'b000000;
    zext_ln21_1_reg_1047[8:4] <= 5'b00000;
    or_ln21_reg_1068[0] <= 1'b1;
    f_0_0_cast1_reg_1079[5] <= 1'b0;
    zext_ln39_reg_1314[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter2_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter3_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter4_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter5_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter6_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter7_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter8_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter9_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter10_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter11_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter12_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln39_reg_1314_pp2_iter13_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense
