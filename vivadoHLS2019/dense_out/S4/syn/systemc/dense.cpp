// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<69> dense::ap_ST_fsm_state1 = "1";
const sc_lv<69> dense::ap_ST_fsm_state2 = "10";
const sc_lv<69> dense::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<69> dense::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<69> dense::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<69> dense::ap_ST_fsm_pp0_stage3 = "100000";
const sc_lv<69> dense::ap_ST_fsm_state10 = "1000000";
const sc_lv<69> dense::ap_ST_fsm_state11 = "10000000";
const sc_lv<69> dense::ap_ST_fsm_state12 = "100000000";
const sc_lv<69> dense::ap_ST_fsm_state13 = "1000000000";
const sc_lv<69> dense::ap_ST_fsm_state14 = "10000000000";
const sc_lv<69> dense::ap_ST_fsm_state15 = "100000000000";
const sc_lv<69> dense::ap_ST_fsm_state16 = "1000000000000";
const sc_lv<69> dense::ap_ST_fsm_state17 = "10000000000000";
const sc_lv<69> dense::ap_ST_fsm_state18 = "100000000000000";
const sc_lv<69> dense::ap_ST_fsm_state19 = "1000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state20 = "10000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state21 = "100000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state22 = "1000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state23 = "10000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state24 = "100000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state25 = "1000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state26 = "10000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state27 = "100000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state28 = "1000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state29 = "10000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state30 = "100000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state31 = "1000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state32 = "10000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state33 = "100000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state34 = "1000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state35 = "10000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state36 = "100000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state37 = "1000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state38 = "10000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state39 = "100000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state40 = "1000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state41 = "10000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state42 = "100000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<69> dense::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool dense::ap_const_boolean_1 = true;
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const bool dense::ap_const_boolean_0 = false;
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_13 = "10011";
const sc_lv<32> dense::ap_const_lv32_17 = "10111";
const sc_lv<32> dense::ap_const_lv32_1B = "11011";
const sc_lv<32> dense::ap_const_lv32_1F = "11111";
const sc_lv<32> dense::ap_const_lv32_23 = "100011";
const sc_lv<32> dense::ap_const_lv32_27 = "100111";
const sc_lv<32> dense::ap_const_lv32_2B = "101011";
const sc_lv<32> dense::ap_const_lv32_2F = "101111";
const sc_lv<32> dense::ap_const_lv32_33 = "110011";
const sc_lv<32> dense::ap_const_lv32_37 = "110111";
const sc_lv<32> dense::ap_const_lv32_B = "1011";
const sc_lv<32> dense::ap_const_lv32_F = "1111";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const sc_lv<32> dense::ap_const_lv32_6 = "110";
const sc_lv<32> dense::ap_const_lv32_7 = "111";
const sc_lv<32> dense::ap_const_lv32_E = "1110";
const sc_lv<32> dense::ap_const_lv32_12 = "10010";
const sc_lv<32> dense::ap_const_lv32_16 = "10110";
const sc_lv<32> dense::ap_const_lv32_1A = "11010";
const sc_lv<32> dense::ap_const_lv32_1E = "11110";
const sc_lv<32> dense::ap_const_lv32_22 = "100010";
const sc_lv<32> dense::ap_const_lv32_26 = "100110";
const sc_lv<32> dense::ap_const_lv32_2A = "101010";
const sc_lv<32> dense::ap_const_lv32_2E = "101110";
const sc_lv<32> dense::ap_const_lv32_3F = "111111";
const sc_lv<32> dense::ap_const_lv32_5 = "101";
const sc_lv<4> dense::ap_const_lv4_0 = "0000";
const sc_lv<32> dense::ap_const_lv32_A = "1010";
const sc_lv<5> dense::ap_const_lv5_0 = "00000";
const sc_lv<64> dense::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> dense::ap_const_lv64_1 = "1";
const sc_lv<64> dense::ap_const_lv64_2 = "10";
const sc_lv<64> dense::ap_const_lv64_3 = "11";
const sc_lv<64> dense::ap_const_lv64_4 = "100";
const sc_lv<64> dense::ap_const_lv64_5 = "101";
const sc_lv<64> dense::ap_const_lv64_6 = "110";
const sc_lv<64> dense::ap_const_lv64_7 = "111";
const sc_lv<64> dense::ap_const_lv64_8 = "1000";
const sc_lv<64> dense::ap_const_lv64_9 = "1001";
const sc_lv<32> dense::ap_const_lv32_40 = "1000000";
const sc_lv<32> dense::ap_const_lv32_41 = "1000001";
const sc_lv<32> dense::ap_const_lv32_42 = "1000010";
const sc_lv<32> dense::ap_const_lv32_43 = "1000011";
const sc_lv<32> dense::ap_const_lv32_44 = "1000100";
const sc_lv<32> dense::ap_const_lv32_10 = "10000";
const sc_lv<32> dense::ap_const_lv32_14 = "10100";
const sc_lv<32> dense::ap_const_lv32_18 = "11000";
const sc_lv<32> dense::ap_const_lv32_1C = "11100";
const sc_lv<32> dense::ap_const_lv32_20 = "100000";
const sc_lv<32> dense::ap_const_lv32_24 = "100100";
const sc_lv<32> dense::ap_const_lv32_28 = "101000";
const sc_lv<32> dense::ap_const_lv32_2C = "101100";
const sc_lv<32> dense::ap_const_lv32_30 = "110000";
const sc_lv<32> dense::ap_const_lv32_34 = "110100";
const sc_lv<32> dense::ap_const_lv32_38 = "111000";
const sc_lv<4> dense::ap_const_lv4_A = "1010";
const sc_lv<4> dense::ap_const_lv4_1 = "1";
const sc_lv<5> dense::ap_const_lv5_1E = "11110";
const sc_lv<5> dense::ap_const_lv5_1 = "1";
const sc_lv<3> dense::ap_const_lv3_0 = "000";

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_out_weights_U = new dense_dense_out_wbkb("dense_out_weights_U");
    dense_out_weights_U->clk(ap_clk);
    dense_out_weights_U->reset(ap_rst);
    dense_out_weights_U->address0(dense_out_weights_address0);
    dense_out_weights_U->ce0(dense_out_weights_ce0);
    dense_out_weights_U->q0(dense_out_weights_q0);
    dense_out_bias_U = new dense_dense_out_bcud("dense_out_bias_U");
    dense_out_bias_U->clk(ap_clk);
    dense_out_bias_U->reset(ap_rst);
    dense_out_bias_U->address0(dense_out_bias_address0);
    dense_out_bias_U->ce0(dense_out_bias_ce0);
    dense_out_bias_U->q0(dense_out_bias_q0);
    dense_array_U = new dense_dense_array("dense_array_U");
    dense_array_U->clk(ap_clk);
    dense_array_U->reset(ap_rst);
    dense_array_U->address0(dense_array_address0);
    dense_array_U->ce0(dense_array_ce0);
    dense_array_U->we0(dense_array_we0);
    dense_array_U->d0(grp_fu_352_p2);
    dense_array_U->q0(dense_array_q0);
    dense_fadd_32ns_3dEe_U1 = new dense_fadd_32ns_3dEe<1,4,32,32,32>("dense_fadd_32ns_3dEe_U1");
    dense_fadd_32ns_3dEe_U1->clk(ap_clk);
    dense_fadd_32ns_3dEe_U1->reset(ap_rst);
    dense_fadd_32ns_3dEe_U1->din0(grp_fu_352_p0);
    dense_fadd_32ns_3dEe_U1->din1(grp_fu_352_p1);
    dense_fadd_32ns_3dEe_U1->ce(ap_var_for_const0);
    dense_fadd_32ns_3dEe_U1->dout(grp_fu_352_p2);
    dense_fmul_32ns_3eOg_U2 = new dense_fmul_32ns_3eOg<1,2,32,32,32>("dense_fmul_32ns_3eOg_U2");
    dense_fmul_32ns_3eOg_U2->clk(ap_clk);
    dense_fmul_32ns_3eOg_U2->reset(ap_rst);
    dense_fmul_32ns_3eOg_U2->din0(dense_out_weights_q0);
    dense_fmul_32ns_3eOg_U2->din1(fully_connected_q0);
    dense_fmul_32ns_3eOg_U2->ce(ap_var_for_const0);
    dense_fmul_32ns_3eOg_U2->dout(grp_fu_360_p2);
    dense_fdiv_32ns_3fYi_U3 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U3");
    dense_fdiv_32ns_3fYi_U3->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U3->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U3->din0(tmp_reg_630);
    dense_fdiv_32ns_3fYi_U3->din1(reg_452);
    dense_fdiv_32ns_3fYi_U3->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U3->dout(grp_fu_366_p2);
    dense_fdiv_32ns_3fYi_U4 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U4");
    dense_fdiv_32ns_3fYi_U4->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U4->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U4->din0(reg_473);
    dense_fdiv_32ns_3fYi_U4->din1(reg_452);
    dense_fdiv_32ns_3fYi_U4->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U4->dout(grp_fu_370_p2);
    dense_fdiv_32ns_3fYi_U5 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U5");
    dense_fdiv_32ns_3fYi_U5->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U5->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U5->din0(tmp_5_2_reg_724);
    dense_fdiv_32ns_3fYi_U5->din1(reg_452);
    dense_fdiv_32ns_3fYi_U5->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U5->dout(grp_fu_374_p2);
    dense_fdiv_32ns_3fYi_U6 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U6");
    dense_fdiv_32ns_3fYi_U6->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U6->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U6->din0(tmp_5_3_reg_729);
    dense_fdiv_32ns_3fYi_U6->din1(reg_452);
    dense_fdiv_32ns_3fYi_U6->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U6->dout(grp_fu_378_p2);
    dense_fdiv_32ns_3fYi_U7 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U7");
    dense_fdiv_32ns_3fYi_U7->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U7->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U7->din0(tmp_5_4_reg_734);
    dense_fdiv_32ns_3fYi_U7->din1(reg_452);
    dense_fdiv_32ns_3fYi_U7->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U7->dout(grp_fu_382_p2);
    dense_fdiv_32ns_3fYi_U8 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U8");
    dense_fdiv_32ns_3fYi_U8->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U8->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U8->din0(tmp_5_5_reg_739);
    dense_fdiv_32ns_3fYi_U8->din1(reg_452);
    dense_fdiv_32ns_3fYi_U8->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U8->dout(grp_fu_386_p2);
    dense_fdiv_32ns_3fYi_U9 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U9");
    dense_fdiv_32ns_3fYi_U9->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U9->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U9->din0(tmp_5_6_reg_744);
    dense_fdiv_32ns_3fYi_U9->din1(reg_452);
    dense_fdiv_32ns_3fYi_U9->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U9->dout(grp_fu_390_p2);
    dense_fdiv_32ns_3fYi_U10 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U10");
    dense_fdiv_32ns_3fYi_U10->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U10->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U10->din0(tmp_5_7_reg_749);
    dense_fdiv_32ns_3fYi_U10->din1(reg_452);
    dense_fdiv_32ns_3fYi_U10->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U10->dout(grp_fu_394_p2);
    dense_fdiv_32ns_3fYi_U11 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U11");
    dense_fdiv_32ns_3fYi_U11->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U11->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U11->din0(tmp_5_8_reg_754);
    dense_fdiv_32ns_3fYi_U11->din1(reg_452);
    dense_fdiv_32ns_3fYi_U11->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U11->dout(grp_fu_398_p2);
    dense_fdiv_32ns_3fYi_U12 = new dense_fdiv_32ns_3fYi<1,8,32,32,32>("dense_fdiv_32ns_3fYi_U12");
    dense_fdiv_32ns_3fYi_U12->clk(ap_clk);
    dense_fdiv_32ns_3fYi_U12->reset(ap_rst);
    dense_fdiv_32ns_3fYi_U12->din0(tmp_5_9_reg_759);
    dense_fdiv_32ns_3fYi_U12->din1(reg_452);
    dense_fdiv_32ns_3fYi_U12->ce(ap_var_for_const0);
    dense_fdiv_32ns_3fYi_U12->dout(grp_fu_402_p2);
    dense_fexp_32ns_3g8j_U13 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U13");
    dense_fexp_32ns_3g8j_U13->clk(ap_clk);
    dense_fexp_32ns_3g8j_U13->reset(ap_rst);
    dense_fexp_32ns_3g8j_U13->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U13->din1(grp_fu_406_p1);
    dense_fexp_32ns_3g8j_U13->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U13->dout(grp_fu_406_p2);
    dense_fexp_32ns_3g8j_U14 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U14");
    dense_fexp_32ns_3g8j_U14->clk(ap_clk);
    dense_fexp_32ns_3g8j_U14->reset(ap_rst);
    dense_fexp_32ns_3g8j_U14->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U14->din1(dense_array_load_2_reg_641);
    dense_fexp_32ns_3g8j_U14->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U14->dout(grp_fu_412_p2);
    dense_fexp_32ns_3g8j_U15 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U15");
    dense_fexp_32ns_3g8j_U15->clk(ap_clk);
    dense_fexp_32ns_3g8j_U15->reset(ap_rst);
    dense_fexp_32ns_3g8j_U15->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U15->din1(dense_array_load_3_reg_652);
    dense_fexp_32ns_3g8j_U15->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U15->dout(grp_fu_417_p2);
    dense_fexp_32ns_3g8j_U16 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U16");
    dense_fexp_32ns_3g8j_U16->clk(ap_clk);
    dense_fexp_32ns_3g8j_U16->reset(ap_rst);
    dense_fexp_32ns_3g8j_U16->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U16->din1(dense_array_load_4_reg_663);
    dense_fexp_32ns_3g8j_U16->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U16->dout(grp_fu_422_p2);
    dense_fexp_32ns_3g8j_U17 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U17");
    dense_fexp_32ns_3g8j_U17->clk(ap_clk);
    dense_fexp_32ns_3g8j_U17->reset(ap_rst);
    dense_fexp_32ns_3g8j_U17->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U17->din1(dense_array_load_5_reg_674);
    dense_fexp_32ns_3g8j_U17->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U17->dout(grp_fu_427_p2);
    dense_fexp_32ns_3g8j_U18 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U18");
    dense_fexp_32ns_3g8j_U18->clk(ap_clk);
    dense_fexp_32ns_3g8j_U18->reset(ap_rst);
    dense_fexp_32ns_3g8j_U18->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U18->din1(dense_array_load_6_reg_685);
    dense_fexp_32ns_3g8j_U18->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U18->dout(grp_fu_432_p2);
    dense_fexp_32ns_3g8j_U19 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U19");
    dense_fexp_32ns_3g8j_U19->clk(ap_clk);
    dense_fexp_32ns_3g8j_U19->reset(ap_rst);
    dense_fexp_32ns_3g8j_U19->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U19->din1(dense_array_load_7_reg_696);
    dense_fexp_32ns_3g8j_U19->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U19->dout(grp_fu_437_p2);
    dense_fexp_32ns_3g8j_U20 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U20");
    dense_fexp_32ns_3g8j_U20->clk(ap_clk);
    dense_fexp_32ns_3g8j_U20->reset(ap_rst);
    dense_fexp_32ns_3g8j_U20->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U20->din1(dense_array_load_8_reg_707);
    dense_fexp_32ns_3g8j_U20->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U20->dout(grp_fu_442_p2);
    dense_fexp_32ns_3g8j_U21 = new dense_fexp_32ns_3g8j<1,5,32,32,32>("dense_fexp_32ns_3g8j_U21");
    dense_fexp_32ns_3g8j_U21->clk(ap_clk);
    dense_fexp_32ns_3g8j_U21->reset(ap_rst);
    dense_fexp_32ns_3g8j_U21->din0(ap_var_for_const1);
    dense_fexp_32ns_3g8j_U21->din1(dense_array_load_9_reg_718);
    dense_fexp_32ns_3g8j_U21->ce(ap_var_for_const0);
    dense_fexp_32ns_3g8j_U21->dout(grp_fu_447_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln23_1_fu_546_p2);
    sensitive << ( zext_ln21_reg_571 );
    sensitive << ( add_ln23_fu_540_p2 );

    SC_METHOD(thread_add_ln23_fu_540_p2);
    sensitive << ( zext_ln23_3_fu_536_p1 );
    sensitive << ( zext_ln23_2_fu_524_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state67);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state68);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state69);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state72);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln21_fu_499_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_f_0_phi_fu_333_p4);
    sensitive << ( f_0_reg_329 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln21_reg_581 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( f_reg_585 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_w_sum_0_phi_fu_344_p4);
    sensitive << ( w_sum_0_reg_340 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_d_fu_485_p2);
    sensitive << ( d_0_reg_318 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln23_reg_565 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state34 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dense_array_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_dense_out_bias_address0);
    sensitive << ( zext_ln23_reg_565 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_dense_out_bias_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_dense_out_weights_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln23_4_fu_551_p1 );

    SC_METHOD(thread_dense_out_weights_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_505_p2);
    sensitive << ( ap_phi_mux_f_0_phi_fu_333_p4 );

    SC_METHOD(thread_fully_connected_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln23_1_fu_511_p1 );

    SC_METHOD(thread_fully_connected_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_352_p0);
    sensitive << ( w_sum_0_reg_340 );
    sensitive << ( reg_452 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_reg_630 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_phi_mux_w_sum_0_phi_fu_344_p4 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_grp_fu_352_p1);
    sensitive << ( dense_out_bias_q0 );
    sensitive << ( reg_473 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_3_reg_610 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state56 );

    SC_METHOD(thread_grp_fu_406_p1);
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state55 );
    sensitive << ( dense_array_q0 );
    sensitive << ( reg_468 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_icmp_ln16_fu_479_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( d_0_reg_318 );

    SC_METHOD(thread_icmp_ln21_fu_499_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_333_p4 );

    SC_METHOD(thread_prediction_address0);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_address1);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_ce0);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_ce1);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_d0);
    sensitive << ( tmp_13_reg_764 );
    sensitive << ( tmp_6_2_reg_774 );
    sensitive << ( tmp_6_4_reg_784 );
    sensitive << ( tmp_6_6_reg_794 );
    sensitive << ( tmp_6_8_reg_804 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_d1);
    sensitive << ( tmp_6_1_reg_769 );
    sensitive << ( tmp_6_3_reg_779 );
    sensitive << ( tmp_6_5_reg_789 );
    sensitive << ( tmp_6_7_reg_799 );
    sensitive << ( tmp_6_9_reg_809 );
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_we0);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_prediction_we1);
    sensitive << ( ap_CS_fsm_state68 );
    sensitive << ( ap_CS_fsm_state69 );
    sensitive << ( ap_CS_fsm_state70 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state72 );

    SC_METHOD(thread_tmp_14_fu_516_p3);
    sensitive << ( ap_phi_mux_f_0_phi_fu_333_p4 );

    SC_METHOD(thread_tmp_15_fu_528_p3);
    sensitive << ( ap_phi_mux_f_0_phi_fu_333_p4 );

    SC_METHOD(thread_zext_ln21_fu_495_p1);
    sensitive << ( d_0_reg_318 );

    SC_METHOD(thread_zext_ln23_1_fu_511_p1);
    sensitive << ( ap_phi_mux_f_0_phi_fu_333_p4 );

    SC_METHOD(thread_zext_ln23_2_fu_524_p1);
    sensitive << ( tmp_14_fu_516_p3 );

    SC_METHOD(thread_zext_ln23_3_fu_536_p1);
    sensitive << ( tmp_15_fu_528_p3 );

    SC_METHOD(thread_zext_ln23_4_fu_551_p1);
    sensitive << ( add_ln23_1_fu_546_p2 );

    SC_METHOD(thread_zext_ln23_fu_491_p1);
    sensitive << ( d_0_reg_318 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln16_fu_479_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln21_fu_499_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, fully_connected_address0, "(port)fully_connected_address0");
    sc_trace(mVcdFile, fully_connected_ce0, "(port)fully_connected_ce0");
    sc_trace(mVcdFile, fully_connected_q0, "(port)fully_connected_q0");
    sc_trace(mVcdFile, prediction_address0, "(port)prediction_address0");
    sc_trace(mVcdFile, prediction_ce0, "(port)prediction_ce0");
    sc_trace(mVcdFile, prediction_we0, "(port)prediction_we0");
    sc_trace(mVcdFile, prediction_d0, "(port)prediction_d0");
    sc_trace(mVcdFile, prediction_address1, "(port)prediction_address1");
    sc_trace(mVcdFile, prediction_ce1, "(port)prediction_ce1");
    sc_trace(mVcdFile, prediction_we1, "(port)prediction_we1");
    sc_trace(mVcdFile, prediction_d1, "(port)prediction_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_out_weights_address0, "dense_out_weights_address0");
    sc_trace(mVcdFile, dense_out_weights_ce0, "dense_out_weights_ce0");
    sc_trace(mVcdFile, dense_out_weights_q0, "dense_out_weights_q0");
    sc_trace(mVcdFile, dense_out_bias_address0, "dense_out_bias_address0");
    sc_trace(mVcdFile, dense_out_bias_ce0, "dense_out_bias_ce0");
    sc_trace(mVcdFile, dense_out_bias_q0, "dense_out_bias_q0");
    sc_trace(mVcdFile, f_0_reg_329, "f_0_reg_329");
    sc_trace(mVcdFile, w_sum_0_reg_340, "w_sum_0_reg_340");
    sc_trace(mVcdFile, grp_fu_352_p2, "grp_fu_352_p2");
    sc_trace(mVcdFile, reg_452, "reg_452");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, icmp_ln21_reg_581, "icmp_ln21_reg_581");
    sc_trace(mVcdFile, icmp_ln21_reg_581_pp0_iter1_reg, "icmp_ln21_reg_581_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, dense_array_q0, "dense_array_q0");
    sc_trace(mVcdFile, reg_468, "reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_406_p2, "grp_fu_406_p2");
    sc_trace(mVcdFile, reg_473, "reg_473");
    sc_trace(mVcdFile, icmp_ln16_fu_479_p2, "icmp_ln16_fu_479_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, d_fu_485_p2, "d_fu_485_p2");
    sc_trace(mVcdFile, d_reg_560, "d_reg_560");
    sc_trace(mVcdFile, zext_ln23_fu_491_p1, "zext_ln23_fu_491_p1");
    sc_trace(mVcdFile, zext_ln23_reg_565, "zext_ln23_reg_565");
    sc_trace(mVcdFile, zext_ln21_fu_495_p1, "zext_ln21_fu_495_p1");
    sc_trace(mVcdFile, zext_ln21_reg_571, "zext_ln21_reg_571");
    sc_trace(mVcdFile, icmp_ln21_fu_499_p2, "icmp_ln21_fu_499_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, f_fu_505_p2, "f_fu_505_p2");
    sc_trace(mVcdFile, f_reg_585, "f_reg_585");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, grp_fu_360_p2, "grp_fu_360_p2");
    sc_trace(mVcdFile, tmp_3_reg_610, "tmp_3_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_reg_630, "tmp_reg_630");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, dense_array_load_2_reg_641, "dense_array_load_2_reg_641");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, dense_array_load_3_reg_652, "dense_array_load_3_reg_652");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, dense_array_load_4_reg_663, "dense_array_load_4_reg_663");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, dense_array_load_5_reg_674, "dense_array_load_5_reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, dense_array_load_6_reg_685, "dense_array_load_6_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, dense_array_load_7_reg_696, "dense_array_load_7_reg_696");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, dense_array_load_8_reg_707, "dense_array_load_8_reg_707");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, dense_array_load_9_reg_718, "dense_array_load_9_reg_718");
    sc_trace(mVcdFile, grp_fu_412_p2, "grp_fu_412_p2");
    sc_trace(mVcdFile, tmp_5_2_reg_724, "tmp_5_2_reg_724");
    sc_trace(mVcdFile, grp_fu_417_p2, "grp_fu_417_p2");
    sc_trace(mVcdFile, tmp_5_3_reg_729, "tmp_5_3_reg_729");
    sc_trace(mVcdFile, grp_fu_422_p2, "grp_fu_422_p2");
    sc_trace(mVcdFile, tmp_5_4_reg_734, "tmp_5_4_reg_734");
    sc_trace(mVcdFile, grp_fu_427_p2, "grp_fu_427_p2");
    sc_trace(mVcdFile, tmp_5_5_reg_739, "tmp_5_5_reg_739");
    sc_trace(mVcdFile, grp_fu_432_p2, "grp_fu_432_p2");
    sc_trace(mVcdFile, tmp_5_6_reg_744, "tmp_5_6_reg_744");
    sc_trace(mVcdFile, grp_fu_437_p2, "grp_fu_437_p2");
    sc_trace(mVcdFile, tmp_5_7_reg_749, "tmp_5_7_reg_749");
    sc_trace(mVcdFile, grp_fu_442_p2, "grp_fu_442_p2");
    sc_trace(mVcdFile, tmp_5_8_reg_754, "tmp_5_8_reg_754");
    sc_trace(mVcdFile, grp_fu_447_p2, "grp_fu_447_p2");
    sc_trace(mVcdFile, tmp_5_9_reg_759, "tmp_5_9_reg_759");
    sc_trace(mVcdFile, grp_fu_366_p2, "grp_fu_366_p2");
    sc_trace(mVcdFile, tmp_13_reg_764, "tmp_13_reg_764");
    sc_trace(mVcdFile, ap_CS_fsm_state67, "ap_CS_fsm_state67");
    sc_trace(mVcdFile, grp_fu_370_p2, "grp_fu_370_p2");
    sc_trace(mVcdFile, tmp_6_1_reg_769, "tmp_6_1_reg_769");
    sc_trace(mVcdFile, grp_fu_374_p2, "grp_fu_374_p2");
    sc_trace(mVcdFile, tmp_6_2_reg_774, "tmp_6_2_reg_774");
    sc_trace(mVcdFile, grp_fu_378_p2, "grp_fu_378_p2");
    sc_trace(mVcdFile, tmp_6_3_reg_779, "tmp_6_3_reg_779");
    sc_trace(mVcdFile, grp_fu_382_p2, "grp_fu_382_p2");
    sc_trace(mVcdFile, tmp_6_4_reg_784, "tmp_6_4_reg_784");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, tmp_6_5_reg_789, "tmp_6_5_reg_789");
    sc_trace(mVcdFile, grp_fu_390_p2, "grp_fu_390_p2");
    sc_trace(mVcdFile, tmp_6_6_reg_794, "tmp_6_6_reg_794");
    sc_trace(mVcdFile, grp_fu_394_p2, "grp_fu_394_p2");
    sc_trace(mVcdFile, tmp_6_7_reg_799, "tmp_6_7_reg_799");
    sc_trace(mVcdFile, grp_fu_398_p2, "grp_fu_398_p2");
    sc_trace(mVcdFile, tmp_6_8_reg_804, "tmp_6_8_reg_804");
    sc_trace(mVcdFile, grp_fu_402_p2, "grp_fu_402_p2");
    sc_trace(mVcdFile, tmp_6_9_reg_809, "tmp_6_9_reg_809");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage3_iter0, "ap_block_state6_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, dense_array_address0, "dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "dense_array_ce0");
    sc_trace(mVcdFile, dense_array_we0, "dense_array_we0");
    sc_trace(mVcdFile, d_0_reg_318, "d_0_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_phi_mux_f_0_phi_fu_333_p4, "ap_phi_mux_f_0_phi_fu_333_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_w_sum_0_phi_fu_344_p4, "ap_phi_mux_w_sum_0_phi_fu_344_p4");
    sc_trace(mVcdFile, zext_ln23_4_fu_551_p1, "zext_ln23_4_fu_551_p1");
    sc_trace(mVcdFile, zext_ln23_1_fu_511_p1, "zext_ln23_1_fu_511_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state68, "ap_CS_fsm_state68");
    sc_trace(mVcdFile, ap_CS_fsm_state69, "ap_CS_fsm_state69");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state72, "ap_CS_fsm_state72");
    sc_trace(mVcdFile, grp_fu_352_p0, "grp_fu_352_p0");
    sc_trace(mVcdFile, grp_fu_352_p1, "grp_fu_352_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, grp_fu_406_p1, "grp_fu_406_p1");
    sc_trace(mVcdFile, tmp_14_fu_516_p3, "tmp_14_fu_516_p3");
    sc_trace(mVcdFile, tmp_15_fu_528_p3, "tmp_15_fu_528_p3");
    sc_trace(mVcdFile, zext_ln23_3_fu_536_p1, "zext_ln23_3_fu_536_p1");
    sc_trace(mVcdFile, zext_ln23_2_fu_524_p1, "zext_ln23_2_fu_524_p1");
    sc_trace(mVcdFile, add_ln23_fu_540_p2, "add_ln23_fu_540_p2");
    sc_trace(mVcdFile, add_ln23_1_fu_546_p2, "add_ln23_1_fu_546_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("dense.hdltvin.dat");
    mHdltvoutHandle.open("dense.hdltvout.dat");
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete dense_out_weights_U;
    delete dense_out_bias_U;
    delete dense_array_U;
    delete dense_fadd_32ns_3dEe_U1;
    delete dense_fmul_32ns_3eOg_U2;
    delete dense_fdiv_32ns_3fYi_U3;
    delete dense_fdiv_32ns_3fYi_U4;
    delete dense_fdiv_32ns_3fYi_U5;
    delete dense_fdiv_32ns_3fYi_U6;
    delete dense_fdiv_32ns_3fYi_U7;
    delete dense_fdiv_32ns_3fYi_U8;
    delete dense_fdiv_32ns_3fYi_U9;
    delete dense_fdiv_32ns_3fYi_U10;
    delete dense_fdiv_32ns_3fYi_U11;
    delete dense_fdiv_32ns_3fYi_U12;
    delete dense_fexp_32ns_3g8j_U13;
    delete dense_fexp_32ns_3g8j_U14;
    delete dense_fexp_32ns_3g8j_U15;
    delete dense_fexp_32ns_3g8j_U16;
    delete dense_fexp_32ns_3g8j_U17;
    delete dense_fexp_32ns_3g8j_U18;
    delete dense_fexp_32ns_3g8j_U19;
    delete dense_fexp_32ns_3g8j_U20;
    delete dense_fexp_32ns_3g8j_U21;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        d_0_reg_318 = d_reg_560.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        d_0_reg_318 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln21_reg_581.read(), ap_const_lv1_0))) {
        f_0_reg_329 = f_reg_585.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
        f_0_reg_329 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln21_reg_581_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        w_sum_0_reg_340 = grp_fu_352_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
        w_sum_0_reg_340 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        d_reg_560 = d_fu_485_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        dense_array_load_2_reg_641 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        dense_array_load_3_reg_652 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        dense_array_load_4_reg_663 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        dense_array_load_5_reg_674 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        dense_array_load_6_reg_685 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        dense_array_load_7_reg_696 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        dense_array_load_8_reg_707 = dense_array_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        dense_array_load_9_reg_718 = dense_array_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        f_reg_585 = f_fu_505_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln21_reg_581 = icmp_ln21_fu_499_p2.read();
        icmp_ln21_reg_581_pp0_iter1_reg = icmp_ln21_reg_581.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln21_reg_581_pp0_iter1_reg.read(), ap_const_lv1_0)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        reg_452 = grp_fu_352_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        reg_468 = dense_array_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()))) {
        reg_473 = grp_fu_406_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state67.read())) {
        tmp_13_reg_764 = grp_fu_366_p2.read();
        tmp_6_1_reg_769 = grp_fu_370_p2.read();
        tmp_6_2_reg_774 = grp_fu_374_p2.read();
        tmp_6_3_reg_779 = grp_fu_378_p2.read();
        tmp_6_4_reg_784 = grp_fu_382_p2.read();
        tmp_6_5_reg_789 = grp_fu_386_p2.read();
        tmp_6_6_reg_794 = grp_fu_390_p2.read();
        tmp_6_7_reg_799 = grp_fu_394_p2.read();
        tmp_6_8_reg_804 = grp_fu_398_p2.read();
        tmp_6_9_reg_809 = grp_fu_402_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln21_reg_581.read(), ap_const_lv1_0))) {
        tmp_3_reg_610 = grp_fu_360_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        tmp_5_2_reg_724 = grp_fu_412_p2.read();
        tmp_5_3_reg_729 = grp_fu_417_p2.read();
        tmp_5_4_reg_734 = grp_fu_422_p2.read();
        tmp_5_5_reg_739 = grp_fu_427_p2.read();
        tmp_5_6_reg_744 = grp_fu_432_p2.read();
        tmp_5_7_reg_749 = grp_fu_437_p2.read();
        tmp_5_8_reg_754 = grp_fu_442_p2.read();
        tmp_5_9_reg_759 = grp_fu_447_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tmp_reg_630 = grp_fu_406_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
        zext_ln21_reg_571 = zext_ln21_fu_495_p1.read();
        zext_ln23_reg_565 = zext_ln23_fu_491_p1.read();
    }
}

void dense::thread_add_ln23_1_fu_546_p2() {
    add_ln23_1_fu_546_p2 = (!add_ln23_fu_540_p2.read().is_01() || !zext_ln21_reg_571.read().is_01())? sc_lv<9>(): (sc_biguint<9>(add_ln23_fu_540_p2.read()) + sc_biguint<9>(zext_ln21_reg_571.read()));
}

void dense::thread_add_ln23_fu_540_p2() {
    add_ln23_fu_540_p2 = (!zext_ln23_3_fu_536_p1.read().is_01() || !zext_ln23_2_fu_524_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln23_3_fu_536_p1.read()) + sc_biguint<9>(zext_ln23_2_fu_524_p1.read()));
}

void dense::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[5];
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[6];
}

void dense::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[7];
}

void dense::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[10];
}

void dense::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[11];
}

void dense::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[14];
}

void dense::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[15];
}

void dense::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[16];
}

void dense::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[18];
}

void dense::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[19];
}

void dense::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[20];
}

void dense::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[22];
}

void dense::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[23];
}

void dense::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[24];
}

void dense::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[26];
}

void dense::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[27];
}

void dense::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[28];
}

void dense::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[30];
}

void dense::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[31];
}

void dense::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[32];
}

void dense::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[34];
}

void dense::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[35];
}

void dense::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[36];
}

void dense::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[38];
}

void dense::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[39];
}

void dense::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[40];
}

void dense::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[42];
}

void dense::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[43];
}

void dense::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[44];
}

void dense::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[46];
}

void dense::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[47];
}

void dense::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[48];
}

void dense::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[51];
}

void dense::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[52];
}

void dense::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[55];
}

void dense::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[56];
}

void dense::thread_ap_CS_fsm_state67() {
    ap_CS_fsm_state67 = ap_CS_fsm.read()[63];
}

void dense::thread_ap_CS_fsm_state68() {
    ap_CS_fsm_state68 = ap_CS_fsm.read()[64];
}

void dense::thread_ap_CS_fsm_state69() {
    ap_CS_fsm_state69 = ap_CS_fsm.read()[65];
}

void dense::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[66];
}

void dense::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[67];
}

void dense::thread_ap_CS_fsm_state72() {
    ap_CS_fsm_state72 = ap_CS_fsm.read()[68];
}

void dense::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state6_pp0_stage3_iter0() {
    ap_block_state6_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_499_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void dense::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dense::thread_ap_phi_mux_f_0_phi_fu_333_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln21_reg_581.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_f_0_phi_fu_333_p4 = f_reg_585.read();
    } else {
        ap_phi_mux_f_0_phi_fu_333_p4 = f_0_reg_329.read();
    }
}

void dense::thread_ap_phi_mux_w_sum_0_phi_fu_344_p4() {
    ap_phi_mux_w_sum_0_phi_fu_344_p4 = w_sum_0_reg_340.read();
}

void dense::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_485_p2() {
    d_fu_485_p2 = (!d_0_reg_318.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(d_0_reg_318.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_dense_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln23_reg_565.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        dense_array_address0 = "XXXX";
    }
}

void dense::thread_dense_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        dense_array_ce0 = ap_const_logic_1;
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        dense_array_we0 = ap_const_logic_1;
    } else {
        dense_array_we0 = ap_const_logic_0;
    }
}

void dense::thread_dense_out_bias_address0() {
    dense_out_bias_address0 =  (sc_lv<4>) (zext_ln23_reg_565.read());
}

void dense::thread_dense_out_bias_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        dense_out_bias_ce0 = ap_const_logic_1;
    } else {
        dense_out_bias_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_out_weights_address0() {
    dense_out_weights_address0 =  (sc_lv<9>) (zext_ln23_4_fu_551_p1.read());
}

void dense::thread_dense_out_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_out_weights_ce0 = ap_const_logic_1;
    } else {
        dense_out_weights_ce0 = ap_const_logic_0;
    }
}

void dense::thread_f_fu_505_p2() {
    f_fu_505_p2 = (!ap_phi_mux_f_0_phi_fu_333_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_f_0_phi_fu_333_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void dense::thread_fully_connected_address0() {
    fully_connected_address0 =  (sc_lv<5>) (zext_ln23_1_fu_511_p1.read());
}

void dense::thread_fully_connected_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        fully_connected_ce0 = ap_const_logic_1;
    } else {
        fully_connected_ce0 = ap_const_logic_0;
    }
}

void dense::thread_grp_fu_352_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
        grp_fu_352_p0 = reg_452.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_352_p0 = tmp_reg_630.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_352_p0 = w_sum_0_reg_340.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_352_p0 = ap_phi_mux_w_sum_0_phi_fu_344_p4.read();
    } else {
        grp_fu_352_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_352_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
        grp_fu_352_p1 = reg_473.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_352_p1 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_352_p1 = dense_out_bias_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_352_p1 = tmp_3_reg_610.read();
    } else {
        grp_fu_352_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_406_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        grp_fu_406_p1 = reg_468.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        grp_fu_406_p1 = dense_array_q0.read();
    } else {
        grp_fu_406_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_icmp_ln16_fu_479_p2() {
    icmp_ln16_fu_479_p2 = (!d_0_reg_318.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(d_0_reg_318.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln21_fu_499_p2() {
    icmp_ln21_fu_499_p2 = (!ap_phi_mux_f_0_phi_fu_333_p4.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_f_0_phi_fu_333_p4.read() == ap_const_lv5_1E);
}

void dense::thread_prediction_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        prediction_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        prediction_address0 = "XXXX";
    }
}

void dense::thread_prediction_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        prediction_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        prediction_address1 = "XXXX";
    }
}

void dense::thread_prediction_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        prediction_ce0 = ap_const_logic_1;
    } else {
        prediction_ce0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        prediction_ce1 = ap_const_logic_1;
    } else {
        prediction_ce1 = ap_const_logic_0;
    }
}

void dense::thread_prediction_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        prediction_d0 = tmp_6_8_reg_804.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        prediction_d0 = tmp_6_6_reg_794.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        prediction_d0 = tmp_6_4_reg_784.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        prediction_d0 = tmp_6_2_reg_774.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        prediction_d0 = tmp_13_reg_764.read();
    } else {
        prediction_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_prediction_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read())) {
        prediction_d1 = tmp_6_9_reg_809.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read())) {
        prediction_d1 = tmp_6_7_reg_799.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read())) {
        prediction_d1 = tmp_6_5_reg_789.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read())) {
        prediction_d1 = tmp_6_3_reg_779.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read())) {
        prediction_d1 = tmp_6_1_reg_769.read();
    } else {
        prediction_d1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_prediction_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        prediction_we0 = ap_const_logic_1;
    } else {
        prediction_we0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state68.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state69.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state72.read()))) {
        prediction_we1 = ap_const_logic_1;
    } else {
        prediction_we1 = ap_const_logic_0;
    }
}

void dense::thread_tmp_14_fu_516_p3() {
    tmp_14_fu_516_p3 = esl_concat<5,3>(ap_phi_mux_f_0_phi_fu_333_p4.read(), ap_const_lv3_0);
}

void dense::thread_tmp_15_fu_528_p3() {
    tmp_15_fu_528_p3 = esl_concat<5,1>(ap_phi_mux_f_0_phi_fu_333_p4.read(), ap_const_lv1_0);
}

void dense::thread_zext_ln21_fu_495_p1() {
    zext_ln21_fu_495_p1 = esl_zext<9,4>(d_0_reg_318.read());
}

void dense::thread_zext_ln23_1_fu_511_p1() {
    zext_ln23_1_fu_511_p1 = esl_zext<64,5>(ap_phi_mux_f_0_phi_fu_333_p4.read());
}

void dense::thread_zext_ln23_2_fu_524_p1() {
    zext_ln23_2_fu_524_p1 = esl_zext<9,8>(tmp_14_fu_516_p3.read());
}

void dense::thread_zext_ln23_3_fu_536_p1() {
    zext_ln23_3_fu_536_p1 = esl_zext<9,6>(tmp_15_fu_528_p3.read());
}

void dense::thread_zext_ln23_4_fu_551_p1() {
    zext_ln23_4_fu_551_p1 = esl_zext<64,9>(add_ln23_1_fu_546_p2.read());
}

void dense::thread_zext_ln23_fu_491_p1() {
    zext_ln23_fu_491_p1 = esl_zext<64,4>(d_0_reg_318.read());
}

void dense::thread_ap_NS_fsm() {
    if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_479_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else {
            ap_NS_fsm = ap_ST_fsm_state15;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage0))
    {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_499_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln21_fu_499_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage1))
    {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage1;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage2))
    {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
            ap_NS_fsm = ap_ST_fsm_state10;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage2;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_pp0_stage3))
    {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        } else {
            ap_NS_fsm = ap_ST_fsm_pp0_stage3;
        }
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,69,69>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state1;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<69>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void dense::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fully_connected_address0\" :  \"" << fully_connected_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fully_connected_ce0\" :  \"" << fully_connected_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fully_connected_q0\" :  \"" << fully_connected_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_address0\" :  \"" << prediction_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_ce0\" :  \"" << prediction_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_we0\" :  \"" << prediction_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_d0\" :  \"" << prediction_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_address1\" :  \"" << prediction_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_ce1\" :  \"" << prediction_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_we1\" :  \"" << prediction_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_d1\" :  \"" << prediction_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

