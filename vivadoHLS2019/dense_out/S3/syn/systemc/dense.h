// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_HH_
#define _dense_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_fadd_32ns_3dEe.h"
#include "dense_fmul_32ns_3eOg.h"
#include "dense_fdiv_32ns_3fYi.h"
#include "dense_fexp_32ns_3g8j.h"
#include "dense_dense_out_wbkb.h"
#include "dense_dense_out_bcud.h"
#include "dense_dense_array.h"

namespace ap_rtl {

struct dense : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > fully_connected_address0;
    sc_out< sc_logic > fully_connected_ce0;
    sc_in< sc_lv<32> > fully_connected_q0;
    sc_out< sc_lv<4> > prediction_address0;
    sc_out< sc_logic > prediction_ce0;
    sc_out< sc_logic > prediction_we0;
    sc_out< sc_lv<32> > prediction_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    dense(sc_module_name name);
    SC_HAS_PROCESS(dense);

    ~dense();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dense_dense_out_wbkb* dense_out_weights_U;
    dense_dense_out_bcud* dense_out_bias_U;
    dense_dense_array* dense_array_U;
    dense_fadd_32ns_3dEe<1,4,32,32,32>* dense_fadd_32ns_3dEe_U1;
    dense_fmul_32ns_3eOg<1,2,32,32,32>* dense_fmul_32ns_3eOg_U2;
    dense_fdiv_32ns_3fYi<1,8,32,32,32>* dense_fdiv_32ns_3fYi_U3;
    dense_fexp_32ns_3g8j<1,5,32,32,32>* dense_fexp_32ns_3g8j_U4;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<9> > dense_out_weights_address0;
    sc_signal< sc_logic > dense_out_weights_ce0;
    sc_signal< sc_lv<32> > dense_out_weights_q0;
    sc_signal< sc_lv<4> > dense_out_bias_address0;
    sc_signal< sc_logic > dense_out_bias_ce0;
    sc_signal< sc_lv<32> > dense_out_bias_q0;
    sc_signal< sc_lv<5> > f_0_reg_165;
    sc_signal< sc_lv<32> > w_sum_0_reg_176;
    sc_signal< sc_lv<32> > sum_0_reg_188;
    sc_signal< sc_lv<4> > i_0_reg_200;
    sc_signal< sc_lv<4> > j_0_reg_211;
    sc_signal< sc_lv<32> > dense_array_q0;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_state16_pp1_stage1_iter0;
    sc_signal< bool > ap_block_state20_pp1_stage1_iter1;
    sc_signal< bool > ap_block_state24_pp1_stage1_iter2;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<1> > icmp_ln31_reg_438;
    sc_signal< bool > ap_block_state26_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state27_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state28_pp2_stage0_iter2;
    sc_signal< bool > ap_block_state29_pp2_stage0_iter3;
    sc_signal< bool > ap_block_state30_pp2_stage0_iter4;
    sc_signal< bool > ap_block_state31_pp2_stage0_iter5;
    sc_signal< bool > ap_block_state32_pp2_stage0_iter6;
    sc_signal< bool > ap_block_state33_pp2_stage0_iter7;
    sc_signal< bool > ap_block_state34_pp2_stage0_iter8;
    sc_signal< bool > ap_block_state35_pp2_stage0_iter9;
    sc_signal< bool > ap_block_state36_pp2_stage0_iter10;
    sc_signal< bool > ap_block_state37_pp2_stage0_iter11;
    sc_signal< bool > ap_block_state38_pp2_stage0_iter12;
    sc_signal< bool > ap_block_state39_pp2_stage0_iter13;
    sc_signal< bool > ap_block_state40_pp2_stage0_iter14;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457;
    sc_signal< sc_lv<32> > grp_fu_241_p2;
    sc_signal< sc_lv<32> > reg_252;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<1> > icmp_ln31_reg_438_pp1_iter1_reg;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter5;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln16_fu_258_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > d_fu_264_p2;
    sc_signal< sc_lv<4> > d_reg_373;
    sc_signal< sc_lv<64> > zext_ln23_fu_270_p1;
    sc_signal< sc_lv<64> > zext_ln23_reg_378;
    sc_signal< sc_lv<9> > zext_ln21_fu_274_p1;
    sc_signal< sc_lv<9> > zext_ln21_reg_384;
    sc_signal< sc_lv<1> > icmp_ln21_fu_278_p2;
    sc_signal< sc_lv<1> > icmp_ln21_reg_389;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln21_reg_389_pp0_iter1_reg;
    sc_signal< sc_lv<5> > f_fu_284_p2;
    sc_signal< sc_lv<5> > f_reg_393;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > grp_fu_230_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_418;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_11001;
    sc_signal< sc_lv<32> > grp_fu_222_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<1> > icmp_ln31_fu_335_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state15_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state19_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state23_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln31_reg_438_pp1_iter2_reg;
    sc_signal< sc_lv<4> > i_fu_341_p2;
    sc_signal< sc_lv<4> > i_reg_442;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > icmp_ln37_fu_352_p2;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter6_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter7_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter8_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter9_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter10_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter11_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter12_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_457_pp2_iter13_reg;
    sc_signal< sc_lv<4> > j_fu_358_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<64> > zext_ln39_fu_364_p1;
    sc_signal< sc_lv<64> > zext_ln39_reg_466;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter2_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter3_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter4_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter5_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter6_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter7_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter8_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter9_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter10_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter11_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter12_reg;
    sc_signal< sc_lv<64> > zext_ln39_reg_466_pp2_iter13_reg;
    sc_signal< sc_lv<32> > grp_fu_236_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_476;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state15;
    sc_signal< bool > ap_block_state18_pp1_stage3_iter0;
    sc_signal< bool > ap_block_state22_pp1_stage3_iter1;
    sc_signal< bool > ap_block_pp1_stage3_subdone;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage3;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state26;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter14;
    sc_signal< sc_lv<4> > dense_array_address0;
    sc_signal< sc_logic > dense_array_ce0;
    sc_signal< sc_logic > dense_array_we0;
    sc_signal< sc_lv<4> > d_0_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > ap_phi_mux_f_0_phi_fu_169_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_w_sum_0_phi_fu_180_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_phi_fu_204_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<64> > zext_ln23_4_fu_330_p1;
    sc_signal< sc_lv<64> > zext_ln23_1_fu_290_p1;
    sc_signal< sc_lv<64> > zext_ln33_fu_347_p1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<32> > grp_fu_222_p0;
    sc_signal< sc_lv<32> > grp_fu_222_p1;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage2;
    sc_signal< bool > ap_block_pp1_stage2;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<8> > tmp_9_fu_295_p3;
    sc_signal< sc_lv<6> > tmp_s_fu_307_p3;
    sc_signal< sc_lv<9> > zext_ln23_3_fu_315_p1;
    sc_signal< sc_lv<9> > zext_ln23_2_fu_303_p1;
    sc_signal< sc_lv<9> > add_ln23_fu_319_p2;
    sc_signal< sc_lv<9> > add_ln23_1_fu_325_p2;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< bool > ap_block_state17_pp1_stage2_iter0;
    sc_signal< bool > ap_block_state21_pp1_stage2_iter1;
    sc_signal< bool > ap_block_pp1_stage2_subdone;
    sc_signal< bool > ap_block_pp1_stage2_11001;
    sc_signal< bool > ap_block_pp1_stage3_11001;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_fsm_state1;
    static const sc_lv<18> ap_ST_fsm_state2;
    static const sc_lv<18> ap_ST_fsm_pp0_stage0;
    static const sc_lv<18> ap_ST_fsm_pp0_stage1;
    static const sc_lv<18> ap_ST_fsm_pp0_stage2;
    static const sc_lv<18> ap_ST_fsm_pp0_stage3;
    static const sc_lv<18> ap_ST_fsm_state10;
    static const sc_lv<18> ap_ST_fsm_state11;
    static const sc_lv<18> ap_ST_fsm_state12;
    static const sc_lv<18> ap_ST_fsm_state13;
    static const sc_lv<18> ap_ST_fsm_state14;
    static const sc_lv<18> ap_ST_fsm_pp1_stage0;
    static const sc_lv<18> ap_ST_fsm_pp1_stage1;
    static const sc_lv<18> ap_ST_fsm_pp1_stage2;
    static const sc_lv<18> ap_ST_fsm_pp1_stage3;
    static const sc_lv<18> ap_ST_fsm_state25;
    static const sc_lv<18> ap_ST_fsm_pp2_stage0;
    static const sc_lv<18> ap_ST_fsm_state41;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_11;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln23_1_fu_325_p2();
    void thread_add_ln23_fu_319_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_pp1_stage2();
    void thread_ap_CS_fsm_pp1_stage3();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state41();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2_11001();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_pp1_stage2();
    void thread_ap_block_pp1_stage2_11001();
    void thread_ap_block_pp1_stage2_subdone();
    void thread_ap_block_pp1_stage3_11001();
    void thread_ap_block_pp1_stage3_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state15_pp1_stage0_iter0();
    void thread_ap_block_state16_pp1_stage1_iter0();
    void thread_ap_block_state17_pp1_stage2_iter0();
    void thread_ap_block_state18_pp1_stage3_iter0();
    void thread_ap_block_state19_pp1_stage0_iter1();
    void thread_ap_block_state20_pp1_stage1_iter1();
    void thread_ap_block_state21_pp1_stage2_iter1();
    void thread_ap_block_state22_pp1_stage3_iter1();
    void thread_ap_block_state23_pp1_stage0_iter2();
    void thread_ap_block_state24_pp1_stage1_iter2();
    void thread_ap_block_state26_pp2_stage0_iter0();
    void thread_ap_block_state27_pp2_stage0_iter1();
    void thread_ap_block_state28_pp2_stage0_iter2();
    void thread_ap_block_state29_pp2_stage0_iter3();
    void thread_ap_block_state30_pp2_stage0_iter4();
    void thread_ap_block_state31_pp2_stage0_iter5();
    void thread_ap_block_state32_pp2_stage0_iter6();
    void thread_ap_block_state33_pp2_stage0_iter7();
    void thread_ap_block_state34_pp2_stage0_iter8();
    void thread_ap_block_state35_pp2_stage0_iter9();
    void thread_ap_block_state36_pp2_stage0_iter10();
    void thread_ap_block_state37_pp2_stage0_iter11();
    void thread_ap_block_state38_pp2_stage0_iter12();
    void thread_ap_block_state39_pp2_stage0_iter13();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state40_pp2_stage0_iter14();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state15();
    void thread_ap_condition_pp2_exit_iter0_state26();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_f_0_phi_fu_169_p4();
    void thread_ap_phi_mux_i_0_phi_fu_204_p4();
    void thread_ap_phi_mux_w_sum_0_phi_fu_180_p4();
    void thread_ap_ready();
    void thread_d_fu_264_p2();
    void thread_dense_array_address0();
    void thread_dense_array_ce0();
    void thread_dense_array_we0();
    void thread_dense_out_bias_address0();
    void thread_dense_out_bias_ce0();
    void thread_dense_out_weights_address0();
    void thread_dense_out_weights_ce0();
    void thread_f_fu_284_p2();
    void thread_fully_connected_address0();
    void thread_fully_connected_ce0();
    void thread_grp_fu_222_p0();
    void thread_grp_fu_222_p1();
    void thread_i_fu_341_p2();
    void thread_icmp_ln16_fu_258_p2();
    void thread_icmp_ln21_fu_278_p2();
    void thread_icmp_ln31_fu_335_p2();
    void thread_icmp_ln37_fu_352_p2();
    void thread_j_fu_358_p2();
    void thread_prediction_address0();
    void thread_prediction_ce0();
    void thread_prediction_d0();
    void thread_prediction_we0();
    void thread_tmp_9_fu_295_p3();
    void thread_tmp_s_fu_307_p3();
    void thread_zext_ln21_fu_274_p1();
    void thread_zext_ln23_1_fu_290_p1();
    void thread_zext_ln23_2_fu_303_p1();
    void thread_zext_ln23_3_fu_315_p1();
    void thread_zext_ln23_4_fu_330_p1();
    void thread_zext_ln23_fu_270_p1();
    void thread_zext_ln33_fu_347_p1();
    void thread_zext_ln39_fu_364_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
