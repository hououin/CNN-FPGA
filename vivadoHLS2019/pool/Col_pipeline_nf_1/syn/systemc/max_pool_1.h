// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<14> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<14> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<14> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U3;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U4;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > c_0_reg_204;
    sc_signal< sc_lv<6> > f_fu_242_p2;
    sc_signal< sc_lv<6> > f_reg_750;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > zext_ln13_fu_248_p1;
    sc_signal< sc_lv<14> > zext_ln13_reg_755;
    sc_signal< sc_lv<1> > icmp_ln10_fu_236_p2;
    sc_signal< sc_lv<15> > zext_ln13_1_fu_252_p1;
    sc_signal< sc_lv<15> > zext_ln13_1_reg_760;
    sc_signal< sc_lv<8> > add_ln13_fu_256_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_765;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<9> > add_ln13_1_fu_262_p2;
    sc_signal< sc_lv<9> > add_ln13_1_reg_770;
    sc_signal< sc_lv<1> > icmp_ln13_fu_268_p2;
    sc_signal< sc_lv<4> > r_fu_274_p2;
    sc_signal< sc_lv<4> > r_reg_779;
    sc_signal< sc_lv<1> > icmp_ln16_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln16_reg_784;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln16_reg_784_pp0_iter1_reg;
    sc_signal< sc_lv<4> > c_fu_286_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<5> > shl_ln_fu_292_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_793;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_346_p1;
    sc_signal< sc_lv<64> > zext_ln28_1_reg_798;
    sc_signal< sc_lv<8> > add_ln35_fu_355_p2;
    sc_signal< sc_lv<8> > add_ln35_reg_808;
    sc_signal< sc_lv<8> > add_ln35_reg_808_pp0_iter1_reg;
    sc_signal< sc_lv<32> > select_ln28_fu_403_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_818;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<6> > f_0_reg_157;
    sc_signal< sc_lv<4> > r_0_reg_169;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<9> > phi_mul_reg_180;
    sc_signal< sc_lv<8> > phi_mul1_reg_192;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln28_4_fu_443_p1;
    sc_signal< sc_lv<64> > zext_ln35_2_fu_742_p1;
    sc_signal< sc_lv<32> > select_ln28_1_fu_532_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_624_p3;
    sc_signal< sc_lv<9> > zext_ln28_fu_300_p1;
    sc_signal< sc_lv<9> > add_ln28_fu_304_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_310_p1;
    sc_signal< sc_lv<6> > tmp_13_fu_314_p3;
    sc_signal< sc_lv<8> > tmp_14_fu_328_p4;
    sc_signal< sc_lv<6> > or_ln28_7_fu_322_p2;
    sc_signal< sc_lv<14> > tmp_15_fu_338_p3;
    sc_signal< sc_lv<8> > zext_ln35_fu_351_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_361_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_365_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_375_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_385_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_379_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_391_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_215_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_397_p2;
    sc_signal< sc_lv<5> > or_ln26_fu_411_p2;
    sc_signal< sc_lv<9> > zext_ln28_2_fu_416_p1;
    sc_signal< sc_lv<9> > add_ln28_1_fu_420_p2;
    sc_signal< sc_lv<14> > tmp_16_fu_426_p3;
    sc_signal< sc_lv<15> > zext_ln28_3_fu_434_p1;
    sc_signal< sc_lv<15> > add_ln28_2_fu_438_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_449_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_467_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_453_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_463_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_490_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_484_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_470_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_480_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_508_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_502_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_496_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_514_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_520_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_221_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_526_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_540_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_558_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_544_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_554_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_582_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_576_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_562_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_572_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_600_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_594_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_588_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_606_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_612_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_226_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_618_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_633_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_651_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_637_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_647_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_675_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_669_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_655_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_665_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_693_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_687_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_681_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_699_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_705_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_231_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_711_p2;
    sc_signal< sc_lv<13> > tmp_17_fu_726_p3;
    sc_signal< sc_lv<14> > zext_ln35_1_fu_733_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_737_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<9> ap_const_lv9_1A;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_1_fu_262_p2();
    void thread_add_ln13_fu_256_p2();
    void thread_add_ln28_1_fu_420_p2();
    void thread_add_ln28_2_fu_438_p2();
    void thread_add_ln28_fu_304_p2();
    void thread_add_ln35_1_fu_737_p2();
    void thread_add_ln35_fu_355_p2();
    void thread_and_ln28_1_fu_520_p2();
    void thread_and_ln28_2_fu_526_p2();
    void thread_and_ln28_3_fu_612_p2();
    void thread_and_ln28_4_fu_618_p2();
    void thread_and_ln28_5_fu_705_p2();
    void thread_and_ln28_6_fu_711_p2();
    void thread_and_ln28_fu_397_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_449_p1();
    void thread_bitcast_ln28_2_fu_467_p1();
    void thread_bitcast_ln28_3_fu_540_p1();
    void thread_bitcast_ln28_4_fu_558_p1();
    void thread_bitcast_ln28_5_fu_633_p1();
    void thread_bitcast_ln28_6_fu_651_p1();
    void thread_bitcast_ln28_fu_361_p1();
    void thread_c_fu_286_p2();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_f_fu_242_p2();
    void thread_icmp_ln10_fu_236_p2();
    void thread_icmp_ln13_fu_268_p2();
    void thread_icmp_ln16_fu_280_p2();
    void thread_icmp_ln28_10_fu_669_p2();
    void thread_icmp_ln28_11_fu_675_p2();
    void thread_icmp_ln28_12_fu_687_p2();
    void thread_icmp_ln28_13_fu_693_p2();
    void thread_icmp_ln28_1_fu_385_p2();
    void thread_icmp_ln28_2_fu_484_p2();
    void thread_icmp_ln28_3_fu_490_p2();
    void thread_icmp_ln28_4_fu_502_p2();
    void thread_icmp_ln28_5_fu_508_p2();
    void thread_icmp_ln28_6_fu_576_p2();
    void thread_icmp_ln28_7_fu_582_p2();
    void thread_icmp_ln28_8_fu_594_p2();
    void thread_icmp_ln28_9_fu_600_p2();
    void thread_icmp_ln28_fu_379_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln26_fu_411_p2();
    void thread_or_ln28_1_fu_496_p2();
    void thread_or_ln28_2_fu_514_p2();
    void thread_or_ln28_3_fu_588_p2();
    void thread_or_ln28_4_fu_606_p2();
    void thread_or_ln28_5_fu_681_p2();
    void thread_or_ln28_6_fu_699_p2();
    void thread_or_ln28_7_fu_322_p2();
    void thread_or_ln28_fu_391_p2();
    void thread_r_fu_274_p2();
    void thread_select_ln28_1_fu_532_p3();
    void thread_select_ln28_2_fu_624_p3();
    void thread_select_ln28_fu_403_p3();
    void thread_shl_ln_fu_292_p3();
    void thread_tmp_10_fu_637_p4();
    void thread_tmp_11_fu_655_p4();
    void thread_tmp_13_fu_314_p3();
    void thread_tmp_14_fu_328_p4();
    void thread_tmp_15_fu_338_p3();
    void thread_tmp_16_fu_426_p3();
    void thread_tmp_17_fu_726_p3();
    void thread_tmp_3_fu_365_p4();
    void thread_tmp_5_fu_453_p4();
    void thread_tmp_6_fu_470_p4();
    void thread_tmp_8_fu_544_p4();
    void thread_tmp_9_fu_562_p4();
    void thread_trunc_ln28_1_fu_375_p1();
    void thread_trunc_ln28_2_fu_463_p1();
    void thread_trunc_ln28_3_fu_480_p1();
    void thread_trunc_ln28_4_fu_554_p1();
    void thread_trunc_ln28_5_fu_572_p1();
    void thread_trunc_ln28_6_fu_647_p1();
    void thread_trunc_ln28_7_fu_665_p1();
    void thread_trunc_ln28_fu_310_p1();
    void thread_zext_ln13_1_fu_252_p1();
    void thread_zext_ln13_fu_248_p1();
    void thread_zext_ln28_1_fu_346_p1();
    void thread_zext_ln28_2_fu_416_p1();
    void thread_zext_ln28_3_fu_434_p1();
    void thread_zext_ln28_4_fu_443_p1();
    void thread_zext_ln28_fu_300_p1();
    void thread_zext_ln35_1_fu_733_p1();
    void thread_zext_ln35_2_fu_742_p1();
    void thread_zext_ln35_fu_351_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
