// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<15> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<14> > indvar_flatten59_reg_136;
    sc_signal< sc_lv<6> > f_0_reg_147;
    sc_signal< sc_lv<9> > indvar_flatten22_reg_158;
    sc_signal< sc_lv<4> > r_0_reg_169;
    sc_signal< sc_lv<6> > indvar_flatten_reg_180;
    sc_signal< sc_lv<4> > c_0_reg_191;
    sc_signal< sc_lv<32> > max_0_reg_202;
    sc_signal< sc_lv<2> > mpr_0_reg_214;
    sc_signal< sc_lv<1> > icmp_ln10_fu_249_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_844;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<14> > add_ln10_fu_255_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > select_ln28_3_fu_281_p3;
    sc_signal< sc_lv<6> > select_ln28_3_reg_853;
    sc_signal< sc_lv<4> > select_ln13_2_fu_375_p3;
    sc_signal< sc_lv<4> > select_ln13_2_reg_859;
    sc_signal< sc_lv<1> > or_ln16_1_fu_429_p2;
    sc_signal< sc_lv<1> > or_ln16_1_reg_865;
    sc_signal< sc_lv<4> > select_ln16_4_fu_481_p3;
    sc_signal< sc_lv<4> > select_ln16_4_reg_870;
    sc_signal< sc_lv<2> > mpr_fu_567_p2;
    sc_signal< sc_lv<2> > mpr_reg_886;
    sc_signal< sc_lv<6> > select_ln16_5_fu_579_p3;
    sc_signal< sc_lv<9> > select_ln13_5_fu_593_p3;
    sc_signal< sc_lv<32> > select_ln28_1_fu_798_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_lv<6> > ap_phi_mux_f_0_phi_fu_151_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_173_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_195_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_mpr_0_phi_fu_218_p4;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_533_p1;
    sc_signal< sc_lv<64> > zext_ln28_4_fu_562_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_839_p1;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_807_p2;
    sc_signal< sc_lv<32> > select_ln16_fu_613_p3;
    sc_signal< sc_lv<32> > select_ln28_fu_705_p3;
    sc_signal< sc_lv<5> > shl_ln1_fu_235_p3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_267_p2;
    sc_signal< sc_lv<6> > f_fu_261_p2;
    sc_signal< sc_lv<5> > shl_ln_fu_293_p3;
    sc_signal< sc_lv<1> > icmp_ln20_fu_315_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_309_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_327_p2;
    sc_signal< sc_lv<4> > select_ln28_2_fu_273_p3;
    sc_signal< sc_lv<1> > and_ln28_5_fu_333_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_345_p2;
    sc_signal< sc_lv<4> > r_fu_339_p2;
    sc_signal< sc_lv<5> > shl_ln25_mid1_fu_359_p3;
    sc_signal< sc_lv<5> > select_ln28_4_fu_301_p3;
    sc_signal< sc_lv<5> > or_ln26_fu_243_p2;
    sc_signal< sc_lv<1> > xor_ln13_fu_399_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_321_p2;
    sc_signal< sc_lv<1> > or_ln13_1_fu_405_p2;
    sc_signal< sc_lv<4> > select_ln13_fu_351_p3;
    sc_signal< sc_lv<1> > and_ln13_fu_411_p2;
    sc_signal< sc_lv<1> > or_ln16_fu_423_p2;
    sc_signal< sc_lv<4> > c_fu_417_p2;
    sc_signal< sc_lv<5> > shl_ln26_mid1_fu_443_p3;
    sc_signal< sc_lv<5> > select_ln13_3_fu_383_p3;
    sc_signal< sc_lv<5> > select_ln16_2_fu_451_p3;
    sc_signal< sc_lv<5> > or_ln26_1_fu_463_p2;
    sc_signal< sc_lv<5> > select_ln13_4_fu_391_p3;
    sc_signal< sc_lv<5> > select_ln16_3_fu_469_p3;
    sc_signal< sc_lv<2> > select_ln16_1_fu_435_p3;
    sc_signal< sc_lv<5> > select_ln13_1_fu_367_p3;
    sc_signal< sc_lv<5> > zext_ln20_fu_489_p1;
    sc_signal< sc_lv<5> > i_fu_493_p2;
    sc_signal< sc_lv<5> > mul_ln28_fu_503_p1;
    sc_signal< sc_lv<10> > zext_ln16_fu_459_p1;
    sc_signal< sc_lv<10> > mul_ln28_fu_503_p2;
    sc_signal< sc_lv<10> > add_ln28_fu_509_p2;
    sc_signal< sc_lv<15> > tmp_fu_515_p3;
    sc_signal< sc_lv<16> > zext_ln25_1_fu_289_p1;
    sc_signal< sc_lv<16> > zext_ln28_1_fu_523_p1;
    sc_signal< sc_lv<16> > add_ln28_1_fu_527_p2;
    sc_signal< sc_lv<10> > zext_ln16_1_fu_477_p1;
    sc_signal< sc_lv<10> > add_ln28_2_fu_538_p2;
    sc_signal< sc_lv<15> > tmp_2_fu_544_p3;
    sc_signal< sc_lv<16> > zext_ln28_3_fu_552_p1;
    sc_signal< sc_lv<16> > add_ln28_3_fu_556_p2;
    sc_signal< sc_lv<6> > add_ln16_fu_573_p2;
    sc_signal< sc_lv<9> > add_ln13_1_fu_587_p2;
    sc_signal< sc_lv<4> > mul_ln35_fu_607_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_621_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_639_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_625_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_635_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_663_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_657_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_643_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_653_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_681_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_675_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_669_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_687_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_693_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_225_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_699_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_714_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_732_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_718_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_728_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_756_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_750_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_736_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_746_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_774_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_768_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_762_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_780_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_786_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_230_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_792_p2;
    sc_signal< sc_lv<8> > mul_ln35_fu_607_p2;
    sc_signal< sc_lv<8> > zext_ln35_1_fu_812_p1;
    sc_signal< sc_lv<8> > add_ln35_fu_815_p2;
    sc_signal< sc_lv<13> > tmp_3_fu_821_p3;
    sc_signal< sc_lv<14> > zext_ln35_2_fu_829_p1;
    sc_signal< sc_lv<14> > zext_ln25_fu_601_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_833_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln28_fu_503_p10;
    sc_signal< sc_lv<8> > mul_ln35_fu_607_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<14> ap_const_lv14_2A40;
    static const sc_lv<14> ap_const_lv14_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<9> ap_const_lv9_152;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<6> ap_const_lv6_1A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_255_p2();
    void thread_add_ln13_1_fu_587_p2();
    void thread_add_ln16_fu_573_p2();
    void thread_add_ln28_1_fu_527_p2();
    void thread_add_ln28_2_fu_538_p2();
    void thread_add_ln28_3_fu_556_p2();
    void thread_add_ln28_fu_509_p2();
    void thread_add_ln35_1_fu_833_p2();
    void thread_add_ln35_fu_815_p2();
    void thread_and_ln13_fu_411_p2();
    void thread_and_ln28_1_fu_699_p2();
    void thread_and_ln28_2_fu_786_p2();
    void thread_and_ln28_3_fu_792_p2();
    void thread_and_ln28_4_fu_321_p2();
    void thread_and_ln28_5_fu_333_p2();
    void thread_and_ln28_fu_693_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_195_p4();
    void thread_ap_phi_mux_f_0_phi_fu_151_p4();
    void thread_ap_phi_mux_mpr_0_phi_fu_218_p4();
    void thread_ap_phi_mux_r_0_phi_fu_173_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_639_p1();
    void thread_bitcast_ln28_2_fu_714_p1();
    void thread_bitcast_ln28_3_fu_732_p1();
    void thread_bitcast_ln28_fu_621_p1();
    void thread_c_fu_417_p2();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_261_p2();
    void thread_i_fu_493_p2();
    void thread_icmp_ln10_fu_249_p2();
    void thread_icmp_ln13_fu_267_p2();
    void thread_icmp_ln16_fu_327_p2();
    void thread_icmp_ln20_1_fu_807_p2();
    void thread_icmp_ln20_fu_315_p2();
    void thread_icmp_ln28_1_fu_663_p2();
    void thread_icmp_ln28_2_fu_675_p2();
    void thread_icmp_ln28_3_fu_681_p2();
    void thread_icmp_ln28_4_fu_750_p2();
    void thread_icmp_ln28_5_fu_756_p2();
    void thread_icmp_ln28_6_fu_768_p2();
    void thread_icmp_ln28_7_fu_774_p2();
    void thread_icmp_ln28_fu_657_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_mpr_fu_567_p2();
    void thread_mul_ln28_fu_503_p1();
    void thread_mul_ln28_fu_503_p10();
    void thread_mul_ln28_fu_503_p2();
    void thread_mul_ln35_fu_607_p1();
    void thread_mul_ln35_fu_607_p10();
    void thread_mul_ln35_fu_607_p2();
    void thread_or_ln13_1_fu_405_p2();
    void thread_or_ln13_fu_345_p2();
    void thread_or_ln16_1_fu_429_p2();
    void thread_or_ln16_fu_423_p2();
    void thread_or_ln26_1_fu_463_p2();
    void thread_or_ln26_fu_243_p2();
    void thread_or_ln28_1_fu_687_p2();
    void thread_or_ln28_2_fu_762_p2();
    void thread_or_ln28_3_fu_780_p2();
    void thread_or_ln28_fu_669_p2();
    void thread_r_fu_339_p2();
    void thread_select_ln13_1_fu_367_p3();
    void thread_select_ln13_2_fu_375_p3();
    void thread_select_ln13_3_fu_383_p3();
    void thread_select_ln13_4_fu_391_p3();
    void thread_select_ln13_5_fu_593_p3();
    void thread_select_ln13_fu_351_p3();
    void thread_select_ln16_1_fu_435_p3();
    void thread_select_ln16_2_fu_451_p3();
    void thread_select_ln16_3_fu_469_p3();
    void thread_select_ln16_4_fu_481_p3();
    void thread_select_ln16_5_fu_579_p3();
    void thread_select_ln16_fu_613_p3();
    void thread_select_ln28_1_fu_798_p3();
    void thread_select_ln28_2_fu_273_p3();
    void thread_select_ln28_3_fu_281_p3();
    void thread_select_ln28_4_fu_301_p3();
    void thread_select_ln28_fu_705_p3();
    void thread_shl_ln1_fu_235_p3();
    void thread_shl_ln25_mid1_fu_359_p3();
    void thread_shl_ln26_mid1_fu_443_p3();
    void thread_shl_ln_fu_293_p3();
    void thread_tmp_1_fu_625_p4();
    void thread_tmp_2_fu_544_p3();
    void thread_tmp_3_fu_821_p3();
    void thread_tmp_5_fu_643_p4();
    void thread_tmp_7_fu_718_p4();
    void thread_tmp_8_fu_736_p4();
    void thread_tmp_fu_515_p3();
    void thread_trunc_ln28_1_fu_653_p1();
    void thread_trunc_ln28_2_fu_728_p1();
    void thread_trunc_ln28_3_fu_746_p1();
    void thread_trunc_ln28_fu_635_p1();
    void thread_xor_ln13_fu_399_p2();
    void thread_xor_ln28_fu_309_p2();
    void thread_zext_ln16_1_fu_477_p1();
    void thread_zext_ln16_fu_459_p1();
    void thread_zext_ln20_fu_489_p1();
    void thread_zext_ln25_1_fu_289_p1();
    void thread_zext_ln25_fu_601_p1();
    void thread_zext_ln28_1_fu_523_p1();
    void thread_zext_ln28_2_fu_533_p1();
    void thread_zext_ln28_3_fu_552_p1();
    void thread_zext_ln28_4_fu_562_p1();
    void thread_zext_ln35_1_fu_812_p1();
    void thread_zext_ln35_2_fu_829_p1();
    void thread_zext_ln35_3_fu_839_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
