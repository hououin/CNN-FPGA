// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"
#include "max_pool_1_mac_mucud.h"
#include "max_pool_1_mac_mudEe.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<14> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<14> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<14> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U3;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U4;
    max_pool_1_mac_mucud<1,1,5,5,4,9>* max_pool_1_mac_mucud_U5;
    max_pool_1_mac_mucud<1,1,5,5,4,9>* max_pool_1_mac_mucud_U6;
    max_pool_1_mac_mudEe<1,1,5,4,4,8>* max_pool_1_mac_mudEe_U7;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten23_reg_155;
    sc_signal< sc_lv<6> > f_0_reg_166;
    sc_signal< sc_lv<8> > indvar_flatten_reg_177;
    sc_signal< sc_lv<4> > r_0_reg_188;
    sc_signal< sc_lv<4> > c_0_reg_199;
    sc_signal< sc_lv<1> > icmp_ln10_fu_245_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_842;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_842_pp0_iter1_reg;
    sc_signal< sc_lv<13> > add_ln10_fu_251_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > select_ln28_5_fu_277_p3;
    sc_signal< sc_lv<6> > select_ln28_5_reg_851;
    sc_signal< sc_lv<6> > select_ln28_5_reg_851_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln13_fu_335_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_857;
    sc_signal< sc_lv<4> > select_ln13_reg_857_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln13_1_fu_351_p3;
    sc_signal< sc_lv<4> > select_ln13_1_reg_862;
    sc_signal< sc_lv<4> > select_ln13_1_reg_862_pp0_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln28_7_fu_410_p1;
    sc_signal< sc_lv<64> > zext_ln28_7_reg_868;
    sc_signal< sc_lv<15> > add_ln28_3_fu_426_p2;
    sc_signal< sc_lv<15> > add_ln28_3_reg_878;
    sc_signal< sc_lv<4> > c_fu_432_p2;
    sc_signal< sc_lv<8> > select_ln13_4_fu_444_p3;
    sc_signal< sc_lv<32> > select_ln28_fu_499_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_908;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<6> > ap_phi_mux_f_0_phi_fu_170_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_192_p4;
    sc_signal< sc_lv<64> > zext_ln28_9_fu_452_p1;
    sc_signal< sc_lv<64> > zext_ln35_2_fu_533_p1;
    sc_signal< sc_lv<32> > select_ln28_1_fu_621_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_713_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_231_p3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_263_p2;
    sc_signal< sc_lv<6> > f_fu_257_p2;
    sc_signal< sc_lv<5> > or_ln25_fu_239_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_311_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_305_p2;
    sc_signal< sc_lv<4> > select_ln28_4_fu_269_p3;
    sc_signal< sc_lv<1> > and_ln28_7_fu_317_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_329_p2;
    sc_signal< sc_lv<4> > r_fu_323_p2;
    sc_signal< sc_lv<5> > shl_ln25_mid1_fu_343_p3;
    sc_signal< sc_lv<5> > select_ln28_6_fu_289_p3;
    sc_signal< sc_lv<5> > select_ln13_2_fu_359_p3;
    sc_signal< sc_lv<5> > or_ln25_1_fu_371_p2;
    sc_signal< sc_lv<5> > select_ln28_7_fu_297_p3;
    sc_signal< sc_lv<5> > select_ln13_3_fu_377_p3;
    sc_signal< sc_lv<9> > grp_fu_815_p3;
    sc_signal< sc_lv<14> > tmp_fu_393_p3;
    sc_signal< sc_lv<15> > zext_ln28_1_fu_285_p1;
    sc_signal< sc_lv<15> > zext_ln28_6_fu_400_p1;
    sc_signal< sc_lv<15> > add_ln28_1_fu_404_p2;
    sc_signal< sc_lv<9> > grp_fu_824_p3;
    sc_signal< sc_lv<14> > tmp_1_fu_415_p3;
    sc_signal< sc_lv<15> > zext_ln28_8_fu_422_p1;
    sc_signal< sc_lv<8> > add_ln13_fu_438_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_457_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_461_p4;
    sc_signal< sc_lv<23> > trunc_ln28_fu_471_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_481_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_475_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_487_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_210_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_493_p2;
    sc_signal< sc_lv<8> > grp_fu_833_p3;
    sc_signal< sc_lv<13> > tmp_13_fu_516_p3;
    sc_signal< sc_lv<14> > zext_ln28_fu_507_p1;
    sc_signal< sc_lv<14> > zext_ln35_1_fu_523_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_527_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_538_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_556_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_542_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_552_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_579_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_573_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_559_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_569_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_597_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_591_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_585_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_603_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_609_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_216_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_615_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_629_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_647_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_633_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_643_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_671_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_665_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_651_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_661_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_689_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_683_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_677_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_695_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_701_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_221_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_707_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_722_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_740_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_726_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_736_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_764_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_758_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_744_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_754_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_782_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_776_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_770_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_788_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_794_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_226_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_800_p2;
    sc_signal< sc_lv<5> > grp_fu_815_p0;
    sc_signal< sc_lv<5> > grp_fu_815_p1;
    sc_signal< sc_lv<4> > grp_fu_815_p2;
    sc_signal< sc_lv<9> > zext_ln28_5_fu_389_p1;
    sc_signal< sc_lv<5> > grp_fu_824_p0;
    sc_signal< sc_lv<5> > grp_fu_824_p1;
    sc_signal< sc_lv<4> > grp_fu_824_p2;
    sc_signal< sc_lv<5> > grp_fu_833_p0;
    sc_signal< sc_lv<4> > grp_fu_833_p1;
    sc_signal< sc_lv<4> > grp_fu_833_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<9> > grp_fu_815_p10;
    sc_signal< sc_lv<9> > grp_fu_824_p10;
    sc_signal< sc_lv<8> > grp_fu_833_p10;
    sc_signal< sc_lv<8> > grp_fu_833_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<13> ap_const_lv13_1520;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<9> ap_const_lv9_D;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_251_p2();
    void thread_add_ln13_fu_438_p2();
    void thread_add_ln28_1_fu_404_p2();
    void thread_add_ln28_3_fu_426_p2();
    void thread_add_ln35_1_fu_527_p2();
    void thread_and_ln28_1_fu_609_p2();
    void thread_and_ln28_2_fu_615_p2();
    void thread_and_ln28_3_fu_701_p2();
    void thread_and_ln28_4_fu_707_p2();
    void thread_and_ln28_5_fu_794_p2();
    void thread_and_ln28_6_fu_800_p2();
    void thread_and_ln28_7_fu_317_p2();
    void thread_and_ln28_fu_493_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_170_p4();
    void thread_ap_phi_mux_r_0_phi_fu_192_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_538_p1();
    void thread_bitcast_ln28_2_fu_556_p1();
    void thread_bitcast_ln28_3_fu_629_p1();
    void thread_bitcast_ln28_4_fu_647_p1();
    void thread_bitcast_ln28_5_fu_722_p1();
    void thread_bitcast_ln28_6_fu_740_p1();
    void thread_bitcast_ln28_fu_457_p1();
    void thread_c_fu_432_p2();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_f_fu_257_p2();
    void thread_grp_fu_815_p0();
    void thread_grp_fu_815_p1();
    void thread_grp_fu_815_p10();
    void thread_grp_fu_815_p2();
    void thread_grp_fu_824_p0();
    void thread_grp_fu_824_p1();
    void thread_grp_fu_824_p10();
    void thread_grp_fu_824_p2();
    void thread_grp_fu_833_p0();
    void thread_grp_fu_833_p1();
    void thread_grp_fu_833_p10();
    void thread_grp_fu_833_p2();
    void thread_grp_fu_833_p20();
    void thread_icmp_ln10_fu_245_p2();
    void thread_icmp_ln13_fu_263_p2();
    void thread_icmp_ln16_fu_311_p2();
    void thread_icmp_ln28_10_fu_758_p2();
    void thread_icmp_ln28_11_fu_764_p2();
    void thread_icmp_ln28_12_fu_776_p2();
    void thread_icmp_ln28_13_fu_782_p2();
    void thread_icmp_ln28_1_fu_481_p2();
    void thread_icmp_ln28_2_fu_573_p2();
    void thread_icmp_ln28_3_fu_579_p2();
    void thread_icmp_ln28_4_fu_591_p2();
    void thread_icmp_ln28_5_fu_597_p2();
    void thread_icmp_ln28_6_fu_665_p2();
    void thread_icmp_ln28_7_fu_671_p2();
    void thread_icmp_ln28_8_fu_683_p2();
    void thread_icmp_ln28_9_fu_689_p2();
    void thread_icmp_ln28_fu_475_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_or_ln13_fu_329_p2();
    void thread_or_ln25_1_fu_371_p2();
    void thread_or_ln25_fu_239_p2();
    void thread_or_ln28_1_fu_585_p2();
    void thread_or_ln28_2_fu_603_p2();
    void thread_or_ln28_3_fu_677_p2();
    void thread_or_ln28_4_fu_695_p2();
    void thread_or_ln28_5_fu_770_p2();
    void thread_or_ln28_6_fu_788_p2();
    void thread_or_ln28_fu_487_p2();
    void thread_r_fu_323_p2();
    void thread_select_ln13_1_fu_351_p3();
    void thread_select_ln13_2_fu_359_p3();
    void thread_select_ln13_3_fu_377_p3();
    void thread_select_ln13_4_fu_444_p3();
    void thread_select_ln13_fu_335_p3();
    void thread_select_ln28_1_fu_621_p3();
    void thread_select_ln28_2_fu_713_p3();
    void thread_select_ln28_4_fu_269_p3();
    void thread_select_ln28_5_fu_277_p3();
    void thread_select_ln28_6_fu_289_p3();
    void thread_select_ln28_7_fu_297_p3();
    void thread_select_ln28_fu_499_p3();
    void thread_shl_ln25_mid1_fu_343_p3();
    void thread_shl_ln_fu_231_p3();
    void thread_tmp_10_fu_726_p4();
    void thread_tmp_11_fu_744_p4();
    void thread_tmp_13_fu_516_p3();
    void thread_tmp_1_fu_415_p3();
    void thread_tmp_3_fu_461_p4();
    void thread_tmp_5_fu_542_p4();
    void thread_tmp_6_fu_559_p4();
    void thread_tmp_8_fu_633_p4();
    void thread_tmp_9_fu_651_p4();
    void thread_tmp_fu_393_p3();
    void thread_trunc_ln28_1_fu_552_p1();
    void thread_trunc_ln28_2_fu_569_p1();
    void thread_trunc_ln28_3_fu_643_p1();
    void thread_trunc_ln28_4_fu_661_p1();
    void thread_trunc_ln28_5_fu_736_p1();
    void thread_trunc_ln28_6_fu_754_p1();
    void thread_trunc_ln28_fu_471_p1();
    void thread_xor_ln28_fu_305_p2();
    void thread_zext_ln28_1_fu_285_p1();
    void thread_zext_ln28_5_fu_389_p1();
    void thread_zext_ln28_6_fu_400_p1();
    void thread_zext_ln28_7_fu_410_p1();
    void thread_zext_ln28_8_fu_422_p1();
    void thread_zext_ln28_9_fu_452_p1();
    void thread_zext_ln28_fu_507_p1();
    void thread_zext_ln35_1_fu_523_p1();
    void thread_zext_ln35_2_fu_533_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
