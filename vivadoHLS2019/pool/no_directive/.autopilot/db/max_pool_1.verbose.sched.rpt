

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Wed Oct  4 15:06:34 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        pool
* Solution:       no_directive
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    11.719|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  76609|  76609|  76609|  76609|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                        |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Filter_Loop           |  76608|  76608|      2394|          -|          -|    32|    no    |
        | + Row_Loop             |   2392|   2392|       184|          -|          -|    13|    no    |
        |  ++ Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |   +++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |    ++++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        +------------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([21632 x float]* %conv_1_out) nounwind, !map !7"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5408 x float]* %max_pool_1_out) nounwind, !map !14"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 10 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.76ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %f, %Filter_Loop_end ]"   --->   Operation 12 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.42ns)   --->   "%icmp_ln10 = icmp eq i6 %f_0, -32" [pool/pooling.cpp:10]   --->   Operation 13 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.82ns)   --->   "%f = add i6 %f_0, 1" [pool/pooling.cpp:10]   --->   Operation 15 'add' 'f' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %6, label %Filter_Loop_begin" [pool/pooling.cpp:10]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind" [pool/pooling.cpp:11]   --->   Operation 17 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str) nounwind" [pool/pooling.cpp:11]   --->   Operation 18 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i6 %f_0 to i16" [pool/pooling.cpp:13]   --->   Operation 19 'zext' 'zext_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i6 %f_0 to i14" [pool/pooling.cpp:13]   --->   Operation 20 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.76ns)   --->   "br label %2" [pool/pooling.cpp:13]   --->   Operation 21 'br' <Predicate = (!icmp_ln10)> <Delay = 1.76>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "ret void" [pool/pooling.cpp:39]   --->   Operation 22 'ret' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.91>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %Filter_Loop_begin ], [ %r, %Row_Loop_end ]"   --->   Operation 23 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%phi_mul = phi i8 [ 0, %Filter_Loop_begin ], [ %add_ln13, %Row_Loop_end ]" [pool/pooling.cpp:13]   --->   Operation 24 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (1.91ns)   --->   "%add_ln13 = add i8 %phi_mul, 13" [pool/pooling.cpp:13]   --->   Operation 25 'add' 'add_ln13' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (1.30ns)   --->   "%icmp_ln13 = icmp eq i4 %r_0, -3" [pool/pooling.cpp:13]   --->   Operation 26 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 27 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.73ns)   --->   "%r = add i4 %r_0, 1" [pool/pooling.cpp:13]   --->   Operation 28 'add' 'r' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %Filter_Loop_end, label %Row_Loop_begin" [pool/pooling.cpp:13]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 30 'specloopname' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 31 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r_0, i1 false)" [pool/pooling.cpp:25]   --->   Operation 32 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.76ns)   --->   "br label %3" [pool/pooling.cpp:16]   --->   Operation 33 'br' <Predicate = (!icmp_ln13)> <Delay = 1.76>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp_1) nounwind" [pool/pooling.cpp:38]   --->   Operation 34 'specregionend' 'empty_11' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 35 'br' <Predicate = (icmp_ln13)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.76>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ 0, %Row_Loop_begin ], [ %c, %Col_Loop_end ]"   --->   Operation 36 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %c_0, -3" [pool/pooling.cpp:16]   --->   Operation 37 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 38 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (1.73ns)   --->   "%c = add i4 %c_0, 1" [pool/pooling.cpp:16]   --->   Operation 39 'add' 'c' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %Row_Loop_end, label %Col_Loop_begin" [pool/pooling.cpp:16]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 41 'specloopname' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 42 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0, i1 false)" [pool/pooling.cpp:26]   --->   Operation 43 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (1.76ns)   --->   "br label %4" [pool/pooling.cpp:20]   --->   Operation 44 'br' <Predicate = (!icmp_ln16)> <Delay = 1.76>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_2) nounwind" [pool/pooling.cpp:37]   --->   Operation 45 'specregionend' 'empty_10' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "br label %2" [pool/pooling.cpp:13]   --->   Operation 46 'br' <Predicate = (icmp_ln16)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 6.84>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%max_0 = phi float [ 0x3810000000000000, %Col_Loop_begin ], [ %max_1, %Pool_Row_Loop_end ]" [pool/pooling.cpp:28]   --->   Operation 47 'phi' 'max_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%mpr_0 = phi i2 [ 0, %Col_Loop_begin ], [ %mpr, %Pool_Row_Loop_end ]"   --->   Operation 48 'phi' 'mpr_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i2 %mpr_0 to i5" [pool/pooling.cpp:20]   --->   Operation 49 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [1/1] (0.95ns)   --->   "%icmp_ln20 = icmp eq i2 %mpr_0, -2" [pool/pooling.cpp:20]   --->   Operation 50 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 51 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 51 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 52 [1/1] (1.56ns)   --->   "%mpr = add i2 %mpr_0, 1" [pool/pooling.cpp:20]   --->   Operation 52 'add' 'mpr' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %Col_Loop_end, label %Pool_Row_Loop_begin" [pool/pooling.cpp:20]   --->   Operation 53 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str3) nounwind" [pool/pooling.cpp:21]   --->   Operation 54 'specloopname' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str3) nounwind" [pool/pooling.cpp:21]   --->   Operation 55 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (1.78ns)   --->   "%i = add i5 %zext_ln20, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 56 'add' 'i' <Predicate = (!icmp_ln20)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i5 %i to i10" [pool/pooling.cpp:28]   --->   Operation 57 'zext' 'zext_ln28' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (3.78ns)   --->   "%mul_ln28 = mul i10 %zext_ln28, 26" [pool/pooling.cpp:28]   --->   Operation 58 'mul' 'mul_ln28' <Predicate = (!icmp_ln20)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (1.76ns)   --->   "br label %5" [pool/pooling.cpp:23]   --->   Operation 59 'br' <Predicate = (!icmp_ln20)> <Delay = 1.76>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i4 %c_0 to i8" [pool/pooling.cpp:35]   --->   Operation 60 'zext' 'zext_ln35' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.91ns)   --->   "%add_ln35 = add i8 %phi_mul, %zext_ln35" [pool/pooling.cpp:35]   --->   Operation 61 'add' 'add_ln35' <Predicate = (icmp_ln20)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_7 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln35, i5 0)" [pool/pooling.cpp:35]   --->   Operation 62 'bitconcatenate' 'tmp_7' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i13 %tmp_7 to i14" [pool/pooling.cpp:35]   --->   Operation 63 'zext' 'zext_ln35_1' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (1.67ns)   --->   "%add_ln35_1 = add i14 %zext_ln35_1, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 64 'add' 'add_ln35_1' <Predicate = (icmp_ln20)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i14 %add_ln35_1 to i64" [pool/pooling.cpp:35]   --->   Operation 65 'zext' 'zext_ln35_2' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_2" [pool/pooling.cpp:35]   --->   Operation 66 'getelementptr' 'max_pool_1_out_addr' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 67 [1/1] (3.25ns)   --->   "store float %max_0, float* %max_pool_1_out_addr, align 4" [pool/pooling.cpp:35]   --->   Operation 67 'store' <Predicate = (icmp_ln20)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_3) nounwind" [pool/pooling.cpp:36]   --->   Operation 68 'specregionend' 'empty_9' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "br label %3" [pool/pooling.cpp:16]   --->   Operation 69 'br' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 8.70>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%max_1 = phi float [ %max_0, %Pool_Row_Loop_begin ], [ %max_2, %._crit_edge ]"   --->   Operation 70 'phi' 'max_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%mpc_0 = phi i2 [ 0, %Pool_Row_Loop_begin ], [ %mpc, %._crit_edge ]"   --->   Operation 71 'phi' 'mpc_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i2 %mpc_0 to i5" [pool/pooling.cpp:23]   --->   Operation 72 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.95ns)   --->   "%icmp_ln23 = icmp eq i2 %mpc_0, -2" [pool/pooling.cpp:23]   --->   Operation 73 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 74 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (1.56ns)   --->   "%mpc = add i2 %mpc_0, 1" [pool/pooling.cpp:23]   --->   Operation 75 'add' 'mpc' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %Pool_Row_Loop_end, label %._crit_edge" [pool/pooling.cpp:23]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (1.78ns)   --->   "%j = add i5 %shl_ln1, %zext_ln23" [pool/pooling.cpp:26]   --->   Operation 77 'add' 'j' <Predicate = (!icmp_ln23)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i5 %j to i10" [pool/pooling.cpp:28]   --->   Operation 78 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.73ns)   --->   "%add_ln28 = add i10 %zext_ln28_1, %mul_ln28" [pool/pooling.cpp:28]   --->   Operation 79 'add' 'add_ln28' <Predicate = (!icmp_ln23)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_8 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28, i5 0)" [pool/pooling.cpp:28]   --->   Operation 80 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i15 %tmp_8 to i16" [pool/pooling.cpp:28]   --->   Operation 81 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (1.94ns)   --->   "%add_ln28_1 = add i16 %zext_ln13, %zext_ln28_2" [pool/pooling.cpp:28]   --->   Operation 82 'add' 'add_ln28_1' <Predicate = (!icmp_ln23)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i16 %add_ln28_1 to i64" [pool/pooling.cpp:28]   --->   Operation 83 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%conv_1_out_addr = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_3" [pool/pooling.cpp:28]   --->   Operation 84 'getelementptr' 'conv_1_out_addr' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 85 [2/2] (3.25ns)   --->   "%max = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 85 'load' 'max' <Predicate = (!icmp_ln23)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str3, i32 %tmp_4) nounwind" [pool/pooling.cpp:33]   --->   Operation 86 'specregionend' 'empty_8' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "br label %4" [pool/pooling.cpp:20]   --->   Operation 87 'br' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 11.7>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:24]   --->   Operation 88 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/2] (3.25ns)   --->   "%max = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 89 'load' 'max' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_7 : Operation 90 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %max to i32" [pool/pooling.cpp:28]   --->   Operation 90 'bitcast' 'bitcast_ln28' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 91 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [pool/pooling.cpp:28]   --->   Operation 92 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %max_1 to i32" [pool/pooling.cpp:28]   --->   Operation 93 'bitcast' 'bitcast_ln28_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 94 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [pool/pooling.cpp:28]   --->   Operation 95 'trunc' 'trunc_ln28_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (1.55ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp, -1" [pool/pooling.cpp:28]   --->   Operation 96 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (2.44ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [pool/pooling.cpp:28]   --->   Operation 97 'icmp' 'icmp_ln28_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pool/pooling.cpp:28]   --->   Operation 98 'or' 'or_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (1.55ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_5, -1" [pool/pooling.cpp:28]   --->   Operation 99 'icmp' 'icmp_ln28_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (2.44ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pool/pooling.cpp:28]   --->   Operation 100 'icmp' 'icmp_ln28_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pool/pooling.cpp:28]   --->   Operation 101 'or' 'or_ln28_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%and_ln28 = and i1 %or_ln28, %or_ln28_1" [pool/pooling.cpp:28]   --->   Operation 102 'and' 'and_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (6.78ns)   --->   "%tmp_6 = fcmp ogt float %max, %max_1" [pool/pooling.cpp:28]   --->   Operation 103 'fcmp' 'tmp_6' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_1 = and i1 %and_ln28, %tmp_6" [pool/pooling.cpp:28]   --->   Operation 104 'and' 'and_ln28_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 105 [1/1] (0.69ns) (out node of the LUT)   --->   "%max_2 = select i1 %and_ln28_1, float %max, float %max_1" [pool/pooling.cpp:28]   --->   Operation 105 'select' 'max_2' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "br label %5" [pool/pooling.cpp:23]   --->   Operation 106 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (1.77 ns)

 <State 2>: 1.83ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (0 ns)
	'add' operation ('f', pool/pooling.cpp:10) [11]  (1.83 ns)

 <State 3>: 1.92ns
The critical path consists of the following:
	'phi' operation ('phi_mul', pool/pooling.cpp:13) with incoming values : ('add_ln13', pool/pooling.cpp:13) [21]  (0 ns)
	'add' operation ('add_ln13', pool/pooling.cpp:13) [22]  (1.92 ns)

 <State 4>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0', pool/pooling.cpp:28) with incoming values : ('max', pool/pooling.cpp:28) [44]  (1.77 ns)

 <State 5>: 6.85ns
The critical path consists of the following:
	'add' operation ('add_ln35', pool/pooling.cpp:35) [99]  (1.92 ns)
	'add' operation ('add_ln35_1', pool/pooling.cpp:35) [102]  (1.68 ns)
	'getelementptr' operation ('max_pool_1_out_addr', pool/pooling.cpp:35) [104]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0', pool/pooling.cpp:28 on array 'max_pool_1_out' [105]  (3.25 ns)

 <State 6>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc') with incoming values : ('mpc', pool/pooling.cpp:23) [60]  (0 ns)
	'add' operation ('j', pool/pooling.cpp:26) [68]  (1.78 ns)
	'add' operation ('add_ln28', pool/pooling.cpp:28) [70]  (1.73 ns)
	'add' operation ('add_ln28_1', pool/pooling.cpp:28) [73]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr', pool/pooling.cpp:28) [75]  (0 ns)
	'load' operation ('max', pool/pooling.cpp:28) on array 'conv_1_out' [76]  (3.25 ns)

 <State 7>: 11.7ns
The critical path consists of the following:
	'load' operation ('max', pool/pooling.cpp:28) on array 'conv_1_out' [76]  (3.25 ns)
	'fcmp' operation ('tmp_6', pool/pooling.cpp:28) [90]  (6.79 ns)
	'and' operation ('and_ln28_1', pool/pooling.cpp:28) [91]  (0.978 ns)
	'select' operation ('max', pool/pooling.cpp:28) [92]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
