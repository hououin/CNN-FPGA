// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<15> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > c_0_reg_179;
    sc_signal< sc_lv<6> > f_fu_207_p2;
    sc_signal< sc_lv<6> > f_reg_811;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<14> > zext_ln13_fu_213_p1;
    sc_signal< sc_lv<14> > zext_ln13_reg_816;
    sc_signal< sc_lv<1> > icmp_ln10_fu_201_p2;
    sc_signal< sc_lv<16> > zext_ln13_1_fu_217_p1;
    sc_signal< sc_lv<16> > zext_ln13_1_reg_821;
    sc_signal< sc_lv<8> > add_ln13_fu_221_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_827;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_227_p2;
    sc_signal< sc_lv<4> > r_fu_233_p2;
    sc_signal< sc_lv<4> > r_reg_836;
    sc_signal< sc_lv<10> > mul_ln28_fu_251_p2;
    sc_signal< sc_lv<10> > mul_ln28_reg_841;
    sc_signal< sc_lv<10> > mul_ln28_1_fu_267_p2;
    sc_signal< sc_lv<10> > mul_ln28_1_reg_847;
    sc_signal< sc_lv<1> > icmp_ln16_fu_273_p2;
    sc_signal< sc_lv<1> > icmp_ln16_reg_853;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > c_fu_279_p2;
    sc_signal< sc_lv<4> > c_reg_857;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > trunc_ln28_1_fu_348_p1;
    sc_signal< sc_lv<1> > trunc_ln28_1_reg_867;
    sc_signal< sc_lv<9> > tmp_17_reg_872;
    sc_signal< sc_lv<10> > add_ln28_4_fu_399_p2;
    sc_signal< sc_lv<10> > add_ln28_4_reg_882;
    sc_signal< sc_lv<8> > add_ln35_fu_408_p2;
    sc_signal< sc_lv<8> > add_ln35_reg_887;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > select_ln28_1_fu_595_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_902;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<6> > f_0_reg_144;
    sc_signal< sc_lv<4> > r_0_reg_156;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<8> > phi_mul_reg_167;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_183_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_338_p1;
    sc_signal< sc_lv<64> > zext_ln28_7_fu_394_p1;
    sc_signal< sc_lv<64> > zext_ln28_4_fu_434_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_9_fu_506_p1;
    sc_signal< sc_lv<64> > zext_ln35_2_fu_803_p1;
    sc_signal< sc_lv<32> > grp_fu_190_p1;
    sc_signal< sc_lv<32> > grp_fu_196_p1;
    sc_signal< sc_lv<32> > select_ln28_fu_481_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_686_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_239_p3;
    sc_signal< sc_lv<5> > mul_ln28_fu_251_p0;
    sc_signal< sc_lv<5> > or_ln25_fu_257_p2;
    sc_signal< sc_lv<5> > mul_ln28_1_fu_267_p0;
    sc_signal< sc_lv<5> > shl_ln1_fu_285_p3;
    sc_signal< sc_lv<10> > zext_ln28_2_fu_293_p1;
    sc_signal< sc_lv<10> > add_ln28_fu_297_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_302_p1;
    sc_signal< sc_lv<6> > tmp_13_fu_306_p3;
    sc_signal< sc_lv<9> > tmp_14_fu_320_p4;
    sc_signal< sc_lv<6> > or_ln28_7_fu_314_p2;
    sc_signal< sc_lv<15> > tmp_15_fu_330_p3;
    sc_signal< sc_lv<10> > add_ln28_1_fu_343_p2;
    sc_signal< sc_lv<5> > or_ln26_fu_362_p2;
    sc_signal< sc_lv<10> > zext_ln28_5_fu_368_p1;
    sc_signal< sc_lv<10> > add_ln28_2_fu_372_p2;
    sc_signal< sc_lv<15> > tmp_19_fu_377_p3;
    sc_signal< sc_lv<16> > zext_ln28_6_fu_385_p1;
    sc_signal< sc_lv<16> > add_ln28_3_fu_389_p2;
    sc_signal< sc_lv<8> > zext_ln35_fu_404_p1;
    sc_signal< sc_lv<6> > tmp_16_fu_414_p3;
    sc_signal< sc_lv<6> > or_ln28_8_fu_421_p2;
    sc_signal< sc_lv<15> > tmp_18_fu_427_p3;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_439_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_443_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_453_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_463_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_457_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_469_p2;
    sc_signal< sc_lv<1> > grp_fu_190_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_475_p2;
    sc_signal< sc_lv<15> > tmp_20_fu_490_p3;
    sc_signal< sc_lv<16> > zext_ln28_8_fu_497_p1;
    sc_signal< sc_lv<16> > add_ln28_5_fu_501_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_511_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_529_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_515_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_525_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_553_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_547_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_533_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_543_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_571_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_565_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_559_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_577_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_583_p2;
    sc_signal< sc_lv<1> > grp_fu_196_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_589_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_603_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_621_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_607_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_617_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_644_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_638_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_624_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_634_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_662_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_656_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_650_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_668_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_674_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_680_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_694_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_712_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_698_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_708_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_736_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_730_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_716_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_726_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_754_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_748_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_742_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_760_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_766_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_772_p2;
    sc_signal< sc_lv<13> > tmp_21_fu_787_p3;
    sc_signal< sc_lv<14> > zext_ln35_1_fu_794_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_798_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > mul_ln28_1_fu_267_p00;
    sc_signal< sc_lv<10> > mul_ln28_fu_251_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_221_p2();
    void thread_add_ln28_1_fu_343_p2();
    void thread_add_ln28_2_fu_372_p2();
    void thread_add_ln28_3_fu_389_p2();
    void thread_add_ln28_4_fu_399_p2();
    void thread_add_ln28_5_fu_501_p2();
    void thread_add_ln28_fu_297_p2();
    void thread_add_ln35_1_fu_798_p2();
    void thread_add_ln35_fu_408_p2();
    void thread_and_ln28_1_fu_583_p2();
    void thread_and_ln28_2_fu_589_p2();
    void thread_and_ln28_3_fu_674_p2();
    void thread_and_ln28_4_fu_680_p2();
    void thread_and_ln28_5_fu_766_p2();
    void thread_and_ln28_6_fu_772_p2();
    void thread_and_ln28_fu_475_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_183_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_511_p1();
    void thread_bitcast_ln28_2_fu_529_p1();
    void thread_bitcast_ln28_3_fu_603_p1();
    void thread_bitcast_ln28_4_fu_621_p1();
    void thread_bitcast_ln28_5_fu_694_p1();
    void thread_bitcast_ln28_6_fu_712_p1();
    void thread_bitcast_ln28_fu_439_p1();
    void thread_c_fu_279_p2();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_207_p2();
    void thread_grp_fu_190_p1();
    void thread_grp_fu_196_p1();
    void thread_icmp_ln10_fu_201_p2();
    void thread_icmp_ln13_fu_227_p2();
    void thread_icmp_ln16_fu_273_p2();
    void thread_icmp_ln28_10_fu_730_p2();
    void thread_icmp_ln28_11_fu_736_p2();
    void thread_icmp_ln28_12_fu_748_p2();
    void thread_icmp_ln28_13_fu_754_p2();
    void thread_icmp_ln28_1_fu_463_p2();
    void thread_icmp_ln28_2_fu_547_p2();
    void thread_icmp_ln28_3_fu_553_p2();
    void thread_icmp_ln28_4_fu_565_p2();
    void thread_icmp_ln28_5_fu_571_p2();
    void thread_icmp_ln28_6_fu_638_p2();
    void thread_icmp_ln28_7_fu_644_p2();
    void thread_icmp_ln28_8_fu_656_p2();
    void thread_icmp_ln28_9_fu_662_p2();
    void thread_icmp_ln28_fu_457_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_mul_ln28_1_fu_267_p0();
    void thread_mul_ln28_1_fu_267_p00();
    void thread_mul_ln28_1_fu_267_p2();
    void thread_mul_ln28_fu_251_p0();
    void thread_mul_ln28_fu_251_p00();
    void thread_mul_ln28_fu_251_p2();
    void thread_or_ln25_fu_257_p2();
    void thread_or_ln26_fu_362_p2();
    void thread_or_ln28_1_fu_559_p2();
    void thread_or_ln28_2_fu_577_p2();
    void thread_or_ln28_3_fu_650_p2();
    void thread_or_ln28_4_fu_668_p2();
    void thread_or_ln28_5_fu_742_p2();
    void thread_or_ln28_6_fu_760_p2();
    void thread_or_ln28_7_fu_314_p2();
    void thread_or_ln28_8_fu_421_p2();
    void thread_or_ln28_fu_469_p2();
    void thread_r_fu_233_p2();
    void thread_select_ln28_1_fu_595_p3();
    void thread_select_ln28_2_fu_686_p3();
    void thread_select_ln28_fu_481_p3();
    void thread_shl_ln1_fu_285_p3();
    void thread_shl_ln_fu_239_p3();
    void thread_tmp_10_fu_698_p4();
    void thread_tmp_11_fu_716_p4();
    void thread_tmp_13_fu_306_p3();
    void thread_tmp_14_fu_320_p4();
    void thread_tmp_15_fu_330_p3();
    void thread_tmp_16_fu_414_p3();
    void thread_tmp_18_fu_427_p3();
    void thread_tmp_19_fu_377_p3();
    void thread_tmp_20_fu_490_p3();
    void thread_tmp_21_fu_787_p3();
    void thread_tmp_3_fu_443_p4();
    void thread_tmp_5_fu_515_p4();
    void thread_tmp_6_fu_533_p4();
    void thread_tmp_8_fu_607_p4();
    void thread_tmp_9_fu_624_p4();
    void thread_trunc_ln28_1_fu_348_p1();
    void thread_trunc_ln28_2_fu_453_p1();
    void thread_trunc_ln28_3_fu_525_p1();
    void thread_trunc_ln28_4_fu_543_p1();
    void thread_trunc_ln28_5_fu_617_p1();
    void thread_trunc_ln28_6_fu_634_p1();
    void thread_trunc_ln28_7_fu_708_p1();
    void thread_trunc_ln28_8_fu_726_p1();
    void thread_trunc_ln28_fu_302_p1();
    void thread_zext_ln13_1_fu_217_p1();
    void thread_zext_ln13_fu_213_p1();
    void thread_zext_ln28_2_fu_293_p1();
    void thread_zext_ln28_3_fu_338_p1();
    void thread_zext_ln28_4_fu_434_p1();
    void thread_zext_ln28_5_fu_368_p1();
    void thread_zext_ln28_6_fu_385_p1();
    void thread_zext_ln28_7_fu_394_p1();
    void thread_zext_ln28_8_fu_497_p1();
    void thread_zext_ln28_9_fu_506_p1();
    void thread_zext_ln35_1_fu_794_p1();
    void thread_zext_ln35_2_fu_803_p1();
    void thread_zext_ln35_fu_404_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
