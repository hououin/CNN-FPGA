

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Wed Oct  4 15:54:33 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        pool
* Solution:       Row_unroll
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    11.719|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  76161|  76161|  76161|  76161|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                      |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Filter_Loop         |  76160|  76160|      2380|          -|          -|    32|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        | + Col_Loop           |    182|    182|        14|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 54
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 7 
4 --> 5 3 
5 --> 6 4 
6 --> 5 
7 --> 8 11 
8 --> 9 7 
9 --> 10 8 
10 --> 9 
11 --> 12 15 
12 --> 13 11 
13 --> 14 12 
14 --> 13 
15 --> 16 19 
16 --> 17 15 
17 --> 18 16 
18 --> 17 
19 --> 20 23 
20 --> 21 19 
21 --> 22 20 
22 --> 21 
23 --> 24 27 
24 --> 25 23 
25 --> 26 24 
26 --> 25 
27 --> 28 31 
28 --> 29 27 
29 --> 30 28 
30 --> 29 
31 --> 32 35 
32 --> 33 31 
33 --> 34 32 
34 --> 33 
35 --> 36 39 
36 --> 37 35 
37 --> 38 36 
38 --> 37 
39 --> 40 43 
40 --> 41 39 
41 --> 42 40 
42 --> 41 
43 --> 44 47 
44 --> 45 43 
45 --> 46 44 
46 --> 45 
47 --> 48 51 
48 --> 49 47 
49 --> 50 48 
50 --> 49 
51 --> 52 2 
52 --> 53 51 
53 --> 54 52 
54 --> 53 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([21632 x float]* %conv_1_out) nounwind, !map !7"   --->   Operation 55 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5408 x float]* %max_pool_1_out) nounwind, !map !14"   --->   Operation 56 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 57 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (1.76ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 58 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %f, %Row_Loop_end ]"   --->   Operation 59 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (1.42ns)   --->   "%icmp_ln10 = icmp eq i6 %f_0, -32" [pool/pooling.cpp:10]   --->   Operation 60 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 61 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (1.82ns)   --->   "%f = add i6 %f_0, 1" [pool/pooling.cpp:10]   --->   Operation 62 'add' 'f' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %41, label %Row_Loop_begin" [pool/pooling.cpp:10]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind" [pool/pooling.cpp:11]   --->   Operation 64 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i6 %f_0 to i10" [pool/pooling.cpp:14]   --->   Operation 65 'zext' 'zext_ln14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i6 %f_0 to i11" [pool/pooling.cpp:14]   --->   Operation 66 'zext' 'zext_ln14_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln14_2 = zext i6 %f_0 to i12" [pool/pooling.cpp:14]   --->   Operation 67 'zext' 'zext_ln14_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln14_3 = zext i6 %f_0 to i16" [pool/pooling.cpp:14]   --->   Operation 68 'zext' 'zext_ln14_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln14_4 = zext i6 %f_0 to i13" [pool/pooling.cpp:14]   --->   Operation 69 'zext' 'zext_ln14_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 70 'specregionbegin' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.76ns)   --->   "br label %2" [pool/pooling.cpp:16]   --->   Operation 71 'br' <Predicate = (!icmp_ln10)> <Delay = 1.76>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "ret void" [pool/pooling.cpp:39]   --->   Operation 72 'ret' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.76>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%c_0_0 = phi i4 [ 0, %Row_Loop_begin ], [ %add_ln16, %Col_Loop_end ]" [pool/pooling.cpp:16]   --->   Operation 73 'phi' 'c_0_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %c_0_0, -3" [pool/pooling.cpp:16]   --->   Operation 74 'icmp' 'icmp_ln16' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 75 'speclooptripcount' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (1.73ns)   --->   "%add_ln16 = add i4 %c_0_0, 1" [pool/pooling.cpp:16]   --->   Operation 76 'add' 'add_ln16' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16, label %Row_Loop, label %Col_Loop_begin" [pool/pooling.cpp:16]   --->   Operation 77 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 78 'specloopname' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 79 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_0, i1 false)" [pool/pooling.cpp:26]   --->   Operation 80 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (1.76ns)   --->   "br label %3" [pool/pooling.cpp:20]   --->   Operation 81 'br' <Predicate = (!icmp_ln16)> <Delay = 1.76>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp) nounwind" [pool/pooling.cpp:37]   --->   Operation 82 'specregionend' 'empty_4' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 83 'specregionbegin' 'tmp_s' <Predicate = (icmp_ln16)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (1.76ns)   --->   "br label %5" [pool/pooling.cpp:16]   --->   Operation 84 'br' <Predicate = (icmp_ln16)> <Delay = 1.76>

State 4 <SV = 3> <Delay = 5.07>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%max_0_0 = phi float [ 0x3810000000000000, %Col_Loop_begin ], [ %max_1_0, %Pool_Row_Loop_end ]" [pool/pooling.cpp:28]   --->   Operation 85 'phi' 'max_0_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%mpr_0_0 = phi i2 [ 0, %Col_Loop_begin ], [ %add_ln20, %Pool_Row_Loop_end ]" [pool/pooling.cpp:20]   --->   Operation 86 'phi' 'mpr_0_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%phi_mul = phi i6 [ 0, %Col_Loop_begin ], [ %add_ln20_13, %Pool_Row_Loop_end ]" [pool/pooling.cpp:20]   --->   Operation 87 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (1.82ns)   --->   "%add_ln20_13 = add i6 %phi_mul, 26" [pool/pooling.cpp:20]   --->   Operation 88 'add' 'add_ln20_13' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.95ns)   --->   "%icmp_ln20 = icmp eq i2 %mpr_0_0, -2" [pool/pooling.cpp:20]   --->   Operation 89 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 90 'speclooptripcount' 'empty_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (1.56ns)   --->   "%add_ln20 = add i2 %mpr_0_0, 1" [pool/pooling.cpp:20]   --->   Operation 91 'add' 'add_ln20' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %Col_Loop_end, label %Pool_Row_Loop_begin" [pool/pooling.cpp:20]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 93 'specloopname' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 94 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (1.76ns)   --->   "br label %4" [pool/pooling.cpp:23]   --->   Operation 95 'br' <Predicate = (!icmp_ln20)> <Delay = 1.76>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_77 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_0, i5 0)" [pool/pooling.cpp:35]   --->   Operation 96 'bitconcatenate' 'tmp_77' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i9 %tmp_77 to i10" [pool/pooling.cpp:35]   --->   Operation 97 'zext' 'zext_ln35' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (1.82ns)   --->   "%add_ln35 = add i10 %zext_ln14, %zext_ln35" [pool/pooling.cpp:35]   --->   Operation 98 'add' 'add_ln35' <Predicate = (icmp_ln20)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i10 %add_ln35 to i64" [pool/pooling.cpp:35]   --->   Operation 99 'zext' 'zext_ln35_1' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_1" [pool/pooling.cpp:35]   --->   Operation 100 'getelementptr' 'max_pool_1_out_addr' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (3.25ns)   --->   "store float %max_0_0, float* %max_pool_1_out_addr, align 4" [pool/pooling.cpp:35]   --->   Operation 101 'store' <Predicate = (icmp_ln20)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_1) nounwind" [pool/pooling.cpp:36]   --->   Operation 102 'specregionend' 'empty_6' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "br label %2" [pool/pooling.cpp:16]   --->   Operation 103 'br' <Predicate = (icmp_ln20)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.49>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%max_1_0 = phi float [ %max_0_0, %Pool_Row_Loop_begin ], [ %select_ln28, %._crit_edge.0 ]" [pool/pooling.cpp:28]   --->   Operation 104 'phi' 'max_1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%mpc_0_0 = phi i2 [ 0, %Pool_Row_Loop_begin ], [ %add_ln23, %._crit_edge.0 ]" [pool/pooling.cpp:23]   --->   Operation 105 'phi' 'mpc_0_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i2 %mpc_0_0 to i5" [pool/pooling.cpp:23]   --->   Operation 106 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.95ns)   --->   "%icmp_ln23 = icmp eq i2 %mpc_0_0, -2" [pool/pooling.cpp:23]   --->   Operation 107 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 108 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (1.56ns)   --->   "%add_ln23 = add i2 %mpc_0_0, 1" [pool/pooling.cpp:23]   --->   Operation 109 'add' 'add_ln23' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %Pool_Row_Loop_end, label %._crit_edge.0" [pool/pooling.cpp:23]   --->   Operation 110 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (1.78ns)   --->   "%add_ln26 = add i5 %shl_ln, %zext_ln23" [pool/pooling.cpp:26]   --->   Operation 111 'add' 'add_ln26' <Predicate = (!icmp_ln23)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i5 %add_ln26 to i6" [pool/pooling.cpp:28]   --->   Operation 112 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (1.82ns)   --->   "%add_ln28 = add i6 %zext_ln28_1, %phi_mul" [pool/pooling.cpp:28]   --->   Operation 113 'add' 'add_ln28' <Predicate = (!icmp_ln23)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_79 = call i11 @_ssdm_op_BitConcatenate.i11.i6.i5(i6 %add_ln28, i5 0)" [pool/pooling.cpp:28]   --->   Operation 114 'bitconcatenate' 'tmp_79' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i11 %tmp_79 to i16" [pool/pooling.cpp:28]   --->   Operation 115 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (1.63ns)   --->   "%add_ln28_1 = add i16 %zext_ln14_3, %zext_ln28_2" [pool/pooling.cpp:28]   --->   Operation 116 'add' 'add_ln28_1' <Predicate = (!icmp_ln23)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i16 %add_ln28_1 to i64" [pool/pooling.cpp:28]   --->   Operation 117 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%conv_1_out_addr = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_3" [pool/pooling.cpp:28]   --->   Operation 118 'getelementptr' 'conv_1_out_addr' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 119 [2/2] (3.25ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 119 'load' 'conv_1_out_load' <Predicate = (!icmp_ln23)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_4) nounwind" [pool/pooling.cpp:33]   --->   Operation 120 'specregionend' 'empty_8' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "br label %3" [pool/pooling.cpp:20]   --->   Operation 121 'br' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 11.7>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 122 'specloopname' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/2] (3.25ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 123 'load' 'conv_1_out_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %conv_1_out_load to i32" [pool/pooling.cpp:28]   --->   Operation 124 'bitcast' 'bitcast_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 125 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [pool/pooling.cpp:28]   --->   Operation 126 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 127 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %max_1_0 to i32" [pool/pooling.cpp:28]   --->   Operation 127 'bitcast' 'bitcast_ln28_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 128 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [pool/pooling.cpp:28]   --->   Operation 129 'trunc' 'trunc_ln28_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (1.55ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_8, -1" [pool/pooling.cpp:28]   --->   Operation 130 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (2.44ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [pool/pooling.cpp:28]   --->   Operation 131 'icmp' 'icmp_ln28_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pool/pooling.cpp:28]   --->   Operation 132 'or' 'or_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (1.55ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_9, -1" [pool/pooling.cpp:28]   --->   Operation 133 'icmp' 'icmp_ln28_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (2.44ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pool/pooling.cpp:28]   --->   Operation 134 'icmp' 'icmp_ln28_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pool/pooling.cpp:28]   --->   Operation 135 'or' 'or_ln28_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%and_ln28 = and i1 %or_ln28, %or_ln28_1" [pool/pooling.cpp:28]   --->   Operation 136 'and' 'and_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 137 [1/1] (6.78ns)   --->   "%tmp_10 = fcmp ogt float %conv_1_out_load, %max_1_0" [pool/pooling.cpp:28]   --->   Operation 137 'fcmp' 'tmp_10' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 138 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_1 = and i1 %and_ln28, %tmp_10" [pool/pooling.cpp:28]   --->   Operation 138 'and' 'and_ln28_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 139 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28_1, float %conv_1_out_load, float %max_1_0" [pool/pooling.cpp:28]   --->   Operation 139 'select' 'select_ln28' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "br label %4" [pool/pooling.cpp:23]   --->   Operation 140 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 3> <Delay = 1.76>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "%c_0_1 = phi i4 [ 0, %Row_Loop ], [ %add_ln16_1, %Col_Loop_end1 ]" [pool/pooling.cpp:16]   --->   Operation 141 'phi' 'c_0_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 142 [1/1] (1.30ns)   --->   "%icmp_ln16_1 = icmp eq i4 %c_0_1, -3" [pool/pooling.cpp:16]   --->   Operation 142 'icmp' 'icmp_ln16_1' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 143 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 143 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 144 [1/1] (1.73ns)   --->   "%add_ln16_1 = add i4 %c_0_1, 1" [pool/pooling.cpp:16]   --->   Operation 144 'add' 'add_ln16_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 145 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_1, label %Row_Loop1, label %Col_Loop_begin1" [pool/pooling.cpp:16]   --->   Operation 145 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 146 'specloopname' <Predicate = (!icmp_ln16_1)> <Delay = 0.00>
ST_7 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 147 'specregionbegin' 'tmp_3' <Predicate = (!icmp_ln16_1)> <Delay = 0.00>
ST_7 : Operation 148 [1/1] (0.00ns)   --->   "%shl_ln26_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_1, i1 false)" [pool/pooling.cpp:26]   --->   Operation 148 'bitconcatenate' 'shl_ln26_1' <Predicate = (!icmp_ln16_1)> <Delay = 0.00>
ST_7 : Operation 149 [1/1] (1.76ns)   --->   "br label %6" [pool/pooling.cpp:20]   --->   Operation 149 'br' <Predicate = (!icmp_ln16_1)> <Delay = 1.76>
ST_7 : Operation 150 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_s) nounwind" [pool/pooling.cpp:37]   --->   Operation 150 'specregionend' 'empty_10' <Predicate = (icmp_ln16_1)> <Delay = 0.00>
ST_7 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 151 'specregionbegin' 'tmp_2' <Predicate = (icmp_ln16_1)> <Delay = 0.00>
ST_7 : Operation 152 [1/1] (1.76ns)   --->   "br label %8" [pool/pooling.cpp:16]   --->   Operation 152 'br' <Predicate = (icmp_ln16_1)> <Delay = 1.76>

State 8 <SV = 4> <Delay = 6.98>
ST_8 : Operation 153 [1/1] (0.00ns)   --->   "%max_0_1 = phi float [ 0x3810000000000000, %Col_Loop_begin1 ], [ %max_1_1, %Pool_Row_Loop_end1 ]" [pool/pooling.cpp:28]   --->   Operation 153 'phi' 'max_0_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "%mpr_0_1 = phi i2 [ 0, %Col_Loop_begin1 ], [ %add_ln20_1, %Pool_Row_Loop_end1 ]" [pool/pooling.cpp:20]   --->   Operation 154 'phi' 'mpr_0_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (0.95ns)   --->   "%icmp_ln20_1 = icmp eq i2 %mpr_0_1, -2" [pool/pooling.cpp:20]   --->   Operation 155 'icmp' 'icmp_ln20_1' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 156 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 157 [1/1] (1.56ns)   --->   "%add_ln20_1 = add i2 %mpr_0_1, 1" [pool/pooling.cpp:20]   --->   Operation 157 'add' 'add_ln20_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 158 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_1, label %Col_Loop_end1, label %Pool_Row_Loop_begin1" [pool/pooling.cpp:20]   --->   Operation 158 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 159 'specloopname' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 160 'specregionbegin' 'tmp_7' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 161 [1/1] (0.97ns)   --->   "%xor_ln25 = xor i2 %mpr_0_1, -2" [pool/pooling.cpp:25]   --->   Operation 161 'xor' 'xor_ln25' <Predicate = (!icmp_ln20_1)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i2 %xor_ln25 to i7" [pool/pooling.cpp:28]   --->   Operation 162 'zext' 'zext_ln28' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 163 [1/1] (3.78ns)   --->   "%mul_ln28 = mul i7 %zext_ln28, 26" [pool/pooling.cpp:28]   --->   Operation 163 'mul' 'mul_ln28' <Predicate = (!icmp_ln20_1)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 164 [1/1] (1.76ns)   --->   "br label %7" [pool/pooling.cpp:23]   --->   Operation 164 'br' <Predicate = (!icmp_ln20_1)> <Delay = 1.76>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_78 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_1, i5 0)" [pool/pooling.cpp:35]   --->   Operation 165 'bitconcatenate' 'tmp_78' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i9 %tmp_78 to i10" [pool/pooling.cpp:35]   --->   Operation 166 'zext' 'zext_ln35_2' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 167 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_1 = add i10 %zext_ln35_2, 416" [pool/pooling.cpp:35]   --->   Operation 167 'add' 'add_ln35_1' <Predicate = (icmp_ln20_1)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 168 [1/1] (3.72ns) (root node of TernaryAdder)   --->   "%add_ln35_2 = add i10 %zext_ln14, %add_ln35_1" [pool/pooling.cpp:35]   --->   Operation 168 'add' 'add_ln35_2' <Predicate = (icmp_ln20_1)> <Delay = 3.72> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i10 %add_ln35_2 to i64" [pool/pooling.cpp:35]   --->   Operation 169 'zext' 'zext_ln35_3' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 170 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_1 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_3" [pool/pooling.cpp:35]   --->   Operation 170 'getelementptr' 'max_pool_1_out_addr_1' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 171 [1/1] (3.25ns)   --->   "store float %max_0_1, float* %max_pool_1_out_addr_1, align 4" [pool/pooling.cpp:35]   --->   Operation 171 'store' <Predicate = (icmp_ln20_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_8 : Operation 172 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_3) nounwind" [pool/pooling.cpp:36]   --->   Operation 172 'specregionend' 'empty_12' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_8 : Operation 173 [1/1] (0.00ns)   --->   "br label %5" [pool/pooling.cpp:16]   --->   Operation 173 'br' <Predicate = (icmp_ln20_1)> <Delay = 0.00>

State 9 <SV = 5> <Delay = 8.45>
ST_9 : Operation 174 [1/1] (0.00ns)   --->   "%max_1_1 = phi float [ %max_0_1, %Pool_Row_Loop_begin1 ], [ %select_ln28_1, %._crit_edge.1 ]" [pool/pooling.cpp:28]   --->   Operation 174 'phi' 'max_1_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 175 [1/1] (0.00ns)   --->   "%mpc_0_1 = phi i2 [ 0, %Pool_Row_Loop_begin1 ], [ %add_ln23_1, %._crit_edge.1 ]" [pool/pooling.cpp:23]   --->   Operation 175 'phi' 'mpc_0_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i2 %mpc_0_1 to i5" [pool/pooling.cpp:23]   --->   Operation 176 'zext' 'zext_ln23_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 177 [1/1] (0.95ns)   --->   "%icmp_ln23_1 = icmp eq i2 %mpc_0_1, -2" [pool/pooling.cpp:23]   --->   Operation 177 'icmp' 'icmp_ln23_1' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 178 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 178 'speclooptripcount' 'empty_15' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 179 [1/1] (1.56ns)   --->   "%add_ln23_1 = add i2 %mpc_0_1, 1" [pool/pooling.cpp:23]   --->   Operation 179 'add' 'add_ln23_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 180 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_1, label %Pool_Row_Loop_end1, label %._crit_edge.1" [pool/pooling.cpp:23]   --->   Operation 180 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 181 [1/1] (1.78ns)   --->   "%add_ln26_1 = add i5 %shl_ln26_1, %zext_ln23_1" [pool/pooling.cpp:26]   --->   Operation 181 'add' 'add_ln26_1' <Predicate = (!icmp_ln23_1)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i5 %add_ln26_1 to i7" [pool/pooling.cpp:28]   --->   Operation 182 'zext' 'zext_ln28_5' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 183 [1/1] (1.87ns)   --->   "%add_ln28_2 = add i7 %zext_ln28_5, %mul_ln28" [pool/pooling.cpp:28]   --->   Operation 183 'add' 'add_ln28_2' <Predicate = (!icmp_ln23_1)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 184 [1/1] (0.00ns)   --->   "%tmp_81 = call i12 @_ssdm_op_BitConcatenate.i12.i7.i5(i7 %add_ln28_2, i5 0)" [pool/pooling.cpp:28]   --->   Operation 184 'bitconcatenate' 'tmp_81' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln28_6 = zext i12 %tmp_81 to i16" [pool/pooling.cpp:28]   --->   Operation 185 'zext' 'zext_ln28_6' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 186 [1/1] (1.54ns)   --->   "%add_ln28_3 = add i16 %zext_ln14_3, %zext_ln28_6" [pool/pooling.cpp:28]   --->   Operation 186 'add' 'add_ln28_3' <Predicate = (!icmp_ln23_1)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln28_7 = zext i16 %add_ln28_3 to i64" [pool/pooling.cpp:28]   --->   Operation 187 'zext' 'zext_ln28_7' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 188 [1/1] (0.00ns)   --->   "%conv_1_out_addr_1 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_7" [pool/pooling.cpp:28]   --->   Operation 188 'getelementptr' 'conv_1_out_addr_1' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 189 [2/2] (3.25ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 189 'load' 'conv_1_out_load_1' <Predicate = (!icmp_ln23_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_9 : Operation 190 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_7) nounwind" [pool/pooling.cpp:33]   --->   Operation 190 'specregionend' 'empty_14' <Predicate = (icmp_ln23_1)> <Delay = 0.00>
ST_9 : Operation 191 [1/1] (0.00ns)   --->   "br label %6" [pool/pooling.cpp:20]   --->   Operation 191 'br' <Predicate = (icmp_ln23_1)> <Delay = 0.00>

State 10 <SV = 6> <Delay = 11.7>
ST_10 : Operation 192 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 192 'specloopname' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 193 [1/2] (3.25ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 193 'load' 'conv_1_out_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_10 : Operation 194 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %conv_1_out_load_1 to i32" [pool/pooling.cpp:28]   --->   Operation 194 'bitcast' 'bitcast_ln28_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 195 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_2 to i23" [pool/pooling.cpp:28]   --->   Operation 196 'trunc' 'trunc_ln28_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 197 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %max_1_1 to i32" [pool/pooling.cpp:28]   --->   Operation 197 'bitcast' 'bitcast_ln28_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 198 [1/1] (0.00ns)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 198 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_3 to i23" [pool/pooling.cpp:28]   --->   Operation 199 'trunc' 'trunc_ln28_3' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 200 [1/1] (1.55ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_14, -1" [pool/pooling.cpp:28]   --->   Operation 200 'icmp' 'icmp_ln28_4' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 201 [1/1] (2.44ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [pool/pooling.cpp:28]   --->   Operation 201 'icmp' 'icmp_ln28_5' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pool/pooling.cpp:28]   --->   Operation 202 'or' 'or_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 203 [1/1] (1.55ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_15, -1" [pool/pooling.cpp:28]   --->   Operation 203 'icmp' 'icmp_ln28_6' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 204 [1/1] (2.44ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [pool/pooling.cpp:28]   --->   Operation 204 'icmp' 'icmp_ln28_7' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pool/pooling.cpp:28]   --->   Operation 205 'or' 'or_ln28_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%and_ln28_2 = and i1 %or_ln28_2, %or_ln28_3" [pool/pooling.cpp:28]   --->   Operation 206 'and' 'and_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 207 [1/1] (6.78ns)   --->   "%tmp_16 = fcmp ogt float %conv_1_out_load_1, %max_1_1" [pool/pooling.cpp:28]   --->   Operation 207 'fcmp' 'tmp_16' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 208 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_3 = and i1 %and_ln28_2, %tmp_16" [pool/pooling.cpp:28]   --->   Operation 208 'and' 'and_ln28_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 209 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_3, float %conv_1_out_load_1, float %max_1_1" [pool/pooling.cpp:28]   --->   Operation 209 'select' 'select_ln28_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 210 [1/1] (0.00ns)   --->   "br label %7" [pool/pooling.cpp:23]   --->   Operation 210 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 4> <Delay = 1.76>
ST_11 : Operation 211 [1/1] (0.00ns)   --->   "%c_0_2 = phi i4 [ 0, %Row_Loop1 ], [ %add_ln16_2, %Col_Loop_end2 ]" [pool/pooling.cpp:16]   --->   Operation 211 'phi' 'c_0_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 212 [1/1] (1.30ns)   --->   "%icmp_ln16_2 = icmp eq i4 %c_0_2, -3" [pool/pooling.cpp:16]   --->   Operation 212 'icmp' 'icmp_ln16_2' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 213 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 213 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 214 [1/1] (1.73ns)   --->   "%add_ln16_2 = add i4 %c_0_2, 1" [pool/pooling.cpp:16]   --->   Operation 214 'add' 'add_ln16_2' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 215 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_2, label %Row_Loop2, label %Col_Loop_begin2" [pool/pooling.cpp:16]   --->   Operation 215 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 216 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 216 'specloopname' <Predicate = (!icmp_ln16_2)> <Delay = 0.00>
ST_11 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 217 'specregionbegin' 'tmp_6' <Predicate = (!icmp_ln16_2)> <Delay = 0.00>
ST_11 : Operation 218 [1/1] (0.00ns)   --->   "%shl_ln26_2 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_2, i1 false)" [pool/pooling.cpp:26]   --->   Operation 218 'bitconcatenate' 'shl_ln26_2' <Predicate = (!icmp_ln16_2)> <Delay = 0.00>
ST_11 : Operation 219 [1/1] (1.76ns)   --->   "br label %9" [pool/pooling.cpp:20]   --->   Operation 219 'br' <Predicate = (!icmp_ln16_2)> <Delay = 1.76>
ST_11 : Operation 220 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_2) nounwind" [pool/pooling.cpp:37]   --->   Operation 220 'specregionend' 'empty_16' <Predicate = (icmp_ln16_2)> <Delay = 0.00>
ST_11 : Operation 221 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 221 'specregionbegin' 'tmp_5' <Predicate = (icmp_ln16_2)> <Delay = 0.00>
ST_11 : Operation 222 [1/1] (1.76ns)   --->   "br label %11" [pool/pooling.cpp:16]   --->   Operation 222 'br' <Predicate = (icmp_ln16_2)> <Delay = 1.76>

State 12 <SV = 5> <Delay = 7.01>
ST_12 : Operation 223 [1/1] (0.00ns)   --->   "%max_0_2 = phi float [ 0x3810000000000000, %Col_Loop_begin2 ], [ %max_1_2, %Pool_Row_Loop_end2 ]" [pool/pooling.cpp:28]   --->   Operation 223 'phi' 'max_0_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 224 [1/1] (0.00ns)   --->   "%mpr_0_2 = phi i2 [ 0, %Col_Loop_begin2 ], [ %add_ln20_2, %Pool_Row_Loop_end2 ]" [pool/pooling.cpp:20]   --->   Operation 224 'phi' 'mpr_0_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 225 [1/1] (0.95ns)   --->   "%icmp_ln20_2 = icmp eq i2 %mpr_0_2, -2" [pool/pooling.cpp:20]   --->   Operation 225 'icmp' 'icmp_ln20_2' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 226 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 226 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 227 [1/1] (1.56ns)   --->   "%add_ln20_2 = add i2 %mpr_0_2, 1" [pool/pooling.cpp:20]   --->   Operation 227 'add' 'add_ln20_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 228 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_2, label %Col_Loop_end2, label %Pool_Row_Loop_begin2" [pool/pooling.cpp:20]   --->   Operation 228 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 229 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 229 'specloopname' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 230 [1/1] (0.00ns)   --->   "%tmp_13 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 230 'specregionbegin' 'tmp_13' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 231 [1/1] (0.00ns)   --->   "%or_ln = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 true, i2 %mpr_0_2)" [pool/pooling.cpp:25]   --->   Operation 231 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 232 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i3 %or_ln to i8" [pool/pooling.cpp:28]   --->   Operation 232 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 233 [1/1] (3.78ns)   --->   "%mul_ln28_1 = mul i8 %zext_ln28_4, 26" [pool/pooling.cpp:28]   --->   Operation 233 'mul' 'mul_ln28_1' <Predicate = (!icmp_ln20_2)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 234 [1/1] (1.76ns)   --->   "br label %10" [pool/pooling.cpp:23]   --->   Operation 234 'br' <Predicate = (!icmp_ln20_2)> <Delay = 1.76>
ST_12 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_80 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_2, i5 0)" [pool/pooling.cpp:35]   --->   Operation 235 'bitconcatenate' 'tmp_80' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 236 [1/1] (0.00ns)   --->   "%zext_ln35_4 = zext i9 %tmp_80 to i11" [pool/pooling.cpp:35]   --->   Operation 236 'zext' 'zext_ln35_4' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 237 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_3 = add i11 %zext_ln35_4, 832" [pool/pooling.cpp:35]   --->   Operation 237 'add' 'add_ln35_3' <Predicate = (icmp_ln20_2)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 238 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%add_ln35_4 = add i11 %zext_ln14_1, %add_ln35_3" [pool/pooling.cpp:35]   --->   Operation 238 'add' 'add_ln35_4' <Predicate = (icmp_ln20_2)> <Delay = 3.75> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln35_5 = zext i11 %add_ln35_4 to i64" [pool/pooling.cpp:35]   --->   Operation 239 'zext' 'zext_ln35_5' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 240 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_2 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_5" [pool/pooling.cpp:35]   --->   Operation 240 'getelementptr' 'max_pool_1_out_addr_2' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 241 [1/1] (3.25ns)   --->   "store float %max_0_2, float* %max_pool_1_out_addr_2, align 4" [pool/pooling.cpp:35]   --->   Operation 241 'store' <Predicate = (icmp_ln20_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_12 : Operation 242 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_6) nounwind" [pool/pooling.cpp:36]   --->   Operation 242 'specregionend' 'empty_18' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_12 : Operation 243 [1/1] (0.00ns)   --->   "br label %8" [pool/pooling.cpp:16]   --->   Operation 243 'br' <Predicate = (icmp_ln20_2)> <Delay = 0.00>

State 13 <SV = 6> <Delay = 8.62>
ST_13 : Operation 244 [1/1] (0.00ns)   --->   "%max_1_2 = phi float [ %max_0_2, %Pool_Row_Loop_begin2 ], [ %select_ln28_2, %._crit_edge.2 ]" [pool/pooling.cpp:28]   --->   Operation 244 'phi' 'max_1_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 245 [1/1] (0.00ns)   --->   "%mpc_0_2 = phi i2 [ 0, %Pool_Row_Loop_begin2 ], [ %add_ln23_2, %._crit_edge.2 ]" [pool/pooling.cpp:23]   --->   Operation 245 'phi' 'mpc_0_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 246 [1/1] (0.00ns)   --->   "%zext_ln23_2 = zext i2 %mpc_0_2 to i5" [pool/pooling.cpp:23]   --->   Operation 246 'zext' 'zext_ln23_2' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 247 [1/1] (0.95ns)   --->   "%icmp_ln23_2 = icmp eq i2 %mpc_0_2, -2" [pool/pooling.cpp:23]   --->   Operation 247 'icmp' 'icmp_ln23_2' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 248 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 248 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 249 [1/1] (1.56ns)   --->   "%add_ln23_2 = add i2 %mpc_0_2, 1" [pool/pooling.cpp:23]   --->   Operation 249 'add' 'add_ln23_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 250 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_2, label %Pool_Row_Loop_end2, label %._crit_edge.2" [pool/pooling.cpp:23]   --->   Operation 250 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 251 [1/1] (1.78ns)   --->   "%add_ln26_2 = add i5 %shl_ln26_2, %zext_ln23_2" [pool/pooling.cpp:26]   --->   Operation 251 'add' 'add_ln26_2' <Predicate = (!icmp_ln23_2)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 252 [1/1] (0.00ns)   --->   "%zext_ln28_9 = zext i5 %add_ln26_2 to i8" [pool/pooling.cpp:28]   --->   Operation 252 'zext' 'zext_ln28_9' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 253 [1/1] (1.91ns)   --->   "%add_ln28_4 = add i8 %zext_ln28_9, %mul_ln28_1" [pool/pooling.cpp:28]   --->   Operation 253 'add' 'add_ln28_4' <Predicate = (!icmp_ln23_2)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 254 [1/1] (0.00ns)   --->   "%tmp_83 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln28_4, i5 0)" [pool/pooling.cpp:28]   --->   Operation 254 'bitconcatenate' 'tmp_83' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 255 [1/1] (0.00ns)   --->   "%zext_ln28_10 = zext i13 %tmp_83 to i16" [pool/pooling.cpp:28]   --->   Operation 255 'zext' 'zext_ln28_10' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 256 [1/1] (1.67ns)   --->   "%add_ln28_5 = add i16 %zext_ln14_3, %zext_ln28_10" [pool/pooling.cpp:28]   --->   Operation 256 'add' 'add_ln28_5' <Predicate = (!icmp_ln23_2)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 257 [1/1] (0.00ns)   --->   "%zext_ln28_11 = zext i16 %add_ln28_5 to i64" [pool/pooling.cpp:28]   --->   Operation 257 'zext' 'zext_ln28_11' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 258 [1/1] (0.00ns)   --->   "%conv_1_out_addr_2 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_11" [pool/pooling.cpp:28]   --->   Operation 258 'getelementptr' 'conv_1_out_addr_2' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 259 [2/2] (3.25ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 259 'load' 'conv_1_out_load_2' <Predicate = (!icmp_ln23_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_13 : Operation 260 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_13) nounwind" [pool/pooling.cpp:33]   --->   Operation 260 'specregionend' 'empty_20' <Predicate = (icmp_ln23_2)> <Delay = 0.00>
ST_13 : Operation 261 [1/1] (0.00ns)   --->   "br label %9" [pool/pooling.cpp:20]   --->   Operation 261 'br' <Predicate = (icmp_ln23_2)> <Delay = 0.00>

State 14 <SV = 7> <Delay = 11.7>
ST_14 : Operation 262 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 262 'specloopname' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 263 [1/2] (3.25ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 263 'load' 'conv_1_out_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_14 : Operation 264 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %conv_1_out_load_2 to i32" [pool/pooling.cpp:28]   --->   Operation 264 'bitcast' 'bitcast_ln28_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 265 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 265 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 266 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_4 to i23" [pool/pooling.cpp:28]   --->   Operation 266 'trunc' 'trunc_ln28_4' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 267 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %max_1_2 to i32" [pool/pooling.cpp:28]   --->   Operation 267 'bitcast' 'bitcast_ln28_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 268 [1/1] (0.00ns)   --->   "%tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 268 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 269 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_5 to i23" [pool/pooling.cpp:28]   --->   Operation 269 'trunc' 'trunc_ln28_5' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 270 [1/1] (1.55ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_20, -1" [pool/pooling.cpp:28]   --->   Operation 270 'icmp' 'icmp_ln28_8' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 271 [1/1] (2.44ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [pool/pooling.cpp:28]   --->   Operation 271 'icmp' 'icmp_ln28_9' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 272 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pool/pooling.cpp:28]   --->   Operation 272 'or' 'or_ln28_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 273 [1/1] (1.55ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_21, -1" [pool/pooling.cpp:28]   --->   Operation 273 'icmp' 'icmp_ln28_10' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 274 [1/1] (2.44ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [pool/pooling.cpp:28]   --->   Operation 274 'icmp' 'icmp_ln28_11' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pool/pooling.cpp:28]   --->   Operation 275 'or' 'or_ln28_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%and_ln28_4 = and i1 %or_ln28_4, %or_ln28_5" [pool/pooling.cpp:28]   --->   Operation 276 'and' 'and_ln28_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 277 [1/1] (6.78ns)   --->   "%tmp_22 = fcmp ogt float %conv_1_out_load_2, %max_1_2" [pool/pooling.cpp:28]   --->   Operation 277 'fcmp' 'tmp_22' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 278 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_5 = and i1 %and_ln28_4, %tmp_22" [pool/pooling.cpp:28]   --->   Operation 278 'and' 'and_ln28_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 279 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_5, float %conv_1_out_load_2, float %max_1_2" [pool/pooling.cpp:28]   --->   Operation 279 'select' 'select_ln28_2' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 280 [1/1] (0.00ns)   --->   "br label %10" [pool/pooling.cpp:23]   --->   Operation 280 'br' <Predicate = true> <Delay = 0.00>

State 15 <SV = 5> <Delay = 1.76>
ST_15 : Operation 281 [1/1] (0.00ns)   --->   "%c_0_3 = phi i4 [ 0, %Row_Loop2 ], [ %add_ln16_3, %Col_Loop_end3 ]" [pool/pooling.cpp:16]   --->   Operation 281 'phi' 'c_0_3' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 282 [1/1] (1.30ns)   --->   "%icmp_ln16_3 = icmp eq i4 %c_0_3, -3" [pool/pooling.cpp:16]   --->   Operation 282 'icmp' 'icmp_ln16_3' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 283 [1/1] (0.00ns)   --->   "%empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 283 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 284 [1/1] (1.73ns)   --->   "%add_ln16_3 = add i4 %c_0_3, 1" [pool/pooling.cpp:16]   --->   Operation 284 'add' 'add_ln16_3' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 285 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_3, label %Row_Loop3, label %Col_Loop_begin3" [pool/pooling.cpp:16]   --->   Operation 285 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 286 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 286 'specloopname' <Predicate = (!icmp_ln16_3)> <Delay = 0.00>
ST_15 : Operation 287 [1/1] (0.00ns)   --->   "%tmp_12 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 287 'specregionbegin' 'tmp_12' <Predicate = (!icmp_ln16_3)> <Delay = 0.00>
ST_15 : Operation 288 [1/1] (0.00ns)   --->   "%shl_ln26_3 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_3, i1 false)" [pool/pooling.cpp:26]   --->   Operation 288 'bitconcatenate' 'shl_ln26_3' <Predicate = (!icmp_ln16_3)> <Delay = 0.00>
ST_15 : Operation 289 [1/1] (1.76ns)   --->   "br label %12" [pool/pooling.cpp:20]   --->   Operation 289 'br' <Predicate = (!icmp_ln16_3)> <Delay = 1.76>
ST_15 : Operation 290 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_5) nounwind" [pool/pooling.cpp:37]   --->   Operation 290 'specregionend' 'empty_22' <Predicate = (icmp_ln16_3)> <Delay = 0.00>
ST_15 : Operation 291 [1/1] (0.00ns)   --->   "%tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 291 'specregionbegin' 'tmp_11' <Predicate = (icmp_ln16_3)> <Delay = 0.00>
ST_15 : Operation 292 [1/1] (1.76ns)   --->   "br label %14" [pool/pooling.cpp:16]   --->   Operation 292 'br' <Predicate = (icmp_ln16_3)> <Delay = 1.76>

State 16 <SV = 6> <Delay = 7.01>
ST_16 : Operation 293 [1/1] (0.00ns)   --->   "%max_0_3 = phi float [ 0x3810000000000000, %Col_Loop_begin3 ], [ %max_1_3, %Pool_Row_Loop_end3 ]" [pool/pooling.cpp:28]   --->   Operation 293 'phi' 'max_0_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 294 [1/1] (0.00ns)   --->   "%mpr_0_3 = phi i2 [ 0, %Col_Loop_begin3 ], [ %add_ln20_3, %Pool_Row_Loop_end3 ]" [pool/pooling.cpp:20]   --->   Operation 294 'phi' 'mpr_0_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 295 [1/1] (0.95ns)   --->   "%icmp_ln20_3 = icmp eq i2 %mpr_0_3, -2" [pool/pooling.cpp:20]   --->   Operation 295 'icmp' 'icmp_ln20_3' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 296 [1/1] (0.00ns)   --->   "%empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 296 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 297 [1/1] (1.56ns)   --->   "%add_ln20_3 = add i2 %mpr_0_3, 1" [pool/pooling.cpp:20]   --->   Operation 297 'add' 'add_ln20_3' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 298 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_3, label %Col_Loop_end3, label %Pool_Row_Loop_begin3" [pool/pooling.cpp:20]   --->   Operation 298 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 299 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 299 'specloopname' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 300 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 300 'specregionbegin' 'tmp_19' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 301 [1/1] (0.97ns)   --->   "%xor_ln25_1 = xor i2 %mpr_0_3, -2" [pool/pooling.cpp:25]   --->   Operation 301 'xor' 'xor_ln25_1' <Predicate = (!icmp_ln20_3)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 302 [1/1] (0.00ns)   --->   "%sext_ln25 = sext i2 %xor_ln25_1 to i3" [pool/pooling.cpp:25]   --->   Operation 302 'sext' 'sext_ln25' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 303 [1/1] (0.00ns)   --->   "%zext_ln28_8 = zext i3 %sext_ln25 to i8" [pool/pooling.cpp:28]   --->   Operation 303 'zext' 'zext_ln28_8' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 304 [1/1] (3.78ns)   --->   "%mul_ln28_2 = mul i8 %zext_ln28_8, 26" [pool/pooling.cpp:28]   --->   Operation 304 'mul' 'mul_ln28_2' <Predicate = (!icmp_ln20_3)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 305 [1/1] (1.76ns)   --->   "br label %13" [pool/pooling.cpp:23]   --->   Operation 305 'br' <Predicate = (!icmp_ln20_3)> <Delay = 1.76>
ST_16 : Operation 306 [1/1] (0.00ns)   --->   "%tmp_82 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_3, i5 0)" [pool/pooling.cpp:35]   --->   Operation 306 'bitconcatenate' 'tmp_82' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 307 [1/1] (0.00ns)   --->   "%zext_ln35_6 = zext i9 %tmp_82 to i11" [pool/pooling.cpp:35]   --->   Operation 307 'zext' 'zext_ln35_6' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 308 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_5 = add i11 %zext_ln35_6, -800" [pool/pooling.cpp:35]   --->   Operation 308 'add' 'add_ln35_5' <Predicate = (icmp_ln20_3)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 309 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%add_ln35_6 = add i11 %zext_ln14_1, %add_ln35_5" [pool/pooling.cpp:35]   --->   Operation 309 'add' 'add_ln35_6' <Predicate = (icmp_ln20_3)> <Delay = 3.75> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln35_7 = zext i11 %add_ln35_6 to i64" [pool/pooling.cpp:35]   --->   Operation 310 'zext' 'zext_ln35_7' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 311 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_3 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_7" [pool/pooling.cpp:35]   --->   Operation 311 'getelementptr' 'max_pool_1_out_addr_3' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 312 [1/1] (3.25ns)   --->   "store float %max_0_3, float* %max_pool_1_out_addr_3, align 4" [pool/pooling.cpp:35]   --->   Operation 312 'store' <Predicate = (icmp_ln20_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_16 : Operation 313 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_12) nounwind" [pool/pooling.cpp:36]   --->   Operation 313 'specregionend' 'empty_24' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_16 : Operation 314 [1/1] (0.00ns)   --->   "br label %11" [pool/pooling.cpp:16]   --->   Operation 314 'br' <Predicate = (icmp_ln20_3)> <Delay = 0.00>

State 17 <SV = 7> <Delay = 8.62>
ST_17 : Operation 315 [1/1] (0.00ns)   --->   "%max_1_3 = phi float [ %max_0_3, %Pool_Row_Loop_begin3 ], [ %select_ln28_3, %._crit_edge.3 ]" [pool/pooling.cpp:28]   --->   Operation 315 'phi' 'max_1_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 316 [1/1] (0.00ns)   --->   "%mpc_0_3 = phi i2 [ 0, %Pool_Row_Loop_begin3 ], [ %add_ln23_3, %._crit_edge.3 ]" [pool/pooling.cpp:23]   --->   Operation 316 'phi' 'mpc_0_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 317 [1/1] (0.00ns)   --->   "%zext_ln23_3 = zext i2 %mpc_0_3 to i5" [pool/pooling.cpp:23]   --->   Operation 317 'zext' 'zext_ln23_3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 318 [1/1] (0.95ns)   --->   "%icmp_ln23_3 = icmp eq i2 %mpc_0_3, -2" [pool/pooling.cpp:23]   --->   Operation 318 'icmp' 'icmp_ln23_3' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 319 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 319 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 320 [1/1] (1.56ns)   --->   "%add_ln23_3 = add i2 %mpc_0_3, 1" [pool/pooling.cpp:23]   --->   Operation 320 'add' 'add_ln23_3' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 321 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_3, label %Pool_Row_Loop_end3, label %._crit_edge.3" [pool/pooling.cpp:23]   --->   Operation 321 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 322 [1/1] (1.78ns)   --->   "%add_ln26_3 = add i5 %shl_ln26_3, %zext_ln23_3" [pool/pooling.cpp:26]   --->   Operation 322 'add' 'add_ln26_3' <Predicate = (!icmp_ln23_3)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 323 [1/1] (0.00ns)   --->   "%zext_ln28_13 = zext i5 %add_ln26_3 to i8" [pool/pooling.cpp:28]   --->   Operation 323 'zext' 'zext_ln28_13' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 324 [1/1] (1.91ns)   --->   "%add_ln28_6 = add i8 %zext_ln28_13, %mul_ln28_2" [pool/pooling.cpp:28]   --->   Operation 324 'add' 'add_ln28_6' <Predicate = (!icmp_ln23_3)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 325 [1/1] (0.00ns)   --->   "%tmp_85 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln28_6, i5 0)" [pool/pooling.cpp:28]   --->   Operation 325 'bitconcatenate' 'tmp_85' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 326 [1/1] (0.00ns)   --->   "%zext_ln28_14 = zext i13 %tmp_85 to i16" [pool/pooling.cpp:28]   --->   Operation 326 'zext' 'zext_ln28_14' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 327 [1/1] (1.67ns)   --->   "%add_ln28_7 = add i16 %zext_ln14_3, %zext_ln28_14" [pool/pooling.cpp:28]   --->   Operation 327 'add' 'add_ln28_7' <Predicate = (!icmp_ln23_3)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 328 [1/1] (0.00ns)   --->   "%zext_ln28_15 = zext i16 %add_ln28_7 to i64" [pool/pooling.cpp:28]   --->   Operation 328 'zext' 'zext_ln28_15' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 329 [1/1] (0.00ns)   --->   "%conv_1_out_addr_3 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_15" [pool/pooling.cpp:28]   --->   Operation 329 'getelementptr' 'conv_1_out_addr_3' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 330 [2/2] (3.25ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 330 'load' 'conv_1_out_load_3' <Predicate = (!icmp_ln23_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_17 : Operation 331 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_19) nounwind" [pool/pooling.cpp:33]   --->   Operation 331 'specregionend' 'empty_26' <Predicate = (icmp_ln23_3)> <Delay = 0.00>
ST_17 : Operation 332 [1/1] (0.00ns)   --->   "br label %12" [pool/pooling.cpp:20]   --->   Operation 332 'br' <Predicate = (icmp_ln23_3)> <Delay = 0.00>

State 18 <SV = 8> <Delay = 11.7>
ST_18 : Operation 333 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 333 'specloopname' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 334 [1/2] (3.25ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 334 'load' 'conv_1_out_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_18 : Operation 335 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %conv_1_out_load_3 to i32" [pool/pooling.cpp:28]   --->   Operation 335 'bitcast' 'bitcast_ln28_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 336 [1/1] (0.00ns)   --->   "%tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 336 'partselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 337 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_6 to i23" [pool/pooling.cpp:28]   --->   Operation 337 'trunc' 'trunc_ln28_6' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 338 [1/1] (0.00ns)   --->   "%bitcast_ln28_7 = bitcast float %max_1_3 to i32" [pool/pooling.cpp:28]   --->   Operation 338 'bitcast' 'bitcast_ln28_7' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 339 [1/1] (0.00ns)   --->   "%tmp_27 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_7, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 339 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 340 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_7 to i23" [pool/pooling.cpp:28]   --->   Operation 340 'trunc' 'trunc_ln28_7' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 341 [1/1] (1.55ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_26, -1" [pool/pooling.cpp:28]   --->   Operation 341 'icmp' 'icmp_ln28_12' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 342 [1/1] (2.44ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [pool/pooling.cpp:28]   --->   Operation 342 'icmp' 'icmp_ln28_13' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pool/pooling.cpp:28]   --->   Operation 343 'or' 'or_ln28_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 344 [1/1] (1.55ns)   --->   "%icmp_ln28_14 = icmp ne i8 %tmp_27, -1" [pool/pooling.cpp:28]   --->   Operation 344 'icmp' 'icmp_ln28_14' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 345 [1/1] (2.44ns)   --->   "%icmp_ln28_15 = icmp eq i23 %trunc_ln28_7, 0" [pool/pooling.cpp:28]   --->   Operation 345 'icmp' 'icmp_ln28_15' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%or_ln28_7 = or i1 %icmp_ln28_15, %icmp_ln28_14" [pool/pooling.cpp:28]   --->   Operation 346 'or' 'or_ln28_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%and_ln28_6 = and i1 %or_ln28_6, %or_ln28_7" [pool/pooling.cpp:28]   --->   Operation 347 'and' 'and_ln28_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 348 [1/1] (6.78ns)   --->   "%tmp_28 = fcmp ogt float %conv_1_out_load_3, %max_1_3" [pool/pooling.cpp:28]   --->   Operation 348 'fcmp' 'tmp_28' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 349 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_7 = and i1 %and_ln28_6, %tmp_28" [pool/pooling.cpp:28]   --->   Operation 349 'and' 'and_ln28_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 350 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_7, float %conv_1_out_load_3, float %max_1_3" [pool/pooling.cpp:28]   --->   Operation 350 'select' 'select_ln28_3' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 351 [1/1] (0.00ns)   --->   "br label %13" [pool/pooling.cpp:23]   --->   Operation 351 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 6> <Delay = 1.76>
ST_19 : Operation 352 [1/1] (0.00ns)   --->   "%c_0_4 = phi i4 [ 0, %Row_Loop3 ], [ %add_ln16_4, %Col_Loop_end4 ]" [pool/pooling.cpp:16]   --->   Operation 352 'phi' 'c_0_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 353 [1/1] (1.30ns)   --->   "%icmp_ln16_4 = icmp eq i4 %c_0_4, -3" [pool/pooling.cpp:16]   --->   Operation 353 'icmp' 'icmp_ln16_4' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 354 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 354 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 355 [1/1] (1.73ns)   --->   "%add_ln16_4 = add i4 %c_0_4, 1" [pool/pooling.cpp:16]   --->   Operation 355 'add' 'add_ln16_4' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 356 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_4, label %Row_Loop4, label %Col_Loop_begin4" [pool/pooling.cpp:16]   --->   Operation 356 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 357 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 357 'specloopname' <Predicate = (!icmp_ln16_4)> <Delay = 0.00>
ST_19 : Operation 358 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 358 'specregionbegin' 'tmp_18' <Predicate = (!icmp_ln16_4)> <Delay = 0.00>
ST_19 : Operation 359 [1/1] (0.00ns)   --->   "%shl_ln26_4 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_4, i1 false)" [pool/pooling.cpp:26]   --->   Operation 359 'bitconcatenate' 'shl_ln26_4' <Predicate = (!icmp_ln16_4)> <Delay = 0.00>
ST_19 : Operation 360 [1/1] (1.76ns)   --->   "br label %15" [pool/pooling.cpp:20]   --->   Operation 360 'br' <Predicate = (!icmp_ln16_4)> <Delay = 1.76>
ST_19 : Operation 361 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_11) nounwind" [pool/pooling.cpp:37]   --->   Operation 361 'specregionend' 'empty_28' <Predicate = (icmp_ln16_4)> <Delay = 0.00>
ST_19 : Operation 362 [1/1] (0.00ns)   --->   "%tmp_17 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 362 'specregionbegin' 'tmp_17' <Predicate = (icmp_ln16_4)> <Delay = 0.00>
ST_19 : Operation 363 [1/1] (1.76ns)   --->   "br label %17" [pool/pooling.cpp:16]   --->   Operation 363 'br' <Predicate = (icmp_ln16_4)> <Delay = 1.76>

State 20 <SV = 7> <Delay = 7.04>
ST_20 : Operation 364 [1/1] (0.00ns)   --->   "%max_0_4 = phi float [ 0x3810000000000000, %Col_Loop_begin4 ], [ %max_1_4, %Pool_Row_Loop_end4 ]" [pool/pooling.cpp:28]   --->   Operation 364 'phi' 'max_0_4' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 365 [1/1] (0.00ns)   --->   "%mpr_0_4 = phi i2 [ 0, %Col_Loop_begin4 ], [ %add_ln20_4, %Pool_Row_Loop_end4 ]" [pool/pooling.cpp:20]   --->   Operation 365 'phi' 'mpr_0_4' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 366 [1/1] (0.95ns)   --->   "%icmp_ln20_4 = icmp eq i2 %mpr_0_4, -2" [pool/pooling.cpp:20]   --->   Operation 366 'icmp' 'icmp_ln20_4' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 367 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 367 'speclooptripcount' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 368 [1/1] (1.56ns)   --->   "%add_ln20_4 = add i2 %mpr_0_4, 1" [pool/pooling.cpp:20]   --->   Operation 368 'add' 'add_ln20_4' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 369 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_4, label %Col_Loop_end4, label %Pool_Row_Loop_begin4" [pool/pooling.cpp:20]   --->   Operation 369 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 370 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 370 'specloopname' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 371 'specregionbegin' 'tmp_25' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 372 [1/1] (0.00ns)   --->   "%or_ln25_1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 -2, i2 %mpr_0_4)" [pool/pooling.cpp:25]   --->   Operation 372 'bitconcatenate' 'or_ln25_1' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 373 [1/1] (0.00ns)   --->   "%zext_ln28_12 = zext i4 %or_ln25_1 to i9" [pool/pooling.cpp:28]   --->   Operation 373 'zext' 'zext_ln28_12' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 374 [1/1] (3.78ns)   --->   "%mul_ln28_3 = mul i9 %zext_ln28_12, 26" [pool/pooling.cpp:28]   --->   Operation 374 'mul' 'mul_ln28_3' <Predicate = (!icmp_ln20_4)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 375 [1/1] (1.76ns)   --->   "br label %16" [pool/pooling.cpp:23]   --->   Operation 375 'br' <Predicate = (!icmp_ln20_4)> <Delay = 1.76>
ST_20 : Operation 376 [1/1] (0.00ns)   --->   "%tmp_84 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_4, i5 0)" [pool/pooling.cpp:35]   --->   Operation 376 'bitconcatenate' 'tmp_84' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 377 [1/1] (0.00ns)   --->   "%zext_ln35_8 = zext i9 %tmp_84 to i12" [pool/pooling.cpp:35]   --->   Operation 377 'zext' 'zext_ln35_8' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 378 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_7 = add i12 %zext_ln35_8, 1664" [pool/pooling.cpp:35]   --->   Operation 378 'add' 'add_ln35_7' <Predicate = (icmp_ln20_4)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 379 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln35_8 = add i12 %zext_ln14_2, %add_ln35_7" [pool/pooling.cpp:35]   --->   Operation 379 'add' 'add_ln35_8' <Predicate = (icmp_ln20_4)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_20 : Operation 380 [1/1] (0.00ns)   --->   "%zext_ln35_9 = zext i12 %add_ln35_8 to i64" [pool/pooling.cpp:35]   --->   Operation 380 'zext' 'zext_ln35_9' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 381 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_4 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_9" [pool/pooling.cpp:35]   --->   Operation 381 'getelementptr' 'max_pool_1_out_addr_4' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 382 [1/1] (3.25ns)   --->   "store float %max_0_4, float* %max_pool_1_out_addr_4, align 4" [pool/pooling.cpp:35]   --->   Operation 382 'store' <Predicate = (icmp_ln20_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_20 : Operation 383 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_18) nounwind" [pool/pooling.cpp:36]   --->   Operation 383 'specregionend' 'empty_30' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_20 : Operation 384 [1/1] (0.00ns)   --->   "br label %14" [pool/pooling.cpp:16]   --->   Operation 384 'br' <Predicate = (icmp_ln20_4)> <Delay = 0.00>

State 21 <SV = 8> <Delay = 8.66>
ST_21 : Operation 385 [1/1] (0.00ns)   --->   "%max_1_4 = phi float [ %max_0_4, %Pool_Row_Loop_begin4 ], [ %select_ln28_4, %._crit_edge.4 ]" [pool/pooling.cpp:28]   --->   Operation 385 'phi' 'max_1_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 386 [1/1] (0.00ns)   --->   "%mpc_0_4 = phi i2 [ 0, %Pool_Row_Loop_begin4 ], [ %add_ln23_4, %._crit_edge.4 ]" [pool/pooling.cpp:23]   --->   Operation 386 'phi' 'mpc_0_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 387 [1/1] (0.00ns)   --->   "%zext_ln23_4 = zext i2 %mpc_0_4 to i5" [pool/pooling.cpp:23]   --->   Operation 387 'zext' 'zext_ln23_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 388 [1/1] (0.95ns)   --->   "%icmp_ln23_4 = icmp eq i2 %mpc_0_4, -2" [pool/pooling.cpp:23]   --->   Operation 388 'icmp' 'icmp_ln23_4' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 389 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 389 'speclooptripcount' 'empty_33' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 390 [1/1] (1.56ns)   --->   "%add_ln23_4 = add i2 %mpc_0_4, 1" [pool/pooling.cpp:23]   --->   Operation 390 'add' 'add_ln23_4' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 391 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_4, label %Pool_Row_Loop_end4, label %._crit_edge.4" [pool/pooling.cpp:23]   --->   Operation 391 'br' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 392 [1/1] (1.78ns)   --->   "%add_ln26_4 = add i5 %shl_ln26_4, %zext_ln23_4" [pool/pooling.cpp:26]   --->   Operation 392 'add' 'add_ln26_4' <Predicate = (!icmp_ln23_4)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 393 [1/1] (0.00ns)   --->   "%zext_ln28_17 = zext i5 %add_ln26_4 to i9" [pool/pooling.cpp:28]   --->   Operation 393 'zext' 'zext_ln28_17' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 394 [1/1] (1.82ns)   --->   "%add_ln28_8 = add i9 %zext_ln28_17, %mul_ln28_3" [pool/pooling.cpp:28]   --->   Operation 394 'add' 'add_ln28_8' <Predicate = (!icmp_ln23_4)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 395 [1/1] (0.00ns)   --->   "%tmp_87 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %add_ln28_8, i5 0)" [pool/pooling.cpp:28]   --->   Operation 395 'bitconcatenate' 'tmp_87' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 396 [1/1] (0.00ns)   --->   "%zext_ln28_18 = zext i14 %tmp_87 to i16" [pool/pooling.cpp:28]   --->   Operation 396 'zext' 'zext_ln28_18' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 397 [1/1] (1.81ns)   --->   "%add_ln28_9 = add i16 %zext_ln14_3, %zext_ln28_18" [pool/pooling.cpp:28]   --->   Operation 397 'add' 'add_ln28_9' <Predicate = (!icmp_ln23_4)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 398 [1/1] (0.00ns)   --->   "%zext_ln28_19 = zext i16 %add_ln28_9 to i64" [pool/pooling.cpp:28]   --->   Operation 398 'zext' 'zext_ln28_19' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 399 [1/1] (0.00ns)   --->   "%conv_1_out_addr_4 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_19" [pool/pooling.cpp:28]   --->   Operation 399 'getelementptr' 'conv_1_out_addr_4' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 400 [2/2] (3.25ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pool/pooling.cpp:28]   --->   Operation 400 'load' 'conv_1_out_load_4' <Predicate = (!icmp_ln23_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_21 : Operation 401 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_25) nounwind" [pool/pooling.cpp:33]   --->   Operation 401 'specregionend' 'empty_32' <Predicate = (icmp_ln23_4)> <Delay = 0.00>
ST_21 : Operation 402 [1/1] (0.00ns)   --->   "br label %15" [pool/pooling.cpp:20]   --->   Operation 402 'br' <Predicate = (icmp_ln23_4)> <Delay = 0.00>

State 22 <SV = 9> <Delay = 11.7>
ST_22 : Operation 403 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 403 'specloopname' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 404 [1/2] (3.25ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pool/pooling.cpp:28]   --->   Operation 404 'load' 'conv_1_out_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_22 : Operation 405 [1/1] (0.00ns)   --->   "%bitcast_ln28_8 = bitcast float %conv_1_out_load_4 to i32" [pool/pooling.cpp:28]   --->   Operation 405 'bitcast' 'bitcast_ln28_8' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 406 [1/1] (0.00ns)   --->   "%tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_8, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 406 'partselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_8 to i23" [pool/pooling.cpp:28]   --->   Operation 407 'trunc' 'trunc_ln28_8' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 408 [1/1] (0.00ns)   --->   "%bitcast_ln28_9 = bitcast float %max_1_4 to i32" [pool/pooling.cpp:28]   --->   Operation 408 'bitcast' 'bitcast_ln28_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 409 [1/1] (0.00ns)   --->   "%tmp_51 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_9, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 409 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 410 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_9 to i23" [pool/pooling.cpp:28]   --->   Operation 410 'trunc' 'trunc_ln28_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 411 [1/1] (1.55ns)   --->   "%icmp_ln28_16 = icmp ne i8 %tmp_50, -1" [pool/pooling.cpp:28]   --->   Operation 411 'icmp' 'icmp_ln28_16' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 412 [1/1] (2.44ns)   --->   "%icmp_ln28_17 = icmp eq i23 %trunc_ln28_8, 0" [pool/pooling.cpp:28]   --->   Operation 412 'icmp' 'icmp_ln28_17' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_8 = or i1 %icmp_ln28_17, %icmp_ln28_16" [pool/pooling.cpp:28]   --->   Operation 413 'or' 'or_ln28_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 414 [1/1] (1.55ns)   --->   "%icmp_ln28_18 = icmp ne i8 %tmp_51, -1" [pool/pooling.cpp:28]   --->   Operation 414 'icmp' 'icmp_ln28_18' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 415 [1/1] (2.44ns)   --->   "%icmp_ln28_19 = icmp eq i23 %trunc_ln28_9, 0" [pool/pooling.cpp:28]   --->   Operation 415 'icmp' 'icmp_ln28_19' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_9 = or i1 %icmp_ln28_19, %icmp_ln28_18" [pool/pooling.cpp:28]   --->   Operation 416 'or' 'or_ln28_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 417 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%and_ln28_8 = and i1 %or_ln28_8, %or_ln28_9" [pool/pooling.cpp:28]   --->   Operation 417 'and' 'and_ln28_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 418 [1/1] (6.78ns)   --->   "%tmp_52 = fcmp ogt float %conv_1_out_load_4, %max_1_4" [pool/pooling.cpp:28]   --->   Operation 418 'fcmp' 'tmp_52' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 419 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_9 = and i1 %and_ln28_8, %tmp_52" [pool/pooling.cpp:28]   --->   Operation 419 'and' 'and_ln28_9' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 420 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_4 = select i1 %and_ln28_9, float %conv_1_out_load_4, float %max_1_4" [pool/pooling.cpp:28]   --->   Operation 420 'select' 'select_ln28_4' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 421 [1/1] (0.00ns)   --->   "br label %16" [pool/pooling.cpp:23]   --->   Operation 421 'br' <Predicate = true> <Delay = 0.00>

State 23 <SV = 7> <Delay = 1.76>
ST_23 : Operation 422 [1/1] (0.00ns)   --->   "%c_0_5 = phi i4 [ 0, %Row_Loop4 ], [ %add_ln16_5, %Col_Loop_end5 ]" [pool/pooling.cpp:16]   --->   Operation 422 'phi' 'c_0_5' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 423 [1/1] (1.30ns)   --->   "%icmp_ln16_5 = icmp eq i4 %c_0_5, -3" [pool/pooling.cpp:16]   --->   Operation 423 'icmp' 'icmp_ln16_5' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 424 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 424 'speclooptripcount' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 425 [1/1] (1.73ns)   --->   "%add_ln16_5 = add i4 %c_0_5, 1" [pool/pooling.cpp:16]   --->   Operation 425 'add' 'add_ln16_5' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 426 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_5, label %Row_Loop5, label %Col_Loop_begin5" [pool/pooling.cpp:16]   --->   Operation 426 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 427 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 427 'specloopname' <Predicate = (!icmp_ln16_5)> <Delay = 0.00>
ST_23 : Operation 428 [1/1] (0.00ns)   --->   "%tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 428 'specregionbegin' 'tmp_24' <Predicate = (!icmp_ln16_5)> <Delay = 0.00>
ST_23 : Operation 429 [1/1] (0.00ns)   --->   "%shl_ln26_5 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_5, i1 false)" [pool/pooling.cpp:26]   --->   Operation 429 'bitconcatenate' 'shl_ln26_5' <Predicate = (!icmp_ln16_5)> <Delay = 0.00>
ST_23 : Operation 430 [1/1] (1.76ns)   --->   "br label %18" [pool/pooling.cpp:20]   --->   Operation 430 'br' <Predicate = (!icmp_ln16_5)> <Delay = 1.76>
ST_23 : Operation 431 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_17) nounwind" [pool/pooling.cpp:37]   --->   Operation 431 'specregionend' 'empty_34' <Predicate = (icmp_ln16_5)> <Delay = 0.00>
ST_23 : Operation 432 [1/1] (0.00ns)   --->   "%tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 432 'specregionbegin' 'tmp_23' <Predicate = (icmp_ln16_5)> <Delay = 0.00>
ST_23 : Operation 433 [1/1] (1.76ns)   --->   "br label %20" [pool/pooling.cpp:16]   --->   Operation 433 'br' <Predicate = (icmp_ln16_5)> <Delay = 1.76>

State 24 <SV = 8> <Delay = 7.04>
ST_24 : Operation 434 [1/1] (0.00ns)   --->   "%max_0_5 = phi float [ 0x3810000000000000, %Col_Loop_begin5 ], [ %max_1_5, %Pool_Row_Loop_end5 ]" [pool/pooling.cpp:28]   --->   Operation 434 'phi' 'max_0_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 435 [1/1] (0.00ns)   --->   "%mpr_0_5 = phi i2 [ 0, %Col_Loop_begin5 ], [ %add_ln20_5, %Pool_Row_Loop_end5 ]" [pool/pooling.cpp:20]   --->   Operation 435 'phi' 'mpr_0_5' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 436 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i2 %mpr_0_5 to i4" [pool/pooling.cpp:20]   --->   Operation 436 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 437 [1/1] (0.95ns)   --->   "%icmp_ln20_5 = icmp eq i2 %mpr_0_5, -2" [pool/pooling.cpp:20]   --->   Operation 437 'icmp' 'icmp_ln20_5' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 438 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 438 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 439 [1/1] (1.56ns)   --->   "%add_ln20_5 = add i2 %mpr_0_5, 1" [pool/pooling.cpp:20]   --->   Operation 439 'add' 'add_ln20_5' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 440 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_5, label %Col_Loop_end5, label %Pool_Row_Loop_begin5" [pool/pooling.cpp:20]   --->   Operation 440 'br' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 441 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 441 'specloopname' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 442 [1/1] (0.00ns)   --->   "%tmp_31 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 442 'specregionbegin' 'tmp_31' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 443 [1/1] (1.73ns)   --->   "%add_ln25 = add i4 %zext_ln20, -6" [pool/pooling.cpp:25]   --->   Operation 443 'add' 'add_ln25' <Predicate = (!icmp_ln20_5)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 444 [1/1] (0.00ns)   --->   "%zext_ln28_16 = zext i4 %add_ln25 to i9" [pool/pooling.cpp:28]   --->   Operation 444 'zext' 'zext_ln28_16' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 445 [1/1] (3.78ns)   --->   "%mul_ln28_4 = mul i9 %zext_ln28_16, 26" [pool/pooling.cpp:28]   --->   Operation 445 'mul' 'mul_ln28_4' <Predicate = (!icmp_ln20_5)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 446 [1/1] (1.76ns)   --->   "br label %19" [pool/pooling.cpp:23]   --->   Operation 446 'br' <Predicate = (!icmp_ln20_5)> <Delay = 1.76>
ST_24 : Operation 447 [1/1] (0.00ns)   --->   "%tmp_86 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_5, i5 0)" [pool/pooling.cpp:35]   --->   Operation 447 'bitconcatenate' 'tmp_86' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 448 [1/1] (0.00ns)   --->   "%zext_ln35_10 = zext i9 %tmp_86 to i12" [pool/pooling.cpp:35]   --->   Operation 448 'zext' 'zext_ln35_10' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 449 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_9 = add i12 %zext_ln35_10, -2016" [pool/pooling.cpp:35]   --->   Operation 449 'add' 'add_ln35_9' <Predicate = (icmp_ln20_5)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 450 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln35_10 = add i12 %zext_ln14_2, %add_ln35_9" [pool/pooling.cpp:35]   --->   Operation 450 'add' 'add_ln35_10' <Predicate = (icmp_ln20_5)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 451 [1/1] (0.00ns)   --->   "%zext_ln35_11 = zext i12 %add_ln35_10 to i64" [pool/pooling.cpp:35]   --->   Operation 451 'zext' 'zext_ln35_11' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 452 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_5 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_11" [pool/pooling.cpp:35]   --->   Operation 452 'getelementptr' 'max_pool_1_out_addr_5' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 453 [1/1] (3.25ns)   --->   "store float %max_0_5, float* %max_pool_1_out_addr_5, align 4" [pool/pooling.cpp:35]   --->   Operation 453 'store' <Predicate = (icmp_ln20_5)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_24 : Operation 454 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_24) nounwind" [pool/pooling.cpp:36]   --->   Operation 454 'specregionend' 'empty_36' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_24 : Operation 455 [1/1] (0.00ns)   --->   "br label %17" [pool/pooling.cpp:16]   --->   Operation 455 'br' <Predicate = (icmp_ln20_5)> <Delay = 0.00>

State 25 <SV = 9> <Delay = 8.66>
ST_25 : Operation 456 [1/1] (0.00ns)   --->   "%max_1_5 = phi float [ %max_0_5, %Pool_Row_Loop_begin5 ], [ %select_ln28_5, %._crit_edge.5 ]" [pool/pooling.cpp:28]   --->   Operation 456 'phi' 'max_1_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 457 [1/1] (0.00ns)   --->   "%mpc_0_5 = phi i2 [ 0, %Pool_Row_Loop_begin5 ], [ %add_ln23_5, %._crit_edge.5 ]" [pool/pooling.cpp:23]   --->   Operation 457 'phi' 'mpc_0_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 458 [1/1] (0.00ns)   --->   "%zext_ln23_5 = zext i2 %mpc_0_5 to i5" [pool/pooling.cpp:23]   --->   Operation 458 'zext' 'zext_ln23_5' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 459 [1/1] (0.95ns)   --->   "%icmp_ln23_5 = icmp eq i2 %mpc_0_5, -2" [pool/pooling.cpp:23]   --->   Operation 459 'icmp' 'icmp_ln23_5' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 460 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 460 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 461 [1/1] (1.56ns)   --->   "%add_ln23_5 = add i2 %mpc_0_5, 1" [pool/pooling.cpp:23]   --->   Operation 461 'add' 'add_ln23_5' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 462 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_5, label %Pool_Row_Loop_end5, label %._crit_edge.5" [pool/pooling.cpp:23]   --->   Operation 462 'br' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 463 [1/1] (1.78ns)   --->   "%add_ln26_5 = add i5 %shl_ln26_5, %zext_ln23_5" [pool/pooling.cpp:26]   --->   Operation 463 'add' 'add_ln26_5' <Predicate = (!icmp_ln23_5)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 464 [1/1] (0.00ns)   --->   "%zext_ln28_21 = zext i5 %add_ln26_5 to i9" [pool/pooling.cpp:28]   --->   Operation 464 'zext' 'zext_ln28_21' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 465 [1/1] (1.82ns)   --->   "%add_ln28_10 = add i9 %zext_ln28_21, %mul_ln28_4" [pool/pooling.cpp:28]   --->   Operation 465 'add' 'add_ln28_10' <Predicate = (!icmp_ln23_5)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 466 [1/1] (0.00ns)   --->   "%tmp_89 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %add_ln28_10, i5 0)" [pool/pooling.cpp:28]   --->   Operation 466 'bitconcatenate' 'tmp_89' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 467 [1/1] (0.00ns)   --->   "%zext_ln28_22 = zext i14 %tmp_89 to i16" [pool/pooling.cpp:28]   --->   Operation 467 'zext' 'zext_ln28_22' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 468 [1/1] (1.81ns)   --->   "%add_ln28_11 = add i16 %zext_ln14_3, %zext_ln28_22" [pool/pooling.cpp:28]   --->   Operation 468 'add' 'add_ln28_11' <Predicate = (!icmp_ln23_5)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 469 [1/1] (0.00ns)   --->   "%zext_ln28_23 = zext i16 %add_ln28_11 to i64" [pool/pooling.cpp:28]   --->   Operation 469 'zext' 'zext_ln28_23' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 470 [1/1] (0.00ns)   --->   "%conv_1_out_addr_5 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_23" [pool/pooling.cpp:28]   --->   Operation 470 'getelementptr' 'conv_1_out_addr_5' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 471 [2/2] (3.25ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pool/pooling.cpp:28]   --->   Operation 471 'load' 'conv_1_out_load_5' <Predicate = (!icmp_ln23_5)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_25 : Operation 472 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_31) nounwind" [pool/pooling.cpp:33]   --->   Operation 472 'specregionend' 'empty_38' <Predicate = (icmp_ln23_5)> <Delay = 0.00>
ST_25 : Operation 473 [1/1] (0.00ns)   --->   "br label %18" [pool/pooling.cpp:20]   --->   Operation 473 'br' <Predicate = (icmp_ln23_5)> <Delay = 0.00>

State 26 <SV = 10> <Delay = 11.7>
ST_26 : Operation 474 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 474 'specloopname' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 475 [1/2] (3.25ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pool/pooling.cpp:28]   --->   Operation 475 'load' 'conv_1_out_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_26 : Operation 476 [1/1] (0.00ns)   --->   "%bitcast_ln28_10 = bitcast float %conv_1_out_load_5 to i32" [pool/pooling.cpp:28]   --->   Operation 476 'bitcast' 'bitcast_ln28_10' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 477 [1/1] (0.00ns)   --->   "%tmp_53 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_10, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 477 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 478 [1/1] (0.00ns)   --->   "%trunc_ln28_10 = trunc i32 %bitcast_ln28_10 to i23" [pool/pooling.cpp:28]   --->   Operation 478 'trunc' 'trunc_ln28_10' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 479 [1/1] (0.00ns)   --->   "%bitcast_ln28_11 = bitcast float %max_1_5 to i32" [pool/pooling.cpp:28]   --->   Operation 479 'bitcast' 'bitcast_ln28_11' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 480 [1/1] (0.00ns)   --->   "%tmp_54 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_11, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 480 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 481 [1/1] (0.00ns)   --->   "%trunc_ln28_11 = trunc i32 %bitcast_ln28_11 to i23" [pool/pooling.cpp:28]   --->   Operation 481 'trunc' 'trunc_ln28_11' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 482 [1/1] (1.55ns)   --->   "%icmp_ln28_20 = icmp ne i8 %tmp_53, -1" [pool/pooling.cpp:28]   --->   Operation 482 'icmp' 'icmp_ln28_20' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 483 [1/1] (2.44ns)   --->   "%icmp_ln28_21 = icmp eq i23 %trunc_ln28_10, 0" [pool/pooling.cpp:28]   --->   Operation 483 'icmp' 'icmp_ln28_21' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 484 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_10 = or i1 %icmp_ln28_21, %icmp_ln28_20" [pool/pooling.cpp:28]   --->   Operation 484 'or' 'or_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 485 [1/1] (1.55ns)   --->   "%icmp_ln28_22 = icmp ne i8 %tmp_54, -1" [pool/pooling.cpp:28]   --->   Operation 485 'icmp' 'icmp_ln28_22' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 486 [1/1] (2.44ns)   --->   "%icmp_ln28_23 = icmp eq i23 %trunc_ln28_11, 0" [pool/pooling.cpp:28]   --->   Operation 486 'icmp' 'icmp_ln28_23' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 487 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_11 = or i1 %icmp_ln28_23, %icmp_ln28_22" [pool/pooling.cpp:28]   --->   Operation 487 'or' 'or_ln28_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 488 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%and_ln28_10 = and i1 %or_ln28_10, %or_ln28_11" [pool/pooling.cpp:28]   --->   Operation 488 'and' 'and_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 489 [1/1] (6.78ns)   --->   "%tmp_55 = fcmp ogt float %conv_1_out_load_5, %max_1_5" [pool/pooling.cpp:28]   --->   Operation 489 'fcmp' 'tmp_55' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 490 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_11 = and i1 %and_ln28_10, %tmp_55" [pool/pooling.cpp:28]   --->   Operation 490 'and' 'and_ln28_11' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 491 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_5 = select i1 %and_ln28_11, float %conv_1_out_load_5, float %max_1_5" [pool/pooling.cpp:28]   --->   Operation 491 'select' 'select_ln28_5' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 492 [1/1] (0.00ns)   --->   "br label %19" [pool/pooling.cpp:23]   --->   Operation 492 'br' <Predicate = true> <Delay = 0.00>

State 27 <SV = 8> <Delay = 1.76>
ST_27 : Operation 493 [1/1] (0.00ns)   --->   "%c_0_6 = phi i4 [ 0, %Row_Loop5 ], [ %add_ln16_6, %Col_Loop_end6 ]" [pool/pooling.cpp:16]   --->   Operation 493 'phi' 'c_0_6' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 494 [1/1] (1.30ns)   --->   "%icmp_ln16_6 = icmp eq i4 %c_0_6, -3" [pool/pooling.cpp:16]   --->   Operation 494 'icmp' 'icmp_ln16_6' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 495 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 495 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 496 [1/1] (1.73ns)   --->   "%add_ln16_6 = add i4 %c_0_6, 1" [pool/pooling.cpp:16]   --->   Operation 496 'add' 'add_ln16_6' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 497 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_6, label %Row_Loop6, label %Col_Loop_begin6" [pool/pooling.cpp:16]   --->   Operation 497 'br' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 498 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 498 'specloopname' <Predicate = (!icmp_ln16_6)> <Delay = 0.00>
ST_27 : Operation 499 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 499 'specregionbegin' 'tmp_30' <Predicate = (!icmp_ln16_6)> <Delay = 0.00>
ST_27 : Operation 500 [1/1] (0.00ns)   --->   "%shl_ln26_6 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_6, i1 false)" [pool/pooling.cpp:26]   --->   Operation 500 'bitconcatenate' 'shl_ln26_6' <Predicate = (!icmp_ln16_6)> <Delay = 0.00>
ST_27 : Operation 501 [1/1] (1.76ns)   --->   "br label %21" [pool/pooling.cpp:20]   --->   Operation 501 'br' <Predicate = (!icmp_ln16_6)> <Delay = 1.76>
ST_27 : Operation 502 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_23) nounwind" [pool/pooling.cpp:37]   --->   Operation 502 'specregionend' 'empty_40' <Predicate = (icmp_ln16_6)> <Delay = 0.00>
ST_27 : Operation 503 [1/1] (0.00ns)   --->   "%tmp_29 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 503 'specregionbegin' 'tmp_29' <Predicate = (icmp_ln16_6)> <Delay = 0.00>
ST_27 : Operation 504 [1/1] (1.76ns)   --->   "br label %23" [pool/pooling.cpp:16]   --->   Operation 504 'br' <Predicate = (icmp_ln16_6)> <Delay = 1.76>

State 28 <SV = 9> <Delay = 7.04>
ST_28 : Operation 505 [1/1] (0.00ns)   --->   "%max_0_6 = phi float [ 0x3810000000000000, %Col_Loop_begin6 ], [ %max_1_6, %Pool_Row_Loop_end6 ]" [pool/pooling.cpp:28]   --->   Operation 505 'phi' 'max_0_6' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 506 [1/1] (0.00ns)   --->   "%mpr_0_6 = phi i2 [ 0, %Col_Loop_begin6 ], [ %add_ln20_6, %Pool_Row_Loop_end6 ]" [pool/pooling.cpp:20]   --->   Operation 506 'phi' 'mpr_0_6' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 507 [1/1] (0.95ns)   --->   "%icmp_ln20_6 = icmp eq i2 %mpr_0_6, -2" [pool/pooling.cpp:20]   --->   Operation 507 'icmp' 'icmp_ln20_6' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 508 [1/1] (0.00ns)   --->   "%empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 508 'speclooptripcount' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 509 [1/1] (1.56ns)   --->   "%add_ln20_6 = add i2 %mpr_0_6, 1" [pool/pooling.cpp:20]   --->   Operation 509 'add' 'add_ln20_6' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 510 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_6, label %Col_Loop_end6, label %Pool_Row_Loop_begin6" [pool/pooling.cpp:20]   --->   Operation 510 'br' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 511 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 511 'specloopname' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 512 [1/1] (0.00ns)   --->   "%tmp_34 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 512 'specregionbegin' 'tmp_34' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 513 [1/1] (0.00ns)   --->   "%or_ln25_2 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 true, i2 %mpr_0_6)" [pool/pooling.cpp:25]   --->   Operation 513 'bitconcatenate' 'or_ln25_2' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 514 [1/1] (0.00ns)   --->   "%sext_ln25_1 = sext i3 %or_ln25_2 to i4" [pool/pooling.cpp:25]   --->   Operation 514 'sext' 'sext_ln25_1' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 515 [1/1] (0.00ns)   --->   "%zext_ln28_20 = zext i4 %sext_ln25_1 to i9" [pool/pooling.cpp:28]   --->   Operation 515 'zext' 'zext_ln28_20' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 516 [1/1] (3.78ns)   --->   "%mul_ln28_5 = mul i9 %zext_ln28_20, 26" [pool/pooling.cpp:28]   --->   Operation 516 'mul' 'mul_ln28_5' <Predicate = (!icmp_ln20_6)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 517 [1/1] (1.76ns)   --->   "br label %22" [pool/pooling.cpp:23]   --->   Operation 517 'br' <Predicate = (!icmp_ln20_6)> <Delay = 1.76>
ST_28 : Operation 518 [1/1] (0.00ns)   --->   "%tmp_88 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_6, i5 0)" [pool/pooling.cpp:35]   --->   Operation 518 'bitconcatenate' 'tmp_88' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 519 [1/1] (0.00ns)   --->   "%zext_ln35_12 = zext i9 %tmp_88 to i12" [pool/pooling.cpp:35]   --->   Operation 519 'zext' 'zext_ln35_12' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 520 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_11 = add i12 %zext_ln35_12, -1600" [pool/pooling.cpp:35]   --->   Operation 520 'add' 'add_ln35_11' <Predicate = (icmp_ln20_6)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 521 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln35_12 = add i12 %zext_ln14_2, %add_ln35_11" [pool/pooling.cpp:35]   --->   Operation 521 'add' 'add_ln35_12' <Predicate = (icmp_ln20_6)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_28 : Operation 522 [1/1] (0.00ns)   --->   "%zext_ln35_13 = zext i12 %add_ln35_12 to i64" [pool/pooling.cpp:35]   --->   Operation 522 'zext' 'zext_ln35_13' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 523 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_6 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_13" [pool/pooling.cpp:35]   --->   Operation 523 'getelementptr' 'max_pool_1_out_addr_6' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 524 [1/1] (3.25ns)   --->   "store float %max_0_6, float* %max_pool_1_out_addr_6, align 4" [pool/pooling.cpp:35]   --->   Operation 524 'store' <Predicate = (icmp_ln20_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_28 : Operation 525 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_30) nounwind" [pool/pooling.cpp:36]   --->   Operation 525 'specregionend' 'empty_42' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_28 : Operation 526 [1/1] (0.00ns)   --->   "br label %20" [pool/pooling.cpp:16]   --->   Operation 526 'br' <Predicate = (icmp_ln20_6)> <Delay = 0.00>

State 29 <SV = 10> <Delay = 8.66>
ST_29 : Operation 527 [1/1] (0.00ns)   --->   "%max_1_6 = phi float [ %max_0_6, %Pool_Row_Loop_begin6 ], [ %select_ln28_6, %._crit_edge.6 ]" [pool/pooling.cpp:28]   --->   Operation 527 'phi' 'max_1_6' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 528 [1/1] (0.00ns)   --->   "%mpc_0_6 = phi i2 [ 0, %Pool_Row_Loop_begin6 ], [ %add_ln23_6, %._crit_edge.6 ]" [pool/pooling.cpp:23]   --->   Operation 528 'phi' 'mpc_0_6' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 529 [1/1] (0.00ns)   --->   "%zext_ln23_6 = zext i2 %mpc_0_6 to i5" [pool/pooling.cpp:23]   --->   Operation 529 'zext' 'zext_ln23_6' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 530 [1/1] (0.95ns)   --->   "%icmp_ln23_6 = icmp eq i2 %mpc_0_6, -2" [pool/pooling.cpp:23]   --->   Operation 530 'icmp' 'icmp_ln23_6' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 531 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 531 'speclooptripcount' 'empty_45' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 532 [1/1] (1.56ns)   --->   "%add_ln23_6 = add i2 %mpc_0_6, 1" [pool/pooling.cpp:23]   --->   Operation 532 'add' 'add_ln23_6' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 533 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_6, label %Pool_Row_Loop_end6, label %._crit_edge.6" [pool/pooling.cpp:23]   --->   Operation 533 'br' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 534 [1/1] (1.78ns)   --->   "%add_ln26_6 = add i5 %shl_ln26_6, %zext_ln23_6" [pool/pooling.cpp:26]   --->   Operation 534 'add' 'add_ln26_6' <Predicate = (!icmp_ln23_6)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 535 [1/1] (0.00ns)   --->   "%zext_ln28_25 = zext i5 %add_ln26_6 to i9" [pool/pooling.cpp:28]   --->   Operation 535 'zext' 'zext_ln28_25' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 536 [1/1] (1.82ns)   --->   "%add_ln28_12 = add i9 %zext_ln28_25, %mul_ln28_5" [pool/pooling.cpp:28]   --->   Operation 536 'add' 'add_ln28_12' <Predicate = (!icmp_ln23_6)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 537 [1/1] (0.00ns)   --->   "%tmp_91 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %add_ln28_12, i5 0)" [pool/pooling.cpp:28]   --->   Operation 537 'bitconcatenate' 'tmp_91' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 538 [1/1] (0.00ns)   --->   "%zext_ln28_26 = zext i14 %tmp_91 to i16" [pool/pooling.cpp:28]   --->   Operation 538 'zext' 'zext_ln28_26' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 539 [1/1] (1.81ns)   --->   "%add_ln28_13 = add i16 %zext_ln14_3, %zext_ln28_26" [pool/pooling.cpp:28]   --->   Operation 539 'add' 'add_ln28_13' <Predicate = (!icmp_ln23_6)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 540 [1/1] (0.00ns)   --->   "%zext_ln28_27 = zext i16 %add_ln28_13 to i64" [pool/pooling.cpp:28]   --->   Operation 540 'zext' 'zext_ln28_27' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 541 [1/1] (0.00ns)   --->   "%conv_1_out_addr_6 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_27" [pool/pooling.cpp:28]   --->   Operation 541 'getelementptr' 'conv_1_out_addr_6' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 542 [2/2] (3.25ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pool/pooling.cpp:28]   --->   Operation 542 'load' 'conv_1_out_load_6' <Predicate = (!icmp_ln23_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_29 : Operation 543 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_34) nounwind" [pool/pooling.cpp:33]   --->   Operation 543 'specregionend' 'empty_44' <Predicate = (icmp_ln23_6)> <Delay = 0.00>
ST_29 : Operation 544 [1/1] (0.00ns)   --->   "br label %21" [pool/pooling.cpp:20]   --->   Operation 544 'br' <Predicate = (icmp_ln23_6)> <Delay = 0.00>

State 30 <SV = 11> <Delay = 11.7>
ST_30 : Operation 545 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 545 'specloopname' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 546 [1/2] (3.25ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pool/pooling.cpp:28]   --->   Operation 546 'load' 'conv_1_out_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_30 : Operation 547 [1/1] (0.00ns)   --->   "%bitcast_ln28_12 = bitcast float %conv_1_out_load_6 to i32" [pool/pooling.cpp:28]   --->   Operation 547 'bitcast' 'bitcast_ln28_12' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 548 [1/1] (0.00ns)   --->   "%tmp_56 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_12, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 548 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 549 [1/1] (0.00ns)   --->   "%trunc_ln28_12 = trunc i32 %bitcast_ln28_12 to i23" [pool/pooling.cpp:28]   --->   Operation 549 'trunc' 'trunc_ln28_12' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 550 [1/1] (0.00ns)   --->   "%bitcast_ln28_13 = bitcast float %max_1_6 to i32" [pool/pooling.cpp:28]   --->   Operation 550 'bitcast' 'bitcast_ln28_13' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 551 [1/1] (0.00ns)   --->   "%tmp_57 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_13, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 551 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 552 [1/1] (0.00ns)   --->   "%trunc_ln28_13 = trunc i32 %bitcast_ln28_13 to i23" [pool/pooling.cpp:28]   --->   Operation 552 'trunc' 'trunc_ln28_13' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 553 [1/1] (1.55ns)   --->   "%icmp_ln28_24 = icmp ne i8 %tmp_56, -1" [pool/pooling.cpp:28]   --->   Operation 553 'icmp' 'icmp_ln28_24' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 554 [1/1] (2.44ns)   --->   "%icmp_ln28_25 = icmp eq i23 %trunc_ln28_12, 0" [pool/pooling.cpp:28]   --->   Operation 554 'icmp' 'icmp_ln28_25' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 555 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_12 = or i1 %icmp_ln28_25, %icmp_ln28_24" [pool/pooling.cpp:28]   --->   Operation 555 'or' 'or_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 556 [1/1] (1.55ns)   --->   "%icmp_ln28_26 = icmp ne i8 %tmp_57, -1" [pool/pooling.cpp:28]   --->   Operation 556 'icmp' 'icmp_ln28_26' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 557 [1/1] (2.44ns)   --->   "%icmp_ln28_27 = icmp eq i23 %trunc_ln28_13, 0" [pool/pooling.cpp:28]   --->   Operation 557 'icmp' 'icmp_ln28_27' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 558 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_13 = or i1 %icmp_ln28_27, %icmp_ln28_26" [pool/pooling.cpp:28]   --->   Operation 558 'or' 'or_ln28_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 559 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%and_ln28_12 = and i1 %or_ln28_12, %or_ln28_13" [pool/pooling.cpp:28]   --->   Operation 559 'and' 'and_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 560 [1/1] (6.78ns)   --->   "%tmp_58 = fcmp ogt float %conv_1_out_load_6, %max_1_6" [pool/pooling.cpp:28]   --->   Operation 560 'fcmp' 'tmp_58' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 561 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_13 = and i1 %and_ln28_12, %tmp_58" [pool/pooling.cpp:28]   --->   Operation 561 'and' 'and_ln28_13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 562 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_6 = select i1 %and_ln28_13, float %conv_1_out_load_6, float %max_1_6" [pool/pooling.cpp:28]   --->   Operation 562 'select' 'select_ln28_6' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 563 [1/1] (0.00ns)   --->   "br label %22" [pool/pooling.cpp:23]   --->   Operation 563 'br' <Predicate = true> <Delay = 0.00>

State 31 <SV = 9> <Delay = 1.76>
ST_31 : Operation 564 [1/1] (0.00ns)   --->   "%c_0_7 = phi i4 [ 0, %Row_Loop6 ], [ %add_ln16_7, %Col_Loop_end7 ]" [pool/pooling.cpp:16]   --->   Operation 564 'phi' 'c_0_7' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 565 [1/1] (1.30ns)   --->   "%icmp_ln16_7 = icmp eq i4 %c_0_7, -3" [pool/pooling.cpp:16]   --->   Operation 565 'icmp' 'icmp_ln16_7' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 566 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 566 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 567 [1/1] (1.73ns)   --->   "%add_ln16_7 = add i4 %c_0_7, 1" [pool/pooling.cpp:16]   --->   Operation 567 'add' 'add_ln16_7' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 568 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_7, label %Row_Loop7, label %Col_Loop_begin7" [pool/pooling.cpp:16]   --->   Operation 568 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 569 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 569 'specloopname' <Predicate = (!icmp_ln16_7)> <Delay = 0.00>
ST_31 : Operation 570 [1/1] (0.00ns)   --->   "%tmp_33 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 570 'specregionbegin' 'tmp_33' <Predicate = (!icmp_ln16_7)> <Delay = 0.00>
ST_31 : Operation 571 [1/1] (0.00ns)   --->   "%shl_ln26_7 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_7, i1 false)" [pool/pooling.cpp:26]   --->   Operation 571 'bitconcatenate' 'shl_ln26_7' <Predicate = (!icmp_ln16_7)> <Delay = 0.00>
ST_31 : Operation 572 [1/1] (1.76ns)   --->   "br label %24" [pool/pooling.cpp:20]   --->   Operation 572 'br' <Predicate = (!icmp_ln16_7)> <Delay = 1.76>
ST_31 : Operation 573 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_29) nounwind" [pool/pooling.cpp:37]   --->   Operation 573 'specregionend' 'empty_46' <Predicate = (icmp_ln16_7)> <Delay = 0.00>
ST_31 : Operation 574 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 574 'specregionbegin' 'tmp_32' <Predicate = (icmp_ln16_7)> <Delay = 0.00>
ST_31 : Operation 575 [1/1] (1.76ns)   --->   "br label %26" [pool/pooling.cpp:16]   --->   Operation 575 'br' <Predicate = (icmp_ln16_7)> <Delay = 1.76>

State 32 <SV = 10> <Delay = 7.04>
ST_32 : Operation 576 [1/1] (0.00ns)   --->   "%max_0_7 = phi float [ 0x3810000000000000, %Col_Loop_begin7 ], [ %max_1_7, %Pool_Row_Loop_end7 ]" [pool/pooling.cpp:28]   --->   Operation 576 'phi' 'max_0_7' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 577 [1/1] (0.00ns)   --->   "%mpr_0_7 = phi i2 [ 0, %Col_Loop_begin7 ], [ %add_ln20_7, %Pool_Row_Loop_end7 ]" [pool/pooling.cpp:20]   --->   Operation 577 'phi' 'mpr_0_7' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 578 [1/1] (0.95ns)   --->   "%icmp_ln20_7 = icmp eq i2 %mpr_0_7, -2" [pool/pooling.cpp:20]   --->   Operation 578 'icmp' 'icmp_ln20_7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 579 [1/1] (0.00ns)   --->   "%empty_49 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 579 'speclooptripcount' 'empty_49' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 580 [1/1] (1.56ns)   --->   "%add_ln20_7 = add i2 %mpr_0_7, 1" [pool/pooling.cpp:20]   --->   Operation 580 'add' 'add_ln20_7' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 581 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_7, label %Col_Loop_end7, label %Pool_Row_Loop_begin7" [pool/pooling.cpp:20]   --->   Operation 581 'br' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 582 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 582 'specloopname' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 583 [1/1] (0.00ns)   --->   "%tmp_37 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 583 'specregionbegin' 'tmp_37' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 584 [1/1] (0.97ns)   --->   "%xor_ln25_2 = xor i2 %mpr_0_7, -2" [pool/pooling.cpp:25]   --->   Operation 584 'xor' 'xor_ln25_2' <Predicate = (!icmp_ln20_7)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 585 [1/1] (0.00ns)   --->   "%sext_ln25_2 = sext i2 %xor_ln25_2 to i4" [pool/pooling.cpp:25]   --->   Operation 585 'sext' 'sext_ln25_2' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 586 [1/1] (0.00ns)   --->   "%zext_ln28_24 = zext i4 %sext_ln25_2 to i9" [pool/pooling.cpp:28]   --->   Operation 586 'zext' 'zext_ln28_24' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 587 [1/1] (3.78ns)   --->   "%mul_ln28_6 = mul i9 %zext_ln28_24, 26" [pool/pooling.cpp:28]   --->   Operation 587 'mul' 'mul_ln28_6' <Predicate = (!icmp_ln20_7)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 588 [1/1] (1.76ns)   --->   "br label %25" [pool/pooling.cpp:23]   --->   Operation 588 'br' <Predicate = (!icmp_ln20_7)> <Delay = 1.76>
ST_32 : Operation 589 [1/1] (0.00ns)   --->   "%tmp_90 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_7, i5 0)" [pool/pooling.cpp:35]   --->   Operation 589 'bitconcatenate' 'tmp_90' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 590 [1/1] (0.00ns)   --->   "%zext_ln35_14 = zext i9 %tmp_90 to i12" [pool/pooling.cpp:35]   --->   Operation 590 'zext' 'zext_ln35_14' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 591 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_13 = add i12 %zext_ln35_14, -1184" [pool/pooling.cpp:35]   --->   Operation 591 'add' 'add_ln35_13' <Predicate = (icmp_ln20_7)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 592 [1/1] (3.78ns) (root node of TernaryAdder)   --->   "%add_ln35_14 = add i12 %zext_ln14_2, %add_ln35_13" [pool/pooling.cpp:35]   --->   Operation 592 'add' 'add_ln35_14' <Predicate = (icmp_ln20_7)> <Delay = 3.78> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_32 : Operation 593 [1/1] (0.00ns)   --->   "%zext_ln35_15 = zext i12 %add_ln35_14 to i64" [pool/pooling.cpp:35]   --->   Operation 593 'zext' 'zext_ln35_15' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 594 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_7 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_15" [pool/pooling.cpp:35]   --->   Operation 594 'getelementptr' 'max_pool_1_out_addr_7' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 595 [1/1] (3.25ns)   --->   "store float %max_0_7, float* %max_pool_1_out_addr_7, align 4" [pool/pooling.cpp:35]   --->   Operation 595 'store' <Predicate = (icmp_ln20_7)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_32 : Operation 596 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_33) nounwind" [pool/pooling.cpp:36]   --->   Operation 596 'specregionend' 'empty_48' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_32 : Operation 597 [1/1] (0.00ns)   --->   "br label %23" [pool/pooling.cpp:16]   --->   Operation 597 'br' <Predicate = (icmp_ln20_7)> <Delay = 0.00>

State 33 <SV = 11> <Delay = 8.66>
ST_33 : Operation 598 [1/1] (0.00ns)   --->   "%max_1_7 = phi float [ %max_0_7, %Pool_Row_Loop_begin7 ], [ %select_ln28_7, %._crit_edge.7 ]" [pool/pooling.cpp:28]   --->   Operation 598 'phi' 'max_1_7' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 599 [1/1] (0.00ns)   --->   "%mpc_0_7 = phi i2 [ 0, %Pool_Row_Loop_begin7 ], [ %add_ln23_7, %._crit_edge.7 ]" [pool/pooling.cpp:23]   --->   Operation 599 'phi' 'mpc_0_7' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 600 [1/1] (0.00ns)   --->   "%zext_ln23_7 = zext i2 %mpc_0_7 to i5" [pool/pooling.cpp:23]   --->   Operation 600 'zext' 'zext_ln23_7' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 601 [1/1] (0.95ns)   --->   "%icmp_ln23_7 = icmp eq i2 %mpc_0_7, -2" [pool/pooling.cpp:23]   --->   Operation 601 'icmp' 'icmp_ln23_7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 602 [1/1] (0.00ns)   --->   "%empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 602 'speclooptripcount' 'empty_51' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 603 [1/1] (1.56ns)   --->   "%add_ln23_7 = add i2 %mpc_0_7, 1" [pool/pooling.cpp:23]   --->   Operation 603 'add' 'add_ln23_7' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 604 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_7, label %Pool_Row_Loop_end7, label %._crit_edge.7" [pool/pooling.cpp:23]   --->   Operation 604 'br' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 605 [1/1] (1.78ns)   --->   "%add_ln26_7 = add i5 %shl_ln26_7, %zext_ln23_7" [pool/pooling.cpp:26]   --->   Operation 605 'add' 'add_ln26_7' <Predicate = (!icmp_ln23_7)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 606 [1/1] (0.00ns)   --->   "%zext_ln28_29 = zext i5 %add_ln26_7 to i9" [pool/pooling.cpp:28]   --->   Operation 606 'zext' 'zext_ln28_29' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 607 [1/1] (1.82ns)   --->   "%add_ln28_14 = add i9 %zext_ln28_29, %mul_ln28_6" [pool/pooling.cpp:28]   --->   Operation 607 'add' 'add_ln28_14' <Predicate = (!icmp_ln23_7)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 608 [1/1] (0.00ns)   --->   "%tmp_93 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %add_ln28_14, i5 0)" [pool/pooling.cpp:28]   --->   Operation 608 'bitconcatenate' 'tmp_93' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 609 [1/1] (0.00ns)   --->   "%zext_ln28_30 = zext i14 %tmp_93 to i16" [pool/pooling.cpp:28]   --->   Operation 609 'zext' 'zext_ln28_30' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 610 [1/1] (1.81ns)   --->   "%add_ln28_15 = add i16 %zext_ln14_3, %zext_ln28_30" [pool/pooling.cpp:28]   --->   Operation 610 'add' 'add_ln28_15' <Predicate = (!icmp_ln23_7)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 611 [1/1] (0.00ns)   --->   "%zext_ln28_31 = zext i16 %add_ln28_15 to i64" [pool/pooling.cpp:28]   --->   Operation 611 'zext' 'zext_ln28_31' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 612 [1/1] (0.00ns)   --->   "%conv_1_out_addr_7 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_31" [pool/pooling.cpp:28]   --->   Operation 612 'getelementptr' 'conv_1_out_addr_7' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 613 [2/2] (3.25ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pool/pooling.cpp:28]   --->   Operation 613 'load' 'conv_1_out_load_7' <Predicate = (!icmp_ln23_7)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_33 : Operation 614 [1/1] (0.00ns)   --->   "%empty_50 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_37) nounwind" [pool/pooling.cpp:33]   --->   Operation 614 'specregionend' 'empty_50' <Predicate = (icmp_ln23_7)> <Delay = 0.00>
ST_33 : Operation 615 [1/1] (0.00ns)   --->   "br label %24" [pool/pooling.cpp:20]   --->   Operation 615 'br' <Predicate = (icmp_ln23_7)> <Delay = 0.00>

State 34 <SV = 12> <Delay = 11.7>
ST_34 : Operation 616 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 616 'specloopname' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 617 [1/2] (3.25ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pool/pooling.cpp:28]   --->   Operation 617 'load' 'conv_1_out_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_34 : Operation 618 [1/1] (0.00ns)   --->   "%bitcast_ln28_14 = bitcast float %conv_1_out_load_7 to i32" [pool/pooling.cpp:28]   --->   Operation 618 'bitcast' 'bitcast_ln28_14' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 619 [1/1] (0.00ns)   --->   "%tmp_59 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_14, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 619 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 620 [1/1] (0.00ns)   --->   "%trunc_ln28_14 = trunc i32 %bitcast_ln28_14 to i23" [pool/pooling.cpp:28]   --->   Operation 620 'trunc' 'trunc_ln28_14' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 621 [1/1] (0.00ns)   --->   "%bitcast_ln28_15 = bitcast float %max_1_7 to i32" [pool/pooling.cpp:28]   --->   Operation 621 'bitcast' 'bitcast_ln28_15' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 622 [1/1] (0.00ns)   --->   "%tmp_60 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_15, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 622 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 623 [1/1] (0.00ns)   --->   "%trunc_ln28_15 = trunc i32 %bitcast_ln28_15 to i23" [pool/pooling.cpp:28]   --->   Operation 623 'trunc' 'trunc_ln28_15' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 624 [1/1] (1.55ns)   --->   "%icmp_ln28_28 = icmp ne i8 %tmp_59, -1" [pool/pooling.cpp:28]   --->   Operation 624 'icmp' 'icmp_ln28_28' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 625 [1/1] (2.44ns)   --->   "%icmp_ln28_29 = icmp eq i23 %trunc_ln28_14, 0" [pool/pooling.cpp:28]   --->   Operation 625 'icmp' 'icmp_ln28_29' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 626 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%or_ln28_14 = or i1 %icmp_ln28_29, %icmp_ln28_28" [pool/pooling.cpp:28]   --->   Operation 626 'or' 'or_ln28_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 627 [1/1] (1.55ns)   --->   "%icmp_ln28_30 = icmp ne i8 %tmp_60, -1" [pool/pooling.cpp:28]   --->   Operation 627 'icmp' 'icmp_ln28_30' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 628 [1/1] (2.44ns)   --->   "%icmp_ln28_31 = icmp eq i23 %trunc_ln28_15, 0" [pool/pooling.cpp:28]   --->   Operation 628 'icmp' 'icmp_ln28_31' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%or_ln28_15 = or i1 %icmp_ln28_31, %icmp_ln28_30" [pool/pooling.cpp:28]   --->   Operation 629 'or' 'or_ln28_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 630 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%and_ln28_14 = and i1 %or_ln28_14, %or_ln28_15" [pool/pooling.cpp:28]   --->   Operation 630 'and' 'and_ln28_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 631 [1/1] (6.78ns)   --->   "%tmp_61 = fcmp ogt float %conv_1_out_load_7, %max_1_7" [pool/pooling.cpp:28]   --->   Operation 631 'fcmp' 'tmp_61' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 632 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_15 = and i1 %and_ln28_14, %tmp_61" [pool/pooling.cpp:28]   --->   Operation 632 'and' 'and_ln28_15' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 633 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_7 = select i1 %and_ln28_15, float %conv_1_out_load_7, float %max_1_7" [pool/pooling.cpp:28]   --->   Operation 633 'select' 'select_ln28_7' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_34 : Operation 634 [1/1] (0.00ns)   --->   "br label %25" [pool/pooling.cpp:23]   --->   Operation 634 'br' <Predicate = true> <Delay = 0.00>

State 35 <SV = 10> <Delay = 1.76>
ST_35 : Operation 635 [1/1] (0.00ns)   --->   "%c_0_8 = phi i4 [ 0, %Row_Loop7 ], [ %add_ln16_8, %Col_Loop_end8 ]" [pool/pooling.cpp:16]   --->   Operation 635 'phi' 'c_0_8' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 636 [1/1] (1.30ns)   --->   "%icmp_ln16_8 = icmp eq i4 %c_0_8, -3" [pool/pooling.cpp:16]   --->   Operation 636 'icmp' 'icmp_ln16_8' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 637 [1/1] (0.00ns)   --->   "%empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 637 'speclooptripcount' 'empty_53' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 638 [1/1] (1.73ns)   --->   "%add_ln16_8 = add i4 %c_0_8, 1" [pool/pooling.cpp:16]   --->   Operation 638 'add' 'add_ln16_8' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 639 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_8, label %Row_Loop8, label %Col_Loop_begin8" [pool/pooling.cpp:16]   --->   Operation 639 'br' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 640 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 640 'specloopname' <Predicate = (!icmp_ln16_8)> <Delay = 0.00>
ST_35 : Operation 641 [1/1] (0.00ns)   --->   "%tmp_36 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 641 'specregionbegin' 'tmp_36' <Predicate = (!icmp_ln16_8)> <Delay = 0.00>
ST_35 : Operation 642 [1/1] (0.00ns)   --->   "%shl_ln26_8 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_8, i1 false)" [pool/pooling.cpp:26]   --->   Operation 642 'bitconcatenate' 'shl_ln26_8' <Predicate = (!icmp_ln16_8)> <Delay = 0.00>
ST_35 : Operation 643 [1/1] (1.76ns)   --->   "br label %27" [pool/pooling.cpp:20]   --->   Operation 643 'br' <Predicate = (!icmp_ln16_8)> <Delay = 1.76>
ST_35 : Operation 644 [1/1] (0.00ns)   --->   "%empty_52 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_32) nounwind" [pool/pooling.cpp:37]   --->   Operation 644 'specregionend' 'empty_52' <Predicate = (icmp_ln16_8)> <Delay = 0.00>
ST_35 : Operation 645 [1/1] (0.00ns)   --->   "%tmp_35 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 645 'specregionbegin' 'tmp_35' <Predicate = (icmp_ln16_8)> <Delay = 0.00>
ST_35 : Operation 646 [1/1] (1.76ns)   --->   "br label %29" [pool/pooling.cpp:16]   --->   Operation 646 'br' <Predicate = (icmp_ln16_8)> <Delay = 1.76>

State 36 <SV = 11> <Delay = 7.01>
ST_36 : Operation 647 [1/1] (0.00ns)   --->   "%max_0_8 = phi float [ 0x3810000000000000, %Col_Loop_begin8 ], [ %max_1_8, %Pool_Row_Loop_end8 ]" [pool/pooling.cpp:28]   --->   Operation 647 'phi' 'max_0_8' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 648 [1/1] (0.00ns)   --->   "%mpr_0_8 = phi i2 [ 0, %Col_Loop_begin8 ], [ %add_ln20_8, %Pool_Row_Loop_end8 ]" [pool/pooling.cpp:20]   --->   Operation 648 'phi' 'mpr_0_8' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 649 [1/1] (0.95ns)   --->   "%icmp_ln20_8 = icmp eq i2 %mpr_0_8, -2" [pool/pooling.cpp:20]   --->   Operation 649 'icmp' 'icmp_ln20_8' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 650 [1/1] (0.00ns)   --->   "%empty_55 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 650 'speclooptripcount' 'empty_55' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 651 [1/1] (1.56ns)   --->   "%add_ln20_8 = add i2 %mpr_0_8, 1" [pool/pooling.cpp:20]   --->   Operation 651 'add' 'add_ln20_8' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 652 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_8, label %Col_Loop_end8, label %Pool_Row_Loop_begin8" [pool/pooling.cpp:20]   --->   Operation 652 'br' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 653 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 653 'specloopname' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 654 [1/1] (0.00ns)   --->   "%tmp_40 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 654 'specregionbegin' 'tmp_40' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 655 [1/1] (0.00ns)   --->   "%or_ln25_3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 -4, i2 %mpr_0_8)" [pool/pooling.cpp:25]   --->   Operation 655 'bitconcatenate' 'or_ln25_3' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 656 [1/1] (0.00ns)   --->   "%zext_ln28_28 = zext i5 %or_ln25_3 to i10" [pool/pooling.cpp:28]   --->   Operation 656 'zext' 'zext_ln28_28' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 657 [1/1] (3.78ns)   --->   "%mul_ln28_7 = mul i10 %zext_ln28_28, 26" [pool/pooling.cpp:28]   --->   Operation 657 'mul' 'mul_ln28_7' <Predicate = (!icmp_ln20_8)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 658 [1/1] (1.76ns)   --->   "br label %28" [pool/pooling.cpp:23]   --->   Operation 658 'br' <Predicate = (!icmp_ln20_8)> <Delay = 1.76>
ST_36 : Operation 659 [1/1] (0.00ns)   --->   "%tmp_92 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_8, i5 0)" [pool/pooling.cpp:35]   --->   Operation 659 'bitconcatenate' 'tmp_92' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 660 [1/1] (0.00ns)   --->   "%zext_ln35_16 = zext i9 %tmp_92 to i11" [pool/pooling.cpp:35]   --->   Operation 660 'zext' 'zext_ln35_16' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 661 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_15 = add i11 %zext_ln35_16, -768" [pool/pooling.cpp:35]   --->   Operation 661 'add' 'add_ln35_15' <Predicate = (icmp_ln20_8)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 662 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%add_ln35_16 = add i11 %add_ln35_15, %zext_ln14_1" [pool/pooling.cpp:35]   --->   Operation 662 'add' 'add_ln35_16' <Predicate = (icmp_ln20_8)> <Delay = 3.75> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_36 : Operation 663 [1/1] (0.00ns)   --->   "%sext_ln35 = sext i11 %add_ln35_16 to i12" [pool/pooling.cpp:35]   --->   Operation 663 'sext' 'sext_ln35' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 664 [1/1] (0.00ns)   --->   "%zext_ln35_17 = zext i12 %sext_ln35 to i64" [pool/pooling.cpp:35]   --->   Operation 664 'zext' 'zext_ln35_17' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 665 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_8 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_17" [pool/pooling.cpp:35]   --->   Operation 665 'getelementptr' 'max_pool_1_out_addr_8' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 666 [1/1] (3.25ns)   --->   "store float %max_0_8, float* %max_pool_1_out_addr_8, align 4" [pool/pooling.cpp:35]   --->   Operation 666 'store' <Predicate = (icmp_ln20_8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_36 : Operation 667 [1/1] (0.00ns)   --->   "%empty_54 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_36) nounwind" [pool/pooling.cpp:36]   --->   Operation 667 'specregionend' 'empty_54' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_36 : Operation 668 [1/1] (0.00ns)   --->   "br label %26" [pool/pooling.cpp:16]   --->   Operation 668 'br' <Predicate = (icmp_ln20_8)> <Delay = 0.00>

State 37 <SV = 12> <Delay = 8.70>
ST_37 : Operation 669 [1/1] (0.00ns)   --->   "%max_1_8 = phi float [ %max_0_8, %Pool_Row_Loop_begin8 ], [ %select_ln28_8, %._crit_edge.8 ]" [pool/pooling.cpp:28]   --->   Operation 669 'phi' 'max_1_8' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 670 [1/1] (0.00ns)   --->   "%mpc_0_8 = phi i2 [ 0, %Pool_Row_Loop_begin8 ], [ %add_ln23_8, %._crit_edge.8 ]" [pool/pooling.cpp:23]   --->   Operation 670 'phi' 'mpc_0_8' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 671 [1/1] (0.00ns)   --->   "%zext_ln23_8 = zext i2 %mpc_0_8 to i5" [pool/pooling.cpp:23]   --->   Operation 671 'zext' 'zext_ln23_8' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 672 [1/1] (0.95ns)   --->   "%icmp_ln23_8 = icmp eq i2 %mpc_0_8, -2" [pool/pooling.cpp:23]   --->   Operation 672 'icmp' 'icmp_ln23_8' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 673 [1/1] (0.00ns)   --->   "%empty_57 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 673 'speclooptripcount' 'empty_57' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 674 [1/1] (1.56ns)   --->   "%add_ln23_8 = add i2 %mpc_0_8, 1" [pool/pooling.cpp:23]   --->   Operation 674 'add' 'add_ln23_8' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 675 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_8, label %Pool_Row_Loop_end8, label %._crit_edge.8" [pool/pooling.cpp:23]   --->   Operation 675 'br' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 676 [1/1] (1.78ns)   --->   "%add_ln26_8 = add i5 %shl_ln26_8, %zext_ln23_8" [pool/pooling.cpp:26]   --->   Operation 676 'add' 'add_ln26_8' <Predicate = (!icmp_ln23_8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 677 [1/1] (0.00ns)   --->   "%zext_ln28_33 = zext i5 %add_ln26_8 to i10" [pool/pooling.cpp:28]   --->   Operation 677 'zext' 'zext_ln28_33' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 678 [1/1] (1.73ns)   --->   "%add_ln28_16 = add i10 %zext_ln28_33, %mul_ln28_7" [pool/pooling.cpp:28]   --->   Operation 678 'add' 'add_ln28_16' <Predicate = (!icmp_ln23_8)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 679 [1/1] (0.00ns)   --->   "%tmp_95 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_16, i5 0)" [pool/pooling.cpp:28]   --->   Operation 679 'bitconcatenate' 'tmp_95' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 680 [1/1] (0.00ns)   --->   "%zext_ln28_34 = zext i15 %tmp_95 to i16" [pool/pooling.cpp:28]   --->   Operation 680 'zext' 'zext_ln28_34' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 681 [1/1] (1.94ns)   --->   "%add_ln28_17 = add i16 %zext_ln14_3, %zext_ln28_34" [pool/pooling.cpp:28]   --->   Operation 681 'add' 'add_ln28_17' <Predicate = (!icmp_ln23_8)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 682 [1/1] (0.00ns)   --->   "%zext_ln28_35 = zext i16 %add_ln28_17 to i64" [pool/pooling.cpp:28]   --->   Operation 682 'zext' 'zext_ln28_35' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 683 [1/1] (0.00ns)   --->   "%conv_1_out_addr_8 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_35" [pool/pooling.cpp:28]   --->   Operation 683 'getelementptr' 'conv_1_out_addr_8' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 684 [2/2] (3.25ns)   --->   "%conv_1_out_load_8 = load float* %conv_1_out_addr_8, align 4" [pool/pooling.cpp:28]   --->   Operation 684 'load' 'conv_1_out_load_8' <Predicate = (!icmp_ln23_8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_37 : Operation 685 [1/1] (0.00ns)   --->   "%empty_56 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_40) nounwind" [pool/pooling.cpp:33]   --->   Operation 685 'specregionend' 'empty_56' <Predicate = (icmp_ln23_8)> <Delay = 0.00>
ST_37 : Operation 686 [1/1] (0.00ns)   --->   "br label %27" [pool/pooling.cpp:20]   --->   Operation 686 'br' <Predicate = (icmp_ln23_8)> <Delay = 0.00>

State 38 <SV = 13> <Delay = 11.7>
ST_38 : Operation 687 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 687 'specloopname' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 688 [1/2] (3.25ns)   --->   "%conv_1_out_load_8 = load float* %conv_1_out_addr_8, align 4" [pool/pooling.cpp:28]   --->   Operation 688 'load' 'conv_1_out_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_38 : Operation 689 [1/1] (0.00ns)   --->   "%bitcast_ln28_16 = bitcast float %conv_1_out_load_8 to i32" [pool/pooling.cpp:28]   --->   Operation 689 'bitcast' 'bitcast_ln28_16' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 690 [1/1] (0.00ns)   --->   "%tmp_62 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_16, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 690 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 691 [1/1] (0.00ns)   --->   "%trunc_ln28_16 = trunc i32 %bitcast_ln28_16 to i23" [pool/pooling.cpp:28]   --->   Operation 691 'trunc' 'trunc_ln28_16' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 692 [1/1] (0.00ns)   --->   "%bitcast_ln28_17 = bitcast float %max_1_8 to i32" [pool/pooling.cpp:28]   --->   Operation 692 'bitcast' 'bitcast_ln28_17' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 693 [1/1] (0.00ns)   --->   "%tmp_63 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_17, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 693 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 694 [1/1] (0.00ns)   --->   "%trunc_ln28_17 = trunc i32 %bitcast_ln28_17 to i23" [pool/pooling.cpp:28]   --->   Operation 694 'trunc' 'trunc_ln28_17' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 695 [1/1] (1.55ns)   --->   "%icmp_ln28_32 = icmp ne i8 %tmp_62, -1" [pool/pooling.cpp:28]   --->   Operation 695 'icmp' 'icmp_ln28_32' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 696 [1/1] (2.44ns)   --->   "%icmp_ln28_33 = icmp eq i23 %trunc_ln28_16, 0" [pool/pooling.cpp:28]   --->   Operation 696 'icmp' 'icmp_ln28_33' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 697 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%or_ln28_16 = or i1 %icmp_ln28_33, %icmp_ln28_32" [pool/pooling.cpp:28]   --->   Operation 697 'or' 'or_ln28_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 698 [1/1] (1.55ns)   --->   "%icmp_ln28_34 = icmp ne i8 %tmp_63, -1" [pool/pooling.cpp:28]   --->   Operation 698 'icmp' 'icmp_ln28_34' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 699 [1/1] (2.44ns)   --->   "%icmp_ln28_35 = icmp eq i23 %trunc_ln28_17, 0" [pool/pooling.cpp:28]   --->   Operation 699 'icmp' 'icmp_ln28_35' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 700 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%or_ln28_17 = or i1 %icmp_ln28_35, %icmp_ln28_34" [pool/pooling.cpp:28]   --->   Operation 700 'or' 'or_ln28_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 701 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%and_ln28_16 = and i1 %or_ln28_16, %or_ln28_17" [pool/pooling.cpp:28]   --->   Operation 701 'and' 'and_ln28_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 702 [1/1] (6.78ns)   --->   "%tmp_64 = fcmp ogt float %conv_1_out_load_8, %max_1_8" [pool/pooling.cpp:28]   --->   Operation 702 'fcmp' 'tmp_64' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 703 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_17 = and i1 %and_ln28_16, %tmp_64" [pool/pooling.cpp:28]   --->   Operation 703 'and' 'and_ln28_17' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 704 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_8 = select i1 %and_ln28_17, float %conv_1_out_load_8, float %max_1_8" [pool/pooling.cpp:28]   --->   Operation 704 'select' 'select_ln28_8' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_38 : Operation 705 [1/1] (0.00ns)   --->   "br label %28" [pool/pooling.cpp:23]   --->   Operation 705 'br' <Predicate = true> <Delay = 0.00>

State 39 <SV = 11> <Delay = 1.76>
ST_39 : Operation 706 [1/1] (0.00ns)   --->   "%c_0_9 = phi i4 [ 0, %Row_Loop8 ], [ %add_ln16_9, %Col_Loop_end9 ]" [pool/pooling.cpp:16]   --->   Operation 706 'phi' 'c_0_9' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 707 [1/1] (1.30ns)   --->   "%icmp_ln16_9 = icmp eq i4 %c_0_9, -3" [pool/pooling.cpp:16]   --->   Operation 707 'icmp' 'icmp_ln16_9' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 708 [1/1] (0.00ns)   --->   "%empty_59 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 708 'speclooptripcount' 'empty_59' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 709 [1/1] (1.73ns)   --->   "%add_ln16_9 = add i4 %c_0_9, 1" [pool/pooling.cpp:16]   --->   Operation 709 'add' 'add_ln16_9' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 710 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_9, label %Row_Loop9, label %Col_Loop_begin9" [pool/pooling.cpp:16]   --->   Operation 710 'br' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 711 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 711 'specloopname' <Predicate = (!icmp_ln16_9)> <Delay = 0.00>
ST_39 : Operation 712 [1/1] (0.00ns)   --->   "%tmp_39 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 712 'specregionbegin' 'tmp_39' <Predicate = (!icmp_ln16_9)> <Delay = 0.00>
ST_39 : Operation 713 [1/1] (0.00ns)   --->   "%shl_ln26_9 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_9, i1 false)" [pool/pooling.cpp:26]   --->   Operation 713 'bitconcatenate' 'shl_ln26_9' <Predicate = (!icmp_ln16_9)> <Delay = 0.00>
ST_39 : Operation 714 [1/1] (1.76ns)   --->   "br label %30" [pool/pooling.cpp:20]   --->   Operation 714 'br' <Predicate = (!icmp_ln16_9)> <Delay = 1.76>
ST_39 : Operation 715 [1/1] (0.00ns)   --->   "%empty_58 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_35) nounwind" [pool/pooling.cpp:37]   --->   Operation 715 'specregionend' 'empty_58' <Predicate = (icmp_ln16_9)> <Delay = 0.00>
ST_39 : Operation 716 [1/1] (0.00ns)   --->   "%tmp_38 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 716 'specregionbegin' 'tmp_38' <Predicate = (icmp_ln16_9)> <Delay = 0.00>
ST_39 : Operation 717 [1/1] (1.76ns)   --->   "br label %32" [pool/pooling.cpp:16]   --->   Operation 717 'br' <Predicate = (icmp_ln16_9)> <Delay = 1.76>

State 40 <SV = 12> <Delay = 7.06>
ST_40 : Operation 718 [1/1] (0.00ns)   --->   "%max_0_9 = phi float [ 0x3810000000000000, %Col_Loop_begin9 ], [ %max_1_9, %Pool_Row_Loop_end9 ]" [pool/pooling.cpp:28]   --->   Operation 718 'phi' 'max_0_9' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 719 [1/1] (0.00ns)   --->   "%mpr_0_9 = phi i2 [ 0, %Col_Loop_begin9 ], [ %add_ln20_9, %Pool_Row_Loop_end9 ]" [pool/pooling.cpp:20]   --->   Operation 719 'phi' 'mpr_0_9' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 720 [1/1] (0.00ns)   --->   "%zext_ln20_1 = zext i2 %mpr_0_9 to i5" [pool/pooling.cpp:20]   --->   Operation 720 'zext' 'zext_ln20_1' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 721 [1/1] (0.95ns)   --->   "%icmp_ln20_9 = icmp eq i2 %mpr_0_9, -2" [pool/pooling.cpp:20]   --->   Operation 721 'icmp' 'icmp_ln20_9' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 722 [1/1] (0.00ns)   --->   "%empty_61 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 722 'speclooptripcount' 'empty_61' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 723 [1/1] (1.56ns)   --->   "%add_ln20_9 = add i2 %mpr_0_9, 1" [pool/pooling.cpp:20]   --->   Operation 723 'add' 'add_ln20_9' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 724 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_9, label %Col_Loop_end9, label %Pool_Row_Loop_begin9" [pool/pooling.cpp:20]   --->   Operation 724 'br' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 725 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 725 'specloopname' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 726 [1/1] (0.00ns)   --->   "%tmp_43 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 726 'specregionbegin' 'tmp_43' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 727 [1/1] (1.78ns)   --->   "%add_ln25_1 = add i5 %zext_ln20_1, -14" [pool/pooling.cpp:25]   --->   Operation 727 'add' 'add_ln25_1' <Predicate = (!icmp_ln20_9)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 728 [1/1] (0.00ns)   --->   "%zext_ln28_32 = zext i5 %add_ln25_1 to i10" [pool/pooling.cpp:28]   --->   Operation 728 'zext' 'zext_ln28_32' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 729 [1/1] (3.78ns)   --->   "%mul_ln28_8 = mul i10 %zext_ln28_32, 26" [pool/pooling.cpp:28]   --->   Operation 729 'mul' 'mul_ln28_8' <Predicate = (!icmp_ln20_9)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 730 [1/1] (1.76ns)   --->   "br label %31" [pool/pooling.cpp:23]   --->   Operation 730 'br' <Predicate = (!icmp_ln20_9)> <Delay = 1.76>
ST_40 : Operation 731 [1/1] (0.00ns)   --->   "%tmp_94 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_9, i5 0)" [pool/pooling.cpp:35]   --->   Operation 731 'bitconcatenate' 'tmp_94' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 732 [1/1] (0.00ns)   --->   "%zext_ln35_18 = zext i9 %tmp_94 to i13" [pool/pooling.cpp:35]   --->   Operation 732 'zext' 'zext_ln35_18' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 733 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_17 = add i13 %zext_ln35_18, 3744" [pool/pooling.cpp:35]   --->   Operation 733 'add' 'add_ln35_17' <Predicate = (icmp_ln20_9)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 734 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_18 = add i13 %zext_ln14_4, %add_ln35_17" [pool/pooling.cpp:35]   --->   Operation 734 'add' 'add_ln35_18' <Predicate = (icmp_ln20_9)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_40 : Operation 735 [1/1] (0.00ns)   --->   "%zext_ln35_19 = zext i13 %add_ln35_18 to i64" [pool/pooling.cpp:35]   --->   Operation 735 'zext' 'zext_ln35_19' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 736 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_9 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_19" [pool/pooling.cpp:35]   --->   Operation 736 'getelementptr' 'max_pool_1_out_addr_9' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 737 [1/1] (3.25ns)   --->   "store float %max_0_9, float* %max_pool_1_out_addr_9, align 4" [pool/pooling.cpp:35]   --->   Operation 737 'store' <Predicate = (icmp_ln20_9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_40 : Operation 738 [1/1] (0.00ns)   --->   "%empty_60 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_39) nounwind" [pool/pooling.cpp:36]   --->   Operation 738 'specregionend' 'empty_60' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_40 : Operation 739 [1/1] (0.00ns)   --->   "br label %29" [pool/pooling.cpp:16]   --->   Operation 739 'br' <Predicate = (icmp_ln20_9)> <Delay = 0.00>

State 41 <SV = 13> <Delay = 8.70>
ST_41 : Operation 740 [1/1] (0.00ns)   --->   "%max_1_9 = phi float [ %max_0_9, %Pool_Row_Loop_begin9 ], [ %select_ln28_9, %._crit_edge.9 ]" [pool/pooling.cpp:28]   --->   Operation 740 'phi' 'max_1_9' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 741 [1/1] (0.00ns)   --->   "%mpc_0_9 = phi i2 [ 0, %Pool_Row_Loop_begin9 ], [ %add_ln23_9, %._crit_edge.9 ]" [pool/pooling.cpp:23]   --->   Operation 741 'phi' 'mpc_0_9' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 742 [1/1] (0.00ns)   --->   "%zext_ln23_9 = zext i2 %mpc_0_9 to i5" [pool/pooling.cpp:23]   --->   Operation 742 'zext' 'zext_ln23_9' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 743 [1/1] (0.95ns)   --->   "%icmp_ln23_9 = icmp eq i2 %mpc_0_9, -2" [pool/pooling.cpp:23]   --->   Operation 743 'icmp' 'icmp_ln23_9' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 744 [1/1] (0.00ns)   --->   "%empty_63 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 744 'speclooptripcount' 'empty_63' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 745 [1/1] (1.56ns)   --->   "%add_ln23_9 = add i2 %mpc_0_9, 1" [pool/pooling.cpp:23]   --->   Operation 745 'add' 'add_ln23_9' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 746 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_9, label %Pool_Row_Loop_end9, label %._crit_edge.9" [pool/pooling.cpp:23]   --->   Operation 746 'br' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 747 [1/1] (1.78ns)   --->   "%add_ln26_9 = add i5 %shl_ln26_9, %zext_ln23_9" [pool/pooling.cpp:26]   --->   Operation 747 'add' 'add_ln26_9' <Predicate = (!icmp_ln23_9)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 748 [1/1] (0.00ns)   --->   "%zext_ln28_37 = zext i5 %add_ln26_9 to i10" [pool/pooling.cpp:28]   --->   Operation 748 'zext' 'zext_ln28_37' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 749 [1/1] (1.73ns)   --->   "%add_ln28_18 = add i10 %zext_ln28_37, %mul_ln28_8" [pool/pooling.cpp:28]   --->   Operation 749 'add' 'add_ln28_18' <Predicate = (!icmp_ln23_9)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 750 [1/1] (0.00ns)   --->   "%tmp_97 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_18, i5 0)" [pool/pooling.cpp:28]   --->   Operation 750 'bitconcatenate' 'tmp_97' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 751 [1/1] (0.00ns)   --->   "%zext_ln28_38 = zext i15 %tmp_97 to i16" [pool/pooling.cpp:28]   --->   Operation 751 'zext' 'zext_ln28_38' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 752 [1/1] (1.94ns)   --->   "%add_ln28_19 = add i16 %zext_ln14_3, %zext_ln28_38" [pool/pooling.cpp:28]   --->   Operation 752 'add' 'add_ln28_19' <Predicate = (!icmp_ln23_9)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 753 [1/1] (0.00ns)   --->   "%zext_ln28_39 = zext i16 %add_ln28_19 to i64" [pool/pooling.cpp:28]   --->   Operation 753 'zext' 'zext_ln28_39' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 754 [1/1] (0.00ns)   --->   "%conv_1_out_addr_9 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_39" [pool/pooling.cpp:28]   --->   Operation 754 'getelementptr' 'conv_1_out_addr_9' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 755 [2/2] (3.25ns)   --->   "%conv_1_out_load_9 = load float* %conv_1_out_addr_9, align 4" [pool/pooling.cpp:28]   --->   Operation 755 'load' 'conv_1_out_load_9' <Predicate = (!icmp_ln23_9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_41 : Operation 756 [1/1] (0.00ns)   --->   "%empty_62 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_43) nounwind" [pool/pooling.cpp:33]   --->   Operation 756 'specregionend' 'empty_62' <Predicate = (icmp_ln23_9)> <Delay = 0.00>
ST_41 : Operation 757 [1/1] (0.00ns)   --->   "br label %30" [pool/pooling.cpp:20]   --->   Operation 757 'br' <Predicate = (icmp_ln23_9)> <Delay = 0.00>

State 42 <SV = 14> <Delay = 11.7>
ST_42 : Operation 758 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 758 'specloopname' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 759 [1/2] (3.25ns)   --->   "%conv_1_out_load_9 = load float* %conv_1_out_addr_9, align 4" [pool/pooling.cpp:28]   --->   Operation 759 'load' 'conv_1_out_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_42 : Operation 760 [1/1] (0.00ns)   --->   "%bitcast_ln28_18 = bitcast float %conv_1_out_load_9 to i32" [pool/pooling.cpp:28]   --->   Operation 760 'bitcast' 'bitcast_ln28_18' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 761 [1/1] (0.00ns)   --->   "%tmp_65 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_18, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 761 'partselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 762 [1/1] (0.00ns)   --->   "%trunc_ln28_18 = trunc i32 %bitcast_ln28_18 to i23" [pool/pooling.cpp:28]   --->   Operation 762 'trunc' 'trunc_ln28_18' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 763 [1/1] (0.00ns)   --->   "%bitcast_ln28_19 = bitcast float %max_1_9 to i32" [pool/pooling.cpp:28]   --->   Operation 763 'bitcast' 'bitcast_ln28_19' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 764 [1/1] (0.00ns)   --->   "%tmp_66 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_19, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 764 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 765 [1/1] (0.00ns)   --->   "%trunc_ln28_19 = trunc i32 %bitcast_ln28_19 to i23" [pool/pooling.cpp:28]   --->   Operation 765 'trunc' 'trunc_ln28_19' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 766 [1/1] (1.55ns)   --->   "%icmp_ln28_36 = icmp ne i8 %tmp_65, -1" [pool/pooling.cpp:28]   --->   Operation 766 'icmp' 'icmp_ln28_36' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 767 [1/1] (2.44ns)   --->   "%icmp_ln28_37 = icmp eq i23 %trunc_ln28_18, 0" [pool/pooling.cpp:28]   --->   Operation 767 'icmp' 'icmp_ln28_37' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 768 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%or_ln28_18 = or i1 %icmp_ln28_37, %icmp_ln28_36" [pool/pooling.cpp:28]   --->   Operation 768 'or' 'or_ln28_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 769 [1/1] (1.55ns)   --->   "%icmp_ln28_38 = icmp ne i8 %tmp_66, -1" [pool/pooling.cpp:28]   --->   Operation 769 'icmp' 'icmp_ln28_38' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 770 [1/1] (2.44ns)   --->   "%icmp_ln28_39 = icmp eq i23 %trunc_ln28_19, 0" [pool/pooling.cpp:28]   --->   Operation 770 'icmp' 'icmp_ln28_39' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 771 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%or_ln28_19 = or i1 %icmp_ln28_39, %icmp_ln28_38" [pool/pooling.cpp:28]   --->   Operation 771 'or' 'or_ln28_19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 772 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%and_ln28_18 = and i1 %or_ln28_18, %or_ln28_19" [pool/pooling.cpp:28]   --->   Operation 772 'and' 'and_ln28_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 773 [1/1] (6.78ns)   --->   "%tmp_67 = fcmp ogt float %conv_1_out_load_9, %max_1_9" [pool/pooling.cpp:28]   --->   Operation 773 'fcmp' 'tmp_67' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 774 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_19 = and i1 %and_ln28_18, %tmp_67" [pool/pooling.cpp:28]   --->   Operation 774 'and' 'and_ln28_19' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 775 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_9 = select i1 %and_ln28_19, float %conv_1_out_load_9, float %max_1_9" [pool/pooling.cpp:28]   --->   Operation 775 'select' 'select_ln28_9' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 776 [1/1] (0.00ns)   --->   "br label %31" [pool/pooling.cpp:23]   --->   Operation 776 'br' <Predicate = true> <Delay = 0.00>

State 43 <SV = 12> <Delay = 1.76>
ST_43 : Operation 777 [1/1] (0.00ns)   --->   "%c_0_10 = phi i4 [ 0, %Row_Loop9 ], [ %add_ln16_10, %Col_Loop_end10 ]" [pool/pooling.cpp:16]   --->   Operation 777 'phi' 'c_0_10' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 778 [1/1] (1.30ns)   --->   "%icmp_ln16_10 = icmp eq i4 %c_0_10, -3" [pool/pooling.cpp:16]   --->   Operation 778 'icmp' 'icmp_ln16_10' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 779 [1/1] (0.00ns)   --->   "%empty_65 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 779 'speclooptripcount' 'empty_65' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 780 [1/1] (1.73ns)   --->   "%add_ln16_10 = add i4 %c_0_10, 1" [pool/pooling.cpp:16]   --->   Operation 780 'add' 'add_ln16_10' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 781 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_10, label %Row_Loop10, label %Col_Loop_begin10" [pool/pooling.cpp:16]   --->   Operation 781 'br' <Predicate = true> <Delay = 0.00>
ST_43 : Operation 782 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 782 'specloopname' <Predicate = (!icmp_ln16_10)> <Delay = 0.00>
ST_43 : Operation 783 [1/1] (0.00ns)   --->   "%tmp_42 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 783 'specregionbegin' 'tmp_42' <Predicate = (!icmp_ln16_10)> <Delay = 0.00>
ST_43 : Operation 784 [1/1] (0.00ns)   --->   "%shl_ln26_s = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_10, i1 false)" [pool/pooling.cpp:26]   --->   Operation 784 'bitconcatenate' 'shl_ln26_s' <Predicate = (!icmp_ln16_10)> <Delay = 0.00>
ST_43 : Operation 785 [1/1] (1.76ns)   --->   "br label %33" [pool/pooling.cpp:20]   --->   Operation 785 'br' <Predicate = (!icmp_ln16_10)> <Delay = 1.76>
ST_43 : Operation 786 [1/1] (0.00ns)   --->   "%empty_64 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_38) nounwind" [pool/pooling.cpp:37]   --->   Operation 786 'specregionend' 'empty_64' <Predicate = (icmp_ln16_10)> <Delay = 0.00>
ST_43 : Operation 787 [1/1] (0.00ns)   --->   "%tmp_41 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 787 'specregionbegin' 'tmp_41' <Predicate = (icmp_ln16_10)> <Delay = 0.00>
ST_43 : Operation 788 [1/1] (1.76ns)   --->   "br label %35" [pool/pooling.cpp:16]   --->   Operation 788 'br' <Predicate = (icmp_ln16_10)> <Delay = 1.76>

State 44 <SV = 13> <Delay = 7.06>
ST_44 : Operation 789 [1/1] (0.00ns)   --->   "%max_0_10 = phi float [ 0x3810000000000000, %Col_Loop_begin10 ], [ %max_1_10, %Pool_Row_Loop_end10 ]" [pool/pooling.cpp:28]   --->   Operation 789 'phi' 'max_0_10' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 790 [1/1] (0.00ns)   --->   "%mpr_0_10 = phi i2 [ 0, %Col_Loop_begin10 ], [ %add_ln20_10, %Pool_Row_Loop_end10 ]" [pool/pooling.cpp:20]   --->   Operation 790 'phi' 'mpr_0_10' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 791 [1/1] (0.95ns)   --->   "%icmp_ln20_10 = icmp eq i2 %mpr_0_10, -2" [pool/pooling.cpp:20]   --->   Operation 791 'icmp' 'icmp_ln20_10' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 792 [1/1] (0.00ns)   --->   "%empty_67 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 792 'speclooptripcount' 'empty_67' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 793 [1/1] (1.56ns)   --->   "%add_ln20_10 = add i2 %mpr_0_10, 1" [pool/pooling.cpp:20]   --->   Operation 793 'add' 'add_ln20_10' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 794 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_10, label %Col_Loop_end10, label %Pool_Row_Loop_begin10" [pool/pooling.cpp:20]   --->   Operation 794 'br' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 795 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 795 'specloopname' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 796 [1/1] (0.00ns)   --->   "%tmp_46 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 796 'specregionbegin' 'tmp_46' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 797 [1/1] (0.00ns)   --->   "%or_ln25_4 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 -3, i2 %mpr_0_10)" [pool/pooling.cpp:25]   --->   Operation 797 'bitconcatenate' 'or_ln25_4' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 798 [1/1] (0.00ns)   --->   "%zext_ln28_36 = zext i5 %or_ln25_4 to i10" [pool/pooling.cpp:28]   --->   Operation 798 'zext' 'zext_ln28_36' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 799 [1/1] (3.78ns)   --->   "%mul_ln28_9 = mul i10 %zext_ln28_36, 26" [pool/pooling.cpp:28]   --->   Operation 799 'mul' 'mul_ln28_9' <Predicate = (!icmp_ln20_10)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 800 [1/1] (1.76ns)   --->   "br label %34" [pool/pooling.cpp:23]   --->   Operation 800 'br' <Predicate = (!icmp_ln20_10)> <Delay = 1.76>
ST_44 : Operation 801 [1/1] (0.00ns)   --->   "%tmp_96 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_10, i5 0)" [pool/pooling.cpp:35]   --->   Operation 801 'bitconcatenate' 'tmp_96' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 802 [1/1] (0.00ns)   --->   "%zext_ln35_20 = zext i9 %tmp_96 to i13" [pool/pooling.cpp:35]   --->   Operation 802 'zext' 'zext_ln35_20' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 803 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_19 = add i13 %zext_ln35_20, -4032" [pool/pooling.cpp:35]   --->   Operation 803 'add' 'add_ln35_19' <Predicate = (icmp_ln20_10)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 804 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_20 = add i13 %zext_ln14_4, %add_ln35_19" [pool/pooling.cpp:35]   --->   Operation 804 'add' 'add_ln35_20' <Predicate = (icmp_ln20_10)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_44 : Operation 805 [1/1] (0.00ns)   --->   "%zext_ln35_21 = zext i13 %add_ln35_20 to i64" [pool/pooling.cpp:35]   --->   Operation 805 'zext' 'zext_ln35_21' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 806 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_10 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_21" [pool/pooling.cpp:35]   --->   Operation 806 'getelementptr' 'max_pool_1_out_addr_10' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 807 [1/1] (3.25ns)   --->   "store float %max_0_10, float* %max_pool_1_out_addr_10, align 4" [pool/pooling.cpp:35]   --->   Operation 807 'store' <Predicate = (icmp_ln20_10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_44 : Operation 808 [1/1] (0.00ns)   --->   "%empty_66 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_42) nounwind" [pool/pooling.cpp:36]   --->   Operation 808 'specregionend' 'empty_66' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_44 : Operation 809 [1/1] (0.00ns)   --->   "br label %32" [pool/pooling.cpp:16]   --->   Operation 809 'br' <Predicate = (icmp_ln20_10)> <Delay = 0.00>

State 45 <SV = 14> <Delay = 8.70>
ST_45 : Operation 810 [1/1] (0.00ns)   --->   "%max_1_10 = phi float [ %max_0_10, %Pool_Row_Loop_begin10 ], [ %select_ln28_10, %._crit_edge.10 ]" [pool/pooling.cpp:28]   --->   Operation 810 'phi' 'max_1_10' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 811 [1/1] (0.00ns)   --->   "%mpc_0_10 = phi i2 [ 0, %Pool_Row_Loop_begin10 ], [ %add_ln23_10, %._crit_edge.10 ]" [pool/pooling.cpp:23]   --->   Operation 811 'phi' 'mpc_0_10' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 812 [1/1] (0.00ns)   --->   "%zext_ln23_10 = zext i2 %mpc_0_10 to i5" [pool/pooling.cpp:23]   --->   Operation 812 'zext' 'zext_ln23_10' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 813 [1/1] (0.95ns)   --->   "%icmp_ln23_10 = icmp eq i2 %mpc_0_10, -2" [pool/pooling.cpp:23]   --->   Operation 813 'icmp' 'icmp_ln23_10' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 814 [1/1] (0.00ns)   --->   "%empty_69 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 814 'speclooptripcount' 'empty_69' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 815 [1/1] (1.56ns)   --->   "%add_ln23_10 = add i2 %mpc_0_10, 1" [pool/pooling.cpp:23]   --->   Operation 815 'add' 'add_ln23_10' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 816 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_10, label %Pool_Row_Loop_end10, label %._crit_edge.10" [pool/pooling.cpp:23]   --->   Operation 816 'br' <Predicate = true> <Delay = 0.00>
ST_45 : Operation 817 [1/1] (1.78ns)   --->   "%add_ln26_10 = add i5 %shl_ln26_s, %zext_ln23_10" [pool/pooling.cpp:26]   --->   Operation 817 'add' 'add_ln26_10' <Predicate = (!icmp_ln23_10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 818 [1/1] (0.00ns)   --->   "%zext_ln28_41 = zext i5 %add_ln26_10 to i10" [pool/pooling.cpp:28]   --->   Operation 818 'zext' 'zext_ln28_41' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 819 [1/1] (1.73ns)   --->   "%add_ln28_20 = add i10 %zext_ln28_41, %mul_ln28_9" [pool/pooling.cpp:28]   --->   Operation 819 'add' 'add_ln28_20' <Predicate = (!icmp_ln23_10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 820 [1/1] (0.00ns)   --->   "%tmp_99 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_20, i5 0)" [pool/pooling.cpp:28]   --->   Operation 820 'bitconcatenate' 'tmp_99' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 821 [1/1] (0.00ns)   --->   "%zext_ln28_42 = zext i15 %tmp_99 to i16" [pool/pooling.cpp:28]   --->   Operation 821 'zext' 'zext_ln28_42' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 822 [1/1] (1.94ns)   --->   "%add_ln28_21 = add i16 %zext_ln14_3, %zext_ln28_42" [pool/pooling.cpp:28]   --->   Operation 822 'add' 'add_ln28_21' <Predicate = (!icmp_ln23_10)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_45 : Operation 823 [1/1] (0.00ns)   --->   "%zext_ln28_43 = zext i16 %add_ln28_21 to i64" [pool/pooling.cpp:28]   --->   Operation 823 'zext' 'zext_ln28_43' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 824 [1/1] (0.00ns)   --->   "%conv_1_out_addr_10 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_43" [pool/pooling.cpp:28]   --->   Operation 824 'getelementptr' 'conv_1_out_addr_10' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 825 [2/2] (3.25ns)   --->   "%conv_1_out_load_10 = load float* %conv_1_out_addr_10, align 4" [pool/pooling.cpp:28]   --->   Operation 825 'load' 'conv_1_out_load_10' <Predicate = (!icmp_ln23_10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_45 : Operation 826 [1/1] (0.00ns)   --->   "%empty_68 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_46) nounwind" [pool/pooling.cpp:33]   --->   Operation 826 'specregionend' 'empty_68' <Predicate = (icmp_ln23_10)> <Delay = 0.00>
ST_45 : Operation 827 [1/1] (0.00ns)   --->   "br label %33" [pool/pooling.cpp:20]   --->   Operation 827 'br' <Predicate = (icmp_ln23_10)> <Delay = 0.00>

State 46 <SV = 15> <Delay = 11.7>
ST_46 : Operation 828 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 828 'specloopname' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 829 [1/2] (3.25ns)   --->   "%conv_1_out_load_10 = load float* %conv_1_out_addr_10, align 4" [pool/pooling.cpp:28]   --->   Operation 829 'load' 'conv_1_out_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_46 : Operation 830 [1/1] (0.00ns)   --->   "%bitcast_ln28_20 = bitcast float %conv_1_out_load_10 to i32" [pool/pooling.cpp:28]   --->   Operation 830 'bitcast' 'bitcast_ln28_20' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 831 [1/1] (0.00ns)   --->   "%tmp_68 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_20, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 831 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 832 [1/1] (0.00ns)   --->   "%trunc_ln28_20 = trunc i32 %bitcast_ln28_20 to i23" [pool/pooling.cpp:28]   --->   Operation 832 'trunc' 'trunc_ln28_20' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 833 [1/1] (0.00ns)   --->   "%bitcast_ln28_21 = bitcast float %max_1_10 to i32" [pool/pooling.cpp:28]   --->   Operation 833 'bitcast' 'bitcast_ln28_21' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 834 [1/1] (0.00ns)   --->   "%tmp_69 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_21, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 834 'partselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 835 [1/1] (0.00ns)   --->   "%trunc_ln28_21 = trunc i32 %bitcast_ln28_21 to i23" [pool/pooling.cpp:28]   --->   Operation 835 'trunc' 'trunc_ln28_21' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 836 [1/1] (1.55ns)   --->   "%icmp_ln28_40 = icmp ne i8 %tmp_68, -1" [pool/pooling.cpp:28]   --->   Operation 836 'icmp' 'icmp_ln28_40' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 837 [1/1] (2.44ns)   --->   "%icmp_ln28_41 = icmp eq i23 %trunc_ln28_20, 0" [pool/pooling.cpp:28]   --->   Operation 837 'icmp' 'icmp_ln28_41' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 838 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%or_ln28_20 = or i1 %icmp_ln28_41, %icmp_ln28_40" [pool/pooling.cpp:28]   --->   Operation 838 'or' 'or_ln28_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 839 [1/1] (1.55ns)   --->   "%icmp_ln28_42 = icmp ne i8 %tmp_69, -1" [pool/pooling.cpp:28]   --->   Operation 839 'icmp' 'icmp_ln28_42' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 840 [1/1] (2.44ns)   --->   "%icmp_ln28_43 = icmp eq i23 %trunc_ln28_21, 0" [pool/pooling.cpp:28]   --->   Operation 840 'icmp' 'icmp_ln28_43' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 841 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%or_ln28_21 = or i1 %icmp_ln28_43, %icmp_ln28_42" [pool/pooling.cpp:28]   --->   Operation 841 'or' 'or_ln28_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 842 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%and_ln28_20 = and i1 %or_ln28_20, %or_ln28_21" [pool/pooling.cpp:28]   --->   Operation 842 'and' 'and_ln28_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 843 [1/1] (6.78ns)   --->   "%tmp_70 = fcmp ogt float %conv_1_out_load_10, %max_1_10" [pool/pooling.cpp:28]   --->   Operation 843 'fcmp' 'tmp_70' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 844 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_21 = and i1 %and_ln28_20, %tmp_70" [pool/pooling.cpp:28]   --->   Operation 844 'and' 'and_ln28_21' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 845 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_10 = select i1 %and_ln28_21, float %conv_1_out_load_10, float %max_1_10" [pool/pooling.cpp:28]   --->   Operation 845 'select' 'select_ln28_10' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_46 : Operation 846 [1/1] (0.00ns)   --->   "br label %34" [pool/pooling.cpp:23]   --->   Operation 846 'br' <Predicate = true> <Delay = 0.00>

State 47 <SV = 13> <Delay = 1.76>
ST_47 : Operation 847 [1/1] (0.00ns)   --->   "%c_0_11 = phi i4 [ 0, %Row_Loop10 ], [ %add_ln16_11, %Col_Loop_end11 ]" [pool/pooling.cpp:16]   --->   Operation 847 'phi' 'c_0_11' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 848 [1/1] (1.30ns)   --->   "%icmp_ln16_11 = icmp eq i4 %c_0_11, -3" [pool/pooling.cpp:16]   --->   Operation 848 'icmp' 'icmp_ln16_11' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 849 [1/1] (0.00ns)   --->   "%empty_71 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 849 'speclooptripcount' 'empty_71' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 850 [1/1] (1.73ns)   --->   "%add_ln16_11 = add i4 %c_0_11, 1" [pool/pooling.cpp:16]   --->   Operation 850 'add' 'add_ln16_11' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 851 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_11, label %Row_Loop11, label %Col_Loop_begin11" [pool/pooling.cpp:16]   --->   Operation 851 'br' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 852 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 852 'specloopname' <Predicate = (!icmp_ln16_11)> <Delay = 0.00>
ST_47 : Operation 853 [1/1] (0.00ns)   --->   "%tmp_45 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 853 'specregionbegin' 'tmp_45' <Predicate = (!icmp_ln16_11)> <Delay = 0.00>
ST_47 : Operation 854 [1/1] (0.00ns)   --->   "%shl_ln26_10 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_11, i1 false)" [pool/pooling.cpp:26]   --->   Operation 854 'bitconcatenate' 'shl_ln26_10' <Predicate = (!icmp_ln16_11)> <Delay = 0.00>
ST_47 : Operation 855 [1/1] (1.76ns)   --->   "br label %36" [pool/pooling.cpp:20]   --->   Operation 855 'br' <Predicate = (!icmp_ln16_11)> <Delay = 1.76>
ST_47 : Operation 856 [1/1] (0.00ns)   --->   "%empty_70 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_41) nounwind" [pool/pooling.cpp:37]   --->   Operation 856 'specregionend' 'empty_70' <Predicate = (icmp_ln16_11)> <Delay = 0.00>
ST_47 : Operation 857 [1/1] (0.00ns)   --->   "%tmp_44 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 857 'specregionbegin' 'tmp_44' <Predicate = (icmp_ln16_11)> <Delay = 0.00>
ST_47 : Operation 858 [1/1] (1.76ns)   --->   "br label %38" [pool/pooling.cpp:16]   --->   Operation 858 'br' <Predicate = (icmp_ln16_11)> <Delay = 1.76>

State 48 <SV = 14> <Delay = 7.06>
ST_48 : Operation 859 [1/1] (0.00ns)   --->   "%max_0_11 = phi float [ 0x3810000000000000, %Col_Loop_begin11 ], [ %max_1_11, %Pool_Row_Loop_end11 ]" [pool/pooling.cpp:28]   --->   Operation 859 'phi' 'max_0_11' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 860 [1/1] (0.00ns)   --->   "%mpr_0_11 = phi i2 [ 0, %Col_Loop_begin11 ], [ %add_ln20_11, %Pool_Row_Loop_end11 ]" [pool/pooling.cpp:20]   --->   Operation 860 'phi' 'mpr_0_11' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 861 [1/1] (0.00ns)   --->   "%zext_ln20_2 = zext i2 %mpr_0_11 to i5" [pool/pooling.cpp:20]   --->   Operation 861 'zext' 'zext_ln20_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 862 [1/1] (0.95ns)   --->   "%icmp_ln20_11 = icmp eq i2 %mpr_0_11, -2" [pool/pooling.cpp:20]   --->   Operation 862 'icmp' 'icmp_ln20_11' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 863 [1/1] (0.00ns)   --->   "%empty_73 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 863 'speclooptripcount' 'empty_73' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 864 [1/1] (1.56ns)   --->   "%add_ln20_11 = add i2 %mpr_0_11, 1" [pool/pooling.cpp:20]   --->   Operation 864 'add' 'add_ln20_11' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 865 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_11, label %Col_Loop_end11, label %Pool_Row_Loop_begin11" [pool/pooling.cpp:20]   --->   Operation 865 'br' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 866 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 866 'specloopname' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 867 [1/1] (0.00ns)   --->   "%tmp_48 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 867 'specregionbegin' 'tmp_48' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 868 [1/1] (1.78ns)   --->   "%add_ln25_2 = add i5 %zext_ln20_2, -10" [pool/pooling.cpp:25]   --->   Operation 868 'add' 'add_ln25_2' <Predicate = (!icmp_ln20_11)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 869 [1/1] (0.00ns)   --->   "%zext_ln28_40 = zext i5 %add_ln25_2 to i10" [pool/pooling.cpp:28]   --->   Operation 869 'zext' 'zext_ln28_40' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 870 [1/1] (3.78ns)   --->   "%mul_ln28_10 = mul i10 %zext_ln28_40, 26" [pool/pooling.cpp:28]   --->   Operation 870 'mul' 'mul_ln28_10' <Predicate = (!icmp_ln20_11)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 871 [1/1] (1.76ns)   --->   "br label %37" [pool/pooling.cpp:23]   --->   Operation 871 'br' <Predicate = (!icmp_ln20_11)> <Delay = 1.76>
ST_48 : Operation 872 [1/1] (0.00ns)   --->   "%tmp_98 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_11, i5 0)" [pool/pooling.cpp:35]   --->   Operation 872 'bitconcatenate' 'tmp_98' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 873 [1/1] (0.00ns)   --->   "%zext_ln35_22 = zext i9 %tmp_98 to i13" [pool/pooling.cpp:35]   --->   Operation 873 'zext' 'zext_ln35_22' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 874 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_21 = add i13 %zext_ln35_22, -3616" [pool/pooling.cpp:35]   --->   Operation 874 'add' 'add_ln35_21' <Predicate = (icmp_ln20_11)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 875 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_22 = add i13 %zext_ln14_4, %add_ln35_21" [pool/pooling.cpp:35]   --->   Operation 875 'add' 'add_ln35_22' <Predicate = (icmp_ln20_11)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_48 : Operation 876 [1/1] (0.00ns)   --->   "%zext_ln35_23 = zext i13 %add_ln35_22 to i64" [pool/pooling.cpp:35]   --->   Operation 876 'zext' 'zext_ln35_23' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 877 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_11 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_23" [pool/pooling.cpp:35]   --->   Operation 877 'getelementptr' 'max_pool_1_out_addr_11' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 878 [1/1] (3.25ns)   --->   "store float %max_0_11, float* %max_pool_1_out_addr_11, align 4" [pool/pooling.cpp:35]   --->   Operation 878 'store' <Predicate = (icmp_ln20_11)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_48 : Operation 879 [1/1] (0.00ns)   --->   "%empty_72 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_45) nounwind" [pool/pooling.cpp:36]   --->   Operation 879 'specregionend' 'empty_72' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_48 : Operation 880 [1/1] (0.00ns)   --->   "br label %35" [pool/pooling.cpp:16]   --->   Operation 880 'br' <Predicate = (icmp_ln20_11)> <Delay = 0.00>

State 49 <SV = 15> <Delay = 8.70>
ST_49 : Operation 881 [1/1] (0.00ns)   --->   "%max_1_11 = phi float [ %max_0_11, %Pool_Row_Loop_begin11 ], [ %select_ln28_11, %._crit_edge.11 ]" [pool/pooling.cpp:28]   --->   Operation 881 'phi' 'max_1_11' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 882 [1/1] (0.00ns)   --->   "%mpc_0_11 = phi i2 [ 0, %Pool_Row_Loop_begin11 ], [ %add_ln23_11, %._crit_edge.11 ]" [pool/pooling.cpp:23]   --->   Operation 882 'phi' 'mpc_0_11' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 883 [1/1] (0.00ns)   --->   "%zext_ln23_11 = zext i2 %mpc_0_11 to i5" [pool/pooling.cpp:23]   --->   Operation 883 'zext' 'zext_ln23_11' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 884 [1/1] (0.95ns)   --->   "%icmp_ln23_11 = icmp eq i2 %mpc_0_11, -2" [pool/pooling.cpp:23]   --->   Operation 884 'icmp' 'icmp_ln23_11' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 885 [1/1] (0.00ns)   --->   "%empty_75 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 885 'speclooptripcount' 'empty_75' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 886 [1/1] (1.56ns)   --->   "%add_ln23_11 = add i2 %mpc_0_11, 1" [pool/pooling.cpp:23]   --->   Operation 886 'add' 'add_ln23_11' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 887 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_11, label %Pool_Row_Loop_end11, label %._crit_edge.11" [pool/pooling.cpp:23]   --->   Operation 887 'br' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 888 [1/1] (1.78ns)   --->   "%add_ln26_11 = add i5 %shl_ln26_10, %zext_ln23_11" [pool/pooling.cpp:26]   --->   Operation 888 'add' 'add_ln26_11' <Predicate = (!icmp_ln23_11)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 889 [1/1] (0.00ns)   --->   "%zext_ln28_45 = zext i5 %add_ln26_11 to i10" [pool/pooling.cpp:28]   --->   Operation 889 'zext' 'zext_ln28_45' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 890 [1/1] (1.73ns)   --->   "%add_ln28_22 = add i10 %zext_ln28_45, %mul_ln28_10" [pool/pooling.cpp:28]   --->   Operation 890 'add' 'add_ln28_22' <Predicate = (!icmp_ln23_11)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 891 [1/1] (0.00ns)   --->   "%tmp_101 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_22, i5 0)" [pool/pooling.cpp:28]   --->   Operation 891 'bitconcatenate' 'tmp_101' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 892 [1/1] (0.00ns)   --->   "%zext_ln28_46 = zext i15 %tmp_101 to i16" [pool/pooling.cpp:28]   --->   Operation 892 'zext' 'zext_ln28_46' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 893 [1/1] (1.94ns)   --->   "%add_ln28_23 = add i16 %zext_ln14_3, %zext_ln28_46" [pool/pooling.cpp:28]   --->   Operation 893 'add' 'add_ln28_23' <Predicate = (!icmp_ln23_11)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 894 [1/1] (0.00ns)   --->   "%zext_ln28_47 = zext i16 %add_ln28_23 to i64" [pool/pooling.cpp:28]   --->   Operation 894 'zext' 'zext_ln28_47' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 895 [1/1] (0.00ns)   --->   "%conv_1_out_addr_11 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_47" [pool/pooling.cpp:28]   --->   Operation 895 'getelementptr' 'conv_1_out_addr_11' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 896 [2/2] (3.25ns)   --->   "%conv_1_out_load_11 = load float* %conv_1_out_addr_11, align 4" [pool/pooling.cpp:28]   --->   Operation 896 'load' 'conv_1_out_load_11' <Predicate = (!icmp_ln23_11)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_49 : Operation 897 [1/1] (0.00ns)   --->   "%empty_74 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_48) nounwind" [pool/pooling.cpp:33]   --->   Operation 897 'specregionend' 'empty_74' <Predicate = (icmp_ln23_11)> <Delay = 0.00>
ST_49 : Operation 898 [1/1] (0.00ns)   --->   "br label %36" [pool/pooling.cpp:20]   --->   Operation 898 'br' <Predicate = (icmp_ln23_11)> <Delay = 0.00>

State 50 <SV = 16> <Delay = 11.7>
ST_50 : Operation 899 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 899 'specloopname' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 900 [1/2] (3.25ns)   --->   "%conv_1_out_load_11 = load float* %conv_1_out_addr_11, align 4" [pool/pooling.cpp:28]   --->   Operation 900 'load' 'conv_1_out_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_50 : Operation 901 [1/1] (0.00ns)   --->   "%bitcast_ln28_22 = bitcast float %conv_1_out_load_11 to i32" [pool/pooling.cpp:28]   --->   Operation 901 'bitcast' 'bitcast_ln28_22' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 902 [1/1] (0.00ns)   --->   "%tmp_71 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_22, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 902 'partselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 903 [1/1] (0.00ns)   --->   "%trunc_ln28_22 = trunc i32 %bitcast_ln28_22 to i23" [pool/pooling.cpp:28]   --->   Operation 903 'trunc' 'trunc_ln28_22' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 904 [1/1] (0.00ns)   --->   "%bitcast_ln28_23 = bitcast float %max_1_11 to i32" [pool/pooling.cpp:28]   --->   Operation 904 'bitcast' 'bitcast_ln28_23' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 905 [1/1] (0.00ns)   --->   "%tmp_72 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_23, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 905 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 906 [1/1] (0.00ns)   --->   "%trunc_ln28_23 = trunc i32 %bitcast_ln28_23 to i23" [pool/pooling.cpp:28]   --->   Operation 906 'trunc' 'trunc_ln28_23' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 907 [1/1] (1.55ns)   --->   "%icmp_ln28_44 = icmp ne i8 %tmp_71, -1" [pool/pooling.cpp:28]   --->   Operation 907 'icmp' 'icmp_ln28_44' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 908 [1/1] (2.44ns)   --->   "%icmp_ln28_45 = icmp eq i23 %trunc_ln28_22, 0" [pool/pooling.cpp:28]   --->   Operation 908 'icmp' 'icmp_ln28_45' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 909 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_22 = or i1 %icmp_ln28_45, %icmp_ln28_44" [pool/pooling.cpp:28]   --->   Operation 909 'or' 'or_ln28_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 910 [1/1] (1.55ns)   --->   "%icmp_ln28_46 = icmp ne i8 %tmp_72, -1" [pool/pooling.cpp:28]   --->   Operation 910 'icmp' 'icmp_ln28_46' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 911 [1/1] (2.44ns)   --->   "%icmp_ln28_47 = icmp eq i23 %trunc_ln28_23, 0" [pool/pooling.cpp:28]   --->   Operation 911 'icmp' 'icmp_ln28_47' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 912 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_23 = or i1 %icmp_ln28_47, %icmp_ln28_46" [pool/pooling.cpp:28]   --->   Operation 912 'or' 'or_ln28_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 913 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%and_ln28_22 = and i1 %or_ln28_22, %or_ln28_23" [pool/pooling.cpp:28]   --->   Operation 913 'and' 'and_ln28_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 914 [1/1] (6.78ns)   --->   "%tmp_73 = fcmp ogt float %conv_1_out_load_11, %max_1_11" [pool/pooling.cpp:28]   --->   Operation 914 'fcmp' 'tmp_73' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 915 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_23 = and i1 %and_ln28_22, %tmp_73" [pool/pooling.cpp:28]   --->   Operation 915 'and' 'and_ln28_23' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 916 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_11 = select i1 %and_ln28_23, float %conv_1_out_load_11, float %max_1_11" [pool/pooling.cpp:28]   --->   Operation 916 'select' 'select_ln28_11' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_50 : Operation 917 [1/1] (0.00ns)   --->   "br label %37" [pool/pooling.cpp:23]   --->   Operation 917 'br' <Predicate = true> <Delay = 0.00>

State 51 <SV = 14> <Delay = 1.76>
ST_51 : Operation 918 [1/1] (0.00ns)   --->   "%c_0_12 = phi i4 [ 0, %Row_Loop11 ], [ %add_ln16_12, %Col_Loop_end12 ]" [pool/pooling.cpp:16]   --->   Operation 918 'phi' 'c_0_12' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 919 [1/1] (1.30ns)   --->   "%icmp_ln16_12 = icmp eq i4 %c_0_12, -3" [pool/pooling.cpp:16]   --->   Operation 919 'icmp' 'icmp_ln16_12' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 920 [1/1] (0.00ns)   --->   "%empty_77 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 920 'speclooptripcount' 'empty_77' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 921 [1/1] (1.73ns)   --->   "%add_ln16_12 = add i4 %c_0_12, 1" [pool/pooling.cpp:16]   --->   Operation 921 'add' 'add_ln16_12' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 922 [1/1] (0.00ns)   --->   "br i1 %icmp_ln16_12, label %Row_Loop_end, label %Col_Loop_begin12" [pool/pooling.cpp:16]   --->   Operation 922 'br' <Predicate = true> <Delay = 0.00>
ST_51 : Operation 923 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 923 'specloopname' <Predicate = (!icmp_ln16_12)> <Delay = 0.00>
ST_51 : Operation 924 [1/1] (0.00ns)   --->   "%tmp_47 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pool/pooling.cpp:17]   --->   Operation 924 'specregionbegin' 'tmp_47' <Predicate = (!icmp_ln16_12)> <Delay = 0.00>
ST_51 : Operation 925 [1/1] (0.00ns)   --->   "%shl_ln26_11 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0_12, i1 false)" [pool/pooling.cpp:26]   --->   Operation 925 'bitconcatenate' 'shl_ln26_11' <Predicate = (!icmp_ln16_12)> <Delay = 0.00>
ST_51 : Operation 926 [1/1] (1.76ns)   --->   "br label %39" [pool/pooling.cpp:20]   --->   Operation 926 'br' <Predicate = (!icmp_ln16_12)> <Delay = 1.76>
ST_51 : Operation 927 [1/1] (0.00ns)   --->   "%empty_76 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str1, i32 %tmp_44) nounwind" [pool/pooling.cpp:37]   --->   Operation 927 'specregionend' 'empty_76' <Predicate = (icmp_ln16_12)> <Delay = 0.00>
ST_51 : Operation 928 [1/1] (0.00ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 928 'br' <Predicate = (icmp_ln16_12)> <Delay = 0.00>

State 52 <SV = 15> <Delay = 7.06>
ST_52 : Operation 929 [1/1] (0.00ns)   --->   "%max_0_12 = phi float [ 0x3810000000000000, %Col_Loop_begin12 ], [ %max_1_12, %Pool_Row_Loop_end12 ]" [pool/pooling.cpp:28]   --->   Operation 929 'phi' 'max_0_12' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 930 [1/1] (0.00ns)   --->   "%mpr_0_12 = phi i2 [ 0, %Col_Loop_begin12 ], [ %add_ln20_12, %Pool_Row_Loop_end12 ]" [pool/pooling.cpp:20]   --->   Operation 930 'phi' 'mpr_0_12' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 931 [1/1] (0.95ns)   --->   "%icmp_ln20_12 = icmp eq i2 %mpr_0_12, -2" [pool/pooling.cpp:20]   --->   Operation 931 'icmp' 'icmp_ln20_12' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 932 [1/1] (0.00ns)   --->   "%empty_79 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 932 'speclooptripcount' 'empty_79' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 933 [1/1] (1.56ns)   --->   "%add_ln20_12 = add i2 %mpr_0_12, 1" [pool/pooling.cpp:20]   --->   Operation 933 'add' 'add_ln20_12' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 934 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_12, label %Col_Loop_end12, label %Pool_Row_Loop_begin12" [pool/pooling.cpp:20]   --->   Operation 934 'br' <Predicate = true> <Delay = 0.00>
ST_52 : Operation 935 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 935 'specloopname' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 936 [1/1] (0.00ns)   --->   "%tmp_49 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 936 'specregionbegin' 'tmp_49' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 937 [1/1] (0.00ns)   --->   "%or_ln25_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 -2, i2 %mpr_0_12)" [pool/pooling.cpp:25]   --->   Operation 937 'bitconcatenate' 'or_ln25_5' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 938 [1/1] (0.00ns)   --->   "%sext_ln25_3 = sext i4 %or_ln25_5 to i5" [pool/pooling.cpp:25]   --->   Operation 938 'sext' 'sext_ln25_3' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 939 [1/1] (0.00ns)   --->   "%zext_ln28_44 = zext i5 %sext_ln25_3 to i10" [pool/pooling.cpp:28]   --->   Operation 939 'zext' 'zext_ln28_44' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 940 [1/1] (3.78ns)   --->   "%mul_ln28_11 = mul i10 %zext_ln28_44, 26" [pool/pooling.cpp:28]   --->   Operation 940 'mul' 'mul_ln28_11' <Predicate = (!icmp_ln20_12)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 941 [1/1] (1.76ns)   --->   "br label %40" [pool/pooling.cpp:23]   --->   Operation 941 'br' <Predicate = (!icmp_ln20_12)> <Delay = 1.76>
ST_52 : Operation 942 [1/1] (0.00ns)   --->   "%tmp_100 = call i9 @_ssdm_op_BitConcatenate.i9.i4.i5(i4 %c_0_12, i5 0)" [pool/pooling.cpp:35]   --->   Operation 942 'bitconcatenate' 'tmp_100' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 943 [1/1] (0.00ns)   --->   "%zext_ln35_24 = zext i9 %tmp_100 to i13" [pool/pooling.cpp:35]   --->   Operation 943 'zext' 'zext_ln35_24' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 944 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_23 = add i13 %zext_ln35_24, -3200" [pool/pooling.cpp:35]   --->   Operation 944 'add' 'add_ln35_23' <Predicate = (icmp_ln20_12)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 945 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_24 = add i13 %zext_ln14_4, %add_ln35_23" [pool/pooling.cpp:35]   --->   Operation 945 'add' 'add_ln35_24' <Predicate = (icmp_ln20_12)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_52 : Operation 946 [1/1] (0.00ns)   --->   "%zext_ln35_25 = zext i13 %add_ln35_24 to i64" [pool/pooling.cpp:35]   --->   Operation 946 'zext' 'zext_ln35_25' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 947 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_12 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_25" [pool/pooling.cpp:35]   --->   Operation 947 'getelementptr' 'max_pool_1_out_addr_12' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 948 [1/1] (3.25ns)   --->   "store float %max_0_12, float* %max_pool_1_out_addr_12, align 4" [pool/pooling.cpp:35]   --->   Operation 948 'store' <Predicate = (icmp_ln20_12)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_52 : Operation 949 [1/1] (0.00ns)   --->   "%empty_78 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_47) nounwind" [pool/pooling.cpp:36]   --->   Operation 949 'specregionend' 'empty_78' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_52 : Operation 950 [1/1] (0.00ns)   --->   "br label %38" [pool/pooling.cpp:16]   --->   Operation 950 'br' <Predicate = (icmp_ln20_12)> <Delay = 0.00>

State 53 <SV = 16> <Delay = 8.70>
ST_53 : Operation 951 [1/1] (0.00ns)   --->   "%max_1_12 = phi float [ %max_0_12, %Pool_Row_Loop_begin12 ], [ %select_ln28_12, %._crit_edge.12 ]" [pool/pooling.cpp:28]   --->   Operation 951 'phi' 'max_1_12' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 952 [1/1] (0.00ns)   --->   "%mpc_0_12 = phi i2 [ 0, %Pool_Row_Loop_begin12 ], [ %add_ln23_12, %._crit_edge.12 ]" [pool/pooling.cpp:23]   --->   Operation 952 'phi' 'mpc_0_12' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 953 [1/1] (0.00ns)   --->   "%zext_ln23_12 = zext i2 %mpc_0_12 to i5" [pool/pooling.cpp:23]   --->   Operation 953 'zext' 'zext_ln23_12' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 954 [1/1] (0.95ns)   --->   "%icmp_ln23_12 = icmp eq i2 %mpc_0_12, -2" [pool/pooling.cpp:23]   --->   Operation 954 'icmp' 'icmp_ln23_12' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 955 [1/1] (0.00ns)   --->   "%empty_81 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 955 'speclooptripcount' 'empty_81' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 956 [1/1] (1.56ns)   --->   "%add_ln23_12 = add i2 %mpc_0_12, 1" [pool/pooling.cpp:23]   --->   Operation 956 'add' 'add_ln23_12' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 957 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_12, label %Pool_Row_Loop_end12, label %._crit_edge.12" [pool/pooling.cpp:23]   --->   Operation 957 'br' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 958 [1/1] (1.78ns)   --->   "%add_ln26_12 = add i5 %shl_ln26_11, %zext_ln23_12" [pool/pooling.cpp:26]   --->   Operation 958 'add' 'add_ln26_12' <Predicate = (!icmp_ln23_12)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 959 [1/1] (0.00ns)   --->   "%zext_ln28_48 = zext i5 %add_ln26_12 to i10" [pool/pooling.cpp:28]   --->   Operation 959 'zext' 'zext_ln28_48' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 960 [1/1] (1.73ns)   --->   "%add_ln28_24 = add i10 %zext_ln28_48, %mul_ln28_11" [pool/pooling.cpp:28]   --->   Operation 960 'add' 'add_ln28_24' <Predicate = (!icmp_ln23_12)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 961 [1/1] (0.00ns)   --->   "%tmp_102 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_24, i5 0)" [pool/pooling.cpp:28]   --->   Operation 961 'bitconcatenate' 'tmp_102' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 962 [1/1] (0.00ns)   --->   "%zext_ln28_49 = zext i15 %tmp_102 to i16" [pool/pooling.cpp:28]   --->   Operation 962 'zext' 'zext_ln28_49' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 963 [1/1] (1.94ns)   --->   "%add_ln28_25 = add i16 %zext_ln14_3, %zext_ln28_49" [pool/pooling.cpp:28]   --->   Operation 963 'add' 'add_ln28_25' <Predicate = (!icmp_ln23_12)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 964 [1/1] (0.00ns)   --->   "%zext_ln28_50 = zext i16 %add_ln28_25 to i64" [pool/pooling.cpp:28]   --->   Operation 964 'zext' 'zext_ln28_50' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 965 [1/1] (0.00ns)   --->   "%conv_1_out_addr_12 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_50" [pool/pooling.cpp:28]   --->   Operation 965 'getelementptr' 'conv_1_out_addr_12' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 966 [2/2] (3.25ns)   --->   "%conv_1_out_load_12 = load float* %conv_1_out_addr_12, align 4" [pool/pooling.cpp:28]   --->   Operation 966 'load' 'conv_1_out_load_12' <Predicate = (!icmp_ln23_12)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_53 : Operation 967 [1/1] (0.00ns)   --->   "%empty_80 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_49) nounwind" [pool/pooling.cpp:33]   --->   Operation 967 'specregionend' 'empty_80' <Predicate = (icmp_ln23_12)> <Delay = 0.00>
ST_53 : Operation 968 [1/1] (0.00ns)   --->   "br label %39" [pool/pooling.cpp:20]   --->   Operation 968 'br' <Predicate = (icmp_ln23_12)> <Delay = 0.00>

State 54 <SV = 17> <Delay = 11.7>
ST_54 : Operation 969 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 969 'specloopname' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 970 [1/2] (3.25ns)   --->   "%conv_1_out_load_12 = load float* %conv_1_out_addr_12, align 4" [pool/pooling.cpp:28]   --->   Operation 970 'load' 'conv_1_out_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_54 : Operation 971 [1/1] (0.00ns)   --->   "%bitcast_ln28_24 = bitcast float %conv_1_out_load_12 to i32" [pool/pooling.cpp:28]   --->   Operation 971 'bitcast' 'bitcast_ln28_24' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 972 [1/1] (0.00ns)   --->   "%tmp_74 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_24, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 972 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 973 [1/1] (0.00ns)   --->   "%trunc_ln28_24 = trunc i32 %bitcast_ln28_24 to i23" [pool/pooling.cpp:28]   --->   Operation 973 'trunc' 'trunc_ln28_24' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 974 [1/1] (0.00ns)   --->   "%bitcast_ln28_25 = bitcast float %max_1_12 to i32" [pool/pooling.cpp:28]   --->   Operation 974 'bitcast' 'bitcast_ln28_25' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 975 [1/1] (0.00ns)   --->   "%tmp_75 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_25, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 975 'partselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 976 [1/1] (0.00ns)   --->   "%trunc_ln28_25 = trunc i32 %bitcast_ln28_25 to i23" [pool/pooling.cpp:28]   --->   Operation 976 'trunc' 'trunc_ln28_25' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 977 [1/1] (1.55ns)   --->   "%icmp_ln28_48 = icmp ne i8 %tmp_74, -1" [pool/pooling.cpp:28]   --->   Operation 977 'icmp' 'icmp_ln28_48' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 978 [1/1] (2.44ns)   --->   "%icmp_ln28_49 = icmp eq i23 %trunc_ln28_24, 0" [pool/pooling.cpp:28]   --->   Operation 978 'icmp' 'icmp_ln28_49' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 979 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_24 = or i1 %icmp_ln28_49, %icmp_ln28_48" [pool/pooling.cpp:28]   --->   Operation 979 'or' 'or_ln28_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 980 [1/1] (1.55ns)   --->   "%icmp_ln28_50 = icmp ne i8 %tmp_75, -1" [pool/pooling.cpp:28]   --->   Operation 980 'icmp' 'icmp_ln28_50' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 981 [1/1] (2.44ns)   --->   "%icmp_ln28_51 = icmp eq i23 %trunc_ln28_25, 0" [pool/pooling.cpp:28]   --->   Operation 981 'icmp' 'icmp_ln28_51' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 982 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_25 = or i1 %icmp_ln28_51, %icmp_ln28_50" [pool/pooling.cpp:28]   --->   Operation 982 'or' 'or_ln28_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 983 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%and_ln28_24 = and i1 %or_ln28_24, %or_ln28_25" [pool/pooling.cpp:28]   --->   Operation 983 'and' 'and_ln28_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 984 [1/1] (6.78ns)   --->   "%tmp_76 = fcmp ogt float %conv_1_out_load_12, %max_1_12" [pool/pooling.cpp:28]   --->   Operation 984 'fcmp' 'tmp_76' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 985 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_25 = and i1 %and_ln28_24, %tmp_76" [pool/pooling.cpp:28]   --->   Operation 985 'and' 'and_ln28_25' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 986 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_12 = select i1 %and_ln28_25, float %conv_1_out_load_12, float %max_1_12" [pool/pooling.cpp:28]   --->   Operation 986 'select' 'select_ln28_12' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_54 : Operation 987 [1/1] (0.00ns)   --->   "br label %40" [pool/pooling.cpp:23]   --->   Operation 987 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (1.77 ns)

 <State 2>: 1.83ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (0 ns)
	'add' operation ('f', pool/pooling.cpp:10) [11]  (1.83 ns)

 <State 3>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_0', pool/pooling.cpp:28) with incoming values : ('select_ln28', pool/pooling.cpp:28) [34]  (1.77 ns)

 <State 4>: 5.08ns
The critical path consists of the following:
	'add' operation ('add_ln35', pool/pooling.cpp:35) [88]  (1.82 ns)
	'getelementptr' operation ('max_pool_1_out_addr', pool/pooling.cpp:35) [90]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_0', pool/pooling.cpp:28 on array 'max_pool_1_out' [91]  (3.25 ns)

 <State 5>: 8.5ns
The critical path consists of the following:
	'phi' operation ('mpc_0_0', pool/pooling.cpp:23) with incoming values : ('add_ln23', pool/pooling.cpp:23) [48]  (0 ns)
	'add' operation ('add_ln26', pool/pooling.cpp:26) [56]  (1.78 ns)
	'add' operation ('add_ln28', pool/pooling.cpp:28) [58]  (1.83 ns)
	'add' operation ('add_ln28_1', pool/pooling.cpp:28) [61]  (1.64 ns)
	'getelementptr' operation ('conv_1_out_addr', pool/pooling.cpp:28) [63]  (0 ns)
	'load' operation ('conv_1_out_load', pool/pooling.cpp:28) on array 'conv_1_out' [64]  (3.25 ns)

 <State 6>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load', pool/pooling.cpp:28) on array 'conv_1_out' [64]  (3.25 ns)
	'fcmp' operation ('tmp_10', pool/pooling.cpp:28) [78]  (6.79 ns)
	'and' operation ('and_ln28_1', pool/pooling.cpp:28) [79]  (0.978 ns)
	'select' operation ('select_ln28', pool/pooling.cpp:28) [80]  (0.698 ns)

 <State 7>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_1', pool/pooling.cpp:28) with incoming values : ('select_ln28_1', pool/pooling.cpp:28) [110]  (1.77 ns)

 <State 8>: 6.98ns
The critical path consists of the following:
	'add' operation ('add_ln35_1', pool/pooling.cpp:35) [165]  (0 ns)
	'add' operation ('add_ln35_2', pool/pooling.cpp:35) [166]  (3.73 ns)
	'getelementptr' operation ('max_pool_1_out_addr_1', pool/pooling.cpp:35) [168]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_1', pool/pooling.cpp:28 on array 'max_pool_1_out' [169]  (3.25 ns)

 <State 9>: 8.45ns
The critical path consists of the following:
	'phi' operation ('mpc_0_1', pool/pooling.cpp:23) with incoming values : ('add_ln23_1', pool/pooling.cpp:23) [125]  (0 ns)
	'add' operation ('add_ln26_1', pool/pooling.cpp:26) [133]  (1.78 ns)
	'add' operation ('add_ln28_2', pool/pooling.cpp:28) [135]  (1.87 ns)
	'add' operation ('add_ln28_3', pool/pooling.cpp:28) [138]  (1.55 ns)
	'getelementptr' operation ('conv_1_out_addr_1', pool/pooling.cpp:28) [140]  (0 ns)
	'load' operation ('conv_1_out_load_1', pool/pooling.cpp:28) on array 'conv_1_out' [141]  (3.25 ns)

 <State 10>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_1', pool/pooling.cpp:28) on array 'conv_1_out' [141]  (3.25 ns)
	'fcmp' operation ('tmp_16', pool/pooling.cpp:28) [155]  (6.79 ns)
	'and' operation ('and_ln28_3', pool/pooling.cpp:28) [156]  (0.978 ns)
	'select' operation ('select_ln28_1', pool/pooling.cpp:28) [157]  (0.698 ns)

 <State 11>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_2', pool/pooling.cpp:28) with incoming values : ('select_ln28_2', pool/pooling.cpp:28) [188]  (1.77 ns)

 <State 12>: 7.01ns
The critical path consists of the following:
	'add' operation ('add_ln35_3', pool/pooling.cpp:35) [243]  (0 ns)
	'add' operation ('add_ln35_4', pool/pooling.cpp:35) [244]  (3.76 ns)
	'getelementptr' operation ('max_pool_1_out_addr_2', pool/pooling.cpp:35) [246]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_2', pool/pooling.cpp:28 on array 'max_pool_1_out' [247]  (3.25 ns)

 <State 13>: 8.63ns
The critical path consists of the following:
	'phi' operation ('mpc_0_2', pool/pooling.cpp:23) with incoming values : ('add_ln23_2', pool/pooling.cpp:23) [203]  (0 ns)
	'add' operation ('add_ln26_2', pool/pooling.cpp:26) [211]  (1.78 ns)
	'add' operation ('add_ln28_4', pool/pooling.cpp:28) [213]  (1.92 ns)
	'add' operation ('add_ln28_5', pool/pooling.cpp:28) [216]  (1.68 ns)
	'getelementptr' operation ('conv_1_out_addr_2', pool/pooling.cpp:28) [218]  (0 ns)
	'load' operation ('conv_1_out_load_2', pool/pooling.cpp:28) on array 'conv_1_out' [219]  (3.25 ns)

 <State 14>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_2', pool/pooling.cpp:28) on array 'conv_1_out' [219]  (3.25 ns)
	'fcmp' operation ('tmp_22', pool/pooling.cpp:28) [233]  (6.79 ns)
	'and' operation ('and_ln28_5', pool/pooling.cpp:28) [234]  (0.978 ns)
	'select' operation ('select_ln28_2', pool/pooling.cpp:28) [235]  (0.698 ns)

 <State 15>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_3', pool/pooling.cpp:28) with incoming values : ('select_ln28_3', pool/pooling.cpp:28) [266]  (1.77 ns)

 <State 16>: 7.01ns
The critical path consists of the following:
	'add' operation ('add_ln35_5', pool/pooling.cpp:35) [322]  (0 ns)
	'add' operation ('add_ln35_6', pool/pooling.cpp:35) [323]  (3.76 ns)
	'getelementptr' operation ('max_pool_1_out_addr_3', pool/pooling.cpp:35) [325]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_3', pool/pooling.cpp:28 on array 'max_pool_1_out' [326]  (3.25 ns)

 <State 17>: 8.63ns
The critical path consists of the following:
	'phi' operation ('mpc_0_3', pool/pooling.cpp:23) with incoming values : ('add_ln23_3', pool/pooling.cpp:23) [282]  (0 ns)
	'add' operation ('add_ln26_3', pool/pooling.cpp:26) [290]  (1.78 ns)
	'add' operation ('add_ln28_6', pool/pooling.cpp:28) [292]  (1.92 ns)
	'add' operation ('add_ln28_7', pool/pooling.cpp:28) [295]  (1.68 ns)
	'getelementptr' operation ('conv_1_out_addr_3', pool/pooling.cpp:28) [297]  (0 ns)
	'load' operation ('conv_1_out_load_3', pool/pooling.cpp:28) on array 'conv_1_out' [298]  (3.25 ns)

 <State 18>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_3', pool/pooling.cpp:28) on array 'conv_1_out' [298]  (3.25 ns)
	'fcmp' operation ('tmp_28', pool/pooling.cpp:28) [312]  (6.79 ns)
	'and' operation ('and_ln28_7', pool/pooling.cpp:28) [313]  (0.978 ns)
	'select' operation ('select_ln28_3', pool/pooling.cpp:28) [314]  (0.698 ns)

 <State 19>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_4', pool/pooling.cpp:28) with incoming values : ('select_ln28_4', pool/pooling.cpp:28) [345]  (1.77 ns)

 <State 20>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln35_7', pool/pooling.cpp:35) [400]  (0 ns)
	'add' operation ('add_ln35_8', pool/pooling.cpp:35) [401]  (3.79 ns)
	'getelementptr' operation ('max_pool_1_out_addr_4', pool/pooling.cpp:35) [403]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_4', pool/pooling.cpp:28 on array 'max_pool_1_out' [404]  (3.25 ns)

 <State 21>: 8.67ns
The critical path consists of the following:
	'phi' operation ('mpc_0_4', pool/pooling.cpp:23) with incoming values : ('add_ln23_4', pool/pooling.cpp:23) [360]  (0 ns)
	'add' operation ('add_ln26_4', pool/pooling.cpp:26) [368]  (1.78 ns)
	'add' operation ('add_ln28_8', pool/pooling.cpp:28) [370]  (1.82 ns)
	'add' operation ('add_ln28_9', pool/pooling.cpp:28) [373]  (1.81 ns)
	'getelementptr' operation ('conv_1_out_addr_4', pool/pooling.cpp:28) [375]  (0 ns)
	'load' operation ('conv_1_out_load_4', pool/pooling.cpp:28) on array 'conv_1_out' [376]  (3.25 ns)

 <State 22>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_4', pool/pooling.cpp:28) on array 'conv_1_out' [376]  (3.25 ns)
	'fcmp' operation ('tmp_52', pool/pooling.cpp:28) [390]  (6.79 ns)
	'and' operation ('and_ln28_9', pool/pooling.cpp:28) [391]  (0.978 ns)
	'select' operation ('select_ln28_4', pool/pooling.cpp:28) [392]  (0.698 ns)

 <State 23>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_5', pool/pooling.cpp:28) with incoming values : ('select_ln28_5', pool/pooling.cpp:28) [423]  (1.77 ns)

 <State 24>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln35_9', pool/pooling.cpp:35) [479]  (0 ns)
	'add' operation ('add_ln35_10', pool/pooling.cpp:35) [480]  (3.79 ns)
	'getelementptr' operation ('max_pool_1_out_addr_5', pool/pooling.cpp:35) [482]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_5', pool/pooling.cpp:28 on array 'max_pool_1_out' [483]  (3.25 ns)

 <State 25>: 8.67ns
The critical path consists of the following:
	'phi' operation ('mpc_0_5', pool/pooling.cpp:23) with incoming values : ('add_ln23_5', pool/pooling.cpp:23) [439]  (0 ns)
	'add' operation ('add_ln26_5', pool/pooling.cpp:26) [447]  (1.78 ns)
	'add' operation ('add_ln28_10', pool/pooling.cpp:28) [449]  (1.82 ns)
	'add' operation ('add_ln28_11', pool/pooling.cpp:28) [452]  (1.81 ns)
	'getelementptr' operation ('conv_1_out_addr_5', pool/pooling.cpp:28) [454]  (0 ns)
	'load' operation ('conv_1_out_load_5', pool/pooling.cpp:28) on array 'conv_1_out' [455]  (3.25 ns)

 <State 26>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_5', pool/pooling.cpp:28) on array 'conv_1_out' [455]  (3.25 ns)
	'fcmp' operation ('tmp_55', pool/pooling.cpp:28) [469]  (6.79 ns)
	'and' operation ('and_ln28_11', pool/pooling.cpp:28) [470]  (0.978 ns)
	'select' operation ('select_ln28_5', pool/pooling.cpp:28) [471]  (0.698 ns)

 <State 27>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_6', pool/pooling.cpp:28) with incoming values : ('select_ln28_6', pool/pooling.cpp:28) [502]  (1.77 ns)

 <State 28>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln35_11', pool/pooling.cpp:35) [558]  (0 ns)
	'add' operation ('add_ln35_12', pool/pooling.cpp:35) [559]  (3.79 ns)
	'getelementptr' operation ('max_pool_1_out_addr_6', pool/pooling.cpp:35) [561]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_6', pool/pooling.cpp:28 on array 'max_pool_1_out' [562]  (3.25 ns)

 <State 29>: 8.67ns
The critical path consists of the following:
	'phi' operation ('mpc_0_6', pool/pooling.cpp:23) with incoming values : ('add_ln23_6', pool/pooling.cpp:23) [518]  (0 ns)
	'add' operation ('add_ln26_6', pool/pooling.cpp:26) [526]  (1.78 ns)
	'add' operation ('add_ln28_12', pool/pooling.cpp:28) [528]  (1.82 ns)
	'add' operation ('add_ln28_13', pool/pooling.cpp:28) [531]  (1.81 ns)
	'getelementptr' operation ('conv_1_out_addr_6', pool/pooling.cpp:28) [533]  (0 ns)
	'load' operation ('conv_1_out_load_6', pool/pooling.cpp:28) on array 'conv_1_out' [534]  (3.25 ns)

 <State 30>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_6', pool/pooling.cpp:28) on array 'conv_1_out' [534]  (3.25 ns)
	'fcmp' operation ('tmp_58', pool/pooling.cpp:28) [548]  (6.79 ns)
	'and' operation ('and_ln28_13', pool/pooling.cpp:28) [549]  (0.978 ns)
	'select' operation ('select_ln28_6', pool/pooling.cpp:28) [550]  (0.698 ns)

 <State 31>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_7', pool/pooling.cpp:28) with incoming values : ('select_ln28_7', pool/pooling.cpp:28) [581]  (1.77 ns)

 <State 32>: 7.04ns
The critical path consists of the following:
	'add' operation ('add_ln35_13', pool/pooling.cpp:35) [637]  (0 ns)
	'add' operation ('add_ln35_14', pool/pooling.cpp:35) [638]  (3.79 ns)
	'getelementptr' operation ('max_pool_1_out_addr_7', pool/pooling.cpp:35) [640]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_7', pool/pooling.cpp:28 on array 'max_pool_1_out' [641]  (3.25 ns)

 <State 33>: 8.67ns
The critical path consists of the following:
	'phi' operation ('mpc_0_7', pool/pooling.cpp:23) with incoming values : ('add_ln23_7', pool/pooling.cpp:23) [597]  (0 ns)
	'add' operation ('add_ln26_7', pool/pooling.cpp:26) [605]  (1.78 ns)
	'add' operation ('add_ln28_14', pool/pooling.cpp:28) [607]  (1.82 ns)
	'add' operation ('add_ln28_15', pool/pooling.cpp:28) [610]  (1.81 ns)
	'getelementptr' operation ('conv_1_out_addr_7', pool/pooling.cpp:28) [612]  (0 ns)
	'load' operation ('conv_1_out_load_7', pool/pooling.cpp:28) on array 'conv_1_out' [613]  (3.25 ns)

 <State 34>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_7', pool/pooling.cpp:28) on array 'conv_1_out' [613]  (3.25 ns)
	'fcmp' operation ('tmp_61', pool/pooling.cpp:28) [627]  (6.79 ns)
	'and' operation ('and_ln28_15', pool/pooling.cpp:28) [628]  (0.978 ns)
	'select' operation ('select_ln28_7', pool/pooling.cpp:28) [629]  (0.698 ns)

 <State 35>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_8', pool/pooling.cpp:28) with incoming values : ('select_ln28_8', pool/pooling.cpp:28) [660]  (1.77 ns)

 <State 36>: 7.01ns
The critical path consists of the following:
	'add' operation ('add_ln35_15', pool/pooling.cpp:35) [715]  (0 ns)
	'add' operation ('add_ln35_16', pool/pooling.cpp:35) [716]  (3.76 ns)
	'getelementptr' operation ('max_pool_1_out_addr_8', pool/pooling.cpp:35) [719]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_8', pool/pooling.cpp:28 on array 'max_pool_1_out' [720]  (3.25 ns)

 <State 37>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_8', pool/pooling.cpp:23) with incoming values : ('add_ln23_8', pool/pooling.cpp:23) [675]  (0 ns)
	'add' operation ('add_ln26_8', pool/pooling.cpp:26) [683]  (1.78 ns)
	'add' operation ('add_ln28_16', pool/pooling.cpp:28) [685]  (1.73 ns)
	'add' operation ('add_ln28_17', pool/pooling.cpp:28) [688]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_8', pool/pooling.cpp:28) [690]  (0 ns)
	'load' operation ('conv_1_out_load_8', pool/pooling.cpp:28) on array 'conv_1_out' [691]  (3.25 ns)

 <State 38>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_8', pool/pooling.cpp:28) on array 'conv_1_out' [691]  (3.25 ns)
	'fcmp' operation ('tmp_64', pool/pooling.cpp:28) [705]  (6.79 ns)
	'and' operation ('and_ln28_17', pool/pooling.cpp:28) [706]  (0.978 ns)
	'select' operation ('select_ln28_8', pool/pooling.cpp:28) [707]  (0.698 ns)

 <State 39>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_9', pool/pooling.cpp:28) with incoming values : ('select_ln28_9', pool/pooling.cpp:28) [739]  (1.77 ns)

 <State 40>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln35_17', pool/pooling.cpp:35) [795]  (0 ns)
	'add' operation ('add_ln35_18', pool/pooling.cpp:35) [796]  (3.82 ns)
	'getelementptr' operation ('max_pool_1_out_addr_9', pool/pooling.cpp:35) [798]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_9', pool/pooling.cpp:28 on array 'max_pool_1_out' [799]  (3.25 ns)

 <State 41>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_9', pool/pooling.cpp:23) with incoming values : ('add_ln23_9', pool/pooling.cpp:23) [755]  (0 ns)
	'add' operation ('add_ln26_9', pool/pooling.cpp:26) [763]  (1.78 ns)
	'add' operation ('add_ln28_18', pool/pooling.cpp:28) [765]  (1.73 ns)
	'add' operation ('add_ln28_19', pool/pooling.cpp:28) [768]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_9', pool/pooling.cpp:28) [770]  (0 ns)
	'load' operation ('conv_1_out_load_9', pool/pooling.cpp:28) on array 'conv_1_out' [771]  (3.25 ns)

 <State 42>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_9', pool/pooling.cpp:28) on array 'conv_1_out' [771]  (3.25 ns)
	'fcmp' operation ('tmp_67', pool/pooling.cpp:28) [785]  (6.79 ns)
	'and' operation ('and_ln28_19', pool/pooling.cpp:28) [786]  (0.978 ns)
	'select' operation ('select_ln28_9', pool/pooling.cpp:28) [787]  (0.698 ns)

 <State 43>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_10', pool/pooling.cpp:28) with incoming values : ('select_ln28_10', pool/pooling.cpp:28) [818]  (1.77 ns)

 <State 44>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln35_19', pool/pooling.cpp:35) [873]  (0 ns)
	'add' operation ('add_ln35_20', pool/pooling.cpp:35) [874]  (3.82 ns)
	'getelementptr' operation ('max_pool_1_out_addr_10', pool/pooling.cpp:35) [876]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_10', pool/pooling.cpp:28 on array 'max_pool_1_out' [877]  (3.25 ns)

 <State 45>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_10', pool/pooling.cpp:23) with incoming values : ('add_ln23_10', pool/pooling.cpp:23) [833]  (0 ns)
	'add' operation ('add_ln26_10', pool/pooling.cpp:26) [841]  (1.78 ns)
	'add' operation ('add_ln28_20', pool/pooling.cpp:28) [843]  (1.73 ns)
	'add' operation ('add_ln28_21', pool/pooling.cpp:28) [846]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_10', pool/pooling.cpp:28) [848]  (0 ns)
	'load' operation ('conv_1_out_load_10', pool/pooling.cpp:28) on array 'conv_1_out' [849]  (3.25 ns)

 <State 46>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_10', pool/pooling.cpp:28) on array 'conv_1_out' [849]  (3.25 ns)
	'fcmp' operation ('tmp_70', pool/pooling.cpp:28) [863]  (6.79 ns)
	'and' operation ('and_ln28_21', pool/pooling.cpp:28) [864]  (0.978 ns)
	'select' operation ('select_ln28_10', pool/pooling.cpp:28) [865]  (0.698 ns)

 <State 47>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_11', pool/pooling.cpp:28) with incoming values : ('select_ln28_11', pool/pooling.cpp:28) [896]  (1.77 ns)

 <State 48>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln35_21', pool/pooling.cpp:35) [952]  (0 ns)
	'add' operation ('add_ln35_22', pool/pooling.cpp:35) [953]  (3.82 ns)
	'getelementptr' operation ('max_pool_1_out_addr_11', pool/pooling.cpp:35) [955]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_11', pool/pooling.cpp:28 on array 'max_pool_1_out' [956]  (3.25 ns)

 <State 49>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_11', pool/pooling.cpp:23) with incoming values : ('add_ln23_11', pool/pooling.cpp:23) [912]  (0 ns)
	'add' operation ('add_ln26_11', pool/pooling.cpp:26) [920]  (1.78 ns)
	'add' operation ('add_ln28_22', pool/pooling.cpp:28) [922]  (1.73 ns)
	'add' operation ('add_ln28_23', pool/pooling.cpp:28) [925]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_11', pool/pooling.cpp:28) [927]  (0 ns)
	'load' operation ('conv_1_out_load_11', pool/pooling.cpp:28) on array 'conv_1_out' [928]  (3.25 ns)

 <State 50>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_11', pool/pooling.cpp:28) on array 'conv_1_out' [928]  (3.25 ns)
	'fcmp' operation ('tmp_73', pool/pooling.cpp:28) [942]  (6.79 ns)
	'and' operation ('and_ln28_23', pool/pooling.cpp:28) [943]  (0.978 ns)
	'select' operation ('select_ln28_11', pool/pooling.cpp:28) [944]  (0.698 ns)

 <State 51>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('max_0_12', pool/pooling.cpp:28) with incoming values : ('select_ln28_12', pool/pooling.cpp:28) [975]  (1.77 ns)

 <State 52>: 7.07ns
The critical path consists of the following:
	'add' operation ('add_ln35_23', pool/pooling.cpp:35) [1031]  (0 ns)
	'add' operation ('add_ln35_24', pool/pooling.cpp:35) [1032]  (3.82 ns)
	'getelementptr' operation ('max_pool_1_out_addr_12', pool/pooling.cpp:35) [1034]  (0 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'max_0_12', pool/pooling.cpp:28 on array 'max_pool_1_out' [1035]  (3.25 ns)

 <State 53>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_12', pool/pooling.cpp:23) with incoming values : ('add_ln23_12', pool/pooling.cpp:23) [991]  (0 ns)
	'add' operation ('add_ln26_12', pool/pooling.cpp:26) [999]  (1.78 ns)
	'add' operation ('add_ln28_24', pool/pooling.cpp:28) [1001]  (1.73 ns)
	'add' operation ('add_ln28_25', pool/pooling.cpp:28) [1004]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_12', pool/pooling.cpp:28) [1006]  (0 ns)
	'load' operation ('conv_1_out_load_12', pool/pooling.cpp:28) on array 'conv_1_out' [1007]  (3.25 ns)

 <State 54>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_12', pool/pooling.cpp:28) on array 'conv_1_out' [1007]  (3.25 ns)
	'fcmp' operation ('tmp_76', pool/pooling.cpp:28) [1021]  (6.79 ns)
	'and' operation ('and_ln28_25', pool/pooling.cpp:28) [1022]  (0.978 ns)
	'select' operation ('select_ln28_12', pool/pooling.cpp:28) [1023]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
