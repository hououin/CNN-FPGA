// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<15> > conv_1_out_address0;
    sc_out< sc_logic > conv_1_out_ce0;
    sc_in< sc_lv<32> > conv_1_out_q0;
    sc_out< sc_lv<15> > conv_1_out_address1;
    sc_out< sc_logic > conv_1_out_ce1;
    sc_in< sc_lv<32> > conv_1_out_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > f_fu_218_p2;
    sc_signal< sc_lv<6> > f_reg_616;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<16> > zext_ln13_fu_224_p1;
    sc_signal< sc_lv<16> > zext_ln13_reg_621;
    sc_signal< sc_lv<1> > icmp_ln10_fu_212_p2;
    sc_signal< sc_lv<14> > zext_ln13_1_fu_228_p1;
    sc_signal< sc_lv<14> > zext_ln13_1_reg_626;
    sc_signal< sc_lv<8> > add_ln13_fu_232_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_631;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > r_fu_244_p2;
    sc_signal< sc_lv<4> > r_reg_639;
    sc_signal< sc_lv<5> > shl_ln_fu_250_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_644;
    sc_signal< sc_lv<1> > icmp_ln13_fu_238_p2;
    sc_signal< sc_lv<4> > c_fu_264_p2;
    sc_signal< sc_lv<4> > c_reg_652;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<10> > zext_ln26_fu_278_p1;
    sc_signal< sc_lv<10> > zext_ln26_reg_657;
    sc_signal< sc_lv<1> > icmp_ln16_fu_258_p2;
    sc_signal< sc_lv<10> > zext_ln20_1_fu_288_p1;
    sc_signal< sc_lv<10> > zext_ln20_1_reg_662;
    sc_signal< sc_lv<2> > mpr_fu_302_p2;
    sc_signal< sc_lv<2> > mpr_reg_670;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln20_fu_296_p2;
    sc_signal< sc_lv<32> > select_ln28_1_fu_605_p3;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > f_0_reg_130;
    sc_signal< sc_lv<4> > r_0_reg_142;
    sc_signal< sc_lv<8> > phi_mul_reg_153;
    sc_signal< sc_lv<4> > c_0_reg_165;
    sc_signal< sc_lv<32> > max_0_reg_177;
    sc_signal< sc_lv<2> > mpr_0_reg_190;
    sc_signal< sc_lv<64> > zext_ln28_1_fu_364_p1;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_391_p1;
    sc_signal< sc_lv<64> > zext_ln35_2_fu_423_p1;
    sc_signal< sc_lv<32> > select_ln28_fu_512_p3;
    sc_signal< sc_lv<5> > shl_ln1_fu_270_p3;
    sc_signal< sc_lv<5> > or_ln26_fu_282_p2;
    sc_signal< sc_lv<5> > zext_ln20_fu_292_p1;
    sc_signal< sc_lv<5> > i_fu_308_p2;
    sc_signal< sc_lv<5> > mul_ln28_fu_317_p1;
    sc_signal< sc_lv<10> > mul_ln28_fu_317_p2;
    sc_signal< sc_lv<10> > add_ln28_fu_323_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_328_p1;
    sc_signal< sc_lv<6> > tmp_s_fu_332_p3;
    sc_signal< sc_lv<9> > tmp_10_fu_346_p4;
    sc_signal< sc_lv<6> > or_ln28_4_fu_340_p2;
    sc_signal< sc_lv<15> > tmp_11_fu_356_p3;
    sc_signal< sc_lv<10> > add_ln28_1_fu_369_p2;
    sc_signal< sc_lv<15> > tmp_12_fu_374_p3;
    sc_signal< sc_lv<16> > zext_ln28_2_fu_382_p1;
    sc_signal< sc_lv<16> > add_ln28_2_fu_386_p2;
    sc_signal< sc_lv<8> > zext_ln35_fu_396_p1;
    sc_signal< sc_lv<8> > add_ln35_fu_400_p2;
    sc_signal< sc_lv<13> > tmp_9_fu_406_p3;
    sc_signal< sc_lv<14> > zext_ln35_1_fu_414_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_418_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_428_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_446_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_432_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_442_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_470_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_464_p2;
    sc_signal< sc_lv<8> > tmp_4_fu_450_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_460_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_488_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_482_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_476_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_494_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_500_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_201_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_506_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_521_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_539_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_525_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_535_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_563_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_557_p2;
    sc_signal< sc_lv<8> > tmp_7_fu_543_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_553_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_581_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_575_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_569_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_587_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_593_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_207_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_599_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_lv<10> > mul_ln28_fu_317_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln13_fu_232_p2();
    void thread_add_ln28_1_fu_369_p2();
    void thread_add_ln28_2_fu_386_p2();
    void thread_add_ln28_fu_323_p2();
    void thread_add_ln35_1_fu_418_p2();
    void thread_add_ln35_fu_400_p2();
    void thread_and_ln28_1_fu_506_p2();
    void thread_and_ln28_2_fu_593_p2();
    void thread_and_ln28_3_fu_599_p2();
    void thread_and_ln28_fu_500_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_446_p1();
    void thread_bitcast_ln28_2_fu_521_p1();
    void thread_bitcast_ln28_3_fu_539_p1();
    void thread_bitcast_ln28_fu_428_p1();
    void thread_c_fu_264_p2();
    void thread_conv_1_out_address0();
    void thread_conv_1_out_address1();
    void thread_conv_1_out_ce0();
    void thread_conv_1_out_ce1();
    void thread_f_fu_218_p2();
    void thread_i_fu_308_p2();
    void thread_icmp_ln10_fu_212_p2();
    void thread_icmp_ln13_fu_238_p2();
    void thread_icmp_ln16_fu_258_p2();
    void thread_icmp_ln20_fu_296_p2();
    void thread_icmp_ln28_1_fu_470_p2();
    void thread_icmp_ln28_2_fu_482_p2();
    void thread_icmp_ln28_3_fu_488_p2();
    void thread_icmp_ln28_4_fu_557_p2();
    void thread_icmp_ln28_5_fu_563_p2();
    void thread_icmp_ln28_6_fu_575_p2();
    void thread_icmp_ln28_7_fu_581_p2();
    void thread_icmp_ln28_fu_464_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_mpr_fu_302_p2();
    void thread_mul_ln28_fu_317_p1();
    void thread_mul_ln28_fu_317_p10();
    void thread_mul_ln28_fu_317_p2();
    void thread_or_ln26_fu_282_p2();
    void thread_or_ln28_1_fu_494_p2();
    void thread_or_ln28_2_fu_569_p2();
    void thread_or_ln28_3_fu_587_p2();
    void thread_or_ln28_4_fu_340_p2();
    void thread_or_ln28_fu_476_p2();
    void thread_r_fu_244_p2();
    void thread_select_ln28_1_fu_605_p3();
    void thread_select_ln28_fu_512_p3();
    void thread_shl_ln1_fu_270_p3();
    void thread_shl_ln_fu_250_p3();
    void thread_tmp_10_fu_346_p4();
    void thread_tmp_11_fu_356_p3();
    void thread_tmp_12_fu_374_p3();
    void thread_tmp_1_fu_432_p4();
    void thread_tmp_4_fu_450_p4();
    void thread_tmp_6_fu_525_p4();
    void thread_tmp_7_fu_543_p4();
    void thread_tmp_9_fu_406_p3();
    void thread_tmp_s_fu_332_p3();
    void thread_trunc_ln28_1_fu_442_p1();
    void thread_trunc_ln28_2_fu_460_p1();
    void thread_trunc_ln28_3_fu_535_p1();
    void thread_trunc_ln28_4_fu_553_p1();
    void thread_trunc_ln28_fu_328_p1();
    void thread_zext_ln13_1_fu_228_p1();
    void thread_zext_ln13_fu_224_p1();
    void thread_zext_ln20_1_fu_288_p1();
    void thread_zext_ln20_fu_292_p1();
    void thread_zext_ln26_fu_278_p1();
    void thread_zext_ln28_1_fu_364_p1();
    void thread_zext_ln28_2_fu_382_p1();
    void thread_zext_ln28_3_fu_391_p1();
    void thread_zext_ln35_1_fu_414_p1();
    void thread_zext_ln35_2_fu_423_p1();
    void thread_zext_ln35_fu_396_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
