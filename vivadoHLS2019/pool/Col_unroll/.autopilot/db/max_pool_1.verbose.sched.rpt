

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Wed Oct  4 15:57:21 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        pool
* Solution:       Col_unroll
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    11.719|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  70785|  70785|  70785|  70785|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                      |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Filter_Loop         |  70784|  70784|      2212|          -|          -|    32|    no    |
        | + Row_Loop           |   2210|   2210|       170|          -|          -|    13|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        |  ++ Pool_Row_Loop    |     12|     12|         6|          -|          -|     2|    no    |
        |   +++ Pool_Col_Loop  |      4|      4|         2|          -|          -|     2|    no    |
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 42
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 7 
5 --> 6 4 
6 --> 5 
7 --> 8 10 
8 --> 9 7 
9 --> 8 
10 --> 11 13 
11 --> 12 10 
12 --> 11 
13 --> 14 16 
14 --> 15 13 
15 --> 14 
16 --> 17 19 
17 --> 18 16 
18 --> 17 
19 --> 20 22 
20 --> 21 19 
21 --> 20 
22 --> 23 25 
23 --> 24 22 
24 --> 23 
25 --> 26 28 
26 --> 27 25 
27 --> 26 
28 --> 29 31 
29 --> 30 28 
30 --> 29 
31 --> 32 34 
32 --> 33 31 
33 --> 32 
34 --> 35 37 
35 --> 36 34 
36 --> 35 
37 --> 38 40 
38 --> 39 37 
39 --> 38 
40 --> 41 3 
41 --> 42 40 
42 --> 41 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([21632 x float]* %conv_1_out) nounwind, !map !7"   --->   Operation 43 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5408 x float]* %max_pool_1_out) nounwind, !map !14"   --->   Operation 44 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 45 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (1.76ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 46 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.82>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %f, %Filter_Loop_end ]"   --->   Operation 47 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.42ns)   --->   "%icmp_ln10 = icmp eq i6 %f_0, -32" [pool/pooling.cpp:10]   --->   Operation 48 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32) nounwind"   --->   Operation 49 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.82ns)   --->   "%f = add i6 %f_0, 1" [pool/pooling.cpp:10]   --->   Operation 50 'add' 'f' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %29, label %Filter_Loop_begin" [pool/pooling.cpp:10]   --->   Operation 51 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str) nounwind" [pool/pooling.cpp:11]   --->   Operation 52 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str) nounwind" [pool/pooling.cpp:11]   --->   Operation 53 'specregionbegin' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i6 %f_0 to i16" [pool/pooling.cpp:13]   --->   Operation 54 'zext' 'zext_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i6 %f_0 to i13" [pool/pooling.cpp:13]   --->   Operation 55 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.76ns)   --->   "br label %2" [pool/pooling.cpp:13]   --->   Operation 56 'br' <Predicate = (!icmp_ln10)> <Delay = 1.76>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "ret void" [pool/pooling.cpp:39]   --->   Operation 57 'ret' <Predicate = (icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.81>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %Filter_Loop_begin ], [ %r, %Col_Loop_end ]"   --->   Operation 58 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%phi_mul = phi i13 [ 0, %Filter_Loop_begin ], [ %add_ln13, %Col_Loop_end ]" [pool/pooling.cpp:13]   --->   Operation 59 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (1.67ns)   --->   "%add_ln13 = add i13 %phi_mul, 416" [pool/pooling.cpp:13]   --->   Operation 60 'add' 'add_ln13' <Predicate = true> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (1.30ns)   --->   "%icmp_ln13 = icmp eq i4 %r_0, -3" [pool/pooling.cpp:13]   --->   Operation 61 'icmp' 'icmp_ln13' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 13, i64 13, i64 13) nounwind"   --->   Operation 62 'speclooptripcount' 'empty_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.73ns)   --->   "%r = add i4 %r_0, 1" [pool/pooling.cpp:13]   --->   Operation 63 'add' 'r' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "br i1 %icmp_ln13, label %Filter_Loop_end, label %Col_Loop_begin" [pool/pooling.cpp:13]   --->   Operation 64 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str1) nounwind" [pool/pooling.cpp:14]   --->   Operation 65 'specloopname' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r_0, i1 false)" [pool/pooling.cpp:25]   --->   Operation 66 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (1.67ns)   --->   "%add_ln35 = add i13 %phi_mul, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 67 'add' 'add_ln35' <Predicate = (!icmp_ln13)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i13 %add_ln35 to i64" [pool/pooling.cpp:35]   --->   Operation 68 'zext' 'zext_ln35' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35" [pool/pooling.cpp:35]   --->   Operation 69 'getelementptr' 'max_pool_1_out_addr' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_1 = add i13 %phi_mul, 32" [pool/pooling.cpp:35]   --->   Operation 70 'add' 'add_ln35_1' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 71 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_2 = add i13 %add_ln35_1, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 71 'add' 'add_ln35_2' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i13 %add_ln35_2 to i64" [pool/pooling.cpp:35]   --->   Operation 72 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_1 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_1" [pool/pooling.cpp:35]   --->   Operation 73 'getelementptr' 'max_pool_1_out_addr_1' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_3 = add i13 %phi_mul, 64" [pool/pooling.cpp:35]   --->   Operation 74 'add' 'add_ln35_3' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 75 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_4 = add i13 %add_ln35_3, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 75 'add' 'add_ln35_4' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i13 %add_ln35_4 to i64" [pool/pooling.cpp:35]   --->   Operation 76 'zext' 'zext_ln35_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_2 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_2" [pool/pooling.cpp:35]   --->   Operation 77 'getelementptr' 'max_pool_1_out_addr_2' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_5 = add i13 %phi_mul, 96" [pool/pooling.cpp:35]   --->   Operation 78 'add' 'add_ln35_5' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 79 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_6 = add i13 %add_ln35_5, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 79 'add' 'add_ln35_6' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i13 %add_ln35_6 to i64" [pool/pooling.cpp:35]   --->   Operation 80 'zext' 'zext_ln35_3' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_3 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_3" [pool/pooling.cpp:35]   --->   Operation 81 'getelementptr' 'max_pool_1_out_addr_3' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_7 = add i13 %phi_mul, 128" [pool/pooling.cpp:35]   --->   Operation 82 'add' 'add_ln35_7' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 83 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_8 = add i13 %add_ln35_7, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 83 'add' 'add_ln35_8' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln35_4 = zext i13 %add_ln35_8 to i64" [pool/pooling.cpp:35]   --->   Operation 84 'zext' 'zext_ln35_4' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_4 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_4" [pool/pooling.cpp:35]   --->   Operation 85 'getelementptr' 'max_pool_1_out_addr_4' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_9 = add i13 %phi_mul, 160" [pool/pooling.cpp:35]   --->   Operation 86 'add' 'add_ln35_9' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 87 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_10 = add i13 %add_ln35_9, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 87 'add' 'add_ln35_10' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln35_5 = zext i13 %add_ln35_10 to i64" [pool/pooling.cpp:35]   --->   Operation 88 'zext' 'zext_ln35_5' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_5 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_5" [pool/pooling.cpp:35]   --->   Operation 89 'getelementptr' 'max_pool_1_out_addr_5' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_11 = add i13 %phi_mul, 192" [pool/pooling.cpp:35]   --->   Operation 90 'add' 'add_ln35_11' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 91 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_12 = add i13 %add_ln35_11, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 91 'add' 'add_ln35_12' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln35_6 = zext i13 %add_ln35_12 to i64" [pool/pooling.cpp:35]   --->   Operation 92 'zext' 'zext_ln35_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_6 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_6" [pool/pooling.cpp:35]   --->   Operation 93 'getelementptr' 'max_pool_1_out_addr_6' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_13 = add i13 %phi_mul, 224" [pool/pooling.cpp:35]   --->   Operation 94 'add' 'add_ln35_13' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 95 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_14 = add i13 %add_ln35_13, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 95 'add' 'add_ln35_14' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln35_7 = zext i13 %add_ln35_14 to i64" [pool/pooling.cpp:35]   --->   Operation 96 'zext' 'zext_ln35_7' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_7 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_7" [pool/pooling.cpp:35]   --->   Operation 97 'getelementptr' 'max_pool_1_out_addr_7' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_15 = add i13 %phi_mul, 256" [pool/pooling.cpp:35]   --->   Operation 98 'add' 'add_ln35_15' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 99 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_16 = add i13 %add_ln35_15, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 99 'add' 'add_ln35_16' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln35_8 = zext i13 %add_ln35_16 to i64" [pool/pooling.cpp:35]   --->   Operation 100 'zext' 'zext_ln35_8' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_8 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_8" [pool/pooling.cpp:35]   --->   Operation 101 'getelementptr' 'max_pool_1_out_addr_8' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_17 = add i13 %phi_mul, 288" [pool/pooling.cpp:35]   --->   Operation 102 'add' 'add_ln35_17' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 103 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_18 = add i13 %add_ln35_17, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 103 'add' 'add_ln35_18' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln35_9 = zext i13 %add_ln35_18 to i64" [pool/pooling.cpp:35]   --->   Operation 104 'zext' 'zext_ln35_9' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_9 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_9" [pool/pooling.cpp:35]   --->   Operation 105 'getelementptr' 'max_pool_1_out_addr_9' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_19 = add i13 %phi_mul, 320" [pool/pooling.cpp:35]   --->   Operation 106 'add' 'add_ln35_19' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 107 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_20 = add i13 %add_ln35_19, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 107 'add' 'add_ln35_20' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln35_10 = zext i13 %add_ln35_20 to i64" [pool/pooling.cpp:35]   --->   Operation 108 'zext' 'zext_ln35_10' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_10 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_10" [pool/pooling.cpp:35]   --->   Operation 109 'getelementptr' 'max_pool_1_out_addr_10' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_21 = add i13 %phi_mul, 352" [pool/pooling.cpp:35]   --->   Operation 110 'add' 'add_ln35_21' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 111 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_22 = add i13 %add_ln35_21, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 111 'add' 'add_ln35_22' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln35_11 = zext i13 %add_ln35_22 to i64" [pool/pooling.cpp:35]   --->   Operation 112 'zext' 'zext_ln35_11' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_11 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_11" [pool/pooling.cpp:35]   --->   Operation 113 'getelementptr' 'max_pool_1_out_addr_11' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln35_23 = add i13 %phi_mul, 384" [pool/pooling.cpp:35]   --->   Operation 114 'add' 'add_ln35_23' <Predicate = (!icmp_ln13)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 115 [1/1] (3.81ns) (root node of TernaryAdder)   --->   "%add_ln35_24 = add i13 %add_ln35_23, %zext_ln13_1" [pool/pooling.cpp:35]   --->   Operation 115 'add' 'add_ln35_24' <Predicate = (!icmp_ln13)> <Delay = 3.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.90> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln35_12 = zext i13 %add_ln35_24 to i64" [pool/pooling.cpp:35]   --->   Operation 116 'zext' 'zext_ln35_12' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr_12 = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_12" [pool/pooling.cpp:35]   --->   Operation 117 'getelementptr' 'max_pool_1_out_addr_12' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 118 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (1.76ns)   --->   "br label %3" [pool/pooling.cpp:20]   --->   Operation 119 'br' <Predicate = (!icmp_ln13)> <Delay = 1.76>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%empty_57 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp) nounwind" [pool/pooling.cpp:38]   --->   Operation 120 'specregionend' 'empty_57' <Predicate = (icmp_ln13)> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 121 'br' <Predicate = (icmp_ln13)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.56>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%max_0_0 = phi float [ 0x3810000000000000, %Col_Loop_begin ], [ %max_1_0, %Pool_Row_Loop_end ]" [pool/pooling.cpp:28]   --->   Operation 122 'phi' 'max_0_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%mpr_0_0 = phi i2 [ 0, %Col_Loop_begin ], [ %add_ln20, %Pool_Row_Loop_end ]" [pool/pooling.cpp:20]   --->   Operation 123 'phi' 'mpr_0_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i2 %mpr_0_0 to i5" [pool/pooling.cpp:20]   --->   Operation 124 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.95ns)   --->   "%icmp_ln20 = icmp eq i2 %mpr_0_0, -2" [pool/pooling.cpp:20]   --->   Operation 125 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 126 'speclooptripcount' 'empty_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (1.56ns)   --->   "%add_ln20 = add i2 %mpr_0_0, 1" [pool/pooling.cpp:20]   --->   Operation 127 'add' 'add_ln20' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 128 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20, label %Col_Loop, label %Pool_Row_Loop_begin" [pool/pooling.cpp:20]   --->   Operation 128 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 129 'specloopname' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 130 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (1.78ns)   --->   "%add_ln25 = add i5 %zext_ln20, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 131 'add' 'add_ln25' <Predicate = (!icmp_ln20)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i5 %add_ln25 to i10" [pool/pooling.cpp:28]   --->   Operation 132 'zext' 'zext_ln28' <Predicate = (!icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (3.78ns)   --->   "%mul_ln28 = mul i10 %zext_ln28, 26" [pool/pooling.cpp:28]   --->   Operation 133 'mul' 'mul_ln28' <Predicate = (!icmp_ln20)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 134 [1/1] (1.76ns)   --->   "br label %4" [pool/pooling.cpp:23]   --->   Operation 134 'br' <Predicate = (!icmp_ln20)> <Delay = 1.76>
ST_4 : Operation 135 [1/1] (3.25ns)   --->   "store float %max_0_0, float* %max_pool_1_out_addr, align 4" [pool/pooling.cpp:35]   --->   Operation 135 'store' <Predicate = (icmp_ln20)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_s) nounwind" [pool/pooling.cpp:36]   --->   Operation 136 'specregionend' 'empty_5' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 137 'specregionbegin' 'tmp_1' <Predicate = (icmp_ln20)> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (1.76ns)   --->   "br label %5" [pool/pooling.cpp:20]   --->   Operation 138 'br' <Predicate = (icmp_ln20)> <Delay = 1.76>

State 5 <SV = 4> <Delay = 6.92>
ST_5 : Operation 139 [1/1] (0.00ns)   --->   "%max_1_0 = phi float [ %max_0_0, %Pool_Row_Loop_begin ], [ %select_ln28, %._crit_edge.0 ]" [pool/pooling.cpp:28]   --->   Operation 139 'phi' 'max_1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%mpc_0_0 = phi i2 [ 0, %Pool_Row_Loop_begin ], [ %add_ln23, %._crit_edge.0 ]" [pool/pooling.cpp:23]   --->   Operation 140 'phi' 'mpc_0_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 141 [1/1] (0.95ns)   --->   "%icmp_ln23 = icmp eq i2 %mpc_0_0, -2" [pool/pooling.cpp:23]   --->   Operation 141 'icmp' 'icmp_ln23' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 142 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 142 'speclooptripcount' 'empty_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 143 [1/1] (1.56ns)   --->   "%add_ln23 = add i2 %mpc_0_0, 1" [pool/pooling.cpp:23]   --->   Operation 143 'add' 'add_ln23' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23, label %Pool_Row_Loop_end, label %._crit_edge.0" [pool/pooling.cpp:23]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i2 %mpc_0_0 to i10" [pool/pooling.cpp:28]   --->   Operation 145 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 146 [1/1] (1.73ns)   --->   "%add_ln28 = add i10 %zext_ln28_2, %mul_ln28" [pool/pooling.cpp:28]   --->   Operation 146 'add' 'add_ln28' <Predicate = (!icmp_ln23)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_65 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28, i5 0)" [pool/pooling.cpp:28]   --->   Operation 147 'bitconcatenate' 'tmp_65' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i15 %tmp_65 to i16" [pool/pooling.cpp:28]   --->   Operation 148 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (1.94ns)   --->   "%add_ln28_1 = add i16 %zext_ln13, %zext_ln28_3" [pool/pooling.cpp:28]   --->   Operation 149 'add' 'add_ln28_1' <Predicate = (!icmp_ln23)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i16 %add_ln28_1 to i64" [pool/pooling.cpp:28]   --->   Operation 150 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 151 [1/1] (0.00ns)   --->   "%conv_1_out_addr = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_4" [pool/pooling.cpp:28]   --->   Operation 151 'getelementptr' 'conv_1_out_addr' <Predicate = (!icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 152 [2/2] (3.25ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 152 'load' 'conv_1_out_load' <Predicate = (!icmp_ln23)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_5 : Operation 153 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_2) nounwind" [pool/pooling.cpp:33]   --->   Operation 153 'specregionend' 'empty_7' <Predicate = (icmp_ln23)> <Delay = 0.00>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "br label %3" [pool/pooling.cpp:20]   --->   Operation 154 'br' <Predicate = (icmp_ln23)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 11.7>
ST_6 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 155 'specloopname' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 156 [1/2] (3.25ns)   --->   "%conv_1_out_load = load float* %conv_1_out_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 156 'load' 'conv_1_out_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_6 : Operation 157 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %conv_1_out_load to i32" [pool/pooling.cpp:28]   --->   Operation 157 'bitcast' 'bitcast_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 158 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 159 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i32 %bitcast_ln28 to i23" [pool/pooling.cpp:28]   --->   Operation 159 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %max_1_0 to i32" [pool/pooling.cpp:28]   --->   Operation 160 'bitcast' 'bitcast_ln28_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 161 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28_1 to i23" [pool/pooling.cpp:28]   --->   Operation 162 'trunc' 'trunc_ln28_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (1.55ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_5, -1" [pool/pooling.cpp:28]   --->   Operation 163 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 164 [1/1] (2.44ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28, 0" [pool/pooling.cpp:28]   --->   Operation 164 'icmp' 'icmp_ln28_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pool/pooling.cpp:28]   --->   Operation 165 'or' 'or_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 166 [1/1] (1.55ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_6, -1" [pool/pooling.cpp:28]   --->   Operation 166 'icmp' 'icmp_ln28_2' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 167 [1/1] (2.44ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pool/pooling.cpp:28]   --->   Operation 167 'icmp' 'icmp_ln28_3' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pool/pooling.cpp:28]   --->   Operation 168 'or' 'or_ln28_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_1)   --->   "%and_ln28 = and i1 %or_ln28, %or_ln28_1" [pool/pooling.cpp:28]   --->   Operation 169 'and' 'and_ln28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 170 [1/1] (6.78ns)   --->   "%tmp_7 = fcmp ogt float %conv_1_out_load, %max_1_0" [pool/pooling.cpp:28]   --->   Operation 170 'fcmp' 'tmp_7' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 171 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_1 = and i1 %and_ln28, %tmp_7" [pool/pooling.cpp:28]   --->   Operation 171 'and' 'and_ln28_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 172 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28_1, float %conv_1_out_load, float %max_1_0" [pool/pooling.cpp:28]   --->   Operation 172 'select' 'select_ln28' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 173 [1/1] (0.00ns)   --->   "br label %4" [pool/pooling.cpp:23]   --->   Operation 173 'br' <Predicate = true> <Delay = 0.00>

State 7 <SV = 4> <Delay = 5.56>
ST_7 : Operation 174 [1/1] (0.00ns)   --->   "%max_0_1 = phi float [ 0x3810000000000000, %Col_Loop ], [ %max_1_1, %Pool_Row_Loop_end1 ]" [pool/pooling.cpp:28]   --->   Operation 174 'phi' 'max_0_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 175 [1/1] (0.00ns)   --->   "%mpr_0_1 = phi i2 [ 0, %Col_Loop ], [ %add_ln20_1, %Pool_Row_Loop_end1 ]" [pool/pooling.cpp:20]   --->   Operation 175 'phi' 'mpr_0_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln20_1 = zext i2 %mpr_0_1 to i5" [pool/pooling.cpp:20]   --->   Operation 176 'zext' 'zext_ln20_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 177 [1/1] (0.95ns)   --->   "%icmp_ln20_1 = icmp eq i2 %mpr_0_1, -2" [pool/pooling.cpp:20]   --->   Operation 177 'icmp' 'icmp_ln20_1' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 178 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 178 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 179 [1/1] (1.56ns)   --->   "%add_ln20_1 = add i2 %mpr_0_1, 1" [pool/pooling.cpp:20]   --->   Operation 179 'add' 'add_ln20_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 180 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_1, label %Col_Loop1, label %Pool_Row_Loop_begin1" [pool/pooling.cpp:20]   --->   Operation 180 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 181 'specloopname' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_7 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 182 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_7 : Operation 183 [1/1] (1.78ns)   --->   "%add_ln25_1 = add i5 %zext_ln20_1, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 183 'add' 'add_ln25_1' <Predicate = (!icmp_ln20_1)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i5 %add_ln25_1 to i10" [pool/pooling.cpp:28]   --->   Operation 184 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln20_1)> <Delay = 0.00>
ST_7 : Operation 185 [1/1] (3.78ns)   --->   "%mul_ln28_1 = mul i10 %zext_ln28_1, 26" [pool/pooling.cpp:28]   --->   Operation 185 'mul' 'mul_ln28_1' <Predicate = (!icmp_ln20_1)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 186 [1/1] (1.76ns)   --->   "br label %6" [pool/pooling.cpp:23]   --->   Operation 186 'br' <Predicate = (!icmp_ln20_1)> <Delay = 1.76>
ST_7 : Operation 187 [1/1] (3.25ns)   --->   "store float %max_0_1, float* %max_pool_1_out_addr_1, align 4" [pool/pooling.cpp:35]   --->   Operation 187 'store' <Predicate = (icmp_ln20_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_1) nounwind" [pool/pooling.cpp:36]   --->   Operation 188 'specregionend' 'empty_9' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_7 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 189 'specregionbegin' 'tmp_3' <Predicate = (icmp_ln20_1)> <Delay = 0.00>
ST_7 : Operation 190 [1/1] (1.76ns)   --->   "br label %7" [pool/pooling.cpp:20]   --->   Operation 190 'br' <Predicate = (icmp_ln20_1)> <Delay = 1.76>

State 8 <SV = 5> <Delay = 6.92>
ST_8 : Operation 191 [1/1] (0.00ns)   --->   "%max_1_1 = phi float [ %max_0_1, %Pool_Row_Loop_begin1 ], [ %select_ln28_1, %._crit_edge.1 ]" [pool/pooling.cpp:28]   --->   Operation 191 'phi' 'max_1_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 192 [1/1] (0.00ns)   --->   "%mpc_0_1 = phi i2 [ 0, %Pool_Row_Loop_begin1 ], [ %add_ln23_1, %._crit_edge.1 ]" [pool/pooling.cpp:23]   --->   Operation 192 'phi' 'mpc_0_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 193 [1/1] (0.95ns)   --->   "%icmp_ln23_1 = icmp eq i2 %mpc_0_1, -2" [pool/pooling.cpp:23]   --->   Operation 193 'icmp' 'icmp_ln23_1' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 194 [1/1] (0.00ns)   --->   "%empty_12 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 194 'speclooptripcount' 'empty_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 195 [1/1] (1.56ns)   --->   "%add_ln23_1 = add i2 %mpc_0_1, 1" [pool/pooling.cpp:23]   --->   Operation 195 'add' 'add_ln23_1' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 196 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_1, label %Pool_Row_Loop_end1, label %._crit_edge.1" [pool/pooling.cpp:23]   --->   Operation 196 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_2)   --->   "%xor_ln26 = xor i2 %mpc_0_1, -2" [pool/pooling.cpp:26]   --->   Operation 197 'xor' 'xor_ln26' <Predicate = (!icmp_ln23_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 198 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_2)   --->   "%zext_ln28_6 = zext i2 %xor_ln26 to i10" [pool/pooling.cpp:28]   --->   Operation 198 'zext' 'zext_ln28_6' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 199 [1/1] (1.73ns) (out node of the LUT)   --->   "%add_ln28_2 = add i10 %zext_ln28_6, %mul_ln28_1" [pool/pooling.cpp:28]   --->   Operation 199 'add' 'add_ln28_2' <Predicate = (!icmp_ln23_1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_66 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_2, i5 0)" [pool/pooling.cpp:28]   --->   Operation 200 'bitconcatenate' 'tmp_66' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln28_7 = zext i15 %tmp_66 to i16" [pool/pooling.cpp:28]   --->   Operation 201 'zext' 'zext_ln28_7' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 202 [1/1] (1.94ns)   --->   "%add_ln28_3 = add i16 %zext_ln13, %zext_ln28_7" [pool/pooling.cpp:28]   --->   Operation 202 'add' 'add_ln28_3' <Predicate = (!icmp_ln23_1)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln28_8 = zext i16 %add_ln28_3 to i64" [pool/pooling.cpp:28]   --->   Operation 203 'zext' 'zext_ln28_8' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 204 [1/1] (0.00ns)   --->   "%conv_1_out_addr_1 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_8" [pool/pooling.cpp:28]   --->   Operation 204 'getelementptr' 'conv_1_out_addr_1' <Predicate = (!icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 205 [2/2] (3.25ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 205 'load' 'conv_1_out_load_1' <Predicate = (!icmp_ln23_1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_8 : Operation 206 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_4) nounwind" [pool/pooling.cpp:33]   --->   Operation 206 'specregionend' 'empty_11' <Predicate = (icmp_ln23_1)> <Delay = 0.00>
ST_8 : Operation 207 [1/1] (0.00ns)   --->   "br label %5" [pool/pooling.cpp:20]   --->   Operation 207 'br' <Predicate = (icmp_ln23_1)> <Delay = 0.00>

State 9 <SV = 6> <Delay = 11.7>
ST_9 : Operation 208 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 208 'specloopname' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 209 [1/2] (3.25ns)   --->   "%conv_1_out_load_1 = load float* %conv_1_out_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 209 'load' 'conv_1_out_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_9 : Operation 210 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %conv_1_out_load_1 to i32" [pool/pooling.cpp:28]   --->   Operation 210 'bitcast' 'bitcast_ln28_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 211 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 211 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_2 to i23" [pool/pooling.cpp:28]   --->   Operation 212 'trunc' 'trunc_ln28_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 213 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %max_1_1 to i32" [pool/pooling.cpp:28]   --->   Operation 213 'bitcast' 'bitcast_ln28_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 214 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 214 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 215 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_3 to i23" [pool/pooling.cpp:28]   --->   Operation 215 'trunc' 'trunc_ln28_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 216 [1/1] (1.55ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_10, -1" [pool/pooling.cpp:28]   --->   Operation 216 'icmp' 'icmp_ln28_4' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 217 [1/1] (2.44ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [pool/pooling.cpp:28]   --->   Operation 217 'icmp' 'icmp_ln28_5' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pool/pooling.cpp:28]   --->   Operation 218 'or' 'or_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 219 [1/1] (1.55ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_11, -1" [pool/pooling.cpp:28]   --->   Operation 219 'icmp' 'icmp_ln28_6' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 220 [1/1] (2.44ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [pool/pooling.cpp:28]   --->   Operation 220 'icmp' 'icmp_ln28_7' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pool/pooling.cpp:28]   --->   Operation 221 'or' 'or_ln28_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_3)   --->   "%and_ln28_2 = and i1 %or_ln28_2, %or_ln28_3" [pool/pooling.cpp:28]   --->   Operation 222 'and' 'and_ln28_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 223 [1/1] (6.78ns)   --->   "%tmp_12 = fcmp ogt float %conv_1_out_load_1, %max_1_1" [pool/pooling.cpp:28]   --->   Operation 223 'fcmp' 'tmp_12' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 224 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_3 = and i1 %and_ln28_2, %tmp_12" [pool/pooling.cpp:28]   --->   Operation 224 'and' 'and_ln28_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 225 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_3, float %conv_1_out_load_1, float %max_1_1" [pool/pooling.cpp:28]   --->   Operation 225 'select' 'select_ln28_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 226 [1/1] (0.00ns)   --->   "br label %6" [pool/pooling.cpp:23]   --->   Operation 226 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 5> <Delay = 5.56>
ST_10 : Operation 227 [1/1] (0.00ns)   --->   "%max_0_2 = phi float [ 0x3810000000000000, %Col_Loop1 ], [ %max_1_2, %Pool_Row_Loop_end2 ]" [pool/pooling.cpp:28]   --->   Operation 227 'phi' 'max_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 228 [1/1] (0.00ns)   --->   "%mpr_0_2 = phi i2 [ 0, %Col_Loop1 ], [ %add_ln20_2, %Pool_Row_Loop_end2 ]" [pool/pooling.cpp:20]   --->   Operation 228 'phi' 'mpr_0_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 229 [1/1] (0.00ns)   --->   "%zext_ln20_2 = zext i2 %mpr_0_2 to i5" [pool/pooling.cpp:20]   --->   Operation 229 'zext' 'zext_ln20_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 230 [1/1] (0.95ns)   --->   "%icmp_ln20_2 = icmp eq i2 %mpr_0_2, -2" [pool/pooling.cpp:20]   --->   Operation 230 'icmp' 'icmp_ln20_2' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 231 [1/1] (0.00ns)   --->   "%empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 231 'speclooptripcount' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 232 [1/1] (1.56ns)   --->   "%add_ln20_2 = add i2 %mpr_0_2, 1" [pool/pooling.cpp:20]   --->   Operation 232 'add' 'add_ln20_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 233 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_2, label %Col_Loop2, label %Pool_Row_Loop_begin2" [pool/pooling.cpp:20]   --->   Operation 233 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 234 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 234 'specloopname' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_10 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_9 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 235 'specregionbegin' 'tmp_9' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_10 : Operation 236 [1/1] (1.78ns)   --->   "%add_ln25_2 = add i5 %zext_ln20_2, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 236 'add' 'add_ln25_2' <Predicate = (!icmp_ln20_2)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 237 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i5 %add_ln25_2 to i10" [pool/pooling.cpp:28]   --->   Operation 237 'zext' 'zext_ln28_5' <Predicate = (!icmp_ln20_2)> <Delay = 0.00>
ST_10 : Operation 238 [1/1] (3.78ns)   --->   "%mul_ln28_2 = mul i10 %zext_ln28_5, 26" [pool/pooling.cpp:28]   --->   Operation 238 'mul' 'mul_ln28_2' <Predicate = (!icmp_ln20_2)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 239 [1/1] (1.76ns)   --->   "br label %8" [pool/pooling.cpp:23]   --->   Operation 239 'br' <Predicate = (!icmp_ln20_2)> <Delay = 1.76>
ST_10 : Operation 240 [1/1] (3.25ns)   --->   "store float %max_0_2, float* %max_pool_1_out_addr_2, align 4" [pool/pooling.cpp:35]   --->   Operation 240 'store' <Predicate = (icmp_ln20_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_10 : Operation 241 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_3) nounwind" [pool/pooling.cpp:36]   --->   Operation 241 'specregionend' 'empty_13' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_10 : Operation 242 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 242 'specregionbegin' 'tmp_8' <Predicate = (icmp_ln20_2)> <Delay = 0.00>
ST_10 : Operation 243 [1/1] (1.76ns)   --->   "br label %9" [pool/pooling.cpp:20]   --->   Operation 243 'br' <Predicate = (icmp_ln20_2)> <Delay = 1.76>

State 11 <SV = 6> <Delay = 6.92>
ST_11 : Operation 244 [1/1] (0.00ns)   --->   "%max_1_2 = phi float [ %max_0_2, %Pool_Row_Loop_begin2 ], [ %select_ln28_2, %._crit_edge.2 ]" [pool/pooling.cpp:28]   --->   Operation 244 'phi' 'max_1_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 245 [1/1] (0.00ns)   --->   "%mpc_0_2 = phi i2 [ 0, %Pool_Row_Loop_begin2 ], [ %add_ln23_2, %._crit_edge.2 ]" [pool/pooling.cpp:23]   --->   Operation 245 'phi' 'mpc_0_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 246 [1/1] (0.95ns)   --->   "%icmp_ln23_2 = icmp eq i2 %mpc_0_2, -2" [pool/pooling.cpp:23]   --->   Operation 246 'icmp' 'icmp_ln23_2' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 247 [1/1] (0.00ns)   --->   "%empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 247 'speclooptripcount' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 248 [1/1] (1.56ns)   --->   "%add_ln23_2 = add i2 %mpc_0_2, 1" [pool/pooling.cpp:23]   --->   Operation 248 'add' 'add_ln23_2' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 249 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_2, label %Pool_Row_Loop_end2, label %._crit_edge.2" [pool/pooling.cpp:23]   --->   Operation 249 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 250 [1/1] (0.00ns)   --->   "%or_ln = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 true, i2 %mpc_0_2)" [pool/pooling.cpp:26]   --->   Operation 250 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln28_10 = zext i3 %or_ln to i10" [pool/pooling.cpp:28]   --->   Operation 251 'zext' 'zext_ln28_10' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 252 [1/1] (1.73ns)   --->   "%add_ln28_4 = add i10 %mul_ln28_2, %zext_ln28_10" [pool/pooling.cpp:28]   --->   Operation 252 'add' 'add_ln28_4' <Predicate = (!icmp_ln23_2)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 253 [1/1] (0.00ns)   --->   "%tmp_67 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_4, i5 0)" [pool/pooling.cpp:28]   --->   Operation 253 'bitconcatenate' 'tmp_67' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 254 [1/1] (0.00ns)   --->   "%zext_ln28_11 = zext i15 %tmp_67 to i16" [pool/pooling.cpp:28]   --->   Operation 254 'zext' 'zext_ln28_11' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 255 [1/1] (1.94ns)   --->   "%add_ln28_5 = add i16 %zext_ln28_11, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 255 'add' 'add_ln28_5' <Predicate = (!icmp_ln23_2)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 256 [1/1] (0.00ns)   --->   "%zext_ln28_12 = zext i16 %add_ln28_5 to i64" [pool/pooling.cpp:28]   --->   Operation 256 'zext' 'zext_ln28_12' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 257 [1/1] (0.00ns)   --->   "%conv_1_out_addr_2 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_12" [pool/pooling.cpp:28]   --->   Operation 257 'getelementptr' 'conv_1_out_addr_2' <Predicate = (!icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 258 [2/2] (3.25ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 258 'load' 'conv_1_out_load_2' <Predicate = (!icmp_ln23_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_11 : Operation 259 [1/1] (0.00ns)   --->   "%empty_15 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_9) nounwind" [pool/pooling.cpp:33]   --->   Operation 259 'specregionend' 'empty_15' <Predicate = (icmp_ln23_2)> <Delay = 0.00>
ST_11 : Operation 260 [1/1] (0.00ns)   --->   "br label %7" [pool/pooling.cpp:20]   --->   Operation 260 'br' <Predicate = (icmp_ln23_2)> <Delay = 0.00>

State 12 <SV = 7> <Delay = 11.7>
ST_12 : Operation 261 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 261 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 262 [1/2] (3.25ns)   --->   "%conv_1_out_load_2 = load float* %conv_1_out_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 262 'load' 'conv_1_out_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_12 : Operation 263 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %conv_1_out_load_2 to i32" [pool/pooling.cpp:28]   --->   Operation 263 'bitcast' 'bitcast_ln28_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 264 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_4 to i23" [pool/pooling.cpp:28]   --->   Operation 265 'trunc' 'trunc_ln28_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 266 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %max_1_2 to i32" [pool/pooling.cpp:28]   --->   Operation 266 'bitcast' 'bitcast_ln28_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 267 [1/1] (0.00ns)   --->   "%tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 267 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_5 to i23" [pool/pooling.cpp:28]   --->   Operation 268 'trunc' 'trunc_ln28_5' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 269 [1/1] (1.55ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_15, -1" [pool/pooling.cpp:28]   --->   Operation 269 'icmp' 'icmp_ln28_8' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 270 [1/1] (2.44ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [pool/pooling.cpp:28]   --->   Operation 270 'icmp' 'icmp_ln28_9' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 271 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pool/pooling.cpp:28]   --->   Operation 271 'or' 'or_ln28_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 272 [1/1] (1.55ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_16, -1" [pool/pooling.cpp:28]   --->   Operation 272 'icmp' 'icmp_ln28_10' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 273 [1/1] (2.44ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [pool/pooling.cpp:28]   --->   Operation 273 'icmp' 'icmp_ln28_11' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 274 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pool/pooling.cpp:28]   --->   Operation 274 'or' 'or_ln28_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_5)   --->   "%and_ln28_4 = and i1 %or_ln28_4, %or_ln28_5" [pool/pooling.cpp:28]   --->   Operation 275 'and' 'and_ln28_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 276 [1/1] (6.78ns)   --->   "%tmp_17 = fcmp ogt float %conv_1_out_load_2, %max_1_2" [pool/pooling.cpp:28]   --->   Operation 276 'fcmp' 'tmp_17' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 277 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_5 = and i1 %and_ln28_4, %tmp_17" [pool/pooling.cpp:28]   --->   Operation 277 'and' 'and_ln28_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 278 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_5, float %conv_1_out_load_2, float %max_1_2" [pool/pooling.cpp:28]   --->   Operation 278 'select' 'select_ln28_2' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 279 [1/1] (0.00ns)   --->   "br label %8" [pool/pooling.cpp:23]   --->   Operation 279 'br' <Predicate = true> <Delay = 0.00>

State 13 <SV = 6> <Delay = 5.56>
ST_13 : Operation 280 [1/1] (0.00ns)   --->   "%max_0_3 = phi float [ 0x3810000000000000, %Col_Loop2 ], [ %max_1_3, %Pool_Row_Loop_end3 ]" [pool/pooling.cpp:28]   --->   Operation 280 'phi' 'max_0_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 281 [1/1] (0.00ns)   --->   "%mpr_0_3 = phi i2 [ 0, %Col_Loop2 ], [ %add_ln20_3, %Pool_Row_Loop_end3 ]" [pool/pooling.cpp:20]   --->   Operation 281 'phi' 'mpr_0_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln20_3 = zext i2 %mpr_0_3 to i5" [pool/pooling.cpp:20]   --->   Operation 282 'zext' 'zext_ln20_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 283 [1/1] (0.95ns)   --->   "%icmp_ln20_3 = icmp eq i2 %mpr_0_3, -2" [pool/pooling.cpp:20]   --->   Operation 283 'icmp' 'icmp_ln20_3' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 284 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 284 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 285 [1/1] (1.56ns)   --->   "%add_ln20_3 = add i2 %mpr_0_3, 1" [pool/pooling.cpp:20]   --->   Operation 285 'add' 'add_ln20_3' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 286 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_3, label %Col_Loop3, label %Pool_Row_Loop_begin3" [pool/pooling.cpp:20]   --->   Operation 286 'br' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 287 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 287 'specloopname' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_13 : Operation 288 [1/1] (0.00ns)   --->   "%tmp_14 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 288 'specregionbegin' 'tmp_14' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_13 : Operation 289 [1/1] (1.78ns)   --->   "%add_ln25_3 = add i5 %zext_ln20_3, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 289 'add' 'add_ln25_3' <Predicate = (!icmp_ln20_3)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 290 [1/1] (0.00ns)   --->   "%zext_ln28_9 = zext i5 %add_ln25_3 to i10" [pool/pooling.cpp:28]   --->   Operation 290 'zext' 'zext_ln28_9' <Predicate = (!icmp_ln20_3)> <Delay = 0.00>
ST_13 : Operation 291 [1/1] (3.78ns)   --->   "%mul_ln28_3 = mul i10 %zext_ln28_9, 26" [pool/pooling.cpp:28]   --->   Operation 291 'mul' 'mul_ln28_3' <Predicate = (!icmp_ln20_3)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 292 [1/1] (1.76ns)   --->   "br label %10" [pool/pooling.cpp:23]   --->   Operation 292 'br' <Predicate = (!icmp_ln20_3)> <Delay = 1.76>
ST_13 : Operation 293 [1/1] (3.25ns)   --->   "store float %max_0_3, float* %max_pool_1_out_addr_3, align 4" [pool/pooling.cpp:35]   --->   Operation 293 'store' <Predicate = (icmp_ln20_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_13 : Operation 294 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_8) nounwind" [pool/pooling.cpp:36]   --->   Operation 294 'specregionend' 'empty_17' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_13 : Operation 295 [1/1] (0.00ns)   --->   "%tmp_13 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 295 'specregionbegin' 'tmp_13' <Predicate = (icmp_ln20_3)> <Delay = 0.00>
ST_13 : Operation 296 [1/1] (1.76ns)   --->   "br label %11" [pool/pooling.cpp:20]   --->   Operation 296 'br' <Predicate = (icmp_ln20_3)> <Delay = 1.76>

State 14 <SV = 7> <Delay = 6.92>
ST_14 : Operation 297 [1/1] (0.00ns)   --->   "%max_1_3 = phi float [ %max_0_3, %Pool_Row_Loop_begin3 ], [ %select_ln28_3, %._crit_edge.3 ]" [pool/pooling.cpp:28]   --->   Operation 297 'phi' 'max_1_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 298 [1/1] (0.00ns)   --->   "%mpc_0_3 = phi i2 [ 0, %Pool_Row_Loop_begin3 ], [ %add_ln23_3, %._crit_edge.3 ]" [pool/pooling.cpp:23]   --->   Operation 298 'phi' 'mpc_0_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 299 [1/1] (0.95ns)   --->   "%icmp_ln23_3 = icmp eq i2 %mpc_0_3, -2" [pool/pooling.cpp:23]   --->   Operation 299 'icmp' 'icmp_ln23_3' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 300 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 300 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 301 [1/1] (1.56ns)   --->   "%add_ln23_3 = add i2 %mpc_0_3, 1" [pool/pooling.cpp:23]   --->   Operation 301 'add' 'add_ln23_3' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 302 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_3, label %Pool_Row_Loop_end3, label %._crit_edge.3" [pool/pooling.cpp:23]   --->   Operation 302 'br' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_6)   --->   "%xor_ln26_1 = xor i2 %mpc_0_3, -2" [pool/pooling.cpp:26]   --->   Operation 303 'xor' 'xor_ln26_1' <Predicate = (!icmp_ln23_3)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 304 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_6)   --->   "%sext_ln26 = sext i2 %xor_ln26_1 to i3" [pool/pooling.cpp:26]   --->   Operation 304 'sext' 'sext_ln26' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_6)   --->   "%zext_ln28_14 = zext i3 %sext_ln26 to i10" [pool/pooling.cpp:28]   --->   Operation 305 'zext' 'zext_ln28_14' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 306 [1/1] (1.73ns) (out node of the LUT)   --->   "%add_ln28_6 = add i10 %zext_ln28_14, %mul_ln28_3" [pool/pooling.cpp:28]   --->   Operation 306 'add' 'add_ln28_6' <Predicate = (!icmp_ln23_3)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 307 [1/1] (0.00ns)   --->   "%tmp_68 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_6, i5 0)" [pool/pooling.cpp:28]   --->   Operation 307 'bitconcatenate' 'tmp_68' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 308 [1/1] (0.00ns)   --->   "%zext_ln28_15 = zext i15 %tmp_68 to i16" [pool/pooling.cpp:28]   --->   Operation 308 'zext' 'zext_ln28_15' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 309 [1/1] (1.94ns)   --->   "%add_ln28_7 = add i16 %zext_ln13, %zext_ln28_15" [pool/pooling.cpp:28]   --->   Operation 309 'add' 'add_ln28_7' <Predicate = (!icmp_ln23_3)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 310 [1/1] (0.00ns)   --->   "%zext_ln28_16 = zext i16 %add_ln28_7 to i64" [pool/pooling.cpp:28]   --->   Operation 310 'zext' 'zext_ln28_16' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 311 [1/1] (0.00ns)   --->   "%conv_1_out_addr_3 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_16" [pool/pooling.cpp:28]   --->   Operation 311 'getelementptr' 'conv_1_out_addr_3' <Predicate = (!icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 312 [2/2] (3.25ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 312 'load' 'conv_1_out_load_3' <Predicate = (!icmp_ln23_3)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_14 : Operation 313 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_14) nounwind" [pool/pooling.cpp:33]   --->   Operation 313 'specregionend' 'empty_19' <Predicate = (icmp_ln23_3)> <Delay = 0.00>
ST_14 : Operation 314 [1/1] (0.00ns)   --->   "br label %9" [pool/pooling.cpp:20]   --->   Operation 314 'br' <Predicate = (icmp_ln23_3)> <Delay = 0.00>

State 15 <SV = 8> <Delay = 11.7>
ST_15 : Operation 315 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 315 'specloopname' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 316 [1/2] (3.25ns)   --->   "%conv_1_out_load_3 = load float* %conv_1_out_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 316 'load' 'conv_1_out_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_15 : Operation 317 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %conv_1_out_load_3 to i32" [pool/pooling.cpp:28]   --->   Operation 317 'bitcast' 'bitcast_ln28_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 318 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 318 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_6 to i23" [pool/pooling.cpp:28]   --->   Operation 319 'trunc' 'trunc_ln28_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 320 [1/1] (0.00ns)   --->   "%bitcast_ln28_7 = bitcast float %max_1_3 to i32" [pool/pooling.cpp:28]   --->   Operation 320 'bitcast' 'bitcast_ln28_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 321 [1/1] (0.00ns)   --->   "%tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_7, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 321 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 322 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_7 to i23" [pool/pooling.cpp:28]   --->   Operation 322 'trunc' 'trunc_ln28_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 323 [1/1] (1.55ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_20, -1" [pool/pooling.cpp:28]   --->   Operation 323 'icmp' 'icmp_ln28_12' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 324 [1/1] (2.44ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [pool/pooling.cpp:28]   --->   Operation 324 'icmp' 'icmp_ln28_13' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 325 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pool/pooling.cpp:28]   --->   Operation 325 'or' 'or_ln28_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 326 [1/1] (1.55ns)   --->   "%icmp_ln28_14 = icmp ne i8 %tmp_21, -1" [pool/pooling.cpp:28]   --->   Operation 326 'icmp' 'icmp_ln28_14' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 327 [1/1] (2.44ns)   --->   "%icmp_ln28_15 = icmp eq i23 %trunc_ln28_7, 0" [pool/pooling.cpp:28]   --->   Operation 327 'icmp' 'icmp_ln28_15' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%or_ln28_7 = or i1 %icmp_ln28_15, %icmp_ln28_14" [pool/pooling.cpp:28]   --->   Operation 328 'or' 'or_ln28_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 329 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%and_ln28_6 = and i1 %or_ln28_6, %or_ln28_7" [pool/pooling.cpp:28]   --->   Operation 329 'and' 'and_ln28_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 330 [1/1] (6.78ns)   --->   "%tmp_22 = fcmp ogt float %conv_1_out_load_3, %max_1_3" [pool/pooling.cpp:28]   --->   Operation 330 'fcmp' 'tmp_22' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 331 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_7 = and i1 %and_ln28_6, %tmp_22" [pool/pooling.cpp:28]   --->   Operation 331 'and' 'and_ln28_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 332 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_7, float %conv_1_out_load_3, float %max_1_3" [pool/pooling.cpp:28]   --->   Operation 332 'select' 'select_ln28_3' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 333 [1/1] (0.00ns)   --->   "br label %10" [pool/pooling.cpp:23]   --->   Operation 333 'br' <Predicate = true> <Delay = 0.00>

State 16 <SV = 7> <Delay = 5.56>
ST_16 : Operation 334 [1/1] (0.00ns)   --->   "%max_0_4 = phi float [ 0x3810000000000000, %Col_Loop3 ], [ %max_1_4, %Pool_Row_Loop_end4 ]" [pool/pooling.cpp:28]   --->   Operation 334 'phi' 'max_0_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 335 [1/1] (0.00ns)   --->   "%mpr_0_4 = phi i2 [ 0, %Col_Loop3 ], [ %add_ln20_4, %Pool_Row_Loop_end4 ]" [pool/pooling.cpp:20]   --->   Operation 335 'phi' 'mpr_0_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 336 [1/1] (0.00ns)   --->   "%zext_ln20_4 = zext i2 %mpr_0_4 to i5" [pool/pooling.cpp:20]   --->   Operation 336 'zext' 'zext_ln20_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 337 [1/1] (0.95ns)   --->   "%icmp_ln20_4 = icmp eq i2 %mpr_0_4, -2" [pool/pooling.cpp:20]   --->   Operation 337 'icmp' 'icmp_ln20_4' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 338 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 338 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 339 [1/1] (1.56ns)   --->   "%add_ln20_4 = add i2 %mpr_0_4, 1" [pool/pooling.cpp:20]   --->   Operation 339 'add' 'add_ln20_4' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 340 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_4, label %Col_Loop4, label %Pool_Row_Loop_begin4" [pool/pooling.cpp:20]   --->   Operation 340 'br' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 341 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 341 'specloopname' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_16 : Operation 342 [1/1] (0.00ns)   --->   "%tmp_19 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 342 'specregionbegin' 'tmp_19' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_16 : Operation 343 [1/1] (1.78ns)   --->   "%add_ln25_4 = add i5 %zext_ln20_4, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 343 'add' 'add_ln25_4' <Predicate = (!icmp_ln20_4)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 344 [1/1] (0.00ns)   --->   "%zext_ln28_13 = zext i5 %add_ln25_4 to i10" [pool/pooling.cpp:28]   --->   Operation 344 'zext' 'zext_ln28_13' <Predicate = (!icmp_ln20_4)> <Delay = 0.00>
ST_16 : Operation 345 [1/1] (3.78ns)   --->   "%mul_ln28_4 = mul i10 %zext_ln28_13, 26" [pool/pooling.cpp:28]   --->   Operation 345 'mul' 'mul_ln28_4' <Predicate = (!icmp_ln20_4)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 346 [1/1] (1.76ns)   --->   "br label %12" [pool/pooling.cpp:23]   --->   Operation 346 'br' <Predicate = (!icmp_ln20_4)> <Delay = 1.76>
ST_16 : Operation 347 [1/1] (3.25ns)   --->   "store float %max_0_4, float* %max_pool_1_out_addr_4, align 4" [pool/pooling.cpp:35]   --->   Operation 347 'store' <Predicate = (icmp_ln20_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_16 : Operation 348 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_13) nounwind" [pool/pooling.cpp:36]   --->   Operation 348 'specregionend' 'empty_21' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_16 : Operation 349 [1/1] (0.00ns)   --->   "%tmp_18 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 349 'specregionbegin' 'tmp_18' <Predicate = (icmp_ln20_4)> <Delay = 0.00>
ST_16 : Operation 350 [1/1] (1.76ns)   --->   "br label %13" [pool/pooling.cpp:20]   --->   Operation 350 'br' <Predicate = (icmp_ln20_4)> <Delay = 1.76>

State 17 <SV = 8> <Delay = 6.92>
ST_17 : Operation 351 [1/1] (0.00ns)   --->   "%max_1_4 = phi float [ %max_0_4, %Pool_Row_Loop_begin4 ], [ %select_ln28_4, %._crit_edge.4 ]" [pool/pooling.cpp:28]   --->   Operation 351 'phi' 'max_1_4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 352 [1/1] (0.00ns)   --->   "%mpc_0_4 = phi i2 [ 0, %Pool_Row_Loop_begin4 ], [ %add_ln23_4, %._crit_edge.4 ]" [pool/pooling.cpp:23]   --->   Operation 352 'phi' 'mpc_0_4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 353 [1/1] (0.95ns)   --->   "%icmp_ln23_4 = icmp eq i2 %mpc_0_4, -2" [pool/pooling.cpp:23]   --->   Operation 353 'icmp' 'icmp_ln23_4' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 354 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 354 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 355 [1/1] (1.56ns)   --->   "%add_ln23_4 = add i2 %mpc_0_4, 1" [pool/pooling.cpp:23]   --->   Operation 355 'add' 'add_ln23_4' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 356 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_4, label %Pool_Row_Loop_end4, label %._crit_edge.4" [pool/pooling.cpp:23]   --->   Operation 356 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 357 [1/1] (0.00ns)   --->   "%or_ln26_1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 -2, i2 %mpc_0_4)" [pool/pooling.cpp:26]   --->   Operation 357 'bitconcatenate' 'or_ln26_1' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 358 [1/1] (0.00ns)   --->   "%zext_ln28_18 = zext i4 %or_ln26_1 to i10" [pool/pooling.cpp:28]   --->   Operation 358 'zext' 'zext_ln28_18' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 359 [1/1] (1.73ns)   --->   "%add_ln28_8 = add i10 %mul_ln28_4, %zext_ln28_18" [pool/pooling.cpp:28]   --->   Operation 359 'add' 'add_ln28_8' <Predicate = (!icmp_ln23_4)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 360 [1/1] (0.00ns)   --->   "%tmp_69 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_8, i5 0)" [pool/pooling.cpp:28]   --->   Operation 360 'bitconcatenate' 'tmp_69' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 361 [1/1] (0.00ns)   --->   "%zext_ln28_19 = zext i15 %tmp_69 to i16" [pool/pooling.cpp:28]   --->   Operation 361 'zext' 'zext_ln28_19' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 362 [1/1] (1.94ns)   --->   "%add_ln28_9 = add i16 %zext_ln28_19, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 362 'add' 'add_ln28_9' <Predicate = (!icmp_ln23_4)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 363 [1/1] (0.00ns)   --->   "%zext_ln28_20 = zext i16 %add_ln28_9 to i64" [pool/pooling.cpp:28]   --->   Operation 363 'zext' 'zext_ln28_20' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 364 [1/1] (0.00ns)   --->   "%conv_1_out_addr_4 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_20" [pool/pooling.cpp:28]   --->   Operation 364 'getelementptr' 'conv_1_out_addr_4' <Predicate = (!icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 365 [2/2] (3.25ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pool/pooling.cpp:28]   --->   Operation 365 'load' 'conv_1_out_load_4' <Predicate = (!icmp_ln23_4)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_17 : Operation 366 [1/1] (0.00ns)   --->   "%empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_19) nounwind" [pool/pooling.cpp:33]   --->   Operation 366 'specregionend' 'empty_23' <Predicate = (icmp_ln23_4)> <Delay = 0.00>
ST_17 : Operation 367 [1/1] (0.00ns)   --->   "br label %11" [pool/pooling.cpp:20]   --->   Operation 367 'br' <Predicate = (icmp_ln23_4)> <Delay = 0.00>

State 18 <SV = 9> <Delay = 11.7>
ST_18 : Operation 368 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 368 'specloopname' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 369 [1/2] (3.25ns)   --->   "%conv_1_out_load_4 = load float* %conv_1_out_addr_4, align 4" [pool/pooling.cpp:28]   --->   Operation 369 'load' 'conv_1_out_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_18 : Operation 370 [1/1] (0.00ns)   --->   "%bitcast_ln28_8 = bitcast float %conv_1_out_load_4 to i32" [pool/pooling.cpp:28]   --->   Operation 370 'bitcast' 'bitcast_ln28_8' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_38 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_8, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 371 'partselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 372 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_8 to i23" [pool/pooling.cpp:28]   --->   Operation 372 'trunc' 'trunc_ln28_8' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 373 [1/1] (0.00ns)   --->   "%bitcast_ln28_9 = bitcast float %max_1_4 to i32" [pool/pooling.cpp:28]   --->   Operation 373 'bitcast' 'bitcast_ln28_9' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 374 [1/1] (0.00ns)   --->   "%tmp_39 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_9, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 374 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 375 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_9 to i23" [pool/pooling.cpp:28]   --->   Operation 375 'trunc' 'trunc_ln28_9' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 376 [1/1] (1.55ns)   --->   "%icmp_ln28_16 = icmp ne i8 %tmp_38, -1" [pool/pooling.cpp:28]   --->   Operation 376 'icmp' 'icmp_ln28_16' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 377 [1/1] (2.44ns)   --->   "%icmp_ln28_17 = icmp eq i23 %trunc_ln28_8, 0" [pool/pooling.cpp:28]   --->   Operation 377 'icmp' 'icmp_ln28_17' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_8 = or i1 %icmp_ln28_17, %icmp_ln28_16" [pool/pooling.cpp:28]   --->   Operation 378 'or' 'or_ln28_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 379 [1/1] (1.55ns)   --->   "%icmp_ln28_18 = icmp ne i8 %tmp_39, -1" [pool/pooling.cpp:28]   --->   Operation 379 'icmp' 'icmp_ln28_18' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 380 [1/1] (2.44ns)   --->   "%icmp_ln28_19 = icmp eq i23 %trunc_ln28_9, 0" [pool/pooling.cpp:28]   --->   Operation 380 'icmp' 'icmp_ln28_19' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_9 = or i1 %icmp_ln28_19, %icmp_ln28_18" [pool/pooling.cpp:28]   --->   Operation 381 'or' 'or_ln28_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%and_ln28_8 = and i1 %or_ln28_8, %or_ln28_9" [pool/pooling.cpp:28]   --->   Operation 382 'and' 'and_ln28_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 383 [1/1] (6.78ns)   --->   "%tmp_40 = fcmp ogt float %conv_1_out_load_4, %max_1_4" [pool/pooling.cpp:28]   --->   Operation 383 'fcmp' 'tmp_40' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 384 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_9 = and i1 %and_ln28_8, %tmp_40" [pool/pooling.cpp:28]   --->   Operation 384 'and' 'and_ln28_9' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 385 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_4 = select i1 %and_ln28_9, float %conv_1_out_load_4, float %max_1_4" [pool/pooling.cpp:28]   --->   Operation 385 'select' 'select_ln28_4' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 386 [1/1] (0.00ns)   --->   "br label %12" [pool/pooling.cpp:23]   --->   Operation 386 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 8> <Delay = 5.56>
ST_19 : Operation 387 [1/1] (0.00ns)   --->   "%max_0_5 = phi float [ 0x3810000000000000, %Col_Loop4 ], [ %max_1_5, %Pool_Row_Loop_end5 ]" [pool/pooling.cpp:28]   --->   Operation 387 'phi' 'max_0_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 388 [1/1] (0.00ns)   --->   "%mpr_0_5 = phi i2 [ 0, %Col_Loop4 ], [ %add_ln20_5, %Pool_Row_Loop_end5 ]" [pool/pooling.cpp:20]   --->   Operation 388 'phi' 'mpr_0_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 389 [1/1] (0.00ns)   --->   "%zext_ln20_5 = zext i2 %mpr_0_5 to i5" [pool/pooling.cpp:20]   --->   Operation 389 'zext' 'zext_ln20_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 390 [1/1] (0.95ns)   --->   "%icmp_ln20_5 = icmp eq i2 %mpr_0_5, -2" [pool/pooling.cpp:20]   --->   Operation 390 'icmp' 'icmp_ln20_5' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 391 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 391 'speclooptripcount' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 392 [1/1] (1.56ns)   --->   "%add_ln20_5 = add i2 %mpr_0_5, 1" [pool/pooling.cpp:20]   --->   Operation 392 'add' 'add_ln20_5' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 393 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_5, label %Col_Loop5, label %Pool_Row_Loop_begin5" [pool/pooling.cpp:20]   --->   Operation 393 'br' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 394 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 394 'specloopname' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_19 : Operation 395 [1/1] (0.00ns)   --->   "%tmp_24 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 395 'specregionbegin' 'tmp_24' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_19 : Operation 396 [1/1] (1.78ns)   --->   "%add_ln25_5 = add i5 %zext_ln20_5, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 396 'add' 'add_ln25_5' <Predicate = (!icmp_ln20_5)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 397 [1/1] (0.00ns)   --->   "%zext_ln28_17 = zext i5 %add_ln25_5 to i10" [pool/pooling.cpp:28]   --->   Operation 397 'zext' 'zext_ln28_17' <Predicate = (!icmp_ln20_5)> <Delay = 0.00>
ST_19 : Operation 398 [1/1] (3.78ns)   --->   "%mul_ln28_5 = mul i10 %zext_ln28_17, 26" [pool/pooling.cpp:28]   --->   Operation 398 'mul' 'mul_ln28_5' <Predicate = (!icmp_ln20_5)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 399 [1/1] (1.76ns)   --->   "br label %14" [pool/pooling.cpp:23]   --->   Operation 399 'br' <Predicate = (!icmp_ln20_5)> <Delay = 1.76>
ST_19 : Operation 400 [1/1] (3.25ns)   --->   "store float %max_0_5, float* %max_pool_1_out_addr_5, align 4" [pool/pooling.cpp:35]   --->   Operation 400 'store' <Predicate = (icmp_ln20_5)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_19 : Operation 401 [1/1] (0.00ns)   --->   "%empty_25 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_18) nounwind" [pool/pooling.cpp:36]   --->   Operation 401 'specregionend' 'empty_25' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_19 : Operation 402 [1/1] (0.00ns)   --->   "%tmp_23 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 402 'specregionbegin' 'tmp_23' <Predicate = (icmp_ln20_5)> <Delay = 0.00>
ST_19 : Operation 403 [1/1] (1.76ns)   --->   "br label %15" [pool/pooling.cpp:20]   --->   Operation 403 'br' <Predicate = (icmp_ln20_5)> <Delay = 1.76>

State 20 <SV = 9> <Delay = 8.66>
ST_20 : Operation 404 [1/1] (0.00ns)   --->   "%max_1_5 = phi float [ %max_0_5, %Pool_Row_Loop_begin5 ], [ %select_ln28_5, %._crit_edge.5 ]" [pool/pooling.cpp:28]   --->   Operation 404 'phi' 'max_1_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 405 [1/1] (0.00ns)   --->   "%mpc_0_5 = phi i2 [ 0, %Pool_Row_Loop_begin5 ], [ %add_ln23_5, %._crit_edge.5 ]" [pool/pooling.cpp:23]   --->   Operation 405 'phi' 'mpc_0_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 406 [1/1] (0.00ns)   --->   "%zext_ln23 = zext i2 %mpc_0_5 to i4" [pool/pooling.cpp:23]   --->   Operation 406 'zext' 'zext_ln23' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 407 [1/1] (0.95ns)   --->   "%icmp_ln23_5 = icmp eq i2 %mpc_0_5, -2" [pool/pooling.cpp:23]   --->   Operation 407 'icmp' 'icmp_ln23_5' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 408 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 408 'speclooptripcount' 'empty_28' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 409 [1/1] (1.56ns)   --->   "%add_ln23_5 = add i2 %mpc_0_5, 1" [pool/pooling.cpp:23]   --->   Operation 409 'add' 'add_ln23_5' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 410 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_5, label %Pool_Row_Loop_end5, label %._crit_edge.5" [pool/pooling.cpp:23]   --->   Operation 410 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 411 [1/1] (1.73ns)   --->   "%add_ln26 = add i4 -6, %zext_ln23" [pool/pooling.cpp:26]   --->   Operation 411 'add' 'add_ln26' <Predicate = (!icmp_ln23_5)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 412 [1/1] (0.00ns)   --->   "%zext_ln28_22 = zext i4 %add_ln26 to i10" [pool/pooling.cpp:28]   --->   Operation 412 'zext' 'zext_ln28_22' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 413 [1/1] (1.73ns)   --->   "%add_ln28_10 = add i10 %zext_ln28_22, %mul_ln28_5" [pool/pooling.cpp:28]   --->   Operation 413 'add' 'add_ln28_10' <Predicate = (!icmp_ln23_5)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 414 [1/1] (0.00ns)   --->   "%tmp_70 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_10, i5 0)" [pool/pooling.cpp:28]   --->   Operation 414 'bitconcatenate' 'tmp_70' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 415 [1/1] (0.00ns)   --->   "%zext_ln28_23 = zext i15 %tmp_70 to i16" [pool/pooling.cpp:28]   --->   Operation 415 'zext' 'zext_ln28_23' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 416 [1/1] (1.94ns)   --->   "%add_ln28_11 = add i16 %zext_ln13, %zext_ln28_23" [pool/pooling.cpp:28]   --->   Operation 416 'add' 'add_ln28_11' <Predicate = (!icmp_ln23_5)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 417 [1/1] (0.00ns)   --->   "%zext_ln28_24 = zext i16 %add_ln28_11 to i64" [pool/pooling.cpp:28]   --->   Operation 417 'zext' 'zext_ln28_24' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 418 [1/1] (0.00ns)   --->   "%conv_1_out_addr_5 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_24" [pool/pooling.cpp:28]   --->   Operation 418 'getelementptr' 'conv_1_out_addr_5' <Predicate = (!icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 419 [2/2] (3.25ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pool/pooling.cpp:28]   --->   Operation 419 'load' 'conv_1_out_load_5' <Predicate = (!icmp_ln23_5)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_20 : Operation 420 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_24) nounwind" [pool/pooling.cpp:33]   --->   Operation 420 'specregionend' 'empty_27' <Predicate = (icmp_ln23_5)> <Delay = 0.00>
ST_20 : Operation 421 [1/1] (0.00ns)   --->   "br label %13" [pool/pooling.cpp:20]   --->   Operation 421 'br' <Predicate = (icmp_ln23_5)> <Delay = 0.00>

State 21 <SV = 10> <Delay = 11.7>
ST_21 : Operation 422 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 422 'specloopname' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 423 [1/2] (3.25ns)   --->   "%conv_1_out_load_5 = load float* %conv_1_out_addr_5, align 4" [pool/pooling.cpp:28]   --->   Operation 423 'load' 'conv_1_out_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_21 : Operation 424 [1/1] (0.00ns)   --->   "%bitcast_ln28_10 = bitcast float %conv_1_out_load_5 to i32" [pool/pooling.cpp:28]   --->   Operation 424 'bitcast' 'bitcast_ln28_10' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 425 [1/1] (0.00ns)   --->   "%tmp_41 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_10, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 425 'partselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 426 [1/1] (0.00ns)   --->   "%trunc_ln28_10 = trunc i32 %bitcast_ln28_10 to i23" [pool/pooling.cpp:28]   --->   Operation 426 'trunc' 'trunc_ln28_10' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 427 [1/1] (0.00ns)   --->   "%bitcast_ln28_11 = bitcast float %max_1_5 to i32" [pool/pooling.cpp:28]   --->   Operation 427 'bitcast' 'bitcast_ln28_11' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 428 [1/1] (0.00ns)   --->   "%tmp_42 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_11, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 428 'partselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 429 [1/1] (0.00ns)   --->   "%trunc_ln28_11 = trunc i32 %bitcast_ln28_11 to i23" [pool/pooling.cpp:28]   --->   Operation 429 'trunc' 'trunc_ln28_11' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 430 [1/1] (1.55ns)   --->   "%icmp_ln28_20 = icmp ne i8 %tmp_41, -1" [pool/pooling.cpp:28]   --->   Operation 430 'icmp' 'icmp_ln28_20' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 431 [1/1] (2.44ns)   --->   "%icmp_ln28_21 = icmp eq i23 %trunc_ln28_10, 0" [pool/pooling.cpp:28]   --->   Operation 431 'icmp' 'icmp_ln28_21' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_10 = or i1 %icmp_ln28_21, %icmp_ln28_20" [pool/pooling.cpp:28]   --->   Operation 432 'or' 'or_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 433 [1/1] (1.55ns)   --->   "%icmp_ln28_22 = icmp ne i8 %tmp_42, -1" [pool/pooling.cpp:28]   --->   Operation 433 'icmp' 'icmp_ln28_22' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 434 [1/1] (2.44ns)   --->   "%icmp_ln28_23 = icmp eq i23 %trunc_ln28_11, 0" [pool/pooling.cpp:28]   --->   Operation 434 'icmp' 'icmp_ln28_23' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_11 = or i1 %icmp_ln28_23, %icmp_ln28_22" [pool/pooling.cpp:28]   --->   Operation 435 'or' 'or_ln28_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 436 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%and_ln28_10 = and i1 %or_ln28_10, %or_ln28_11" [pool/pooling.cpp:28]   --->   Operation 436 'and' 'and_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 437 [1/1] (6.78ns)   --->   "%tmp_43 = fcmp ogt float %conv_1_out_load_5, %max_1_5" [pool/pooling.cpp:28]   --->   Operation 437 'fcmp' 'tmp_43' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 438 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_11 = and i1 %and_ln28_10, %tmp_43" [pool/pooling.cpp:28]   --->   Operation 438 'and' 'and_ln28_11' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 439 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_5 = select i1 %and_ln28_11, float %conv_1_out_load_5, float %max_1_5" [pool/pooling.cpp:28]   --->   Operation 439 'select' 'select_ln28_5' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 440 [1/1] (0.00ns)   --->   "br label %14" [pool/pooling.cpp:23]   --->   Operation 440 'br' <Predicate = true> <Delay = 0.00>

State 22 <SV = 9> <Delay = 5.56>
ST_22 : Operation 441 [1/1] (0.00ns)   --->   "%max_0_6 = phi float [ 0x3810000000000000, %Col_Loop5 ], [ %max_1_6, %Pool_Row_Loop_end6 ]" [pool/pooling.cpp:28]   --->   Operation 441 'phi' 'max_0_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 442 [1/1] (0.00ns)   --->   "%mpr_0_6 = phi i2 [ 0, %Col_Loop5 ], [ %add_ln20_6, %Pool_Row_Loop_end6 ]" [pool/pooling.cpp:20]   --->   Operation 442 'phi' 'mpr_0_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 443 [1/1] (0.00ns)   --->   "%zext_ln20_6 = zext i2 %mpr_0_6 to i5" [pool/pooling.cpp:20]   --->   Operation 443 'zext' 'zext_ln20_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 444 [1/1] (0.95ns)   --->   "%icmp_ln20_6 = icmp eq i2 %mpr_0_6, -2" [pool/pooling.cpp:20]   --->   Operation 444 'icmp' 'icmp_ln20_6' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 445 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 445 'speclooptripcount' 'empty_30' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 446 [1/1] (1.56ns)   --->   "%add_ln20_6 = add i2 %mpr_0_6, 1" [pool/pooling.cpp:20]   --->   Operation 446 'add' 'add_ln20_6' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 447 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_6, label %Col_Loop6, label %Pool_Row_Loop_begin6" [pool/pooling.cpp:20]   --->   Operation 447 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 448 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 448 'specloopname' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_22 : Operation 449 [1/1] (0.00ns)   --->   "%tmp_26 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 449 'specregionbegin' 'tmp_26' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_22 : Operation 450 [1/1] (1.78ns)   --->   "%add_ln25_6 = add i5 %zext_ln20_6, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 450 'add' 'add_ln25_6' <Predicate = (!icmp_ln20_6)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 451 [1/1] (0.00ns)   --->   "%zext_ln28_21 = zext i5 %add_ln25_6 to i10" [pool/pooling.cpp:28]   --->   Operation 451 'zext' 'zext_ln28_21' <Predicate = (!icmp_ln20_6)> <Delay = 0.00>
ST_22 : Operation 452 [1/1] (3.78ns)   --->   "%mul_ln28_6 = mul i10 %zext_ln28_21, 26" [pool/pooling.cpp:28]   --->   Operation 452 'mul' 'mul_ln28_6' <Predicate = (!icmp_ln20_6)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 453 [1/1] (1.76ns)   --->   "br label %16" [pool/pooling.cpp:23]   --->   Operation 453 'br' <Predicate = (!icmp_ln20_6)> <Delay = 1.76>
ST_22 : Operation 454 [1/1] (3.25ns)   --->   "store float %max_0_6, float* %max_pool_1_out_addr_6, align 4" [pool/pooling.cpp:35]   --->   Operation 454 'store' <Predicate = (icmp_ln20_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_22 : Operation 455 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_23) nounwind" [pool/pooling.cpp:36]   --->   Operation 455 'specregionend' 'empty_29' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_22 : Operation 456 [1/1] (0.00ns)   --->   "%tmp_25 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 456 'specregionbegin' 'tmp_25' <Predicate = (icmp_ln20_6)> <Delay = 0.00>
ST_22 : Operation 457 [1/1] (1.76ns)   --->   "br label %17" [pool/pooling.cpp:20]   --->   Operation 457 'br' <Predicate = (icmp_ln20_6)> <Delay = 1.76>

State 23 <SV = 10> <Delay = 6.92>
ST_23 : Operation 458 [1/1] (0.00ns)   --->   "%max_1_6 = phi float [ %max_0_6, %Pool_Row_Loop_begin6 ], [ %select_ln28_6, %._crit_edge.6 ]" [pool/pooling.cpp:28]   --->   Operation 458 'phi' 'max_1_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 459 [1/1] (0.00ns)   --->   "%mpc_0_6 = phi i2 [ 0, %Pool_Row_Loop_begin6 ], [ %add_ln23_6, %._crit_edge.6 ]" [pool/pooling.cpp:23]   --->   Operation 459 'phi' 'mpc_0_6' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 460 [1/1] (0.95ns)   --->   "%icmp_ln23_6 = icmp eq i2 %mpc_0_6, -2" [pool/pooling.cpp:23]   --->   Operation 460 'icmp' 'icmp_ln23_6' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 461 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 461 'speclooptripcount' 'empty_32' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 462 [1/1] (1.56ns)   --->   "%add_ln23_6 = add i2 %mpc_0_6, 1" [pool/pooling.cpp:23]   --->   Operation 462 'add' 'add_ln23_6' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 463 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_6, label %Pool_Row_Loop_end6, label %._crit_edge.6" [pool/pooling.cpp:23]   --->   Operation 463 'br' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 464 [1/1] (0.00ns)   --->   "%or_ln26_2 = call i3 @_ssdm_op_BitConcatenate.i3.i1.i2(i1 true, i2 %mpc_0_6)" [pool/pooling.cpp:26]   --->   Operation 464 'bitconcatenate' 'or_ln26_2' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 465 [1/1] (0.00ns)   --->   "%sext_ln26_1 = sext i3 %or_ln26_2 to i4" [pool/pooling.cpp:26]   --->   Operation 465 'sext' 'sext_ln26_1' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 466 [1/1] (0.00ns)   --->   "%zext_ln28_26 = zext i4 %sext_ln26_1 to i10" [pool/pooling.cpp:28]   --->   Operation 466 'zext' 'zext_ln28_26' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 467 [1/1] (1.73ns)   --->   "%add_ln28_12 = add i10 %mul_ln28_6, %zext_ln28_26" [pool/pooling.cpp:28]   --->   Operation 467 'add' 'add_ln28_12' <Predicate = (!icmp_ln23_6)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 468 [1/1] (0.00ns)   --->   "%tmp_71 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_12, i5 0)" [pool/pooling.cpp:28]   --->   Operation 468 'bitconcatenate' 'tmp_71' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 469 [1/1] (0.00ns)   --->   "%zext_ln28_27 = zext i15 %tmp_71 to i16" [pool/pooling.cpp:28]   --->   Operation 469 'zext' 'zext_ln28_27' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 470 [1/1] (1.94ns)   --->   "%add_ln28_13 = add i16 %zext_ln28_27, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 470 'add' 'add_ln28_13' <Predicate = (!icmp_ln23_6)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 471 [1/1] (0.00ns)   --->   "%zext_ln28_28 = zext i16 %add_ln28_13 to i64" [pool/pooling.cpp:28]   --->   Operation 471 'zext' 'zext_ln28_28' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 472 [1/1] (0.00ns)   --->   "%conv_1_out_addr_6 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_28" [pool/pooling.cpp:28]   --->   Operation 472 'getelementptr' 'conv_1_out_addr_6' <Predicate = (!icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 473 [2/2] (3.25ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pool/pooling.cpp:28]   --->   Operation 473 'load' 'conv_1_out_load_6' <Predicate = (!icmp_ln23_6)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_23 : Operation 474 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_26) nounwind" [pool/pooling.cpp:33]   --->   Operation 474 'specregionend' 'empty_31' <Predicate = (icmp_ln23_6)> <Delay = 0.00>
ST_23 : Operation 475 [1/1] (0.00ns)   --->   "br label %15" [pool/pooling.cpp:20]   --->   Operation 475 'br' <Predicate = (icmp_ln23_6)> <Delay = 0.00>

State 24 <SV = 11> <Delay = 11.7>
ST_24 : Operation 476 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 476 'specloopname' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 477 [1/2] (3.25ns)   --->   "%conv_1_out_load_6 = load float* %conv_1_out_addr_6, align 4" [pool/pooling.cpp:28]   --->   Operation 477 'load' 'conv_1_out_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_24 : Operation 478 [1/1] (0.00ns)   --->   "%bitcast_ln28_12 = bitcast float %conv_1_out_load_6 to i32" [pool/pooling.cpp:28]   --->   Operation 478 'bitcast' 'bitcast_ln28_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 479 [1/1] (0.00ns)   --->   "%tmp_44 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_12, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 479 'partselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 480 [1/1] (0.00ns)   --->   "%trunc_ln28_12 = trunc i32 %bitcast_ln28_12 to i23" [pool/pooling.cpp:28]   --->   Operation 480 'trunc' 'trunc_ln28_12' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 481 [1/1] (0.00ns)   --->   "%bitcast_ln28_13 = bitcast float %max_1_6 to i32" [pool/pooling.cpp:28]   --->   Operation 481 'bitcast' 'bitcast_ln28_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 482 [1/1] (0.00ns)   --->   "%tmp_45 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_13, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 482 'partselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 483 [1/1] (0.00ns)   --->   "%trunc_ln28_13 = trunc i32 %bitcast_ln28_13 to i23" [pool/pooling.cpp:28]   --->   Operation 483 'trunc' 'trunc_ln28_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 484 [1/1] (1.55ns)   --->   "%icmp_ln28_24 = icmp ne i8 %tmp_44, -1" [pool/pooling.cpp:28]   --->   Operation 484 'icmp' 'icmp_ln28_24' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 485 [1/1] (2.44ns)   --->   "%icmp_ln28_25 = icmp eq i23 %trunc_ln28_12, 0" [pool/pooling.cpp:28]   --->   Operation 485 'icmp' 'icmp_ln28_25' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 486 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_12 = or i1 %icmp_ln28_25, %icmp_ln28_24" [pool/pooling.cpp:28]   --->   Operation 486 'or' 'or_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 487 [1/1] (1.55ns)   --->   "%icmp_ln28_26 = icmp ne i8 %tmp_45, -1" [pool/pooling.cpp:28]   --->   Operation 487 'icmp' 'icmp_ln28_26' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 488 [1/1] (2.44ns)   --->   "%icmp_ln28_27 = icmp eq i23 %trunc_ln28_13, 0" [pool/pooling.cpp:28]   --->   Operation 488 'icmp' 'icmp_ln28_27' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 489 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_13 = or i1 %icmp_ln28_27, %icmp_ln28_26" [pool/pooling.cpp:28]   --->   Operation 489 'or' 'or_ln28_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 490 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%and_ln28_12 = and i1 %or_ln28_12, %or_ln28_13" [pool/pooling.cpp:28]   --->   Operation 490 'and' 'and_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 491 [1/1] (6.78ns)   --->   "%tmp_46 = fcmp ogt float %conv_1_out_load_6, %max_1_6" [pool/pooling.cpp:28]   --->   Operation 491 'fcmp' 'tmp_46' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 492 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_13 = and i1 %and_ln28_12, %tmp_46" [pool/pooling.cpp:28]   --->   Operation 492 'and' 'and_ln28_13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 493 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_6 = select i1 %and_ln28_13, float %conv_1_out_load_6, float %max_1_6" [pool/pooling.cpp:28]   --->   Operation 493 'select' 'select_ln28_6' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 494 [1/1] (0.00ns)   --->   "br label %16" [pool/pooling.cpp:23]   --->   Operation 494 'br' <Predicate = true> <Delay = 0.00>

State 25 <SV = 10> <Delay = 5.56>
ST_25 : Operation 495 [1/1] (0.00ns)   --->   "%max_0_7 = phi float [ 0x3810000000000000, %Col_Loop6 ], [ %max_1_7, %Pool_Row_Loop_end7 ]" [pool/pooling.cpp:28]   --->   Operation 495 'phi' 'max_0_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 496 [1/1] (0.00ns)   --->   "%mpr_0_7 = phi i2 [ 0, %Col_Loop6 ], [ %add_ln20_7, %Pool_Row_Loop_end7 ]" [pool/pooling.cpp:20]   --->   Operation 496 'phi' 'mpr_0_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 497 [1/1] (0.00ns)   --->   "%zext_ln20_7 = zext i2 %mpr_0_7 to i5" [pool/pooling.cpp:20]   --->   Operation 497 'zext' 'zext_ln20_7' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 498 [1/1] (0.95ns)   --->   "%icmp_ln20_7 = icmp eq i2 %mpr_0_7, -2" [pool/pooling.cpp:20]   --->   Operation 498 'icmp' 'icmp_ln20_7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 499 [1/1] (0.00ns)   --->   "%empty_34 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 499 'speclooptripcount' 'empty_34' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 500 [1/1] (1.56ns)   --->   "%add_ln20_7 = add i2 %mpr_0_7, 1" [pool/pooling.cpp:20]   --->   Operation 500 'add' 'add_ln20_7' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 501 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_7, label %Col_Loop7, label %Pool_Row_Loop_begin7" [pool/pooling.cpp:20]   --->   Operation 501 'br' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 502 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 502 'specloopname' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_25 : Operation 503 [1/1] (0.00ns)   --->   "%tmp_28 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 503 'specregionbegin' 'tmp_28' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_25 : Operation 504 [1/1] (1.78ns)   --->   "%add_ln25_7 = add i5 %zext_ln20_7, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 504 'add' 'add_ln25_7' <Predicate = (!icmp_ln20_7)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 505 [1/1] (0.00ns)   --->   "%zext_ln28_25 = zext i5 %add_ln25_7 to i10" [pool/pooling.cpp:28]   --->   Operation 505 'zext' 'zext_ln28_25' <Predicate = (!icmp_ln20_7)> <Delay = 0.00>
ST_25 : Operation 506 [1/1] (3.78ns)   --->   "%mul_ln28_7 = mul i10 %zext_ln28_25, 26" [pool/pooling.cpp:28]   --->   Operation 506 'mul' 'mul_ln28_7' <Predicate = (!icmp_ln20_7)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 507 [1/1] (1.76ns)   --->   "br label %18" [pool/pooling.cpp:23]   --->   Operation 507 'br' <Predicate = (!icmp_ln20_7)> <Delay = 1.76>
ST_25 : Operation 508 [1/1] (3.25ns)   --->   "store float %max_0_7, float* %max_pool_1_out_addr_7, align 4" [pool/pooling.cpp:35]   --->   Operation 508 'store' <Predicate = (icmp_ln20_7)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_25 : Operation 509 [1/1] (0.00ns)   --->   "%empty_33 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_25) nounwind" [pool/pooling.cpp:36]   --->   Operation 509 'specregionend' 'empty_33' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_25 : Operation 510 [1/1] (0.00ns)   --->   "%tmp_27 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 510 'specregionbegin' 'tmp_27' <Predicate = (icmp_ln20_7)> <Delay = 0.00>
ST_25 : Operation 511 [1/1] (1.76ns)   --->   "br label %19" [pool/pooling.cpp:20]   --->   Operation 511 'br' <Predicate = (icmp_ln20_7)> <Delay = 1.76>

State 26 <SV = 11> <Delay = 6.92>
ST_26 : Operation 512 [1/1] (0.00ns)   --->   "%max_1_7 = phi float [ %max_0_7, %Pool_Row_Loop_begin7 ], [ %select_ln28_7, %._crit_edge.7 ]" [pool/pooling.cpp:28]   --->   Operation 512 'phi' 'max_1_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 513 [1/1] (0.00ns)   --->   "%mpc_0_7 = phi i2 [ 0, %Pool_Row_Loop_begin7 ], [ %add_ln23_7, %._crit_edge.7 ]" [pool/pooling.cpp:23]   --->   Operation 513 'phi' 'mpc_0_7' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 514 [1/1] (0.95ns)   --->   "%icmp_ln23_7 = icmp eq i2 %mpc_0_7, -2" [pool/pooling.cpp:23]   --->   Operation 514 'icmp' 'icmp_ln23_7' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 515 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 515 'speclooptripcount' 'empty_36' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 516 [1/1] (1.56ns)   --->   "%add_ln23_7 = add i2 %mpc_0_7, 1" [pool/pooling.cpp:23]   --->   Operation 516 'add' 'add_ln23_7' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 517 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_7, label %Pool_Row_Loop_end7, label %._crit_edge.7" [pool/pooling.cpp:23]   --->   Operation 517 'br' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 518 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_14)   --->   "%xor_ln26_2 = xor i2 %mpc_0_7, -2" [pool/pooling.cpp:26]   --->   Operation 518 'xor' 'xor_ln26_2' <Predicate = (!icmp_ln23_7)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 519 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_14)   --->   "%sext_ln26_2 = sext i2 %xor_ln26_2 to i4" [pool/pooling.cpp:26]   --->   Operation 519 'sext' 'sext_ln26_2' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 520 [1/1] (0.00ns) (grouped into LUT with out node add_ln28_14)   --->   "%zext_ln28_30 = zext i4 %sext_ln26_2 to i10" [pool/pooling.cpp:28]   --->   Operation 520 'zext' 'zext_ln28_30' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 521 [1/1] (1.73ns) (out node of the LUT)   --->   "%add_ln28_14 = add i10 %zext_ln28_30, %mul_ln28_7" [pool/pooling.cpp:28]   --->   Operation 521 'add' 'add_ln28_14' <Predicate = (!icmp_ln23_7)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 522 [1/1] (0.00ns)   --->   "%tmp_72 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_14, i5 0)" [pool/pooling.cpp:28]   --->   Operation 522 'bitconcatenate' 'tmp_72' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 523 [1/1] (0.00ns)   --->   "%zext_ln28_31 = zext i15 %tmp_72 to i16" [pool/pooling.cpp:28]   --->   Operation 523 'zext' 'zext_ln28_31' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 524 [1/1] (1.94ns)   --->   "%add_ln28_15 = add i16 %zext_ln13, %zext_ln28_31" [pool/pooling.cpp:28]   --->   Operation 524 'add' 'add_ln28_15' <Predicate = (!icmp_ln23_7)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 525 [1/1] (0.00ns)   --->   "%zext_ln28_32 = zext i16 %add_ln28_15 to i64" [pool/pooling.cpp:28]   --->   Operation 525 'zext' 'zext_ln28_32' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 526 [1/1] (0.00ns)   --->   "%conv_1_out_addr_7 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_32" [pool/pooling.cpp:28]   --->   Operation 526 'getelementptr' 'conv_1_out_addr_7' <Predicate = (!icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 527 [2/2] (3.25ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pool/pooling.cpp:28]   --->   Operation 527 'load' 'conv_1_out_load_7' <Predicate = (!icmp_ln23_7)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_26 : Operation 528 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_28) nounwind" [pool/pooling.cpp:33]   --->   Operation 528 'specregionend' 'empty_35' <Predicate = (icmp_ln23_7)> <Delay = 0.00>
ST_26 : Operation 529 [1/1] (0.00ns)   --->   "br label %17" [pool/pooling.cpp:20]   --->   Operation 529 'br' <Predicate = (icmp_ln23_7)> <Delay = 0.00>

State 27 <SV = 12> <Delay = 11.7>
ST_27 : Operation 530 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 530 'specloopname' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 531 [1/2] (3.25ns)   --->   "%conv_1_out_load_7 = load float* %conv_1_out_addr_7, align 4" [pool/pooling.cpp:28]   --->   Operation 531 'load' 'conv_1_out_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_27 : Operation 532 [1/1] (0.00ns)   --->   "%bitcast_ln28_14 = bitcast float %conv_1_out_load_7 to i32" [pool/pooling.cpp:28]   --->   Operation 532 'bitcast' 'bitcast_ln28_14' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 533 [1/1] (0.00ns)   --->   "%tmp_47 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_14, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 533 'partselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 534 [1/1] (0.00ns)   --->   "%trunc_ln28_14 = trunc i32 %bitcast_ln28_14 to i23" [pool/pooling.cpp:28]   --->   Operation 534 'trunc' 'trunc_ln28_14' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 535 [1/1] (0.00ns)   --->   "%bitcast_ln28_15 = bitcast float %max_1_7 to i32" [pool/pooling.cpp:28]   --->   Operation 535 'bitcast' 'bitcast_ln28_15' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 536 [1/1] (0.00ns)   --->   "%tmp_48 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_15, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 536 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 537 [1/1] (0.00ns)   --->   "%trunc_ln28_15 = trunc i32 %bitcast_ln28_15 to i23" [pool/pooling.cpp:28]   --->   Operation 537 'trunc' 'trunc_ln28_15' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 538 [1/1] (1.55ns)   --->   "%icmp_ln28_28 = icmp ne i8 %tmp_47, -1" [pool/pooling.cpp:28]   --->   Operation 538 'icmp' 'icmp_ln28_28' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 539 [1/1] (2.44ns)   --->   "%icmp_ln28_29 = icmp eq i23 %trunc_ln28_14, 0" [pool/pooling.cpp:28]   --->   Operation 539 'icmp' 'icmp_ln28_29' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 540 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%or_ln28_14 = or i1 %icmp_ln28_29, %icmp_ln28_28" [pool/pooling.cpp:28]   --->   Operation 540 'or' 'or_ln28_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 541 [1/1] (1.55ns)   --->   "%icmp_ln28_30 = icmp ne i8 %tmp_48, -1" [pool/pooling.cpp:28]   --->   Operation 541 'icmp' 'icmp_ln28_30' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 542 [1/1] (2.44ns)   --->   "%icmp_ln28_31 = icmp eq i23 %trunc_ln28_15, 0" [pool/pooling.cpp:28]   --->   Operation 542 'icmp' 'icmp_ln28_31' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 543 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%or_ln28_15 = or i1 %icmp_ln28_31, %icmp_ln28_30" [pool/pooling.cpp:28]   --->   Operation 543 'or' 'or_ln28_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 544 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_15)   --->   "%and_ln28_14 = and i1 %or_ln28_14, %or_ln28_15" [pool/pooling.cpp:28]   --->   Operation 544 'and' 'and_ln28_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 545 [1/1] (6.78ns)   --->   "%tmp_49 = fcmp ogt float %conv_1_out_load_7, %max_1_7" [pool/pooling.cpp:28]   --->   Operation 545 'fcmp' 'tmp_49' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 546 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_15 = and i1 %and_ln28_14, %tmp_49" [pool/pooling.cpp:28]   --->   Operation 546 'and' 'and_ln28_15' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 547 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_7 = select i1 %and_ln28_15, float %conv_1_out_load_7, float %max_1_7" [pool/pooling.cpp:28]   --->   Operation 547 'select' 'select_ln28_7' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 548 [1/1] (0.00ns)   --->   "br label %18" [pool/pooling.cpp:23]   --->   Operation 548 'br' <Predicate = true> <Delay = 0.00>

State 28 <SV = 11> <Delay = 5.56>
ST_28 : Operation 549 [1/1] (0.00ns)   --->   "%max_0_8 = phi float [ 0x3810000000000000, %Col_Loop7 ], [ %max_1_8, %Pool_Row_Loop_end8 ]" [pool/pooling.cpp:28]   --->   Operation 549 'phi' 'max_0_8' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 550 [1/1] (0.00ns)   --->   "%mpr_0_8 = phi i2 [ 0, %Col_Loop7 ], [ %add_ln20_8, %Pool_Row_Loop_end8 ]" [pool/pooling.cpp:20]   --->   Operation 550 'phi' 'mpr_0_8' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 551 [1/1] (0.00ns)   --->   "%zext_ln20_8 = zext i2 %mpr_0_8 to i5" [pool/pooling.cpp:20]   --->   Operation 551 'zext' 'zext_ln20_8' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 552 [1/1] (0.95ns)   --->   "%icmp_ln20_8 = icmp eq i2 %mpr_0_8, -2" [pool/pooling.cpp:20]   --->   Operation 552 'icmp' 'icmp_ln20_8' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 553 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 553 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 554 [1/1] (1.56ns)   --->   "%add_ln20_8 = add i2 %mpr_0_8, 1" [pool/pooling.cpp:20]   --->   Operation 554 'add' 'add_ln20_8' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 555 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_8, label %Col_Loop8, label %Pool_Row_Loop_begin8" [pool/pooling.cpp:20]   --->   Operation 555 'br' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 556 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 556 'specloopname' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_28 : Operation 557 [1/1] (0.00ns)   --->   "%tmp_30 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 557 'specregionbegin' 'tmp_30' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_28 : Operation 558 [1/1] (1.78ns)   --->   "%add_ln25_8 = add i5 %zext_ln20_8, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 558 'add' 'add_ln25_8' <Predicate = (!icmp_ln20_8)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 559 [1/1] (0.00ns)   --->   "%zext_ln28_29 = zext i5 %add_ln25_8 to i10" [pool/pooling.cpp:28]   --->   Operation 559 'zext' 'zext_ln28_29' <Predicate = (!icmp_ln20_8)> <Delay = 0.00>
ST_28 : Operation 560 [1/1] (3.78ns)   --->   "%mul_ln28_8 = mul i10 %zext_ln28_29, 26" [pool/pooling.cpp:28]   --->   Operation 560 'mul' 'mul_ln28_8' <Predicate = (!icmp_ln20_8)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 561 [1/1] (1.76ns)   --->   "br label %20" [pool/pooling.cpp:23]   --->   Operation 561 'br' <Predicate = (!icmp_ln20_8)> <Delay = 1.76>
ST_28 : Operation 562 [1/1] (3.25ns)   --->   "store float %max_0_8, float* %max_pool_1_out_addr_8, align 4" [pool/pooling.cpp:35]   --->   Operation 562 'store' <Predicate = (icmp_ln20_8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_28 : Operation 563 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_27) nounwind" [pool/pooling.cpp:36]   --->   Operation 563 'specregionend' 'empty_37' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_28 : Operation 564 [1/1] (0.00ns)   --->   "%tmp_29 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 564 'specregionbegin' 'tmp_29' <Predicate = (icmp_ln20_8)> <Delay = 0.00>
ST_28 : Operation 565 [1/1] (1.76ns)   --->   "br label %21" [pool/pooling.cpp:20]   --->   Operation 565 'br' <Predicate = (icmp_ln20_8)> <Delay = 1.76>

State 29 <SV = 12> <Delay = 6.92>
ST_29 : Operation 566 [1/1] (0.00ns)   --->   "%max_1_8 = phi float [ %max_0_8, %Pool_Row_Loop_begin8 ], [ %select_ln28_8, %._crit_edge.8 ]" [pool/pooling.cpp:28]   --->   Operation 566 'phi' 'max_1_8' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 567 [1/1] (0.00ns)   --->   "%mpc_0_8 = phi i2 [ 0, %Pool_Row_Loop_begin8 ], [ %add_ln23_8, %._crit_edge.8 ]" [pool/pooling.cpp:23]   --->   Operation 567 'phi' 'mpc_0_8' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 568 [1/1] (0.95ns)   --->   "%icmp_ln23_8 = icmp eq i2 %mpc_0_8, -2" [pool/pooling.cpp:23]   --->   Operation 568 'icmp' 'icmp_ln23_8' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 569 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 569 'speclooptripcount' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 570 [1/1] (1.56ns)   --->   "%add_ln23_8 = add i2 %mpc_0_8, 1" [pool/pooling.cpp:23]   --->   Operation 570 'add' 'add_ln23_8' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 571 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_8, label %Pool_Row_Loop_end8, label %._crit_edge.8" [pool/pooling.cpp:23]   --->   Operation 571 'br' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 572 [1/1] (0.00ns)   --->   "%or_ln26_3 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 -4, i2 %mpc_0_8)" [pool/pooling.cpp:26]   --->   Operation 572 'bitconcatenate' 'or_ln26_3' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 573 [1/1] (0.00ns)   --->   "%zext_ln28_34 = zext i5 %or_ln26_3 to i10" [pool/pooling.cpp:28]   --->   Operation 573 'zext' 'zext_ln28_34' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 574 [1/1] (1.73ns)   --->   "%add_ln28_16 = add i10 %mul_ln28_8, %zext_ln28_34" [pool/pooling.cpp:28]   --->   Operation 574 'add' 'add_ln28_16' <Predicate = (!icmp_ln23_8)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 575 [1/1] (0.00ns)   --->   "%tmp_73 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_16, i5 0)" [pool/pooling.cpp:28]   --->   Operation 575 'bitconcatenate' 'tmp_73' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 576 [1/1] (0.00ns)   --->   "%zext_ln28_35 = zext i15 %tmp_73 to i16" [pool/pooling.cpp:28]   --->   Operation 576 'zext' 'zext_ln28_35' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 577 [1/1] (1.94ns)   --->   "%add_ln28_17 = add i16 %zext_ln28_35, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 577 'add' 'add_ln28_17' <Predicate = (!icmp_ln23_8)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 578 [1/1] (0.00ns)   --->   "%zext_ln28_36 = zext i16 %add_ln28_17 to i64" [pool/pooling.cpp:28]   --->   Operation 578 'zext' 'zext_ln28_36' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 579 [1/1] (0.00ns)   --->   "%conv_1_out_addr_8 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_36" [pool/pooling.cpp:28]   --->   Operation 579 'getelementptr' 'conv_1_out_addr_8' <Predicate = (!icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 580 [2/2] (3.25ns)   --->   "%conv_1_out_load_8 = load float* %conv_1_out_addr_8, align 4" [pool/pooling.cpp:28]   --->   Operation 580 'load' 'conv_1_out_load_8' <Predicate = (!icmp_ln23_8)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_29 : Operation 581 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_30) nounwind" [pool/pooling.cpp:33]   --->   Operation 581 'specregionend' 'empty_39' <Predicate = (icmp_ln23_8)> <Delay = 0.00>
ST_29 : Operation 582 [1/1] (0.00ns)   --->   "br label %19" [pool/pooling.cpp:20]   --->   Operation 582 'br' <Predicate = (icmp_ln23_8)> <Delay = 0.00>

State 30 <SV = 13> <Delay = 11.7>
ST_30 : Operation 583 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 583 'specloopname' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 584 [1/2] (3.25ns)   --->   "%conv_1_out_load_8 = load float* %conv_1_out_addr_8, align 4" [pool/pooling.cpp:28]   --->   Operation 584 'load' 'conv_1_out_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_30 : Operation 585 [1/1] (0.00ns)   --->   "%bitcast_ln28_16 = bitcast float %conv_1_out_load_8 to i32" [pool/pooling.cpp:28]   --->   Operation 585 'bitcast' 'bitcast_ln28_16' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 586 [1/1] (0.00ns)   --->   "%tmp_50 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_16, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 586 'partselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 587 [1/1] (0.00ns)   --->   "%trunc_ln28_16 = trunc i32 %bitcast_ln28_16 to i23" [pool/pooling.cpp:28]   --->   Operation 587 'trunc' 'trunc_ln28_16' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 588 [1/1] (0.00ns)   --->   "%bitcast_ln28_17 = bitcast float %max_1_8 to i32" [pool/pooling.cpp:28]   --->   Operation 588 'bitcast' 'bitcast_ln28_17' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 589 [1/1] (0.00ns)   --->   "%tmp_51 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_17, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 589 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 590 [1/1] (0.00ns)   --->   "%trunc_ln28_17 = trunc i32 %bitcast_ln28_17 to i23" [pool/pooling.cpp:28]   --->   Operation 590 'trunc' 'trunc_ln28_17' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 591 [1/1] (1.55ns)   --->   "%icmp_ln28_32 = icmp ne i8 %tmp_50, -1" [pool/pooling.cpp:28]   --->   Operation 591 'icmp' 'icmp_ln28_32' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 592 [1/1] (2.44ns)   --->   "%icmp_ln28_33 = icmp eq i23 %trunc_ln28_16, 0" [pool/pooling.cpp:28]   --->   Operation 592 'icmp' 'icmp_ln28_33' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 593 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%or_ln28_16 = or i1 %icmp_ln28_33, %icmp_ln28_32" [pool/pooling.cpp:28]   --->   Operation 593 'or' 'or_ln28_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 594 [1/1] (1.55ns)   --->   "%icmp_ln28_34 = icmp ne i8 %tmp_51, -1" [pool/pooling.cpp:28]   --->   Operation 594 'icmp' 'icmp_ln28_34' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 595 [1/1] (2.44ns)   --->   "%icmp_ln28_35 = icmp eq i23 %trunc_ln28_17, 0" [pool/pooling.cpp:28]   --->   Operation 595 'icmp' 'icmp_ln28_35' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 596 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%or_ln28_17 = or i1 %icmp_ln28_35, %icmp_ln28_34" [pool/pooling.cpp:28]   --->   Operation 596 'or' 'or_ln28_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 597 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_17)   --->   "%and_ln28_16 = and i1 %or_ln28_16, %or_ln28_17" [pool/pooling.cpp:28]   --->   Operation 597 'and' 'and_ln28_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 598 [1/1] (6.78ns)   --->   "%tmp_52 = fcmp ogt float %conv_1_out_load_8, %max_1_8" [pool/pooling.cpp:28]   --->   Operation 598 'fcmp' 'tmp_52' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 599 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_17 = and i1 %and_ln28_16, %tmp_52" [pool/pooling.cpp:28]   --->   Operation 599 'and' 'and_ln28_17' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 600 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_8 = select i1 %and_ln28_17, float %conv_1_out_load_8, float %max_1_8" [pool/pooling.cpp:28]   --->   Operation 600 'select' 'select_ln28_8' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 601 [1/1] (0.00ns)   --->   "br label %20" [pool/pooling.cpp:23]   --->   Operation 601 'br' <Predicate = true> <Delay = 0.00>

State 31 <SV = 12> <Delay = 5.56>
ST_31 : Operation 602 [1/1] (0.00ns)   --->   "%max_0_9 = phi float [ 0x3810000000000000, %Col_Loop8 ], [ %max_1_9, %Pool_Row_Loop_end9 ]" [pool/pooling.cpp:28]   --->   Operation 602 'phi' 'max_0_9' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 603 [1/1] (0.00ns)   --->   "%mpr_0_9 = phi i2 [ 0, %Col_Loop8 ], [ %add_ln20_9, %Pool_Row_Loop_end9 ]" [pool/pooling.cpp:20]   --->   Operation 603 'phi' 'mpr_0_9' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 604 [1/1] (0.00ns)   --->   "%zext_ln20_9 = zext i2 %mpr_0_9 to i5" [pool/pooling.cpp:20]   --->   Operation 604 'zext' 'zext_ln20_9' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 605 [1/1] (0.95ns)   --->   "%icmp_ln20_9 = icmp eq i2 %mpr_0_9, -2" [pool/pooling.cpp:20]   --->   Operation 605 'icmp' 'icmp_ln20_9' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 606 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 606 'speclooptripcount' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 607 [1/1] (1.56ns)   --->   "%add_ln20_9 = add i2 %mpr_0_9, 1" [pool/pooling.cpp:20]   --->   Operation 607 'add' 'add_ln20_9' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 608 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_9, label %Col_Loop9, label %Pool_Row_Loop_begin9" [pool/pooling.cpp:20]   --->   Operation 608 'br' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 609 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 609 'specloopname' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_31 : Operation 610 [1/1] (0.00ns)   --->   "%tmp_32 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 610 'specregionbegin' 'tmp_32' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_31 : Operation 611 [1/1] (1.78ns)   --->   "%add_ln25_9 = add i5 %zext_ln20_9, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 611 'add' 'add_ln25_9' <Predicate = (!icmp_ln20_9)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 612 [1/1] (0.00ns)   --->   "%zext_ln28_33 = zext i5 %add_ln25_9 to i10" [pool/pooling.cpp:28]   --->   Operation 612 'zext' 'zext_ln28_33' <Predicate = (!icmp_ln20_9)> <Delay = 0.00>
ST_31 : Operation 613 [1/1] (3.78ns)   --->   "%mul_ln28_9 = mul i10 %zext_ln28_33, 26" [pool/pooling.cpp:28]   --->   Operation 613 'mul' 'mul_ln28_9' <Predicate = (!icmp_ln20_9)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 614 [1/1] (1.76ns)   --->   "br label %22" [pool/pooling.cpp:23]   --->   Operation 614 'br' <Predicate = (!icmp_ln20_9)> <Delay = 1.76>
ST_31 : Operation 615 [1/1] (3.25ns)   --->   "store float %max_0_9, float* %max_pool_1_out_addr_9, align 4" [pool/pooling.cpp:35]   --->   Operation 615 'store' <Predicate = (icmp_ln20_9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_31 : Operation 616 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_29) nounwind" [pool/pooling.cpp:36]   --->   Operation 616 'specregionend' 'empty_41' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_31 : Operation 617 [1/1] (0.00ns)   --->   "%tmp_31 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 617 'specregionbegin' 'tmp_31' <Predicate = (icmp_ln20_9)> <Delay = 0.00>
ST_31 : Operation 618 [1/1] (1.76ns)   --->   "br label %23" [pool/pooling.cpp:20]   --->   Operation 618 'br' <Predicate = (icmp_ln20_9)> <Delay = 1.76>

State 32 <SV = 13> <Delay = 8.70>
ST_32 : Operation 619 [1/1] (0.00ns)   --->   "%max_1_9 = phi float [ %max_0_9, %Pool_Row_Loop_begin9 ], [ %select_ln28_9, %._crit_edge.9 ]" [pool/pooling.cpp:28]   --->   Operation 619 'phi' 'max_1_9' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 620 [1/1] (0.00ns)   --->   "%mpc_0_9 = phi i2 [ 0, %Pool_Row_Loop_begin9 ], [ %add_ln23_9, %._crit_edge.9 ]" [pool/pooling.cpp:23]   --->   Operation 620 'phi' 'mpc_0_9' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 621 [1/1] (0.00ns)   --->   "%zext_ln23_1 = zext i2 %mpc_0_9 to i5" [pool/pooling.cpp:23]   --->   Operation 621 'zext' 'zext_ln23_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 622 [1/1] (0.95ns)   --->   "%icmp_ln23_9 = icmp eq i2 %mpc_0_9, -2" [pool/pooling.cpp:23]   --->   Operation 622 'icmp' 'icmp_ln23_9' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 623 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 623 'speclooptripcount' 'empty_44' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 624 [1/1] (1.56ns)   --->   "%add_ln23_9 = add i2 %mpc_0_9, 1" [pool/pooling.cpp:23]   --->   Operation 624 'add' 'add_ln23_9' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 625 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_9, label %Pool_Row_Loop_end9, label %._crit_edge.9" [pool/pooling.cpp:23]   --->   Operation 625 'br' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 626 [1/1] (1.78ns)   --->   "%add_ln26_1 = add i5 -14, %zext_ln23_1" [pool/pooling.cpp:26]   --->   Operation 626 'add' 'add_ln26_1' <Predicate = (!icmp_ln23_9)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 627 [1/1] (0.00ns)   --->   "%zext_ln28_38 = zext i5 %add_ln26_1 to i10" [pool/pooling.cpp:28]   --->   Operation 627 'zext' 'zext_ln28_38' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 628 [1/1] (1.73ns)   --->   "%add_ln28_18 = add i10 %zext_ln28_38, %mul_ln28_9" [pool/pooling.cpp:28]   --->   Operation 628 'add' 'add_ln28_18' <Predicate = (!icmp_ln23_9)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 629 [1/1] (0.00ns)   --->   "%tmp_74 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_18, i5 0)" [pool/pooling.cpp:28]   --->   Operation 629 'bitconcatenate' 'tmp_74' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 630 [1/1] (0.00ns)   --->   "%zext_ln28_39 = zext i15 %tmp_74 to i16" [pool/pooling.cpp:28]   --->   Operation 630 'zext' 'zext_ln28_39' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 631 [1/1] (1.94ns)   --->   "%add_ln28_19 = add i16 %zext_ln13, %zext_ln28_39" [pool/pooling.cpp:28]   --->   Operation 631 'add' 'add_ln28_19' <Predicate = (!icmp_ln23_9)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 632 [1/1] (0.00ns)   --->   "%zext_ln28_40 = zext i16 %add_ln28_19 to i64" [pool/pooling.cpp:28]   --->   Operation 632 'zext' 'zext_ln28_40' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 633 [1/1] (0.00ns)   --->   "%conv_1_out_addr_9 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_40" [pool/pooling.cpp:28]   --->   Operation 633 'getelementptr' 'conv_1_out_addr_9' <Predicate = (!icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 634 [2/2] (3.25ns)   --->   "%conv_1_out_load_9 = load float* %conv_1_out_addr_9, align 4" [pool/pooling.cpp:28]   --->   Operation 634 'load' 'conv_1_out_load_9' <Predicate = (!icmp_ln23_9)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_32 : Operation 635 [1/1] (0.00ns)   --->   "%empty_43 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_32) nounwind" [pool/pooling.cpp:33]   --->   Operation 635 'specregionend' 'empty_43' <Predicate = (icmp_ln23_9)> <Delay = 0.00>
ST_32 : Operation 636 [1/1] (0.00ns)   --->   "br label %21" [pool/pooling.cpp:20]   --->   Operation 636 'br' <Predicate = (icmp_ln23_9)> <Delay = 0.00>

State 33 <SV = 14> <Delay = 11.7>
ST_33 : Operation 637 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 637 'specloopname' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 638 [1/2] (3.25ns)   --->   "%conv_1_out_load_9 = load float* %conv_1_out_addr_9, align 4" [pool/pooling.cpp:28]   --->   Operation 638 'load' 'conv_1_out_load_9' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_33 : Operation 639 [1/1] (0.00ns)   --->   "%bitcast_ln28_18 = bitcast float %conv_1_out_load_9 to i32" [pool/pooling.cpp:28]   --->   Operation 639 'bitcast' 'bitcast_ln28_18' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 640 [1/1] (0.00ns)   --->   "%tmp_53 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_18, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 640 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 641 [1/1] (0.00ns)   --->   "%trunc_ln28_18 = trunc i32 %bitcast_ln28_18 to i23" [pool/pooling.cpp:28]   --->   Operation 641 'trunc' 'trunc_ln28_18' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 642 [1/1] (0.00ns)   --->   "%bitcast_ln28_19 = bitcast float %max_1_9 to i32" [pool/pooling.cpp:28]   --->   Operation 642 'bitcast' 'bitcast_ln28_19' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 643 [1/1] (0.00ns)   --->   "%tmp_54 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_19, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 643 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 644 [1/1] (0.00ns)   --->   "%trunc_ln28_19 = trunc i32 %bitcast_ln28_19 to i23" [pool/pooling.cpp:28]   --->   Operation 644 'trunc' 'trunc_ln28_19' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 645 [1/1] (1.55ns)   --->   "%icmp_ln28_36 = icmp ne i8 %tmp_53, -1" [pool/pooling.cpp:28]   --->   Operation 645 'icmp' 'icmp_ln28_36' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 646 [1/1] (2.44ns)   --->   "%icmp_ln28_37 = icmp eq i23 %trunc_ln28_18, 0" [pool/pooling.cpp:28]   --->   Operation 646 'icmp' 'icmp_ln28_37' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 647 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%or_ln28_18 = or i1 %icmp_ln28_37, %icmp_ln28_36" [pool/pooling.cpp:28]   --->   Operation 647 'or' 'or_ln28_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 648 [1/1] (1.55ns)   --->   "%icmp_ln28_38 = icmp ne i8 %tmp_54, -1" [pool/pooling.cpp:28]   --->   Operation 648 'icmp' 'icmp_ln28_38' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 649 [1/1] (2.44ns)   --->   "%icmp_ln28_39 = icmp eq i23 %trunc_ln28_19, 0" [pool/pooling.cpp:28]   --->   Operation 649 'icmp' 'icmp_ln28_39' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 650 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%or_ln28_19 = or i1 %icmp_ln28_39, %icmp_ln28_38" [pool/pooling.cpp:28]   --->   Operation 650 'or' 'or_ln28_19' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 651 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_19)   --->   "%and_ln28_18 = and i1 %or_ln28_18, %or_ln28_19" [pool/pooling.cpp:28]   --->   Operation 651 'and' 'and_ln28_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 652 [1/1] (6.78ns)   --->   "%tmp_55 = fcmp ogt float %conv_1_out_load_9, %max_1_9" [pool/pooling.cpp:28]   --->   Operation 652 'fcmp' 'tmp_55' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 653 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_19 = and i1 %and_ln28_18, %tmp_55" [pool/pooling.cpp:28]   --->   Operation 653 'and' 'and_ln28_19' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 654 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_9 = select i1 %and_ln28_19, float %conv_1_out_load_9, float %max_1_9" [pool/pooling.cpp:28]   --->   Operation 654 'select' 'select_ln28_9' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_33 : Operation 655 [1/1] (0.00ns)   --->   "br label %22" [pool/pooling.cpp:23]   --->   Operation 655 'br' <Predicate = true> <Delay = 0.00>

State 34 <SV = 13> <Delay = 5.56>
ST_34 : Operation 656 [1/1] (0.00ns)   --->   "%max_0_10 = phi float [ 0x3810000000000000, %Col_Loop9 ], [ %max_1_10, %Pool_Row_Loop_end10 ]" [pool/pooling.cpp:28]   --->   Operation 656 'phi' 'max_0_10' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 657 [1/1] (0.00ns)   --->   "%mpr_0_10 = phi i2 [ 0, %Col_Loop9 ], [ %add_ln20_10, %Pool_Row_Loop_end10 ]" [pool/pooling.cpp:20]   --->   Operation 657 'phi' 'mpr_0_10' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 658 [1/1] (0.00ns)   --->   "%zext_ln20_10 = zext i2 %mpr_0_10 to i5" [pool/pooling.cpp:20]   --->   Operation 658 'zext' 'zext_ln20_10' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 659 [1/1] (0.95ns)   --->   "%icmp_ln20_10 = icmp eq i2 %mpr_0_10, -2" [pool/pooling.cpp:20]   --->   Operation 659 'icmp' 'icmp_ln20_10' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 660 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 660 'speclooptripcount' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 661 [1/1] (1.56ns)   --->   "%add_ln20_10 = add i2 %mpr_0_10, 1" [pool/pooling.cpp:20]   --->   Operation 661 'add' 'add_ln20_10' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 662 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_10, label %Col_Loop10, label %Pool_Row_Loop_begin10" [pool/pooling.cpp:20]   --->   Operation 662 'br' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 663 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 663 'specloopname' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_34 : Operation 664 [1/1] (0.00ns)   --->   "%tmp_34 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 664 'specregionbegin' 'tmp_34' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_34 : Operation 665 [1/1] (1.78ns)   --->   "%add_ln25_10 = add i5 %zext_ln20_10, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 665 'add' 'add_ln25_10' <Predicate = (!icmp_ln20_10)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 666 [1/1] (0.00ns)   --->   "%zext_ln28_37 = zext i5 %add_ln25_10 to i10" [pool/pooling.cpp:28]   --->   Operation 666 'zext' 'zext_ln28_37' <Predicate = (!icmp_ln20_10)> <Delay = 0.00>
ST_34 : Operation 667 [1/1] (3.78ns)   --->   "%mul_ln28_10 = mul i10 %zext_ln28_37, 26" [pool/pooling.cpp:28]   --->   Operation 667 'mul' 'mul_ln28_10' <Predicate = (!icmp_ln20_10)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 668 [1/1] (1.76ns)   --->   "br label %24" [pool/pooling.cpp:23]   --->   Operation 668 'br' <Predicate = (!icmp_ln20_10)> <Delay = 1.76>
ST_34 : Operation 669 [1/1] (3.25ns)   --->   "store float %max_0_10, float* %max_pool_1_out_addr_10, align 4" [pool/pooling.cpp:35]   --->   Operation 669 'store' <Predicate = (icmp_ln20_10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_34 : Operation 670 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_31) nounwind" [pool/pooling.cpp:36]   --->   Operation 670 'specregionend' 'empty_45' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_34 : Operation 671 [1/1] (0.00ns)   --->   "%tmp_33 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 671 'specregionbegin' 'tmp_33' <Predicate = (icmp_ln20_10)> <Delay = 0.00>
ST_34 : Operation 672 [1/1] (1.76ns)   --->   "br label %25" [pool/pooling.cpp:20]   --->   Operation 672 'br' <Predicate = (icmp_ln20_10)> <Delay = 1.76>

State 35 <SV = 14> <Delay = 6.92>
ST_35 : Operation 673 [1/1] (0.00ns)   --->   "%max_1_10 = phi float [ %max_0_10, %Pool_Row_Loop_begin10 ], [ %select_ln28_10, %._crit_edge.10 ]" [pool/pooling.cpp:28]   --->   Operation 673 'phi' 'max_1_10' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 674 [1/1] (0.00ns)   --->   "%mpc_0_10 = phi i2 [ 0, %Pool_Row_Loop_begin10 ], [ %add_ln23_10, %._crit_edge.10 ]" [pool/pooling.cpp:23]   --->   Operation 674 'phi' 'mpc_0_10' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 675 [1/1] (0.95ns)   --->   "%icmp_ln23_10 = icmp eq i2 %mpc_0_10, -2" [pool/pooling.cpp:23]   --->   Operation 675 'icmp' 'icmp_ln23_10' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 676 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 676 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 677 [1/1] (1.56ns)   --->   "%add_ln23_10 = add i2 %mpc_0_10, 1" [pool/pooling.cpp:23]   --->   Operation 677 'add' 'add_ln23_10' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 678 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_10, label %Pool_Row_Loop_end10, label %._crit_edge.10" [pool/pooling.cpp:23]   --->   Operation 678 'br' <Predicate = true> <Delay = 0.00>
ST_35 : Operation 679 [1/1] (0.00ns)   --->   "%or_ln26_4 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 -3, i2 %mpc_0_10)" [pool/pooling.cpp:26]   --->   Operation 679 'bitconcatenate' 'or_ln26_4' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 680 [1/1] (0.00ns)   --->   "%zext_ln28_42 = zext i5 %or_ln26_4 to i10" [pool/pooling.cpp:28]   --->   Operation 680 'zext' 'zext_ln28_42' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 681 [1/1] (1.73ns)   --->   "%add_ln28_20 = add i10 %mul_ln28_10, %zext_ln28_42" [pool/pooling.cpp:28]   --->   Operation 681 'add' 'add_ln28_20' <Predicate = (!icmp_ln23_10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 682 [1/1] (0.00ns)   --->   "%tmp_75 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_20, i5 0)" [pool/pooling.cpp:28]   --->   Operation 682 'bitconcatenate' 'tmp_75' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 683 [1/1] (0.00ns)   --->   "%zext_ln28_43 = zext i15 %tmp_75 to i16" [pool/pooling.cpp:28]   --->   Operation 683 'zext' 'zext_ln28_43' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 684 [1/1] (1.94ns)   --->   "%add_ln28_21 = add i16 %zext_ln28_43, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 684 'add' 'add_ln28_21' <Predicate = (!icmp_ln23_10)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_35 : Operation 685 [1/1] (0.00ns)   --->   "%zext_ln28_44 = zext i16 %add_ln28_21 to i64" [pool/pooling.cpp:28]   --->   Operation 685 'zext' 'zext_ln28_44' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 686 [1/1] (0.00ns)   --->   "%conv_1_out_addr_10 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_44" [pool/pooling.cpp:28]   --->   Operation 686 'getelementptr' 'conv_1_out_addr_10' <Predicate = (!icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 687 [2/2] (3.25ns)   --->   "%conv_1_out_load_10 = load float* %conv_1_out_addr_10, align 4" [pool/pooling.cpp:28]   --->   Operation 687 'load' 'conv_1_out_load_10' <Predicate = (!icmp_ln23_10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_35 : Operation 688 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_34) nounwind" [pool/pooling.cpp:33]   --->   Operation 688 'specregionend' 'empty_47' <Predicate = (icmp_ln23_10)> <Delay = 0.00>
ST_35 : Operation 689 [1/1] (0.00ns)   --->   "br label %23" [pool/pooling.cpp:20]   --->   Operation 689 'br' <Predicate = (icmp_ln23_10)> <Delay = 0.00>

State 36 <SV = 15> <Delay = 11.7>
ST_36 : Operation 690 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 690 'specloopname' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 691 [1/2] (3.25ns)   --->   "%conv_1_out_load_10 = load float* %conv_1_out_addr_10, align 4" [pool/pooling.cpp:28]   --->   Operation 691 'load' 'conv_1_out_load_10' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_36 : Operation 692 [1/1] (0.00ns)   --->   "%bitcast_ln28_20 = bitcast float %conv_1_out_load_10 to i32" [pool/pooling.cpp:28]   --->   Operation 692 'bitcast' 'bitcast_ln28_20' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 693 [1/1] (0.00ns)   --->   "%tmp_56 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_20, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 693 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 694 [1/1] (0.00ns)   --->   "%trunc_ln28_20 = trunc i32 %bitcast_ln28_20 to i23" [pool/pooling.cpp:28]   --->   Operation 694 'trunc' 'trunc_ln28_20' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 695 [1/1] (0.00ns)   --->   "%bitcast_ln28_21 = bitcast float %max_1_10 to i32" [pool/pooling.cpp:28]   --->   Operation 695 'bitcast' 'bitcast_ln28_21' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 696 [1/1] (0.00ns)   --->   "%tmp_57 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_21, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 696 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 697 [1/1] (0.00ns)   --->   "%trunc_ln28_21 = trunc i32 %bitcast_ln28_21 to i23" [pool/pooling.cpp:28]   --->   Operation 697 'trunc' 'trunc_ln28_21' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 698 [1/1] (1.55ns)   --->   "%icmp_ln28_40 = icmp ne i8 %tmp_56, -1" [pool/pooling.cpp:28]   --->   Operation 698 'icmp' 'icmp_ln28_40' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 699 [1/1] (2.44ns)   --->   "%icmp_ln28_41 = icmp eq i23 %trunc_ln28_20, 0" [pool/pooling.cpp:28]   --->   Operation 699 'icmp' 'icmp_ln28_41' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 700 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%or_ln28_20 = or i1 %icmp_ln28_41, %icmp_ln28_40" [pool/pooling.cpp:28]   --->   Operation 700 'or' 'or_ln28_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 701 [1/1] (1.55ns)   --->   "%icmp_ln28_42 = icmp ne i8 %tmp_57, -1" [pool/pooling.cpp:28]   --->   Operation 701 'icmp' 'icmp_ln28_42' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 702 [1/1] (2.44ns)   --->   "%icmp_ln28_43 = icmp eq i23 %trunc_ln28_21, 0" [pool/pooling.cpp:28]   --->   Operation 702 'icmp' 'icmp_ln28_43' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 703 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%or_ln28_21 = or i1 %icmp_ln28_43, %icmp_ln28_42" [pool/pooling.cpp:28]   --->   Operation 703 'or' 'or_ln28_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 704 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_21)   --->   "%and_ln28_20 = and i1 %or_ln28_20, %or_ln28_21" [pool/pooling.cpp:28]   --->   Operation 704 'and' 'and_ln28_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 705 [1/1] (6.78ns)   --->   "%tmp_58 = fcmp ogt float %conv_1_out_load_10, %max_1_10" [pool/pooling.cpp:28]   --->   Operation 705 'fcmp' 'tmp_58' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 706 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_21 = and i1 %and_ln28_20, %tmp_58" [pool/pooling.cpp:28]   --->   Operation 706 'and' 'and_ln28_21' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 707 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_10 = select i1 %and_ln28_21, float %conv_1_out_load_10, float %max_1_10" [pool/pooling.cpp:28]   --->   Operation 707 'select' 'select_ln28_10' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 708 [1/1] (0.00ns)   --->   "br label %24" [pool/pooling.cpp:23]   --->   Operation 708 'br' <Predicate = true> <Delay = 0.00>

State 37 <SV = 14> <Delay = 5.56>
ST_37 : Operation 709 [1/1] (0.00ns)   --->   "%max_0_11 = phi float [ 0x3810000000000000, %Col_Loop10 ], [ %max_1_11, %Pool_Row_Loop_end11 ]" [pool/pooling.cpp:28]   --->   Operation 709 'phi' 'max_0_11' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 710 [1/1] (0.00ns)   --->   "%mpr_0_11 = phi i2 [ 0, %Col_Loop10 ], [ %add_ln20_11, %Pool_Row_Loop_end11 ]" [pool/pooling.cpp:20]   --->   Operation 710 'phi' 'mpr_0_11' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 711 [1/1] (0.00ns)   --->   "%zext_ln20_11 = zext i2 %mpr_0_11 to i5" [pool/pooling.cpp:20]   --->   Operation 711 'zext' 'zext_ln20_11' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 712 [1/1] (0.95ns)   --->   "%icmp_ln20_11 = icmp eq i2 %mpr_0_11, -2" [pool/pooling.cpp:20]   --->   Operation 712 'icmp' 'icmp_ln20_11' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 713 [1/1] (0.00ns)   --->   "%empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 713 'speclooptripcount' 'empty_50' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 714 [1/1] (1.56ns)   --->   "%add_ln20_11 = add i2 %mpr_0_11, 1" [pool/pooling.cpp:20]   --->   Operation 714 'add' 'add_ln20_11' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 715 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_11, label %Col_Loop11, label %Pool_Row_Loop_begin11" [pool/pooling.cpp:20]   --->   Operation 715 'br' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 716 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 716 'specloopname' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_37 : Operation 717 [1/1] (0.00ns)   --->   "%tmp_36 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 717 'specregionbegin' 'tmp_36' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_37 : Operation 718 [1/1] (1.78ns)   --->   "%add_ln25_11 = add i5 %zext_ln20_11, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 718 'add' 'add_ln25_11' <Predicate = (!icmp_ln20_11)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 719 [1/1] (0.00ns)   --->   "%zext_ln28_41 = zext i5 %add_ln25_11 to i10" [pool/pooling.cpp:28]   --->   Operation 719 'zext' 'zext_ln28_41' <Predicate = (!icmp_ln20_11)> <Delay = 0.00>
ST_37 : Operation 720 [1/1] (3.78ns)   --->   "%mul_ln28_11 = mul i10 %zext_ln28_41, 26" [pool/pooling.cpp:28]   --->   Operation 720 'mul' 'mul_ln28_11' <Predicate = (!icmp_ln20_11)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 721 [1/1] (1.76ns)   --->   "br label %26" [pool/pooling.cpp:23]   --->   Operation 721 'br' <Predicate = (!icmp_ln20_11)> <Delay = 1.76>
ST_37 : Operation 722 [1/1] (3.25ns)   --->   "store float %max_0_11, float* %max_pool_1_out_addr_11, align 4" [pool/pooling.cpp:35]   --->   Operation 722 'store' <Predicate = (icmp_ln20_11)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_37 : Operation 723 [1/1] (0.00ns)   --->   "%empty_49 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_33) nounwind" [pool/pooling.cpp:36]   --->   Operation 723 'specregionend' 'empty_49' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_37 : Operation 724 [1/1] (0.00ns)   --->   "%tmp_35 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str2) nounwind" [pool/pooling.cpp:17]   --->   Operation 724 'specregionbegin' 'tmp_35' <Predicate = (icmp_ln20_11)> <Delay = 0.00>
ST_37 : Operation 725 [1/1] (1.76ns)   --->   "br label %27" [pool/pooling.cpp:20]   --->   Operation 725 'br' <Predicate = (icmp_ln20_11)> <Delay = 1.76>

State 38 <SV = 15> <Delay = 8.70>
ST_38 : Operation 726 [1/1] (0.00ns)   --->   "%max_1_11 = phi float [ %max_0_11, %Pool_Row_Loop_begin11 ], [ %select_ln28_11, %._crit_edge.11 ]" [pool/pooling.cpp:28]   --->   Operation 726 'phi' 'max_1_11' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 727 [1/1] (0.00ns)   --->   "%mpc_0_11 = phi i2 [ 0, %Pool_Row_Loop_begin11 ], [ %add_ln23_11, %._crit_edge.11 ]" [pool/pooling.cpp:23]   --->   Operation 727 'phi' 'mpc_0_11' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 728 [1/1] (0.00ns)   --->   "%zext_ln23_2 = zext i2 %mpc_0_11 to i5" [pool/pooling.cpp:23]   --->   Operation 728 'zext' 'zext_ln23_2' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 729 [1/1] (0.95ns)   --->   "%icmp_ln23_11 = icmp eq i2 %mpc_0_11, -2" [pool/pooling.cpp:23]   --->   Operation 729 'icmp' 'icmp_ln23_11' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 730 [1/1] (0.00ns)   --->   "%empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 730 'speclooptripcount' 'empty_52' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 731 [1/1] (1.56ns)   --->   "%add_ln23_11 = add i2 %mpc_0_11, 1" [pool/pooling.cpp:23]   --->   Operation 731 'add' 'add_ln23_11' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 732 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_11, label %Pool_Row_Loop_end11, label %._crit_edge.11" [pool/pooling.cpp:23]   --->   Operation 732 'br' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 733 [1/1] (1.78ns)   --->   "%add_ln26_2 = add i5 -10, %zext_ln23_2" [pool/pooling.cpp:26]   --->   Operation 733 'add' 'add_ln26_2' <Predicate = (!icmp_ln23_11)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 734 [1/1] (0.00ns)   --->   "%zext_ln28_46 = zext i5 %add_ln26_2 to i10" [pool/pooling.cpp:28]   --->   Operation 734 'zext' 'zext_ln28_46' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 735 [1/1] (1.73ns)   --->   "%add_ln28_22 = add i10 %zext_ln28_46, %mul_ln28_11" [pool/pooling.cpp:28]   --->   Operation 735 'add' 'add_ln28_22' <Predicate = (!icmp_ln23_11)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 736 [1/1] (0.00ns)   --->   "%tmp_76 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_22, i5 0)" [pool/pooling.cpp:28]   --->   Operation 736 'bitconcatenate' 'tmp_76' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 737 [1/1] (0.00ns)   --->   "%zext_ln28_47 = zext i15 %tmp_76 to i16" [pool/pooling.cpp:28]   --->   Operation 737 'zext' 'zext_ln28_47' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 738 [1/1] (1.94ns)   --->   "%add_ln28_23 = add i16 %zext_ln13, %zext_ln28_47" [pool/pooling.cpp:28]   --->   Operation 738 'add' 'add_ln28_23' <Predicate = (!icmp_ln23_11)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 739 [1/1] (0.00ns)   --->   "%zext_ln28_48 = zext i16 %add_ln28_23 to i64" [pool/pooling.cpp:28]   --->   Operation 739 'zext' 'zext_ln28_48' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 740 [1/1] (0.00ns)   --->   "%conv_1_out_addr_11 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_48" [pool/pooling.cpp:28]   --->   Operation 740 'getelementptr' 'conv_1_out_addr_11' <Predicate = (!icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 741 [2/2] (3.25ns)   --->   "%conv_1_out_load_11 = load float* %conv_1_out_addr_11, align 4" [pool/pooling.cpp:28]   --->   Operation 741 'load' 'conv_1_out_load_11' <Predicate = (!icmp_ln23_11)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_38 : Operation 742 [1/1] (0.00ns)   --->   "%empty_51 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_36) nounwind" [pool/pooling.cpp:33]   --->   Operation 742 'specregionend' 'empty_51' <Predicate = (icmp_ln23_11)> <Delay = 0.00>
ST_38 : Operation 743 [1/1] (0.00ns)   --->   "br label %25" [pool/pooling.cpp:20]   --->   Operation 743 'br' <Predicate = (icmp_ln23_11)> <Delay = 0.00>

State 39 <SV = 16> <Delay = 11.7>
ST_39 : Operation 744 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 744 'specloopname' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 745 [1/2] (3.25ns)   --->   "%conv_1_out_load_11 = load float* %conv_1_out_addr_11, align 4" [pool/pooling.cpp:28]   --->   Operation 745 'load' 'conv_1_out_load_11' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_39 : Operation 746 [1/1] (0.00ns)   --->   "%bitcast_ln28_22 = bitcast float %conv_1_out_load_11 to i32" [pool/pooling.cpp:28]   --->   Operation 746 'bitcast' 'bitcast_ln28_22' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 747 [1/1] (0.00ns)   --->   "%tmp_59 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_22, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 747 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 748 [1/1] (0.00ns)   --->   "%trunc_ln28_22 = trunc i32 %bitcast_ln28_22 to i23" [pool/pooling.cpp:28]   --->   Operation 748 'trunc' 'trunc_ln28_22' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 749 [1/1] (0.00ns)   --->   "%bitcast_ln28_23 = bitcast float %max_1_11 to i32" [pool/pooling.cpp:28]   --->   Operation 749 'bitcast' 'bitcast_ln28_23' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 750 [1/1] (0.00ns)   --->   "%tmp_60 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_23, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 750 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 751 [1/1] (0.00ns)   --->   "%trunc_ln28_23 = trunc i32 %bitcast_ln28_23 to i23" [pool/pooling.cpp:28]   --->   Operation 751 'trunc' 'trunc_ln28_23' <Predicate = true> <Delay = 0.00>
ST_39 : Operation 752 [1/1] (1.55ns)   --->   "%icmp_ln28_44 = icmp ne i8 %tmp_59, -1" [pool/pooling.cpp:28]   --->   Operation 752 'icmp' 'icmp_ln28_44' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 753 [1/1] (2.44ns)   --->   "%icmp_ln28_45 = icmp eq i23 %trunc_ln28_22, 0" [pool/pooling.cpp:28]   --->   Operation 753 'icmp' 'icmp_ln28_45' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 754 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_22 = or i1 %icmp_ln28_45, %icmp_ln28_44" [pool/pooling.cpp:28]   --->   Operation 754 'or' 'or_ln28_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 755 [1/1] (1.55ns)   --->   "%icmp_ln28_46 = icmp ne i8 %tmp_60, -1" [pool/pooling.cpp:28]   --->   Operation 755 'icmp' 'icmp_ln28_46' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 756 [1/1] (2.44ns)   --->   "%icmp_ln28_47 = icmp eq i23 %trunc_ln28_23, 0" [pool/pooling.cpp:28]   --->   Operation 756 'icmp' 'icmp_ln28_47' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 757 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%or_ln28_23 = or i1 %icmp_ln28_47, %icmp_ln28_46" [pool/pooling.cpp:28]   --->   Operation 757 'or' 'or_ln28_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 758 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_23)   --->   "%and_ln28_22 = and i1 %or_ln28_22, %or_ln28_23" [pool/pooling.cpp:28]   --->   Operation 758 'and' 'and_ln28_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 759 [1/1] (6.78ns)   --->   "%tmp_61 = fcmp ogt float %conv_1_out_load_11, %max_1_11" [pool/pooling.cpp:28]   --->   Operation 759 'fcmp' 'tmp_61' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 760 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_23 = and i1 %and_ln28_22, %tmp_61" [pool/pooling.cpp:28]   --->   Operation 760 'and' 'and_ln28_23' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_39 : Operation 761 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_11 = select i1 %and_ln28_23, float %conv_1_out_load_11, float %max_1_11" [pool/pooling.cpp:28]   --->   Operation 761 'select' 'select_ln28_11' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_39 : Operation 762 [1/1] (0.00ns)   --->   "br label %26" [pool/pooling.cpp:23]   --->   Operation 762 'br' <Predicate = true> <Delay = 0.00>

State 40 <SV = 15> <Delay = 5.56>
ST_40 : Operation 763 [1/1] (0.00ns)   --->   "%max_0_12 = phi float [ 0x3810000000000000, %Col_Loop11 ], [ %max_1_12, %Pool_Row_Loop_end12 ]" [pool/pooling.cpp:28]   --->   Operation 763 'phi' 'max_0_12' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 764 [1/1] (0.00ns)   --->   "%mpr_0_12 = phi i2 [ 0, %Col_Loop11 ], [ %add_ln20_12, %Pool_Row_Loop_end12 ]" [pool/pooling.cpp:20]   --->   Operation 764 'phi' 'mpr_0_12' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 765 [1/1] (0.00ns)   --->   "%zext_ln20_12 = zext i2 %mpr_0_12 to i5" [pool/pooling.cpp:20]   --->   Operation 765 'zext' 'zext_ln20_12' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 766 [1/1] (0.95ns)   --->   "%icmp_ln20_12 = icmp eq i2 %mpr_0_12, -2" [pool/pooling.cpp:20]   --->   Operation 766 'icmp' 'icmp_ln20_12' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 767 [1/1] (0.00ns)   --->   "%empty_54 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 767 'speclooptripcount' 'empty_54' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 768 [1/1] (1.56ns)   --->   "%add_ln20_12 = add i2 %mpr_0_12, 1" [pool/pooling.cpp:20]   --->   Operation 768 'add' 'add_ln20_12' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 769 [1/1] (0.00ns)   --->   "br i1 %icmp_ln20_12, label %Col_Loop_end, label %Pool_Row_Loop_begin12" [pool/pooling.cpp:20]   --->   Operation 769 'br' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 770 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 770 'specloopname' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_40 : Operation 771 [1/1] (0.00ns)   --->   "%tmp_37 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str4) nounwind" [pool/pooling.cpp:21]   --->   Operation 771 'specregionbegin' 'tmp_37' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_40 : Operation 772 [1/1] (1.78ns)   --->   "%add_ln25_12 = add i5 %zext_ln20_12, %shl_ln" [pool/pooling.cpp:25]   --->   Operation 772 'add' 'add_ln25_12' <Predicate = (!icmp_ln20_12)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 773 [1/1] (0.00ns)   --->   "%zext_ln28_45 = zext i5 %add_ln25_12 to i10" [pool/pooling.cpp:28]   --->   Operation 773 'zext' 'zext_ln28_45' <Predicate = (!icmp_ln20_12)> <Delay = 0.00>
ST_40 : Operation 774 [1/1] (3.78ns)   --->   "%mul_ln28_12 = mul i10 %zext_ln28_45, 26" [pool/pooling.cpp:28]   --->   Operation 774 'mul' 'mul_ln28_12' <Predicate = (!icmp_ln20_12)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 775 [1/1] (1.76ns)   --->   "br label %28" [pool/pooling.cpp:23]   --->   Operation 775 'br' <Predicate = (!icmp_ln20_12)> <Delay = 1.76>
ST_40 : Operation 776 [1/1] (3.25ns)   --->   "store float %max_0_12, float* %max_pool_1_out_addr_12, align 4" [pool/pooling.cpp:35]   --->   Operation 776 'store' <Predicate = (icmp_ln20_12)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_40 : Operation 777 [1/1] (0.00ns)   --->   "%empty_53 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str2, i32 %tmp_35) nounwind" [pool/pooling.cpp:36]   --->   Operation 777 'specregionend' 'empty_53' <Predicate = (icmp_ln20_12)> <Delay = 0.00>
ST_40 : Operation 778 [1/1] (0.00ns)   --->   "br label %2" [pool/pooling.cpp:13]   --->   Operation 778 'br' <Predicate = (icmp_ln20_12)> <Delay = 0.00>

State 41 <SV = 16> <Delay = 6.92>
ST_41 : Operation 779 [1/1] (0.00ns)   --->   "%max_1_12 = phi float [ %max_0_12, %Pool_Row_Loop_begin12 ], [ %select_ln28_12, %._crit_edge.12 ]" [pool/pooling.cpp:28]   --->   Operation 779 'phi' 'max_1_12' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 780 [1/1] (0.00ns)   --->   "%mpc_0_12 = phi i2 [ 0, %Pool_Row_Loop_begin12 ], [ %add_ln23_12, %._crit_edge.12 ]" [pool/pooling.cpp:23]   --->   Operation 780 'phi' 'mpc_0_12' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 781 [1/1] (0.95ns)   --->   "%icmp_ln23_12 = icmp eq i2 %mpc_0_12, -2" [pool/pooling.cpp:23]   --->   Operation 781 'icmp' 'icmp_ln23_12' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 782 [1/1] (0.00ns)   --->   "%empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2) nounwind"   --->   Operation 782 'speclooptripcount' 'empty_56' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 783 [1/1] (1.56ns)   --->   "%add_ln23_12 = add i2 %mpc_0_12, 1" [pool/pooling.cpp:23]   --->   Operation 783 'add' 'add_ln23_12' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 784 [1/1] (0.00ns)   --->   "br i1 %icmp_ln23_12, label %Pool_Row_Loop_end12, label %._crit_edge.12" [pool/pooling.cpp:23]   --->   Operation 784 'br' <Predicate = true> <Delay = 0.00>
ST_41 : Operation 785 [1/1] (0.00ns)   --->   "%or_ln26_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 -2, i2 %mpc_0_12)" [pool/pooling.cpp:26]   --->   Operation 785 'bitconcatenate' 'or_ln26_5' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 786 [1/1] (0.00ns)   --->   "%sext_ln26_3 = sext i4 %or_ln26_5 to i5" [pool/pooling.cpp:26]   --->   Operation 786 'sext' 'sext_ln26_3' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 787 [1/1] (0.00ns)   --->   "%zext_ln28_49 = zext i5 %sext_ln26_3 to i10" [pool/pooling.cpp:28]   --->   Operation 787 'zext' 'zext_ln28_49' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 788 [1/1] (1.73ns)   --->   "%add_ln28_24 = add i10 %mul_ln28_12, %zext_ln28_49" [pool/pooling.cpp:28]   --->   Operation 788 'add' 'add_ln28_24' <Predicate = (!icmp_ln23_12)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 789 [1/1] (0.00ns)   --->   "%tmp_77 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln28_24, i5 0)" [pool/pooling.cpp:28]   --->   Operation 789 'bitconcatenate' 'tmp_77' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 790 [1/1] (0.00ns)   --->   "%zext_ln28_50 = zext i15 %tmp_77 to i16" [pool/pooling.cpp:28]   --->   Operation 790 'zext' 'zext_ln28_50' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 791 [1/1] (1.94ns)   --->   "%add_ln28_25 = add i16 %zext_ln28_50, %zext_ln13" [pool/pooling.cpp:28]   --->   Operation 791 'add' 'add_ln28_25' <Predicate = (!icmp_ln23_12)> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 792 [1/1] (0.00ns)   --->   "%zext_ln28_51 = zext i16 %add_ln28_25 to i64" [pool/pooling.cpp:28]   --->   Operation 792 'zext' 'zext_ln28_51' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 793 [1/1] (0.00ns)   --->   "%conv_1_out_addr_12 = getelementptr [21632 x float]* %conv_1_out, i64 0, i64 %zext_ln28_51" [pool/pooling.cpp:28]   --->   Operation 793 'getelementptr' 'conv_1_out_addr_12' <Predicate = (!icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 794 [2/2] (3.25ns)   --->   "%conv_1_out_load_12 = load float* %conv_1_out_addr_12, align 4" [pool/pooling.cpp:28]   --->   Operation 794 'load' 'conv_1_out_load_12' <Predicate = (!icmp_ln23_12)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_41 : Operation 795 [1/1] (0.00ns)   --->   "%empty_55 = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str4, i32 %tmp_37) nounwind" [pool/pooling.cpp:33]   --->   Operation 795 'specregionend' 'empty_55' <Predicate = (icmp_ln23_12)> <Delay = 0.00>
ST_41 : Operation 796 [1/1] (0.00ns)   --->   "br label %27" [pool/pooling.cpp:20]   --->   Operation 796 'br' <Predicate = (icmp_ln23_12)> <Delay = 0.00>

State 42 <SV = 17> <Delay = 11.7>
ST_42 : Operation 797 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str5) nounwind" [pool/pooling.cpp:24]   --->   Operation 797 'specloopname' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 798 [1/2] (3.25ns)   --->   "%conv_1_out_load_12 = load float* %conv_1_out_addr_12, align 4" [pool/pooling.cpp:28]   --->   Operation 798 'load' 'conv_1_out_load_12' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_42 : Operation 799 [1/1] (0.00ns)   --->   "%bitcast_ln28_24 = bitcast float %conv_1_out_load_12 to i32" [pool/pooling.cpp:28]   --->   Operation 799 'bitcast' 'bitcast_ln28_24' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 800 [1/1] (0.00ns)   --->   "%tmp_62 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_24, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 800 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 801 [1/1] (0.00ns)   --->   "%trunc_ln28_24 = trunc i32 %bitcast_ln28_24 to i23" [pool/pooling.cpp:28]   --->   Operation 801 'trunc' 'trunc_ln28_24' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 802 [1/1] (0.00ns)   --->   "%bitcast_ln28_25 = bitcast float %max_1_12 to i32" [pool/pooling.cpp:28]   --->   Operation 802 'bitcast' 'bitcast_ln28_25' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 803 [1/1] (0.00ns)   --->   "%tmp_63 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_25, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 803 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 804 [1/1] (0.00ns)   --->   "%trunc_ln28_25 = trunc i32 %bitcast_ln28_25 to i23" [pool/pooling.cpp:28]   --->   Operation 804 'trunc' 'trunc_ln28_25' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 805 [1/1] (1.55ns)   --->   "%icmp_ln28_48 = icmp ne i8 %tmp_62, -1" [pool/pooling.cpp:28]   --->   Operation 805 'icmp' 'icmp_ln28_48' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 806 [1/1] (2.44ns)   --->   "%icmp_ln28_49 = icmp eq i23 %trunc_ln28_24, 0" [pool/pooling.cpp:28]   --->   Operation 806 'icmp' 'icmp_ln28_49' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 807 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_24 = or i1 %icmp_ln28_49, %icmp_ln28_48" [pool/pooling.cpp:28]   --->   Operation 807 'or' 'or_ln28_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 808 [1/1] (1.55ns)   --->   "%icmp_ln28_50 = icmp ne i8 %tmp_63, -1" [pool/pooling.cpp:28]   --->   Operation 808 'icmp' 'icmp_ln28_50' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 809 [1/1] (2.44ns)   --->   "%icmp_ln28_51 = icmp eq i23 %trunc_ln28_25, 0" [pool/pooling.cpp:28]   --->   Operation 809 'icmp' 'icmp_ln28_51' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 810 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%or_ln28_25 = or i1 %icmp_ln28_51, %icmp_ln28_50" [pool/pooling.cpp:28]   --->   Operation 810 'or' 'or_ln28_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 811 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_25)   --->   "%and_ln28_24 = and i1 %or_ln28_24, %or_ln28_25" [pool/pooling.cpp:28]   --->   Operation 811 'and' 'and_ln28_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 812 [1/1] (6.78ns)   --->   "%tmp_64 = fcmp ogt float %conv_1_out_load_12, %max_1_12" [pool/pooling.cpp:28]   --->   Operation 812 'fcmp' 'tmp_64' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 813 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_25 = and i1 %and_ln28_24, %tmp_64" [pool/pooling.cpp:28]   --->   Operation 813 'and' 'and_ln28_25' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 814 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_12 = select i1 %and_ln28_25, float %conv_1_out_load_12, float %max_1_12" [pool/pooling.cpp:28]   --->   Operation 814 'select' 'select_ln28_12' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 815 [1/1] (0.00ns)   --->   "br label %28" [pool/pooling.cpp:23]   --->   Operation 815 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (1.77 ns)

 <State 2>: 1.83ns
The critical path consists of the following:
	'phi' operation ('f') with incoming values : ('f', pool/pooling.cpp:10) [8]  (0 ns)
	'add' operation ('f', pool/pooling.cpp:10) [11]  (1.83 ns)

 <State 3>: 3.82ns
The critical path consists of the following:
	'phi' operation ('phi_mul', pool/pooling.cpp:13) with incoming values : ('add_ln13', pool/pooling.cpp:13) [21]  (0 ns)
	'add' operation ('add_ln35_1', pool/pooling.cpp:35) [33]  (0 ns)
	'add' operation ('add_ln35_2', pool/pooling.cpp:35) [34]  (3.82 ns)

 <State 4>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_0', pool/pooling.cpp:20) with incoming values : ('add_ln20', pool/pooling.cpp:20) [85]  (0 ns)
	'add' operation ('add_ln25', pool/pooling.cpp:25) [94]  (1.78 ns)
	'mul' operation ('mul_ln28', pool/pooling.cpp:28) [96]  (3.78 ns)

 <State 5>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_0', pool/pooling.cpp:23) with incoming values : ('add_ln23', pool/pooling.cpp:23) [100]  (0 ns)
	'add' operation ('add_ln28', pool/pooling.cpp:28) [108]  (1.73 ns)
	'add' operation ('add_ln28_1', pool/pooling.cpp:28) [111]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr', pool/pooling.cpp:28) [113]  (0 ns)
	'load' operation ('conv_1_out_load', pool/pooling.cpp:28) on array 'conv_1_out' [114]  (3.25 ns)

 <State 6>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load', pool/pooling.cpp:28) on array 'conv_1_out' [114]  (3.25 ns)
	'fcmp' operation ('tmp_7', pool/pooling.cpp:28) [128]  (6.79 ns)
	'and' operation ('and_ln28_1', pool/pooling.cpp:28) [129]  (0.978 ns)
	'select' operation ('select_ln28', pool/pooling.cpp:28) [130]  (0.698 ns)

 <State 7>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_1', pool/pooling.cpp:20) with incoming values : ('add_ln20_1', pool/pooling.cpp:20) [142]  (0 ns)
	'add' operation ('add_ln25_1', pool/pooling.cpp:25) [151]  (1.78 ns)
	'mul' operation ('mul_ln28_1', pool/pooling.cpp:28) [153]  (3.78 ns)

 <State 8>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_1', pool/pooling.cpp:23) with incoming values : ('add_ln23_1', pool/pooling.cpp:23) [157]  (0 ns)
	'xor' operation ('xor_ln26', pool/pooling.cpp:26) [164]  (0 ns)
	'add' operation ('add_ln28_2', pool/pooling.cpp:28) [166]  (1.73 ns)
	'add' operation ('add_ln28_3', pool/pooling.cpp:28) [169]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_1', pool/pooling.cpp:28) [171]  (0 ns)
	'load' operation ('conv_1_out_load_1', pool/pooling.cpp:28) on array 'conv_1_out' [172]  (3.25 ns)

 <State 9>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_1', pool/pooling.cpp:28) on array 'conv_1_out' [172]  (3.25 ns)
	'fcmp' operation ('tmp_12', pool/pooling.cpp:28) [186]  (6.79 ns)
	'and' operation ('and_ln28_3', pool/pooling.cpp:28) [187]  (0.978 ns)
	'select' operation ('select_ln28_1', pool/pooling.cpp:28) [188]  (0.698 ns)

 <State 10>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_2', pool/pooling.cpp:20) with incoming values : ('add_ln20_2', pool/pooling.cpp:20) [200]  (0 ns)
	'add' operation ('add_ln25_2', pool/pooling.cpp:25) [209]  (1.78 ns)
	'mul' operation ('mul_ln28_2', pool/pooling.cpp:28) [211]  (3.78 ns)

 <State 11>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_2', pool/pooling.cpp:23) with incoming values : ('add_ln23_2', pool/pooling.cpp:23) [215]  (0 ns)
	'add' operation ('add_ln28_4', pool/pooling.cpp:28) [224]  (1.73 ns)
	'add' operation ('add_ln28_5', pool/pooling.cpp:28) [227]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_2', pool/pooling.cpp:28) [229]  (0 ns)
	'load' operation ('conv_1_out_load_2', pool/pooling.cpp:28) on array 'conv_1_out' [230]  (3.25 ns)

 <State 12>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_2', pool/pooling.cpp:28) on array 'conv_1_out' [230]  (3.25 ns)
	'fcmp' operation ('tmp_17', pool/pooling.cpp:28) [244]  (6.79 ns)
	'and' operation ('and_ln28_5', pool/pooling.cpp:28) [245]  (0.978 ns)
	'select' operation ('select_ln28_2', pool/pooling.cpp:28) [246]  (0.698 ns)

 <State 13>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_3', pool/pooling.cpp:20) with incoming values : ('add_ln20_3', pool/pooling.cpp:20) [258]  (0 ns)
	'add' operation ('add_ln25_3', pool/pooling.cpp:25) [267]  (1.78 ns)
	'mul' operation ('mul_ln28_3', pool/pooling.cpp:28) [269]  (3.78 ns)

 <State 14>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_3', pool/pooling.cpp:23) with incoming values : ('add_ln23_3', pool/pooling.cpp:23) [273]  (0 ns)
	'xor' operation ('xor_ln26_1', pool/pooling.cpp:26) [280]  (0 ns)
	'add' operation ('add_ln28_6', pool/pooling.cpp:28) [283]  (1.73 ns)
	'add' operation ('add_ln28_7', pool/pooling.cpp:28) [286]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_3', pool/pooling.cpp:28) [288]  (0 ns)
	'load' operation ('conv_1_out_load_3', pool/pooling.cpp:28) on array 'conv_1_out' [289]  (3.25 ns)

 <State 15>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_3', pool/pooling.cpp:28) on array 'conv_1_out' [289]  (3.25 ns)
	'fcmp' operation ('tmp_22', pool/pooling.cpp:28) [303]  (6.79 ns)
	'and' operation ('and_ln28_7', pool/pooling.cpp:28) [304]  (0.978 ns)
	'select' operation ('select_ln28_3', pool/pooling.cpp:28) [305]  (0.698 ns)

 <State 16>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_4', pool/pooling.cpp:20) with incoming values : ('add_ln20_4', pool/pooling.cpp:20) [317]  (0 ns)
	'add' operation ('add_ln25_4', pool/pooling.cpp:25) [326]  (1.78 ns)
	'mul' operation ('mul_ln28_4', pool/pooling.cpp:28) [328]  (3.78 ns)

 <State 17>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_4', pool/pooling.cpp:23) with incoming values : ('add_ln23_4', pool/pooling.cpp:23) [332]  (0 ns)
	'add' operation ('add_ln28_8', pool/pooling.cpp:28) [341]  (1.73 ns)
	'add' operation ('add_ln28_9', pool/pooling.cpp:28) [344]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_4', pool/pooling.cpp:28) [346]  (0 ns)
	'load' operation ('conv_1_out_load_4', pool/pooling.cpp:28) on array 'conv_1_out' [347]  (3.25 ns)

 <State 18>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_4', pool/pooling.cpp:28) on array 'conv_1_out' [347]  (3.25 ns)
	'fcmp' operation ('tmp_40', pool/pooling.cpp:28) [361]  (6.79 ns)
	'and' operation ('and_ln28_9', pool/pooling.cpp:28) [362]  (0.978 ns)
	'select' operation ('select_ln28_4', pool/pooling.cpp:28) [363]  (0.698 ns)

 <State 19>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_5', pool/pooling.cpp:20) with incoming values : ('add_ln20_5', pool/pooling.cpp:20) [375]  (0 ns)
	'add' operation ('add_ln25_5', pool/pooling.cpp:25) [384]  (1.78 ns)
	'mul' operation ('mul_ln28_5', pool/pooling.cpp:28) [386]  (3.78 ns)

 <State 20>: 8.66ns
The critical path consists of the following:
	'phi' operation ('mpc_0_5', pool/pooling.cpp:23) with incoming values : ('add_ln23_5', pool/pooling.cpp:23) [390]  (0 ns)
	'add' operation ('add_ln26', pool/pooling.cpp:26) [398]  (1.74 ns)
	'add' operation ('add_ln28_10', pool/pooling.cpp:28) [400]  (1.73 ns)
	'add' operation ('add_ln28_11', pool/pooling.cpp:28) [403]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_5', pool/pooling.cpp:28) [405]  (0 ns)
	'load' operation ('conv_1_out_load_5', pool/pooling.cpp:28) on array 'conv_1_out' [406]  (3.25 ns)

 <State 21>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_5', pool/pooling.cpp:28) on array 'conv_1_out' [406]  (3.25 ns)
	'fcmp' operation ('tmp_43', pool/pooling.cpp:28) [420]  (6.79 ns)
	'and' operation ('and_ln28_11', pool/pooling.cpp:28) [421]  (0.978 ns)
	'select' operation ('select_ln28_5', pool/pooling.cpp:28) [422]  (0.698 ns)

 <State 22>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_6', pool/pooling.cpp:20) with incoming values : ('add_ln20_6', pool/pooling.cpp:20) [434]  (0 ns)
	'add' operation ('add_ln25_6', pool/pooling.cpp:25) [443]  (1.78 ns)
	'mul' operation ('mul_ln28_6', pool/pooling.cpp:28) [445]  (3.78 ns)

 <State 23>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_6', pool/pooling.cpp:23) with incoming values : ('add_ln23_6', pool/pooling.cpp:23) [449]  (0 ns)
	'add' operation ('add_ln28_12', pool/pooling.cpp:28) [459]  (1.73 ns)
	'add' operation ('add_ln28_13', pool/pooling.cpp:28) [462]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_6', pool/pooling.cpp:28) [464]  (0 ns)
	'load' operation ('conv_1_out_load_6', pool/pooling.cpp:28) on array 'conv_1_out' [465]  (3.25 ns)

 <State 24>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_6', pool/pooling.cpp:28) on array 'conv_1_out' [465]  (3.25 ns)
	'fcmp' operation ('tmp_46', pool/pooling.cpp:28) [479]  (6.79 ns)
	'and' operation ('and_ln28_13', pool/pooling.cpp:28) [480]  (0.978 ns)
	'select' operation ('select_ln28_6', pool/pooling.cpp:28) [481]  (0.698 ns)

 <State 25>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_7', pool/pooling.cpp:20) with incoming values : ('add_ln20_7', pool/pooling.cpp:20) [493]  (0 ns)
	'add' operation ('add_ln25_7', pool/pooling.cpp:25) [502]  (1.78 ns)
	'mul' operation ('mul_ln28_7', pool/pooling.cpp:28) [504]  (3.78 ns)

 <State 26>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_7', pool/pooling.cpp:23) with incoming values : ('add_ln23_7', pool/pooling.cpp:23) [508]  (0 ns)
	'xor' operation ('xor_ln26_2', pool/pooling.cpp:26) [515]  (0 ns)
	'add' operation ('add_ln28_14', pool/pooling.cpp:28) [518]  (1.73 ns)
	'add' operation ('add_ln28_15', pool/pooling.cpp:28) [521]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_7', pool/pooling.cpp:28) [523]  (0 ns)
	'load' operation ('conv_1_out_load_7', pool/pooling.cpp:28) on array 'conv_1_out' [524]  (3.25 ns)

 <State 27>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_7', pool/pooling.cpp:28) on array 'conv_1_out' [524]  (3.25 ns)
	'fcmp' operation ('tmp_49', pool/pooling.cpp:28) [538]  (6.79 ns)
	'and' operation ('and_ln28_15', pool/pooling.cpp:28) [539]  (0.978 ns)
	'select' operation ('select_ln28_7', pool/pooling.cpp:28) [540]  (0.698 ns)

 <State 28>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_8', pool/pooling.cpp:20) with incoming values : ('add_ln20_8', pool/pooling.cpp:20) [552]  (0 ns)
	'add' operation ('add_ln25_8', pool/pooling.cpp:25) [561]  (1.78 ns)
	'mul' operation ('mul_ln28_8', pool/pooling.cpp:28) [563]  (3.78 ns)

 <State 29>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_8', pool/pooling.cpp:23) with incoming values : ('add_ln23_8', pool/pooling.cpp:23) [567]  (0 ns)
	'add' operation ('add_ln28_16', pool/pooling.cpp:28) [576]  (1.73 ns)
	'add' operation ('add_ln28_17', pool/pooling.cpp:28) [579]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_8', pool/pooling.cpp:28) [581]  (0 ns)
	'load' operation ('conv_1_out_load_8', pool/pooling.cpp:28) on array 'conv_1_out' [582]  (3.25 ns)

 <State 30>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_8', pool/pooling.cpp:28) on array 'conv_1_out' [582]  (3.25 ns)
	'fcmp' operation ('tmp_52', pool/pooling.cpp:28) [596]  (6.79 ns)
	'and' operation ('and_ln28_17', pool/pooling.cpp:28) [597]  (0.978 ns)
	'select' operation ('select_ln28_8', pool/pooling.cpp:28) [598]  (0.698 ns)

 <State 31>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_9', pool/pooling.cpp:20) with incoming values : ('add_ln20_9', pool/pooling.cpp:20) [610]  (0 ns)
	'add' operation ('add_ln25_9', pool/pooling.cpp:25) [619]  (1.78 ns)
	'mul' operation ('mul_ln28_9', pool/pooling.cpp:28) [621]  (3.78 ns)

 <State 32>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_9', pool/pooling.cpp:23) with incoming values : ('add_ln23_9', pool/pooling.cpp:23) [625]  (0 ns)
	'add' operation ('add_ln26_1', pool/pooling.cpp:26) [633]  (1.78 ns)
	'add' operation ('add_ln28_18', pool/pooling.cpp:28) [635]  (1.73 ns)
	'add' operation ('add_ln28_19', pool/pooling.cpp:28) [638]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_9', pool/pooling.cpp:28) [640]  (0 ns)
	'load' operation ('conv_1_out_load_9', pool/pooling.cpp:28) on array 'conv_1_out' [641]  (3.25 ns)

 <State 33>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_9', pool/pooling.cpp:28) on array 'conv_1_out' [641]  (3.25 ns)
	'fcmp' operation ('tmp_55', pool/pooling.cpp:28) [655]  (6.79 ns)
	'and' operation ('and_ln28_19', pool/pooling.cpp:28) [656]  (0.978 ns)
	'select' operation ('select_ln28_9', pool/pooling.cpp:28) [657]  (0.698 ns)

 <State 34>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_10', pool/pooling.cpp:20) with incoming values : ('add_ln20_10', pool/pooling.cpp:20) [669]  (0 ns)
	'add' operation ('add_ln25_10', pool/pooling.cpp:25) [678]  (1.78 ns)
	'mul' operation ('mul_ln28_10', pool/pooling.cpp:28) [680]  (3.78 ns)

 <State 35>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_10', pool/pooling.cpp:23) with incoming values : ('add_ln23_10', pool/pooling.cpp:23) [684]  (0 ns)
	'add' operation ('add_ln28_20', pool/pooling.cpp:28) [693]  (1.73 ns)
	'add' operation ('add_ln28_21', pool/pooling.cpp:28) [696]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_10', pool/pooling.cpp:28) [698]  (0 ns)
	'load' operation ('conv_1_out_load_10', pool/pooling.cpp:28) on array 'conv_1_out' [699]  (3.25 ns)

 <State 36>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_10', pool/pooling.cpp:28) on array 'conv_1_out' [699]  (3.25 ns)
	'fcmp' operation ('tmp_58', pool/pooling.cpp:28) [713]  (6.79 ns)
	'and' operation ('and_ln28_21', pool/pooling.cpp:28) [714]  (0.978 ns)
	'select' operation ('select_ln28_10', pool/pooling.cpp:28) [715]  (0.698 ns)

 <State 37>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_11', pool/pooling.cpp:20) with incoming values : ('add_ln20_11', pool/pooling.cpp:20) [727]  (0 ns)
	'add' operation ('add_ln25_11', pool/pooling.cpp:25) [736]  (1.78 ns)
	'mul' operation ('mul_ln28_11', pool/pooling.cpp:28) [738]  (3.78 ns)

 <State 38>: 8.71ns
The critical path consists of the following:
	'phi' operation ('mpc_0_11', pool/pooling.cpp:23) with incoming values : ('add_ln23_11', pool/pooling.cpp:23) [742]  (0 ns)
	'add' operation ('add_ln26_2', pool/pooling.cpp:26) [750]  (1.78 ns)
	'add' operation ('add_ln28_22', pool/pooling.cpp:28) [752]  (1.73 ns)
	'add' operation ('add_ln28_23', pool/pooling.cpp:28) [755]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_11', pool/pooling.cpp:28) [757]  (0 ns)
	'load' operation ('conv_1_out_load_11', pool/pooling.cpp:28) on array 'conv_1_out' [758]  (3.25 ns)

 <State 39>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_11', pool/pooling.cpp:28) on array 'conv_1_out' [758]  (3.25 ns)
	'fcmp' operation ('tmp_61', pool/pooling.cpp:28) [772]  (6.79 ns)
	'and' operation ('and_ln28_23', pool/pooling.cpp:28) [773]  (0.978 ns)
	'select' operation ('select_ln28_11', pool/pooling.cpp:28) [774]  (0.698 ns)

 <State 40>: 5.56ns
The critical path consists of the following:
	'phi' operation ('mpr_0_12', pool/pooling.cpp:20) with incoming values : ('add_ln20_12', pool/pooling.cpp:20) [786]  (0 ns)
	'add' operation ('add_ln25_12', pool/pooling.cpp:25) [795]  (1.78 ns)
	'mul' operation ('mul_ln28_12', pool/pooling.cpp:28) [797]  (3.78 ns)

 <State 41>: 6.93ns
The critical path consists of the following:
	'phi' operation ('mpc_0_12', pool/pooling.cpp:23) with incoming values : ('add_ln23_12', pool/pooling.cpp:23) [801]  (0 ns)
	'add' operation ('add_ln28_24', pool/pooling.cpp:28) [811]  (1.73 ns)
	'add' operation ('add_ln28_25', pool/pooling.cpp:28) [814]  (1.94 ns)
	'getelementptr' operation ('conv_1_out_addr_12', pool/pooling.cpp:28) [816]  (0 ns)
	'load' operation ('conv_1_out_load_12', pool/pooling.cpp:28) on array 'conv_1_out' [817]  (3.25 ns)

 <State 42>: 11.7ns
The critical path consists of the following:
	'load' operation ('conv_1_out_load_12', pool/pooling.cpp:28) on array 'conv_1_out' [817]  (3.25 ns)
	'fcmp' operation ('tmp_64', pool/pooling.cpp:28) [831]  (6.79 ns)
	'and' operation ('and_ln28_25', pool/pooling.cpp:28) [832]  (0.978 ns)
	'select' operation ('select_ln28_12', pool/pooling.cpp:28) [833]  (0.698 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
