// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.719000,HLS_SYN_LAT=70785,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1392,HLS_SYN_LUT=4270,HLS_VERSION=2019_1}" *)

module max_pool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_1_out_address0,
        conv_1_out_ce0,
        conv_1_out_q0,
        max_pool_1_out_address0,
        max_pool_1_out_ce0,
        max_pool_1_out_we0,
        max_pool_1_out_d0
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_state11 = 42'd1024;
parameter    ap_ST_fsm_state12 = 42'd2048;
parameter    ap_ST_fsm_state13 = 42'd4096;
parameter    ap_ST_fsm_state14 = 42'd8192;
parameter    ap_ST_fsm_state15 = 42'd16384;
parameter    ap_ST_fsm_state16 = 42'd32768;
parameter    ap_ST_fsm_state17 = 42'd65536;
parameter    ap_ST_fsm_state18 = 42'd131072;
parameter    ap_ST_fsm_state19 = 42'd262144;
parameter    ap_ST_fsm_state20 = 42'd524288;
parameter    ap_ST_fsm_state21 = 42'd1048576;
parameter    ap_ST_fsm_state22 = 42'd2097152;
parameter    ap_ST_fsm_state23 = 42'd4194304;
parameter    ap_ST_fsm_state24 = 42'd8388608;
parameter    ap_ST_fsm_state25 = 42'd16777216;
parameter    ap_ST_fsm_state26 = 42'd33554432;
parameter    ap_ST_fsm_state27 = 42'd67108864;
parameter    ap_ST_fsm_state28 = 42'd134217728;
parameter    ap_ST_fsm_state29 = 42'd268435456;
parameter    ap_ST_fsm_state30 = 42'd536870912;
parameter    ap_ST_fsm_state31 = 42'd1073741824;
parameter    ap_ST_fsm_state32 = 42'd2147483648;
parameter    ap_ST_fsm_state33 = 42'd4294967296;
parameter    ap_ST_fsm_state34 = 42'd8589934592;
parameter    ap_ST_fsm_state35 = 42'd17179869184;
parameter    ap_ST_fsm_state36 = 42'd34359738368;
parameter    ap_ST_fsm_state37 = 42'd68719476736;
parameter    ap_ST_fsm_state38 = 42'd137438953472;
parameter    ap_ST_fsm_state39 = 42'd274877906944;
parameter    ap_ST_fsm_state40 = 42'd549755813888;
parameter    ap_ST_fsm_state41 = 42'd1099511627776;
parameter    ap_ST_fsm_state42 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] conv_1_out_address0;
output   conv_1_out_ce0;
input  [31:0] conv_1_out_q0;
output  [12:0] max_pool_1_out_address0;
output   max_pool_1_out_ce0;
output   max_pool_1_out_we0;
output  [31:0] max_pool_1_out_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] conv_1_out_address0;
reg conv_1_out_ce0;
reg[12:0] max_pool_1_out_address0;
reg max_pool_1_out_ce0;
reg max_pool_1_out_we0;
reg[31:0] max_pool_1_out_d0;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] f_fu_995_p2;
reg   [5:0] f_reg_3510;
wire    ap_CS_fsm_state2;
wire   [15:0] zext_ln13_fu_1001_p1;
reg   [15:0] zext_ln13_reg_3515;
wire   [0:0] icmp_ln10_fu_989_p2;
wire   [12:0] zext_ln13_1_fu_1005_p1;
reg   [12:0] zext_ln13_1_reg_3532;
wire   [12:0] add_ln13_fu_1009_p2;
reg   [12:0] add_ln13_reg_3549;
wire    ap_CS_fsm_state3;
wire   [3:0] r_fu_1021_p2;
reg   [3:0] r_reg_3557;
wire   [4:0] shl_ln_fu_1027_p3;
reg   [4:0] shl_ln_reg_3562;
wire   [0:0] icmp_ln13_fu_1015_p2;
reg   [12:0] max_pool_1_out_addr_reg_3579;
reg   [12:0] max_pool_1_out_addr_1_reg_3584;
reg   [12:0] max_pool_1_out_addr_2_reg_3589;
reg   [12:0] max_pool_1_out_addr_3_reg_3594;
reg   [12:0] max_pool_1_out_addr_4_reg_3599;
reg   [12:0] max_pool_1_out_addr_5_reg_3604;
reg   [12:0] max_pool_1_out_addr_6_reg_3609;
reg   [12:0] max_pool_1_out_addr_7_reg_3614;
reg   [12:0] max_pool_1_out_addr_8_reg_3619;
reg   [12:0] max_pool_1_out_addr_9_reg_3624;
reg   [12:0] max_pool_1_out_addr_10_reg_3629;
reg   [12:0] max_pool_1_out_addr_11_reg_3634;
reg   [12:0] max_pool_1_out_addr_12_reg_3639;
wire   [1:0] add_ln20_fu_1247_p2;
reg   [1:0] add_ln20_reg_3647;
wire    ap_CS_fsm_state4;
wire   [9:0] mul_ln28_fu_1262_p2;
reg   [9:0] mul_ln28_reg_3652;
wire   [0:0] icmp_ln20_fu_1241_p2;
wire   [1:0] add_ln23_fu_1274_p2;
reg   [1:0] add_ln23_reg_3660;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln23_fu_1268_p2;
wire   [31:0] select_ln28_fu_1395_p3;
wire    ap_CS_fsm_state6;
wire   [1:0] add_ln20_1_fu_1413_p2;
reg   [1:0] add_ln20_1_reg_3678;
wire    ap_CS_fsm_state7;
wire   [9:0] mul_ln28_1_fu_1428_p2;
reg   [9:0] mul_ln28_1_reg_3683;
wire   [0:0] icmp_ln20_1_fu_1407_p2;
wire   [1:0] add_ln23_1_fu_1440_p2;
reg   [1:0] add_ln23_1_reg_3691;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln23_1_fu_1434_p2;
wire   [31:0] select_ln28_1_fu_1567_p3;
wire    ap_CS_fsm_state9;
wire   [1:0] add_ln20_2_fu_1585_p2;
reg   [1:0] add_ln20_2_reg_3709;
wire    ap_CS_fsm_state10;
wire   [9:0] mul_ln28_2_fu_1600_p2;
reg   [9:0] mul_ln28_2_reg_3714;
wire   [0:0] icmp_ln20_2_fu_1579_p2;
wire   [1:0] add_ln23_2_fu_1612_p2;
reg   [1:0] add_ln23_2_reg_3722;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln23_2_fu_1606_p2;
wire   [31:0] select_ln28_2_fu_1741_p3;
wire    ap_CS_fsm_state12;
wire   [1:0] add_ln20_3_fu_1759_p2;
reg   [1:0] add_ln20_3_reg_3740;
wire    ap_CS_fsm_state13;
wire   [9:0] mul_ln28_3_fu_1774_p2;
reg   [9:0] mul_ln28_3_reg_3745;
wire   [0:0] icmp_ln20_3_fu_1753_p2;
wire   [1:0] add_ln23_3_fu_1786_p2;
reg   [1:0] add_ln23_3_reg_3753;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln23_3_fu_1780_p2;
wire   [31:0] select_ln28_3_fu_1917_p3;
wire    ap_CS_fsm_state15;
wire   [1:0] add_ln20_4_fu_1935_p2;
reg   [1:0] add_ln20_4_reg_3771;
wire    ap_CS_fsm_state16;
wire   [9:0] mul_ln28_4_fu_1950_p2;
reg   [9:0] mul_ln28_4_reg_3776;
wire   [0:0] icmp_ln20_4_fu_1929_p2;
wire   [1:0] add_ln23_4_fu_1962_p2;
reg   [1:0] add_ln23_4_reg_3784;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln23_4_fu_1956_p2;
wire   [31:0] select_ln28_4_fu_2091_p3;
wire    ap_CS_fsm_state18;
wire   [1:0] add_ln20_5_fu_2109_p2;
reg   [1:0] add_ln20_5_reg_3802;
wire    ap_CS_fsm_state19;
wire   [9:0] mul_ln28_5_fu_2124_p2;
reg   [9:0] mul_ln28_5_reg_3807;
wire   [0:0] icmp_ln20_5_fu_2103_p2;
wire   [1:0] add_ln23_5_fu_2140_p2;
reg   [1:0] add_ln23_5_reg_3815;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln23_5_fu_2134_p2;
wire   [31:0] select_ln28_5_fu_2267_p3;
wire    ap_CS_fsm_state21;
wire   [1:0] add_ln20_6_fu_2285_p2;
reg   [1:0] add_ln20_6_reg_3833;
wire    ap_CS_fsm_state22;
wire   [9:0] mul_ln28_6_fu_2300_p2;
reg   [9:0] mul_ln28_6_reg_3838;
wire   [0:0] icmp_ln20_6_fu_2279_p2;
wire   [1:0] add_ln23_6_fu_2312_p2;
reg   [1:0] add_ln23_6_reg_3846;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln23_6_fu_2306_p2;
wire   [31:0] select_ln28_6_fu_2445_p3;
wire    ap_CS_fsm_state24;
wire   [1:0] add_ln20_7_fu_2463_p2;
reg   [1:0] add_ln20_7_reg_3864;
wire    ap_CS_fsm_state25;
wire   [9:0] mul_ln28_7_fu_2478_p2;
reg   [9:0] mul_ln28_7_reg_3869;
wire   [0:0] icmp_ln20_7_fu_2457_p2;
wire   [1:0] add_ln23_7_fu_2490_p2;
reg   [1:0] add_ln23_7_reg_3877;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln23_7_fu_2484_p2;
wire   [31:0] select_ln28_7_fu_2621_p3;
wire    ap_CS_fsm_state27;
wire   [1:0] add_ln20_8_fu_2639_p2;
reg   [1:0] add_ln20_8_reg_3895;
wire    ap_CS_fsm_state28;
wire   [9:0] mul_ln28_8_fu_2654_p2;
reg   [9:0] mul_ln28_8_reg_3900;
wire   [0:0] icmp_ln20_8_fu_2633_p2;
wire   [1:0] add_ln23_8_fu_2666_p2;
reg   [1:0] add_ln23_8_reg_3908;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln23_8_fu_2660_p2;
wire   [31:0] select_ln28_8_fu_2795_p3;
wire    ap_CS_fsm_state30;
wire   [1:0] add_ln20_9_fu_2813_p2;
reg   [1:0] add_ln20_9_reg_3926;
wire    ap_CS_fsm_state31;
wire   [9:0] mul_ln28_9_fu_2828_p2;
reg   [9:0] mul_ln28_9_reg_3931;
wire   [0:0] icmp_ln20_9_fu_2807_p2;
wire   [1:0] add_ln23_9_fu_2844_p2;
reg   [1:0] add_ln23_9_reg_3939;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln23_9_fu_2838_p2;
wire   [31:0] select_ln28_9_fu_2971_p3;
wire    ap_CS_fsm_state33;
wire   [1:0] add_ln20_10_fu_2989_p2;
reg   [1:0] add_ln20_10_reg_3957;
wire    ap_CS_fsm_state34;
wire   [9:0] mul_ln28_10_fu_3004_p2;
reg   [9:0] mul_ln28_10_reg_3962;
wire   [0:0] icmp_ln20_10_fu_2983_p2;
wire   [1:0] add_ln23_10_fu_3016_p2;
reg   [1:0] add_ln23_10_reg_3970;
wire    ap_CS_fsm_state35;
wire   [0:0] icmp_ln23_10_fu_3010_p2;
wire   [31:0] select_ln28_10_fu_3145_p3;
wire    ap_CS_fsm_state36;
wire   [1:0] add_ln20_11_fu_3163_p2;
reg   [1:0] add_ln20_11_reg_3988;
wire    ap_CS_fsm_state37;
wire   [9:0] mul_ln28_11_fu_3178_p2;
reg   [9:0] mul_ln28_11_reg_3993;
wire   [0:0] icmp_ln20_11_fu_3157_p2;
wire   [1:0] add_ln23_11_fu_3194_p2;
reg   [1:0] add_ln23_11_reg_4001;
wire    ap_CS_fsm_state38;
wire   [0:0] icmp_ln23_11_fu_3188_p2;
wire   [31:0] select_ln28_11_fu_3321_p3;
wire    ap_CS_fsm_state39;
wire   [1:0] add_ln20_12_fu_3339_p2;
reg   [1:0] add_ln20_12_reg_4019;
wire    ap_CS_fsm_state40;
wire   [9:0] mul_ln28_12_fu_3354_p2;
reg   [9:0] mul_ln28_12_reg_4024;
wire   [0:0] icmp_ln20_12_fu_3333_p2;
wire   [1:0] add_ln23_12_fu_3366_p2;
reg   [1:0] add_ln23_12_reg_4032;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln23_12_fu_3360_p2;
wire   [31:0] select_ln28_12_fu_3499_p3;
wire    ap_CS_fsm_state42;
reg   [5:0] f_0_reg_327;
reg   [3:0] r_0_reg_338;
reg   [12:0] phi_mul_reg_349;
reg   [31:0] max_0_0_reg_360;
reg   [1:0] mpr_0_0_reg_373;
reg   [31:0] max_1_0_reg_384;
reg   [1:0] mpc_0_0_reg_396;
reg   [31:0] max_0_1_reg_407;
reg   [1:0] mpr_0_1_reg_420;
reg   [31:0] max_1_1_reg_431;
reg   [1:0] mpc_0_1_reg_443;
reg   [31:0] max_0_2_reg_454;
reg   [1:0] mpr_0_2_reg_467;
reg   [31:0] max_1_2_reg_478;
reg   [1:0] mpc_0_2_reg_490;
reg   [31:0] max_0_3_reg_501;
reg   [1:0] mpr_0_3_reg_514;
reg   [31:0] max_1_3_reg_525;
reg   [1:0] mpc_0_3_reg_537;
reg   [31:0] max_0_4_reg_548;
reg   [1:0] mpr_0_4_reg_561;
reg   [31:0] max_1_4_reg_572;
reg   [1:0] mpc_0_4_reg_584;
reg   [31:0] max_0_5_reg_595;
reg   [1:0] mpr_0_5_reg_608;
reg   [31:0] max_1_5_reg_619;
reg   [1:0] mpc_0_5_reg_631;
reg   [31:0] max_0_6_reg_642;
reg   [1:0] mpr_0_6_reg_655;
reg   [31:0] max_1_6_reg_666;
reg   [1:0] mpc_0_6_reg_678;
reg   [31:0] max_0_7_reg_689;
reg   [1:0] mpr_0_7_reg_702;
reg   [31:0] max_1_7_reg_713;
reg   [1:0] mpc_0_7_reg_725;
reg   [31:0] max_0_8_reg_736;
reg   [1:0] mpr_0_8_reg_749;
reg   [31:0] max_1_8_reg_760;
reg   [1:0] mpc_0_8_reg_772;
reg   [31:0] max_0_9_reg_783;
reg   [1:0] mpr_0_9_reg_796;
reg   [31:0] max_1_9_reg_807;
reg   [1:0] mpc_0_9_reg_819;
reg   [31:0] max_0_10_reg_830;
reg   [1:0] mpr_0_10_reg_843;
reg   [31:0] max_1_10_reg_854;
reg   [1:0] mpc_0_10_reg_866;
reg   [31:0] max_0_11_reg_877;
reg   [1:0] mpr_0_11_reg_890;
reg   [31:0] max_1_11_reg_901;
reg   [1:0] mpc_0_11_reg_913;
reg   [31:0] max_0_12_reg_924;
reg   [1:0] mpr_0_12_reg_937;
reg   [31:0] max_1_12_reg_948;
reg   [1:0] mpc_0_12_reg_960;
wire   [63:0] zext_ln35_fu_1040_p1;
wire   [63:0] zext_ln35_1_fu_1056_p1;
wire   [63:0] zext_ln35_2_fu_1072_p1;
wire   [63:0] zext_ln35_3_fu_1088_p1;
wire   [63:0] zext_ln35_4_fu_1104_p1;
wire   [63:0] zext_ln35_5_fu_1120_p1;
wire   [63:0] zext_ln35_6_fu_1136_p1;
wire   [63:0] zext_ln35_7_fu_1152_p1;
wire   [63:0] zext_ln35_8_fu_1168_p1;
wire   [63:0] zext_ln35_9_fu_1184_p1;
wire   [63:0] zext_ln35_10_fu_1200_p1;
wire   [63:0] zext_ln35_11_fu_1216_p1;
wire   [63:0] zext_ln35_12_fu_1232_p1;
wire   [63:0] zext_ln28_4_fu_1306_p1;
wire   [63:0] zext_ln28_8_fu_1478_p1;
wire   [63:0] zext_ln28_12_fu_1652_p1;
wire   [63:0] zext_ln28_16_fu_1828_p1;
wire   [63:0] zext_ln28_20_fu_2002_p1;
wire   [63:0] zext_ln28_24_fu_2178_p1;
wire   [63:0] zext_ln28_28_fu_2356_p1;
wire   [63:0] zext_ln28_32_fu_2532_p1;
wire   [63:0] zext_ln28_36_fu_2706_p1;
wire   [63:0] zext_ln28_40_fu_2882_p1;
wire   [63:0] zext_ln28_44_fu_3056_p1;
wire   [63:0] zext_ln28_48_fu_3232_p1;
wire   [63:0] zext_ln28_51_fu_3410_p1;
reg   [31:0] grp_fu_971_p1;
wire   [12:0] add_ln35_fu_1035_p2;
wire   [12:0] add_ln35_1_fu_1045_p2;
wire   [12:0] add_ln35_2_fu_1051_p2;
wire   [12:0] add_ln35_3_fu_1061_p2;
wire   [12:0] add_ln35_4_fu_1067_p2;
wire   [12:0] add_ln35_5_fu_1077_p2;
wire   [12:0] add_ln35_6_fu_1083_p2;
wire   [12:0] add_ln35_7_fu_1093_p2;
wire   [12:0] add_ln35_8_fu_1099_p2;
wire   [12:0] add_ln35_9_fu_1109_p2;
wire   [12:0] add_ln35_10_fu_1115_p2;
wire   [12:0] add_ln35_11_fu_1125_p2;
wire   [12:0] add_ln35_12_fu_1131_p2;
wire   [12:0] add_ln35_13_fu_1141_p2;
wire   [12:0] add_ln35_14_fu_1147_p2;
wire   [12:0] add_ln35_15_fu_1157_p2;
wire   [12:0] add_ln35_16_fu_1163_p2;
wire   [12:0] add_ln35_17_fu_1173_p2;
wire   [12:0] add_ln35_18_fu_1179_p2;
wire   [12:0] add_ln35_19_fu_1189_p2;
wire   [12:0] add_ln35_20_fu_1195_p2;
wire   [12:0] add_ln35_21_fu_1205_p2;
wire   [12:0] add_ln35_22_fu_1211_p2;
wire   [12:0] add_ln35_23_fu_1221_p2;
wire   [12:0] add_ln35_24_fu_1227_p2;
wire   [4:0] zext_ln20_fu_1237_p1;
wire   [4:0] add_ln25_fu_1253_p2;
wire   [4:0] mul_ln28_fu_1262_p0;
wire   [9:0] zext_ln28_2_fu_1280_p1;
wire   [9:0] add_ln28_fu_1284_p2;
wire   [14:0] tmp_65_fu_1289_p3;
wire   [15:0] zext_ln28_3_fu_1297_p1;
wire   [15:0] add_ln28_1_fu_1301_p2;
wire   [31:0] bitcast_ln28_fu_1311_p1;
wire   [31:0] bitcast_ln28_1_fu_1329_p1;
wire   [7:0] tmp_5_fu_1315_p4;
wire   [22:0] trunc_ln28_fu_1325_p1;
wire   [0:0] icmp_ln28_1_fu_1353_p2;
wire   [0:0] icmp_ln28_fu_1347_p2;
wire   [7:0] tmp_6_fu_1333_p4;
wire   [22:0] trunc_ln28_1_fu_1343_p1;
wire   [0:0] icmp_ln28_3_fu_1371_p2;
wire   [0:0] icmp_ln28_2_fu_1365_p2;
wire   [0:0] or_ln28_fu_1359_p2;
wire   [0:0] or_ln28_1_fu_1377_p2;
wire   [0:0] and_ln28_fu_1383_p2;
wire   [0:0] grp_fu_971_p2;
wire   [0:0] and_ln28_1_fu_1389_p2;
wire   [4:0] zext_ln20_1_fu_1403_p1;
wire   [4:0] add_ln25_1_fu_1419_p2;
wire   [4:0] mul_ln28_1_fu_1428_p0;
wire   [1:0] xor_ln26_fu_1446_p2;
wire   [9:0] zext_ln28_6_fu_1452_p1;
wire   [9:0] add_ln28_2_fu_1456_p2;
wire   [14:0] tmp_66_fu_1461_p3;
wire   [15:0] zext_ln28_7_fu_1469_p1;
wire   [15:0] add_ln28_3_fu_1473_p2;
wire   [31:0] bitcast_ln28_2_fu_1483_p1;
wire   [31:0] bitcast_ln28_3_fu_1501_p1;
wire   [7:0] tmp_10_fu_1487_p4;
wire   [22:0] trunc_ln28_2_fu_1497_p1;
wire   [0:0] icmp_ln28_5_fu_1525_p2;
wire   [0:0] icmp_ln28_4_fu_1519_p2;
wire   [7:0] tmp_11_fu_1505_p4;
wire   [22:0] trunc_ln28_3_fu_1515_p1;
wire   [0:0] icmp_ln28_7_fu_1543_p2;
wire   [0:0] icmp_ln28_6_fu_1537_p2;
wire   [0:0] or_ln28_2_fu_1531_p2;
wire   [0:0] or_ln28_3_fu_1549_p2;
wire   [0:0] and_ln28_2_fu_1555_p2;
wire   [0:0] and_ln28_3_fu_1561_p2;
wire   [4:0] zext_ln20_2_fu_1575_p1;
wire   [4:0] add_ln25_2_fu_1591_p2;
wire   [4:0] mul_ln28_2_fu_1600_p0;
wire   [2:0] or_ln_fu_1618_p3;
wire   [9:0] zext_ln28_10_fu_1626_p1;
wire   [9:0] add_ln28_4_fu_1630_p2;
wire   [14:0] tmp_67_fu_1635_p3;
wire   [15:0] zext_ln28_11_fu_1643_p1;
wire   [15:0] add_ln28_5_fu_1647_p2;
wire   [31:0] bitcast_ln28_4_fu_1657_p1;
wire   [31:0] bitcast_ln28_5_fu_1675_p1;
wire   [7:0] tmp_15_fu_1661_p4;
wire   [22:0] trunc_ln28_4_fu_1671_p1;
wire   [0:0] icmp_ln28_9_fu_1699_p2;
wire   [0:0] icmp_ln28_8_fu_1693_p2;
wire   [7:0] tmp_16_fu_1679_p4;
wire   [22:0] trunc_ln28_5_fu_1689_p1;
wire   [0:0] icmp_ln28_11_fu_1717_p2;
wire   [0:0] icmp_ln28_10_fu_1711_p2;
wire   [0:0] or_ln28_4_fu_1705_p2;
wire   [0:0] or_ln28_5_fu_1723_p2;
wire   [0:0] and_ln28_4_fu_1729_p2;
wire   [0:0] and_ln28_5_fu_1735_p2;
wire   [4:0] zext_ln20_3_fu_1749_p1;
wire   [4:0] add_ln25_3_fu_1765_p2;
wire   [4:0] mul_ln28_3_fu_1774_p0;
wire   [1:0] xor_ln26_1_fu_1792_p2;
wire  signed [2:0] sext_ln26_fu_1798_p1;
wire   [9:0] zext_ln28_14_fu_1802_p1;
wire   [9:0] add_ln28_6_fu_1806_p2;
wire   [14:0] tmp_68_fu_1811_p3;
wire   [15:0] zext_ln28_15_fu_1819_p1;
wire   [15:0] add_ln28_7_fu_1823_p2;
wire   [31:0] bitcast_ln28_6_fu_1833_p1;
wire   [31:0] bitcast_ln28_7_fu_1851_p1;
wire   [7:0] tmp_20_fu_1837_p4;
wire   [22:0] trunc_ln28_6_fu_1847_p1;
wire   [0:0] icmp_ln28_13_fu_1875_p2;
wire   [0:0] icmp_ln28_12_fu_1869_p2;
wire   [7:0] tmp_21_fu_1855_p4;
wire   [22:0] trunc_ln28_7_fu_1865_p1;
wire   [0:0] icmp_ln28_15_fu_1893_p2;
wire   [0:0] icmp_ln28_14_fu_1887_p2;
wire   [0:0] or_ln28_6_fu_1881_p2;
wire   [0:0] or_ln28_7_fu_1899_p2;
wire   [0:0] and_ln28_6_fu_1905_p2;
wire   [0:0] and_ln28_7_fu_1911_p2;
wire   [4:0] zext_ln20_4_fu_1925_p1;
wire   [4:0] add_ln25_4_fu_1941_p2;
wire   [4:0] mul_ln28_4_fu_1950_p0;
wire   [3:0] or_ln26_1_fu_1968_p3;
wire   [9:0] zext_ln28_18_fu_1976_p1;
wire   [9:0] add_ln28_8_fu_1980_p2;
wire   [14:0] tmp_69_fu_1985_p3;
wire   [15:0] zext_ln28_19_fu_1993_p1;
wire   [15:0] add_ln28_9_fu_1997_p2;
wire   [31:0] bitcast_ln28_8_fu_2007_p1;
wire   [31:0] bitcast_ln28_9_fu_2025_p1;
wire   [7:0] tmp_38_fu_2011_p4;
wire   [22:0] trunc_ln28_8_fu_2021_p1;
wire   [0:0] icmp_ln28_17_fu_2049_p2;
wire   [0:0] icmp_ln28_16_fu_2043_p2;
wire   [7:0] tmp_39_fu_2029_p4;
wire   [22:0] trunc_ln28_9_fu_2039_p1;
wire   [0:0] icmp_ln28_19_fu_2067_p2;
wire   [0:0] icmp_ln28_18_fu_2061_p2;
wire   [0:0] or_ln28_8_fu_2055_p2;
wire   [0:0] or_ln28_9_fu_2073_p2;
wire   [0:0] and_ln28_8_fu_2079_p2;
wire   [0:0] and_ln28_9_fu_2085_p2;
wire   [4:0] zext_ln20_5_fu_2099_p1;
wire   [4:0] add_ln25_5_fu_2115_p2;
wire   [4:0] mul_ln28_5_fu_2124_p0;
wire   [3:0] zext_ln23_fu_2130_p1;
wire   [3:0] add_ln26_fu_2146_p2;
wire   [9:0] zext_ln28_22_fu_2152_p1;
wire   [9:0] add_ln28_10_fu_2156_p2;
wire   [14:0] tmp_70_fu_2161_p3;
wire   [15:0] zext_ln28_23_fu_2169_p1;
wire   [15:0] add_ln28_11_fu_2173_p2;
wire   [31:0] bitcast_ln28_10_fu_2183_p1;
wire   [31:0] bitcast_ln28_11_fu_2201_p1;
wire   [7:0] tmp_41_fu_2187_p4;
wire   [22:0] trunc_ln28_10_fu_2197_p1;
wire   [0:0] icmp_ln28_21_fu_2225_p2;
wire   [0:0] icmp_ln28_20_fu_2219_p2;
wire   [7:0] tmp_42_fu_2205_p4;
wire   [22:0] trunc_ln28_11_fu_2215_p1;
wire   [0:0] icmp_ln28_23_fu_2243_p2;
wire   [0:0] icmp_ln28_22_fu_2237_p2;
wire   [0:0] or_ln28_10_fu_2231_p2;
wire   [0:0] or_ln28_11_fu_2249_p2;
wire   [0:0] and_ln28_10_fu_2255_p2;
wire   [0:0] and_ln28_11_fu_2261_p2;
wire   [4:0] zext_ln20_6_fu_2275_p1;
wire   [4:0] add_ln25_6_fu_2291_p2;
wire   [4:0] mul_ln28_6_fu_2300_p0;
wire   [2:0] or_ln26_2_fu_2318_p3;
wire  signed [3:0] sext_ln26_1_fu_2326_p1;
wire   [9:0] zext_ln28_26_fu_2330_p1;
wire   [9:0] add_ln28_12_fu_2334_p2;
wire   [14:0] tmp_71_fu_2339_p3;
wire   [15:0] zext_ln28_27_fu_2347_p1;
wire   [15:0] add_ln28_13_fu_2351_p2;
wire   [31:0] bitcast_ln28_12_fu_2361_p1;
wire   [31:0] bitcast_ln28_13_fu_2379_p1;
wire   [7:0] tmp_44_fu_2365_p4;
wire   [22:0] trunc_ln28_12_fu_2375_p1;
wire   [0:0] icmp_ln28_25_fu_2403_p2;
wire   [0:0] icmp_ln28_24_fu_2397_p2;
wire   [7:0] tmp_45_fu_2383_p4;
wire   [22:0] trunc_ln28_13_fu_2393_p1;
wire   [0:0] icmp_ln28_27_fu_2421_p2;
wire   [0:0] icmp_ln28_26_fu_2415_p2;
wire   [0:0] or_ln28_12_fu_2409_p2;
wire   [0:0] or_ln28_13_fu_2427_p2;
wire   [0:0] and_ln28_12_fu_2433_p2;
wire   [0:0] and_ln28_13_fu_2439_p2;
wire   [4:0] zext_ln20_7_fu_2453_p1;
wire   [4:0] add_ln25_7_fu_2469_p2;
wire   [4:0] mul_ln28_7_fu_2478_p0;
wire   [1:0] xor_ln26_2_fu_2496_p2;
wire  signed [3:0] sext_ln26_2_fu_2502_p1;
wire   [9:0] zext_ln28_30_fu_2506_p1;
wire   [9:0] add_ln28_14_fu_2510_p2;
wire   [14:0] tmp_72_fu_2515_p3;
wire   [15:0] zext_ln28_31_fu_2523_p1;
wire   [15:0] add_ln28_15_fu_2527_p2;
wire   [31:0] bitcast_ln28_14_fu_2537_p1;
wire   [31:0] bitcast_ln28_15_fu_2555_p1;
wire   [7:0] tmp_47_fu_2541_p4;
wire   [22:0] trunc_ln28_14_fu_2551_p1;
wire   [0:0] icmp_ln28_29_fu_2579_p2;
wire   [0:0] icmp_ln28_28_fu_2573_p2;
wire   [7:0] tmp_48_fu_2559_p4;
wire   [22:0] trunc_ln28_15_fu_2569_p1;
wire   [0:0] icmp_ln28_31_fu_2597_p2;
wire   [0:0] icmp_ln28_30_fu_2591_p2;
wire   [0:0] or_ln28_14_fu_2585_p2;
wire   [0:0] or_ln28_15_fu_2603_p2;
wire   [0:0] and_ln28_14_fu_2609_p2;
wire   [0:0] and_ln28_15_fu_2615_p2;
wire   [4:0] zext_ln20_8_fu_2629_p1;
wire   [4:0] add_ln25_8_fu_2645_p2;
wire   [4:0] mul_ln28_8_fu_2654_p0;
wire   [4:0] or_ln26_3_fu_2672_p3;
wire   [9:0] zext_ln28_34_fu_2680_p1;
wire   [9:0] add_ln28_16_fu_2684_p2;
wire   [14:0] tmp_73_fu_2689_p3;
wire   [15:0] zext_ln28_35_fu_2697_p1;
wire   [15:0] add_ln28_17_fu_2701_p2;
wire   [31:0] bitcast_ln28_16_fu_2711_p1;
wire   [31:0] bitcast_ln28_17_fu_2729_p1;
wire   [7:0] tmp_50_fu_2715_p4;
wire   [22:0] trunc_ln28_16_fu_2725_p1;
wire   [0:0] icmp_ln28_33_fu_2753_p2;
wire   [0:0] icmp_ln28_32_fu_2747_p2;
wire   [7:0] tmp_51_fu_2733_p4;
wire   [22:0] trunc_ln28_17_fu_2743_p1;
wire   [0:0] icmp_ln28_35_fu_2771_p2;
wire   [0:0] icmp_ln28_34_fu_2765_p2;
wire   [0:0] or_ln28_16_fu_2759_p2;
wire   [0:0] or_ln28_17_fu_2777_p2;
wire   [0:0] and_ln28_16_fu_2783_p2;
wire   [0:0] and_ln28_17_fu_2789_p2;
wire   [4:0] zext_ln20_9_fu_2803_p1;
wire   [4:0] add_ln25_9_fu_2819_p2;
wire   [4:0] mul_ln28_9_fu_2828_p0;
wire   [4:0] zext_ln23_1_fu_2834_p1;
wire   [4:0] add_ln26_1_fu_2850_p2;
wire   [9:0] zext_ln28_38_fu_2856_p1;
wire   [9:0] add_ln28_18_fu_2860_p2;
wire   [14:0] tmp_74_fu_2865_p3;
wire   [15:0] zext_ln28_39_fu_2873_p1;
wire   [15:0] add_ln28_19_fu_2877_p2;
wire   [31:0] bitcast_ln28_18_fu_2887_p1;
wire   [31:0] bitcast_ln28_19_fu_2905_p1;
wire   [7:0] tmp_53_fu_2891_p4;
wire   [22:0] trunc_ln28_18_fu_2901_p1;
wire   [0:0] icmp_ln28_37_fu_2929_p2;
wire   [0:0] icmp_ln28_36_fu_2923_p2;
wire   [7:0] tmp_54_fu_2909_p4;
wire   [22:0] trunc_ln28_19_fu_2919_p1;
wire   [0:0] icmp_ln28_39_fu_2947_p2;
wire   [0:0] icmp_ln28_38_fu_2941_p2;
wire   [0:0] or_ln28_18_fu_2935_p2;
wire   [0:0] or_ln28_19_fu_2953_p2;
wire   [0:0] and_ln28_18_fu_2959_p2;
wire   [0:0] and_ln28_19_fu_2965_p2;
wire   [4:0] zext_ln20_10_fu_2979_p1;
wire   [4:0] add_ln25_10_fu_2995_p2;
wire   [4:0] mul_ln28_10_fu_3004_p0;
wire   [4:0] or_ln26_4_fu_3022_p3;
wire   [9:0] zext_ln28_42_fu_3030_p1;
wire   [9:0] add_ln28_20_fu_3034_p2;
wire   [14:0] tmp_75_fu_3039_p3;
wire   [15:0] zext_ln28_43_fu_3047_p1;
wire   [15:0] add_ln28_21_fu_3051_p2;
wire   [31:0] bitcast_ln28_20_fu_3061_p1;
wire   [31:0] bitcast_ln28_21_fu_3079_p1;
wire   [7:0] tmp_56_fu_3065_p4;
wire   [22:0] trunc_ln28_20_fu_3075_p1;
wire   [0:0] icmp_ln28_41_fu_3103_p2;
wire   [0:0] icmp_ln28_40_fu_3097_p2;
wire   [7:0] tmp_57_fu_3083_p4;
wire   [22:0] trunc_ln28_21_fu_3093_p1;
wire   [0:0] icmp_ln28_43_fu_3121_p2;
wire   [0:0] icmp_ln28_42_fu_3115_p2;
wire   [0:0] or_ln28_20_fu_3109_p2;
wire   [0:0] or_ln28_21_fu_3127_p2;
wire   [0:0] and_ln28_20_fu_3133_p2;
wire   [0:0] and_ln28_21_fu_3139_p2;
wire   [4:0] zext_ln20_11_fu_3153_p1;
wire   [4:0] add_ln25_11_fu_3169_p2;
wire   [4:0] mul_ln28_11_fu_3178_p0;
wire   [4:0] zext_ln23_2_fu_3184_p1;
wire   [4:0] add_ln26_2_fu_3200_p2;
wire   [9:0] zext_ln28_46_fu_3206_p1;
wire   [9:0] add_ln28_22_fu_3210_p2;
wire   [14:0] tmp_76_fu_3215_p3;
wire   [15:0] zext_ln28_47_fu_3223_p1;
wire   [15:0] add_ln28_23_fu_3227_p2;
wire   [31:0] bitcast_ln28_22_fu_3237_p1;
wire   [31:0] bitcast_ln28_23_fu_3255_p1;
wire   [7:0] tmp_59_fu_3241_p4;
wire   [22:0] trunc_ln28_22_fu_3251_p1;
wire   [0:0] icmp_ln28_45_fu_3279_p2;
wire   [0:0] icmp_ln28_44_fu_3273_p2;
wire   [7:0] tmp_60_fu_3259_p4;
wire   [22:0] trunc_ln28_23_fu_3269_p1;
wire   [0:0] icmp_ln28_47_fu_3297_p2;
wire   [0:0] icmp_ln28_46_fu_3291_p2;
wire   [0:0] or_ln28_22_fu_3285_p2;
wire   [0:0] or_ln28_23_fu_3303_p2;
wire   [0:0] and_ln28_22_fu_3309_p2;
wire   [0:0] and_ln28_23_fu_3315_p2;
wire   [4:0] zext_ln20_12_fu_3329_p1;
wire   [4:0] add_ln25_12_fu_3345_p2;
wire   [4:0] mul_ln28_12_fu_3354_p0;
wire   [3:0] or_ln26_5_fu_3372_p3;
wire  signed [4:0] sext_ln26_3_fu_3380_p1;
wire   [9:0] zext_ln28_49_fu_3384_p1;
wire   [9:0] add_ln28_24_fu_3388_p2;
wire   [14:0] tmp_77_fu_3393_p3;
wire   [15:0] zext_ln28_50_fu_3401_p1;
wire   [15:0] add_ln28_25_fu_3405_p2;
wire   [31:0] bitcast_ln28_24_fu_3415_p1;
wire   [31:0] bitcast_ln28_25_fu_3433_p1;
wire   [7:0] tmp_62_fu_3419_p4;
wire   [22:0] trunc_ln28_24_fu_3429_p1;
wire   [0:0] icmp_ln28_49_fu_3457_p2;
wire   [0:0] icmp_ln28_48_fu_3451_p2;
wire   [7:0] tmp_63_fu_3437_p4;
wire   [22:0] trunc_ln28_25_fu_3447_p1;
wire   [0:0] icmp_ln28_51_fu_3475_p2;
wire   [0:0] icmp_ln28_50_fu_3469_p2;
wire   [0:0] or_ln28_24_fu_3463_p2;
wire   [0:0] or_ln28_25_fu_3481_p2;
wire   [0:0] and_ln28_24_fu_3487_p2;
wire   [0:0] and_ln28_25_fu_3493_p2;
reg   [41:0] ap_NS_fsm;
wire   [9:0] mul_ln28_10_fu_3004_p00;
wire   [9:0] mul_ln28_11_fu_3178_p00;
wire   [9:0] mul_ln28_12_fu_3354_p00;
wire   [9:0] mul_ln28_1_fu_1428_p00;
wire   [9:0] mul_ln28_2_fu_1600_p00;
wire   [9:0] mul_ln28_3_fu_1774_p00;
wire   [9:0] mul_ln28_4_fu_1950_p00;
wire   [9:0] mul_ln28_5_fu_2124_p00;
wire   [9:0] mul_ln28_6_fu_2300_p00;
wire   [9:0] mul_ln28_7_fu_2478_p00;
wire   [9:0] mul_ln28_8_fu_2654_p00;
wire   [9:0] mul_ln28_9_fu_2828_p00;
wire   [9:0] mul_ln28_fu_1262_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
end

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U1(
    .din0(conv_1_out_q0),
    .din1(grp_fu_971_p1),
    .opcode(5'd2),
    .dout(grp_fu_971_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1015_p2 == 1'd1))) begin
        f_0_reg_327 <= f_reg_3510;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_327 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_1268_p2 == 1'd1))) begin
        max_0_0_reg_360 <= max_1_0_reg_384;
    end else if (((icmp_ln13_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        max_0_0_reg_360 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_10_fu_3010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        max_0_10_reg_830 <= max_1_10_reg_854;
    end else if (((icmp_ln20_9_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        max_0_10_reg_830 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_11_fu_3188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        max_0_11_reg_877 <= max_1_11_reg_901;
    end else if (((icmp_ln20_10_fu_2983_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        max_0_11_reg_877 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_12_fu_3360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        max_0_12_reg_924 <= max_1_12_reg_948;
    end else if (((icmp_ln20_11_fu_3157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        max_0_12_reg_924 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln23_1_fu_1434_p2 == 1'd1))) begin
        max_0_1_reg_407 <= max_1_1_reg_431;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1241_p2 == 1'd1))) begin
        max_0_1_reg_407 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1606_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        max_0_2_reg_454 <= max_1_2_reg_478;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_1_fu_1407_p2 == 1'd1))) begin
        max_0_2_reg_454 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        max_0_3_reg_501 <= max_1_3_reg_525;
    end else if (((icmp_ln20_2_fu_1579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        max_0_3_reg_501 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_1956_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        max_0_4_reg_548 <= max_1_4_reg_572;
    end else if (((icmp_ln20_3_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        max_0_4_reg_548 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        max_0_5_reg_595 <= max_1_5_reg_619;
    end else if (((icmp_ln20_4_fu_1929_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        max_0_5_reg_595 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_6_fu_2306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        max_0_6_reg_642 <= max_1_6_reg_666;
    end else if (((icmp_ln20_5_fu_2103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        max_0_6_reg_642 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_7_fu_2484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        max_0_7_reg_689 <= max_1_7_reg_713;
    end else if (((icmp_ln20_6_fu_2279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        max_0_7_reg_689 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_8_fu_2660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        max_0_8_reg_736 <= max_1_8_reg_760;
    end else if (((icmp_ln20_7_fu_2457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        max_0_8_reg_736 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_9_fu_2838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        max_0_9_reg_783 <= max_1_9_reg_807;
    end else if (((icmp_ln20_8_fu_2633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        max_0_9_reg_783 <= 32'd8388608;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max_1_0_reg_384 <= select_ln28_fu_1395_p3;
    end else if (((icmp_ln20_fu_1241_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        max_1_0_reg_384 <= max_0_0_reg_360;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        max_1_10_reg_854 <= select_ln28_10_fu_3145_p3;
    end else if (((icmp_ln20_10_fu_2983_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        max_1_10_reg_854 <= max_0_10_reg_830;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        max_1_11_reg_901 <= select_ln28_11_fu_3321_p3;
    end else if (((icmp_ln20_11_fu_3157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        max_1_11_reg_901 <= max_0_11_reg_877;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        max_1_12_reg_948 <= select_ln28_12_fu_3499_p3;
    end else if (((icmp_ln20_12_fu_3333_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        max_1_12_reg_948 <= max_0_12_reg_924;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        max_1_1_reg_431 <= select_ln28_1_fu_1567_p3;
    end else if (((icmp_ln20_1_fu_1407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        max_1_1_reg_431 <= max_0_1_reg_407;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max_1_2_reg_478 <= select_ln28_2_fu_1741_p3;
    end else if (((icmp_ln20_2_fu_1579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        max_1_2_reg_478 <= max_0_2_reg_454;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        max_1_3_reg_525 <= select_ln28_3_fu_1917_p3;
    end else if (((icmp_ln20_3_fu_1753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        max_1_3_reg_525 <= max_0_3_reg_501;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        max_1_4_reg_572 <= select_ln28_4_fu_2091_p3;
    end else if (((icmp_ln20_4_fu_1929_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        max_1_4_reg_572 <= max_0_4_reg_548;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        max_1_5_reg_619 <= select_ln28_5_fu_2267_p3;
    end else if (((icmp_ln20_5_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        max_1_5_reg_619 <= max_0_5_reg_595;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        max_1_6_reg_666 <= select_ln28_6_fu_2445_p3;
    end else if (((icmp_ln20_6_fu_2279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        max_1_6_reg_666 <= max_0_6_reg_642;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        max_1_7_reg_713 <= select_ln28_7_fu_2621_p3;
    end else if (((icmp_ln20_7_fu_2457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        max_1_7_reg_713 <= max_0_7_reg_689;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        max_1_8_reg_760 <= select_ln28_8_fu_2795_p3;
    end else if (((icmp_ln20_8_fu_2633_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        max_1_8_reg_760 <= max_0_8_reg_736;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        max_1_9_reg_807 <= select_ln28_9_fu_2971_p3;
    end else if (((icmp_ln20_9_fu_2807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        max_1_9_reg_807 <= max_0_9_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mpc_0_0_reg_396 <= add_ln23_reg_3660;
    end else if (((icmp_ln20_fu_1241_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        mpc_0_0_reg_396 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        mpc_0_10_reg_866 <= add_ln23_10_reg_3970;
    end else if (((icmp_ln20_10_fu_2983_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        mpc_0_10_reg_866 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        mpc_0_11_reg_913 <= add_ln23_11_reg_4001;
    end else if (((icmp_ln20_11_fu_3157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        mpc_0_11_reg_913 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        mpc_0_12_reg_960 <= add_ln23_12_reg_4032;
    end else if (((icmp_ln20_12_fu_3333_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        mpc_0_12_reg_960 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mpc_0_1_reg_443 <= add_ln23_1_reg_3691;
    end else if (((icmp_ln20_1_fu_1407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        mpc_0_1_reg_443 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mpc_0_2_reg_490 <= add_ln23_2_reg_3722;
    end else if (((icmp_ln20_2_fu_1579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        mpc_0_2_reg_490 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        mpc_0_3_reg_537 <= add_ln23_3_reg_3753;
    end else if (((icmp_ln20_3_fu_1753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        mpc_0_3_reg_537 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        mpc_0_4_reg_584 <= add_ln23_4_reg_3784;
    end else if (((icmp_ln20_4_fu_1929_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        mpc_0_4_reg_584 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        mpc_0_5_reg_631 <= add_ln23_5_reg_3815;
    end else if (((icmp_ln20_5_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        mpc_0_5_reg_631 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mpc_0_6_reg_678 <= add_ln23_6_reg_3846;
    end else if (((icmp_ln20_6_fu_2279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        mpc_0_6_reg_678 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mpc_0_7_reg_725 <= add_ln23_7_reg_3877;
    end else if (((icmp_ln20_7_fu_2457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        mpc_0_7_reg_725 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        mpc_0_8_reg_772 <= add_ln23_8_reg_3908;
    end else if (((icmp_ln20_8_fu_2633_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        mpc_0_8_reg_772 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        mpc_0_9_reg_819 <= add_ln23_9_reg_3939;
    end else if (((icmp_ln20_9_fu_2807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        mpc_0_9_reg_819 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_1268_p2 == 1'd1))) begin
        mpr_0_0_reg_373 <= add_ln20_reg_3647;
    end else if (((icmp_ln13_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        mpr_0_0_reg_373 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_10_fu_3010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        mpr_0_10_reg_843 <= add_ln20_10_reg_3957;
    end else if (((icmp_ln20_9_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        mpr_0_10_reg_843 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_11_fu_3188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        mpr_0_11_reg_890 <= add_ln20_11_reg_3988;
    end else if (((icmp_ln20_10_fu_2983_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
        mpr_0_11_reg_890 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_12_fu_3360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
        mpr_0_12_reg_937 <= add_ln20_12_reg_4019;
    end else if (((icmp_ln20_11_fu_3157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        mpr_0_12_reg_937 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln23_1_fu_1434_p2 == 1'd1))) begin
        mpr_0_1_reg_420 <= add_ln20_1_reg_3678;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1241_p2 == 1'd1))) begin
        mpr_0_1_reg_420 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_2_fu_1606_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        mpr_0_2_reg_467 <= add_ln20_2_reg_3709;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_1_fu_1407_p2 == 1'd1))) begin
        mpr_0_2_reg_467 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_3_fu_1780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        mpr_0_3_reg_514 <= add_ln20_3_reg_3740;
    end else if (((icmp_ln20_2_fu_1579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        mpr_0_3_reg_514 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_4_fu_1956_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        mpr_0_4_reg_561 <= add_ln20_4_reg_3771;
    end else if (((icmp_ln20_3_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        mpr_0_4_reg_561 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_5_fu_2134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        mpr_0_5_reg_608 <= add_ln20_5_reg_3802;
    end else if (((icmp_ln20_4_fu_1929_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        mpr_0_5_reg_608 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_6_fu_2306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        mpr_0_6_reg_655 <= add_ln20_6_reg_3833;
    end else if (((icmp_ln20_5_fu_2103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        mpr_0_6_reg_655 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_7_fu_2484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        mpr_0_7_reg_702 <= add_ln20_7_reg_3864;
    end else if (((icmp_ln20_6_fu_2279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        mpr_0_7_reg_702 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_8_fu_2660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        mpr_0_8_reg_749 <= add_ln20_8_reg_3895;
    end else if (((icmp_ln20_7_fu_2457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        mpr_0_8_reg_749 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_9_fu_2838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        mpr_0_9_reg_796 <= add_ln20_9_reg_3926;
    end else if (((icmp_ln20_8_fu_2633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        mpr_0_9_reg_796 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_12_fu_3333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        phi_mul_reg_349 <= add_ln13_reg_3549;
    end else if (((icmp_ln10_fu_989_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_mul_reg_349 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_12_fu_3333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        r_0_reg_338 <= r_reg_3557;
    end else if (((icmp_ln10_fu_989_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        r_0_reg_338 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln13_reg_3549 <= add_ln13_fu_1009_p2;
        r_reg_3557 <= r_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        add_ln20_10_reg_3957 <= add_ln20_10_fu_2989_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        add_ln20_11_reg_3988 <= add_ln20_11_fu_3163_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        add_ln20_12_reg_4019 <= add_ln20_12_fu_3339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln20_1_reg_3678 <= add_ln20_1_fu_1413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln20_2_reg_3709 <= add_ln20_2_fu_1585_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        add_ln20_3_reg_3740 <= add_ln20_3_fu_1759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln20_4_reg_3771 <= add_ln20_4_fu_1935_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln20_5_reg_3802 <= add_ln20_5_fu_2109_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln20_6_reg_3833 <= add_ln20_6_fu_2285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln20_7_reg_3864 <= add_ln20_7_fu_2463_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln20_8_reg_3895 <= add_ln20_8_fu_2639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln20_9_reg_3926 <= add_ln20_9_fu_2813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln20_reg_3647 <= add_ln20_fu_1247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        add_ln23_10_reg_3970 <= add_ln23_10_fu_3016_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        add_ln23_11_reg_4001 <= add_ln23_11_fu_3194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        add_ln23_12_reg_4032 <= add_ln23_12_fu_3366_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln23_1_reg_3691 <= add_ln23_1_fu_1440_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln23_2_reg_3722 <= add_ln23_2_fu_1612_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln23_3_reg_3753 <= add_ln23_3_fu_1786_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln23_4_reg_3784 <= add_ln23_4_fu_1962_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln23_5_reg_3815 <= add_ln23_5_fu_2140_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln23_6_reg_3846 <= add_ln23_6_fu_2312_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln23_7_reg_3877 <= add_ln23_7_fu_2490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln23_8_reg_3908 <= add_ln23_8_fu_2666_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln23_9_reg_3939 <= add_ln23_9_fu_2844_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln23_reg_3660 <= add_ln23_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_reg_3510 <= f_fu_995_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1015_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        max_pool_1_out_addr_10_reg_3629 <= zext_ln35_10_fu_1200_p1;
        max_pool_1_out_addr_11_reg_3634 <= zext_ln35_11_fu_1216_p1;
        max_pool_1_out_addr_12_reg_3639 <= zext_ln35_12_fu_1232_p1;
        max_pool_1_out_addr_1_reg_3584 <= zext_ln35_1_fu_1056_p1;
        max_pool_1_out_addr_2_reg_3589 <= zext_ln35_2_fu_1072_p1;
        max_pool_1_out_addr_3_reg_3594 <= zext_ln35_3_fu_1088_p1;
        max_pool_1_out_addr_4_reg_3599 <= zext_ln35_4_fu_1104_p1;
        max_pool_1_out_addr_5_reg_3604 <= zext_ln35_5_fu_1120_p1;
        max_pool_1_out_addr_6_reg_3609 <= zext_ln35_6_fu_1136_p1;
        max_pool_1_out_addr_7_reg_3614 <= zext_ln35_7_fu_1152_p1;
        max_pool_1_out_addr_8_reg_3619 <= zext_ln35_8_fu_1168_p1;
        max_pool_1_out_addr_9_reg_3624 <= zext_ln35_9_fu_1184_p1;
        max_pool_1_out_addr_reg_3579 <= zext_ln35_fu_1040_p1;
        shl_ln_reg_3562[4 : 1] <= shl_ln_fu_1027_p3[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_10_fu_2983_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state34))) begin
        mul_ln28_10_reg_3962[9 : 1] <= mul_ln28_10_fu_3004_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_11_fu_3157_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
        mul_ln28_11_reg_3993[9 : 1] <= mul_ln28_11_fu_3178_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_12_fu_3333_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        mul_ln28_12_reg_4024[9 : 1] <= mul_ln28_12_fu_3354_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_1_fu_1407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        mul_ln28_1_reg_3683[9 : 1] <= mul_ln28_1_fu_1428_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_2_fu_1579_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        mul_ln28_2_reg_3714[9 : 1] <= mul_ln28_2_fu_1600_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_3_fu_1753_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        mul_ln28_3_reg_3745[9 : 1] <= mul_ln28_3_fu_1774_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_4_fu_1929_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        mul_ln28_4_reg_3776[9 : 1] <= mul_ln28_4_fu_1950_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_5_fu_2103_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        mul_ln28_5_reg_3807[9 : 1] <= mul_ln28_5_fu_2124_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_6_fu_2279_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        mul_ln28_6_reg_3838[9 : 1] <= mul_ln28_6_fu_2300_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_7_fu_2457_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        mul_ln28_7_reg_3869[9 : 1] <= mul_ln28_7_fu_2478_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_8_fu_2633_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        mul_ln28_8_reg_3900[9 : 1] <= mul_ln28_8_fu_2654_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_9_fu_2807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        mul_ln28_9_reg_3931[9 : 1] <= mul_ln28_9_fu_2828_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_fu_1241_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        mul_ln28_reg_3652[9 : 1] <= mul_ln28_fu_1262_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_989_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln13_1_reg_3532[5 : 0] <= zext_ln13_1_fu_1005_p1[5 : 0];
        zext_ln13_reg_3515[5 : 0] <= zext_ln13_fu_1001_p1[5 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        conv_1_out_address0 = zext_ln28_51_fu_3410_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        conv_1_out_address0 = zext_ln28_48_fu_3232_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        conv_1_out_address0 = zext_ln28_44_fu_3056_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        conv_1_out_address0 = zext_ln28_40_fu_2882_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv_1_out_address0 = zext_ln28_36_fu_2706_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv_1_out_address0 = zext_ln28_32_fu_2532_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv_1_out_address0 = zext_ln28_28_fu_2356_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        conv_1_out_address0 = zext_ln28_24_fu_2178_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        conv_1_out_address0 = zext_ln28_20_fu_2002_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        conv_1_out_address0 = zext_ln28_16_fu_1828_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        conv_1_out_address0 = zext_ln28_12_fu_1652_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_1_out_address0 = zext_ln28_8_fu_1478_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        conv_1_out_address0 = zext_ln28_4_fu_1306_p1;
    end else begin
        conv_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        conv_1_out_ce0 = 1'b1;
    end else begin
        conv_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_971_p1 = max_1_12_reg_948;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_971_p1 = max_1_11_reg_901;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_fu_971_p1 = max_1_10_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_971_p1 = max_1_9_reg_807;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_971_p1 = max_1_8_reg_760;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_971_p1 = max_1_7_reg_713;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_971_p1 = max_1_6_reg_666;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_971_p1 = max_1_5_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_971_p1 = max_1_4_reg_572;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_971_p1 = max_1_3_reg_525;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_971_p1 = max_1_2_reg_478;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_971_p1 = max_1_1_reg_431;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_971_p1 = max_1_0_reg_384;
    end else begin
        grp_fu_971_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_12_reg_3639;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_11_reg_3634;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_10_reg_3629;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_9_reg_3624;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_8_reg_3619;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_7_reg_3614;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_6_reg_3609;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_5_reg_3604;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_4_reg_3599;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_3_reg_3594;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_2_reg_3589;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_1_reg_3584;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_1_out_address0 = max_pool_1_out_addr_reg_3579;
    end else begin
        max_pool_1_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        max_pool_1_out_ce0 = 1'b1;
    end else begin
        max_pool_1_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        max_pool_1_out_d0 = max_0_12_reg_924;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        max_pool_1_out_d0 = max_0_11_reg_877;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        max_pool_1_out_d0 = max_0_10_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        max_pool_1_out_d0 = max_0_9_reg_783;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        max_pool_1_out_d0 = max_0_8_reg_736;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        max_pool_1_out_d0 = max_0_7_reg_689;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        max_pool_1_out_d0 = max_0_6_reg_642;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        max_pool_1_out_d0 = max_0_5_reg_595;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        max_pool_1_out_d0 = max_0_4_reg_548;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        max_pool_1_out_d0 = max_0_3_reg_501;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        max_pool_1_out_d0 = max_0_2_reg_454;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        max_pool_1_out_d0 = max_0_1_reg_407;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_pool_1_out_d0 = max_0_0_reg_360;
    end else begin
        max_pool_1_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln20_12_fu_3333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40)) | ((icmp_ln20_11_fu_3157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37)) | ((icmp_ln20_10_fu_2983_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34)) | ((icmp_ln20_9_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln20_8_fu_2633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28)) | ((icmp_ln20_7_fu_2457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25)) | ((icmp_ln20_6_fu_2279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln20_5_fu_2103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln20_4_fu_1929_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln20_3_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln20_2_fu_1579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_1_fu_1407_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1241_p2 == 1'd1)))) begin
        max_pool_1_out_we0 = 1'b1;
    end else begin
        max_pool_1_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_989_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln13_fu_1015_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln20_fu_1241_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln23_fu_1268_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln20_1_fu_1407_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln23_1_fu_1434_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln20_2_fu_1579_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln23_2_fu_1606_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln20_3_fu_1753_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((icmp_ln23_3_fu_1780_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln20_4_fu_1929_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln23_4_fu_1956_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln20_5_fu_2103_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln23_5_fu_2134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln20_6_fu_2279_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln23_6_fu_2306_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln20_7_fu_2457_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln23_7_fu_2484_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln20_8_fu_2633_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln23_8_fu_2660_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln20_9_fu_2807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln23_9_fu_2838_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state34 : begin
            if (((icmp_ln20_10_fu_2983_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln23_10_fu_3010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln20_11_fu_3157_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln23_11_fu_3188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state40 : begin
            if (((icmp_ln20_12_fu_3333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln23_12_fu_3360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln13_fu_1009_p2 = (phi_mul_reg_349 + 13'd416);

assign add_ln20_10_fu_2989_p2 = (mpr_0_10_reg_843 + 2'd1);

assign add_ln20_11_fu_3163_p2 = (mpr_0_11_reg_890 + 2'd1);

assign add_ln20_12_fu_3339_p2 = (mpr_0_12_reg_937 + 2'd1);

assign add_ln20_1_fu_1413_p2 = (mpr_0_1_reg_420 + 2'd1);

assign add_ln20_2_fu_1585_p2 = (mpr_0_2_reg_467 + 2'd1);

assign add_ln20_3_fu_1759_p2 = (mpr_0_3_reg_514 + 2'd1);

assign add_ln20_4_fu_1935_p2 = (mpr_0_4_reg_561 + 2'd1);

assign add_ln20_5_fu_2109_p2 = (mpr_0_5_reg_608 + 2'd1);

assign add_ln20_6_fu_2285_p2 = (mpr_0_6_reg_655 + 2'd1);

assign add_ln20_7_fu_2463_p2 = (mpr_0_7_reg_702 + 2'd1);

assign add_ln20_8_fu_2639_p2 = (mpr_0_8_reg_749 + 2'd1);

assign add_ln20_9_fu_2813_p2 = (mpr_0_9_reg_796 + 2'd1);

assign add_ln20_fu_1247_p2 = (mpr_0_0_reg_373 + 2'd1);

assign add_ln23_10_fu_3016_p2 = (mpc_0_10_reg_866 + 2'd1);

assign add_ln23_11_fu_3194_p2 = (mpc_0_11_reg_913 + 2'd1);

assign add_ln23_12_fu_3366_p2 = (mpc_0_12_reg_960 + 2'd1);

assign add_ln23_1_fu_1440_p2 = (mpc_0_1_reg_443 + 2'd1);

assign add_ln23_2_fu_1612_p2 = (mpc_0_2_reg_490 + 2'd1);

assign add_ln23_3_fu_1786_p2 = (mpc_0_3_reg_537 + 2'd1);

assign add_ln23_4_fu_1962_p2 = (mpc_0_4_reg_584 + 2'd1);

assign add_ln23_5_fu_2140_p2 = (mpc_0_5_reg_631 + 2'd1);

assign add_ln23_6_fu_2312_p2 = (mpc_0_6_reg_678 + 2'd1);

assign add_ln23_7_fu_2490_p2 = (mpc_0_7_reg_725 + 2'd1);

assign add_ln23_8_fu_2666_p2 = (mpc_0_8_reg_772 + 2'd1);

assign add_ln23_9_fu_2844_p2 = (mpc_0_9_reg_819 + 2'd1);

assign add_ln23_fu_1274_p2 = (mpc_0_0_reg_396 + 2'd1);

assign add_ln25_10_fu_2995_p2 = (zext_ln20_10_fu_2979_p1 + shl_ln_reg_3562);

assign add_ln25_11_fu_3169_p2 = (zext_ln20_11_fu_3153_p1 + shl_ln_reg_3562);

assign add_ln25_12_fu_3345_p2 = (zext_ln20_12_fu_3329_p1 + shl_ln_reg_3562);

assign add_ln25_1_fu_1419_p2 = (zext_ln20_1_fu_1403_p1 + shl_ln_reg_3562);

assign add_ln25_2_fu_1591_p2 = (zext_ln20_2_fu_1575_p1 + shl_ln_reg_3562);

assign add_ln25_3_fu_1765_p2 = (zext_ln20_3_fu_1749_p1 + shl_ln_reg_3562);

assign add_ln25_4_fu_1941_p2 = (zext_ln20_4_fu_1925_p1 + shl_ln_reg_3562);

assign add_ln25_5_fu_2115_p2 = (zext_ln20_5_fu_2099_p1 + shl_ln_reg_3562);

assign add_ln25_6_fu_2291_p2 = (zext_ln20_6_fu_2275_p1 + shl_ln_reg_3562);

assign add_ln25_7_fu_2469_p2 = (zext_ln20_7_fu_2453_p1 + shl_ln_reg_3562);

assign add_ln25_8_fu_2645_p2 = (zext_ln20_8_fu_2629_p1 + shl_ln_reg_3562);

assign add_ln25_9_fu_2819_p2 = (zext_ln20_9_fu_2803_p1 + shl_ln_reg_3562);

assign add_ln25_fu_1253_p2 = (zext_ln20_fu_1237_p1 + shl_ln_reg_3562);

assign add_ln26_1_fu_2850_p2 = ($signed(5'd18) + $signed(zext_ln23_1_fu_2834_p1));

assign add_ln26_2_fu_3200_p2 = ($signed(5'd22) + $signed(zext_ln23_2_fu_3184_p1));

assign add_ln26_fu_2146_p2 = ($signed(4'd10) + $signed(zext_ln23_fu_2130_p1));

assign add_ln28_10_fu_2156_p2 = (zext_ln28_22_fu_2152_p1 + mul_ln28_5_reg_3807);

assign add_ln28_11_fu_2173_p2 = (zext_ln13_reg_3515 + zext_ln28_23_fu_2169_p1);

assign add_ln28_12_fu_2334_p2 = (mul_ln28_6_reg_3838 + zext_ln28_26_fu_2330_p1);

assign add_ln28_13_fu_2351_p2 = (zext_ln28_27_fu_2347_p1 + zext_ln13_reg_3515);

assign add_ln28_14_fu_2510_p2 = (zext_ln28_30_fu_2506_p1 + mul_ln28_7_reg_3869);

assign add_ln28_15_fu_2527_p2 = (zext_ln13_reg_3515 + zext_ln28_31_fu_2523_p1);

assign add_ln28_16_fu_2684_p2 = (mul_ln28_8_reg_3900 + zext_ln28_34_fu_2680_p1);

assign add_ln28_17_fu_2701_p2 = (zext_ln28_35_fu_2697_p1 + zext_ln13_reg_3515);

assign add_ln28_18_fu_2860_p2 = (zext_ln28_38_fu_2856_p1 + mul_ln28_9_reg_3931);

assign add_ln28_19_fu_2877_p2 = (zext_ln13_reg_3515 + zext_ln28_39_fu_2873_p1);

assign add_ln28_1_fu_1301_p2 = (zext_ln13_reg_3515 + zext_ln28_3_fu_1297_p1);

assign add_ln28_20_fu_3034_p2 = (mul_ln28_10_reg_3962 + zext_ln28_42_fu_3030_p1);

assign add_ln28_21_fu_3051_p2 = (zext_ln28_43_fu_3047_p1 + zext_ln13_reg_3515);

assign add_ln28_22_fu_3210_p2 = (zext_ln28_46_fu_3206_p1 + mul_ln28_11_reg_3993);

assign add_ln28_23_fu_3227_p2 = (zext_ln13_reg_3515 + zext_ln28_47_fu_3223_p1);

assign add_ln28_24_fu_3388_p2 = (mul_ln28_12_reg_4024 + zext_ln28_49_fu_3384_p1);

assign add_ln28_25_fu_3405_p2 = (zext_ln28_50_fu_3401_p1 + zext_ln13_reg_3515);

assign add_ln28_2_fu_1456_p2 = (zext_ln28_6_fu_1452_p1 + mul_ln28_1_reg_3683);

assign add_ln28_3_fu_1473_p2 = (zext_ln13_reg_3515 + zext_ln28_7_fu_1469_p1);

assign add_ln28_4_fu_1630_p2 = (mul_ln28_2_reg_3714 + zext_ln28_10_fu_1626_p1);

assign add_ln28_5_fu_1647_p2 = (zext_ln28_11_fu_1643_p1 + zext_ln13_reg_3515);

assign add_ln28_6_fu_1806_p2 = (zext_ln28_14_fu_1802_p1 + mul_ln28_3_reg_3745);

assign add_ln28_7_fu_1823_p2 = (zext_ln13_reg_3515 + zext_ln28_15_fu_1819_p1);

assign add_ln28_8_fu_1980_p2 = (mul_ln28_4_reg_3776 + zext_ln28_18_fu_1976_p1);

assign add_ln28_9_fu_1997_p2 = (zext_ln28_19_fu_1993_p1 + zext_ln13_reg_3515);

assign add_ln28_fu_1284_p2 = (zext_ln28_2_fu_1280_p1 + mul_ln28_reg_3652);

assign add_ln35_10_fu_1115_p2 = (add_ln35_9_fu_1109_p2 + zext_ln13_1_reg_3532);

assign add_ln35_11_fu_1125_p2 = (phi_mul_reg_349 + 13'd192);

assign add_ln35_12_fu_1131_p2 = (add_ln35_11_fu_1125_p2 + zext_ln13_1_reg_3532);

assign add_ln35_13_fu_1141_p2 = (phi_mul_reg_349 + 13'd224);

assign add_ln35_14_fu_1147_p2 = (add_ln35_13_fu_1141_p2 + zext_ln13_1_reg_3532);

assign add_ln35_15_fu_1157_p2 = (phi_mul_reg_349 + 13'd256);

assign add_ln35_16_fu_1163_p2 = (add_ln35_15_fu_1157_p2 + zext_ln13_1_reg_3532);

assign add_ln35_17_fu_1173_p2 = (phi_mul_reg_349 + 13'd288);

assign add_ln35_18_fu_1179_p2 = (add_ln35_17_fu_1173_p2 + zext_ln13_1_reg_3532);

assign add_ln35_19_fu_1189_p2 = (phi_mul_reg_349 + 13'd320);

assign add_ln35_1_fu_1045_p2 = (phi_mul_reg_349 + 13'd32);

assign add_ln35_20_fu_1195_p2 = (add_ln35_19_fu_1189_p2 + zext_ln13_1_reg_3532);

assign add_ln35_21_fu_1205_p2 = (phi_mul_reg_349 + 13'd352);

assign add_ln35_22_fu_1211_p2 = (add_ln35_21_fu_1205_p2 + zext_ln13_1_reg_3532);

assign add_ln35_23_fu_1221_p2 = (phi_mul_reg_349 + 13'd384);

assign add_ln35_24_fu_1227_p2 = (add_ln35_23_fu_1221_p2 + zext_ln13_1_reg_3532);

assign add_ln35_2_fu_1051_p2 = (add_ln35_1_fu_1045_p2 + zext_ln13_1_reg_3532);

assign add_ln35_3_fu_1061_p2 = (phi_mul_reg_349 + 13'd64);

assign add_ln35_4_fu_1067_p2 = (add_ln35_3_fu_1061_p2 + zext_ln13_1_reg_3532);

assign add_ln35_5_fu_1077_p2 = (phi_mul_reg_349 + 13'd96);

assign add_ln35_6_fu_1083_p2 = (add_ln35_5_fu_1077_p2 + zext_ln13_1_reg_3532);

assign add_ln35_7_fu_1093_p2 = (phi_mul_reg_349 + 13'd128);

assign add_ln35_8_fu_1099_p2 = (add_ln35_7_fu_1093_p2 + zext_ln13_1_reg_3532);

assign add_ln35_9_fu_1109_p2 = (phi_mul_reg_349 + 13'd160);

assign add_ln35_fu_1035_p2 = (phi_mul_reg_349 + zext_ln13_1_reg_3532);

assign and_ln28_10_fu_2255_p2 = (or_ln28_11_fu_2249_p2 & or_ln28_10_fu_2231_p2);

assign and_ln28_11_fu_2261_p2 = (grp_fu_971_p2 & and_ln28_10_fu_2255_p2);

assign and_ln28_12_fu_2433_p2 = (or_ln28_13_fu_2427_p2 & or_ln28_12_fu_2409_p2);

assign and_ln28_13_fu_2439_p2 = (grp_fu_971_p2 & and_ln28_12_fu_2433_p2);

assign and_ln28_14_fu_2609_p2 = (or_ln28_15_fu_2603_p2 & or_ln28_14_fu_2585_p2);

assign and_ln28_15_fu_2615_p2 = (grp_fu_971_p2 & and_ln28_14_fu_2609_p2);

assign and_ln28_16_fu_2783_p2 = (or_ln28_17_fu_2777_p2 & or_ln28_16_fu_2759_p2);

assign and_ln28_17_fu_2789_p2 = (grp_fu_971_p2 & and_ln28_16_fu_2783_p2);

assign and_ln28_18_fu_2959_p2 = (or_ln28_19_fu_2953_p2 & or_ln28_18_fu_2935_p2);

assign and_ln28_19_fu_2965_p2 = (grp_fu_971_p2 & and_ln28_18_fu_2959_p2);

assign and_ln28_1_fu_1389_p2 = (grp_fu_971_p2 & and_ln28_fu_1383_p2);

assign and_ln28_20_fu_3133_p2 = (or_ln28_21_fu_3127_p2 & or_ln28_20_fu_3109_p2);

assign and_ln28_21_fu_3139_p2 = (grp_fu_971_p2 & and_ln28_20_fu_3133_p2);

assign and_ln28_22_fu_3309_p2 = (or_ln28_23_fu_3303_p2 & or_ln28_22_fu_3285_p2);

assign and_ln28_23_fu_3315_p2 = (grp_fu_971_p2 & and_ln28_22_fu_3309_p2);

assign and_ln28_24_fu_3487_p2 = (or_ln28_25_fu_3481_p2 & or_ln28_24_fu_3463_p2);

assign and_ln28_25_fu_3493_p2 = (grp_fu_971_p2 & and_ln28_24_fu_3487_p2);

assign and_ln28_2_fu_1555_p2 = (or_ln28_3_fu_1549_p2 & or_ln28_2_fu_1531_p2);

assign and_ln28_3_fu_1561_p2 = (grp_fu_971_p2 & and_ln28_2_fu_1555_p2);

assign and_ln28_4_fu_1729_p2 = (or_ln28_5_fu_1723_p2 & or_ln28_4_fu_1705_p2);

assign and_ln28_5_fu_1735_p2 = (grp_fu_971_p2 & and_ln28_4_fu_1729_p2);

assign and_ln28_6_fu_1905_p2 = (or_ln28_7_fu_1899_p2 & or_ln28_6_fu_1881_p2);

assign and_ln28_7_fu_1911_p2 = (grp_fu_971_p2 & and_ln28_6_fu_1905_p2);

assign and_ln28_8_fu_2079_p2 = (or_ln28_9_fu_2073_p2 & or_ln28_8_fu_2055_p2);

assign and_ln28_9_fu_2085_p2 = (grp_fu_971_p2 & and_ln28_8_fu_2079_p2);

assign and_ln28_fu_1383_p2 = (or_ln28_fu_1359_p2 & or_ln28_1_fu_1377_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln28_10_fu_2183_p1 = conv_1_out_q0;

assign bitcast_ln28_11_fu_2201_p1 = max_1_5_reg_619;

assign bitcast_ln28_12_fu_2361_p1 = conv_1_out_q0;

assign bitcast_ln28_13_fu_2379_p1 = max_1_6_reg_666;

assign bitcast_ln28_14_fu_2537_p1 = conv_1_out_q0;

assign bitcast_ln28_15_fu_2555_p1 = max_1_7_reg_713;

assign bitcast_ln28_16_fu_2711_p1 = conv_1_out_q0;

assign bitcast_ln28_17_fu_2729_p1 = max_1_8_reg_760;

assign bitcast_ln28_18_fu_2887_p1 = conv_1_out_q0;

assign bitcast_ln28_19_fu_2905_p1 = max_1_9_reg_807;

assign bitcast_ln28_1_fu_1329_p1 = max_1_0_reg_384;

assign bitcast_ln28_20_fu_3061_p1 = conv_1_out_q0;

assign bitcast_ln28_21_fu_3079_p1 = max_1_10_reg_854;

assign bitcast_ln28_22_fu_3237_p1 = conv_1_out_q0;

assign bitcast_ln28_23_fu_3255_p1 = max_1_11_reg_901;

assign bitcast_ln28_24_fu_3415_p1 = conv_1_out_q0;

assign bitcast_ln28_25_fu_3433_p1 = max_1_12_reg_948;

assign bitcast_ln28_2_fu_1483_p1 = conv_1_out_q0;

assign bitcast_ln28_3_fu_1501_p1 = max_1_1_reg_431;

assign bitcast_ln28_4_fu_1657_p1 = conv_1_out_q0;

assign bitcast_ln28_5_fu_1675_p1 = max_1_2_reg_478;

assign bitcast_ln28_6_fu_1833_p1 = conv_1_out_q0;

assign bitcast_ln28_7_fu_1851_p1 = max_1_3_reg_525;

assign bitcast_ln28_8_fu_2007_p1 = conv_1_out_q0;

assign bitcast_ln28_9_fu_2025_p1 = max_1_4_reg_572;

assign bitcast_ln28_fu_1311_p1 = conv_1_out_q0;

assign f_fu_995_p2 = (f_0_reg_327 + 6'd1);

assign icmp_ln10_fu_989_p2 = ((f_0_reg_327 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1015_p2 = ((r_0_reg_338 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln20_10_fu_2983_p2 = ((mpr_0_10_reg_843 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_11_fu_3157_p2 = ((mpr_0_11_reg_890 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_12_fu_3333_p2 = ((mpr_0_12_reg_937 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_1_fu_1407_p2 = ((mpr_0_1_reg_420 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_2_fu_1579_p2 = ((mpr_0_2_reg_467 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_3_fu_1753_p2 = ((mpr_0_3_reg_514 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_4_fu_1929_p2 = ((mpr_0_4_reg_561 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_5_fu_2103_p2 = ((mpr_0_5_reg_608 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_6_fu_2279_p2 = ((mpr_0_6_reg_655 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_7_fu_2457_p2 = ((mpr_0_7_reg_702 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_8_fu_2633_p2 = ((mpr_0_8_reg_749 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_9_fu_2807_p2 = ((mpr_0_9_reg_796 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_1241_p2 = ((mpr_0_0_reg_373 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_10_fu_3010_p2 = ((mpc_0_10_reg_866 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_11_fu_3188_p2 = ((mpc_0_11_reg_913 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_12_fu_3360_p2 = ((mpc_0_12_reg_960 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_1434_p2 = ((mpc_0_1_reg_443 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_1606_p2 = ((mpc_0_2_reg_490 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_1780_p2 = ((mpc_0_3_reg_537 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_4_fu_1956_p2 = ((mpc_0_4_reg_584 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_5_fu_2134_p2 = ((mpc_0_5_reg_631 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_6_fu_2306_p2 = ((mpc_0_6_reg_678 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_7_fu_2484_p2 = ((mpc_0_7_reg_725 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_8_fu_2660_p2 = ((mpc_0_8_reg_772 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_9_fu_2838_p2 = ((mpc_0_9_reg_819 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1268_p2 = ((mpc_0_0_reg_396 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln28_10_fu_1711_p2 = ((tmp_16_fu_1679_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_11_fu_1717_p2 = ((trunc_ln28_5_fu_1689_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_12_fu_1869_p2 = ((tmp_20_fu_1837_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_13_fu_1875_p2 = ((trunc_ln28_6_fu_1847_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_14_fu_1887_p2 = ((tmp_21_fu_1855_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_15_fu_1893_p2 = ((trunc_ln28_7_fu_1865_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_16_fu_2043_p2 = ((tmp_38_fu_2011_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_17_fu_2049_p2 = ((trunc_ln28_8_fu_2021_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_18_fu_2061_p2 = ((tmp_39_fu_2029_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_19_fu_2067_p2 = ((trunc_ln28_9_fu_2039_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_1353_p2 = ((trunc_ln28_fu_1325_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_20_fu_2219_p2 = ((tmp_41_fu_2187_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_21_fu_2225_p2 = ((trunc_ln28_10_fu_2197_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_22_fu_2237_p2 = ((tmp_42_fu_2205_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_23_fu_2243_p2 = ((trunc_ln28_11_fu_2215_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_24_fu_2397_p2 = ((tmp_44_fu_2365_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_25_fu_2403_p2 = ((trunc_ln28_12_fu_2375_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_26_fu_2415_p2 = ((tmp_45_fu_2383_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_27_fu_2421_p2 = ((trunc_ln28_13_fu_2393_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_28_fu_2573_p2 = ((tmp_47_fu_2541_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_29_fu_2579_p2 = ((trunc_ln28_14_fu_2551_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_2_fu_1365_p2 = ((tmp_6_fu_1333_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_30_fu_2591_p2 = ((tmp_48_fu_2559_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_31_fu_2597_p2 = ((trunc_ln28_15_fu_2569_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_32_fu_2747_p2 = ((tmp_50_fu_2715_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_33_fu_2753_p2 = ((trunc_ln28_16_fu_2725_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_34_fu_2765_p2 = ((tmp_51_fu_2733_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_35_fu_2771_p2 = ((trunc_ln28_17_fu_2743_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_36_fu_2923_p2 = ((tmp_53_fu_2891_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_37_fu_2929_p2 = ((trunc_ln28_18_fu_2901_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_38_fu_2941_p2 = ((tmp_54_fu_2909_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_39_fu_2947_p2 = ((trunc_ln28_19_fu_2919_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_3_fu_1371_p2 = ((trunc_ln28_1_fu_1343_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_40_fu_3097_p2 = ((tmp_56_fu_3065_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_41_fu_3103_p2 = ((trunc_ln28_20_fu_3075_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_42_fu_3115_p2 = ((tmp_57_fu_3083_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_43_fu_3121_p2 = ((trunc_ln28_21_fu_3093_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_44_fu_3273_p2 = ((tmp_59_fu_3241_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_45_fu_3279_p2 = ((trunc_ln28_22_fu_3251_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_46_fu_3291_p2 = ((tmp_60_fu_3259_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_47_fu_3297_p2 = ((trunc_ln28_23_fu_3269_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_48_fu_3451_p2 = ((tmp_62_fu_3419_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_49_fu_3457_p2 = ((trunc_ln28_24_fu_3429_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_4_fu_1519_p2 = ((tmp_10_fu_1487_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_50_fu_3469_p2 = ((tmp_63_fu_3437_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_51_fu_3475_p2 = ((trunc_ln28_25_fu_3447_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_5_fu_1525_p2 = ((trunc_ln28_2_fu_1497_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_6_fu_1537_p2 = ((tmp_11_fu_1505_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_7_fu_1543_p2 = ((trunc_ln28_3_fu_1515_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_8_fu_1693_p2 = ((tmp_15_fu_1661_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_9_fu_1699_p2 = ((trunc_ln28_4_fu_1671_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1347_p2 = ((tmp_5_fu_1315_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mul_ln28_10_fu_3004_p0 = mul_ln28_10_fu_3004_p00;

assign mul_ln28_10_fu_3004_p00 = add_ln25_10_fu_2995_p2;

assign mul_ln28_10_fu_3004_p2 = (mul_ln28_10_fu_3004_p0 * $signed('h1A));

assign mul_ln28_11_fu_3178_p0 = mul_ln28_11_fu_3178_p00;

assign mul_ln28_11_fu_3178_p00 = add_ln25_11_fu_3169_p2;

assign mul_ln28_11_fu_3178_p2 = (mul_ln28_11_fu_3178_p0 * $signed('h1A));

assign mul_ln28_12_fu_3354_p0 = mul_ln28_12_fu_3354_p00;

assign mul_ln28_12_fu_3354_p00 = add_ln25_12_fu_3345_p2;

assign mul_ln28_12_fu_3354_p2 = (mul_ln28_12_fu_3354_p0 * $signed('h1A));

assign mul_ln28_1_fu_1428_p0 = mul_ln28_1_fu_1428_p00;

assign mul_ln28_1_fu_1428_p00 = add_ln25_1_fu_1419_p2;

assign mul_ln28_1_fu_1428_p2 = (mul_ln28_1_fu_1428_p0 * $signed('h1A));

assign mul_ln28_2_fu_1600_p0 = mul_ln28_2_fu_1600_p00;

assign mul_ln28_2_fu_1600_p00 = add_ln25_2_fu_1591_p2;

assign mul_ln28_2_fu_1600_p2 = (mul_ln28_2_fu_1600_p0 * $signed('h1A));

assign mul_ln28_3_fu_1774_p0 = mul_ln28_3_fu_1774_p00;

assign mul_ln28_3_fu_1774_p00 = add_ln25_3_fu_1765_p2;

assign mul_ln28_3_fu_1774_p2 = (mul_ln28_3_fu_1774_p0 * $signed('h1A));

assign mul_ln28_4_fu_1950_p0 = mul_ln28_4_fu_1950_p00;

assign mul_ln28_4_fu_1950_p00 = add_ln25_4_fu_1941_p2;

assign mul_ln28_4_fu_1950_p2 = (mul_ln28_4_fu_1950_p0 * $signed('h1A));

assign mul_ln28_5_fu_2124_p0 = mul_ln28_5_fu_2124_p00;

assign mul_ln28_5_fu_2124_p00 = add_ln25_5_fu_2115_p2;

assign mul_ln28_5_fu_2124_p2 = (mul_ln28_5_fu_2124_p0 * $signed('h1A));

assign mul_ln28_6_fu_2300_p0 = mul_ln28_6_fu_2300_p00;

assign mul_ln28_6_fu_2300_p00 = add_ln25_6_fu_2291_p2;

assign mul_ln28_6_fu_2300_p2 = (mul_ln28_6_fu_2300_p0 * $signed('h1A));

assign mul_ln28_7_fu_2478_p0 = mul_ln28_7_fu_2478_p00;

assign mul_ln28_7_fu_2478_p00 = add_ln25_7_fu_2469_p2;

assign mul_ln28_7_fu_2478_p2 = (mul_ln28_7_fu_2478_p0 * $signed('h1A));

assign mul_ln28_8_fu_2654_p0 = mul_ln28_8_fu_2654_p00;

assign mul_ln28_8_fu_2654_p00 = add_ln25_8_fu_2645_p2;

assign mul_ln28_8_fu_2654_p2 = (mul_ln28_8_fu_2654_p0 * $signed('h1A));

assign mul_ln28_9_fu_2828_p0 = mul_ln28_9_fu_2828_p00;

assign mul_ln28_9_fu_2828_p00 = add_ln25_9_fu_2819_p2;

assign mul_ln28_9_fu_2828_p2 = (mul_ln28_9_fu_2828_p0 * $signed('h1A));

assign mul_ln28_fu_1262_p0 = mul_ln28_fu_1262_p00;

assign mul_ln28_fu_1262_p00 = add_ln25_fu_1253_p2;

assign mul_ln28_fu_1262_p2 = (mul_ln28_fu_1262_p0 * $signed('h1A));

assign or_ln26_1_fu_1968_p3 = {{2'd2}, {mpc_0_4_reg_584}};

assign or_ln26_2_fu_2318_p3 = {{1'd1}, {mpc_0_6_reg_678}};

assign or_ln26_3_fu_2672_p3 = {{3'd4}, {mpc_0_8_reg_772}};

assign or_ln26_4_fu_3022_p3 = {{3'd5}, {mpc_0_10_reg_866}};

assign or_ln26_5_fu_3372_p3 = {{2'd2}, {mpc_0_12_reg_960}};

assign or_ln28_10_fu_2231_p2 = (icmp_ln28_21_fu_2225_p2 | icmp_ln28_20_fu_2219_p2);

assign or_ln28_11_fu_2249_p2 = (icmp_ln28_23_fu_2243_p2 | icmp_ln28_22_fu_2237_p2);

assign or_ln28_12_fu_2409_p2 = (icmp_ln28_25_fu_2403_p2 | icmp_ln28_24_fu_2397_p2);

assign or_ln28_13_fu_2427_p2 = (icmp_ln28_27_fu_2421_p2 | icmp_ln28_26_fu_2415_p2);

assign or_ln28_14_fu_2585_p2 = (icmp_ln28_29_fu_2579_p2 | icmp_ln28_28_fu_2573_p2);

assign or_ln28_15_fu_2603_p2 = (icmp_ln28_31_fu_2597_p2 | icmp_ln28_30_fu_2591_p2);

assign or_ln28_16_fu_2759_p2 = (icmp_ln28_33_fu_2753_p2 | icmp_ln28_32_fu_2747_p2);

assign or_ln28_17_fu_2777_p2 = (icmp_ln28_35_fu_2771_p2 | icmp_ln28_34_fu_2765_p2);

assign or_ln28_18_fu_2935_p2 = (icmp_ln28_37_fu_2929_p2 | icmp_ln28_36_fu_2923_p2);

assign or_ln28_19_fu_2953_p2 = (icmp_ln28_39_fu_2947_p2 | icmp_ln28_38_fu_2941_p2);

assign or_ln28_1_fu_1377_p2 = (icmp_ln28_3_fu_1371_p2 | icmp_ln28_2_fu_1365_p2);

assign or_ln28_20_fu_3109_p2 = (icmp_ln28_41_fu_3103_p2 | icmp_ln28_40_fu_3097_p2);

assign or_ln28_21_fu_3127_p2 = (icmp_ln28_43_fu_3121_p2 | icmp_ln28_42_fu_3115_p2);

assign or_ln28_22_fu_3285_p2 = (icmp_ln28_45_fu_3279_p2 | icmp_ln28_44_fu_3273_p2);

assign or_ln28_23_fu_3303_p2 = (icmp_ln28_47_fu_3297_p2 | icmp_ln28_46_fu_3291_p2);

assign or_ln28_24_fu_3463_p2 = (icmp_ln28_49_fu_3457_p2 | icmp_ln28_48_fu_3451_p2);

assign or_ln28_25_fu_3481_p2 = (icmp_ln28_51_fu_3475_p2 | icmp_ln28_50_fu_3469_p2);

assign or_ln28_2_fu_1531_p2 = (icmp_ln28_5_fu_1525_p2 | icmp_ln28_4_fu_1519_p2);

assign or_ln28_3_fu_1549_p2 = (icmp_ln28_7_fu_1543_p2 | icmp_ln28_6_fu_1537_p2);

assign or_ln28_4_fu_1705_p2 = (icmp_ln28_9_fu_1699_p2 | icmp_ln28_8_fu_1693_p2);

assign or_ln28_5_fu_1723_p2 = (icmp_ln28_11_fu_1717_p2 | icmp_ln28_10_fu_1711_p2);

assign or_ln28_6_fu_1881_p2 = (icmp_ln28_13_fu_1875_p2 | icmp_ln28_12_fu_1869_p2);

assign or_ln28_7_fu_1899_p2 = (icmp_ln28_15_fu_1893_p2 | icmp_ln28_14_fu_1887_p2);

assign or_ln28_8_fu_2055_p2 = (icmp_ln28_17_fu_2049_p2 | icmp_ln28_16_fu_2043_p2);

assign or_ln28_9_fu_2073_p2 = (icmp_ln28_19_fu_2067_p2 | icmp_ln28_18_fu_2061_p2);

assign or_ln28_fu_1359_p2 = (icmp_ln28_fu_1347_p2 | icmp_ln28_1_fu_1353_p2);

assign or_ln_fu_1618_p3 = {{1'd1}, {mpc_0_2_reg_490}};

assign r_fu_1021_p2 = (r_0_reg_338 + 4'd1);

assign select_ln28_10_fu_3145_p3 = ((and_ln28_21_fu_3139_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_10_reg_854);

assign select_ln28_11_fu_3321_p3 = ((and_ln28_23_fu_3315_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_11_reg_901);

assign select_ln28_12_fu_3499_p3 = ((and_ln28_25_fu_3493_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_12_reg_948);

assign select_ln28_1_fu_1567_p3 = ((and_ln28_3_fu_1561_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_1_reg_431);

assign select_ln28_2_fu_1741_p3 = ((and_ln28_5_fu_1735_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_2_reg_478);

assign select_ln28_3_fu_1917_p3 = ((and_ln28_7_fu_1911_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_3_reg_525);

assign select_ln28_4_fu_2091_p3 = ((and_ln28_9_fu_2085_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_4_reg_572);

assign select_ln28_5_fu_2267_p3 = ((and_ln28_11_fu_2261_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_5_reg_619);

assign select_ln28_6_fu_2445_p3 = ((and_ln28_13_fu_2439_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_6_reg_666);

assign select_ln28_7_fu_2621_p3 = ((and_ln28_15_fu_2615_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_7_reg_713);

assign select_ln28_8_fu_2795_p3 = ((and_ln28_17_fu_2789_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_8_reg_760);

assign select_ln28_9_fu_2971_p3 = ((and_ln28_19_fu_2965_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_9_reg_807);

assign select_ln28_fu_1395_p3 = ((and_ln28_1_fu_1389_p2[0:0] === 1'b1) ? conv_1_out_q0 : max_1_0_reg_384);

assign sext_ln26_1_fu_2326_p1 = $signed(or_ln26_2_fu_2318_p3);

assign sext_ln26_2_fu_2502_p1 = $signed(xor_ln26_2_fu_2496_p2);

assign sext_ln26_3_fu_3380_p1 = $signed(or_ln26_5_fu_3372_p3);

assign sext_ln26_fu_1798_p1 = $signed(xor_ln26_1_fu_1792_p2);

assign shl_ln_fu_1027_p3 = {{r_0_reg_338}, {1'd0}};

assign tmp_10_fu_1487_p4 = {{bitcast_ln28_2_fu_1483_p1[30:23]}};

assign tmp_11_fu_1505_p4 = {{bitcast_ln28_3_fu_1501_p1[30:23]}};

assign tmp_15_fu_1661_p4 = {{bitcast_ln28_4_fu_1657_p1[30:23]}};

assign tmp_16_fu_1679_p4 = {{bitcast_ln28_5_fu_1675_p1[30:23]}};

assign tmp_20_fu_1837_p4 = {{bitcast_ln28_6_fu_1833_p1[30:23]}};

assign tmp_21_fu_1855_p4 = {{bitcast_ln28_7_fu_1851_p1[30:23]}};

assign tmp_38_fu_2011_p4 = {{bitcast_ln28_8_fu_2007_p1[30:23]}};

assign tmp_39_fu_2029_p4 = {{bitcast_ln28_9_fu_2025_p1[30:23]}};

assign tmp_41_fu_2187_p4 = {{bitcast_ln28_10_fu_2183_p1[30:23]}};

assign tmp_42_fu_2205_p4 = {{bitcast_ln28_11_fu_2201_p1[30:23]}};

assign tmp_44_fu_2365_p4 = {{bitcast_ln28_12_fu_2361_p1[30:23]}};

assign tmp_45_fu_2383_p4 = {{bitcast_ln28_13_fu_2379_p1[30:23]}};

assign tmp_47_fu_2541_p4 = {{bitcast_ln28_14_fu_2537_p1[30:23]}};

assign tmp_48_fu_2559_p4 = {{bitcast_ln28_15_fu_2555_p1[30:23]}};

assign tmp_50_fu_2715_p4 = {{bitcast_ln28_16_fu_2711_p1[30:23]}};

assign tmp_51_fu_2733_p4 = {{bitcast_ln28_17_fu_2729_p1[30:23]}};

assign tmp_53_fu_2891_p4 = {{bitcast_ln28_18_fu_2887_p1[30:23]}};

assign tmp_54_fu_2909_p4 = {{bitcast_ln28_19_fu_2905_p1[30:23]}};

assign tmp_56_fu_3065_p4 = {{bitcast_ln28_20_fu_3061_p1[30:23]}};

assign tmp_57_fu_3083_p4 = {{bitcast_ln28_21_fu_3079_p1[30:23]}};

assign tmp_59_fu_3241_p4 = {{bitcast_ln28_22_fu_3237_p1[30:23]}};

assign tmp_5_fu_1315_p4 = {{bitcast_ln28_fu_1311_p1[30:23]}};

assign tmp_60_fu_3259_p4 = {{bitcast_ln28_23_fu_3255_p1[30:23]}};

assign tmp_62_fu_3419_p4 = {{bitcast_ln28_24_fu_3415_p1[30:23]}};

assign tmp_63_fu_3437_p4 = {{bitcast_ln28_25_fu_3433_p1[30:23]}};

assign tmp_65_fu_1289_p3 = {{add_ln28_fu_1284_p2}, {5'd0}};

assign tmp_66_fu_1461_p3 = {{add_ln28_2_fu_1456_p2}, {5'd0}};

assign tmp_67_fu_1635_p3 = {{add_ln28_4_fu_1630_p2}, {5'd0}};

assign tmp_68_fu_1811_p3 = {{add_ln28_6_fu_1806_p2}, {5'd0}};

assign tmp_69_fu_1985_p3 = {{add_ln28_8_fu_1980_p2}, {5'd0}};

assign tmp_6_fu_1333_p4 = {{bitcast_ln28_1_fu_1329_p1[30:23]}};

assign tmp_70_fu_2161_p3 = {{add_ln28_10_fu_2156_p2}, {5'd0}};

assign tmp_71_fu_2339_p3 = {{add_ln28_12_fu_2334_p2}, {5'd0}};

assign tmp_72_fu_2515_p3 = {{add_ln28_14_fu_2510_p2}, {5'd0}};

assign tmp_73_fu_2689_p3 = {{add_ln28_16_fu_2684_p2}, {5'd0}};

assign tmp_74_fu_2865_p3 = {{add_ln28_18_fu_2860_p2}, {5'd0}};

assign tmp_75_fu_3039_p3 = {{add_ln28_20_fu_3034_p2}, {5'd0}};

assign tmp_76_fu_3215_p3 = {{add_ln28_22_fu_3210_p2}, {5'd0}};

assign tmp_77_fu_3393_p3 = {{add_ln28_24_fu_3388_p2}, {5'd0}};

assign trunc_ln28_10_fu_2197_p1 = bitcast_ln28_10_fu_2183_p1[22:0];

assign trunc_ln28_11_fu_2215_p1 = bitcast_ln28_11_fu_2201_p1[22:0];

assign trunc_ln28_12_fu_2375_p1 = bitcast_ln28_12_fu_2361_p1[22:0];

assign trunc_ln28_13_fu_2393_p1 = bitcast_ln28_13_fu_2379_p1[22:0];

assign trunc_ln28_14_fu_2551_p1 = bitcast_ln28_14_fu_2537_p1[22:0];

assign trunc_ln28_15_fu_2569_p1 = bitcast_ln28_15_fu_2555_p1[22:0];

assign trunc_ln28_16_fu_2725_p1 = bitcast_ln28_16_fu_2711_p1[22:0];

assign trunc_ln28_17_fu_2743_p1 = bitcast_ln28_17_fu_2729_p1[22:0];

assign trunc_ln28_18_fu_2901_p1 = bitcast_ln28_18_fu_2887_p1[22:0];

assign trunc_ln28_19_fu_2919_p1 = bitcast_ln28_19_fu_2905_p1[22:0];

assign trunc_ln28_1_fu_1343_p1 = bitcast_ln28_1_fu_1329_p1[22:0];

assign trunc_ln28_20_fu_3075_p1 = bitcast_ln28_20_fu_3061_p1[22:0];

assign trunc_ln28_21_fu_3093_p1 = bitcast_ln28_21_fu_3079_p1[22:0];

assign trunc_ln28_22_fu_3251_p1 = bitcast_ln28_22_fu_3237_p1[22:0];

assign trunc_ln28_23_fu_3269_p1 = bitcast_ln28_23_fu_3255_p1[22:0];

assign trunc_ln28_24_fu_3429_p1 = bitcast_ln28_24_fu_3415_p1[22:0];

assign trunc_ln28_25_fu_3447_p1 = bitcast_ln28_25_fu_3433_p1[22:0];

assign trunc_ln28_2_fu_1497_p1 = bitcast_ln28_2_fu_1483_p1[22:0];

assign trunc_ln28_3_fu_1515_p1 = bitcast_ln28_3_fu_1501_p1[22:0];

assign trunc_ln28_4_fu_1671_p1 = bitcast_ln28_4_fu_1657_p1[22:0];

assign trunc_ln28_5_fu_1689_p1 = bitcast_ln28_5_fu_1675_p1[22:0];

assign trunc_ln28_6_fu_1847_p1 = bitcast_ln28_6_fu_1833_p1[22:0];

assign trunc_ln28_7_fu_1865_p1 = bitcast_ln28_7_fu_1851_p1[22:0];

assign trunc_ln28_8_fu_2021_p1 = bitcast_ln28_8_fu_2007_p1[22:0];

assign trunc_ln28_9_fu_2039_p1 = bitcast_ln28_9_fu_2025_p1[22:0];

assign trunc_ln28_fu_1325_p1 = bitcast_ln28_fu_1311_p1[22:0];

assign xor_ln26_1_fu_1792_p2 = (mpc_0_3_reg_537 ^ 2'd2);

assign xor_ln26_2_fu_2496_p2 = (mpc_0_7_reg_725 ^ 2'd2);

assign xor_ln26_fu_1446_p2 = (mpc_0_1_reg_443 ^ 2'd2);

assign zext_ln13_1_fu_1005_p1 = f_0_reg_327;

assign zext_ln13_fu_1001_p1 = f_0_reg_327;

assign zext_ln20_10_fu_2979_p1 = mpr_0_10_reg_843;

assign zext_ln20_11_fu_3153_p1 = mpr_0_11_reg_890;

assign zext_ln20_12_fu_3329_p1 = mpr_0_12_reg_937;

assign zext_ln20_1_fu_1403_p1 = mpr_0_1_reg_420;

assign zext_ln20_2_fu_1575_p1 = mpr_0_2_reg_467;

assign zext_ln20_3_fu_1749_p1 = mpr_0_3_reg_514;

assign zext_ln20_4_fu_1925_p1 = mpr_0_4_reg_561;

assign zext_ln20_5_fu_2099_p1 = mpr_0_5_reg_608;

assign zext_ln20_6_fu_2275_p1 = mpr_0_6_reg_655;

assign zext_ln20_7_fu_2453_p1 = mpr_0_7_reg_702;

assign zext_ln20_8_fu_2629_p1 = mpr_0_8_reg_749;

assign zext_ln20_9_fu_2803_p1 = mpr_0_9_reg_796;

assign zext_ln20_fu_1237_p1 = mpr_0_0_reg_373;

assign zext_ln23_1_fu_2834_p1 = mpc_0_9_reg_819;

assign zext_ln23_2_fu_3184_p1 = mpc_0_11_reg_913;

assign zext_ln23_fu_2130_p1 = mpc_0_5_reg_631;

assign zext_ln28_10_fu_1626_p1 = or_ln_fu_1618_p3;

assign zext_ln28_11_fu_1643_p1 = tmp_67_fu_1635_p3;

assign zext_ln28_12_fu_1652_p1 = add_ln28_5_fu_1647_p2;

assign zext_ln28_14_fu_1802_p1 = $unsigned(sext_ln26_fu_1798_p1);

assign zext_ln28_15_fu_1819_p1 = tmp_68_fu_1811_p3;

assign zext_ln28_16_fu_1828_p1 = add_ln28_7_fu_1823_p2;

assign zext_ln28_18_fu_1976_p1 = or_ln26_1_fu_1968_p3;

assign zext_ln28_19_fu_1993_p1 = tmp_69_fu_1985_p3;

assign zext_ln28_20_fu_2002_p1 = add_ln28_9_fu_1997_p2;

assign zext_ln28_22_fu_2152_p1 = add_ln26_fu_2146_p2;

assign zext_ln28_23_fu_2169_p1 = tmp_70_fu_2161_p3;

assign zext_ln28_24_fu_2178_p1 = add_ln28_11_fu_2173_p2;

assign zext_ln28_26_fu_2330_p1 = $unsigned(sext_ln26_1_fu_2326_p1);

assign zext_ln28_27_fu_2347_p1 = tmp_71_fu_2339_p3;

assign zext_ln28_28_fu_2356_p1 = add_ln28_13_fu_2351_p2;

assign zext_ln28_2_fu_1280_p1 = mpc_0_0_reg_396;

assign zext_ln28_30_fu_2506_p1 = $unsigned(sext_ln26_2_fu_2502_p1);

assign zext_ln28_31_fu_2523_p1 = tmp_72_fu_2515_p3;

assign zext_ln28_32_fu_2532_p1 = add_ln28_15_fu_2527_p2;

assign zext_ln28_34_fu_2680_p1 = or_ln26_3_fu_2672_p3;

assign zext_ln28_35_fu_2697_p1 = tmp_73_fu_2689_p3;

assign zext_ln28_36_fu_2706_p1 = add_ln28_17_fu_2701_p2;

assign zext_ln28_38_fu_2856_p1 = add_ln26_1_fu_2850_p2;

assign zext_ln28_39_fu_2873_p1 = tmp_74_fu_2865_p3;

assign zext_ln28_3_fu_1297_p1 = tmp_65_fu_1289_p3;

assign zext_ln28_40_fu_2882_p1 = add_ln28_19_fu_2877_p2;

assign zext_ln28_42_fu_3030_p1 = or_ln26_4_fu_3022_p3;

assign zext_ln28_43_fu_3047_p1 = tmp_75_fu_3039_p3;

assign zext_ln28_44_fu_3056_p1 = add_ln28_21_fu_3051_p2;

assign zext_ln28_46_fu_3206_p1 = add_ln26_2_fu_3200_p2;

assign zext_ln28_47_fu_3223_p1 = tmp_76_fu_3215_p3;

assign zext_ln28_48_fu_3232_p1 = add_ln28_23_fu_3227_p2;

assign zext_ln28_49_fu_3384_p1 = $unsigned(sext_ln26_3_fu_3380_p1);

assign zext_ln28_4_fu_1306_p1 = add_ln28_1_fu_1301_p2;

assign zext_ln28_50_fu_3401_p1 = tmp_77_fu_3393_p3;

assign zext_ln28_51_fu_3410_p1 = add_ln28_25_fu_3405_p2;

assign zext_ln28_6_fu_1452_p1 = xor_ln26_fu_1446_p2;

assign zext_ln28_7_fu_1469_p1 = tmp_66_fu_1461_p3;

assign zext_ln28_8_fu_1478_p1 = add_ln28_3_fu_1473_p2;

assign zext_ln35_10_fu_1200_p1 = add_ln35_20_fu_1195_p2;

assign zext_ln35_11_fu_1216_p1 = add_ln35_22_fu_1211_p2;

assign zext_ln35_12_fu_1232_p1 = add_ln35_24_fu_1227_p2;

assign zext_ln35_1_fu_1056_p1 = add_ln35_2_fu_1051_p2;

assign zext_ln35_2_fu_1072_p1 = add_ln35_4_fu_1067_p2;

assign zext_ln35_3_fu_1088_p1 = add_ln35_6_fu_1083_p2;

assign zext_ln35_4_fu_1104_p1 = add_ln35_8_fu_1099_p2;

assign zext_ln35_5_fu_1120_p1 = add_ln35_10_fu_1115_p2;

assign zext_ln35_6_fu_1136_p1 = add_ln35_12_fu_1131_p2;

assign zext_ln35_7_fu_1152_p1 = add_ln35_14_fu_1147_p2;

assign zext_ln35_8_fu_1168_p1 = add_ln35_16_fu_1163_p2;

assign zext_ln35_9_fu_1184_p1 = add_ln35_18_fu_1179_p2;

assign zext_ln35_fu_1040_p1 = add_ln35_fu_1035_p2;

always @ (posedge ap_clk) begin
    zext_ln13_reg_3515[15:6] <= 10'b0000000000;
    zext_ln13_1_reg_3532[12:6] <= 7'b0000000;
    shl_ln_reg_3562[0] <= 1'b0;
    mul_ln28_reg_3652[0] <= 1'b0;
    mul_ln28_1_reg_3683[0] <= 1'b0;
    mul_ln28_2_reg_3714[0] <= 1'b0;
    mul_ln28_3_reg_3745[0] <= 1'b0;
    mul_ln28_4_reg_3776[0] <= 1'b0;
    mul_ln28_5_reg_3807[0] <= 1'b0;
    mul_ln28_6_reg_3838[0] <= 1'b0;
    mul_ln28_7_reg_3869[0] <= 1'b0;
    mul_ln28_8_reg_3900[0] <= 1'b0;
    mul_ln28_9_reg_3931[0] <= 1'b0;
    mul_ln28_10_reg_3962[0] <= 1'b0;
    mul_ln28_11_reg_3993[0] <= 1'b0;
    mul_ln28_12_reg_4024[0] <= 1'b0;
end

endmodule //max_pool_1
