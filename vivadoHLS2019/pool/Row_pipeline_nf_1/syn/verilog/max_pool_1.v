// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool_1,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=40.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=31.903000,HLS_SYN_LAT=545,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3909,HLS_SYN_LUT=17251,HLS_VERSION=2019_1}" *)

module max_pool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv_1_out_0_address0,
        conv_1_out_0_ce0,
        conv_1_out_0_q0,
        conv_1_out_0_address1,
        conv_1_out_0_ce1,
        conv_1_out_0_q1,
        conv_1_out_1_address0,
        conv_1_out_1_ce0,
        conv_1_out_1_q0,
        conv_1_out_1_address1,
        conv_1_out_1_ce1,
        conv_1_out_1_q1,
        conv_1_out_2_address0,
        conv_1_out_2_ce0,
        conv_1_out_2_q0,
        conv_1_out_2_address1,
        conv_1_out_2_ce1,
        conv_1_out_2_q1,
        conv_1_out_3_address0,
        conv_1_out_3_ce0,
        conv_1_out_3_q0,
        conv_1_out_3_address1,
        conv_1_out_3_ce1,
        conv_1_out_3_q1,
        conv_1_out_4_address0,
        conv_1_out_4_ce0,
        conv_1_out_4_q0,
        conv_1_out_4_address1,
        conv_1_out_4_ce1,
        conv_1_out_4_q1,
        conv_1_out_5_address0,
        conv_1_out_5_ce0,
        conv_1_out_5_q0,
        conv_1_out_5_address1,
        conv_1_out_5_ce1,
        conv_1_out_5_q1,
        conv_1_out_6_address0,
        conv_1_out_6_ce0,
        conv_1_out_6_q0,
        conv_1_out_6_address1,
        conv_1_out_6_ce1,
        conv_1_out_6_q1,
        conv_1_out_7_address0,
        conv_1_out_7_ce0,
        conv_1_out_7_q0,
        conv_1_out_7_address1,
        conv_1_out_7_ce1,
        conv_1_out_7_q1,
        conv_1_out_8_address0,
        conv_1_out_8_ce0,
        conv_1_out_8_q0,
        conv_1_out_8_address1,
        conv_1_out_8_ce1,
        conv_1_out_8_q1,
        conv_1_out_9_address0,
        conv_1_out_9_ce0,
        conv_1_out_9_q0,
        conv_1_out_9_address1,
        conv_1_out_9_ce1,
        conv_1_out_9_q1,
        conv_1_out_10_address0,
        conv_1_out_10_ce0,
        conv_1_out_10_q0,
        conv_1_out_10_address1,
        conv_1_out_10_ce1,
        conv_1_out_10_q1,
        conv_1_out_11_address0,
        conv_1_out_11_ce0,
        conv_1_out_11_q0,
        conv_1_out_11_address1,
        conv_1_out_11_ce1,
        conv_1_out_11_q1,
        conv_1_out_12_address0,
        conv_1_out_12_ce0,
        conv_1_out_12_q0,
        conv_1_out_12_address1,
        conv_1_out_12_ce1,
        conv_1_out_12_q1,
        conv_1_out_13_address0,
        conv_1_out_13_ce0,
        conv_1_out_13_q0,
        conv_1_out_13_address1,
        conv_1_out_13_ce1,
        conv_1_out_13_q1,
        conv_1_out_14_address0,
        conv_1_out_14_ce0,
        conv_1_out_14_q0,
        conv_1_out_14_address1,
        conv_1_out_14_ce1,
        conv_1_out_14_q1,
        conv_1_out_15_address0,
        conv_1_out_15_ce0,
        conv_1_out_15_q0,
        conv_1_out_15_address1,
        conv_1_out_15_ce1,
        conv_1_out_15_q1,
        conv_1_out_16_address0,
        conv_1_out_16_ce0,
        conv_1_out_16_q0,
        conv_1_out_16_address1,
        conv_1_out_16_ce1,
        conv_1_out_16_q1,
        conv_1_out_17_address0,
        conv_1_out_17_ce0,
        conv_1_out_17_q0,
        conv_1_out_17_address1,
        conv_1_out_17_ce1,
        conv_1_out_17_q1,
        conv_1_out_18_address0,
        conv_1_out_18_ce0,
        conv_1_out_18_q0,
        conv_1_out_18_address1,
        conv_1_out_18_ce1,
        conv_1_out_18_q1,
        conv_1_out_19_address0,
        conv_1_out_19_ce0,
        conv_1_out_19_q0,
        conv_1_out_19_address1,
        conv_1_out_19_ce1,
        conv_1_out_19_q1,
        conv_1_out_20_address0,
        conv_1_out_20_ce0,
        conv_1_out_20_q0,
        conv_1_out_20_address1,
        conv_1_out_20_ce1,
        conv_1_out_20_q1,
        conv_1_out_21_address0,
        conv_1_out_21_ce0,
        conv_1_out_21_q0,
        conv_1_out_21_address1,
        conv_1_out_21_ce1,
        conv_1_out_21_q1,
        conv_1_out_22_address0,
        conv_1_out_22_ce0,
        conv_1_out_22_q0,
        conv_1_out_22_address1,
        conv_1_out_22_ce1,
        conv_1_out_22_q1,
        conv_1_out_23_address0,
        conv_1_out_23_ce0,
        conv_1_out_23_q0,
        conv_1_out_23_address1,
        conv_1_out_23_ce1,
        conv_1_out_23_q1,
        conv_1_out_24_address0,
        conv_1_out_24_ce0,
        conv_1_out_24_q0,
        conv_1_out_24_address1,
        conv_1_out_24_ce1,
        conv_1_out_24_q1,
        conv_1_out_25_address0,
        conv_1_out_25_ce0,
        conv_1_out_25_q0,
        conv_1_out_25_address1,
        conv_1_out_25_ce1,
        conv_1_out_25_q1,
        max_pool_1_out_0_address0,
        max_pool_1_out_0_ce0,
        max_pool_1_out_0_we0,
        max_pool_1_out_0_d0,
        max_pool_1_out_1_address0,
        max_pool_1_out_1_ce0,
        max_pool_1_out_1_we0,
        max_pool_1_out_1_d0,
        max_pool_1_out_2_address0,
        max_pool_1_out_2_ce0,
        max_pool_1_out_2_we0,
        max_pool_1_out_2_d0,
        max_pool_1_out_3_address0,
        max_pool_1_out_3_ce0,
        max_pool_1_out_3_we0,
        max_pool_1_out_3_d0,
        max_pool_1_out_4_address0,
        max_pool_1_out_4_ce0,
        max_pool_1_out_4_we0,
        max_pool_1_out_4_d0,
        max_pool_1_out_5_address0,
        max_pool_1_out_5_ce0,
        max_pool_1_out_5_we0,
        max_pool_1_out_5_d0,
        max_pool_1_out_6_address0,
        max_pool_1_out_6_ce0,
        max_pool_1_out_6_we0,
        max_pool_1_out_6_d0,
        max_pool_1_out_7_address0,
        max_pool_1_out_7_ce0,
        max_pool_1_out_7_we0,
        max_pool_1_out_7_d0,
        max_pool_1_out_8_address0,
        max_pool_1_out_8_ce0,
        max_pool_1_out_8_we0,
        max_pool_1_out_8_d0,
        max_pool_1_out_9_address0,
        max_pool_1_out_9_ce0,
        max_pool_1_out_9_we0,
        max_pool_1_out_9_d0,
        max_pool_1_out_10_address0,
        max_pool_1_out_10_ce0,
        max_pool_1_out_10_we0,
        max_pool_1_out_10_d0,
        max_pool_1_out_11_address0,
        max_pool_1_out_11_ce0,
        max_pool_1_out_11_we0,
        max_pool_1_out_11_d0,
        max_pool_1_out_12_address0,
        max_pool_1_out_12_ce0,
        max_pool_1_out_12_we0,
        max_pool_1_out_12_d0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv_1_out_0_address0;
output   conv_1_out_0_ce0;
input  [31:0] conv_1_out_0_q0;
output  [9:0] conv_1_out_0_address1;
output   conv_1_out_0_ce1;
input  [31:0] conv_1_out_0_q1;
output  [9:0] conv_1_out_1_address0;
output   conv_1_out_1_ce0;
input  [31:0] conv_1_out_1_q0;
output  [9:0] conv_1_out_1_address1;
output   conv_1_out_1_ce1;
input  [31:0] conv_1_out_1_q1;
output  [9:0] conv_1_out_2_address0;
output   conv_1_out_2_ce0;
input  [31:0] conv_1_out_2_q0;
output  [9:0] conv_1_out_2_address1;
output   conv_1_out_2_ce1;
input  [31:0] conv_1_out_2_q1;
output  [9:0] conv_1_out_3_address0;
output   conv_1_out_3_ce0;
input  [31:0] conv_1_out_3_q0;
output  [9:0] conv_1_out_3_address1;
output   conv_1_out_3_ce1;
input  [31:0] conv_1_out_3_q1;
output  [9:0] conv_1_out_4_address0;
output   conv_1_out_4_ce0;
input  [31:0] conv_1_out_4_q0;
output  [9:0] conv_1_out_4_address1;
output   conv_1_out_4_ce1;
input  [31:0] conv_1_out_4_q1;
output  [9:0] conv_1_out_5_address0;
output   conv_1_out_5_ce0;
input  [31:0] conv_1_out_5_q0;
output  [9:0] conv_1_out_5_address1;
output   conv_1_out_5_ce1;
input  [31:0] conv_1_out_5_q1;
output  [9:0] conv_1_out_6_address0;
output   conv_1_out_6_ce0;
input  [31:0] conv_1_out_6_q0;
output  [9:0] conv_1_out_6_address1;
output   conv_1_out_6_ce1;
input  [31:0] conv_1_out_6_q1;
output  [9:0] conv_1_out_7_address0;
output   conv_1_out_7_ce0;
input  [31:0] conv_1_out_7_q0;
output  [9:0] conv_1_out_7_address1;
output   conv_1_out_7_ce1;
input  [31:0] conv_1_out_7_q1;
output  [9:0] conv_1_out_8_address0;
output   conv_1_out_8_ce0;
input  [31:0] conv_1_out_8_q0;
output  [9:0] conv_1_out_8_address1;
output   conv_1_out_8_ce1;
input  [31:0] conv_1_out_8_q1;
output  [9:0] conv_1_out_9_address0;
output   conv_1_out_9_ce0;
input  [31:0] conv_1_out_9_q0;
output  [9:0] conv_1_out_9_address1;
output   conv_1_out_9_ce1;
input  [31:0] conv_1_out_9_q1;
output  [9:0] conv_1_out_10_address0;
output   conv_1_out_10_ce0;
input  [31:0] conv_1_out_10_q0;
output  [9:0] conv_1_out_10_address1;
output   conv_1_out_10_ce1;
input  [31:0] conv_1_out_10_q1;
output  [9:0] conv_1_out_11_address0;
output   conv_1_out_11_ce0;
input  [31:0] conv_1_out_11_q0;
output  [9:0] conv_1_out_11_address1;
output   conv_1_out_11_ce1;
input  [31:0] conv_1_out_11_q1;
output  [9:0] conv_1_out_12_address0;
output   conv_1_out_12_ce0;
input  [31:0] conv_1_out_12_q0;
output  [9:0] conv_1_out_12_address1;
output   conv_1_out_12_ce1;
input  [31:0] conv_1_out_12_q1;
output  [9:0] conv_1_out_13_address0;
output   conv_1_out_13_ce0;
input  [31:0] conv_1_out_13_q0;
output  [9:0] conv_1_out_13_address1;
output   conv_1_out_13_ce1;
input  [31:0] conv_1_out_13_q1;
output  [9:0] conv_1_out_14_address0;
output   conv_1_out_14_ce0;
input  [31:0] conv_1_out_14_q0;
output  [9:0] conv_1_out_14_address1;
output   conv_1_out_14_ce1;
input  [31:0] conv_1_out_14_q1;
output  [9:0] conv_1_out_15_address0;
output   conv_1_out_15_ce0;
input  [31:0] conv_1_out_15_q0;
output  [9:0] conv_1_out_15_address1;
output   conv_1_out_15_ce1;
input  [31:0] conv_1_out_15_q1;
output  [9:0] conv_1_out_16_address0;
output   conv_1_out_16_ce0;
input  [31:0] conv_1_out_16_q0;
output  [9:0] conv_1_out_16_address1;
output   conv_1_out_16_ce1;
input  [31:0] conv_1_out_16_q1;
output  [9:0] conv_1_out_17_address0;
output   conv_1_out_17_ce0;
input  [31:0] conv_1_out_17_q0;
output  [9:0] conv_1_out_17_address1;
output   conv_1_out_17_ce1;
input  [31:0] conv_1_out_17_q1;
output  [9:0] conv_1_out_18_address0;
output   conv_1_out_18_ce0;
input  [31:0] conv_1_out_18_q0;
output  [9:0] conv_1_out_18_address1;
output   conv_1_out_18_ce1;
input  [31:0] conv_1_out_18_q1;
output  [9:0] conv_1_out_19_address0;
output   conv_1_out_19_ce0;
input  [31:0] conv_1_out_19_q0;
output  [9:0] conv_1_out_19_address1;
output   conv_1_out_19_ce1;
input  [31:0] conv_1_out_19_q1;
output  [9:0] conv_1_out_20_address0;
output   conv_1_out_20_ce0;
input  [31:0] conv_1_out_20_q0;
output  [9:0] conv_1_out_20_address1;
output   conv_1_out_20_ce1;
input  [31:0] conv_1_out_20_q1;
output  [9:0] conv_1_out_21_address0;
output   conv_1_out_21_ce0;
input  [31:0] conv_1_out_21_q0;
output  [9:0] conv_1_out_21_address1;
output   conv_1_out_21_ce1;
input  [31:0] conv_1_out_21_q1;
output  [9:0] conv_1_out_22_address0;
output   conv_1_out_22_ce0;
input  [31:0] conv_1_out_22_q0;
output  [9:0] conv_1_out_22_address1;
output   conv_1_out_22_ce1;
input  [31:0] conv_1_out_22_q1;
output  [9:0] conv_1_out_23_address0;
output   conv_1_out_23_ce0;
input  [31:0] conv_1_out_23_q0;
output  [9:0] conv_1_out_23_address1;
output   conv_1_out_23_ce1;
input  [31:0] conv_1_out_23_q1;
output  [9:0] conv_1_out_24_address0;
output   conv_1_out_24_ce0;
input  [31:0] conv_1_out_24_q0;
output  [9:0] conv_1_out_24_address1;
output   conv_1_out_24_ce1;
input  [31:0] conv_1_out_24_q1;
output  [9:0] conv_1_out_25_address0;
output   conv_1_out_25_ce0;
input  [31:0] conv_1_out_25_q0;
output  [9:0] conv_1_out_25_address1;
output   conv_1_out_25_ce1;
input  [31:0] conv_1_out_25_q1;
output  [8:0] max_pool_1_out_0_address0;
output   max_pool_1_out_0_ce0;
output   max_pool_1_out_0_we0;
output  [31:0] max_pool_1_out_0_d0;
output  [8:0] max_pool_1_out_1_address0;
output   max_pool_1_out_1_ce0;
output   max_pool_1_out_1_we0;
output  [31:0] max_pool_1_out_1_d0;
output  [8:0] max_pool_1_out_2_address0;
output   max_pool_1_out_2_ce0;
output   max_pool_1_out_2_we0;
output  [31:0] max_pool_1_out_2_d0;
output  [8:0] max_pool_1_out_3_address0;
output   max_pool_1_out_3_ce0;
output   max_pool_1_out_3_we0;
output  [31:0] max_pool_1_out_3_d0;
output  [8:0] max_pool_1_out_4_address0;
output   max_pool_1_out_4_ce0;
output   max_pool_1_out_4_we0;
output  [31:0] max_pool_1_out_4_d0;
output  [8:0] max_pool_1_out_5_address0;
output   max_pool_1_out_5_ce0;
output   max_pool_1_out_5_we0;
output  [31:0] max_pool_1_out_5_d0;
output  [8:0] max_pool_1_out_6_address0;
output   max_pool_1_out_6_ce0;
output   max_pool_1_out_6_we0;
output  [31:0] max_pool_1_out_6_d0;
output  [8:0] max_pool_1_out_7_address0;
output   max_pool_1_out_7_ce0;
output   max_pool_1_out_7_we0;
output  [31:0] max_pool_1_out_7_d0;
output  [8:0] max_pool_1_out_8_address0;
output   max_pool_1_out_8_ce0;
output   max_pool_1_out_8_we0;
output  [31:0] max_pool_1_out_8_d0;
output  [8:0] max_pool_1_out_9_address0;
output   max_pool_1_out_9_ce0;
output   max_pool_1_out_9_we0;
output  [31:0] max_pool_1_out_9_d0;
output  [8:0] max_pool_1_out_10_address0;
output   max_pool_1_out_10_ce0;
output   max_pool_1_out_10_we0;
output  [31:0] max_pool_1_out_10_d0;
output  [8:0] max_pool_1_out_11_address0;
output   max_pool_1_out_11_ce0;
output   max_pool_1_out_11_we0;
output  [31:0] max_pool_1_out_11_d0;
output  [8:0] max_pool_1_out_12_address0;
output   max_pool_1_out_12_ce0;
output   max_pool_1_out_12_we0;
output  [31:0] max_pool_1_out_12_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg conv_1_out_0_ce0;
reg conv_1_out_0_ce1;
reg conv_1_out_1_ce0;
reg conv_1_out_1_ce1;
reg conv_1_out_2_ce0;
reg conv_1_out_2_ce1;
reg conv_1_out_3_ce0;
reg conv_1_out_3_ce1;
reg conv_1_out_4_ce0;
reg conv_1_out_4_ce1;
reg conv_1_out_5_ce0;
reg conv_1_out_5_ce1;
reg conv_1_out_6_ce0;
reg conv_1_out_6_ce1;
reg conv_1_out_7_ce0;
reg conv_1_out_7_ce1;
reg conv_1_out_8_ce0;
reg conv_1_out_8_ce1;
reg conv_1_out_9_ce0;
reg conv_1_out_9_ce1;
reg conv_1_out_10_ce0;
reg conv_1_out_10_ce1;
reg conv_1_out_11_ce0;
reg conv_1_out_11_ce1;
reg conv_1_out_12_ce0;
reg conv_1_out_12_ce1;
reg conv_1_out_13_ce0;
reg conv_1_out_13_ce1;
reg conv_1_out_14_ce0;
reg conv_1_out_14_ce1;
reg conv_1_out_15_ce0;
reg conv_1_out_15_ce1;
reg conv_1_out_16_ce0;
reg conv_1_out_16_ce1;
reg conv_1_out_17_ce0;
reg conv_1_out_17_ce1;
reg conv_1_out_18_ce0;
reg conv_1_out_18_ce1;
reg conv_1_out_19_ce0;
reg conv_1_out_19_ce1;
reg conv_1_out_20_ce0;
reg conv_1_out_20_ce1;
reg conv_1_out_21_ce0;
reg conv_1_out_21_ce1;
reg conv_1_out_22_ce0;
reg conv_1_out_22_ce1;
reg conv_1_out_23_ce0;
reg conv_1_out_23_ce1;
reg conv_1_out_24_ce0;
reg conv_1_out_24_ce1;
reg conv_1_out_25_ce0;
reg conv_1_out_25_ce1;
reg max_pool_1_out_0_ce0;
reg max_pool_1_out_0_we0;
reg max_pool_1_out_1_ce0;
reg max_pool_1_out_1_we0;
reg max_pool_1_out_2_ce0;
reg max_pool_1_out_2_we0;
reg max_pool_1_out_3_ce0;
reg max_pool_1_out_3_we0;
reg max_pool_1_out_4_ce0;
reg max_pool_1_out_4_we0;
reg max_pool_1_out_5_ce0;
reg max_pool_1_out_5_we0;
reg max_pool_1_out_6_ce0;
reg max_pool_1_out_6_we0;
reg max_pool_1_out_7_ce0;
reg max_pool_1_out_7_we0;
reg max_pool_1_out_8_ce0;
reg max_pool_1_out_8_we0;
reg max_pool_1_out_9_ce0;
reg max_pool_1_out_9_we0;
reg max_pool_1_out_10_ce0;
reg max_pool_1_out_10_we0;
reg max_pool_1_out_11_ce0;
reg max_pool_1_out_11_we0;
reg max_pool_1_out_12_ce0;
reg max_pool_1_out_12_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] r_0_reg_981;
wire   [0:0] icmp_ln10_fu_1266_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] f_fu_1272_p2;
reg   [5:0] f_reg_5672;
wire   [10:0] zext_ln13_fu_1278_p1;
reg   [10:0] zext_ln13_reg_5677;
wire   [9:0] zext_ln13_1_fu_1282_p1;
reg   [9:0] zext_ln13_1_reg_5682;
wire   [0:0] icmp_ln13_fu_1286_p2;
reg   [0:0] icmp_ln13_reg_5687;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln13_reg_5687_pp0_iter1_reg;
wire   [3:0] r_fu_1292_p2;
reg   [3:0] r_reg_5691;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln28_fu_1306_p1;
reg   [63:0] zext_ln28_reg_5696;
wire   [9:0] add_ln35_fu_1343_p2;
reg   [9:0] add_ln35_reg_5778;
wire   [31:0] select_ln28_fu_1390_p3;
reg   [31:0] select_ln28_reg_5848;
wire   [31:0] select_ln28_4_fu_1493_p3;
reg   [31:0] select_ln28_4_reg_5985;
wire   [31:0] select_ln28_8_fu_1543_p3;
reg   [31:0] select_ln28_8_reg_5992;
wire   [31:0] select_ln28_12_fu_1593_p3;
reg   [31:0] select_ln28_12_reg_5999;
wire   [31:0] select_ln28_16_fu_1643_p3;
reg   [31:0] select_ln28_16_reg_6006;
wire   [31:0] select_ln28_20_fu_1693_p3;
reg   [31:0] select_ln28_20_reg_6013;
wire   [31:0] select_ln28_24_fu_1743_p3;
reg   [31:0] select_ln28_24_reg_6020;
wire   [31:0] select_ln28_28_fu_1793_p3;
reg   [31:0] select_ln28_28_reg_6027;
wire   [31:0] select_ln28_32_fu_1843_p3;
reg   [31:0] select_ln28_32_reg_6034;
wire   [31:0] select_ln28_36_fu_1893_p3;
reg   [31:0] select_ln28_36_reg_6041;
wire   [31:0] select_ln28_40_fu_1943_p3;
reg   [31:0] select_ln28_40_reg_6048;
wire   [31:0] select_ln28_44_fu_1993_p3;
reg   [31:0] select_ln28_44_reg_6055;
wire   [31:0] select_ln28_48_fu_2043_p3;
reg   [31:0] select_ln28_48_reg_6062;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg   [5:0] f_0_reg_969;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_phi_mux_r_0_phi_fu_985_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln28_2_fu_1421_p1;
wire   [63:0] zext_ln35_1_fu_2051_p1;
wire   [31:0] select_ln28_1_fu_2150_p3;
wire   [31:0] select_ln28_2_fu_2242_p3;
wire   [31:0] select_ln28_5_fu_2427_p3;
wire   [31:0] select_ln28_6_fu_2519_p3;
wire   [31:0] select_ln28_9_fu_2704_p3;
wire   [31:0] select_ln28_10_fu_2796_p3;
wire   [31:0] select_ln28_13_fu_2981_p3;
wire   [31:0] select_ln28_14_fu_3073_p3;
wire   [31:0] select_ln28_17_fu_3258_p3;
wire   [31:0] select_ln28_18_fu_3350_p3;
wire   [31:0] select_ln28_21_fu_3535_p3;
wire   [31:0] select_ln28_22_fu_3627_p3;
wire   [31:0] select_ln28_25_fu_3812_p3;
wire   [31:0] select_ln28_26_fu_3904_p3;
wire   [31:0] select_ln28_29_fu_4089_p3;
wire   [31:0] select_ln28_30_fu_4181_p3;
wire   [31:0] select_ln28_33_fu_4366_p3;
wire   [31:0] select_ln28_34_fu_4458_p3;
wire   [31:0] select_ln28_37_fu_4643_p3;
wire   [31:0] select_ln28_38_fu_4735_p3;
wire   [31:0] select_ln28_41_fu_4920_p3;
wire   [31:0] select_ln28_42_fu_5012_p3;
wire   [31:0] select_ln28_45_fu_5197_p3;
wire   [31:0] select_ln28_46_fu_5289_p3;
wire   [31:0] select_ln28_49_fu_5474_p3;
wire   [31:0] select_ln28_50_fu_5566_p3;
wire   [9:0] tmp_145_fu_1298_p3;
wire   [8:0] tmp_144_fu_1331_p3;
wire   [9:0] zext_ln35_fu_1339_p1;
wire   [31:0] bitcast_ln28_fu_1348_p1;
wire   [7:0] tmp_2_fu_1352_p4;
wire   [22:0] trunc_ln28_fu_1362_p1;
wire   [0:0] icmp_ln28_1_fu_1372_p2;
wire   [0:0] icmp_ln28_fu_1366_p2;
wire   [0:0] or_ln28_fu_1378_p2;
wire   [0:0] tmp_3_fu_993_p2;
wire   [0:0] and_ln28_fu_1384_p2;
wire   [4:0] shl_ln_fu_1323_p3;
wire   [4:0] or_ln25_fu_1398_p2;
wire   [9:0] tmp_146_fu_1404_p3;
wire   [10:0] zext_ln28_1_fu_1412_p1;
wire   [10:0] add_ln28_fu_1416_p2;
wire   [31:0] bitcast_ln28_7_fu_1451_p1;
wire   [7:0] tmp_12_fu_1455_p4;
wire   [22:0] trunc_ln28_7_fu_1465_p1;
wire   [0:0] icmp_ln28_15_fu_1475_p2;
wire   [0:0] icmp_ln28_14_fu_1469_p2;
wire   [0:0] or_ln28_7_fu_1481_p2;
wire   [0:0] tmp_13_fu_999_p2;
wire   [0:0] and_ln28_7_fu_1487_p2;
wire   [31:0] bitcast_ln28_14_fu_1501_p1;
wire   [7:0] tmp_23_fu_1505_p4;
wire   [22:0] trunc_ln28_14_fu_1515_p1;
wire   [0:0] icmp_ln28_29_fu_1525_p2;
wire   [0:0] icmp_ln28_28_fu_1519_p2;
wire   [0:0] or_ln28_14_fu_1531_p2;
wire   [0:0] tmp_24_fu_1005_p2;
wire   [0:0] and_ln28_14_fu_1537_p2;
wire   [31:0] bitcast_ln28_21_fu_1551_p1;
wire   [7:0] tmp_34_fu_1555_p4;
wire   [22:0] trunc_ln28_21_fu_1565_p1;
wire   [0:0] icmp_ln28_43_fu_1575_p2;
wire   [0:0] icmp_ln28_42_fu_1569_p2;
wire   [0:0] or_ln28_21_fu_1581_p2;
wire   [0:0] tmp_35_fu_1011_p2;
wire   [0:0] and_ln28_21_fu_1587_p2;
wire   [31:0] bitcast_ln28_28_fu_1601_p1;
wire   [7:0] tmp_45_fu_1605_p4;
wire   [22:0] trunc_ln28_28_fu_1615_p1;
wire   [0:0] icmp_ln28_57_fu_1625_p2;
wire   [0:0] icmp_ln28_56_fu_1619_p2;
wire   [0:0] or_ln28_28_fu_1631_p2;
wire   [0:0] tmp_46_fu_1017_p2;
wire   [0:0] and_ln28_28_fu_1637_p2;
wire   [31:0] bitcast_ln28_35_fu_1651_p1;
wire   [7:0] tmp_56_fu_1655_p4;
wire   [22:0] trunc_ln28_35_fu_1665_p1;
wire   [0:0] icmp_ln28_71_fu_1675_p2;
wire   [0:0] icmp_ln28_70_fu_1669_p2;
wire   [0:0] or_ln28_35_fu_1681_p2;
wire   [0:0] tmp_57_fu_1023_p2;
wire   [0:0] and_ln28_35_fu_1687_p2;
wire   [31:0] bitcast_ln28_42_fu_1701_p1;
wire   [7:0] tmp_67_fu_1705_p4;
wire   [22:0] trunc_ln28_42_fu_1715_p1;
wire   [0:0] icmp_ln28_85_fu_1725_p2;
wire   [0:0] icmp_ln28_84_fu_1719_p2;
wire   [0:0] or_ln28_42_fu_1731_p2;
wire   [0:0] tmp_68_fu_1029_p2;
wire   [0:0] and_ln28_42_fu_1737_p2;
wire   [31:0] bitcast_ln28_49_fu_1751_p1;
wire   [7:0] tmp_78_fu_1755_p4;
wire   [22:0] trunc_ln28_49_fu_1765_p1;
wire   [0:0] icmp_ln28_99_fu_1775_p2;
wire   [0:0] icmp_ln28_98_fu_1769_p2;
wire   [0:0] or_ln28_49_fu_1781_p2;
wire   [0:0] tmp_79_fu_1035_p2;
wire   [0:0] and_ln28_49_fu_1787_p2;
wire   [31:0] bitcast_ln28_56_fu_1801_p1;
wire   [7:0] tmp_89_fu_1805_p4;
wire   [22:0] trunc_ln28_56_fu_1815_p1;
wire   [0:0] icmp_ln28_113_fu_1825_p2;
wire   [0:0] icmp_ln28_112_fu_1819_p2;
wire   [0:0] or_ln28_56_fu_1831_p2;
wire   [0:0] tmp_90_fu_1041_p2;
wire   [0:0] and_ln28_56_fu_1837_p2;
wire   [31:0] bitcast_ln28_63_fu_1851_p1;
wire   [7:0] tmp_100_fu_1855_p4;
wire   [22:0] trunc_ln28_63_fu_1865_p1;
wire   [0:0] icmp_ln28_127_fu_1875_p2;
wire   [0:0] icmp_ln28_126_fu_1869_p2;
wire   [0:0] or_ln28_63_fu_1881_p2;
wire   [0:0] tmp_101_fu_1047_p2;
wire   [0:0] and_ln28_63_fu_1887_p2;
wire   [31:0] bitcast_ln28_70_fu_1901_p1;
wire   [7:0] tmp_111_fu_1905_p4;
wire   [22:0] trunc_ln28_70_fu_1915_p1;
wire   [0:0] icmp_ln28_141_fu_1925_p2;
wire   [0:0] icmp_ln28_140_fu_1919_p2;
wire   [0:0] or_ln28_70_fu_1931_p2;
wire   [0:0] tmp_112_fu_1053_p2;
wire   [0:0] and_ln28_70_fu_1937_p2;
wire   [31:0] bitcast_ln28_77_fu_1951_p1;
wire   [7:0] tmp_122_fu_1955_p4;
wire   [22:0] trunc_ln28_77_fu_1965_p1;
wire   [0:0] icmp_ln28_155_fu_1975_p2;
wire   [0:0] icmp_ln28_154_fu_1969_p2;
wire   [0:0] or_ln28_77_fu_1981_p2;
wire   [0:0] tmp_123_fu_1059_p2;
wire   [0:0] and_ln28_77_fu_1987_p2;
wire   [31:0] bitcast_ln28_84_fu_2001_p1;
wire   [7:0] tmp_133_fu_2005_p4;
wire   [22:0] trunc_ln28_84_fu_2015_p1;
wire   [0:0] icmp_ln28_169_fu_2025_p2;
wire   [0:0] icmp_ln28_168_fu_2019_p2;
wire   [0:0] or_ln28_84_fu_2031_p2;
wire   [0:0] tmp_134_fu_1065_p2;
wire   [0:0] and_ln28_84_fu_2037_p2;
wire   [31:0] bitcast_ln28_1_fu_2067_p1;
wire   [31:0] bitcast_ln28_2_fu_2085_p1;
wire   [7:0] tmp_4_fu_2071_p4;
wire   [22:0] trunc_ln28_1_fu_2081_p1;
wire   [0:0] icmp_ln28_3_fu_2108_p2;
wire   [0:0] icmp_ln28_2_fu_2102_p2;
wire   [7:0] tmp_5_fu_2088_p4;
wire   [22:0] trunc_ln28_2_fu_2098_p1;
wire   [0:0] icmp_ln28_5_fu_2126_p2;
wire   [0:0] icmp_ln28_4_fu_2120_p2;
wire   [0:0] or_ln28_1_fu_2114_p2;
wire   [0:0] or_ln28_2_fu_2132_p2;
wire   [0:0] and_ln28_1_fu_2138_p2;
wire   [0:0] tmp_6_fu_1071_p2;
wire   [0:0] and_ln28_2_fu_2144_p2;
wire   [31:0] bitcast_ln28_3_fu_2158_p1;
wire   [31:0] bitcast_ln28_4_fu_2176_p1;
wire   [7:0] tmp_7_fu_2162_p4;
wire   [22:0] trunc_ln28_3_fu_2172_p1;
wire   [0:0] icmp_ln28_7_fu_2200_p2;
wire   [0:0] icmp_ln28_6_fu_2194_p2;
wire   [7:0] tmp_8_fu_2180_p4;
wire   [22:0] trunc_ln28_4_fu_2190_p1;
wire   [0:0] icmp_ln28_9_fu_2218_p2;
wire   [0:0] icmp_ln28_8_fu_2212_p2;
wire   [0:0] or_ln28_3_fu_2206_p2;
wire   [0:0] or_ln28_4_fu_2224_p2;
wire   [0:0] and_ln28_3_fu_2230_p2;
wire   [0:0] tmp_9_fu_1076_p2;
wire   [0:0] and_ln28_4_fu_2236_p2;
wire   [31:0] bitcast_ln28_5_fu_2251_p1;
wire   [31:0] bitcast_ln28_6_fu_2269_p1;
wire   [7:0] tmp_s_fu_2255_p4;
wire   [22:0] trunc_ln28_5_fu_2265_p1;
wire   [0:0] icmp_ln28_11_fu_2293_p2;
wire   [0:0] icmp_ln28_10_fu_2287_p2;
wire   [7:0] tmp_10_fu_2273_p4;
wire   [22:0] trunc_ln28_6_fu_2283_p1;
wire   [0:0] icmp_ln28_13_fu_2311_p2;
wire   [0:0] icmp_ln28_12_fu_2305_p2;
wire   [0:0] or_ln28_5_fu_2299_p2;
wire   [0:0] or_ln28_6_fu_2317_p2;
wire   [0:0] and_ln28_5_fu_2323_p2;
wire   [0:0] tmp_11_fu_1081_p2;
wire   [0:0] and_ln28_6_fu_2329_p2;
wire   [31:0] bitcast_ln28_8_fu_2344_p1;
wire   [31:0] bitcast_ln28_9_fu_2362_p1;
wire   [7:0] tmp_14_fu_2348_p4;
wire   [22:0] trunc_ln28_8_fu_2358_p1;
wire   [0:0] icmp_ln28_17_fu_2385_p2;
wire   [0:0] icmp_ln28_16_fu_2379_p2;
wire   [7:0] tmp_15_fu_2365_p4;
wire   [22:0] trunc_ln28_9_fu_2375_p1;
wire   [0:0] icmp_ln28_19_fu_2403_p2;
wire   [0:0] icmp_ln28_18_fu_2397_p2;
wire   [0:0] or_ln28_8_fu_2391_p2;
wire   [0:0] or_ln28_9_fu_2409_p2;
wire   [0:0] and_ln28_8_fu_2415_p2;
wire   [0:0] tmp_16_fu_1086_p2;
wire   [0:0] and_ln28_9_fu_2421_p2;
wire   [31:0] bitcast_ln28_10_fu_2435_p1;
wire   [31:0] bitcast_ln28_11_fu_2453_p1;
wire   [7:0] tmp_17_fu_2439_p4;
wire   [22:0] trunc_ln28_10_fu_2449_p1;
wire   [0:0] icmp_ln28_21_fu_2477_p2;
wire   [0:0] icmp_ln28_20_fu_2471_p2;
wire   [7:0] tmp_18_fu_2457_p4;
wire   [22:0] trunc_ln28_11_fu_2467_p1;
wire   [0:0] icmp_ln28_23_fu_2495_p2;
wire   [0:0] icmp_ln28_22_fu_2489_p2;
wire   [0:0] or_ln28_10_fu_2483_p2;
wire   [0:0] or_ln28_11_fu_2501_p2;
wire   [0:0] and_ln28_10_fu_2507_p2;
wire   [0:0] tmp_19_fu_1091_p2;
wire   [0:0] and_ln28_11_fu_2513_p2;
wire   [31:0] bitcast_ln28_12_fu_2528_p1;
wire   [31:0] bitcast_ln28_13_fu_2546_p1;
wire   [7:0] tmp_20_fu_2532_p4;
wire   [22:0] trunc_ln28_12_fu_2542_p1;
wire   [0:0] icmp_ln28_25_fu_2570_p2;
wire   [0:0] icmp_ln28_24_fu_2564_p2;
wire   [7:0] tmp_21_fu_2550_p4;
wire   [22:0] trunc_ln28_13_fu_2560_p1;
wire   [0:0] icmp_ln28_27_fu_2588_p2;
wire   [0:0] icmp_ln28_26_fu_2582_p2;
wire   [0:0] or_ln28_12_fu_2576_p2;
wire   [0:0] or_ln28_13_fu_2594_p2;
wire   [0:0] and_ln28_12_fu_2600_p2;
wire   [0:0] tmp_22_fu_1096_p2;
wire   [0:0] and_ln28_13_fu_2606_p2;
wire   [31:0] bitcast_ln28_15_fu_2621_p1;
wire   [31:0] bitcast_ln28_16_fu_2639_p1;
wire   [7:0] tmp_25_fu_2625_p4;
wire   [22:0] trunc_ln28_15_fu_2635_p1;
wire   [0:0] icmp_ln28_31_fu_2662_p2;
wire   [0:0] icmp_ln28_30_fu_2656_p2;
wire   [7:0] tmp_26_fu_2642_p4;
wire   [22:0] trunc_ln28_16_fu_2652_p1;
wire   [0:0] icmp_ln28_33_fu_2680_p2;
wire   [0:0] icmp_ln28_32_fu_2674_p2;
wire   [0:0] or_ln28_15_fu_2668_p2;
wire   [0:0] or_ln28_16_fu_2686_p2;
wire   [0:0] and_ln28_15_fu_2692_p2;
wire   [0:0] tmp_27_fu_1101_p2;
wire   [0:0] and_ln28_16_fu_2698_p2;
wire   [31:0] bitcast_ln28_17_fu_2712_p1;
wire   [31:0] bitcast_ln28_18_fu_2730_p1;
wire   [7:0] tmp_28_fu_2716_p4;
wire   [22:0] trunc_ln28_17_fu_2726_p1;
wire   [0:0] icmp_ln28_35_fu_2754_p2;
wire   [0:0] icmp_ln28_34_fu_2748_p2;
wire   [7:0] tmp_29_fu_2734_p4;
wire   [22:0] trunc_ln28_18_fu_2744_p1;
wire   [0:0] icmp_ln28_37_fu_2772_p2;
wire   [0:0] icmp_ln28_36_fu_2766_p2;
wire   [0:0] or_ln28_17_fu_2760_p2;
wire   [0:0] or_ln28_18_fu_2778_p2;
wire   [0:0] and_ln28_17_fu_2784_p2;
wire   [0:0] tmp_30_fu_1106_p2;
wire   [0:0] and_ln28_18_fu_2790_p2;
wire   [31:0] bitcast_ln28_19_fu_2805_p1;
wire   [31:0] bitcast_ln28_20_fu_2823_p1;
wire   [7:0] tmp_31_fu_2809_p4;
wire   [22:0] trunc_ln28_19_fu_2819_p1;
wire   [0:0] icmp_ln28_39_fu_2847_p2;
wire   [0:0] icmp_ln28_38_fu_2841_p2;
wire   [7:0] tmp_32_fu_2827_p4;
wire   [22:0] trunc_ln28_20_fu_2837_p1;
wire   [0:0] icmp_ln28_41_fu_2865_p2;
wire   [0:0] icmp_ln28_40_fu_2859_p2;
wire   [0:0] or_ln28_19_fu_2853_p2;
wire   [0:0] or_ln28_20_fu_2871_p2;
wire   [0:0] and_ln28_19_fu_2877_p2;
wire   [0:0] tmp_33_fu_1111_p2;
wire   [0:0] and_ln28_20_fu_2883_p2;
wire   [31:0] bitcast_ln28_22_fu_2898_p1;
wire   [31:0] bitcast_ln28_23_fu_2916_p1;
wire   [7:0] tmp_36_fu_2902_p4;
wire   [22:0] trunc_ln28_22_fu_2912_p1;
wire   [0:0] icmp_ln28_45_fu_2939_p2;
wire   [0:0] icmp_ln28_44_fu_2933_p2;
wire   [7:0] tmp_37_fu_2919_p4;
wire   [22:0] trunc_ln28_23_fu_2929_p1;
wire   [0:0] icmp_ln28_47_fu_2957_p2;
wire   [0:0] icmp_ln28_46_fu_2951_p2;
wire   [0:0] or_ln28_22_fu_2945_p2;
wire   [0:0] or_ln28_23_fu_2963_p2;
wire   [0:0] and_ln28_22_fu_2969_p2;
wire   [0:0] tmp_38_fu_1116_p2;
wire   [0:0] and_ln28_23_fu_2975_p2;
wire   [31:0] bitcast_ln28_24_fu_2989_p1;
wire   [31:0] bitcast_ln28_25_fu_3007_p1;
wire   [7:0] tmp_39_fu_2993_p4;
wire   [22:0] trunc_ln28_24_fu_3003_p1;
wire   [0:0] icmp_ln28_49_fu_3031_p2;
wire   [0:0] icmp_ln28_48_fu_3025_p2;
wire   [7:0] tmp_40_fu_3011_p4;
wire   [22:0] trunc_ln28_25_fu_3021_p1;
wire   [0:0] icmp_ln28_51_fu_3049_p2;
wire   [0:0] icmp_ln28_50_fu_3043_p2;
wire   [0:0] or_ln28_24_fu_3037_p2;
wire   [0:0] or_ln28_25_fu_3055_p2;
wire   [0:0] and_ln28_24_fu_3061_p2;
wire   [0:0] tmp_41_fu_1121_p2;
wire   [0:0] and_ln28_25_fu_3067_p2;
wire   [31:0] bitcast_ln28_26_fu_3082_p1;
wire   [31:0] bitcast_ln28_27_fu_3100_p1;
wire   [7:0] tmp_42_fu_3086_p4;
wire   [22:0] trunc_ln28_26_fu_3096_p1;
wire   [0:0] icmp_ln28_53_fu_3124_p2;
wire   [0:0] icmp_ln28_52_fu_3118_p2;
wire   [7:0] tmp_43_fu_3104_p4;
wire   [22:0] trunc_ln28_27_fu_3114_p1;
wire   [0:0] icmp_ln28_55_fu_3142_p2;
wire   [0:0] icmp_ln28_54_fu_3136_p2;
wire   [0:0] or_ln28_26_fu_3130_p2;
wire   [0:0] or_ln28_27_fu_3148_p2;
wire   [0:0] and_ln28_26_fu_3154_p2;
wire   [0:0] tmp_44_fu_1126_p2;
wire   [0:0] and_ln28_27_fu_3160_p2;
wire   [31:0] bitcast_ln28_29_fu_3175_p1;
wire   [31:0] bitcast_ln28_30_fu_3193_p1;
wire   [7:0] tmp_47_fu_3179_p4;
wire   [22:0] trunc_ln28_29_fu_3189_p1;
wire   [0:0] icmp_ln28_59_fu_3216_p2;
wire   [0:0] icmp_ln28_58_fu_3210_p2;
wire   [7:0] tmp_48_fu_3196_p4;
wire   [22:0] trunc_ln28_30_fu_3206_p1;
wire   [0:0] icmp_ln28_61_fu_3234_p2;
wire   [0:0] icmp_ln28_60_fu_3228_p2;
wire   [0:0] or_ln28_29_fu_3222_p2;
wire   [0:0] or_ln28_30_fu_3240_p2;
wire   [0:0] and_ln28_29_fu_3246_p2;
wire   [0:0] tmp_49_fu_1131_p2;
wire   [0:0] and_ln28_30_fu_3252_p2;
wire   [31:0] bitcast_ln28_31_fu_3266_p1;
wire   [31:0] bitcast_ln28_32_fu_3284_p1;
wire   [7:0] tmp_50_fu_3270_p4;
wire   [22:0] trunc_ln28_31_fu_3280_p1;
wire   [0:0] icmp_ln28_63_fu_3308_p2;
wire   [0:0] icmp_ln28_62_fu_3302_p2;
wire   [7:0] tmp_51_fu_3288_p4;
wire   [22:0] trunc_ln28_32_fu_3298_p1;
wire   [0:0] icmp_ln28_65_fu_3326_p2;
wire   [0:0] icmp_ln28_64_fu_3320_p2;
wire   [0:0] or_ln28_31_fu_3314_p2;
wire   [0:0] or_ln28_32_fu_3332_p2;
wire   [0:0] and_ln28_31_fu_3338_p2;
wire   [0:0] tmp_52_fu_1136_p2;
wire   [0:0] and_ln28_32_fu_3344_p2;
wire   [31:0] bitcast_ln28_33_fu_3359_p1;
wire   [31:0] bitcast_ln28_34_fu_3377_p1;
wire   [7:0] tmp_53_fu_3363_p4;
wire   [22:0] trunc_ln28_33_fu_3373_p1;
wire   [0:0] icmp_ln28_67_fu_3401_p2;
wire   [0:0] icmp_ln28_66_fu_3395_p2;
wire   [7:0] tmp_54_fu_3381_p4;
wire   [22:0] trunc_ln28_34_fu_3391_p1;
wire   [0:0] icmp_ln28_69_fu_3419_p2;
wire   [0:0] icmp_ln28_68_fu_3413_p2;
wire   [0:0] or_ln28_33_fu_3407_p2;
wire   [0:0] or_ln28_34_fu_3425_p2;
wire   [0:0] and_ln28_33_fu_3431_p2;
wire   [0:0] tmp_55_fu_1141_p2;
wire   [0:0] and_ln28_34_fu_3437_p2;
wire   [31:0] bitcast_ln28_36_fu_3452_p1;
wire   [31:0] bitcast_ln28_37_fu_3470_p1;
wire   [7:0] tmp_58_fu_3456_p4;
wire   [22:0] trunc_ln28_36_fu_3466_p1;
wire   [0:0] icmp_ln28_73_fu_3493_p2;
wire   [0:0] icmp_ln28_72_fu_3487_p2;
wire   [7:0] tmp_59_fu_3473_p4;
wire   [22:0] trunc_ln28_37_fu_3483_p1;
wire   [0:0] icmp_ln28_75_fu_3511_p2;
wire   [0:0] icmp_ln28_74_fu_3505_p2;
wire   [0:0] or_ln28_36_fu_3499_p2;
wire   [0:0] or_ln28_37_fu_3517_p2;
wire   [0:0] and_ln28_36_fu_3523_p2;
wire   [0:0] tmp_60_fu_1146_p2;
wire   [0:0] and_ln28_37_fu_3529_p2;
wire   [31:0] bitcast_ln28_38_fu_3543_p1;
wire   [31:0] bitcast_ln28_39_fu_3561_p1;
wire   [7:0] tmp_61_fu_3547_p4;
wire   [22:0] trunc_ln28_38_fu_3557_p1;
wire   [0:0] icmp_ln28_77_fu_3585_p2;
wire   [0:0] icmp_ln28_76_fu_3579_p2;
wire   [7:0] tmp_62_fu_3565_p4;
wire   [22:0] trunc_ln28_39_fu_3575_p1;
wire   [0:0] icmp_ln28_79_fu_3603_p2;
wire   [0:0] icmp_ln28_78_fu_3597_p2;
wire   [0:0] or_ln28_38_fu_3591_p2;
wire   [0:0] or_ln28_39_fu_3609_p2;
wire   [0:0] and_ln28_38_fu_3615_p2;
wire   [0:0] tmp_63_fu_1151_p2;
wire   [0:0] and_ln28_39_fu_3621_p2;
wire   [31:0] bitcast_ln28_40_fu_3636_p1;
wire   [31:0] bitcast_ln28_41_fu_3654_p1;
wire   [7:0] tmp_64_fu_3640_p4;
wire   [22:0] trunc_ln28_40_fu_3650_p1;
wire   [0:0] icmp_ln28_81_fu_3678_p2;
wire   [0:0] icmp_ln28_80_fu_3672_p2;
wire   [7:0] tmp_65_fu_3658_p4;
wire   [22:0] trunc_ln28_41_fu_3668_p1;
wire   [0:0] icmp_ln28_83_fu_3696_p2;
wire   [0:0] icmp_ln28_82_fu_3690_p2;
wire   [0:0] or_ln28_40_fu_3684_p2;
wire   [0:0] or_ln28_41_fu_3702_p2;
wire   [0:0] and_ln28_40_fu_3708_p2;
wire   [0:0] tmp_66_fu_1156_p2;
wire   [0:0] and_ln28_41_fu_3714_p2;
wire   [31:0] bitcast_ln28_43_fu_3729_p1;
wire   [31:0] bitcast_ln28_44_fu_3747_p1;
wire   [7:0] tmp_69_fu_3733_p4;
wire   [22:0] trunc_ln28_43_fu_3743_p1;
wire   [0:0] icmp_ln28_87_fu_3770_p2;
wire   [0:0] icmp_ln28_86_fu_3764_p2;
wire   [7:0] tmp_70_fu_3750_p4;
wire   [22:0] trunc_ln28_44_fu_3760_p1;
wire   [0:0] icmp_ln28_89_fu_3788_p2;
wire   [0:0] icmp_ln28_88_fu_3782_p2;
wire   [0:0] or_ln28_43_fu_3776_p2;
wire   [0:0] or_ln28_44_fu_3794_p2;
wire   [0:0] and_ln28_43_fu_3800_p2;
wire   [0:0] tmp_71_fu_1161_p2;
wire   [0:0] and_ln28_44_fu_3806_p2;
wire   [31:0] bitcast_ln28_45_fu_3820_p1;
wire   [31:0] bitcast_ln28_46_fu_3838_p1;
wire   [7:0] tmp_72_fu_3824_p4;
wire   [22:0] trunc_ln28_45_fu_3834_p1;
wire   [0:0] icmp_ln28_91_fu_3862_p2;
wire   [0:0] icmp_ln28_90_fu_3856_p2;
wire   [7:0] tmp_73_fu_3842_p4;
wire   [22:0] trunc_ln28_46_fu_3852_p1;
wire   [0:0] icmp_ln28_93_fu_3880_p2;
wire   [0:0] icmp_ln28_92_fu_3874_p2;
wire   [0:0] or_ln28_45_fu_3868_p2;
wire   [0:0] or_ln28_46_fu_3886_p2;
wire   [0:0] and_ln28_45_fu_3892_p2;
wire   [0:0] tmp_74_fu_1166_p2;
wire   [0:0] and_ln28_46_fu_3898_p2;
wire   [31:0] bitcast_ln28_47_fu_3913_p1;
wire   [31:0] bitcast_ln28_48_fu_3931_p1;
wire   [7:0] tmp_75_fu_3917_p4;
wire   [22:0] trunc_ln28_47_fu_3927_p1;
wire   [0:0] icmp_ln28_95_fu_3955_p2;
wire   [0:0] icmp_ln28_94_fu_3949_p2;
wire   [7:0] tmp_76_fu_3935_p4;
wire   [22:0] trunc_ln28_48_fu_3945_p1;
wire   [0:0] icmp_ln28_97_fu_3973_p2;
wire   [0:0] icmp_ln28_96_fu_3967_p2;
wire   [0:0] or_ln28_47_fu_3961_p2;
wire   [0:0] or_ln28_48_fu_3979_p2;
wire   [0:0] and_ln28_47_fu_3985_p2;
wire   [0:0] tmp_77_fu_1171_p2;
wire   [0:0] and_ln28_48_fu_3991_p2;
wire   [31:0] bitcast_ln28_50_fu_4006_p1;
wire   [31:0] bitcast_ln28_51_fu_4024_p1;
wire   [7:0] tmp_80_fu_4010_p4;
wire   [22:0] trunc_ln28_50_fu_4020_p1;
wire   [0:0] icmp_ln28_101_fu_4047_p2;
wire   [0:0] icmp_ln28_100_fu_4041_p2;
wire   [7:0] tmp_81_fu_4027_p4;
wire   [22:0] trunc_ln28_51_fu_4037_p1;
wire   [0:0] icmp_ln28_103_fu_4065_p2;
wire   [0:0] icmp_ln28_102_fu_4059_p2;
wire   [0:0] or_ln28_50_fu_4053_p2;
wire   [0:0] or_ln28_51_fu_4071_p2;
wire   [0:0] and_ln28_50_fu_4077_p2;
wire   [0:0] tmp_82_fu_1176_p2;
wire   [0:0] and_ln28_51_fu_4083_p2;
wire   [31:0] bitcast_ln28_52_fu_4097_p1;
wire   [31:0] bitcast_ln28_53_fu_4115_p1;
wire   [7:0] tmp_83_fu_4101_p4;
wire   [22:0] trunc_ln28_52_fu_4111_p1;
wire   [0:0] icmp_ln28_105_fu_4139_p2;
wire   [0:0] icmp_ln28_104_fu_4133_p2;
wire   [7:0] tmp_84_fu_4119_p4;
wire   [22:0] trunc_ln28_53_fu_4129_p1;
wire   [0:0] icmp_ln28_107_fu_4157_p2;
wire   [0:0] icmp_ln28_106_fu_4151_p2;
wire   [0:0] or_ln28_52_fu_4145_p2;
wire   [0:0] or_ln28_53_fu_4163_p2;
wire   [0:0] and_ln28_52_fu_4169_p2;
wire   [0:0] tmp_85_fu_1181_p2;
wire   [0:0] and_ln28_53_fu_4175_p2;
wire   [31:0] bitcast_ln28_54_fu_4190_p1;
wire   [31:0] bitcast_ln28_55_fu_4208_p1;
wire   [7:0] tmp_86_fu_4194_p4;
wire   [22:0] trunc_ln28_54_fu_4204_p1;
wire   [0:0] icmp_ln28_109_fu_4232_p2;
wire   [0:0] icmp_ln28_108_fu_4226_p2;
wire   [7:0] tmp_87_fu_4212_p4;
wire   [22:0] trunc_ln28_55_fu_4222_p1;
wire   [0:0] icmp_ln28_111_fu_4250_p2;
wire   [0:0] icmp_ln28_110_fu_4244_p2;
wire   [0:0] or_ln28_54_fu_4238_p2;
wire   [0:0] or_ln28_55_fu_4256_p2;
wire   [0:0] and_ln28_54_fu_4262_p2;
wire   [0:0] tmp_88_fu_1186_p2;
wire   [0:0] and_ln28_55_fu_4268_p2;
wire   [31:0] bitcast_ln28_57_fu_4283_p1;
wire   [31:0] bitcast_ln28_58_fu_4301_p1;
wire   [7:0] tmp_91_fu_4287_p4;
wire   [22:0] trunc_ln28_57_fu_4297_p1;
wire   [0:0] icmp_ln28_115_fu_4324_p2;
wire   [0:0] icmp_ln28_114_fu_4318_p2;
wire   [7:0] tmp_92_fu_4304_p4;
wire   [22:0] trunc_ln28_58_fu_4314_p1;
wire   [0:0] icmp_ln28_117_fu_4342_p2;
wire   [0:0] icmp_ln28_116_fu_4336_p2;
wire   [0:0] or_ln28_57_fu_4330_p2;
wire   [0:0] or_ln28_58_fu_4348_p2;
wire   [0:0] and_ln28_57_fu_4354_p2;
wire   [0:0] tmp_93_fu_1191_p2;
wire   [0:0] and_ln28_58_fu_4360_p2;
wire   [31:0] bitcast_ln28_59_fu_4374_p1;
wire   [31:0] bitcast_ln28_60_fu_4392_p1;
wire   [7:0] tmp_94_fu_4378_p4;
wire   [22:0] trunc_ln28_59_fu_4388_p1;
wire   [0:0] icmp_ln28_119_fu_4416_p2;
wire   [0:0] icmp_ln28_118_fu_4410_p2;
wire   [7:0] tmp_95_fu_4396_p4;
wire   [22:0] trunc_ln28_60_fu_4406_p1;
wire   [0:0] icmp_ln28_121_fu_4434_p2;
wire   [0:0] icmp_ln28_120_fu_4428_p2;
wire   [0:0] or_ln28_59_fu_4422_p2;
wire   [0:0] or_ln28_60_fu_4440_p2;
wire   [0:0] and_ln28_59_fu_4446_p2;
wire   [0:0] tmp_96_fu_1196_p2;
wire   [0:0] and_ln28_60_fu_4452_p2;
wire   [31:0] bitcast_ln28_61_fu_4467_p1;
wire   [31:0] bitcast_ln28_62_fu_4485_p1;
wire   [7:0] tmp_97_fu_4471_p4;
wire   [22:0] trunc_ln28_61_fu_4481_p1;
wire   [0:0] icmp_ln28_123_fu_4509_p2;
wire   [0:0] icmp_ln28_122_fu_4503_p2;
wire   [7:0] tmp_98_fu_4489_p4;
wire   [22:0] trunc_ln28_62_fu_4499_p1;
wire   [0:0] icmp_ln28_125_fu_4527_p2;
wire   [0:0] icmp_ln28_124_fu_4521_p2;
wire   [0:0] or_ln28_61_fu_4515_p2;
wire   [0:0] or_ln28_62_fu_4533_p2;
wire   [0:0] and_ln28_61_fu_4539_p2;
wire   [0:0] tmp_99_fu_1201_p2;
wire   [0:0] and_ln28_62_fu_4545_p2;
wire   [31:0] bitcast_ln28_64_fu_4560_p1;
wire   [31:0] bitcast_ln28_65_fu_4578_p1;
wire   [7:0] tmp_102_fu_4564_p4;
wire   [22:0] trunc_ln28_64_fu_4574_p1;
wire   [0:0] icmp_ln28_129_fu_4601_p2;
wire   [0:0] icmp_ln28_128_fu_4595_p2;
wire   [7:0] tmp_103_fu_4581_p4;
wire   [22:0] trunc_ln28_65_fu_4591_p1;
wire   [0:0] icmp_ln28_131_fu_4619_p2;
wire   [0:0] icmp_ln28_130_fu_4613_p2;
wire   [0:0] or_ln28_64_fu_4607_p2;
wire   [0:0] or_ln28_65_fu_4625_p2;
wire   [0:0] and_ln28_64_fu_4631_p2;
wire   [0:0] tmp_104_fu_1206_p2;
wire   [0:0] and_ln28_65_fu_4637_p2;
wire   [31:0] bitcast_ln28_66_fu_4651_p1;
wire   [31:0] bitcast_ln28_67_fu_4669_p1;
wire   [7:0] tmp_105_fu_4655_p4;
wire   [22:0] trunc_ln28_66_fu_4665_p1;
wire   [0:0] icmp_ln28_133_fu_4693_p2;
wire   [0:0] icmp_ln28_132_fu_4687_p2;
wire   [7:0] tmp_106_fu_4673_p4;
wire   [22:0] trunc_ln28_67_fu_4683_p1;
wire   [0:0] icmp_ln28_135_fu_4711_p2;
wire   [0:0] icmp_ln28_134_fu_4705_p2;
wire   [0:0] or_ln28_66_fu_4699_p2;
wire   [0:0] or_ln28_67_fu_4717_p2;
wire   [0:0] and_ln28_66_fu_4723_p2;
wire   [0:0] tmp_107_fu_1211_p2;
wire   [0:0] and_ln28_67_fu_4729_p2;
wire   [31:0] bitcast_ln28_68_fu_4744_p1;
wire   [31:0] bitcast_ln28_69_fu_4762_p1;
wire   [7:0] tmp_108_fu_4748_p4;
wire   [22:0] trunc_ln28_68_fu_4758_p1;
wire   [0:0] icmp_ln28_137_fu_4786_p2;
wire   [0:0] icmp_ln28_136_fu_4780_p2;
wire   [7:0] tmp_109_fu_4766_p4;
wire   [22:0] trunc_ln28_69_fu_4776_p1;
wire   [0:0] icmp_ln28_139_fu_4804_p2;
wire   [0:0] icmp_ln28_138_fu_4798_p2;
wire   [0:0] or_ln28_68_fu_4792_p2;
wire   [0:0] or_ln28_69_fu_4810_p2;
wire   [0:0] and_ln28_68_fu_4816_p2;
wire   [0:0] tmp_110_fu_1216_p2;
wire   [0:0] and_ln28_69_fu_4822_p2;
wire   [31:0] bitcast_ln28_71_fu_4837_p1;
wire   [31:0] bitcast_ln28_72_fu_4855_p1;
wire   [7:0] tmp_113_fu_4841_p4;
wire   [22:0] trunc_ln28_71_fu_4851_p1;
wire   [0:0] icmp_ln28_143_fu_4878_p2;
wire   [0:0] icmp_ln28_142_fu_4872_p2;
wire   [7:0] tmp_114_fu_4858_p4;
wire   [22:0] trunc_ln28_72_fu_4868_p1;
wire   [0:0] icmp_ln28_145_fu_4896_p2;
wire   [0:0] icmp_ln28_144_fu_4890_p2;
wire   [0:0] or_ln28_71_fu_4884_p2;
wire   [0:0] or_ln28_72_fu_4902_p2;
wire   [0:0] and_ln28_71_fu_4908_p2;
wire   [0:0] tmp_115_fu_1221_p2;
wire   [0:0] and_ln28_72_fu_4914_p2;
wire   [31:0] bitcast_ln28_73_fu_4928_p1;
wire   [31:0] bitcast_ln28_74_fu_4946_p1;
wire   [7:0] tmp_116_fu_4932_p4;
wire   [22:0] trunc_ln28_73_fu_4942_p1;
wire   [0:0] icmp_ln28_147_fu_4970_p2;
wire   [0:0] icmp_ln28_146_fu_4964_p2;
wire   [7:0] tmp_117_fu_4950_p4;
wire   [22:0] trunc_ln28_74_fu_4960_p1;
wire   [0:0] icmp_ln28_149_fu_4988_p2;
wire   [0:0] icmp_ln28_148_fu_4982_p2;
wire   [0:0] or_ln28_73_fu_4976_p2;
wire   [0:0] or_ln28_74_fu_4994_p2;
wire   [0:0] and_ln28_73_fu_5000_p2;
wire   [0:0] tmp_118_fu_1226_p2;
wire   [0:0] and_ln28_74_fu_5006_p2;
wire   [31:0] bitcast_ln28_75_fu_5021_p1;
wire   [31:0] bitcast_ln28_76_fu_5039_p1;
wire   [7:0] tmp_119_fu_5025_p4;
wire   [22:0] trunc_ln28_75_fu_5035_p1;
wire   [0:0] icmp_ln28_151_fu_5063_p2;
wire   [0:0] icmp_ln28_150_fu_5057_p2;
wire   [7:0] tmp_120_fu_5043_p4;
wire   [22:0] trunc_ln28_76_fu_5053_p1;
wire   [0:0] icmp_ln28_153_fu_5081_p2;
wire   [0:0] icmp_ln28_152_fu_5075_p2;
wire   [0:0] or_ln28_75_fu_5069_p2;
wire   [0:0] or_ln28_76_fu_5087_p2;
wire   [0:0] and_ln28_75_fu_5093_p2;
wire   [0:0] tmp_121_fu_1231_p2;
wire   [0:0] and_ln28_76_fu_5099_p2;
wire   [31:0] bitcast_ln28_78_fu_5114_p1;
wire   [31:0] bitcast_ln28_79_fu_5132_p1;
wire   [7:0] tmp_124_fu_5118_p4;
wire   [22:0] trunc_ln28_78_fu_5128_p1;
wire   [0:0] icmp_ln28_157_fu_5155_p2;
wire   [0:0] icmp_ln28_156_fu_5149_p2;
wire   [7:0] tmp_125_fu_5135_p4;
wire   [22:0] trunc_ln28_79_fu_5145_p1;
wire   [0:0] icmp_ln28_159_fu_5173_p2;
wire   [0:0] icmp_ln28_158_fu_5167_p2;
wire   [0:0] or_ln28_78_fu_5161_p2;
wire   [0:0] or_ln28_79_fu_5179_p2;
wire   [0:0] and_ln28_78_fu_5185_p2;
wire   [0:0] tmp_126_fu_1236_p2;
wire   [0:0] and_ln28_79_fu_5191_p2;
wire   [31:0] bitcast_ln28_80_fu_5205_p1;
wire   [31:0] bitcast_ln28_81_fu_5223_p1;
wire   [7:0] tmp_127_fu_5209_p4;
wire   [22:0] trunc_ln28_80_fu_5219_p1;
wire   [0:0] icmp_ln28_161_fu_5247_p2;
wire   [0:0] icmp_ln28_160_fu_5241_p2;
wire   [7:0] tmp_128_fu_5227_p4;
wire   [22:0] trunc_ln28_81_fu_5237_p1;
wire   [0:0] icmp_ln28_163_fu_5265_p2;
wire   [0:0] icmp_ln28_162_fu_5259_p2;
wire   [0:0] or_ln28_80_fu_5253_p2;
wire   [0:0] or_ln28_81_fu_5271_p2;
wire   [0:0] and_ln28_80_fu_5277_p2;
wire   [0:0] tmp_129_fu_1241_p2;
wire   [0:0] and_ln28_81_fu_5283_p2;
wire   [31:0] bitcast_ln28_82_fu_5298_p1;
wire   [31:0] bitcast_ln28_83_fu_5316_p1;
wire   [7:0] tmp_130_fu_5302_p4;
wire   [22:0] trunc_ln28_82_fu_5312_p1;
wire   [0:0] icmp_ln28_165_fu_5340_p2;
wire   [0:0] icmp_ln28_164_fu_5334_p2;
wire   [7:0] tmp_131_fu_5320_p4;
wire   [22:0] trunc_ln28_83_fu_5330_p1;
wire   [0:0] icmp_ln28_167_fu_5358_p2;
wire   [0:0] icmp_ln28_166_fu_5352_p2;
wire   [0:0] or_ln28_82_fu_5346_p2;
wire   [0:0] or_ln28_83_fu_5364_p2;
wire   [0:0] and_ln28_82_fu_5370_p2;
wire   [0:0] tmp_132_fu_1246_p2;
wire   [0:0] and_ln28_83_fu_5376_p2;
wire   [31:0] bitcast_ln28_85_fu_5391_p1;
wire   [31:0] bitcast_ln28_86_fu_5409_p1;
wire   [7:0] tmp_135_fu_5395_p4;
wire   [22:0] trunc_ln28_85_fu_5405_p1;
wire   [0:0] icmp_ln28_171_fu_5432_p2;
wire   [0:0] icmp_ln28_170_fu_5426_p2;
wire   [7:0] tmp_136_fu_5412_p4;
wire   [22:0] trunc_ln28_86_fu_5422_p1;
wire   [0:0] icmp_ln28_173_fu_5450_p2;
wire   [0:0] icmp_ln28_172_fu_5444_p2;
wire   [0:0] or_ln28_85_fu_5438_p2;
wire   [0:0] or_ln28_86_fu_5456_p2;
wire   [0:0] and_ln28_85_fu_5462_p2;
wire   [0:0] tmp_137_fu_1251_p2;
wire   [0:0] and_ln28_86_fu_5468_p2;
wire   [31:0] bitcast_ln28_87_fu_5482_p1;
wire   [31:0] bitcast_ln28_88_fu_5500_p1;
wire   [7:0] tmp_138_fu_5486_p4;
wire   [22:0] trunc_ln28_87_fu_5496_p1;
wire   [0:0] icmp_ln28_175_fu_5524_p2;
wire   [0:0] icmp_ln28_174_fu_5518_p2;
wire   [7:0] tmp_139_fu_5504_p4;
wire   [22:0] trunc_ln28_88_fu_5514_p1;
wire   [0:0] icmp_ln28_177_fu_5542_p2;
wire   [0:0] icmp_ln28_176_fu_5536_p2;
wire   [0:0] or_ln28_87_fu_5530_p2;
wire   [0:0] or_ln28_88_fu_5548_p2;
wire   [0:0] and_ln28_87_fu_5554_p2;
wire   [0:0] tmp_140_fu_1256_p2;
wire   [0:0] and_ln28_88_fu_5560_p2;
wire   [31:0] bitcast_ln28_89_fu_5575_p1;
wire   [31:0] bitcast_ln28_90_fu_5593_p1;
wire   [7:0] tmp_141_fu_5579_p4;
wire   [22:0] trunc_ln28_89_fu_5589_p1;
wire   [0:0] icmp_ln28_179_fu_5617_p2;
wire   [0:0] icmp_ln28_178_fu_5611_p2;
wire   [7:0] tmp_142_fu_5597_p4;
wire   [22:0] trunc_ln28_90_fu_5607_p1;
wire   [0:0] icmp_ln28_181_fu_5635_p2;
wire   [0:0] icmp_ln28_180_fu_5629_p2;
wire   [0:0] or_ln28_89_fu_5623_p2;
wire   [0:0] or_ln28_90_fu_5641_p2;
wire   [0:0] and_ln28_89_fu_5647_p2;
wire   [0:0] tmp_143_fu_1261_p2;
wire   [0:0] and_ln28_90_fu_5653_p2;
wire    ap_block_pp0_stage0_00001;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U1(
    .din0(conv_1_out_0_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_3_fu_993_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U2(
    .din0(conv_1_out_2_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_13_fu_999_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U3(
    .din0(conv_1_out_4_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_24_fu_1005_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U4(
    .din0(conv_1_out_6_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_35_fu_1011_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U5(
    .din0(conv_1_out_8_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_46_fu_1017_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U6(
    .din0(conv_1_out_10_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_57_fu_1023_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U7(
    .din0(conv_1_out_12_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_68_fu_1029_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U8(
    .din0(conv_1_out_14_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_79_fu_1035_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U9(
    .din0(conv_1_out_16_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_90_fu_1041_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U10(
    .din0(conv_1_out_18_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_101_fu_1047_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U11(
    .din0(conv_1_out_20_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_112_fu_1053_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U12(
    .din0(conv_1_out_22_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_123_fu_1059_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U13(
    .din0(conv_1_out_24_q0),
    .din1(32'd8388608),
    .opcode(5'd2),
    .dout(tmp_134_fu_1065_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U14(
    .din0(conv_1_out_1_q0),
    .din1(select_ln28_reg_5848),
    .opcode(5'd2),
    .dout(tmp_6_fu_1071_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U15(
    .din0(conv_1_out_0_q1),
    .din1(select_ln28_1_fu_2150_p3),
    .opcode(5'd2),
    .dout(tmp_9_fu_1076_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U16(
    .din0(conv_1_out_1_q1),
    .din1(select_ln28_2_fu_2242_p3),
    .opcode(5'd2),
    .dout(tmp_11_fu_1081_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U17(
    .din0(conv_1_out_3_q0),
    .din1(select_ln28_4_reg_5985),
    .opcode(5'd2),
    .dout(tmp_16_fu_1086_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U18(
    .din0(conv_1_out_2_q1),
    .din1(select_ln28_5_fu_2427_p3),
    .opcode(5'd2),
    .dout(tmp_19_fu_1091_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U19(
    .din0(conv_1_out_3_q1),
    .din1(select_ln28_6_fu_2519_p3),
    .opcode(5'd2),
    .dout(tmp_22_fu_1096_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U20(
    .din0(conv_1_out_5_q0),
    .din1(select_ln28_8_reg_5992),
    .opcode(5'd2),
    .dout(tmp_27_fu_1101_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U21(
    .din0(conv_1_out_4_q1),
    .din1(select_ln28_9_fu_2704_p3),
    .opcode(5'd2),
    .dout(tmp_30_fu_1106_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U22(
    .din0(conv_1_out_5_q1),
    .din1(select_ln28_10_fu_2796_p3),
    .opcode(5'd2),
    .dout(tmp_33_fu_1111_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U23(
    .din0(conv_1_out_7_q0),
    .din1(select_ln28_12_reg_5999),
    .opcode(5'd2),
    .dout(tmp_38_fu_1116_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U24(
    .din0(conv_1_out_6_q1),
    .din1(select_ln28_13_fu_2981_p3),
    .opcode(5'd2),
    .dout(tmp_41_fu_1121_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U25(
    .din0(conv_1_out_7_q1),
    .din1(select_ln28_14_fu_3073_p3),
    .opcode(5'd2),
    .dout(tmp_44_fu_1126_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U26(
    .din0(conv_1_out_9_q0),
    .din1(select_ln28_16_reg_6006),
    .opcode(5'd2),
    .dout(tmp_49_fu_1131_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U27(
    .din0(conv_1_out_8_q1),
    .din1(select_ln28_17_fu_3258_p3),
    .opcode(5'd2),
    .dout(tmp_52_fu_1136_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U28(
    .din0(conv_1_out_9_q1),
    .din1(select_ln28_18_fu_3350_p3),
    .opcode(5'd2),
    .dout(tmp_55_fu_1141_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U29(
    .din0(conv_1_out_11_q0),
    .din1(select_ln28_20_reg_6013),
    .opcode(5'd2),
    .dout(tmp_60_fu_1146_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U30(
    .din0(conv_1_out_10_q1),
    .din1(select_ln28_21_fu_3535_p3),
    .opcode(5'd2),
    .dout(tmp_63_fu_1151_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U31(
    .din0(conv_1_out_11_q1),
    .din1(select_ln28_22_fu_3627_p3),
    .opcode(5'd2),
    .dout(tmp_66_fu_1156_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U32(
    .din0(conv_1_out_13_q0),
    .din1(select_ln28_24_reg_6020),
    .opcode(5'd2),
    .dout(tmp_71_fu_1161_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U33(
    .din0(conv_1_out_12_q1),
    .din1(select_ln28_25_fu_3812_p3),
    .opcode(5'd2),
    .dout(tmp_74_fu_1166_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U34(
    .din0(conv_1_out_13_q1),
    .din1(select_ln28_26_fu_3904_p3),
    .opcode(5'd2),
    .dout(tmp_77_fu_1171_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U35(
    .din0(conv_1_out_15_q0),
    .din1(select_ln28_28_reg_6027),
    .opcode(5'd2),
    .dout(tmp_82_fu_1176_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U36(
    .din0(conv_1_out_14_q1),
    .din1(select_ln28_29_fu_4089_p3),
    .opcode(5'd2),
    .dout(tmp_85_fu_1181_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U37(
    .din0(conv_1_out_15_q1),
    .din1(select_ln28_30_fu_4181_p3),
    .opcode(5'd2),
    .dout(tmp_88_fu_1186_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U38(
    .din0(conv_1_out_17_q0),
    .din1(select_ln28_32_reg_6034),
    .opcode(5'd2),
    .dout(tmp_93_fu_1191_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U39(
    .din0(conv_1_out_16_q1),
    .din1(select_ln28_33_fu_4366_p3),
    .opcode(5'd2),
    .dout(tmp_96_fu_1196_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U40(
    .din0(conv_1_out_17_q1),
    .din1(select_ln28_34_fu_4458_p3),
    .opcode(5'd2),
    .dout(tmp_99_fu_1201_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U41(
    .din0(conv_1_out_19_q0),
    .din1(select_ln28_36_reg_6041),
    .opcode(5'd2),
    .dout(tmp_104_fu_1206_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U42(
    .din0(conv_1_out_18_q1),
    .din1(select_ln28_37_fu_4643_p3),
    .opcode(5'd2),
    .dout(tmp_107_fu_1211_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U43(
    .din0(conv_1_out_19_q1),
    .din1(select_ln28_38_fu_4735_p3),
    .opcode(5'd2),
    .dout(tmp_110_fu_1216_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U44(
    .din0(conv_1_out_21_q0),
    .din1(select_ln28_40_reg_6048),
    .opcode(5'd2),
    .dout(tmp_115_fu_1221_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U45(
    .din0(conv_1_out_20_q1),
    .din1(select_ln28_41_fu_4920_p3),
    .opcode(5'd2),
    .dout(tmp_118_fu_1226_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U46(
    .din0(conv_1_out_21_q1),
    .din1(select_ln28_42_fu_5012_p3),
    .opcode(5'd2),
    .dout(tmp_121_fu_1231_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U47(
    .din0(conv_1_out_23_q0),
    .din1(select_ln28_44_reg_6055),
    .opcode(5'd2),
    .dout(tmp_126_fu_1236_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U48(
    .din0(conv_1_out_22_q1),
    .din1(select_ln28_45_fu_5197_p3),
    .opcode(5'd2),
    .dout(tmp_129_fu_1241_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U49(
    .din0(conv_1_out_23_q1),
    .din1(select_ln28_46_fu_5289_p3),
    .opcode(5'd2),
    .dout(tmp_132_fu_1246_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U50(
    .din0(conv_1_out_25_q0),
    .din1(select_ln28_48_reg_6062),
    .opcode(5'd2),
    .dout(tmp_137_fu_1251_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U51(
    .din0(conv_1_out_24_q1),
    .din1(select_ln28_49_fu_5474_p3),
    .opcode(5'd2),
    .dout(tmp_140_fu_1256_p2)
);

max_pool_1_fcmp_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool_1_fcmp_3bkb_U52(
    .din0(conv_1_out_25_q1),
    .din1(select_ln28_50_fu_5566_p3),
    .opcode(5'd2),
    .dout(tmp_143_fu_1261_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln10_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln10_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f_0_reg_969 <= f_reg_5672;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        f_0_reg_969 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_0_reg_981 <= r_reg_5691;
    end else if (((icmp_ln10_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        r_0_reg_981 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln35_reg_5778 <= add_ln35_fu_1343_p2;
        select_ln28_12_reg_5999 <= select_ln28_12_fu_1593_p3;
        select_ln28_16_reg_6006 <= select_ln28_16_fu_1643_p3;
        select_ln28_20_reg_6013 <= select_ln28_20_fu_1693_p3;
        select_ln28_24_reg_6020 <= select_ln28_24_fu_1743_p3;
        select_ln28_28_reg_6027 <= select_ln28_28_fu_1793_p3;
        select_ln28_32_reg_6034 <= select_ln28_32_fu_1843_p3;
        select_ln28_36_reg_6041 <= select_ln28_36_fu_1893_p3;
        select_ln28_40_reg_6048 <= select_ln28_40_fu_1943_p3;
        select_ln28_44_reg_6055 <= select_ln28_44_fu_1993_p3;
        select_ln28_48_reg_6062 <= select_ln28_48_fu_2043_p3;
        select_ln28_4_reg_5985 <= select_ln28_4_fu_1493_p3;
        select_ln28_8_reg_5992 <= select_ln28_8_fu_1543_p3;
        select_ln28_reg_5848 <= select_ln28_fu_1390_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_reg_5672 <= f_fu_1272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln13_reg_5687 <= icmp_ln13_fu_1286_p2;
        icmp_ln13_reg_5687_pp0_iter1_reg <= icmp_ln13_reg_5687;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_reg_5691 <= r_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln10_fu_1266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        zext_ln13_1_reg_5682[5 : 0] <= zext_ln13_1_fu_1282_p1[5 : 0];
        zext_ln13_reg_5677[5 : 0] <= zext_ln13_fu_1278_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_fu_1286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln28_reg_5696[9 : 0] <= zext_ln28_fu_1306_p1[9 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln13_fu_1286_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_1266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln13_reg_5687 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_r_0_phi_fu_985_p4 = r_reg_5691;
    end else begin
        ap_phi_mux_r_0_phi_fu_985_p4 = r_0_reg_981;
    end
end

always @ (*) begin
    if (((icmp_ln10_fu_1266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_0_ce0 = 1'b1;
    end else begin
        conv_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_0_ce1 = 1'b1;
    end else begin
        conv_1_out_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_10_ce0 = 1'b1;
    end else begin
        conv_1_out_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_10_ce1 = 1'b1;
    end else begin
        conv_1_out_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_11_ce0 = 1'b1;
    end else begin
        conv_1_out_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_11_ce1 = 1'b1;
    end else begin
        conv_1_out_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_12_ce0 = 1'b1;
    end else begin
        conv_1_out_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_12_ce1 = 1'b1;
    end else begin
        conv_1_out_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_13_ce0 = 1'b1;
    end else begin
        conv_1_out_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_13_ce1 = 1'b1;
    end else begin
        conv_1_out_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_14_ce0 = 1'b1;
    end else begin
        conv_1_out_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_14_ce1 = 1'b1;
    end else begin
        conv_1_out_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_15_ce0 = 1'b1;
    end else begin
        conv_1_out_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_15_ce1 = 1'b1;
    end else begin
        conv_1_out_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_16_ce0 = 1'b1;
    end else begin
        conv_1_out_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_16_ce1 = 1'b1;
    end else begin
        conv_1_out_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_17_ce0 = 1'b1;
    end else begin
        conv_1_out_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_17_ce1 = 1'b1;
    end else begin
        conv_1_out_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_18_ce0 = 1'b1;
    end else begin
        conv_1_out_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_18_ce1 = 1'b1;
    end else begin
        conv_1_out_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_19_ce0 = 1'b1;
    end else begin
        conv_1_out_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_19_ce1 = 1'b1;
    end else begin
        conv_1_out_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_1_ce0 = 1'b1;
    end else begin
        conv_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_1_ce1 = 1'b1;
    end else begin
        conv_1_out_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_20_ce0 = 1'b1;
    end else begin
        conv_1_out_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_20_ce1 = 1'b1;
    end else begin
        conv_1_out_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_21_ce0 = 1'b1;
    end else begin
        conv_1_out_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_21_ce1 = 1'b1;
    end else begin
        conv_1_out_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_22_ce0 = 1'b1;
    end else begin
        conv_1_out_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_22_ce1 = 1'b1;
    end else begin
        conv_1_out_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_23_ce0 = 1'b1;
    end else begin
        conv_1_out_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_23_ce1 = 1'b1;
    end else begin
        conv_1_out_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_24_ce0 = 1'b1;
    end else begin
        conv_1_out_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_24_ce1 = 1'b1;
    end else begin
        conv_1_out_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_25_ce0 = 1'b1;
    end else begin
        conv_1_out_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_25_ce1 = 1'b1;
    end else begin
        conv_1_out_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_2_ce0 = 1'b1;
    end else begin
        conv_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_2_ce1 = 1'b1;
    end else begin
        conv_1_out_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_3_ce0 = 1'b1;
    end else begin
        conv_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_3_ce1 = 1'b1;
    end else begin
        conv_1_out_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_4_ce0 = 1'b1;
    end else begin
        conv_1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_4_ce1 = 1'b1;
    end else begin
        conv_1_out_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_5_ce0 = 1'b1;
    end else begin
        conv_1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_5_ce1 = 1'b1;
    end else begin
        conv_1_out_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_6_ce0 = 1'b1;
    end else begin
        conv_1_out_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_6_ce1 = 1'b1;
    end else begin
        conv_1_out_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_7_ce0 = 1'b1;
    end else begin
        conv_1_out_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_7_ce1 = 1'b1;
    end else begin
        conv_1_out_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_8_ce0 = 1'b1;
    end else begin
        conv_1_out_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_8_ce1 = 1'b1;
    end else begin
        conv_1_out_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_9_ce0 = 1'b1;
    end else begin
        conv_1_out_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_1_out_9_ce1 = 1'b1;
    end else begin
        conv_1_out_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_0_ce0 = 1'b1;
    end else begin
        max_pool_1_out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_0_we0 = 1'b1;
    end else begin
        max_pool_1_out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_10_ce0 = 1'b1;
    end else begin
        max_pool_1_out_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_10_we0 = 1'b1;
    end else begin
        max_pool_1_out_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_11_ce0 = 1'b1;
    end else begin
        max_pool_1_out_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_11_we0 = 1'b1;
    end else begin
        max_pool_1_out_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_12_ce0 = 1'b1;
    end else begin
        max_pool_1_out_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_12_we0 = 1'b1;
    end else begin
        max_pool_1_out_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_1_ce0 = 1'b1;
    end else begin
        max_pool_1_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_1_we0 = 1'b1;
    end else begin
        max_pool_1_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_2_ce0 = 1'b1;
    end else begin
        max_pool_1_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_2_we0 = 1'b1;
    end else begin
        max_pool_1_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_3_ce0 = 1'b1;
    end else begin
        max_pool_1_out_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_3_we0 = 1'b1;
    end else begin
        max_pool_1_out_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_4_ce0 = 1'b1;
    end else begin
        max_pool_1_out_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_4_we0 = 1'b1;
    end else begin
        max_pool_1_out_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_5_ce0 = 1'b1;
    end else begin
        max_pool_1_out_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_5_we0 = 1'b1;
    end else begin
        max_pool_1_out_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_6_ce0 = 1'b1;
    end else begin
        max_pool_1_out_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_6_we0 = 1'b1;
    end else begin
        max_pool_1_out_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_7_ce0 = 1'b1;
    end else begin
        max_pool_1_out_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_7_we0 = 1'b1;
    end else begin
        max_pool_1_out_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_8_ce0 = 1'b1;
    end else begin
        max_pool_1_out_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_8_we0 = 1'b1;
    end else begin
        max_pool_1_out_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_9_ce0 = 1'b1;
    end else begin
        max_pool_1_out_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln13_reg_5687_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        max_pool_1_out_9_we0 = 1'b1;
    end else begin
        max_pool_1_out_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln10_fu_1266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln13_fu_1286_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln13_fu_1286_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_fu_1416_p2 = (zext_ln28_1_fu_1412_p1 + zext_ln13_reg_5677);

assign add_ln35_fu_1343_p2 = (zext_ln35_fu_1339_p1 + zext_ln13_1_reg_5682);

assign and_ln28_10_fu_2507_p2 = (or_ln28_11_fu_2501_p2 & or_ln28_10_fu_2483_p2);

assign and_ln28_11_fu_2513_p2 = (tmp_19_fu_1091_p2 & and_ln28_10_fu_2507_p2);

assign and_ln28_12_fu_2600_p2 = (or_ln28_13_fu_2594_p2 & or_ln28_12_fu_2576_p2);

assign and_ln28_13_fu_2606_p2 = (tmp_22_fu_1096_p2 & and_ln28_12_fu_2600_p2);

assign and_ln28_14_fu_1537_p2 = (tmp_24_fu_1005_p2 & or_ln28_14_fu_1531_p2);

assign and_ln28_15_fu_2692_p2 = (or_ln28_16_fu_2686_p2 & or_ln28_15_fu_2668_p2);

assign and_ln28_16_fu_2698_p2 = (tmp_27_fu_1101_p2 & and_ln28_15_fu_2692_p2);

assign and_ln28_17_fu_2784_p2 = (or_ln28_18_fu_2778_p2 & or_ln28_17_fu_2760_p2);

assign and_ln28_18_fu_2790_p2 = (tmp_30_fu_1106_p2 & and_ln28_17_fu_2784_p2);

assign and_ln28_19_fu_2877_p2 = (or_ln28_20_fu_2871_p2 & or_ln28_19_fu_2853_p2);

assign and_ln28_1_fu_2138_p2 = (or_ln28_2_fu_2132_p2 & or_ln28_1_fu_2114_p2);

assign and_ln28_20_fu_2883_p2 = (tmp_33_fu_1111_p2 & and_ln28_19_fu_2877_p2);

assign and_ln28_21_fu_1587_p2 = (tmp_35_fu_1011_p2 & or_ln28_21_fu_1581_p2);

assign and_ln28_22_fu_2969_p2 = (or_ln28_23_fu_2963_p2 & or_ln28_22_fu_2945_p2);

assign and_ln28_23_fu_2975_p2 = (tmp_38_fu_1116_p2 & and_ln28_22_fu_2969_p2);

assign and_ln28_24_fu_3061_p2 = (or_ln28_25_fu_3055_p2 & or_ln28_24_fu_3037_p2);

assign and_ln28_25_fu_3067_p2 = (tmp_41_fu_1121_p2 & and_ln28_24_fu_3061_p2);

assign and_ln28_26_fu_3154_p2 = (or_ln28_27_fu_3148_p2 & or_ln28_26_fu_3130_p2);

assign and_ln28_27_fu_3160_p2 = (tmp_44_fu_1126_p2 & and_ln28_26_fu_3154_p2);

assign and_ln28_28_fu_1637_p2 = (tmp_46_fu_1017_p2 & or_ln28_28_fu_1631_p2);

assign and_ln28_29_fu_3246_p2 = (or_ln28_30_fu_3240_p2 & or_ln28_29_fu_3222_p2);

assign and_ln28_2_fu_2144_p2 = (tmp_6_fu_1071_p2 & and_ln28_1_fu_2138_p2);

assign and_ln28_30_fu_3252_p2 = (tmp_49_fu_1131_p2 & and_ln28_29_fu_3246_p2);

assign and_ln28_31_fu_3338_p2 = (or_ln28_32_fu_3332_p2 & or_ln28_31_fu_3314_p2);

assign and_ln28_32_fu_3344_p2 = (tmp_52_fu_1136_p2 & and_ln28_31_fu_3338_p2);

assign and_ln28_33_fu_3431_p2 = (or_ln28_34_fu_3425_p2 & or_ln28_33_fu_3407_p2);

assign and_ln28_34_fu_3437_p2 = (tmp_55_fu_1141_p2 & and_ln28_33_fu_3431_p2);

assign and_ln28_35_fu_1687_p2 = (tmp_57_fu_1023_p2 & or_ln28_35_fu_1681_p2);

assign and_ln28_36_fu_3523_p2 = (or_ln28_37_fu_3517_p2 & or_ln28_36_fu_3499_p2);

assign and_ln28_37_fu_3529_p2 = (tmp_60_fu_1146_p2 & and_ln28_36_fu_3523_p2);

assign and_ln28_38_fu_3615_p2 = (or_ln28_39_fu_3609_p2 & or_ln28_38_fu_3591_p2);

assign and_ln28_39_fu_3621_p2 = (tmp_63_fu_1151_p2 & and_ln28_38_fu_3615_p2);

assign and_ln28_3_fu_2230_p2 = (or_ln28_4_fu_2224_p2 & or_ln28_3_fu_2206_p2);

assign and_ln28_40_fu_3708_p2 = (or_ln28_41_fu_3702_p2 & or_ln28_40_fu_3684_p2);

assign and_ln28_41_fu_3714_p2 = (tmp_66_fu_1156_p2 & and_ln28_40_fu_3708_p2);

assign and_ln28_42_fu_1737_p2 = (tmp_68_fu_1029_p2 & or_ln28_42_fu_1731_p2);

assign and_ln28_43_fu_3800_p2 = (or_ln28_44_fu_3794_p2 & or_ln28_43_fu_3776_p2);

assign and_ln28_44_fu_3806_p2 = (tmp_71_fu_1161_p2 & and_ln28_43_fu_3800_p2);

assign and_ln28_45_fu_3892_p2 = (or_ln28_46_fu_3886_p2 & or_ln28_45_fu_3868_p2);

assign and_ln28_46_fu_3898_p2 = (tmp_74_fu_1166_p2 & and_ln28_45_fu_3892_p2);

assign and_ln28_47_fu_3985_p2 = (or_ln28_48_fu_3979_p2 & or_ln28_47_fu_3961_p2);

assign and_ln28_48_fu_3991_p2 = (tmp_77_fu_1171_p2 & and_ln28_47_fu_3985_p2);

assign and_ln28_49_fu_1787_p2 = (tmp_79_fu_1035_p2 & or_ln28_49_fu_1781_p2);

assign and_ln28_4_fu_2236_p2 = (tmp_9_fu_1076_p2 & and_ln28_3_fu_2230_p2);

assign and_ln28_50_fu_4077_p2 = (or_ln28_51_fu_4071_p2 & or_ln28_50_fu_4053_p2);

assign and_ln28_51_fu_4083_p2 = (tmp_82_fu_1176_p2 & and_ln28_50_fu_4077_p2);

assign and_ln28_52_fu_4169_p2 = (or_ln28_53_fu_4163_p2 & or_ln28_52_fu_4145_p2);

assign and_ln28_53_fu_4175_p2 = (tmp_85_fu_1181_p2 & and_ln28_52_fu_4169_p2);

assign and_ln28_54_fu_4262_p2 = (or_ln28_55_fu_4256_p2 & or_ln28_54_fu_4238_p2);

assign and_ln28_55_fu_4268_p2 = (tmp_88_fu_1186_p2 & and_ln28_54_fu_4262_p2);

assign and_ln28_56_fu_1837_p2 = (tmp_90_fu_1041_p2 & or_ln28_56_fu_1831_p2);

assign and_ln28_57_fu_4354_p2 = (or_ln28_58_fu_4348_p2 & or_ln28_57_fu_4330_p2);

assign and_ln28_58_fu_4360_p2 = (tmp_93_fu_1191_p2 & and_ln28_57_fu_4354_p2);

assign and_ln28_59_fu_4446_p2 = (or_ln28_60_fu_4440_p2 & or_ln28_59_fu_4422_p2);

assign and_ln28_5_fu_2323_p2 = (or_ln28_6_fu_2317_p2 & or_ln28_5_fu_2299_p2);

assign and_ln28_60_fu_4452_p2 = (tmp_96_fu_1196_p2 & and_ln28_59_fu_4446_p2);

assign and_ln28_61_fu_4539_p2 = (or_ln28_62_fu_4533_p2 & or_ln28_61_fu_4515_p2);

assign and_ln28_62_fu_4545_p2 = (tmp_99_fu_1201_p2 & and_ln28_61_fu_4539_p2);

assign and_ln28_63_fu_1887_p2 = (tmp_101_fu_1047_p2 & or_ln28_63_fu_1881_p2);

assign and_ln28_64_fu_4631_p2 = (or_ln28_65_fu_4625_p2 & or_ln28_64_fu_4607_p2);

assign and_ln28_65_fu_4637_p2 = (tmp_104_fu_1206_p2 & and_ln28_64_fu_4631_p2);

assign and_ln28_66_fu_4723_p2 = (or_ln28_67_fu_4717_p2 & or_ln28_66_fu_4699_p2);

assign and_ln28_67_fu_4729_p2 = (tmp_107_fu_1211_p2 & and_ln28_66_fu_4723_p2);

assign and_ln28_68_fu_4816_p2 = (or_ln28_69_fu_4810_p2 & or_ln28_68_fu_4792_p2);

assign and_ln28_69_fu_4822_p2 = (tmp_110_fu_1216_p2 & and_ln28_68_fu_4816_p2);

assign and_ln28_6_fu_2329_p2 = (tmp_11_fu_1081_p2 & and_ln28_5_fu_2323_p2);

assign and_ln28_70_fu_1937_p2 = (tmp_112_fu_1053_p2 & or_ln28_70_fu_1931_p2);

assign and_ln28_71_fu_4908_p2 = (or_ln28_72_fu_4902_p2 & or_ln28_71_fu_4884_p2);

assign and_ln28_72_fu_4914_p2 = (tmp_115_fu_1221_p2 & and_ln28_71_fu_4908_p2);

assign and_ln28_73_fu_5000_p2 = (or_ln28_74_fu_4994_p2 & or_ln28_73_fu_4976_p2);

assign and_ln28_74_fu_5006_p2 = (tmp_118_fu_1226_p2 & and_ln28_73_fu_5000_p2);

assign and_ln28_75_fu_5093_p2 = (or_ln28_76_fu_5087_p2 & or_ln28_75_fu_5069_p2);

assign and_ln28_76_fu_5099_p2 = (tmp_121_fu_1231_p2 & and_ln28_75_fu_5093_p2);

assign and_ln28_77_fu_1987_p2 = (tmp_123_fu_1059_p2 & or_ln28_77_fu_1981_p2);

assign and_ln28_78_fu_5185_p2 = (or_ln28_79_fu_5179_p2 & or_ln28_78_fu_5161_p2);

assign and_ln28_79_fu_5191_p2 = (tmp_126_fu_1236_p2 & and_ln28_78_fu_5185_p2);

assign and_ln28_7_fu_1487_p2 = (tmp_13_fu_999_p2 & or_ln28_7_fu_1481_p2);

assign and_ln28_80_fu_5277_p2 = (or_ln28_81_fu_5271_p2 & or_ln28_80_fu_5253_p2);

assign and_ln28_81_fu_5283_p2 = (tmp_129_fu_1241_p2 & and_ln28_80_fu_5277_p2);

assign and_ln28_82_fu_5370_p2 = (or_ln28_83_fu_5364_p2 & or_ln28_82_fu_5346_p2);

assign and_ln28_83_fu_5376_p2 = (tmp_132_fu_1246_p2 & and_ln28_82_fu_5370_p2);

assign and_ln28_84_fu_2037_p2 = (tmp_134_fu_1065_p2 & or_ln28_84_fu_2031_p2);

assign and_ln28_85_fu_5462_p2 = (or_ln28_86_fu_5456_p2 & or_ln28_85_fu_5438_p2);

assign and_ln28_86_fu_5468_p2 = (tmp_137_fu_1251_p2 & and_ln28_85_fu_5462_p2);

assign and_ln28_87_fu_5554_p2 = (or_ln28_88_fu_5548_p2 & or_ln28_87_fu_5530_p2);

assign and_ln28_88_fu_5560_p2 = (tmp_140_fu_1256_p2 & and_ln28_87_fu_5554_p2);

assign and_ln28_89_fu_5647_p2 = (or_ln28_90_fu_5641_p2 & or_ln28_89_fu_5623_p2);

assign and_ln28_8_fu_2415_p2 = (or_ln28_9_fu_2409_p2 & or_ln28_8_fu_2391_p2);

assign and_ln28_90_fu_5653_p2 = (tmp_143_fu_1261_p2 & and_ln28_89_fu_5647_p2);

assign and_ln28_9_fu_2421_p2 = (tmp_16_fu_1086_p2 & and_ln28_8_fu_2415_p2);

assign and_ln28_fu_1384_p2 = (tmp_3_fu_993_p2 & or_ln28_fu_1378_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln28_10_fu_2435_p1 = conv_1_out_2_q1;

assign bitcast_ln28_11_fu_2453_p1 = select_ln28_5_fu_2427_p3;

assign bitcast_ln28_12_fu_2528_p1 = conv_1_out_3_q1;

assign bitcast_ln28_13_fu_2546_p1 = select_ln28_6_fu_2519_p3;

assign bitcast_ln28_14_fu_1501_p1 = conv_1_out_4_q0;

assign bitcast_ln28_15_fu_2621_p1 = conv_1_out_5_q0;

assign bitcast_ln28_16_fu_2639_p1 = select_ln28_8_reg_5992;

assign bitcast_ln28_17_fu_2712_p1 = conv_1_out_4_q1;

assign bitcast_ln28_18_fu_2730_p1 = select_ln28_9_fu_2704_p3;

assign bitcast_ln28_19_fu_2805_p1 = conv_1_out_5_q1;

assign bitcast_ln28_1_fu_2067_p1 = conv_1_out_1_q0;

assign bitcast_ln28_20_fu_2823_p1 = select_ln28_10_fu_2796_p3;

assign bitcast_ln28_21_fu_1551_p1 = conv_1_out_6_q0;

assign bitcast_ln28_22_fu_2898_p1 = conv_1_out_7_q0;

assign bitcast_ln28_23_fu_2916_p1 = select_ln28_12_reg_5999;

assign bitcast_ln28_24_fu_2989_p1 = conv_1_out_6_q1;

assign bitcast_ln28_25_fu_3007_p1 = select_ln28_13_fu_2981_p3;

assign bitcast_ln28_26_fu_3082_p1 = conv_1_out_7_q1;

assign bitcast_ln28_27_fu_3100_p1 = select_ln28_14_fu_3073_p3;

assign bitcast_ln28_28_fu_1601_p1 = conv_1_out_8_q0;

assign bitcast_ln28_29_fu_3175_p1 = conv_1_out_9_q0;

assign bitcast_ln28_2_fu_2085_p1 = select_ln28_reg_5848;

assign bitcast_ln28_30_fu_3193_p1 = select_ln28_16_reg_6006;

assign bitcast_ln28_31_fu_3266_p1 = conv_1_out_8_q1;

assign bitcast_ln28_32_fu_3284_p1 = select_ln28_17_fu_3258_p3;

assign bitcast_ln28_33_fu_3359_p1 = conv_1_out_9_q1;

assign bitcast_ln28_34_fu_3377_p1 = select_ln28_18_fu_3350_p3;

assign bitcast_ln28_35_fu_1651_p1 = conv_1_out_10_q0;

assign bitcast_ln28_36_fu_3452_p1 = conv_1_out_11_q0;

assign bitcast_ln28_37_fu_3470_p1 = select_ln28_20_reg_6013;

assign bitcast_ln28_38_fu_3543_p1 = conv_1_out_10_q1;

assign bitcast_ln28_39_fu_3561_p1 = select_ln28_21_fu_3535_p3;

assign bitcast_ln28_3_fu_2158_p1 = conv_1_out_0_q1;

assign bitcast_ln28_40_fu_3636_p1 = conv_1_out_11_q1;

assign bitcast_ln28_41_fu_3654_p1 = select_ln28_22_fu_3627_p3;

assign bitcast_ln28_42_fu_1701_p1 = conv_1_out_12_q0;

assign bitcast_ln28_43_fu_3729_p1 = conv_1_out_13_q0;

assign bitcast_ln28_44_fu_3747_p1 = select_ln28_24_reg_6020;

assign bitcast_ln28_45_fu_3820_p1 = conv_1_out_12_q1;

assign bitcast_ln28_46_fu_3838_p1 = select_ln28_25_fu_3812_p3;

assign bitcast_ln28_47_fu_3913_p1 = conv_1_out_13_q1;

assign bitcast_ln28_48_fu_3931_p1 = select_ln28_26_fu_3904_p3;

assign bitcast_ln28_49_fu_1751_p1 = conv_1_out_14_q0;

assign bitcast_ln28_4_fu_2176_p1 = select_ln28_1_fu_2150_p3;

assign bitcast_ln28_50_fu_4006_p1 = conv_1_out_15_q0;

assign bitcast_ln28_51_fu_4024_p1 = select_ln28_28_reg_6027;

assign bitcast_ln28_52_fu_4097_p1 = conv_1_out_14_q1;

assign bitcast_ln28_53_fu_4115_p1 = select_ln28_29_fu_4089_p3;

assign bitcast_ln28_54_fu_4190_p1 = conv_1_out_15_q1;

assign bitcast_ln28_55_fu_4208_p1 = select_ln28_30_fu_4181_p3;

assign bitcast_ln28_56_fu_1801_p1 = conv_1_out_16_q0;

assign bitcast_ln28_57_fu_4283_p1 = conv_1_out_17_q0;

assign bitcast_ln28_58_fu_4301_p1 = select_ln28_32_reg_6034;

assign bitcast_ln28_59_fu_4374_p1 = conv_1_out_16_q1;

assign bitcast_ln28_5_fu_2251_p1 = conv_1_out_1_q1;

assign bitcast_ln28_60_fu_4392_p1 = select_ln28_33_fu_4366_p3;

assign bitcast_ln28_61_fu_4467_p1 = conv_1_out_17_q1;

assign bitcast_ln28_62_fu_4485_p1 = select_ln28_34_fu_4458_p3;

assign bitcast_ln28_63_fu_1851_p1 = conv_1_out_18_q0;

assign bitcast_ln28_64_fu_4560_p1 = conv_1_out_19_q0;

assign bitcast_ln28_65_fu_4578_p1 = select_ln28_36_reg_6041;

assign bitcast_ln28_66_fu_4651_p1 = conv_1_out_18_q1;

assign bitcast_ln28_67_fu_4669_p1 = select_ln28_37_fu_4643_p3;

assign bitcast_ln28_68_fu_4744_p1 = conv_1_out_19_q1;

assign bitcast_ln28_69_fu_4762_p1 = select_ln28_38_fu_4735_p3;

assign bitcast_ln28_6_fu_2269_p1 = select_ln28_2_fu_2242_p3;

assign bitcast_ln28_70_fu_1901_p1 = conv_1_out_20_q0;

assign bitcast_ln28_71_fu_4837_p1 = conv_1_out_21_q0;

assign bitcast_ln28_72_fu_4855_p1 = select_ln28_40_reg_6048;

assign bitcast_ln28_73_fu_4928_p1 = conv_1_out_20_q1;

assign bitcast_ln28_74_fu_4946_p1 = select_ln28_41_fu_4920_p3;

assign bitcast_ln28_75_fu_5021_p1 = conv_1_out_21_q1;

assign bitcast_ln28_76_fu_5039_p1 = select_ln28_42_fu_5012_p3;

assign bitcast_ln28_77_fu_1951_p1 = conv_1_out_22_q0;

assign bitcast_ln28_78_fu_5114_p1 = conv_1_out_23_q0;

assign bitcast_ln28_79_fu_5132_p1 = select_ln28_44_reg_6055;

assign bitcast_ln28_7_fu_1451_p1 = conv_1_out_2_q0;

assign bitcast_ln28_80_fu_5205_p1 = conv_1_out_22_q1;

assign bitcast_ln28_81_fu_5223_p1 = select_ln28_45_fu_5197_p3;

assign bitcast_ln28_82_fu_5298_p1 = conv_1_out_23_q1;

assign bitcast_ln28_83_fu_5316_p1 = select_ln28_46_fu_5289_p3;

assign bitcast_ln28_84_fu_2001_p1 = conv_1_out_24_q0;

assign bitcast_ln28_85_fu_5391_p1 = conv_1_out_25_q0;

assign bitcast_ln28_86_fu_5409_p1 = select_ln28_48_reg_6062;

assign bitcast_ln28_87_fu_5482_p1 = conv_1_out_24_q1;

assign bitcast_ln28_88_fu_5500_p1 = select_ln28_49_fu_5474_p3;

assign bitcast_ln28_89_fu_5575_p1 = conv_1_out_25_q1;

assign bitcast_ln28_8_fu_2344_p1 = conv_1_out_3_q0;

assign bitcast_ln28_90_fu_5593_p1 = select_ln28_50_fu_5566_p3;

assign bitcast_ln28_9_fu_2362_p1 = select_ln28_4_reg_5985;

assign bitcast_ln28_fu_1348_p1 = conv_1_out_0_q0;

assign conv_1_out_0_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_0_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_10_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_10_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_11_address0 = zext_ln28_reg_5696;

assign conv_1_out_11_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_12_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_12_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_13_address0 = zext_ln28_reg_5696;

assign conv_1_out_13_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_14_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_14_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_15_address0 = zext_ln28_reg_5696;

assign conv_1_out_15_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_16_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_16_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_17_address0 = zext_ln28_reg_5696;

assign conv_1_out_17_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_18_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_18_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_19_address0 = zext_ln28_reg_5696;

assign conv_1_out_19_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_1_address0 = zext_ln28_reg_5696;

assign conv_1_out_1_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_20_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_20_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_21_address0 = zext_ln28_reg_5696;

assign conv_1_out_21_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_22_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_22_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_23_address0 = zext_ln28_reg_5696;

assign conv_1_out_23_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_24_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_24_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_25_address0 = zext_ln28_reg_5696;

assign conv_1_out_25_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_2_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_2_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_3_address0 = zext_ln28_reg_5696;

assign conv_1_out_3_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_4_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_4_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_5_address0 = zext_ln28_reg_5696;

assign conv_1_out_5_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_6_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_6_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_7_address0 = zext_ln28_reg_5696;

assign conv_1_out_7_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_8_address0 = zext_ln28_fu_1306_p1;

assign conv_1_out_8_address1 = zext_ln28_2_fu_1421_p1;

assign conv_1_out_9_address0 = zext_ln28_reg_5696;

assign conv_1_out_9_address1 = zext_ln28_2_fu_1421_p1;

assign f_fu_1272_p2 = (f_0_reg_969 + 6'd1);

assign icmp_ln10_fu_1266_p2 = ((f_0_reg_969 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln13_fu_1286_p2 = ((ap_phi_mux_r_0_phi_fu_985_p4 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln28_100_fu_4041_p2 = ((tmp_80_fu_4010_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_101_fu_4047_p2 = ((trunc_ln28_50_fu_4020_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_102_fu_4059_p2 = ((tmp_81_fu_4027_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_103_fu_4065_p2 = ((trunc_ln28_51_fu_4037_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_104_fu_4133_p2 = ((tmp_83_fu_4101_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_105_fu_4139_p2 = ((trunc_ln28_52_fu_4111_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_106_fu_4151_p2 = ((tmp_84_fu_4119_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_107_fu_4157_p2 = ((trunc_ln28_53_fu_4129_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_108_fu_4226_p2 = ((tmp_86_fu_4194_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_109_fu_4232_p2 = ((trunc_ln28_54_fu_4204_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_10_fu_2287_p2 = ((tmp_s_fu_2255_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_110_fu_4244_p2 = ((tmp_87_fu_4212_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_111_fu_4250_p2 = ((trunc_ln28_55_fu_4222_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_112_fu_1819_p2 = ((tmp_89_fu_1805_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_113_fu_1825_p2 = ((trunc_ln28_56_fu_1815_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_114_fu_4318_p2 = ((tmp_91_fu_4287_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_115_fu_4324_p2 = ((trunc_ln28_57_fu_4297_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_116_fu_4336_p2 = ((tmp_92_fu_4304_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_117_fu_4342_p2 = ((trunc_ln28_58_fu_4314_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_118_fu_4410_p2 = ((tmp_94_fu_4378_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_119_fu_4416_p2 = ((trunc_ln28_59_fu_4388_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_11_fu_2293_p2 = ((trunc_ln28_5_fu_2265_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_120_fu_4428_p2 = ((tmp_95_fu_4396_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_121_fu_4434_p2 = ((trunc_ln28_60_fu_4406_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_122_fu_4503_p2 = ((tmp_97_fu_4471_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_123_fu_4509_p2 = ((trunc_ln28_61_fu_4481_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_124_fu_4521_p2 = ((tmp_98_fu_4489_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_125_fu_4527_p2 = ((trunc_ln28_62_fu_4499_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_126_fu_1869_p2 = ((tmp_100_fu_1855_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_127_fu_1875_p2 = ((trunc_ln28_63_fu_1865_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_128_fu_4595_p2 = ((tmp_102_fu_4564_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_129_fu_4601_p2 = ((trunc_ln28_64_fu_4574_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_12_fu_2305_p2 = ((tmp_10_fu_2273_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_130_fu_4613_p2 = ((tmp_103_fu_4581_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_131_fu_4619_p2 = ((trunc_ln28_65_fu_4591_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_132_fu_4687_p2 = ((tmp_105_fu_4655_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_133_fu_4693_p2 = ((trunc_ln28_66_fu_4665_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_134_fu_4705_p2 = ((tmp_106_fu_4673_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_135_fu_4711_p2 = ((trunc_ln28_67_fu_4683_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_136_fu_4780_p2 = ((tmp_108_fu_4748_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_137_fu_4786_p2 = ((trunc_ln28_68_fu_4758_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_138_fu_4798_p2 = ((tmp_109_fu_4766_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_139_fu_4804_p2 = ((trunc_ln28_69_fu_4776_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_13_fu_2311_p2 = ((trunc_ln28_6_fu_2283_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_140_fu_1919_p2 = ((tmp_111_fu_1905_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_141_fu_1925_p2 = ((trunc_ln28_70_fu_1915_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_142_fu_4872_p2 = ((tmp_113_fu_4841_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_143_fu_4878_p2 = ((trunc_ln28_71_fu_4851_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_144_fu_4890_p2 = ((tmp_114_fu_4858_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_145_fu_4896_p2 = ((trunc_ln28_72_fu_4868_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_146_fu_4964_p2 = ((tmp_116_fu_4932_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_147_fu_4970_p2 = ((trunc_ln28_73_fu_4942_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_148_fu_4982_p2 = ((tmp_117_fu_4950_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_149_fu_4988_p2 = ((trunc_ln28_74_fu_4960_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_14_fu_1469_p2 = ((tmp_12_fu_1455_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_150_fu_5057_p2 = ((tmp_119_fu_5025_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_151_fu_5063_p2 = ((trunc_ln28_75_fu_5035_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_152_fu_5075_p2 = ((tmp_120_fu_5043_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_153_fu_5081_p2 = ((trunc_ln28_76_fu_5053_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_154_fu_1969_p2 = ((tmp_122_fu_1955_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_155_fu_1975_p2 = ((trunc_ln28_77_fu_1965_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_156_fu_5149_p2 = ((tmp_124_fu_5118_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_157_fu_5155_p2 = ((trunc_ln28_78_fu_5128_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_158_fu_5167_p2 = ((tmp_125_fu_5135_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_159_fu_5173_p2 = ((trunc_ln28_79_fu_5145_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_15_fu_1475_p2 = ((trunc_ln28_7_fu_1465_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_160_fu_5241_p2 = ((tmp_127_fu_5209_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_161_fu_5247_p2 = ((trunc_ln28_80_fu_5219_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_162_fu_5259_p2 = ((tmp_128_fu_5227_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_163_fu_5265_p2 = ((trunc_ln28_81_fu_5237_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_164_fu_5334_p2 = ((tmp_130_fu_5302_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_165_fu_5340_p2 = ((trunc_ln28_82_fu_5312_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_166_fu_5352_p2 = ((tmp_131_fu_5320_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_167_fu_5358_p2 = ((trunc_ln28_83_fu_5330_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_168_fu_2019_p2 = ((tmp_133_fu_2005_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_169_fu_2025_p2 = ((trunc_ln28_84_fu_2015_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_16_fu_2379_p2 = ((tmp_14_fu_2348_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_170_fu_5426_p2 = ((tmp_135_fu_5395_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_171_fu_5432_p2 = ((trunc_ln28_85_fu_5405_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_172_fu_5444_p2 = ((tmp_136_fu_5412_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_173_fu_5450_p2 = ((trunc_ln28_86_fu_5422_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_174_fu_5518_p2 = ((tmp_138_fu_5486_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_175_fu_5524_p2 = ((trunc_ln28_87_fu_5496_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_176_fu_5536_p2 = ((tmp_139_fu_5504_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_177_fu_5542_p2 = ((trunc_ln28_88_fu_5514_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_178_fu_5611_p2 = ((tmp_141_fu_5579_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_179_fu_5617_p2 = ((trunc_ln28_89_fu_5589_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_17_fu_2385_p2 = ((trunc_ln28_8_fu_2358_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_180_fu_5629_p2 = ((tmp_142_fu_5597_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_181_fu_5635_p2 = ((trunc_ln28_90_fu_5607_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_18_fu_2397_p2 = ((tmp_15_fu_2365_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_19_fu_2403_p2 = ((trunc_ln28_9_fu_2375_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_1_fu_1372_p2 = ((trunc_ln28_fu_1362_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_20_fu_2471_p2 = ((tmp_17_fu_2439_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_21_fu_2477_p2 = ((trunc_ln28_10_fu_2449_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_22_fu_2489_p2 = ((tmp_18_fu_2457_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_23_fu_2495_p2 = ((trunc_ln28_11_fu_2467_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_24_fu_2564_p2 = ((tmp_20_fu_2532_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_25_fu_2570_p2 = ((trunc_ln28_12_fu_2542_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_26_fu_2582_p2 = ((tmp_21_fu_2550_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_27_fu_2588_p2 = ((trunc_ln28_13_fu_2560_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_28_fu_1519_p2 = ((tmp_23_fu_1505_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_29_fu_1525_p2 = ((trunc_ln28_14_fu_1515_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_2_fu_2102_p2 = ((tmp_4_fu_2071_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_30_fu_2656_p2 = ((tmp_25_fu_2625_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_31_fu_2662_p2 = ((trunc_ln28_15_fu_2635_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_32_fu_2674_p2 = ((tmp_26_fu_2642_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_33_fu_2680_p2 = ((trunc_ln28_16_fu_2652_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_34_fu_2748_p2 = ((tmp_28_fu_2716_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_35_fu_2754_p2 = ((trunc_ln28_17_fu_2726_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_36_fu_2766_p2 = ((tmp_29_fu_2734_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_37_fu_2772_p2 = ((trunc_ln28_18_fu_2744_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_38_fu_2841_p2 = ((tmp_31_fu_2809_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_39_fu_2847_p2 = ((trunc_ln28_19_fu_2819_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_3_fu_2108_p2 = ((trunc_ln28_1_fu_2081_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_40_fu_2859_p2 = ((tmp_32_fu_2827_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_41_fu_2865_p2 = ((trunc_ln28_20_fu_2837_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_42_fu_1569_p2 = ((tmp_34_fu_1555_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_43_fu_1575_p2 = ((trunc_ln28_21_fu_1565_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_44_fu_2933_p2 = ((tmp_36_fu_2902_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_45_fu_2939_p2 = ((trunc_ln28_22_fu_2912_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_46_fu_2951_p2 = ((tmp_37_fu_2919_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_47_fu_2957_p2 = ((trunc_ln28_23_fu_2929_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_48_fu_3025_p2 = ((tmp_39_fu_2993_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_49_fu_3031_p2 = ((trunc_ln28_24_fu_3003_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_4_fu_2120_p2 = ((tmp_5_fu_2088_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_50_fu_3043_p2 = ((tmp_40_fu_3011_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_51_fu_3049_p2 = ((trunc_ln28_25_fu_3021_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_52_fu_3118_p2 = ((tmp_42_fu_3086_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_53_fu_3124_p2 = ((trunc_ln28_26_fu_3096_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_54_fu_3136_p2 = ((tmp_43_fu_3104_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_55_fu_3142_p2 = ((trunc_ln28_27_fu_3114_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_56_fu_1619_p2 = ((tmp_45_fu_1605_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_57_fu_1625_p2 = ((trunc_ln28_28_fu_1615_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_58_fu_3210_p2 = ((tmp_47_fu_3179_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_59_fu_3216_p2 = ((trunc_ln28_29_fu_3189_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_5_fu_2126_p2 = ((trunc_ln28_2_fu_2098_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_60_fu_3228_p2 = ((tmp_48_fu_3196_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_61_fu_3234_p2 = ((trunc_ln28_30_fu_3206_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_62_fu_3302_p2 = ((tmp_50_fu_3270_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_63_fu_3308_p2 = ((trunc_ln28_31_fu_3280_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_64_fu_3320_p2 = ((tmp_51_fu_3288_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_65_fu_3326_p2 = ((trunc_ln28_32_fu_3298_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_66_fu_3395_p2 = ((tmp_53_fu_3363_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_67_fu_3401_p2 = ((trunc_ln28_33_fu_3373_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_68_fu_3413_p2 = ((tmp_54_fu_3381_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_69_fu_3419_p2 = ((trunc_ln28_34_fu_3391_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_6_fu_2194_p2 = ((tmp_7_fu_2162_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_70_fu_1669_p2 = ((tmp_56_fu_1655_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_71_fu_1675_p2 = ((trunc_ln28_35_fu_1665_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_72_fu_3487_p2 = ((tmp_58_fu_3456_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_73_fu_3493_p2 = ((trunc_ln28_36_fu_3466_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_74_fu_3505_p2 = ((tmp_59_fu_3473_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_75_fu_3511_p2 = ((trunc_ln28_37_fu_3483_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_76_fu_3579_p2 = ((tmp_61_fu_3547_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_77_fu_3585_p2 = ((trunc_ln28_38_fu_3557_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_78_fu_3597_p2 = ((tmp_62_fu_3565_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_79_fu_3603_p2 = ((trunc_ln28_39_fu_3575_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_7_fu_2200_p2 = ((trunc_ln28_3_fu_2172_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_80_fu_3672_p2 = ((tmp_64_fu_3640_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_81_fu_3678_p2 = ((trunc_ln28_40_fu_3650_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_82_fu_3690_p2 = ((tmp_65_fu_3658_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_83_fu_3696_p2 = ((trunc_ln28_41_fu_3668_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_84_fu_1719_p2 = ((tmp_67_fu_1705_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_85_fu_1725_p2 = ((trunc_ln28_42_fu_1715_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_86_fu_3764_p2 = ((tmp_69_fu_3733_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_87_fu_3770_p2 = ((trunc_ln28_43_fu_3743_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_88_fu_3782_p2 = ((tmp_70_fu_3750_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_89_fu_3788_p2 = ((trunc_ln28_44_fu_3760_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_8_fu_2212_p2 = ((tmp_8_fu_2180_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_90_fu_3856_p2 = ((tmp_72_fu_3824_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_91_fu_3862_p2 = ((trunc_ln28_45_fu_3834_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_92_fu_3874_p2 = ((tmp_73_fu_3842_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_93_fu_3880_p2 = ((trunc_ln28_46_fu_3852_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_94_fu_3949_p2 = ((tmp_75_fu_3917_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_95_fu_3955_p2 = ((trunc_ln28_47_fu_3927_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_96_fu_3967_p2 = ((tmp_76_fu_3935_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_97_fu_3973_p2 = ((trunc_ln28_48_fu_3945_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_98_fu_1769_p2 = ((tmp_78_fu_1755_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln28_99_fu_1775_p2 = ((trunc_ln28_49_fu_1765_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_9_fu_2218_p2 = ((trunc_ln28_4_fu_2190_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_1366_p2 = ((tmp_2_fu_1352_p4 != 8'd255) ? 1'b1 : 1'b0);

assign max_pool_1_out_0_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_0_d0 = ((and_ln28_6_fu_2329_p2[0:0] === 1'b1) ? conv_1_out_1_q1 : select_ln28_2_fu_2242_p3);

assign max_pool_1_out_10_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_10_d0 = ((and_ln28_76_fu_5099_p2[0:0] === 1'b1) ? conv_1_out_21_q1 : select_ln28_42_fu_5012_p3);

assign max_pool_1_out_11_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_11_d0 = ((and_ln28_83_fu_5376_p2[0:0] === 1'b1) ? conv_1_out_23_q1 : select_ln28_46_fu_5289_p3);

assign max_pool_1_out_12_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_12_d0 = ((and_ln28_90_fu_5653_p2[0:0] === 1'b1) ? conv_1_out_25_q1 : select_ln28_50_fu_5566_p3);

assign max_pool_1_out_1_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_1_d0 = ((and_ln28_13_fu_2606_p2[0:0] === 1'b1) ? conv_1_out_3_q1 : select_ln28_6_fu_2519_p3);

assign max_pool_1_out_2_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_2_d0 = ((and_ln28_20_fu_2883_p2[0:0] === 1'b1) ? conv_1_out_5_q1 : select_ln28_10_fu_2796_p3);

assign max_pool_1_out_3_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_3_d0 = ((and_ln28_27_fu_3160_p2[0:0] === 1'b1) ? conv_1_out_7_q1 : select_ln28_14_fu_3073_p3);

assign max_pool_1_out_4_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_4_d0 = ((and_ln28_34_fu_3437_p2[0:0] === 1'b1) ? conv_1_out_9_q1 : select_ln28_18_fu_3350_p3);

assign max_pool_1_out_5_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_5_d0 = ((and_ln28_41_fu_3714_p2[0:0] === 1'b1) ? conv_1_out_11_q1 : select_ln28_22_fu_3627_p3);

assign max_pool_1_out_6_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_6_d0 = ((and_ln28_48_fu_3991_p2[0:0] === 1'b1) ? conv_1_out_13_q1 : select_ln28_26_fu_3904_p3);

assign max_pool_1_out_7_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_7_d0 = ((and_ln28_55_fu_4268_p2[0:0] === 1'b1) ? conv_1_out_15_q1 : select_ln28_30_fu_4181_p3);

assign max_pool_1_out_8_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_8_d0 = ((and_ln28_62_fu_4545_p2[0:0] === 1'b1) ? conv_1_out_17_q1 : select_ln28_34_fu_4458_p3);

assign max_pool_1_out_9_address0 = zext_ln35_1_fu_2051_p1;

assign max_pool_1_out_9_d0 = ((and_ln28_69_fu_4822_p2[0:0] === 1'b1) ? conv_1_out_19_q1 : select_ln28_38_fu_4735_p3);

assign or_ln25_fu_1398_p2 = (shl_ln_fu_1323_p3 | 5'd1);

assign or_ln28_10_fu_2483_p2 = (icmp_ln28_21_fu_2477_p2 | icmp_ln28_20_fu_2471_p2);

assign or_ln28_11_fu_2501_p2 = (icmp_ln28_23_fu_2495_p2 | icmp_ln28_22_fu_2489_p2);

assign or_ln28_12_fu_2576_p2 = (icmp_ln28_25_fu_2570_p2 | icmp_ln28_24_fu_2564_p2);

assign or_ln28_13_fu_2594_p2 = (icmp_ln28_27_fu_2588_p2 | icmp_ln28_26_fu_2582_p2);

assign or_ln28_14_fu_1531_p2 = (icmp_ln28_29_fu_1525_p2 | icmp_ln28_28_fu_1519_p2);

assign or_ln28_15_fu_2668_p2 = (icmp_ln28_31_fu_2662_p2 | icmp_ln28_30_fu_2656_p2);

assign or_ln28_16_fu_2686_p2 = (icmp_ln28_33_fu_2680_p2 | icmp_ln28_32_fu_2674_p2);

assign or_ln28_17_fu_2760_p2 = (icmp_ln28_35_fu_2754_p2 | icmp_ln28_34_fu_2748_p2);

assign or_ln28_18_fu_2778_p2 = (icmp_ln28_37_fu_2772_p2 | icmp_ln28_36_fu_2766_p2);

assign or_ln28_19_fu_2853_p2 = (icmp_ln28_39_fu_2847_p2 | icmp_ln28_38_fu_2841_p2);

assign or_ln28_1_fu_2114_p2 = (icmp_ln28_3_fu_2108_p2 | icmp_ln28_2_fu_2102_p2);

assign or_ln28_20_fu_2871_p2 = (icmp_ln28_41_fu_2865_p2 | icmp_ln28_40_fu_2859_p2);

assign or_ln28_21_fu_1581_p2 = (icmp_ln28_43_fu_1575_p2 | icmp_ln28_42_fu_1569_p2);

assign or_ln28_22_fu_2945_p2 = (icmp_ln28_45_fu_2939_p2 | icmp_ln28_44_fu_2933_p2);

assign or_ln28_23_fu_2963_p2 = (icmp_ln28_47_fu_2957_p2 | icmp_ln28_46_fu_2951_p2);

assign or_ln28_24_fu_3037_p2 = (icmp_ln28_49_fu_3031_p2 | icmp_ln28_48_fu_3025_p2);

assign or_ln28_25_fu_3055_p2 = (icmp_ln28_51_fu_3049_p2 | icmp_ln28_50_fu_3043_p2);

assign or_ln28_26_fu_3130_p2 = (icmp_ln28_53_fu_3124_p2 | icmp_ln28_52_fu_3118_p2);

assign or_ln28_27_fu_3148_p2 = (icmp_ln28_55_fu_3142_p2 | icmp_ln28_54_fu_3136_p2);

assign or_ln28_28_fu_1631_p2 = (icmp_ln28_57_fu_1625_p2 | icmp_ln28_56_fu_1619_p2);

assign or_ln28_29_fu_3222_p2 = (icmp_ln28_59_fu_3216_p2 | icmp_ln28_58_fu_3210_p2);

assign or_ln28_2_fu_2132_p2 = (icmp_ln28_5_fu_2126_p2 | icmp_ln28_4_fu_2120_p2);

assign or_ln28_30_fu_3240_p2 = (icmp_ln28_61_fu_3234_p2 | icmp_ln28_60_fu_3228_p2);

assign or_ln28_31_fu_3314_p2 = (icmp_ln28_63_fu_3308_p2 | icmp_ln28_62_fu_3302_p2);

assign or_ln28_32_fu_3332_p2 = (icmp_ln28_65_fu_3326_p2 | icmp_ln28_64_fu_3320_p2);

assign or_ln28_33_fu_3407_p2 = (icmp_ln28_67_fu_3401_p2 | icmp_ln28_66_fu_3395_p2);

assign or_ln28_34_fu_3425_p2 = (icmp_ln28_69_fu_3419_p2 | icmp_ln28_68_fu_3413_p2);

assign or_ln28_35_fu_1681_p2 = (icmp_ln28_71_fu_1675_p2 | icmp_ln28_70_fu_1669_p2);

assign or_ln28_36_fu_3499_p2 = (icmp_ln28_73_fu_3493_p2 | icmp_ln28_72_fu_3487_p2);

assign or_ln28_37_fu_3517_p2 = (icmp_ln28_75_fu_3511_p2 | icmp_ln28_74_fu_3505_p2);

assign or_ln28_38_fu_3591_p2 = (icmp_ln28_77_fu_3585_p2 | icmp_ln28_76_fu_3579_p2);

assign or_ln28_39_fu_3609_p2 = (icmp_ln28_79_fu_3603_p2 | icmp_ln28_78_fu_3597_p2);

assign or_ln28_3_fu_2206_p2 = (icmp_ln28_7_fu_2200_p2 | icmp_ln28_6_fu_2194_p2);

assign or_ln28_40_fu_3684_p2 = (icmp_ln28_81_fu_3678_p2 | icmp_ln28_80_fu_3672_p2);

assign or_ln28_41_fu_3702_p2 = (icmp_ln28_83_fu_3696_p2 | icmp_ln28_82_fu_3690_p2);

assign or_ln28_42_fu_1731_p2 = (icmp_ln28_85_fu_1725_p2 | icmp_ln28_84_fu_1719_p2);

assign or_ln28_43_fu_3776_p2 = (icmp_ln28_87_fu_3770_p2 | icmp_ln28_86_fu_3764_p2);

assign or_ln28_44_fu_3794_p2 = (icmp_ln28_89_fu_3788_p2 | icmp_ln28_88_fu_3782_p2);

assign or_ln28_45_fu_3868_p2 = (icmp_ln28_91_fu_3862_p2 | icmp_ln28_90_fu_3856_p2);

assign or_ln28_46_fu_3886_p2 = (icmp_ln28_93_fu_3880_p2 | icmp_ln28_92_fu_3874_p2);

assign or_ln28_47_fu_3961_p2 = (icmp_ln28_95_fu_3955_p2 | icmp_ln28_94_fu_3949_p2);

assign or_ln28_48_fu_3979_p2 = (icmp_ln28_97_fu_3973_p2 | icmp_ln28_96_fu_3967_p2);

assign or_ln28_49_fu_1781_p2 = (icmp_ln28_99_fu_1775_p2 | icmp_ln28_98_fu_1769_p2);

assign or_ln28_4_fu_2224_p2 = (icmp_ln28_9_fu_2218_p2 | icmp_ln28_8_fu_2212_p2);

assign or_ln28_50_fu_4053_p2 = (icmp_ln28_101_fu_4047_p2 | icmp_ln28_100_fu_4041_p2);

assign or_ln28_51_fu_4071_p2 = (icmp_ln28_103_fu_4065_p2 | icmp_ln28_102_fu_4059_p2);

assign or_ln28_52_fu_4145_p2 = (icmp_ln28_105_fu_4139_p2 | icmp_ln28_104_fu_4133_p2);

assign or_ln28_53_fu_4163_p2 = (icmp_ln28_107_fu_4157_p2 | icmp_ln28_106_fu_4151_p2);

assign or_ln28_54_fu_4238_p2 = (icmp_ln28_109_fu_4232_p2 | icmp_ln28_108_fu_4226_p2);

assign or_ln28_55_fu_4256_p2 = (icmp_ln28_111_fu_4250_p2 | icmp_ln28_110_fu_4244_p2);

assign or_ln28_56_fu_1831_p2 = (icmp_ln28_113_fu_1825_p2 | icmp_ln28_112_fu_1819_p2);

assign or_ln28_57_fu_4330_p2 = (icmp_ln28_115_fu_4324_p2 | icmp_ln28_114_fu_4318_p2);

assign or_ln28_58_fu_4348_p2 = (icmp_ln28_117_fu_4342_p2 | icmp_ln28_116_fu_4336_p2);

assign or_ln28_59_fu_4422_p2 = (icmp_ln28_119_fu_4416_p2 | icmp_ln28_118_fu_4410_p2);

assign or_ln28_5_fu_2299_p2 = (icmp_ln28_11_fu_2293_p2 | icmp_ln28_10_fu_2287_p2);

assign or_ln28_60_fu_4440_p2 = (icmp_ln28_121_fu_4434_p2 | icmp_ln28_120_fu_4428_p2);

assign or_ln28_61_fu_4515_p2 = (icmp_ln28_123_fu_4509_p2 | icmp_ln28_122_fu_4503_p2);

assign or_ln28_62_fu_4533_p2 = (icmp_ln28_125_fu_4527_p2 | icmp_ln28_124_fu_4521_p2);

assign or_ln28_63_fu_1881_p2 = (icmp_ln28_127_fu_1875_p2 | icmp_ln28_126_fu_1869_p2);

assign or_ln28_64_fu_4607_p2 = (icmp_ln28_129_fu_4601_p2 | icmp_ln28_128_fu_4595_p2);

assign or_ln28_65_fu_4625_p2 = (icmp_ln28_131_fu_4619_p2 | icmp_ln28_130_fu_4613_p2);

assign or_ln28_66_fu_4699_p2 = (icmp_ln28_133_fu_4693_p2 | icmp_ln28_132_fu_4687_p2);

assign or_ln28_67_fu_4717_p2 = (icmp_ln28_135_fu_4711_p2 | icmp_ln28_134_fu_4705_p2);

assign or_ln28_68_fu_4792_p2 = (icmp_ln28_137_fu_4786_p2 | icmp_ln28_136_fu_4780_p2);

assign or_ln28_69_fu_4810_p2 = (icmp_ln28_139_fu_4804_p2 | icmp_ln28_138_fu_4798_p2);

assign or_ln28_6_fu_2317_p2 = (icmp_ln28_13_fu_2311_p2 | icmp_ln28_12_fu_2305_p2);

assign or_ln28_70_fu_1931_p2 = (icmp_ln28_141_fu_1925_p2 | icmp_ln28_140_fu_1919_p2);

assign or_ln28_71_fu_4884_p2 = (icmp_ln28_143_fu_4878_p2 | icmp_ln28_142_fu_4872_p2);

assign or_ln28_72_fu_4902_p2 = (icmp_ln28_145_fu_4896_p2 | icmp_ln28_144_fu_4890_p2);

assign or_ln28_73_fu_4976_p2 = (icmp_ln28_147_fu_4970_p2 | icmp_ln28_146_fu_4964_p2);

assign or_ln28_74_fu_4994_p2 = (icmp_ln28_149_fu_4988_p2 | icmp_ln28_148_fu_4982_p2);

assign or_ln28_75_fu_5069_p2 = (icmp_ln28_151_fu_5063_p2 | icmp_ln28_150_fu_5057_p2);

assign or_ln28_76_fu_5087_p2 = (icmp_ln28_153_fu_5081_p2 | icmp_ln28_152_fu_5075_p2);

assign or_ln28_77_fu_1981_p2 = (icmp_ln28_155_fu_1975_p2 | icmp_ln28_154_fu_1969_p2);

assign or_ln28_78_fu_5161_p2 = (icmp_ln28_157_fu_5155_p2 | icmp_ln28_156_fu_5149_p2);

assign or_ln28_79_fu_5179_p2 = (icmp_ln28_159_fu_5173_p2 | icmp_ln28_158_fu_5167_p2);

assign or_ln28_7_fu_1481_p2 = (icmp_ln28_15_fu_1475_p2 | icmp_ln28_14_fu_1469_p2);

assign or_ln28_80_fu_5253_p2 = (icmp_ln28_161_fu_5247_p2 | icmp_ln28_160_fu_5241_p2);

assign or_ln28_81_fu_5271_p2 = (icmp_ln28_163_fu_5265_p2 | icmp_ln28_162_fu_5259_p2);

assign or_ln28_82_fu_5346_p2 = (icmp_ln28_165_fu_5340_p2 | icmp_ln28_164_fu_5334_p2);

assign or_ln28_83_fu_5364_p2 = (icmp_ln28_167_fu_5358_p2 | icmp_ln28_166_fu_5352_p2);

assign or_ln28_84_fu_2031_p2 = (icmp_ln28_169_fu_2025_p2 | icmp_ln28_168_fu_2019_p2);

assign or_ln28_85_fu_5438_p2 = (icmp_ln28_171_fu_5432_p2 | icmp_ln28_170_fu_5426_p2);

assign or_ln28_86_fu_5456_p2 = (icmp_ln28_173_fu_5450_p2 | icmp_ln28_172_fu_5444_p2);

assign or_ln28_87_fu_5530_p2 = (icmp_ln28_175_fu_5524_p2 | icmp_ln28_174_fu_5518_p2);

assign or_ln28_88_fu_5548_p2 = (icmp_ln28_177_fu_5542_p2 | icmp_ln28_176_fu_5536_p2);

assign or_ln28_89_fu_5623_p2 = (icmp_ln28_179_fu_5617_p2 | icmp_ln28_178_fu_5611_p2);

assign or_ln28_8_fu_2391_p2 = (icmp_ln28_17_fu_2385_p2 | icmp_ln28_16_fu_2379_p2);

assign or_ln28_90_fu_5641_p2 = (icmp_ln28_181_fu_5635_p2 | icmp_ln28_180_fu_5629_p2);

assign or_ln28_9_fu_2409_p2 = (icmp_ln28_19_fu_2403_p2 | icmp_ln28_18_fu_2397_p2);

assign or_ln28_fu_1378_p2 = (icmp_ln28_fu_1366_p2 | icmp_ln28_1_fu_1372_p2);

assign r_fu_1292_p2 = (ap_phi_mux_r_0_phi_fu_985_p4 + 4'd1);

assign select_ln28_10_fu_2796_p3 = ((and_ln28_18_fu_2790_p2[0:0] === 1'b1) ? conv_1_out_4_q1 : select_ln28_9_fu_2704_p3);

assign select_ln28_12_fu_1593_p3 = ((and_ln28_21_fu_1587_p2[0:0] === 1'b1) ? conv_1_out_6_q0 : 32'd8388608);

assign select_ln28_13_fu_2981_p3 = ((and_ln28_23_fu_2975_p2[0:0] === 1'b1) ? conv_1_out_7_q0 : select_ln28_12_reg_5999);

assign select_ln28_14_fu_3073_p3 = ((and_ln28_25_fu_3067_p2[0:0] === 1'b1) ? conv_1_out_6_q1 : select_ln28_13_fu_2981_p3);

assign select_ln28_16_fu_1643_p3 = ((and_ln28_28_fu_1637_p2[0:0] === 1'b1) ? conv_1_out_8_q0 : 32'd8388608);

assign select_ln28_17_fu_3258_p3 = ((and_ln28_30_fu_3252_p2[0:0] === 1'b1) ? conv_1_out_9_q0 : select_ln28_16_reg_6006);

assign select_ln28_18_fu_3350_p3 = ((and_ln28_32_fu_3344_p2[0:0] === 1'b1) ? conv_1_out_8_q1 : select_ln28_17_fu_3258_p3);

assign select_ln28_1_fu_2150_p3 = ((and_ln28_2_fu_2144_p2[0:0] === 1'b1) ? conv_1_out_1_q0 : select_ln28_reg_5848);

assign select_ln28_20_fu_1693_p3 = ((and_ln28_35_fu_1687_p2[0:0] === 1'b1) ? conv_1_out_10_q0 : 32'd8388608);

assign select_ln28_21_fu_3535_p3 = ((and_ln28_37_fu_3529_p2[0:0] === 1'b1) ? conv_1_out_11_q0 : select_ln28_20_reg_6013);

assign select_ln28_22_fu_3627_p3 = ((and_ln28_39_fu_3621_p2[0:0] === 1'b1) ? conv_1_out_10_q1 : select_ln28_21_fu_3535_p3);

assign select_ln28_24_fu_1743_p3 = ((and_ln28_42_fu_1737_p2[0:0] === 1'b1) ? conv_1_out_12_q0 : 32'd8388608);

assign select_ln28_25_fu_3812_p3 = ((and_ln28_44_fu_3806_p2[0:0] === 1'b1) ? conv_1_out_13_q0 : select_ln28_24_reg_6020);

assign select_ln28_26_fu_3904_p3 = ((and_ln28_46_fu_3898_p2[0:0] === 1'b1) ? conv_1_out_12_q1 : select_ln28_25_fu_3812_p3);

assign select_ln28_28_fu_1793_p3 = ((and_ln28_49_fu_1787_p2[0:0] === 1'b1) ? conv_1_out_14_q0 : 32'd8388608);

assign select_ln28_29_fu_4089_p3 = ((and_ln28_51_fu_4083_p2[0:0] === 1'b1) ? conv_1_out_15_q0 : select_ln28_28_reg_6027);

assign select_ln28_2_fu_2242_p3 = ((and_ln28_4_fu_2236_p2[0:0] === 1'b1) ? conv_1_out_0_q1 : select_ln28_1_fu_2150_p3);

assign select_ln28_30_fu_4181_p3 = ((and_ln28_53_fu_4175_p2[0:0] === 1'b1) ? conv_1_out_14_q1 : select_ln28_29_fu_4089_p3);

assign select_ln28_32_fu_1843_p3 = ((and_ln28_56_fu_1837_p2[0:0] === 1'b1) ? conv_1_out_16_q0 : 32'd8388608);

assign select_ln28_33_fu_4366_p3 = ((and_ln28_58_fu_4360_p2[0:0] === 1'b1) ? conv_1_out_17_q0 : select_ln28_32_reg_6034);

assign select_ln28_34_fu_4458_p3 = ((and_ln28_60_fu_4452_p2[0:0] === 1'b1) ? conv_1_out_16_q1 : select_ln28_33_fu_4366_p3);

assign select_ln28_36_fu_1893_p3 = ((and_ln28_63_fu_1887_p2[0:0] === 1'b1) ? conv_1_out_18_q0 : 32'd8388608);

assign select_ln28_37_fu_4643_p3 = ((and_ln28_65_fu_4637_p2[0:0] === 1'b1) ? conv_1_out_19_q0 : select_ln28_36_reg_6041);

assign select_ln28_38_fu_4735_p3 = ((and_ln28_67_fu_4729_p2[0:0] === 1'b1) ? conv_1_out_18_q1 : select_ln28_37_fu_4643_p3);

assign select_ln28_40_fu_1943_p3 = ((and_ln28_70_fu_1937_p2[0:0] === 1'b1) ? conv_1_out_20_q0 : 32'd8388608);

assign select_ln28_41_fu_4920_p3 = ((and_ln28_72_fu_4914_p2[0:0] === 1'b1) ? conv_1_out_21_q0 : select_ln28_40_reg_6048);

assign select_ln28_42_fu_5012_p3 = ((and_ln28_74_fu_5006_p2[0:0] === 1'b1) ? conv_1_out_20_q1 : select_ln28_41_fu_4920_p3);

assign select_ln28_44_fu_1993_p3 = ((and_ln28_77_fu_1987_p2[0:0] === 1'b1) ? conv_1_out_22_q0 : 32'd8388608);

assign select_ln28_45_fu_5197_p3 = ((and_ln28_79_fu_5191_p2[0:0] === 1'b1) ? conv_1_out_23_q0 : select_ln28_44_reg_6055);

assign select_ln28_46_fu_5289_p3 = ((and_ln28_81_fu_5283_p2[0:0] === 1'b1) ? conv_1_out_22_q1 : select_ln28_45_fu_5197_p3);

assign select_ln28_48_fu_2043_p3 = ((and_ln28_84_fu_2037_p2[0:0] === 1'b1) ? conv_1_out_24_q0 : 32'd8388608);

assign select_ln28_49_fu_5474_p3 = ((and_ln28_86_fu_5468_p2[0:0] === 1'b1) ? conv_1_out_25_q0 : select_ln28_48_reg_6062);

assign select_ln28_4_fu_1493_p3 = ((and_ln28_7_fu_1487_p2[0:0] === 1'b1) ? conv_1_out_2_q0 : 32'd8388608);

assign select_ln28_50_fu_5566_p3 = ((and_ln28_88_fu_5560_p2[0:0] === 1'b1) ? conv_1_out_24_q1 : select_ln28_49_fu_5474_p3);

assign select_ln28_5_fu_2427_p3 = ((and_ln28_9_fu_2421_p2[0:0] === 1'b1) ? conv_1_out_3_q0 : select_ln28_4_reg_5985);

assign select_ln28_6_fu_2519_p3 = ((and_ln28_11_fu_2513_p2[0:0] === 1'b1) ? conv_1_out_2_q1 : select_ln28_5_fu_2427_p3);

assign select_ln28_8_fu_1543_p3 = ((and_ln28_14_fu_1537_p2[0:0] === 1'b1) ? conv_1_out_4_q0 : 32'd8388608);

assign select_ln28_9_fu_2704_p3 = ((and_ln28_16_fu_2698_p2[0:0] === 1'b1) ? conv_1_out_5_q0 : select_ln28_8_reg_5992);

assign select_ln28_fu_1390_p3 = ((and_ln28_fu_1384_p2[0:0] === 1'b1) ? conv_1_out_0_q0 : 32'd8388608);

assign shl_ln_fu_1323_p3 = {{r_0_reg_981}, {1'd0}};

assign tmp_100_fu_1855_p4 = {{bitcast_ln28_63_fu_1851_p1[30:23]}};

assign tmp_102_fu_4564_p4 = {{bitcast_ln28_64_fu_4560_p1[30:23]}};

assign tmp_103_fu_4581_p4 = {{bitcast_ln28_65_fu_4578_p1[30:23]}};

assign tmp_105_fu_4655_p4 = {{bitcast_ln28_66_fu_4651_p1[30:23]}};

assign tmp_106_fu_4673_p4 = {{bitcast_ln28_67_fu_4669_p1[30:23]}};

assign tmp_108_fu_4748_p4 = {{bitcast_ln28_68_fu_4744_p1[30:23]}};

assign tmp_109_fu_4766_p4 = {{bitcast_ln28_69_fu_4762_p1[30:23]}};

assign tmp_10_fu_2273_p4 = {{bitcast_ln28_6_fu_2269_p1[30:23]}};

assign tmp_111_fu_1905_p4 = {{bitcast_ln28_70_fu_1901_p1[30:23]}};

assign tmp_113_fu_4841_p4 = {{bitcast_ln28_71_fu_4837_p1[30:23]}};

assign tmp_114_fu_4858_p4 = {{bitcast_ln28_72_fu_4855_p1[30:23]}};

assign tmp_116_fu_4932_p4 = {{bitcast_ln28_73_fu_4928_p1[30:23]}};

assign tmp_117_fu_4950_p4 = {{bitcast_ln28_74_fu_4946_p1[30:23]}};

assign tmp_119_fu_5025_p4 = {{bitcast_ln28_75_fu_5021_p1[30:23]}};

assign tmp_120_fu_5043_p4 = {{bitcast_ln28_76_fu_5039_p1[30:23]}};

assign tmp_122_fu_1955_p4 = {{bitcast_ln28_77_fu_1951_p1[30:23]}};

assign tmp_124_fu_5118_p4 = {{bitcast_ln28_78_fu_5114_p1[30:23]}};

assign tmp_125_fu_5135_p4 = {{bitcast_ln28_79_fu_5132_p1[30:23]}};

assign tmp_127_fu_5209_p4 = {{bitcast_ln28_80_fu_5205_p1[30:23]}};

assign tmp_128_fu_5227_p4 = {{bitcast_ln28_81_fu_5223_p1[30:23]}};

assign tmp_12_fu_1455_p4 = {{bitcast_ln28_7_fu_1451_p1[30:23]}};

assign tmp_130_fu_5302_p4 = {{bitcast_ln28_82_fu_5298_p1[30:23]}};

assign tmp_131_fu_5320_p4 = {{bitcast_ln28_83_fu_5316_p1[30:23]}};

assign tmp_133_fu_2005_p4 = {{bitcast_ln28_84_fu_2001_p1[30:23]}};

assign tmp_135_fu_5395_p4 = {{bitcast_ln28_85_fu_5391_p1[30:23]}};

assign tmp_136_fu_5412_p4 = {{bitcast_ln28_86_fu_5409_p1[30:23]}};

assign tmp_138_fu_5486_p4 = {{bitcast_ln28_87_fu_5482_p1[30:23]}};

assign tmp_139_fu_5504_p4 = {{bitcast_ln28_88_fu_5500_p1[30:23]}};

assign tmp_141_fu_5579_p4 = {{bitcast_ln28_89_fu_5575_p1[30:23]}};

assign tmp_142_fu_5597_p4 = {{bitcast_ln28_90_fu_5593_p1[30:23]}};

assign tmp_144_fu_1331_p3 = {{r_0_reg_981}, {5'd0}};

assign tmp_145_fu_1298_p3 = {{ap_phi_mux_r_0_phi_fu_985_p4}, {f_0_reg_969}};

assign tmp_146_fu_1404_p3 = {{or_ln25_fu_1398_p2}, {5'd0}};

assign tmp_14_fu_2348_p4 = {{bitcast_ln28_8_fu_2344_p1[30:23]}};

assign tmp_15_fu_2365_p4 = {{bitcast_ln28_9_fu_2362_p1[30:23]}};

assign tmp_17_fu_2439_p4 = {{bitcast_ln28_10_fu_2435_p1[30:23]}};

assign tmp_18_fu_2457_p4 = {{bitcast_ln28_11_fu_2453_p1[30:23]}};

assign tmp_20_fu_2532_p4 = {{bitcast_ln28_12_fu_2528_p1[30:23]}};

assign tmp_21_fu_2550_p4 = {{bitcast_ln28_13_fu_2546_p1[30:23]}};

assign tmp_23_fu_1505_p4 = {{bitcast_ln28_14_fu_1501_p1[30:23]}};

assign tmp_25_fu_2625_p4 = {{bitcast_ln28_15_fu_2621_p1[30:23]}};

assign tmp_26_fu_2642_p4 = {{bitcast_ln28_16_fu_2639_p1[30:23]}};

assign tmp_28_fu_2716_p4 = {{bitcast_ln28_17_fu_2712_p1[30:23]}};

assign tmp_29_fu_2734_p4 = {{bitcast_ln28_18_fu_2730_p1[30:23]}};

assign tmp_2_fu_1352_p4 = {{bitcast_ln28_fu_1348_p1[30:23]}};

assign tmp_31_fu_2809_p4 = {{bitcast_ln28_19_fu_2805_p1[30:23]}};

assign tmp_32_fu_2827_p4 = {{bitcast_ln28_20_fu_2823_p1[30:23]}};

assign tmp_34_fu_1555_p4 = {{bitcast_ln28_21_fu_1551_p1[30:23]}};

assign tmp_36_fu_2902_p4 = {{bitcast_ln28_22_fu_2898_p1[30:23]}};

assign tmp_37_fu_2919_p4 = {{bitcast_ln28_23_fu_2916_p1[30:23]}};

assign tmp_39_fu_2993_p4 = {{bitcast_ln28_24_fu_2989_p1[30:23]}};

assign tmp_40_fu_3011_p4 = {{bitcast_ln28_25_fu_3007_p1[30:23]}};

assign tmp_42_fu_3086_p4 = {{bitcast_ln28_26_fu_3082_p1[30:23]}};

assign tmp_43_fu_3104_p4 = {{bitcast_ln28_27_fu_3100_p1[30:23]}};

assign tmp_45_fu_1605_p4 = {{bitcast_ln28_28_fu_1601_p1[30:23]}};

assign tmp_47_fu_3179_p4 = {{bitcast_ln28_29_fu_3175_p1[30:23]}};

assign tmp_48_fu_3196_p4 = {{bitcast_ln28_30_fu_3193_p1[30:23]}};

assign tmp_4_fu_2071_p4 = {{bitcast_ln28_1_fu_2067_p1[30:23]}};

assign tmp_50_fu_3270_p4 = {{bitcast_ln28_31_fu_3266_p1[30:23]}};

assign tmp_51_fu_3288_p4 = {{bitcast_ln28_32_fu_3284_p1[30:23]}};

assign tmp_53_fu_3363_p4 = {{bitcast_ln28_33_fu_3359_p1[30:23]}};

assign tmp_54_fu_3381_p4 = {{bitcast_ln28_34_fu_3377_p1[30:23]}};

assign tmp_56_fu_1655_p4 = {{bitcast_ln28_35_fu_1651_p1[30:23]}};

assign tmp_58_fu_3456_p4 = {{bitcast_ln28_36_fu_3452_p1[30:23]}};

assign tmp_59_fu_3473_p4 = {{bitcast_ln28_37_fu_3470_p1[30:23]}};

assign tmp_5_fu_2088_p4 = {{bitcast_ln28_2_fu_2085_p1[30:23]}};

assign tmp_61_fu_3547_p4 = {{bitcast_ln28_38_fu_3543_p1[30:23]}};

assign tmp_62_fu_3565_p4 = {{bitcast_ln28_39_fu_3561_p1[30:23]}};

assign tmp_64_fu_3640_p4 = {{bitcast_ln28_40_fu_3636_p1[30:23]}};

assign tmp_65_fu_3658_p4 = {{bitcast_ln28_41_fu_3654_p1[30:23]}};

assign tmp_67_fu_1705_p4 = {{bitcast_ln28_42_fu_1701_p1[30:23]}};

assign tmp_69_fu_3733_p4 = {{bitcast_ln28_43_fu_3729_p1[30:23]}};

assign tmp_70_fu_3750_p4 = {{bitcast_ln28_44_fu_3747_p1[30:23]}};

assign tmp_72_fu_3824_p4 = {{bitcast_ln28_45_fu_3820_p1[30:23]}};

assign tmp_73_fu_3842_p4 = {{bitcast_ln28_46_fu_3838_p1[30:23]}};

assign tmp_75_fu_3917_p4 = {{bitcast_ln28_47_fu_3913_p1[30:23]}};

assign tmp_76_fu_3935_p4 = {{bitcast_ln28_48_fu_3931_p1[30:23]}};

assign tmp_78_fu_1755_p4 = {{bitcast_ln28_49_fu_1751_p1[30:23]}};

assign tmp_7_fu_2162_p4 = {{bitcast_ln28_3_fu_2158_p1[30:23]}};

assign tmp_80_fu_4010_p4 = {{bitcast_ln28_50_fu_4006_p1[30:23]}};

assign tmp_81_fu_4027_p4 = {{bitcast_ln28_51_fu_4024_p1[30:23]}};

assign tmp_83_fu_4101_p4 = {{bitcast_ln28_52_fu_4097_p1[30:23]}};

assign tmp_84_fu_4119_p4 = {{bitcast_ln28_53_fu_4115_p1[30:23]}};

assign tmp_86_fu_4194_p4 = {{bitcast_ln28_54_fu_4190_p1[30:23]}};

assign tmp_87_fu_4212_p4 = {{bitcast_ln28_55_fu_4208_p1[30:23]}};

assign tmp_89_fu_1805_p4 = {{bitcast_ln28_56_fu_1801_p1[30:23]}};

assign tmp_8_fu_2180_p4 = {{bitcast_ln28_4_fu_2176_p1[30:23]}};

assign tmp_91_fu_4287_p4 = {{bitcast_ln28_57_fu_4283_p1[30:23]}};

assign tmp_92_fu_4304_p4 = {{bitcast_ln28_58_fu_4301_p1[30:23]}};

assign tmp_94_fu_4378_p4 = {{bitcast_ln28_59_fu_4374_p1[30:23]}};

assign tmp_95_fu_4396_p4 = {{bitcast_ln28_60_fu_4392_p1[30:23]}};

assign tmp_97_fu_4471_p4 = {{bitcast_ln28_61_fu_4467_p1[30:23]}};

assign tmp_98_fu_4489_p4 = {{bitcast_ln28_62_fu_4485_p1[30:23]}};

assign tmp_s_fu_2255_p4 = {{bitcast_ln28_5_fu_2251_p1[30:23]}};

assign trunc_ln28_10_fu_2449_p1 = bitcast_ln28_10_fu_2435_p1[22:0];

assign trunc_ln28_11_fu_2467_p1 = bitcast_ln28_11_fu_2453_p1[22:0];

assign trunc_ln28_12_fu_2542_p1 = bitcast_ln28_12_fu_2528_p1[22:0];

assign trunc_ln28_13_fu_2560_p1 = bitcast_ln28_13_fu_2546_p1[22:0];

assign trunc_ln28_14_fu_1515_p1 = bitcast_ln28_14_fu_1501_p1[22:0];

assign trunc_ln28_15_fu_2635_p1 = bitcast_ln28_15_fu_2621_p1[22:0];

assign trunc_ln28_16_fu_2652_p1 = bitcast_ln28_16_fu_2639_p1[22:0];

assign trunc_ln28_17_fu_2726_p1 = bitcast_ln28_17_fu_2712_p1[22:0];

assign trunc_ln28_18_fu_2744_p1 = bitcast_ln28_18_fu_2730_p1[22:0];

assign trunc_ln28_19_fu_2819_p1 = bitcast_ln28_19_fu_2805_p1[22:0];

assign trunc_ln28_1_fu_2081_p1 = bitcast_ln28_1_fu_2067_p1[22:0];

assign trunc_ln28_20_fu_2837_p1 = bitcast_ln28_20_fu_2823_p1[22:0];

assign trunc_ln28_21_fu_1565_p1 = bitcast_ln28_21_fu_1551_p1[22:0];

assign trunc_ln28_22_fu_2912_p1 = bitcast_ln28_22_fu_2898_p1[22:0];

assign trunc_ln28_23_fu_2929_p1 = bitcast_ln28_23_fu_2916_p1[22:0];

assign trunc_ln28_24_fu_3003_p1 = bitcast_ln28_24_fu_2989_p1[22:0];

assign trunc_ln28_25_fu_3021_p1 = bitcast_ln28_25_fu_3007_p1[22:0];

assign trunc_ln28_26_fu_3096_p1 = bitcast_ln28_26_fu_3082_p1[22:0];

assign trunc_ln28_27_fu_3114_p1 = bitcast_ln28_27_fu_3100_p1[22:0];

assign trunc_ln28_28_fu_1615_p1 = bitcast_ln28_28_fu_1601_p1[22:0];

assign trunc_ln28_29_fu_3189_p1 = bitcast_ln28_29_fu_3175_p1[22:0];

assign trunc_ln28_2_fu_2098_p1 = bitcast_ln28_2_fu_2085_p1[22:0];

assign trunc_ln28_30_fu_3206_p1 = bitcast_ln28_30_fu_3193_p1[22:0];

assign trunc_ln28_31_fu_3280_p1 = bitcast_ln28_31_fu_3266_p1[22:0];

assign trunc_ln28_32_fu_3298_p1 = bitcast_ln28_32_fu_3284_p1[22:0];

assign trunc_ln28_33_fu_3373_p1 = bitcast_ln28_33_fu_3359_p1[22:0];

assign trunc_ln28_34_fu_3391_p1 = bitcast_ln28_34_fu_3377_p1[22:0];

assign trunc_ln28_35_fu_1665_p1 = bitcast_ln28_35_fu_1651_p1[22:0];

assign trunc_ln28_36_fu_3466_p1 = bitcast_ln28_36_fu_3452_p1[22:0];

assign trunc_ln28_37_fu_3483_p1 = bitcast_ln28_37_fu_3470_p1[22:0];

assign trunc_ln28_38_fu_3557_p1 = bitcast_ln28_38_fu_3543_p1[22:0];

assign trunc_ln28_39_fu_3575_p1 = bitcast_ln28_39_fu_3561_p1[22:0];

assign trunc_ln28_3_fu_2172_p1 = bitcast_ln28_3_fu_2158_p1[22:0];

assign trunc_ln28_40_fu_3650_p1 = bitcast_ln28_40_fu_3636_p1[22:0];

assign trunc_ln28_41_fu_3668_p1 = bitcast_ln28_41_fu_3654_p1[22:0];

assign trunc_ln28_42_fu_1715_p1 = bitcast_ln28_42_fu_1701_p1[22:0];

assign trunc_ln28_43_fu_3743_p1 = bitcast_ln28_43_fu_3729_p1[22:0];

assign trunc_ln28_44_fu_3760_p1 = bitcast_ln28_44_fu_3747_p1[22:0];

assign trunc_ln28_45_fu_3834_p1 = bitcast_ln28_45_fu_3820_p1[22:0];

assign trunc_ln28_46_fu_3852_p1 = bitcast_ln28_46_fu_3838_p1[22:0];

assign trunc_ln28_47_fu_3927_p1 = bitcast_ln28_47_fu_3913_p1[22:0];

assign trunc_ln28_48_fu_3945_p1 = bitcast_ln28_48_fu_3931_p1[22:0];

assign trunc_ln28_49_fu_1765_p1 = bitcast_ln28_49_fu_1751_p1[22:0];

assign trunc_ln28_4_fu_2190_p1 = bitcast_ln28_4_fu_2176_p1[22:0];

assign trunc_ln28_50_fu_4020_p1 = bitcast_ln28_50_fu_4006_p1[22:0];

assign trunc_ln28_51_fu_4037_p1 = bitcast_ln28_51_fu_4024_p1[22:0];

assign trunc_ln28_52_fu_4111_p1 = bitcast_ln28_52_fu_4097_p1[22:0];

assign trunc_ln28_53_fu_4129_p1 = bitcast_ln28_53_fu_4115_p1[22:0];

assign trunc_ln28_54_fu_4204_p1 = bitcast_ln28_54_fu_4190_p1[22:0];

assign trunc_ln28_55_fu_4222_p1 = bitcast_ln28_55_fu_4208_p1[22:0];

assign trunc_ln28_56_fu_1815_p1 = bitcast_ln28_56_fu_1801_p1[22:0];

assign trunc_ln28_57_fu_4297_p1 = bitcast_ln28_57_fu_4283_p1[22:0];

assign trunc_ln28_58_fu_4314_p1 = bitcast_ln28_58_fu_4301_p1[22:0];

assign trunc_ln28_59_fu_4388_p1 = bitcast_ln28_59_fu_4374_p1[22:0];

assign trunc_ln28_5_fu_2265_p1 = bitcast_ln28_5_fu_2251_p1[22:0];

assign trunc_ln28_60_fu_4406_p1 = bitcast_ln28_60_fu_4392_p1[22:0];

assign trunc_ln28_61_fu_4481_p1 = bitcast_ln28_61_fu_4467_p1[22:0];

assign trunc_ln28_62_fu_4499_p1 = bitcast_ln28_62_fu_4485_p1[22:0];

assign trunc_ln28_63_fu_1865_p1 = bitcast_ln28_63_fu_1851_p1[22:0];

assign trunc_ln28_64_fu_4574_p1 = bitcast_ln28_64_fu_4560_p1[22:0];

assign trunc_ln28_65_fu_4591_p1 = bitcast_ln28_65_fu_4578_p1[22:0];

assign trunc_ln28_66_fu_4665_p1 = bitcast_ln28_66_fu_4651_p1[22:0];

assign trunc_ln28_67_fu_4683_p1 = bitcast_ln28_67_fu_4669_p1[22:0];

assign trunc_ln28_68_fu_4758_p1 = bitcast_ln28_68_fu_4744_p1[22:0];

assign trunc_ln28_69_fu_4776_p1 = bitcast_ln28_69_fu_4762_p1[22:0];

assign trunc_ln28_6_fu_2283_p1 = bitcast_ln28_6_fu_2269_p1[22:0];

assign trunc_ln28_70_fu_1915_p1 = bitcast_ln28_70_fu_1901_p1[22:0];

assign trunc_ln28_71_fu_4851_p1 = bitcast_ln28_71_fu_4837_p1[22:0];

assign trunc_ln28_72_fu_4868_p1 = bitcast_ln28_72_fu_4855_p1[22:0];

assign trunc_ln28_73_fu_4942_p1 = bitcast_ln28_73_fu_4928_p1[22:0];

assign trunc_ln28_74_fu_4960_p1 = bitcast_ln28_74_fu_4946_p1[22:0];

assign trunc_ln28_75_fu_5035_p1 = bitcast_ln28_75_fu_5021_p1[22:0];

assign trunc_ln28_76_fu_5053_p1 = bitcast_ln28_76_fu_5039_p1[22:0];

assign trunc_ln28_77_fu_1965_p1 = bitcast_ln28_77_fu_1951_p1[22:0];

assign trunc_ln28_78_fu_5128_p1 = bitcast_ln28_78_fu_5114_p1[22:0];

assign trunc_ln28_79_fu_5145_p1 = bitcast_ln28_79_fu_5132_p1[22:0];

assign trunc_ln28_7_fu_1465_p1 = bitcast_ln28_7_fu_1451_p1[22:0];

assign trunc_ln28_80_fu_5219_p1 = bitcast_ln28_80_fu_5205_p1[22:0];

assign trunc_ln28_81_fu_5237_p1 = bitcast_ln28_81_fu_5223_p1[22:0];

assign trunc_ln28_82_fu_5312_p1 = bitcast_ln28_82_fu_5298_p1[22:0];

assign trunc_ln28_83_fu_5330_p1 = bitcast_ln28_83_fu_5316_p1[22:0];

assign trunc_ln28_84_fu_2015_p1 = bitcast_ln28_84_fu_2001_p1[22:0];

assign trunc_ln28_85_fu_5405_p1 = bitcast_ln28_85_fu_5391_p1[22:0];

assign trunc_ln28_86_fu_5422_p1 = bitcast_ln28_86_fu_5409_p1[22:0];

assign trunc_ln28_87_fu_5496_p1 = bitcast_ln28_87_fu_5482_p1[22:0];

assign trunc_ln28_88_fu_5514_p1 = bitcast_ln28_88_fu_5500_p1[22:0];

assign trunc_ln28_89_fu_5589_p1 = bitcast_ln28_89_fu_5575_p1[22:0];

assign trunc_ln28_8_fu_2358_p1 = bitcast_ln28_8_fu_2344_p1[22:0];

assign trunc_ln28_90_fu_5607_p1 = bitcast_ln28_90_fu_5593_p1[22:0];

assign trunc_ln28_9_fu_2375_p1 = bitcast_ln28_9_fu_2362_p1[22:0];

assign trunc_ln28_fu_1362_p1 = bitcast_ln28_fu_1348_p1[22:0];

assign zext_ln13_1_fu_1282_p1 = f_0_reg_969;

assign zext_ln13_fu_1278_p1 = f_0_reg_969;

assign zext_ln28_1_fu_1412_p1 = tmp_146_fu_1404_p3;

assign zext_ln28_2_fu_1421_p1 = add_ln28_fu_1416_p2;

assign zext_ln28_fu_1306_p1 = tmp_145_fu_1298_p3;

assign zext_ln35_1_fu_2051_p1 = add_ln35_reg_5778;

assign zext_ln35_fu_1339_p1 = tmp_144_fu_1331_p3;

always @ (posedge ap_clk) begin
    zext_ln13_reg_5677[10:6] <= 5'b00000;
    zext_ln13_1_reg_5682[9:6] <= 4'b0000;
    zext_ln28_reg_5696[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //max_pool_1
