

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Mon Jan 22 12:02:56 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        pool
* Solution:       Col_pipeline_5
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    24.136|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  10818|  10818|  10818|  10818|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                                 |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop_Col_Loop  |  10816|  10816|         3|          2|          1|  5408|    yes   |
        +---------------------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 5 3 
3 --> 4 
4 --> 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10816 x float]* %conv_1_out_1), !map !7"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([10816 x float]* %conv_1_out_0), !map !14"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5408 x float]* %max_pool_1_out), !map !20"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 9 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.76ns)   --->   "br label %1" [pool/pooling.cpp:10]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 16.1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten23 = phi i13 [ 0, %0 ], [ %add_ln10, %Col_Loop ]" [pool/pooling.cpp:10]   --->   Operation 11 'phi' 'indvar_flatten23' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %select_ln28_9, %Col_Loop ]" [pool/pooling.cpp:28]   --->   Operation 12 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %0 ], [ %select_ln13_4, %Col_Loop ]" [pool/pooling.cpp:13]   --->   Operation 13 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %0 ], [ %select_ln13_1, %Col_Loop ]" [pool/pooling.cpp:13]   --->   Operation 14 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ 0, %0 ], [ %c, %Col_Loop ]"   --->   Operation 15 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r_0, i1 false)" [pool/pooling.cpp:25]   --->   Operation 16 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%or_ln25 = or i5 %shl_ln, 1" [pool/pooling.cpp:25]   --->   Operation 17 'or' 'or_ln25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (2.09ns)   --->   "%icmp_ln10 = icmp eq i13 %indvar_flatten23, -2784" [pool/pooling.cpp:10]   --->   Operation 18 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.67ns)   --->   "%add_ln10 = add i13 %indvar_flatten23, 1" [pool/pooling.cpp:10]   --->   Operation 19 'add' 'add_ln10' <Predicate = true> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Col_Loop" [pool/pooling.cpp:10]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.82ns)   --->   "%f = add i6 1, %f_0" [pool/pooling.cpp:10]   --->   Operation 21 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.55ns)   --->   "%icmp_ln13 = icmp eq i8 %indvar_flatten, -87" [pool/pooling.cpp:13]   --->   Operation 22 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.02ns)   --->   "%select_ln28_8 = select i1 %icmp_ln13, i4 0, i4 %r_0" [pool/pooling.cpp:28]   --->   Operation 23 'select' 'select_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (1.18ns)   --->   "%select_ln28_9 = select i1 %icmp_ln13, i6 %f, i6 %f_0" [pool/pooling.cpp:28]   --->   Operation 24 'select' 'select_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i6 %select_ln28_9 to i1" [pool/pooling.cpp:28]   --->   Operation 25 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln28_3_mid2_v = call i5 @_ssdm_op_PartSelect.i5.i6.i32.i32(i6 %select_ln28_9, i32 1, i32 5)" [pool/pooling.cpp:28]   --->   Operation 26 'partselect' 'zext_ln28_3_mid2_v' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i5 %zext_ln28_3_mid2_v to i15" [pool/pooling.cpp:28]   --->   Operation 27 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_2)   --->   "%select_ln28_10 = select i1 %icmp_ln13, i5 0, i5 %shl_ln" [pool/pooling.cpp:28]   --->   Operation 28 'select' 'select_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_3)   --->   "%select_ln28_11 = select i1 %icmp_ln13, i5 1, i5 %or_ln25" [pool/pooling.cpp:28]   --->   Operation 29 'select' 'select_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_7)   --->   "%xor_ln28 = xor i1 %icmp_ln13, true" [pool/pooling.cpp:28]   --->   Operation 30 'xor' 'xor_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.30ns)   --->   "%icmp_ln16 = icmp eq i4 %c_0, -3" [pool/pooling.cpp:16]   --->   Operation 31 'icmp' 'icmp_ln16' <Predicate = (!icmp_ln10)> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_7 = and i1 %icmp_ln16, %xor_ln28" [pool/pooling.cpp:28]   --->   Operation 32 'and' 'and_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.73ns)   --->   "%r = add i4 1, %select_ln28_8" [pool/pooling.cpp:13]   --->   Operation 33 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node select_ln13)   --->   "%or_ln13 = or i1 %and_ln28_7, %icmp_ln13" [pool/pooling.cpp:13]   --->   Operation 34 'or' 'or_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln13 = select i1 %or_ln13, i4 0, i4 %c_0" [pool/pooling.cpp:13]   --->   Operation 35 'select' 'select_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%shl_ln25_mid1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r, i1 false)" [pool/pooling.cpp:25]   --->   Operation 36 'bitconcatenate' 'shl_ln25_mid1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (1.02ns)   --->   "%select_ln13_1 = select i1 %and_ln28_7, i4 %r, i4 %select_ln28_8" [pool/pooling.cpp:13]   --->   Operation 37 'select' 'select_ln13_1' <Predicate = (!icmp_ln10)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln13_2 = select i1 %and_ln28_7, i5 %shl_ln25_mid1, i5 %select_ln28_10" [pool/pooling.cpp:13]   --->   Operation 38 'select' 'select_ln13_2' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i5 %select_ln13_2 to i10" [pool/pooling.cpp:28]   --->   Operation 39 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (3.78ns)   --->   "%mul_ln28 = mul i10 26, %zext_ln28_2" [pool/pooling.cpp:28]   --->   Operation 40 'mul' 'mul_ln28' <Predicate = (!icmp_ln10)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node select_ln13_3)   --->   "%or_ln25_1 = or i5 %shl_ln25_mid1, 1" [pool/pooling.cpp:25]   --->   Operation 41 'or' 'or_ln25_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.21ns) (out node of the LUT)   --->   "%select_ln13_3 = select i1 %and_ln28_7, i5 %or_ln25_1, i5 %select_ln28_11" [pool/pooling.cpp:13]   --->   Operation 42 'select' 'select_ln13_3' <Predicate = (!icmp_ln10)> <Delay = 1.21> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %select_ln13, i1 false)" [pool/pooling.cpp:26]   --->   Operation 43 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i5 %shl_ln1 to i10" [pool/pooling.cpp:28]   --->   Operation 44 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.73ns)   --->   "%add_ln28 = add i10 %mul_ln28, %zext_ln28_4" [pool/pooling.cpp:28]   --->   Operation 45 'add' 'add_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i10 %add_ln28 to i1" [pool/pooling.cpp:28]   --->   Operation 46 'trunc' 'trunc_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i1.i4(i1 %trunc_ln28_1, i4 0)" [pool/pooling.cpp:28]   --->   Operation 47 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.78ns)   --->   "%or_ln28_7 = or i5 %tmp_1, %zext_ln28_3_mid2_v" [pool/pooling.cpp:28]   --->   Operation 48 'or' 'or_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.78> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %add_ln28, i32 1, i32 9)" [pool/pooling.cpp:28]   --->   Operation 49 'partselect' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_13 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp, i5 %or_ln28_7)" [pool/pooling.cpp:28]   --->   Operation 50 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln28_5 = zext i14 %tmp_13 to i64" [pool/pooling.cpp:28]   --->   Operation 51 'zext' 'zext_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr = getelementptr [10816 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_5" [pool/pooling.cpp:28]   --->   Operation 52 'getelementptr' 'conv_1_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr = getelementptr [10816 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_5" [pool/pooling.cpp:28]   --->   Operation 53 'getelementptr' 'conv_1_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 54 [2/2] (3.25ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 54 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_2 : Operation 55 [2/2] (3.25ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 55 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%or_ln26 = or i5 %shl_ln1, 1" [pool/pooling.cpp:26]   --->   Operation 56 'or' 'or_ln26' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln28_7 = zext i5 %or_ln26 to i10" [pool/pooling.cpp:28]   --->   Operation 57 'zext' 'zext_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.73ns)   --->   "%add_ln28_2 = add i10 %mul_ln28, %zext_ln28_7" [pool/pooling.cpp:28]   --->   Operation 58 'add' 'add_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_17 = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %add_ln28_2, i4 0)" [pool/pooling.cpp:28]   --->   Operation 59 'bitconcatenate' 'tmp_17' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln28_8 = zext i14 %tmp_17 to i15" [pool/pooling.cpp:28]   --->   Operation 60 'zext' 'zext_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (1.81ns)   --->   "%add_ln28_3 = add i15 %zext_ln28_8, %zext_ln28_1" [pool/pooling.cpp:28]   --->   Operation 61 'add' 'add_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln28_9 = zext i15 %add_ln28_3 to i64" [pool/pooling.cpp:28]   --->   Operation 62 'zext' 'zext_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_1 = getelementptr [10816 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_9" [pool/pooling.cpp:28]   --->   Operation 63 'getelementptr' 'conv_1_out_0_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_1 = getelementptr [10816 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_9" [pool/pooling.cpp:28]   --->   Operation 64 'getelementptr' 'conv_1_out_1_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 65 [2/2] (3.25ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 65 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_2 : Operation 66 [2/2] (3.25ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 66 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_2 : Operation 67 [1/1] (1.91ns)   --->   "%add_ln13 = add i8 1, %indvar_flatten" [pool/pooling.cpp:13]   --->   Operation 67 'add' 'add_ln13' <Predicate = (!icmp_ln10)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 20.1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i5 %select_ln13_3 to i10" [pool/pooling.cpp:28]   --->   Operation 68 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (3.78ns)   --->   "%mul_ln28_1 = mul i10 26, %zext_ln28_3" [pool/pooling.cpp:28]   --->   Operation 69 'mul' 'mul_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (1.73ns)   --->   "%add_ln28_1 = add i10 %mul_ln28_1, %zext_ln28_4" [pool/pooling.cpp:28]   --->   Operation 70 'add' 'add_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i10 %add_ln28_1 to i1" [pool/pooling.cpp:28]   --->   Operation 71 'trunc' 'trunc_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_14 = call i5 @_ssdm_op_BitConcatenate.i5.i1.i4(i1 %trunc_ln28_2, i4 0)" [pool/pooling.cpp:28]   --->   Operation 72 'bitconcatenate' 'tmp_14' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.78ns)   --->   "%or_ln28_8 = or i5 %tmp_14, %zext_ln28_3_mid2_v" [pool/pooling.cpp:28]   --->   Operation 73 'or' 'or_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.78> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_15 = call i9 @_ssdm_op_PartSelect.i9.i10.i32.i32(i10 %add_ln28_1, i32 1, i32 9)" [pool/pooling.cpp:28]   --->   Operation 74 'partselect' 'tmp_15' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_16 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_15, i5 %or_ln28_8)" [pool/pooling.cpp:28]   --->   Operation 75 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln28_6 = zext i14 %tmp_16 to i64" [pool/pooling.cpp:28]   --->   Operation 76 'zext' 'zext_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_2 = getelementptr [10816 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_6" [pool/pooling.cpp:28]   --->   Operation 77 'getelementptr' 'conv_1_out_0_addr_2' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_2 = getelementptr [10816 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_6" [pool/pooling.cpp:28]   --->   Operation 78 'getelementptr' 'conv_1_out_1_addr_2' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 0.00>
ST_3 : Operation 79 [1/2] (3.25ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 79 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 80 [1/2] (3.25ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pool/pooling.cpp:28]   --->   Operation 80 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 81 [1/1] (0.69ns)   --->   "%select_ln28_4 = select i1 %trunc_ln28, float %conv_1_out_1_load, float %conv_1_out_0_load" [pool/pooling.cpp:28]   --->   Operation 81 'select' 'select_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %select_ln28_4 to i32" [pool/pooling.cpp:28]   --->   Operation 82 'bitcast' 'bitcast_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 83 'partselect' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28 to i23" [pool/pooling.cpp:28]   --->   Operation 84 'trunc' 'trunc_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (1.55ns)   --->   "%icmp_ln28 = icmp ne i8 %tmp_3, -1" [pool/pooling.cpp:28]   --->   Operation 85 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (2.44ns)   --->   "%icmp_ln28_1 = icmp eq i23 %trunc_ln28_3, 0" [pool/pooling.cpp:28]   --->   Operation 86 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28 = or i1 %icmp_ln28_1, %icmp_ln28" [pool/pooling.cpp:28]   --->   Operation 87 'or' 'or_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (6.78ns)   --->   "%tmp_4 = fcmp ogt float %select_ln28_4, 0x3810000000000000" [pool/pooling.cpp:28]   --->   Operation 88 'fcmp' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%and_ln28 = and i1 %or_ln28, %tmp_4" [pool/pooling.cpp:28]   --->   Operation 89 'and' 'and_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28, float %select_ln28_4, float 0x3810000000000000" [pool/pooling.cpp:28]   --->   Operation 90 'select' 'select_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (1.73ns)   --->   "%add_ln28_4 = add i10 %mul_ln28_1, %zext_ln28_7" [pool/pooling.cpp:28]   --->   Operation 91 'add' 'add_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_18 = call i14 @_ssdm_op_BitConcatenate.i14.i10.i4(i10 %add_ln28_4, i4 0)" [pool/pooling.cpp:28]   --->   Operation 92 'bitconcatenate' 'tmp_18' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln28_10 = zext i14 %tmp_18 to i15" [pool/pooling.cpp:28]   --->   Operation 93 'zext' 'zext_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (1.81ns)   --->   "%add_ln28_5 = add i15 %zext_ln28_10, %zext_ln28_1" [pool/pooling.cpp:28]   --->   Operation 94 'add' 'add_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln28_11 = zext i15 %add_ln28_5 to i64" [pool/pooling.cpp:28]   --->   Operation 95 'zext' 'zext_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_3 = getelementptr [10816 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_11" [pool/pooling.cpp:28]   --->   Operation 96 'getelementptr' 'conv_1_out_0_addr_3' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_3 = getelementptr [10816 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_11" [pool/pooling.cpp:28]   --->   Operation 97 'getelementptr' 'conv_1_out_1_addr_3' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 0.00>
ST_3 : Operation 98 [1/2] (3.25ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 98 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 99 [1/2] (3.25ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pool/pooling.cpp:28]   --->   Operation 99 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 100 [1/1] (0.69ns)   --->   "%select_ln28_5 = select i1 %trunc_ln28, float %conv_1_out_1_load_1, float %conv_1_out_0_load_1" [pool/pooling.cpp:28]   --->   Operation 100 'select' 'select_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %select_ln28_5 to i32" [pool/pooling.cpp:28]   --->   Operation 101 'bitcast' 'bitcast_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 102 'partselect' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_1 to i23" [pool/pooling.cpp:28]   --->   Operation 103 'trunc' 'trunc_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %select_ln28 to i32" [pool/pooling.cpp:28]   --->   Operation 104 'bitcast' 'bitcast_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 105 'partselect' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_2 to i23" [pool/pooling.cpp:28]   --->   Operation 106 'trunc' 'trunc_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (1.55ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_5, -1" [pool/pooling.cpp:28]   --->   Operation 107 'icmp' 'icmp_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (2.44ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_4, 0" [pool/pooling.cpp:28]   --->   Operation 108 'icmp' 'icmp_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pool/pooling.cpp:28]   --->   Operation 109 'or' 'or_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 110 [1/1] (1.55ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_6, -1" [pool/pooling.cpp:28]   --->   Operation 110 'icmp' 'icmp_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 111 [1/1] (2.44ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_5, 0" [pool/pooling.cpp:28]   --->   Operation 111 'icmp' 'icmp_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pool/pooling.cpp:28]   --->   Operation 112 'or' 'or_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%and_ln28_1 = and i1 %or_ln28_1, %or_ln28_2" [pool/pooling.cpp:28]   --->   Operation 113 'and' 'and_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 114 [1/1] (6.78ns)   --->   "%tmp_7 = fcmp ogt float %select_ln28_5, %select_ln28" [pool/pooling.cpp:28]   --->   Operation 114 'fcmp' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_2 = and i1 %and_ln28_1, %tmp_7" [pool/pooling.cpp:28]   --->   Operation 115 'and' 'and_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_2, float %select_ln28_5, float %select_ln28" [pool/pooling.cpp:28]   --->   Operation 116 'select' 'select_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 117 [2/2] (3.25ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 117 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 118 [2/2] (3.25ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 118 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 119 [2/2] (3.25ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 119 'load' 'conv_1_out_1_load_3' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 120 [2/2] (3.25ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 120 'load' 'conv_1_out_0_load_3' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_3 : Operation 121 [1/1] (1.73ns)   --->   "%c = add i4 1, %select_ln13" [pool/pooling.cpp:16]   --->   Operation 121 'add' 'c' <Predicate = (!icmp_ln10)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 122 [1/1] (1.24ns)   --->   "%select_ln13_4 = select i1 %icmp_ln13, i8 1, i8 %add_ln13" [pool/pooling.cpp:13]   --->   Operation 122 'select' 'select_ln13_4' <Predicate = (!icmp_ln10)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 24.1>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 123 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5408, i64 5408, i64 5408)"   --->   Operation 124 'speclooptripcount' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i6 %select_ln28_9 to i14" [pool/pooling.cpp:28]   --->   Operation 125 'zext' 'zext_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @Row_Loop_Col_Loop_st)"   --->   Operation 126 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i4 %select_ln13_1 to i8" [pool/pooling.cpp:35]   --->   Operation 127 'zext' 'zext_ln35' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (3.36ns) (grouped into DSP with root node add_ln35)   --->   "%mul_ln35 = mul i8 13, %zext_ln35" [pool/pooling.cpp:35]   --->   Operation 128 'mul' 'mul_ln35' <Predicate = (!icmp_ln10)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind" [pool/pooling.cpp:17]   --->   Operation 129 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str4) nounwind" [pool/pooling.cpp:17]   --->   Operation 130 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pool/pooling.cpp:18]   --->   Operation 131 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 132 [1/2] (3.25ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 132 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 133 [1/2] (3.25ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pool/pooling.cpp:28]   --->   Operation 133 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 134 [1/1] (0.69ns)   --->   "%select_ln28_6 = select i1 %trunc_ln28, float %conv_1_out_1_load_2, float %conv_1_out_0_load_2" [pool/pooling.cpp:28]   --->   Operation 134 'select' 'select_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %select_ln28_6 to i32" [pool/pooling.cpp:28]   --->   Operation 135 'bitcast' 'bitcast_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 136 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_3 to i23" [pool/pooling.cpp:28]   --->   Operation 137 'trunc' 'trunc_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %select_ln28_1 to i32" [pool/pooling.cpp:28]   --->   Operation 138 'bitcast' 'bitcast_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 139 'partselect' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_4 to i23" [pool/pooling.cpp:28]   --->   Operation 140 'trunc' 'trunc_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (1.55ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_8, -1" [pool/pooling.cpp:28]   --->   Operation 141 'icmp' 'icmp_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 142 [1/1] (2.44ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_6, 0" [pool/pooling.cpp:28]   --->   Operation 142 'icmp' 'icmp_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pool/pooling.cpp:28]   --->   Operation 143 'or' 'or_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 144 [1/1] (1.55ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_9, -1" [pool/pooling.cpp:28]   --->   Operation 144 'icmp' 'icmp_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 145 [1/1] (2.44ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_7, 0" [pool/pooling.cpp:28]   --->   Operation 145 'icmp' 'icmp_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pool/pooling.cpp:28]   --->   Operation 146 'or' 'or_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%and_ln28_3 = and i1 %or_ln28_3, %or_ln28_4" [pool/pooling.cpp:28]   --->   Operation 147 'and' 'and_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (6.78ns)   --->   "%tmp_s = fcmp ogt float %select_ln28_6, %select_ln28_1" [pool/pooling.cpp:28]   --->   Operation 148 'fcmp' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_4 = and i1 %and_ln28_3, %tmp_s" [pool/pooling.cpp:28]   --->   Operation 149 'and' 'and_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_4, float %select_ln28_6, float %select_ln28_1" [pool/pooling.cpp:28]   --->   Operation 150 'select' 'select_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 151 [1/2] (3.25ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 151 'load' 'conv_1_out_1_load_3' <Predicate = (!icmp_ln10 & trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 152 [1/2] (3.25ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pool/pooling.cpp:28]   --->   Operation 152 'load' 'conv_1_out_0_load_3' <Predicate = (!icmp_ln10 & !trunc_ln28)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 153 [1/1] (0.69ns)   --->   "%select_ln28_7 = select i1 %trunc_ln28, float %conv_1_out_1_load_3, float %conv_1_out_0_load_3" [pool/pooling.cpp:28]   --->   Operation 153 'select' 'select_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 154 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %select_ln28_7 to i32" [pool/pooling.cpp:28]   --->   Operation 154 'bitcast' 'bitcast_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 155 'partselect' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 156 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_5 to i23" [pool/pooling.cpp:28]   --->   Operation 156 'trunc' 'trunc_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 157 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %select_ln28_2 to i32" [pool/pooling.cpp:28]   --->   Operation 157 'bitcast' 'bitcast_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pool/pooling.cpp:28]   --->   Operation 158 'partselect' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 159 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_6 to i23" [pool/pooling.cpp:28]   --->   Operation 159 'trunc' 'trunc_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 160 [1/1] (1.55ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_10, -1" [pool/pooling.cpp:28]   --->   Operation 160 'icmp' 'icmp_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 161 [1/1] (2.44ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_8, 0" [pool/pooling.cpp:28]   --->   Operation 161 'icmp' 'icmp_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pool/pooling.cpp:28]   --->   Operation 162 'or' 'or_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 163 [1/1] (1.55ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_11, -1" [pool/pooling.cpp:28]   --->   Operation 163 'icmp' 'icmp_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 164 [1/1] (2.44ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_9, 0" [pool/pooling.cpp:28]   --->   Operation 164 'icmp' 'icmp_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pool/pooling.cpp:28]   --->   Operation 165 'or' 'or_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%and_ln28_5 = and i1 %or_ln28_5, %or_ln28_6" [pool/pooling.cpp:28]   --->   Operation 166 'and' 'and_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 167 [1/1] (6.78ns)   --->   "%tmp_12 = fcmp ogt float %select_ln28_7, %select_ln28_2" [pool/pooling.cpp:28]   --->   Operation 167 'fcmp' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 168 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln28_6 = and i1 %and_ln28_5, %tmp_12" [pool/pooling.cpp:28]   --->   Operation 168 'and' 'and_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 169 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_6, float %select_ln28_7, float %select_ln28_2" [pool/pooling.cpp:28]   --->   Operation 169 'select' 'select_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i4 %select_ln13 to i8" [pool/pooling.cpp:35]   --->   Operation 170 'zext' 'zext_ln35_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 171 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln35 = add i8 %mul_ln35, %zext_ln35_1" [pool/pooling.cpp:35]   --->   Operation 171 'add' 'add_ln35' <Predicate = (!icmp_ln10)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_19 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln35, i5 0)" [pool/pooling.cpp:35]   --->   Operation 172 'bitconcatenate' 'tmp_19' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i13 %tmp_19 to i14" [pool/pooling.cpp:35]   --->   Operation 173 'zext' 'zext_ln35_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 174 [1/1] (1.67ns)   --->   "%add_ln35_1 = add i14 %zext_ln35_2, %zext_ln28" [pool/pooling.cpp:35]   --->   Operation 174 'add' 'add_ln35_1' <Predicate = (!icmp_ln10)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i14 %add_ln35_1 to i64" [pool/pooling.cpp:35]   --->   Operation 175 'zext' 'zext_ln35_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 176 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln35_3" [pool/pooling.cpp:35]   --->   Operation 176 'getelementptr' 'max_pool_1_out_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 177 [1/1] (3.25ns)   --->   "store float %select_ln28_3, float* %max_pool_1_out_addr, align 4" [pool/pooling.cpp:35]   --->   Operation 177 'store' <Predicate = (!icmp_ln10)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 178 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str4, i32 %tmp_2) nounwind" [pool/pooling.cpp:36]   --->   Operation 178 'specregionend' 'empty_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 179 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 179 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 5 <SV = 2> <Delay = 0.00>
ST_5 : Operation 180 [1/1] (0.00ns)   --->   "ret void" [pool/pooling.cpp:39]   --->   Operation 180 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten23', pool/pooling.cpp:10) with incoming values : ('add_ln10', pool/pooling.cpp:10) [10]  (1.77 ns)

 <State 2>: 16.1ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', pool/pooling.cpp:13) with incoming values : ('select_ln13_4', pool/pooling.cpp:13) [12]  (0 ns)
	'icmp' operation ('icmp_ln13', pool/pooling.cpp:13) [24]  (1.55 ns)
	'select' operation ('select_ln28_8', pool/pooling.cpp:28) [25]  (1.02 ns)
	'add' operation ('r', pool/pooling.cpp:13) [36]  (1.74 ns)
	'select' operation ('select_ln13_2', pool/pooling.cpp:13) [44]  (1.22 ns)
	'mul' operation ('mul_ln28', pool/pooling.cpp:28) [46]  (3.78 ns)
	'add' operation ('add_ln28_2', pool/pooling.cpp:28) [88]  (1.73 ns)
	'add' operation ('add_ln28_3', pool/pooling.cpp:28) [91]  (1.81 ns)
	'getelementptr' operation ('conv_1_out_1_addr_1', pool/pooling.cpp:28) [100]  (0 ns)
	'load' operation ('conv_1_out_1_load_1', pool/pooling.cpp:28) on array 'conv_1_out_1' [102]  (3.25 ns)

 <State 3>: 20.2ns
The critical path consists of the following:
	'load' operation ('conv_1_out_1_load', pool/pooling.cpp:28) on array 'conv_1_out_1' [74]  (3.25 ns)
	'select' operation ('select_ln28_4', pool/pooling.cpp:28) [76]  (0.698 ns)
	'fcmp' operation ('tmp_4', pool/pooling.cpp:28) [83]  (6.79 ns)
	'and' operation ('and_ln28', pool/pooling.cpp:28) [84]  (0 ns)
	'select' operation ('select_ln28', pool/pooling.cpp:28) [85]  (0.978 ns)
	'fcmp' operation ('tmp_7', pool/pooling.cpp:28) [118]  (6.79 ns)
	'and' operation ('and_ln28_2', pool/pooling.cpp:28) [119]  (0.978 ns)
	'select' operation ('select_ln28_1', pool/pooling.cpp:28) [120]  (0.698 ns)

 <State 4>: 24.1ns
The critical path consists of the following:
	'load' operation ('conv_1_out_1_load_2', pool/pooling.cpp:28) on array 'conv_1_out_1' [121]  (3.25 ns)
	'select' operation ('select_ln28_6', pool/pooling.cpp:28) [123]  (0.698 ns)
	'fcmp' operation ('tmp_s', pool/pooling.cpp:28) [137]  (6.79 ns)
	'and' operation ('and_ln28_4', pool/pooling.cpp:28) [138]  (0.978 ns)
	'select' operation ('select_ln28_2', pool/pooling.cpp:28) [139]  (0.698 ns)
	'fcmp' operation ('tmp_12', pool/pooling.cpp:28) [156]  (6.79 ns)
	'and' operation ('and_ln28_6', pool/pooling.cpp:28) [157]  (0.978 ns)
	'select' operation ('select_ln28_3', pool/pooling.cpp:28) [158]  (0.698 ns)
	'store' operation ('store_ln35', pool/pooling.cpp:35) of variable 'select_ln28_3', pool/pooling.cpp:28 on array 'max_pool_1_out' [166]  (3.25 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
