// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"
#include "max_pool_1_mac_mucud.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<14> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<14> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<14> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_mac_mucud<1,1,5,4,4,8>* max_pool_1_mac_mucud_U3;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten23_reg_199;
    sc_signal< sc_lv<6> > f_0_reg_210;
    sc_signal< sc_lv<8> > indvar_flatten_reg_221;
    sc_signal< sc_lv<4> > r_0_reg_232;
    sc_signal< sc_lv<4> > c_0_reg_243;
    sc_signal< sc_lv<1> > icmp_ln10_fu_293_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1020;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<13> > add_ln10_fu_299_p2;
    sc_signal< sc_lv<13> > add_ln10_reg_1024;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_311_p2;
    sc_signal< sc_lv<1> > icmp_ln13_reg_1029;
    sc_signal< sc_lv<6> > select_ln28_9_fu_325_p3;
    sc_signal< sc_lv<6> > select_ln28_9_reg_1034;
    sc_signal< sc_lv<1> > trunc_ln28_fu_333_p1;
    sc_signal< sc_lv<1> > trunc_ln28_reg_1040;
    sc_signal< sc_lv<5> > zext_ln28_3_mid2_v_fu_337_p4;
    sc_signal< sc_lv<5> > zext_ln28_3_mid2_v_reg_1046;
    sc_signal< sc_lv<15> > zext_ln28_1_fu_347_p1;
    sc_signal< sc_lv<15> > zext_ln28_1_reg_1051;
    sc_signal< sc_lv<4> > select_ln13_fu_397_p3;
    sc_signal< sc_lv<4> > select_ln13_reg_1056;
    sc_signal< sc_lv<4> > select_ln13_1_fu_413_p3;
    sc_signal< sc_lv<4> > select_ln13_1_reg_1062;
    sc_signal< sc_lv<5> > select_ln13_3_fu_445_p3;
    sc_signal< sc_lv<5> > select_ln13_3_reg_1068;
    sc_signal< sc_lv<10> > zext_ln28_4_fu_461_p1;
    sc_signal< sc_lv<10> > zext_ln28_4_reg_1073;
    sc_signal< sc_lv<10> > zext_ln28_7_fu_519_p1;
    sc_signal< sc_lv<10> > zext_ln28_7_reg_1088;
    sc_signal< sc_lv<8> > add_ln13_fu_553_p2;
    sc_signal< sc_lv<8> > add_ln13_reg_1103;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > select_ln28_1_fu_777_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_1128;
    sc_signal< sc_lv<4> > c_fu_785_p2;
    sc_signal< sc_lv<4> > c_reg_1135;
    sc_signal< sc_lv<8> > select_ln13_4_fu_790_p3;
    sc_signal< sc_lv<8> > select_ln13_4_reg_1140;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<13> > ap_phi_mux_indvar_flatten23_phi_fu_203_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<6> > ap_phi_mux_f_0_phi_fu_214_p4;
    sc_signal< sc_lv<8> > ap_phi_mux_indvar_flatten_phi_fu_225_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_236_p4;
    sc_signal< sc_lv<4> > ap_phi_mux_c_0_phi_fu_247_p4;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_507_p1;
    sc_signal< sc_lv<64> > zext_ln28_9_fu_547_p1;
    sc_signal< sc_lv<64> > zext_ln28_6_fu_608_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_11_fu_687_p1;
    sc_signal< sc_lv<64> > zext_ln35_3_fu_1006_p1;
    sc_signal< sc_lv<32> > grp_fu_263_p3;
    sc_signal< sc_lv<32> > grp_fu_254_p1;
    sc_signal< sc_lv<32> > grp_fu_271_p3;
    sc_signal< sc_lv<32> > grp_fu_259_p1;
    sc_signal< sc_lv<32> > select_ln28_fu_656_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_885_p3;
    sc_signal< sc_lv<5> > shl_ln_fu_279_p3;
    sc_signal< sc_lv<6> > f_fu_305_p2;
    sc_signal< sc_lv<5> > or_ln25_fu_287_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_373_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_367_p2;
    sc_signal< sc_lv<4> > select_ln28_8_fu_317_p3;
    sc_signal< sc_lv<1> > and_ln28_7_fu_379_p2;
    sc_signal< sc_lv<1> > or_ln13_fu_391_p2;
    sc_signal< sc_lv<4> > r_fu_385_p2;
    sc_signal< sc_lv<5> > shl_ln25_mid1_fu_405_p3;
    sc_signal< sc_lv<5> > select_ln28_10_fu_351_p3;
    sc_signal< sc_lv<5> > select_ln13_2_fu_421_p3;
    sc_signal< sc_lv<5> > mul_ln28_fu_433_p1;
    sc_signal< sc_lv<5> > or_ln25_1_fu_439_p2;
    sc_signal< sc_lv<5> > select_ln28_11_fu_359_p3;
    sc_signal< sc_lv<5> > shl_ln1_fu_453_p3;
    sc_signal< sc_lv<10> > mul_ln28_fu_433_p2;
    sc_signal< sc_lv<10> > add_ln28_fu_465_p2;
    sc_signal< sc_lv<1> > trunc_ln28_1_fu_471_p1;
    sc_signal< sc_lv<5> > tmp_1_fu_475_p3;
    sc_signal< sc_lv<9> > tmp_fu_489_p4;
    sc_signal< sc_lv<5> > or_ln28_7_fu_483_p2;
    sc_signal< sc_lv<14> > tmp_13_fu_499_p3;
    sc_signal< sc_lv<5> > or_ln26_fu_513_p2;
    sc_signal< sc_lv<10> > add_ln28_2_fu_523_p2;
    sc_signal< sc_lv<14> > tmp_17_fu_529_p3;
    sc_signal< sc_lv<15> > zext_ln28_8_fu_537_p1;
    sc_signal< sc_lv<15> > add_ln28_3_fu_541_p2;
    sc_signal< sc_lv<5> > mul_ln28_1_fu_562_p1;
    sc_signal< sc_lv<10> > mul_ln28_1_fu_562_p2;
    sc_signal< sc_lv<10> > add_ln28_1_fu_568_p2;
    sc_signal< sc_lv<1> > trunc_ln28_2_fu_573_p1;
    sc_signal< sc_lv<5> > tmp_14_fu_577_p3;
    sc_signal< sc_lv<9> > tmp_15_fu_590_p4;
    sc_signal< sc_lv<5> > or_ln28_8_fu_585_p2;
    sc_signal< sc_lv<14> > tmp_16_fu_600_p3;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_614_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_618_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_628_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_638_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_632_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_644_p2;
    sc_signal< sc_lv<1> > grp_fu_254_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_650_p2;
    sc_signal< sc_lv<10> > add_ln28_4_fu_665_p2;
    sc_signal< sc_lv<14> > tmp_18_fu_670_p3;
    sc_signal< sc_lv<15> > zext_ln28_10_fu_678_p1;
    sc_signal< sc_lv<15> > add_ln28_5_fu_682_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_693_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_711_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_697_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_707_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_735_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_729_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_715_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_725_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_753_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_747_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_741_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_759_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_765_p2;
    sc_signal< sc_lv<1> > grp_fu_259_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_771_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_802_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_820_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_806_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_816_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_843_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_837_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_823_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_833_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_861_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_855_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_849_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_867_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_873_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_879_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_893_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_911_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_897_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_907_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_935_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_929_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_915_p4;
    sc_signal< sc_lv<23> > trunc_ln28_9_fu_925_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_953_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_947_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_941_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_959_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_965_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_971_p2;
    sc_signal< sc_lv<8> > grp_fu_1011_p3;
    sc_signal< sc_lv<13> > tmp_19_fu_989_p3;
    sc_signal< sc_lv<14> > zext_ln35_2_fu_996_p1;
    sc_signal< sc_lv<14> > zext_ln28_fu_796_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_1000_p2;
    sc_signal< sc_lv<5> > grp_fu_1011_p0;
    sc_signal< sc_lv<4> > grp_fu_1011_p1;
    sc_signal< sc_lv<4> > grp_fu_1011_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_1011_p10;
    sc_signal< sc_lv<8> > grp_fu_1011_p20;
    sc_signal< sc_lv<10> > mul_ln28_1_fu_562_p10;
    sc_signal< sc_lv<10> > mul_ln28_fu_433_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<13> ap_const_lv13_1520;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<10> ap_const_lv10_1A;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_299_p2();
    void thread_add_ln13_fu_553_p2();
    void thread_add_ln28_1_fu_568_p2();
    void thread_add_ln28_2_fu_523_p2();
    void thread_add_ln28_3_fu_541_p2();
    void thread_add_ln28_4_fu_665_p2();
    void thread_add_ln28_5_fu_682_p2();
    void thread_add_ln28_fu_465_p2();
    void thread_add_ln35_1_fu_1000_p2();
    void thread_and_ln28_1_fu_765_p2();
    void thread_and_ln28_2_fu_771_p2();
    void thread_and_ln28_3_fu_873_p2();
    void thread_and_ln28_4_fu_879_p2();
    void thread_and_ln28_5_fu_965_p2();
    void thread_and_ln28_6_fu_971_p2();
    void thread_and_ln28_7_fu_379_p2();
    void thread_and_ln28_fu_650_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_247_p4();
    void thread_ap_phi_mux_f_0_phi_fu_214_p4();
    void thread_ap_phi_mux_indvar_flatten23_phi_fu_203_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_225_p4();
    void thread_ap_phi_mux_r_0_phi_fu_236_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_693_p1();
    void thread_bitcast_ln28_2_fu_711_p1();
    void thread_bitcast_ln28_3_fu_802_p1();
    void thread_bitcast_ln28_4_fu_820_p1();
    void thread_bitcast_ln28_5_fu_893_p1();
    void thread_bitcast_ln28_6_fu_911_p1();
    void thread_bitcast_ln28_fu_614_p1();
    void thread_c_fu_785_p2();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_f_fu_305_p2();
    void thread_grp_fu_1011_p0();
    void thread_grp_fu_1011_p1();
    void thread_grp_fu_1011_p10();
    void thread_grp_fu_1011_p2();
    void thread_grp_fu_1011_p20();
    void thread_grp_fu_254_p1();
    void thread_grp_fu_259_p1();
    void thread_grp_fu_263_p3();
    void thread_grp_fu_271_p3();
    void thread_icmp_ln10_fu_293_p2();
    void thread_icmp_ln13_fu_311_p2();
    void thread_icmp_ln16_fu_373_p2();
    void thread_icmp_ln28_10_fu_929_p2();
    void thread_icmp_ln28_11_fu_935_p2();
    void thread_icmp_ln28_12_fu_947_p2();
    void thread_icmp_ln28_13_fu_953_p2();
    void thread_icmp_ln28_1_fu_638_p2();
    void thread_icmp_ln28_2_fu_729_p2();
    void thread_icmp_ln28_3_fu_735_p2();
    void thread_icmp_ln28_4_fu_747_p2();
    void thread_icmp_ln28_5_fu_753_p2();
    void thread_icmp_ln28_6_fu_837_p2();
    void thread_icmp_ln28_7_fu_843_p2();
    void thread_icmp_ln28_8_fu_855_p2();
    void thread_icmp_ln28_9_fu_861_p2();
    void thread_icmp_ln28_fu_632_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_mul_ln28_1_fu_562_p1();
    void thread_mul_ln28_1_fu_562_p10();
    void thread_mul_ln28_1_fu_562_p2();
    void thread_mul_ln28_fu_433_p1();
    void thread_mul_ln28_fu_433_p10();
    void thread_mul_ln28_fu_433_p2();
    void thread_or_ln13_fu_391_p2();
    void thread_or_ln25_1_fu_439_p2();
    void thread_or_ln25_fu_287_p2();
    void thread_or_ln26_fu_513_p2();
    void thread_or_ln28_1_fu_741_p2();
    void thread_or_ln28_2_fu_759_p2();
    void thread_or_ln28_3_fu_849_p2();
    void thread_or_ln28_4_fu_867_p2();
    void thread_or_ln28_5_fu_941_p2();
    void thread_or_ln28_6_fu_959_p2();
    void thread_or_ln28_7_fu_483_p2();
    void thread_or_ln28_8_fu_585_p2();
    void thread_or_ln28_fu_644_p2();
    void thread_r_fu_385_p2();
    void thread_select_ln13_1_fu_413_p3();
    void thread_select_ln13_2_fu_421_p3();
    void thread_select_ln13_3_fu_445_p3();
    void thread_select_ln13_4_fu_790_p3();
    void thread_select_ln13_fu_397_p3();
    void thread_select_ln28_10_fu_351_p3();
    void thread_select_ln28_11_fu_359_p3();
    void thread_select_ln28_1_fu_777_p3();
    void thread_select_ln28_2_fu_885_p3();
    void thread_select_ln28_8_fu_317_p3();
    void thread_select_ln28_9_fu_325_p3();
    void thread_select_ln28_fu_656_p3();
    void thread_shl_ln1_fu_453_p3();
    void thread_shl_ln25_mid1_fu_405_p3();
    void thread_shl_ln_fu_279_p3();
    void thread_tmp_10_fu_897_p4();
    void thread_tmp_11_fu_915_p4();
    void thread_tmp_13_fu_499_p3();
    void thread_tmp_14_fu_577_p3();
    void thread_tmp_15_fu_590_p4();
    void thread_tmp_16_fu_600_p3();
    void thread_tmp_17_fu_529_p3();
    void thread_tmp_18_fu_670_p3();
    void thread_tmp_19_fu_989_p3();
    void thread_tmp_1_fu_475_p3();
    void thread_tmp_3_fu_618_p4();
    void thread_tmp_5_fu_697_p4();
    void thread_tmp_6_fu_715_p4();
    void thread_tmp_8_fu_806_p4();
    void thread_tmp_9_fu_823_p4();
    void thread_tmp_fu_489_p4();
    void thread_trunc_ln28_1_fu_471_p1();
    void thread_trunc_ln28_2_fu_573_p1();
    void thread_trunc_ln28_3_fu_628_p1();
    void thread_trunc_ln28_4_fu_707_p1();
    void thread_trunc_ln28_5_fu_725_p1();
    void thread_trunc_ln28_6_fu_816_p1();
    void thread_trunc_ln28_7_fu_833_p1();
    void thread_trunc_ln28_8_fu_907_p1();
    void thread_trunc_ln28_9_fu_925_p1();
    void thread_trunc_ln28_fu_333_p1();
    void thread_xor_ln28_fu_367_p2();
    void thread_zext_ln28_10_fu_678_p1();
    void thread_zext_ln28_11_fu_687_p1();
    void thread_zext_ln28_1_fu_347_p1();
    void thread_zext_ln28_3_mid2_v_fu_337_p4();
    void thread_zext_ln28_4_fu_461_p1();
    void thread_zext_ln28_5_fu_507_p1();
    void thread_zext_ln28_6_fu_608_p1();
    void thread_zext_ln28_7_fu_519_p1();
    void thread_zext_ln28_8_fu_537_p1();
    void thread_zext_ln28_9_fu_547_p1();
    void thread_zext_ln28_fu_796_p1();
    void thread_zext_ln35_2_fu_996_p1();
    void thread_zext_ln35_3_fu_1006_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
