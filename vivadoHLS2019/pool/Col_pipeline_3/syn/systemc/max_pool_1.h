// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"
#include "max_pool_1_mac_mucud.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<14> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<14> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<14> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<14> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<13> > max_pool_1_out_address0;
    sc_out< sc_logic > max_pool_1_out_ce0;
    sc_out< sc_logic > max_pool_1_out_we0;
    sc_out< sc_lv<32> > max_pool_1_out_d0;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U3;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U4;
    max_pool_1_mac_mucud<1,1,5,4,4,8>* max_pool_1_mac_mucud_U5;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten13_reg_163;
    sc_signal< sc_lv<6> > f_0_reg_174;
    sc_signal< sc_lv<8> > indvar_flatten_reg_185;
    sc_signal< sc_lv<4> > r_0_reg_196;
    sc_signal< sc_lv<4> > c_0_reg_207;
    sc_signal< sc_lv<1> > icmp_ln10_fu_239_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_823;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_823_pp0_iter1_reg;
    sc_signal< sc_lv<13> > add_ln10_fu_245_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > select_ln28_5_fu_271_p3;
    sc_signal< sc_lv<6> > select_ln28_5_reg_832;
    sc_signal< sc_lv<6> > select_ln28_5_reg_832_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln35_fu_309_p3;
    sc_signal< sc_lv<4> > select_ln35_reg_839;
    sc_signal< sc_lv<4> > select_ln35_reg_839_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln35_1_fu_317_p3;
    sc_signal< sc_lv<4> > select_ln35_1_reg_844;
    sc_signal< sc_lv<4> > select_ln35_1_reg_844_pp0_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln28_2_fu_389_p1;
    sc_signal< sc_lv<64> > zext_ln28_2_reg_850;
    sc_signal< sc_lv<9> > add_ln28_1_fu_404_p2;
    sc_signal< sc_lv<9> > add_ln28_1_reg_860;
    sc_signal< sc_lv<4> > c_fu_410_p2;
    sc_signal< sc_lv<8> > select_ln13_fu_422_p3;
    sc_signal< sc_lv<32> > select_ln28_fu_475_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_880;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<6> > ap_phi_mux_f_0_phi_fu_178_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_r_0_phi_fu_200_p4;
    sc_signal< sc_lv<64> > zext_ln28_5_fu_500_p1;
    sc_signal< sc_lv<64> > zext_ln35_5_fu_809_p1;
    sc_signal< sc_lv<32> > select_ln28_1_fu_595_p3;
    sc_signal< sc_lv<32> > select_ln28_2_fu_687_p3;
    sc_signal< sc_lv<1> > icmp_ln13_fu_257_p2;
    sc_signal< sc_lv<6> > f_fu_251_p2;
    sc_signal< sc_lv<1> > icmp_ln16_fu_285_p2;
    sc_signal< sc_lv<1> > xor_ln28_fu_279_p2;
    sc_signal< sc_lv<4> > select_ln28_4_fu_263_p3;
    sc_signal< sc_lv<1> > and_ln28_7_fu_291_p2;
    sc_signal< sc_lv<1> > or_ln35_fu_303_p2;
    sc_signal< sc_lv<4> > r_fu_297_p2;
    sc_signal< sc_lv<4> > mul_ln28_fu_329_p1;
    sc_signal< sc_lv<5> > shl_ln_fu_335_p3;
    sc_signal< sc_lv<9> > zext_ln28_1_fu_343_p1;
    sc_signal< sc_lv<9> > mul_ln28_fu_329_p2;
    sc_signal< sc_lv<9> > add_ln28_fu_347_p2;
    sc_signal< sc_lv<1> > trunc_ln28_fu_353_p1;
    sc_signal< sc_lv<6> > tmp_1_fu_357_p3;
    sc_signal< sc_lv<8> > tmp_fu_371_p4;
    sc_signal< sc_lv<6> > or_ln28_7_fu_365_p2;
    sc_signal< sc_lv<14> > tmp_13_fu_381_p3;
    sc_signal< sc_lv<5> > or_ln26_fu_394_p2;
    sc_signal< sc_lv<9> > zext_ln28_3_fu_400_p1;
    sc_signal< sc_lv<8> > add_ln13_fu_416_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_433_p1;
    sc_signal< sc_lv<8> > tmp_3_fu_437_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_447_p1;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_457_p2;
    sc_signal< sc_lv<1> > icmp_ln28_fu_451_p2;
    sc_signal< sc_lv<1> > or_ln28_fu_463_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_218_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_469_p2;
    sc_signal< sc_lv<14> > tmp_14_fu_483_p3;
    sc_signal< sc_lv<15> > zext_ln35_1_fu_430_p1;
    sc_signal< sc_lv<15> > zext_ln28_4_fu_490_p1;
    sc_signal< sc_lv<15> > add_ln28_2_fu_494_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_512_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_530_p1;
    sc_signal< sc_lv<8> > tmp_5_fu_516_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_526_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_553_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_547_p2;
    sc_signal< sc_lv<8> > tmp_6_fu_533_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_543_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_571_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_565_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_559_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_577_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_583_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_224_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_589_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_603_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_621_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_607_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_617_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_645_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_639_p2;
    sc_signal< sc_lv<8> > tmp_9_fu_625_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_635_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_663_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_657_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_651_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_669_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_675_p2;
    sc_signal< sc_lv<1> > tmp_s_fu_229_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_681_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_696_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_714_p1;
    sc_signal< sc_lv<8> > tmp_10_fu_700_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_710_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_738_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_732_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_718_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_728_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_756_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_750_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_744_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_762_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_768_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_234_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_774_p2;
    sc_signal< sc_lv<8> > grp_fu_814_p3;
    sc_signal< sc_lv<13> > tmp_15_fu_792_p3;
    sc_signal< sc_lv<14> > zext_ln35_fu_506_p1;
    sc_signal< sc_lv<14> > zext_ln35_4_fu_799_p1;
    sc_signal< sc_lv<14> > add_ln35_1_fu_803_p2;
    sc_signal< sc_lv<5> > grp_fu_814_p0;
    sc_signal< sc_lv<4> > grp_fu_814_p1;
    sc_signal< sc_lv<4> > grp_fu_814_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_814_p10;
    sc_signal< sc_lv<8> > grp_fu_814_p20;
    sc_signal< sc_lv<9> > mul_ln28_fu_329_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<13> ap_const_lv13_1520;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_A9;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<9> ap_const_lv9_1A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_D;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_245_p2();
    void thread_add_ln13_fu_416_p2();
    void thread_add_ln28_1_fu_404_p2();
    void thread_add_ln28_2_fu_494_p2();
    void thread_add_ln28_fu_347_p2();
    void thread_add_ln35_1_fu_803_p2();
    void thread_and_ln28_1_fu_583_p2();
    void thread_and_ln28_2_fu_589_p2();
    void thread_and_ln28_3_fu_675_p2();
    void thread_and_ln28_4_fu_681_p2();
    void thread_and_ln28_5_fu_768_p2();
    void thread_and_ln28_6_fu_774_p2();
    void thread_and_ln28_7_fu_291_p2();
    void thread_and_ln28_fu_469_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_178_p4();
    void thread_ap_phi_mux_r_0_phi_fu_200_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_512_p1();
    void thread_bitcast_ln28_2_fu_530_p1();
    void thread_bitcast_ln28_3_fu_603_p1();
    void thread_bitcast_ln28_4_fu_621_p1();
    void thread_bitcast_ln28_5_fu_696_p1();
    void thread_bitcast_ln28_6_fu_714_p1();
    void thread_bitcast_ln28_fu_433_p1();
    void thread_c_fu_410_p2();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_f_fu_251_p2();
    void thread_grp_fu_814_p0();
    void thread_grp_fu_814_p1();
    void thread_grp_fu_814_p10();
    void thread_grp_fu_814_p2();
    void thread_grp_fu_814_p20();
    void thread_icmp_ln10_fu_239_p2();
    void thread_icmp_ln13_fu_257_p2();
    void thread_icmp_ln16_fu_285_p2();
    void thread_icmp_ln28_10_fu_732_p2();
    void thread_icmp_ln28_11_fu_738_p2();
    void thread_icmp_ln28_12_fu_750_p2();
    void thread_icmp_ln28_13_fu_756_p2();
    void thread_icmp_ln28_1_fu_457_p2();
    void thread_icmp_ln28_2_fu_547_p2();
    void thread_icmp_ln28_3_fu_553_p2();
    void thread_icmp_ln28_4_fu_565_p2();
    void thread_icmp_ln28_5_fu_571_p2();
    void thread_icmp_ln28_6_fu_639_p2();
    void thread_icmp_ln28_7_fu_645_p2();
    void thread_icmp_ln28_8_fu_657_p2();
    void thread_icmp_ln28_9_fu_663_p2();
    void thread_icmp_ln28_fu_451_p2();
    void thread_max_pool_1_out_address0();
    void thread_max_pool_1_out_ce0();
    void thread_max_pool_1_out_d0();
    void thread_max_pool_1_out_we0();
    void thread_mul_ln28_fu_329_p1();
    void thread_mul_ln28_fu_329_p10();
    void thread_mul_ln28_fu_329_p2();
    void thread_or_ln26_fu_394_p2();
    void thread_or_ln28_1_fu_559_p2();
    void thread_or_ln28_2_fu_577_p2();
    void thread_or_ln28_3_fu_651_p2();
    void thread_or_ln28_4_fu_669_p2();
    void thread_or_ln28_5_fu_744_p2();
    void thread_or_ln28_6_fu_762_p2();
    void thread_or_ln28_7_fu_365_p2();
    void thread_or_ln28_fu_463_p2();
    void thread_or_ln35_fu_303_p2();
    void thread_r_fu_297_p2();
    void thread_select_ln13_fu_422_p3();
    void thread_select_ln28_1_fu_595_p3();
    void thread_select_ln28_2_fu_687_p3();
    void thread_select_ln28_4_fu_263_p3();
    void thread_select_ln28_5_fu_271_p3();
    void thread_select_ln28_fu_475_p3();
    void thread_select_ln35_1_fu_317_p3();
    void thread_select_ln35_fu_309_p3();
    void thread_shl_ln_fu_335_p3();
    void thread_tmp_10_fu_700_p4();
    void thread_tmp_11_fu_718_p4();
    void thread_tmp_13_fu_381_p3();
    void thread_tmp_14_fu_483_p3();
    void thread_tmp_15_fu_792_p3();
    void thread_tmp_1_fu_357_p3();
    void thread_tmp_3_fu_437_p4();
    void thread_tmp_5_fu_516_p4();
    void thread_tmp_6_fu_533_p4();
    void thread_tmp_8_fu_607_p4();
    void thread_tmp_9_fu_625_p4();
    void thread_tmp_fu_371_p4();
    void thread_trunc_ln28_1_fu_447_p1();
    void thread_trunc_ln28_2_fu_526_p1();
    void thread_trunc_ln28_3_fu_543_p1();
    void thread_trunc_ln28_4_fu_617_p1();
    void thread_trunc_ln28_5_fu_635_p1();
    void thread_trunc_ln28_6_fu_710_p1();
    void thread_trunc_ln28_7_fu_728_p1();
    void thread_trunc_ln28_fu_353_p1();
    void thread_xor_ln28_fu_279_p2();
    void thread_zext_ln28_1_fu_343_p1();
    void thread_zext_ln28_2_fu_389_p1();
    void thread_zext_ln28_3_fu_400_p1();
    void thread_zext_ln28_4_fu_490_p1();
    void thread_zext_ln28_5_fu_500_p1();
    void thread_zext_ln35_1_fu_430_p1();
    void thread_zext_ln35_4_fu_799_p1();
    void thread_zext_ln35_5_fu_809_p1();
    void thread_zext_ln35_fu_506_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
