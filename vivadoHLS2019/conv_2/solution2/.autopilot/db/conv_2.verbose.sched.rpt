

================================================================
== Vivado HLS Report for 'conv_2'
================================================================
* Date:           Fri Oct 20 21:40:19 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        conv_2
* Solution:       solution2
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  40.00|    34.961|        5.00|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  4507009|  4507009|  4507009|  4507009|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                       |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name               |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Loop_Col_Loop_Filter2_Loop       |  4507008|  4507008|       582|          -|          -|  7744|    no    |
        | + W_Row_Loop_W_Col_Loop_Filter1_Loop  |      577|      577|         4|          2|          1|   288|    yes   |
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 7 4 
4 --> 5 
5 --> 6 
6 --> 3 
7 --> 8 
8 --> 9 
9 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([5408 x float]* %max_pool_1_out) nounwind, !map !7"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([7744 x float]* %conv_out) nounwind, !map !14"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @conv_2_str) nounwind"   --->   Operation 12 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.76ns)   --->   "br label %1" [conv_2/conv_2.cpp:54]   --->   Operation 13 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 11.0>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten43 = phi i13 [ 0, %0 ], [ %add_ln54, %Filter2_Loop_end ]" [conv_2/conv_2.cpp:54]   --->   Operation 14 'phi' 'indvar_flatten43' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %0 ], [ %select_ln80_1, %Filter2_Loop_end ]" [conv_2/conv_2.cpp:80]   --->   Operation 15 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten29 = phi i11 [ 0, %0 ], [ %select_ln57, %Filter2_Loop_end ]" [conv_2/conv_2.cpp:57]   --->   Operation 16 'phi' 'indvar_flatten29' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ 0, %0 ], [ %select_ln80_3, %Filter2_Loop_end ]" [conv_2/conv_2.cpp:80]   --->   Operation 17 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%f_0 = phi i7 [ 0, %0 ], [ %f, %Filter2_Loop_end ]"   --->   Operation 18 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (2.09ns)   --->   "%icmp_ln54 = icmp eq i13 %indvar_flatten43, -448" [conv_2/conv_2.cpp:54]   --->   Operation 19 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 2.09> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (1.67ns)   --->   "%add_ln54 = add i13 %indvar_flatten43, 1" [conv_2/conv_2.cpp:54]   --->   Operation 20 'add' 'add_ln54' <Predicate = true> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln54, label %3, label %Filter2_Loop_begin" [conv_2/conv_2.cpp:54]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.73ns)   --->   "%r = add i4 %r_0, 1" [conv_2/conv_2.cpp:54]   --->   Operation 22 'add' 'r' <Predicate = (!icmp_ln54)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([31 x i8]* @Row_Loop_Col_Loop_Fi)"   --->   Operation 23 'specloopname' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7744, i64 7744, i64 7744) nounwind"   --->   Operation 24 'speclooptripcount' 'empty_6' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.88ns)   --->   "%icmp_ln57 = icmp eq i11 %indvar_flatten29, 704" [conv_2/conv_2.cpp:57]   --->   Operation 25 'icmp' 'icmp_ln57' <Predicate = (!icmp_ln54)> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (1.02ns)   --->   "%select_ln80 = select i1 %icmp_ln57, i4 0, i4 %c_0" [conv_2/conv_2.cpp:80]   --->   Operation 26 'select' 'select_ln80' <Predicate = (!icmp_ln54)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.02ns)   --->   "%select_ln80_1 = select i1 %icmp_ln57, i4 %r, i4 %r_0" [conv_2/conv_2.cpp:80]   --->   Operation 27 'select' 'select_ln80_1' <Predicate = (!icmp_ln54)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln80 = zext i4 %select_ln80_1 to i8" [conv_2/conv_2.cpp:80]   --->   Operation 28 'zext' 'zext_ln80' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (3.36ns) (grouped into DSP with root node add_ln80)   --->   "%mul_ln80 = mul i8 %zext_ln80, 11" [conv_2/conv_2.cpp:80]   --->   Operation 29 'mul' 'mul_ln80' <Predicate = (!icmp_ln54)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node and_ln80)   --->   "%xor_ln80 = xor i1 %icmp_ln57, true" [conv_2/conv_2.cpp:80]   --->   Operation 30 'xor' 'xor_ln80' <Predicate = (!icmp_ln54)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.48ns)   --->   "%icmp_ln60 = icmp eq i7 %f_0, -64" [conv_2/conv_2.cpp:60]   --->   Operation 31 'icmp' 'icmp_ln60' <Predicate = (!icmp_ln54)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln80 = and i1 %icmp_ln60, %xor_ln80" [conv_2/conv_2.cpp:80]   --->   Operation 32 'and' 'and_ln80' <Predicate = (!icmp_ln54)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.73ns)   --->   "%c = add i4 %select_ln80, 1" [conv_2/conv_2.cpp:57]   --->   Operation 33 'add' 'c' <Predicate = (!icmp_ln54)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @Col_Loop_Filter2_Loo)"   --->   Operation 34 'specloopname' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_2)   --->   "%or_ln80 = or i1 %and_ln80, %icmp_ln57" [conv_2/conv_2.cpp:80]   --->   Operation 35 'or' 'or_ln80' <Predicate = (!icmp_ln54)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln80_2 = select i1 %or_ln80, i7 0, i7 %f_0" [conv_2/conv_2.cpp:80]   --->   Operation 36 'select' 'select_ln80_2' <Predicate = (!icmp_ln54)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.02ns)   --->   "%select_ln80_3 = select i1 %and_ln80, i4 %c, i4 %select_ln80" [conv_2/conv_2.cpp:80]   --->   Operation 37 'select' 'select_ln80_3' <Predicate = (!icmp_ln54)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln80_1 = zext i4 %select_ln80_3 to i8" [conv_2/conv_2.cpp:80]   --->   Operation 38 'zext' 'zext_ln80_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln80 = add i8 %zext_ln80_1, %mul_ln80" [conv_2/conv_2.cpp:80]   --->   Operation 39 'add' 'add_ln80' <Predicate = (!icmp_ln54)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_3_cast = call i14 @_ssdm_op_BitConcatenate.i14.i8.i6(i8 %add_ln80, i6 0)" [conv_2/conv_2.cpp:57]   --->   Operation 40 'bitconcatenate' 'tmp_3_cast' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str2) nounwind" [conv_2/conv_2.cpp:61]   --->   Operation 41 'specloopname' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str2) nounwind" [conv_2/conv_2.cpp:61]   --->   Operation 42 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i7 %select_ln80_2 to i64" [conv_2/conv_2.cpp:72]   --->   Operation 43 'zext' 'zext_ln72' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln80_2 = zext i7 %select_ln80_2 to i16" [conv_2/conv_2.cpp:80]   --->   Operation 44 'zext' 'zext_ln80_2' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln80_3 = zext i7 %select_ln80_2 to i14" [conv_2/conv_2.cpp:80]   --->   Operation 45 'zext' 'zext_ln80_3' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.81ns)   --->   "%add_ln80_1 = add i14 %zext_ln80_3, %tmp_3_cast" [conv_2/conv_2.cpp:80]   --->   Operation 46 'add' 'add_ln80_1' <Predicate = (!icmp_ln54)> <Delay = 1.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln80_4 = zext i14 %add_ln80_1 to i64" [conv_2/conv_2.cpp:80]   --->   Operation 47 'zext' 'zext_ln80_4' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%conv_out_addr = getelementptr [7744 x float]* %conv_out, i64 0, i64 %zext_ln80_4" [conv_2/conv_2.cpp:80]   --->   Operation 48 'getelementptr' 'conv_out_addr' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (1.76ns)   --->   "br label %2" [conv_2/conv_2.cpp:64]   --->   Operation 49 'br' <Predicate = (!icmp_ln54)> <Delay = 1.76>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "ret void" [conv_2/conv_2.cpp:87]   --->   Operation 50 'ret' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 15.6>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%indvar_flatten21 = phi i9 [ 0, %Filter2_Loop_begin ], [ %add_ln64_1, %Filter1_Loop ]" [conv_2/conv_2.cpp:64]   --->   Operation 51 'phi' 'indvar_flatten21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%wr_0 = phi i2 [ 0, %Filter2_Loop_begin ], [ %select_ln64_1, %Filter1_Loop ]" [conv_2/conv_2.cpp:64]   --->   Operation 52 'phi' 'wr_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ 0, %Filter2_Loop_begin ], [ %select_ln67_3, %Filter1_Loop ]" [conv_2/conv_2.cpp:67]   --->   Operation 53 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%wc_0 = phi i2 [ 0, %Filter2_Loop_begin ], [ %select_ln67_1, %Filter1_Loop ]" [conv_2/conv_2.cpp:67]   --->   Operation 54 'phi' 'wc_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%w_sum_2 = phi float [ 0.000000e+00, %Filter2_Loop_begin ], [ %w_sum_3, %Filter1_Loop ]"   --->   Operation 55 'phi' 'w_sum_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%ch_0 = phi i6 [ 0, %Filter2_Loop_begin ], [ %ch, %Filter1_Loop ]"   --->   Operation 56 'phi' 'ch_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln67 = zext i2 %wc_0 to i4" [conv_2/conv_2.cpp:67]   --->   Operation 57 'zext' 'zext_ln67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.73ns)   --->   "%add_ln72 = add i4 %select_ln80_3, %zext_ln67" [conv_2/conv_2.cpp:72]   --->   Operation 58 'add' 'add_ln72' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.66ns)   --->   "%icmp_ln64 = icmp eq i9 %indvar_flatten21, -224" [conv_2/conv_2.cpp:64]   --->   Operation 59 'icmp' 'icmp_ln64' <Predicate = true> <Delay = 1.66> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (1.82ns)   --->   "%add_ln64_1 = add i9 %indvar_flatten21, 1" [conv_2/conv_2.cpp:64]   --->   Operation 60 'add' 'add_ln64_1' <Predicate = true> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "br i1 %icmp_ln64, label %Filter2_Loop_end, label %Filter1_Loop" [conv_2/conv_2.cpp:64]   --->   Operation 61 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (1.56ns)   --->   "%wr = add i2 %wr_0, 1" [conv_2/conv_2.cpp:64]   --->   Operation 62 'add' 'wr' <Predicate = (!icmp_ln64)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [1/1] (1.55ns)   --->   "%icmp_ln67 = icmp eq i8 %indvar_flatten, 96" [conv_2/conv_2.cpp:67]   --->   Operation 63 'icmp' 'icmp_ln67' <Predicate = (!icmp_ln64)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.99ns)   --->   "%select_ln64 = select i1 %icmp_ln67, i2 0, i2 %wc_0" [conv_2/conv_2.cpp:64]   --->   Operation 64 'select' 'select_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.99ns)   --->   "%select_ln64_1 = select i1 %icmp_ln67, i2 %wr, i2 %wr_0" [conv_2/conv_2.cpp:64]   --->   Operation 65 'select' 'select_ln64_1' <Predicate = (!icmp_ln64)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i2 %select_ln64_1 to i5" [conv_2/conv_2.cpp:72]   --->   Operation 66 'zext' 'zext_ln72_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_5 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln64_1, i2 0)" [conv_2/conv_2.cpp:72]   --->   Operation 67 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln72_2 = zext i4 %tmp_5 to i5" [conv_2/conv_2.cpp:72]   --->   Operation 68 'zext' 'zext_ln72_2' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (1.73ns)   --->   "%sub_ln72 = sub i5 %zext_ln72_2, %zext_ln72_1" [conv_2/conv_2.cpp:72]   --->   Operation 69 'sub' 'sub_ln72' <Predicate = (!icmp_ln64)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%sext_ln72 = sext i5 %sub_ln72 to i6" [conv_2/conv_2.cpp:72]   --->   Operation 70 'sext' 'sext_ln72' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i2 %select_ln64_1 to i4" [conv_2/conv_2.cpp:64]   --->   Operation 71 'zext' 'zext_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (1.73ns)   --->   "%add_ln64 = add i4 %select_ln80_1, %zext_ln64" [conv_2/conv_2.cpp:64]   --->   Operation 72 'add' 'add_ln64' <Predicate = (!icmp_ln64)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln72_3 = zext i4 %add_ln64 to i8" [conv_2/conv_2.cpp:72]   --->   Operation 73 'zext' 'zext_ln72_3' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (3.36ns) (grouped into DSP with root node add_ln72_3)   --->   "%mul_ln72 = mul i8 %zext_ln72_3, 13" [conv_2/conv_2.cpp:72]   --->   Operation 74 'mul' 'mul_ln72' <Predicate = (!icmp_ln64)> <Delay = 3.36> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node and_ln64)   --->   "%xor_ln64 = xor i1 %icmp_ln67, true" [conv_2/conv_2.cpp:64]   --->   Operation 75 'xor' 'xor_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.42ns)   --->   "%icmp_ln70 = icmp eq i6 %ch_0, -32" [conv_2/conv_2.cpp:70]   --->   Operation 76 'icmp' 'icmp_ln70' <Predicate = (!icmp_ln64)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln64 = and i1 %icmp_ln70, %xor_ln64" [conv_2/conv_2.cpp:64]   --->   Operation 77 'and' 'and_ln64' <Predicate = (!icmp_ln64)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (1.56ns)   --->   "%wc = add i2 %select_ln64, 1" [conv_2/conv_2.cpp:67]   --->   Operation 78 'add' 'wc' <Predicate = (!icmp_ln64)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node select_ln67)   --->   "%or_ln67 = or i1 %and_ln64, %icmp_ln67" [conv_2/conv_2.cpp:67]   --->   Operation 79 'or' 'or_ln67' <Predicate = (!icmp_ln64)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (1.18ns) (out node of the LUT)   --->   "%select_ln67 = select i1 %or_ln67, i6 0, i6 %ch_0" [conv_2/conv_2.cpp:67]   --->   Operation 80 'select' 'select_ln67' <Predicate = (!icmp_ln64)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln67_1 = zext i2 %wc to i4" [conv_2/conv_2.cpp:67]   --->   Operation 81 'zext' 'zext_ln67_1' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.99ns)   --->   "%select_ln67_1 = select i1 %and_ln64, i2 %wc, i2 %select_ln64" [conv_2/conv_2.cpp:67]   --->   Operation 82 'select' 'select_ln67_1' <Predicate = (!icmp_ln64)> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln67_2 = zext i2 %select_ln67_1 to i6" [conv_2/conv_2.cpp:67]   --->   Operation 83 'zext' 'zext_ln67_2' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (1.78ns)   --->   "%add_ln72_1 = add i6 %zext_ln67_2, %sext_ln72" [conv_2/conv_2.cpp:72]   --->   Operation 84 'add' 'add_ln72_1' <Predicate = (!icmp_ln64)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln72 = trunc i6 %add_ln72_1 to i5" [conv_2/conv_2.cpp:72]   --->   Operation 85 'trunc' 'trunc_ln72' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_s = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %trunc_ln72, i5 0)" [conv_2/conv_2.cpp:72]   --->   Operation 86 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (1.73ns)   --->   "%add_ln72_2 = add i4 %select_ln80_3, %zext_ln67_1" [conv_2/conv_2.cpp:72]   --->   Operation 87 'add' 'add_ln72_2' <Predicate = (!icmp_ln64)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node select_ln67_2)   --->   "%select_ln64_2 = select i1 %icmp_ln67, i4 %select_ln80_3, i4 %add_ln72" [conv_2/conv_2.cpp:64]   --->   Operation 88 'select' 'select_ln64_2' <Predicate = (!icmp_ln64)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln67_2 = select i1 %and_ln64, i4 %add_ln72_2, i4 %select_ln64_2" [conv_2/conv_2.cpp:67]   --->   Operation 89 'select' 'select_ln67_2' <Predicate = (!icmp_ln64)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln72_5 = zext i4 %select_ln67_2 to i8" [conv_2/conv_2.cpp:72]   --->   Operation 90 'zext' 'zext_ln72_5' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (3.02ns) (root node of the DSP)   --->   "%add_ln72_3 = add i8 %zext_ln72_5, %mul_ln72" [conv_2/conv_2.cpp:72]   --->   Operation 91 'add' 'add_ln72_3' <Predicate = (!icmp_ln64)> <Delay = 3.02> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_2 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln72_3, i5 0)" [conv_2/conv_2.cpp:67]   --->   Operation 92 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln67_3 = zext i13 %tmp_2 to i14" [conv_2/conv_2.cpp:67]   --->   Operation 93 'zext' 'zext_ln67_3' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln72_4 = zext i6 %select_ln67 to i10" [conv_2/conv_2.cpp:72]   --->   Operation 94 'zext' 'zext_ln72_4' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln72_6 = zext i6 %select_ln67 to i14" [conv_2/conv_2.cpp:72]   --->   Operation 95 'zext' 'zext_ln72_6' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.73ns)   --->   "%add_ln72_4 = add i10 %zext_ln72_4, %tmp_s" [conv_2/conv_2.cpp:72]   --->   Operation 96 'add' 'add_ln72_4' <Predicate = (!icmp_ln64)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_13_cast = call i16 @_ssdm_op_BitConcatenate.i16.i10.i6(i10 %add_ln72_4, i6 0)" [conv_2/conv_2.cpp:72]   --->   Operation 97 'bitconcatenate' 'tmp_13_cast' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (2.07ns)   --->   "%add_ln72_5 = add i16 %zext_ln80_2, %tmp_13_cast" [conv_2/conv_2.cpp:72]   --->   Operation 98 'add' 'add_ln72_5' <Predicate = (!icmp_ln64)> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln72_7 = zext i16 %add_ln72_5 to i64" [conv_2/conv_2.cpp:72]   --->   Operation 99 'zext' 'zext_ln72_7' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%conv_2_weights_addr = getelementptr [18432 x float]* @conv_2_weights, i64 0, i64 %zext_ln72_7" [conv_2/conv_2.cpp:72]   --->   Operation 100 'getelementptr' 'conv_2_weights_addr' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (1.67ns)   --->   "%add_ln72_6 = add i14 %zext_ln72_6, %zext_ln67_3" [conv_2/conv_2.cpp:72]   --->   Operation 101 'add' 'add_ln72_6' <Predicate = (!icmp_ln64)> <Delay = 1.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln72_8 = zext i14 %add_ln72_6 to i64" [conv_2/conv_2.cpp:72]   --->   Operation 102 'zext' 'zext_ln72_8' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%max_pool_1_out_addr = getelementptr [5408 x float]* %max_pool_1_out, i64 0, i64 %zext_ln72_8" [conv_2/conv_2.cpp:72]   --->   Operation 103 'getelementptr' 'max_pool_1_out_addr' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_3 : Operation 104 [2/2] (3.25ns)   --->   "%conv_2_weights_load = load float* %conv_2_weights_addr, align 4" [conv_2/conv_2.cpp:72]   --->   Operation 104 'load' 'conv_2_weights_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_3 : Operation 105 [2/2] (3.25ns)   --->   "%max_pool_1_out_load = load float* %max_pool_1_out_addr, align 4" [conv_2/conv_2.cpp:72]   --->   Operation 105 'load' 'max_pool_1_out_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 7744> <RAM>
ST_3 : Operation 106 [1/1] (1.91ns)   --->   "%add_ln67 = add i8 %indvar_flatten, 1" [conv_2/conv_2.cpp:67]   --->   Operation 106 'add' 'add_ln67' <Predicate = (!icmp_ln64)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (1.24ns)   --->   "%select_ln67_3 = select i1 %icmp_ln67, i8 1, i8 %add_ln67" [conv_2/conv_2.cpp:67]   --->   Operation 107 'select' 'select_ln67_3' <Predicate = (!icmp_ln64)> <Delay = 1.24> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 4 <SV = 3> <Delay = 15.6>
ST_4 : Operation 108 [1/2] (3.25ns)   --->   "%conv_2_weights_load = load float* %conv_2_weights_addr, align 4" [conv_2/conv_2.cpp:72]   --->   Operation 108 'load' 'conv_2_weights_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_4 : Operation 109 [1/2] (3.25ns)   --->   "%max_pool_1_out_load = load float* %max_pool_1_out_addr, align 4" [conv_2/conv_2.cpp:72]   --->   Operation 109 'load' 'max_pool_1_out_load' <Predicate = (!icmp_ln64)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 7744> <RAM>
ST_4 : Operation 110 [2/2] (12.3ns)   --->   "%tmp_1 = fmul float %conv_2_weights_load, %max_pool_1_out_load" [conv_2/conv_2.cpp:72]   --->   Operation 110 'fmul' 'tmp_1' <Predicate = (!icmp_ln64)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (1.82ns)   --->   "%ch = add i6 %select_ln67, 1" [conv_2/conv_2.cpp:70]   --->   Operation 111 'add' 'ch' <Predicate = (!icmp_ln64)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 34.9>
ST_5 : Operation 112 [1/2] (12.3ns)   --->   "%tmp_1 = fmul float %conv_2_weights_load, %max_pool_1_out_load" [conv_2/conv_2.cpp:72]   --->   Operation 112 'fmul' 'tmp_1' <Predicate = (!icmp_ln64)> <Delay = 12.3> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 1> <II = 1> <Delay = 12.3> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 113 [2/2] (22.5ns)   --->   "%w_sum_3 = fadd float %w_sum_2, %tmp_1" [conv_2/conv_2.cpp:72]   --->   Operation 113 'fadd' 'w_sum_3' <Predicate = (!icmp_ln64)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 22.5>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([35 x i8]* @W_Row_Loop_W_Col_Loo)"   --->   Operation 114 'specloopname' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 288, i64 288, i64 288) nounwind"   --->   Operation 115 'speclooptripcount' 'empty' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 116 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([24 x i8]* @W_Col_Loop_Filter1_L)"   --->   Operation 116 'specloopname' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([13 x i8]* @p_str5) nounwind" [conv_2/conv_2.cpp:71]   --->   Operation 117 'specloopname' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_7 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str5) nounwind" [conv_2/conv_2.cpp:71]   --->   Operation 118 'specregionbegin' 'tmp_7' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str6) nounwind" [conv_2/conv_2.cpp:72]   --->   Operation 119 'specpipeline' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 120 [1/2] (22.5ns)   --->   "%w_sum_3 = fadd float %w_sum_2, %tmp_1" [conv_2/conv_2.cpp:72]   --->   Operation 120 'fadd' 'w_sum_3' <Predicate = (!icmp_ln64)> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 121 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str5, i32 %tmp_7) nounwind" [conv_2/conv_2.cpp:73]   --->   Operation 121 'specregionend' 'empty_4' <Predicate = (!icmp_ln64)> <Delay = 0.00>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 122 'br' <Predicate = (!icmp_ln64)> <Delay = 0.00>

State 7 <SV = 3> <Delay = 3.25>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%conv_2_bias_addr = getelementptr inbounds [64 x float]* @conv_2_bias, i64 0, i64 %zext_ln72" [conv_2/conv_2.cpp:76]   --->   Operation 123 'getelementptr' 'conv_2_bias_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 124 [2/2] (3.25ns)   --->   "%conv_2_bias_load = load float* %conv_2_bias_addr, align 4" [conv_2/conv_2.cpp:76]   --->   Operation 124 'load' 'conv_2_bias_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_7 : Operation 125 [1/1] (1.87ns)   --->   "%f = add i7 1, %select_ln80_2" [conv_2/conv_2.cpp:60]   --->   Operation 125 'add' 'f' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 126 [1/1] (1.63ns)   --->   "%add_ln57_1 = add i11 1, %indvar_flatten29" [conv_2/conv_2.cpp:57]   --->   Operation 126 'add' 'add_ln57_1' <Predicate = (!icmp_ln57)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 127 [1/1] (0.69ns)   --->   "%select_ln57 = select i1 %icmp_ln57, i11 1, i11 %add_ln57_1" [conv_2/conv_2.cpp:57]   --->   Operation 127 'select' 'select_ln57' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 8 <SV = 4> <Delay = 25.8>
ST_8 : Operation 128 [1/2] (3.25ns)   --->   "%conv_2_bias_load = load float* %conv_2_bias_addr, align 4" [conv_2/conv_2.cpp:76]   --->   Operation 128 'load' 'conv_2_bias_load' <Predicate = true> <Delay = 3.25> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 64> <ROM>
ST_8 : Operation 129 [2/2] (22.5ns)   --->   "%w_sum = fadd float %w_sum_2, %conv_2_bias_load" [conv_2/conv_2.cpp:76]   --->   Operation 129 'fadd' 'w_sum' <Predicate = true> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 5> <Delay = 33.5>
ST_9 : Operation 130 [1/2] (22.5ns)   --->   "%w_sum = fadd float %w_sum_2, %conv_2_bias_load" [conv_2/conv_2.cpp:76]   --->   Operation 130 'fadd' 'w_sum' <Predicate = true> <Delay = 22.5> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 1> <II = 1> <Delay = 22.5> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%bitcast_ln79 = bitcast float %w_sum to i32" [conv_2/conv_2.cpp:79]   --->   Operation 131 'bitcast' 'bitcast_ln79' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln79, i32 23, i32 30)" [conv_2/conv_2.cpp:79]   --->   Operation 132 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i32 %bitcast_ln79 to i23" [conv_2/conv_2.cpp:79]   --->   Operation 133 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (1.55ns)   --->   "%icmp_ln79 = icmp ne i8 %tmp, -1" [conv_2/conv_2.cpp:79]   --->   Operation 134 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 135 [1/1] (2.44ns)   --->   "%icmp_ln79_1 = icmp eq i23 %trunc_ln79, 0" [conv_2/conv_2.cpp:79]   --->   Operation 135 'icmp' 'icmp_ln79_1' <Predicate = true> <Delay = 2.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%or_ln79 = or i1 %icmp_ln79_1, %icmp_ln79" [conv_2/conv_2.cpp:79]   --->   Operation 136 'or' 'or_ln79' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 137 [1/1] (6.78ns)   --->   "%tmp_8 = fcmp ogt float %w_sum, 0.000000e+00" [conv_2/conv_2.cpp:79]   --->   Operation 137 'fcmp' 'tmp_8' <Predicate = true> <Delay = 6.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 6.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node w_sum_1)   --->   "%and_ln79 = and i1 %or_ln79, %tmp_8" [conv_2/conv_2.cpp:79]   --->   Operation 138 'and' 'and_ln79' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 139 [1/1] (0.97ns) (out node of the LUT)   --->   "%w_sum_1 = select i1 %and_ln79, float %w_sum, float 0.000000e+00" [conv_2/conv_2.cpp:79]   --->   Operation 139 'select' 'w_sum_1' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 140 [1/1] (3.25ns)   --->   "store float %w_sum_1, float* %conv_out_addr, align 4" [conv_2/conv_2.cpp:80]   --->   Operation 140 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 7744> <RAM>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str2, i32 %tmp_4) nounwind" [conv_2/conv_2.cpp:84]   --->   Operation 141 'specregionend' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "br label %1" [conv_2/conv_2.cpp:60]   --->   Operation 142 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten43', conv_2/conv_2.cpp:54) with incoming values : ('add_ln54', conv_2/conv_2.cpp:54) [10]  (1.77 ns)

 <State 2>: 11.1ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten29', conv_2/conv_2.cpp:57) with incoming values : ('select_ln57', conv_2/conv_2.cpp:57) [12]  (0 ns)
	'icmp' operation ('icmp_ln57', conv_2/conv_2.cpp:57) [22]  (1.88 ns)
	'select' operation ('select_ln80_1', conv_2/conv_2.cpp:80) [24]  (1.02 ns)
	'mul' operation of DSP[36] ('mul_ln80', conv_2/conv_2.cpp:80) [26]  (3.36 ns)
	'add' operation of DSP[36] ('add_ln80', conv_2/conv_2.cpp:80) [36]  (3.02 ns)
	'add' operation ('add_ln80_1', conv_2/conv_2.cpp:80) [43]  (1.81 ns)

 <State 3>: 15.6ns
The critical path consists of the following:
	'phi' operation ('wr_0', conv_2/conv_2.cpp:64) with incoming values : ('select_ln64_1', conv_2/conv_2.cpp:64) [49]  (0 ns)
	'add' operation ('wr', conv_2/conv_2.cpp:64) [60]  (1.56 ns)
	'select' operation ('select_ln64_1', conv_2/conv_2.cpp:64) [65]  (0.993 ns)
	'add' operation ('add_ln64', conv_2/conv_2.cpp:64) [72]  (1.74 ns)
	'mul' operation of DSP[92] ('mul_ln72', conv_2/conv_2.cpp:72) [74]  (3.36 ns)
	'add' operation of DSP[92] ('add_ln72_3', conv_2/conv_2.cpp:72) [92]  (3.02 ns)
	'add' operation ('add_ln72_6', conv_2/conv_2.cpp:72) [105]  (1.68 ns)
	'getelementptr' operation ('max_pool_1_out_addr', conv_2/conv_2.cpp:72) [107]  (0 ns)
	'load' operation ('max_pool_1_out_load', conv_2/conv_2.cpp:72) on array 'max_pool_1_out' [109]  (3.25 ns)

 <State 4>: 15.6ns
The critical path consists of the following:
	'load' operation ('conv_2_weights_load', conv_2/conv_2.cpp:72) on array 'conv_2_weights' [108]  (3.25 ns)
	'fmul' operation ('tmp_1', conv_2/conv_2.cpp:72) [110]  (12.4 ns)

 <State 5>: 35ns
The critical path consists of the following:
	'fmul' operation ('tmp_1', conv_2/conv_2.cpp:72) [110]  (12.4 ns)
	'fadd' operation ('w_sum', conv_2/conv_2.cpp:72) [111]  (22.6 ns)

 <State 6>: 22.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum', conv_2/conv_2.cpp:72) [111]  (22.6 ns)

 <State 7>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('conv_2_bias_addr', conv_2/conv_2.cpp:76) [118]  (0 ns)
	'load' operation ('conv_2_bias_load', conv_2/conv_2.cpp:76) on array 'conv_2_bias' [119]  (3.25 ns)

 <State 8>: 25.8ns
The critical path consists of the following:
	'load' operation ('conv_2_bias_load', conv_2/conv_2.cpp:76) on array 'conv_2_bias' [119]  (3.25 ns)
	'fadd' operation ('w_sum', conv_2/conv_2.cpp:76) [120]  (22.6 ns)

 <State 9>: 33.6ns
The critical path consists of the following:
	'fadd' operation ('w_sum', conv_2/conv_2.cpp:76) [120]  (22.6 ns)
	'fcmp' operation ('tmp_8', conv_2/conv_2.cpp:79) [127]  (6.79 ns)
	'and' operation ('and_ln79', conv_2/conv_2.cpp:79) [128]  (0 ns)
	'select' operation ('w_sum', conv_2/conv_2.cpp:79) [129]  (0.978 ns)
	'store' operation ('store_ln80', conv_2/conv_2.cpp:80) of variable 'w_sum', conv_2/conv_2.cpp:79 on array 'conv_out' [130]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
