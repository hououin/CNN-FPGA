// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __conv_2_conv_2_weic5D_H__
#define __conv_2_conv_2_weic5D_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct conv_2_conv_2_weic5D_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(conv_2_conv_2_weic5D_ram) {
        ram[0] = "0b00111101100101010000000100001011";
        ram[1] = "0b10111110100111001100110110000011";
        ram[2] = "0b10111101010101000010111000010111";
        ram[3] = "0b00111100110001101011111000010011";
        ram[4] = "0b00111011110000011010111101011001";
        ram[5] = "0b10111100111011010110100100011110";
        ram[6] = "0b10111110001111100100001100100000";
        ram[7] = "0b00111101010100101000111110110101";
        ram[8] = "0b00111101101011100111100100010001";
        ram[9] = "0b00111101100100010110000000111101";
        ram[10] = "0b10111011111110010001000011000111";
        ram[11] = "0b00111101101101110001101010000011";
        ram[12] = "0b10111101111110111010001111011100";
        ram[13] = "0b10111110000010001010000100100011";
        ram[14] = "0b00111101100100101101111000110110";
        ram[15] = "0b00111101000110001111000010100111";
        ram[16] = "0b00111101001001010000100111110111";
        ram[17] = "0b00111100110000110111111010111101";
        ram[18] = "0b10111110000010100100001110010101";
        ram[19] = "0b00111100101100111111101110111101";
        ram[20] = "0b10111110001011011000000101000001";
        ram[21] = "0b10111110100001111010001101000001";
        ram[22] = "0b10111101100100101111010011101010";
        ram[23] = "0b10111100101000111010101010101000";
        ram[24] = "0b10111101101110000110110010001101";
        ram[25] = "0b00111100000111001000001000010101";
        ram[26] = "0b00111100001110011010111001100000";
        ram[27] = "0b00111101101101010100011111100111";
        ram[28] = "0b10111011110000010011110001111101";
        ram[29] = "0b10111110011100110101010001101001";
        ram[30] = "0b00111110010000100100011110110100";
        ram[31] = "0b10111101100011001001101011010000";
        ram[32] = "0b00111110000010111000101101111100";
        ram[33] = "0b00111110011011111110001010010110";
        ram[34] = "0b00111101110101010111000000110010";
        ram[35] = "0b10111110000100011101011011111111";
        ram[36] = "0b10111110101000100110101010010110";
        ram[37] = "0b10111110101011000000100011001001";
        ram[38] = "0b10111100011010011110100100111011";
        ram[39] = "0b10111101100000100111001001011010";
        ram[40] = "0b10111111000000011011100110010011";
        ram[41] = "0b10111011111111110010001100100011";
        ram[42] = "0b10111110000001100011010111001010";
        ram[43] = "0b00111101100000010011110110010110";
        ram[44] = "0b00111110001111111111011001110011";
        ram[45] = "0b00111101001000111111001111110010";
        ram[46] = "0b10111100101111111101111000110100";
        ram[47] = "0b00111101011010001000100011110000";
        ram[48] = "0b00111011110111101000000110100111";
        ram[49] = "0b00111011101001010101010001111100";
        ram[50] = "0b00111011101001111110101100001001";
        ram[51] = "0b10111110011000100001001110101100";
        ram[52] = "0b00111100110101101001011011010111";
        ram[53] = "0b10111110101001011011010010100100";
        ram[54] = "0b10111101000100101000011110010001";
        ram[55] = "0b00111110101000010101001001100011";
        ram[56] = "0b00111011100010100010110110101111";
        ram[57] = "0b00111110100010010001011001010110";
        ram[58] = "0b10111110011010001110111001011100";
        ram[59] = "0b00111101110000011001000110000100";
        ram[60] = "0b00111101110000010010010100001110";
        ram[61] = "0b00111101111101110101010101111110";
        ram[62] = "0b10111110000001101000010101011101";
        ram[63] = "0b10111011110010000010101001100010";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(conv_2_conv_2_weic5D) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


conv_2_conv_2_weic5D_ram* meminst;


SC_CTOR(conv_2_conv_2_weic5D) {
meminst = new conv_2_conv_2_weic5D_ram("conv_2_conv_2_weic5D_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~conv_2_conv_2_weic5D() {
    delete meminst;
}


};//endmodule
#endif
