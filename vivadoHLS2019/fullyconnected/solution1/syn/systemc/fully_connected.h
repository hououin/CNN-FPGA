// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fully_connected_HH_
#define _fully_connected_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fully_connected_fdEe.h"
#include "fully_connected_feOg.h"
#include "fully_connected_ffYi.h"
#include "fully_connected_fbkb.h"
#include "fully_connected_fcud.h"

namespace ap_rtl {

struct fully_connected : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > flat_array_address0;
    sc_out< sc_logic > flat_array_ce0;
    sc_in< sc_lv<32> > flat_array_q0;
    sc_out< sc_lv<6> > dense_out_address0;
    sc_out< sc_logic > dense_out_ce0;
    sc_out< sc_logic > dense_out_we0;
    sc_out< sc_lv<32> > dense_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    fully_connected(sc_module_name name);
    SC_HAS_PROCESS(fully_connected);

    ~fully_connected();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fully_connected_fbkb* fullyconnected_weigh_U;
    fully_connected_fcud* fullyconnected_bias_U;
    fully_connected_fdEe<1,4,32,32,32>* fully_connected_fdEe_U1;
    fully_connected_feOg<1,2,32,32,32>* fully_connected_feOg_U2;
    fully_connected_ffYi<1,2,32,32,1>* fully_connected_ffYi_U3;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<15> > fullyconnected_weigh_address0;
    sc_signal< sc_logic > fullyconnected_weigh_ce0;
    sc_signal< sc_lv<32> > fullyconnected_weigh_q0;
    sc_signal< sc_lv<6> > fullyconnected_bias_address0;
    sc_signal< sc_logic > fullyconnected_bias_ce0;
    sc_signal< sc_lv<32> > fullyconnected_bias_q0;
    sc_signal< sc_lv<6> > i_fu_181_p2;
    sc_signal< sc_lv<6> > i_reg_280;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > zext_ln15_fu_187_p1;
    sc_signal< sc_lv<64> > zext_ln15_reg_285;
    sc_signal< sc_lv<1> > icmp_ln9_fu_175_p2;
    sc_signal< sc_lv<15> > zext_ln14_fu_191_p1;
    sc_signal< sc_lv<15> > zext_ln14_reg_291;
    sc_signal< sc_lv<9> > j_fu_201_p2;
    sc_signal< sc_lv<9> > j_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<15> > add_ln15_1_fu_212_p2;
    sc_signal< sc_lv<15> > add_ln15_1_reg_304;
    sc_signal< sc_lv<1> > icmp_ln14_fu_195_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > grp_fu_163_p2;
    sc_signal< sc_lv<32> > tmp_2_reg_334;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_157_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > tmp_reg_349;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<6> > i_0_reg_112;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > sum_0_reg_123;
    sc_signal< sc_lv<9> > j_0_reg_135;
    sc_signal< sc_lv<15> > phi_mul_reg_146;
    sc_signal< sc_lv<64> > zext_ln15_2_fu_223_p1;
    sc_signal< sc_lv<64> > zext_ln15_1_fu_207_p1;
    sc_signal< sc_lv<32> > grp_fu_157_p1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<15> > add_ln15_fu_218_p2;
    sc_signal< sc_lv<32> > bitcast_ln20_fu_228_p1;
    sc_signal< sc_lv<8> > tmp_1_fu_231_p4;
    sc_signal< sc_lv<23> > trunc_ln20_fu_241_p1;
    sc_signal< sc_lv<1> > icmp_ln20_1_fu_251_p2;
    sc_signal< sc_lv<1> > icmp_ln20_fu_245_p2;
    sc_signal< sc_lv<1> > or_ln20_fu_257_p2;
    sc_signal< sc_lv<1> > grp_fu_169_p2;
    sc_signal< sc_lv<1> > and_ln20_fu_263_p2;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<15> ap_const_lv15_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<9> ap_const_lv9_190;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<15> ap_const_lv15_32;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_4;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln15_1_fu_212_p2();
    void thread_add_ln15_fu_218_p2();
    void thread_and_ln20_fu_263_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_bitcast_ln20_fu_228_p1();
    void thread_dense_out_address0();
    void thread_dense_out_ce0();
    void thread_dense_out_d0();
    void thread_dense_out_we0();
    void thread_flat_array_address0();
    void thread_flat_array_ce0();
    void thread_fullyconnected_bias_address0();
    void thread_fullyconnected_bias_ce0();
    void thread_fullyconnected_weigh_address0();
    void thread_fullyconnected_weigh_ce0();
    void thread_grp_fu_157_p1();
    void thread_i_fu_181_p2();
    void thread_icmp_ln14_fu_195_p2();
    void thread_icmp_ln20_1_fu_251_p2();
    void thread_icmp_ln20_fu_245_p2();
    void thread_icmp_ln9_fu_175_p2();
    void thread_j_fu_201_p2();
    void thread_or_ln20_fu_257_p2();
    void thread_tmp_1_fu_231_p4();
    void thread_trunc_ln20_fu_241_p1();
    void thread_zext_ln14_fu_191_p1();
    void thread_zext_ln15_1_fu_207_p1();
    void thread_zext_ln15_2_fu_223_p1();
    void thread_zext_ln15_fu_187_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
