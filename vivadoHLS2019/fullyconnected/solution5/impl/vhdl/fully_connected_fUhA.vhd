-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fully_connected_fUhA_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 400
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of fully_connected_fUhA_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00111101010111011111110010100000", 
    1 => "10111101000111000100010000111001", 
    2 => "00111101111100110101110110101011", 
    3 => "00111110000001111111001111001111", 
    4 => "10111110011101101011011101100111", 
    5 => "10111110010011110010001110001001", 
    6 => "00111100100111100010011110011110", 
    7 => "10111110000111110111110100110001", 
    8 => "00111101000001011011010010101011", 
    9 => "10111101100111111011100000101100", 
    10 => "00111110000010010100110000000001", 
    11 => "10111101100110010100101011110101", 
    12 => "10111101110010111001110100111101", 
    13 => "10111100010100010101011010011111", 
    14 => "10111101010110110110000010101111", 
    15 => "10111110001111000101010100000000", 
    16 => "00111100101101000101010010011011", 
    17 => "10111110001001011100111010011110", 
    18 => "00111101111001010101001000011010", 
    19 => "10111101111000110111111101111100", 
    20 => "10111110010101000111011101111001", 
    21 => "10111010111100010010110000101000", 
    22 => "10111100010100101010011000101011", 
    23 => "10111110000000100100011010111111", 
    24 => "00111101001010101011000001000010", 
    25 => "00111101100100101111010101010110", 
    26 => "00111110100001001110001010001111", 
    27 => "10111110000010011000010011100100", 
    28 => "00111101011101110000100010101011", 
    29 => "10111011011000101100000100101011", 
    30 => "00111101000101100111111111010100", 
    31 => "10111101101000000110000110000100", 
    32 => "10111110000111110001110100111111", 
    33 => "10111101111010101011111111111101", 
    34 => "00111110001100001110110011111010", 
    35 => "00111110100010101010110111000101", 
    36 => "10111101111000111100100111101111", 
    37 => "10111101111010011111010000001010", 
    38 => "10111100101011000000101001001010", 
    39 => "00111101101010011010001111010011", 
    40 => "10111101111000010001110110111101", 
    41 => "00111101000111010011010001011001", 
    42 => "00111110011010111101101111100100", 
    43 => "00111100000101011110100111100010", 
    44 => "00111101011110000011101111100110", 
    45 => "00111110010110000000011010101111", 
    46 => "10111101101011111010000101011110", 
    47 => "10111101000101011010011111010010", 
    48 => "10111101111001000001101000100110", 
    49 => "10111110000000000000100011101010", 
    50 => "10111110001011001100010100110011", 
    51 => "00111110101010111011111000000001", 
    52 => "00111101101101010000111000110100", 
    53 => "10111110001011011101010101001110", 
    54 => "10111101110010111000011110111110", 
    55 => "00111101001000010111010011000101", 
    56 => "10111101110110111000100000000001", 
    57 => "00111011101000010000010110011111", 
    58 => "00111101011000000001110011010110", 
    59 => "10111101010010000110000001010111", 
    60 => "10111101010000100001011111010011", 
    61 => "00111110111001100111111010100110", 
    62 => "10111110100000111000010010011001", 
    63 => "10111110000001011010110001000111", 
    64 => "10111110010011000100011010010101", 
    65 => "00111011100101111101100011001111", 
    66 => "10111101101101111010110011000101", 
    67 => "00111110100001010000111011011100", 
    68 => "00111110011110010011001100011010", 
    69 => "00111101110011111111000100001111", 
    70 => "00111101010001011010101000101110", 
    71 => "00111101010111001110010110110100", 
    72 => "10111101100100000011001000010010", 
    73 => "00111101100111010101100110010010", 
    74 => "10111101110010101000001010100101", 
    75 => "00111100110101011100000011111101", 
    76 => "10111011101110110001101011110100", 
    77 => "00111111010100011100111001111101", 
    78 => "10111110000010111010111110010110", 
    79 => "10111101001000101011110011111001", 
    80 => "10111100110110001100100011101111", 
    81 => "10111110011010101000010001111011", 
    82 => "00111110100000111101001011011000", 
    83 => "10111101100010011100010011011011", 
    84 => "10111110001101101111000000000111", 
    85 => "10111110100010110010010100101101", 
    86 => "10111110001111001000100011101000", 
    87 => "10111101010110111111110111111000", 
    88 => "10111101111101111111100011001011", 
    89 => "10111100011001011101111000010110", 
    90 => "00111101010101000000110111010100", 
    91 => "10111110000110100010010010001001", 
    92 => "00111101010101001101110101110010", 
    93 => "00111101110100000100100010011101", 
    94 => "00111100111110000010101100011111", 
    95 => "10111110101011100011101110101100", 
    96 => "00111110000101000100101101101111", 
    97 => "10111011010000110100110000011011", 
    98 => "00111110011000000101100001011000", 
    99 => "00111110000001010000001111111011", 
    100 => "10111110000100100100000111000100", 
    101 => "10111110101010110101011110000010", 
    102 => "10111110011001101111111001110010", 
    103 => "10111101001001101011101101010110", 
    104 => "00111110010111111101110000010110", 
    105 => "10111101001000001001100010010001", 
    106 => "00111110010111101011101110111010", 
    107 => "00111101000100011101010110000000", 
    108 => "00111100110100001001011111001000", 
    109 => "10111101000001010110110101011101", 
    110 => "00111110000000100011000000110100", 
    111 => "10111101011011110000100011001100", 
    112 => "10111101101111110011001110000111", 
    113 => "10111101000000000011010001101110", 
    114 => "00111101010110111111111100000100", 
    115 => "00111110000010011000101010101000", 
    116 => "10111101111111001110111110101010", 
    117 => "10111101111001100010110111000111", 
    118 => "10111110001100110111100111111011", 
    119 => "10111101011000100111001010000110", 
    120 => "00111110001010111000111000001000", 
    121 => "00111100101000110111000001001000", 
    122 => "00111110100010110101011011111100", 
    123 => "10111101101000010010100101000101", 
    124 => "10111101111101100010101111110001", 
    125 => "00111100001010100010000110100111", 
    126 => "00111101100011111111111010110000", 
    127 => "10111011111101111101001100001011", 
    128 => "10111101100101011110010010100100", 
    129 => "10111101100101000110011101111011", 
    130 => "10111110001010101100110111100010", 
    131 => "00111110101101011000101000110011", 
    132 => "00111110010101010011000110011000", 
    133 => "00111101100010100100111101000100", 
    134 => "00111101110100001010110101000111", 
    135 => "10111100101100110011101110010111", 
    136 => "10111110010010110011011101000011", 
    137 => "10111100111111110000010001010111", 
    138 => "00111100110011010000111111101001", 
    139 => "10111101110101110101001100011110", 
    140 => "10111110000001100111111010000100", 
    141 => "00111101100111010000000001110001", 
    142 => "10111110010001001001010110011110", 
    143 => "00111101100110100000010100010100", 
    144 => "10111110010111100100100011101001", 
    145 => "10111010000000001111100110010000", 
    146 => "10111110011010101101100000011011", 
    147 => "00111110110000000000101000011000", 
    148 => "00111110011001101010111000111010", 
    149 => "00111110011110111000111001001100", 
    150 => "00111110100111101000011111110100", 
    151 => "00111110000100110000101001001110", 
    152 => "10111110100011010001000011110101", 
    153 => "10111100001000111010110100011001", 
    154 => "10111110010001010101111010101111", 
    155 => "10111100111110000010000010100011", 
    156 => "10111110000010001111100001100010", 
    157 => "00111100010101110111101101111100", 
    158 => "10111110000110101011011011010000", 
    159 => "10111100110001010100001101101100", 
    160 => "10111100010111001011010101111000", 
    161 => "00111101010000011000111001110101", 
    162 => "00111101010101100101011011101111", 
    163 => "10111101100010010001101011111100", 
    164 => "00111101000110111101010000000110", 
    165 => "00111100110110111001011000101001", 
    166 => "10111101100101110101110010001110", 
    167 => "00111101101001001110010000000000", 
    168 => "10111101101100111001101100000010", 
    169 => "10111110001010001101011010010001", 
    170 => "10111111000000110010110000011111", 
    171 => "00111110000000010000101111101001", 
    172 => "00111110001011000011110011100010", 
    173 => "00111110000000110011001000100111", 
    174 => "00111101001101111000011110001011", 
    175 => "00111101100100101001111011010100", 
    176 => "00111101101001010101011101011000", 
    177 => "00111110010010101101100101101010", 
    178 => "00111110011101111001100111100101", 
    179 => "10111110000011011100100100111111", 
    180 => "10111110001010011000000000101100", 
    181 => "10111110001101110010010000110001", 
    182 => "10111110011011010010101010100110", 
    183 => "10111100000100011000101000000001", 
    184 => "00111100111011000010111011111101", 
    185 => "00111101111001110001110011011010", 
    186 => "10111110001001010001110010011111", 
    187 => "10111101100111011110101101010011", 
    188 => "00111100101000100111110100000011", 
    189 => "00111101101011001110010101110001", 
    190 => "00111110011011000110111101111010", 
    191 => "10111110001110111110101100011000", 
    192 => "00111101110101001101011000011011", 
    193 => "00111101100110100111100011110010", 
    194 => "00111110000111101101010000011011", 
    195 => "10111100100001000111100100001100", 
    196 => "10111100110110010101101110111100", 
    197 => "10111110011101001001110011110101", 
    198 => "10111101000001101100101010001010", 
    199 => "00111101111110010101010011101011", 
    200 => "10111110100011101011110110110010", 
    201 => "10111100100101010011010110000111", 
    202 => "10111110000001110111110100001111", 
    203 => "00111110000101011001001001010011", 
    204 => "00111110010000110001100010111001", 
    205 => "00111100110001000011001011001010", 
    206 => "10111100100111000100101110010000", 
    207 => "00111101110011011110100001110001", 
    208 => "00111100111101111100100010001110", 
    209 => "10111101001001101111000111011100", 
    210 => "10111110011011001110101100110101", 
    211 => "00111101110001111111000110110111", 
    212 => "00111110101110110010010110110011", 
    213 => "00111110000100111101111000011110", 
    214 => "00111100110010111011101000010011", 
    215 => "00111101111000110010001000101001", 
    216 => "10111101000111111011010100000111", 
    217 => "00111100100111011000101001010101", 
    218 => "10111101100100010101011000011001", 
    219 => "00111001101111100101000100001001", 
    220 => "10111100101010000011111101001111", 
    221 => "10111110011101111000110001000011", 
    222 => "00111100111001111011111001010101", 
    223 => "00111101110001100111111100001011", 
    224 => "00111110011000111000010110000011", 
    225 => "10111011101010111111011101101010", 
    226 => "10111101101010111001110010110111", 
    227 => "10111100101000011000100110111110", 
    228 => "00111110000110001111000001000001", 
    229 => "00111110001101101100001010101101", 
    230 => "00111101010111000000011101101000", 
    231 => "10111101110011011000101100011110", 
    232 => "10111110000100100100000010111000", 
    233 => "10111100111110001001000111100010", 
    234 => "10111110011110001000010110010000", 
    235 => "10111100101010111001000010101000", 
    236 => "00111101100000010011100001111010", 
    237 => "10111110001110111100101111100110", 
    238 => "00111101100000001110100101001111", 
    239 => "00111110001001000110101000011010", 
    240 => "00111101011101010101001101101001", 
    241 => "10111100011001001100100101000011", 
    242 => "10111011000000100000010111111111", 
    243 => "10111101010101010010011111100101", 
    244 => "00111110001010101111010001101011", 
    245 => "00111110010001001001111000000010", 
    246 => "00111101111111000001011010011100", 
    247 => "00111101011101000111000111111000", 
    248 => "10111110001001011100001110011100", 
    249 => "00111101101101111001101001101011", 
    250 => "10111110010110011000100111011111", 
    251 => "10111101101110011000010000011011", 
    252 => "00111101100000110001000001010110", 
    253 => "10111100101100100100111010011100", 
    254 => "10111101101001000101001111010010", 
    255 => "00111101001110110110010001011010", 
    256 => "00111110011101110111011010000001", 
    257 => "00111101010100000001010111000010", 
    258 => "00111101110111011000001011111101", 
    259 => "00111100111111110100001101000010", 
    260 => "10111110001110000000101101100111", 
    261 => "10111100110011001100100010011011", 
    262 => "00111100111110100000111110010001", 
    263 => "10111101010010000010011110110111", 
    264 => "10111100100011011100011101101001", 
    265 => "10111011110100010000111101010010", 
    266 => "00111100010011001010101100111111", 
    267 => "00111100110001010011011011010110", 
    268 => "00111101110000100111010000011001", 
    269 => "00111110010001100100000001100100", 
    270 => "10111011100110101100001101100101", 
    271 => "10111010001001000101110101000010", 
    272 => "00111100101100100101100100011001", 
    273 => "10111101100101011010110110010111", 
    274 => "00111101111000000000111010101110", 
    275 => "00111101111011010110111001001000", 
    276 => "10111101110100101001000000100101", 
    277 => "10111110010000010101110011101010", 
    278 => "00111100000101001111111100000000", 
    279 => "00111100110000101011000011101010", 
    280 => "10111110000001011110010111110011", 
    281 => "10111100100111110001100011001010", 
    282 => "00111101111000010011101100011001", 
    283 => "00111100100000111100100011100010", 
    284 => "00111101111011011001101111100101", 
    285 => "00111101111100011010111010110100", 
    286 => "00111110010010010000011110010110", 
    287 => "10111100001110110111001100001000", 
    288 => "00111101100010100010111011000011", 
    289 => "10111101011111110111001001110001", 
    290 => "00111011101000110101100100110110", 
    291 => "10111110001101001100011110110000", 
    292 => "00111101100110011011011001110000", 
    293 => "00111101101010110011100100011001", 
    294 => "10111110010011001000010001110011", 
    295 => "00111101110101010110011011001111", 
    296 => "00111101001110001100001000011110", 
    297 => "10111101110001011101100111100100", 
    298 => "10111101001010010110101100110011", 
    299 => "10111011100111101110010001011100", 
    300 => "00111101000000101010001101001000", 
    301 => "10111110001001111001010101110000", 
    302 => "00111110001000000000010111000100", 
    303 => "00111110001010001001010011000100", 
    304 => "10111101101001010001101110010011", 
    305 => "10111100101011011011101001001101", 
    306 => "00111101100001010110100100101011", 
    307 => "10111110101111111111101011000010", 
    308 => "10111101111110100011011001011101", 
    309 => "10111110000000001100110110000101", 
    310 => "10111110101011101111010101100110", 
    311 => "10111110001010011000100101011001", 
    312 => "00111101111111100100111111111101", 
    313 => "00111101111110110000010101110101", 
    314 => "10111101010100001100000010101101", 
    315 => "10111101111110101010100110110101", 
    316 => "00111110000011100010101011000011", 
    317 => "10111110000000010110000111100101", 
    318 => "10111110001010111110000111101011", 
    319 => "00111101111101011110111000010011", 
    320 => "00111110010111111110110001010111", 
    321 => "10111101100111100001100101110110", 
    322 => "00111101000101110010001101101000", 
    323 => "10111101101001111010000101111111", 
    324 => "00111101110010000010011000100100", 
    325 => "00111110001101001111001100110100", 
    326 => "10111101100010011000101010101000", 
    327 => "10111100111001100000100000000111", 
    328 => "10111110011101110110101000101111", 
    329 => "10111110100100101000000111111110", 
    330 => "10111100101110011110011010101100", 
    331 => "10111110101011010000100001110000", 
    332 => "10111101100000100001110000000100", 
    333 => "10111101110101100110100111001111", 
    334 => "00111101100111101010010001100110", 
    335 => "10111110000000101011011110111011", 
    336 => "00111110010001011011101101111011", 
    337 => "10111101101101010101010001110110", 
    338 => "10111100110110000000000110110100", 
    339 => "00111110011001100110111100001101", 
    340 => "10111110001010100000100111001100", 
    341 => "10111100001100110001011111110000", 
    342 => "10111110001110100011011101101001", 
    343 => "00111110001110011101001100000010", 
    344 => "00111110011111100110000110001101", 
    345 => "10111101100100110110011110100001", 
    346 => "00111101010001000111011111111111", 
    347 => "10111101101010100011110101110001", 
    348 => "00111100011110101010010001110110", 
    349 => "00111101100111000000000110100011", 
    350 => "00111110011000010101010110010011", 
    351 => "00111000100011001000001001011010", 
    352 => "00111100100110110100001101010010", 
    353 => "10111101100011001001111110110110", 
    354 => "10111100111101101010101101011000", 
    355 => "10111110000001001111010100001010", 
    356 => "00111011110100101001100110010101", 
    357 => "10111101110100001000101000100110", 
    358 => "10111101000110001000011111101100", 
    359 => "10111100010100100000011011001000", 
    360 => "00111110000011000010101101010010", 
    361 => "00111110000111001101011100000110", 
    362 => "00111011110100111010111001101000", 
    363 => "10111101100000111001011000000111", 
    364 => "00111100100100100101110111010001", 
    365 => "10111101011010001101111010110001", 
    366 => "00111110011010000011010010001111", 
    367 => "00111011001110110010101110111011", 
    368 => "00111101010011010001101101110001", 
    369 => "00111110001001101010110101110001", 
    370 => "10111101011101111001101001101011", 
    371 => "10111110100011100001011011010111", 
    372 => "00111101101000010101001100110111", 
    373 => "10111011101101110011010010110101", 
    374 => "10111110010000001010101001100101", 
    375 => "00111101011110101100000111010011", 
    376 => "00111101110101000000110011001000", 
    377 => "00111100011101011110110010000001", 
    378 => "00111110000011011101010100001011", 
    379 => "00111101011110111010100010000010", 
    380 => "00111101010100011111001011011100", 
    381 => "00111110000001010011000000000110", 
    382 => "10111110010001110100000010000001", 
    383 => "00111100110010101111011100001010", 
    384 => "00111011111110001110011111011110", 
    385 => "00111110000011111010011011011111", 
    386 => "10111110010001000111100001000010", 
    387 => "10111110001110101010000001000101", 
    388 => "10111110001001001011011111110110", 
    389 => "10111110000001000011001010000111", 
    390 => "10111110110001101010010111111000", 
    391 => "00111100100011110000010000010100", 
    392 => "00111110001100010001110010110000", 
    393 => "10111100100010001110010110000010", 
    394 => "00111100101010010101011000111011", 
    395 => "00111101100011100010100011101101", 
    396 => "10111100111101110010111101110111", 
    397 => "00111110100111000101111111100001", 
    398 => "10111110000010100010001101111101", 
    399 => "10111110100011101111001111110101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity fully_connected_fUhA is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 400;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of fully_connected_fUhA is
    component fully_connected_fUhA_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    fully_connected_fUhA_rom_U :  component fully_connected_fUhA_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


