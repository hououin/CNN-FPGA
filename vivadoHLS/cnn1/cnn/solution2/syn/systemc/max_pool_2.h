// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_2_HH_
#define _max_pool_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_fcmp_32ns_32neOg.h"
#include "cnn_mac_muladd_5ng8j.h"

namespace ap_rtl {

struct max_pool_2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<13> > conv_out_address0;
    sc_out< sc_logic > conv_out_ce0;
    sc_in< sc_lv<32> > conv_out_q0;
    sc_out< sc_lv<11> > max_pool_out_address0;
    sc_out< sc_logic > max_pool_out_ce0;
    sc_out< sc_logic > max_pool_out_we0;
    sc_out< sc_lv<32> > max_pool_out_d0;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const1;


    // Module declarations
    max_pool_2(sc_module_name name);
    SC_HAS_PROCESS(max_pool_2);

    ~max_pool_2();

    sc_trace_file* mVcdFile;

    cnn_fcmp_32ns_32neOg<1,2,32,32,1>* cnn_fcmp_32ns_32neOg_U61;
    cnn_mac_muladd_5ng8j<1,1,5,4,4,8>* cnn_mac_muladd_5ng8j_U62;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<13> > indvar_flatten117_reg_127;
    sc_signal< sc_lv<7> > f_0_reg_138;
    sc_signal< sc_lv<8> > indvar_flatten63_reg_149;
    sc_signal< sc_lv<3> > r_0_reg_160;
    sc_signal< sc_lv<6> > indvar_flatten24_reg_171;
    sc_signal< sc_lv<3> > c_0_reg_182;
    sc_signal< sc_lv<4> > indvar_flatten_reg_193;
    sc_signal< sc_lv<2> > mpr_0_reg_204;
    sc_signal< sc_lv<32> > max_4_reg_215;
    sc_signal< sc_lv<2> > mpc_0_reg_227;
    sc_signal< sc_lv<1> > icmp_ln9_fu_261_p2;
    sc_signal< sc_lv<1> > icmp_ln9_reg_908;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln9_reg_908_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln9_reg_908_pp0_iter2_reg;
    sc_signal< sc_lv<13> > add_ln9_fu_267_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<7> > select_ln32_1_fu_293_p3;
    sc_signal< sc_lv<7> > select_ln32_1_reg_917;
    sc_signal< sc_lv<3> > select_ln12_2_fu_417_p3;
    sc_signal< sc_lv<3> > select_ln12_2_reg_924;
    sc_signal< sc_lv<3> > select_ln15_2_fu_527_p3;
    sc_signal< sc_lv<3> > select_ln15_2_reg_931;
    sc_signal< sc_lv<2> > select_ln19_fu_585_p3;
    sc_signal< sc_lv<2> > select_ln19_reg_937;
    sc_signal< sc_lv<2> > select_ln19_reg_937_pp0_iter1_reg;
    sc_signal< sc_lv<1> > select_ln19_1_fu_597_p3;
    sc_signal< sc_lv<1> > select_ln19_1_reg_942;
    sc_signal< sc_lv<1> > select_ln19_1_reg_942_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln19_2_fu_615_p3;
    sc_signal< sc_lv<4> > select_ln19_2_reg_947;
    sc_signal< sc_lv<2> > select_ln19_4_fu_637_p3;
    sc_signal< sc_lv<4> > j_fu_649_p2;
    sc_signal< sc_lv<4> > j_reg_957;
    sc_signal< sc_lv<1> > and_ln37_fu_661_p2;
    sc_signal< sc_lv<1> > and_ln37_reg_962;
    sc_signal< sc_lv<1> > and_ln37_reg_962_pp0_iter1_reg;
    sc_signal< sc_lv<1> > and_ln37_reg_962_pp0_iter2_reg;
    sc_signal< sc_lv<2> > mpc_fu_667_p2;
    sc_signal< sc_lv<4> > select_ln19_5_fu_679_p3;
    sc_signal< sc_lv<6> > select_ln15_4_fu_693_p3;
    sc_signal< sc_lv<8> > select_ln12_5_fu_707_p3;
    sc_signal< sc_lv<11> > max_pool_out_addr_reg_986;
    sc_signal< sc_lv<11> > max_pool_out_addr_reg_986_pp0_iter2_reg;
    sc_signal< sc_lv<32> > select_ln24_fu_801_p3;
    sc_signal< sc_lv<32> > select_ln24_reg_996;
    sc_signal< sc_lv<32> > max_reg_1003;
    sc_signal< sc_lv<32> > max_1_fu_892_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<7> > ap_phi_mux_f_0_phi_fu_142_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_r_0_phi_fu_164_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_c_0_phi_fu_186_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_max_4_phi_fu_219_p4;
    sc_signal< sc_lv<64> > zext_ln39_3_fu_764_p1;
    sc_signal< sc_lv<64> > zext_ln32_4_fu_788_p1;
    sc_signal< sc_lv<32> > grp_fu_238_p1;
    sc_signal< sc_lv<4> > shl_ln_fu_243_p3;
    sc_signal< sc_lv<4> > zext_ln19_fu_251_p1;
    sc_signal< sc_lv<1> > icmp_ln12_fu_279_p2;
    sc_signal< sc_lv<7> > f_fu_273_p2;
    sc_signal< sc_lv<1> > trunc_ln19_fu_315_p1;
    sc_signal< sc_lv<1> > xor_ln32_fu_309_p2;
    sc_signal< sc_lv<4> > i_fu_255_p2;
    sc_signal< sc_lv<1> > icmp_ln37_fu_333_p2;
    sc_signal< sc_lv<1> > icmp_ln22_fu_345_p2;
    sc_signal< sc_lv<1> > icmp_ln19_fu_357_p2;
    sc_signal< sc_lv<1> > icmp_ln15_fu_369_p2;
    sc_signal< sc_lv<3> > select_ln32_fu_285_p3;
    sc_signal< sc_lv<1> > and_ln32_6_fu_375_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_387_p2;
    sc_signal< sc_lv<3> > r_fu_381_p2;
    sc_signal< sc_lv<4> > shl_ln29_mid1_fu_401_p3;
    sc_signal< sc_lv<4> > select_ln32_2_fu_301_p3;
    sc_signal< sc_lv<4> > shl_ln1_fu_425_p3;
    sc_signal< sc_lv<1> > xor_ln12_fu_441_p2;
    sc_signal< sc_lv<1> > and_ln32_2_fu_319_p2;
    sc_signal< sc_lv<1> > or_ln12_1_fu_447_p2;
    sc_signal< sc_lv<4> > select_ln32_3_fu_325_p3;
    sc_signal< sc_lv<1> > and_ln32_3_fu_339_p2;
    sc_signal< sc_lv<1> > and_ln32_4_fu_351_p2;
    sc_signal< sc_lv<1> > and_ln32_5_fu_363_p2;
    sc_signal< sc_lv<3> > select_ln12_fu_393_p3;
    sc_signal< sc_lv<1> > and_ln12_3_fu_479_p2;
    sc_signal< sc_lv<1> > or_ln15_fu_491_p2;
    sc_signal< sc_lv<1> > or_ln15_1_fu_497_p2;
    sc_signal< sc_lv<3> > c_fu_485_p2;
    sc_signal< sc_lv<4> > shl_ln30_mid1_fu_511_p3;
    sc_signal< sc_lv<4> > select_ln12_3_fu_433_p3;
    sc_signal< sc_lv<1> > and_ln12_fu_453_p2;
    sc_signal< sc_lv<1> > xor_ln15_fu_535_p2;
    sc_signal< sc_lv<4> > select_ln12_1_fu_409_p3;
    sc_signal< sc_lv<4> > select_ln12_4_fu_459_p3;
    sc_signal< sc_lv<1> > and_ln12_1_fu_467_p2;
    sc_signal< sc_lv<1> > and_ln12_2_fu_473_p2;
    sc_signal< sc_lv<2> > select_ln15_fu_503_p3;
    sc_signal< sc_lv<1> > and_ln15_2_fu_561_p2;
    sc_signal< sc_lv<1> > or_ln19_fu_573_p2;
    sc_signal< sc_lv<1> > or_ln19_1_fu_579_p2;
    sc_signal< sc_lv<2> > mpr_fu_567_p2;
    sc_signal< sc_lv<1> > trunc_ln19_1_fu_593_p1;
    sc_signal< sc_lv<1> > and_ln15_fu_541_p2;
    sc_signal< sc_lv<4> > zext_ln19_1_fu_605_p1;
    sc_signal< sc_lv<4> > add_ln29_1_fu_609_p2;
    sc_signal< sc_lv<4> > select_ln15_3_fu_547_p3;
    sc_signal< sc_lv<1> > icmp_ln37_2_fu_623_p2;
    sc_signal< sc_lv<1> > and_ln15_1_fu_555_p2;
    sc_signal< sc_lv<4> > zext_ln22_fu_645_p1;
    sc_signal< sc_lv<4> > select_ln15_1_fu_519_p3;
    sc_signal< sc_lv<1> > select_ln19_3_fu_629_p3;
    sc_signal< sc_lv<1> > icmp_ln37_1_fu_655_p2;
    sc_signal< sc_lv<4> > add_ln19_fu_673_p2;
    sc_signal< sc_lv<6> > add_ln15_1_fu_687_p2;
    sc_signal< sc_lv<8> > add_ln12_1_fu_701_p2;
    sc_signal< sc_lv<5> > tmp_1_fu_724_p3;
    sc_signal< sc_lv<6> > zext_ln39_fu_721_p1;
    sc_signal< sc_lv<6> > zext_ln39_1_fu_731_p1;
    sc_signal< sc_lv<6> > add_ln39_fu_735_p2;
    sc_signal< sc_lv<6> > zext_ln39_2_fu_741_p1;
    sc_signal< sc_lv<6> > add_ln39_1_fu_744_p2;
    sc_signal< sc_lv<12> > tmp_3_cast_fu_750_p3;
    sc_signal< sc_lv<12> > zext_ln32_1_fu_718_p1;
    sc_signal< sc_lv<12> > add_ln39_2_fu_758_p2;
    sc_signal< sc_lv<8> > grp_fu_899_p3;
    sc_signal< sc_lv<14> > tmp_8_cast_fu_775_p3;
    sc_signal< sc_lv<14> > zext_ln32_fu_715_p1;
    sc_signal< sc_lv<14> > add_ln32_1_fu_782_p2;
    sc_signal< sc_lv<1> > trunc_ln22_fu_793_p1;
    sc_signal< sc_lv<1> > or_ln24_fu_796_p2;
    sc_signal< sc_lv<32> > bitcast_ln32_fu_810_p1;
    sc_signal< sc_lv<32> > bitcast_ln32_1_fu_827_p1;
    sc_signal< sc_lv<8> > tmp_fu_813_p4;
    sc_signal< sc_lv<23> > trunc_ln32_fu_823_p1;
    sc_signal< sc_lv<1> > icmp_ln32_1_fu_850_p2;
    sc_signal< sc_lv<1> > icmp_ln32_fu_844_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_830_p4;
    sc_signal< sc_lv<23> > trunc_ln32_1_fu_840_p1;
    sc_signal< sc_lv<1> > icmp_ln32_3_fu_868_p2;
    sc_signal< sc_lv<1> > icmp_ln32_2_fu_862_p2;
    sc_signal< sc_lv<1> > or_ln32_fu_856_p2;
    sc_signal< sc_lv<1> > or_ln32_1_fu_874_p2;
    sc_signal< sc_lv<1> > and_ln32_fu_880_p2;
    sc_signal< sc_lv<1> > grp_fu_238_p2;
    sc_signal< sc_lv<1> > and_ln32_1_fu_886_p2;
    sc_signal< sc_lv<5> > grp_fu_899_p0;
    sc_signal< sc_lv<4> > grp_fu_899_p1;
    sc_signal< sc_lv<4> > grp_fu_899_p2;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<8> > grp_fu_899_p10;
    sc_signal< sc_lv<8> > grp_fu_899_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state6;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<13> ap_const_lv13_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<13> ap_const_lv13_1900;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<8> ap_const_lv8_64;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<6> ap_const_lv6_14;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_B;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln12_1_fu_701_p2();
    void thread_add_ln15_1_fu_687_p2();
    void thread_add_ln19_fu_673_p2();
    void thread_add_ln29_1_fu_609_p2();
    void thread_add_ln32_1_fu_782_p2();
    void thread_add_ln39_1_fu_744_p2();
    void thread_add_ln39_2_fu_758_p2();
    void thread_add_ln39_fu_735_p2();
    void thread_add_ln9_fu_267_p2();
    void thread_and_ln12_1_fu_467_p2();
    void thread_and_ln12_2_fu_473_p2();
    void thread_and_ln12_3_fu_479_p2();
    void thread_and_ln12_fu_453_p2();
    void thread_and_ln15_1_fu_555_p2();
    void thread_and_ln15_2_fu_561_p2();
    void thread_and_ln15_fu_541_p2();
    void thread_and_ln32_1_fu_886_p2();
    void thread_and_ln32_2_fu_319_p2();
    void thread_and_ln32_3_fu_339_p2();
    void thread_and_ln32_4_fu_351_p2();
    void thread_and_ln32_5_fu_363_p2();
    void thread_and_ln32_6_fu_375_p2();
    void thread_and_ln32_fu_880_p2();
    void thread_and_ln37_fu_661_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_c_0_phi_fu_186_p4();
    void thread_ap_phi_mux_f_0_phi_fu_142_p4();
    void thread_ap_phi_mux_max_4_phi_fu_219_p4();
    void thread_ap_phi_mux_r_0_phi_fu_164_p4();
    void thread_ap_ready();
    void thread_bitcast_ln32_1_fu_827_p1();
    void thread_bitcast_ln32_fu_810_p1();
    void thread_c_fu_485_p2();
    void thread_conv_out_address0();
    void thread_conv_out_ce0();
    void thread_f_fu_273_p2();
    void thread_grp_fu_238_p1();
    void thread_grp_fu_899_p0();
    void thread_grp_fu_899_p1();
    void thread_grp_fu_899_p10();
    void thread_grp_fu_899_p2();
    void thread_grp_fu_899_p20();
    void thread_i_fu_255_p2();
    void thread_icmp_ln12_fu_279_p2();
    void thread_icmp_ln15_fu_369_p2();
    void thread_icmp_ln19_fu_357_p2();
    void thread_icmp_ln22_fu_345_p2();
    void thread_icmp_ln32_1_fu_850_p2();
    void thread_icmp_ln32_2_fu_862_p2();
    void thread_icmp_ln32_3_fu_868_p2();
    void thread_icmp_ln32_fu_844_p2();
    void thread_icmp_ln37_1_fu_655_p2();
    void thread_icmp_ln37_2_fu_623_p2();
    void thread_icmp_ln37_fu_333_p2();
    void thread_icmp_ln9_fu_261_p2();
    void thread_j_fu_649_p2();
    void thread_max_1_fu_892_p3();
    void thread_max_pool_out_address0();
    void thread_max_pool_out_ce0();
    void thread_max_pool_out_d0();
    void thread_max_pool_out_we0();
    void thread_mpc_fu_667_p2();
    void thread_mpr_fu_567_p2();
    void thread_or_ln12_1_fu_447_p2();
    void thread_or_ln12_fu_387_p2();
    void thread_or_ln15_1_fu_497_p2();
    void thread_or_ln15_fu_491_p2();
    void thread_or_ln19_1_fu_579_p2();
    void thread_or_ln19_fu_573_p2();
    void thread_or_ln24_fu_796_p2();
    void thread_or_ln32_1_fu_874_p2();
    void thread_or_ln32_fu_856_p2();
    void thread_r_fu_381_p2();
    void thread_select_ln12_1_fu_409_p3();
    void thread_select_ln12_2_fu_417_p3();
    void thread_select_ln12_3_fu_433_p3();
    void thread_select_ln12_4_fu_459_p3();
    void thread_select_ln12_5_fu_707_p3();
    void thread_select_ln12_fu_393_p3();
    void thread_select_ln15_1_fu_519_p3();
    void thread_select_ln15_2_fu_527_p3();
    void thread_select_ln15_3_fu_547_p3();
    void thread_select_ln15_4_fu_693_p3();
    void thread_select_ln15_fu_503_p3();
    void thread_select_ln19_1_fu_597_p3();
    void thread_select_ln19_2_fu_615_p3();
    void thread_select_ln19_3_fu_629_p3();
    void thread_select_ln19_4_fu_637_p3();
    void thread_select_ln19_5_fu_679_p3();
    void thread_select_ln19_fu_585_p3();
    void thread_select_ln24_fu_801_p3();
    void thread_select_ln32_1_fu_293_p3();
    void thread_select_ln32_2_fu_301_p3();
    void thread_select_ln32_3_fu_325_p3();
    void thread_select_ln32_fu_285_p3();
    void thread_shl_ln1_fu_425_p3();
    void thread_shl_ln29_mid1_fu_401_p3();
    void thread_shl_ln30_mid1_fu_511_p3();
    void thread_shl_ln_fu_243_p3();
    void thread_tmp_1_fu_724_p3();
    void thread_tmp_3_cast_fu_750_p3();
    void thread_tmp_5_fu_830_p4();
    void thread_tmp_8_cast_fu_775_p3();
    void thread_tmp_fu_813_p4();
    void thread_trunc_ln19_1_fu_593_p1();
    void thread_trunc_ln19_fu_315_p1();
    void thread_trunc_ln22_fu_793_p1();
    void thread_trunc_ln32_1_fu_840_p1();
    void thread_trunc_ln32_fu_823_p1();
    void thread_xor_ln12_fu_441_p2();
    void thread_xor_ln15_fu_535_p2();
    void thread_xor_ln32_fu_309_p2();
    void thread_zext_ln19_1_fu_605_p1();
    void thread_zext_ln19_fu_251_p1();
    void thread_zext_ln22_fu_645_p1();
    void thread_zext_ln32_1_fu_718_p1();
    void thread_zext_ln32_4_fu_788_p1();
    void thread_zext_ln32_fu_715_p1();
    void thread_zext_ln39_1_fu_731_p1();
    void thread_zext_ln39_2_fu_741_p1();
    void thread_zext_ln39_3_fu_764_p1();
    void thread_zext_ln39_fu_721_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
