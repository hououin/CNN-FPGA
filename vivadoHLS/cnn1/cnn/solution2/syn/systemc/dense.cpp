// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dense.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dense::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dense::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<57> dense::ap_ST_fsm_state1 = "1";
const sc_lv<57> dense::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<57> dense::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<57> dense::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<57> dense::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<57> dense::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<57> dense::ap_ST_fsm_state12 = "1000000";
const sc_lv<57> dense::ap_ST_fsm_state13 = "10000000";
const sc_lv<57> dense::ap_ST_fsm_state14 = "100000000";
const sc_lv<57> dense::ap_ST_fsm_state15 = "1000000000";
const sc_lv<57> dense::ap_ST_fsm_state16 = "10000000000";
const sc_lv<57> dense::ap_ST_fsm_state17 = "100000000000";
const sc_lv<57> dense::ap_ST_fsm_state18 = "1000000000000";
const sc_lv<57> dense::ap_ST_fsm_state19 = "10000000000000";
const sc_lv<57> dense::ap_ST_fsm_state20 = "100000000000000";
const sc_lv<57> dense::ap_ST_fsm_state21 = "1000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state22 = "10000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state23 = "100000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state24 = "1000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state25 = "10000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state26 = "100000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state27 = "1000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state28 = "10000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state29 = "100000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state30 = "1000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state31 = "10000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state32 = "100000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state33 = "1000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state34 = "10000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state35 = "100000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state36 = "1000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state37 = "10000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state38 = "100000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state39 = "1000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state40 = "10000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state41 = "100000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state42 = "1000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state43 = "10000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state44 = "100000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state45 = "1000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state46 = "10000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state47 = "100000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state48 = "1000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state49 = "10000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state50 = "100000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state51 = "1000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state52 = "10000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state53 = "100000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state54 = "1000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state55 = "10000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state56 = "100000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state57 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state58 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state59 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state60 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_pp1_stage0 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<57> dense::ap_ST_fsm_state80 = "100000000000000000000000000000000000000000000000000000000";
const bool dense::ap_const_boolean_1 = true;
const sc_lv<32> dense::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> dense::ap_const_lv32_4 = "100";
const bool dense::ap_const_boolean_0 = false;
const sc_lv<1> dense::ap_const_lv1_0 = "0";
const sc_lv<32> dense::ap_const_lv32_12 = "10010";
const sc_lv<32> dense::ap_const_lv32_16 = "10110";
const sc_lv<32> dense::ap_const_lv32_1A = "11010";
const sc_lv<32> dense::ap_const_lv32_1E = "11110";
const sc_lv<32> dense::ap_const_lv32_22 = "100010";
const sc_lv<32> dense::ap_const_lv32_26 = "100110";
const sc_lv<32> dense::ap_const_lv32_2A = "101010";
const sc_lv<32> dense::ap_const_lv32_2E = "101110";
const sc_lv<32> dense::ap_const_lv32_32 = "110010";
const sc_lv<32> dense::ap_const_lv32_36 = "110110";
const sc_lv<32> dense::ap_const_lv32_7 = "111";
const sc_lv<32> dense::ap_const_lv32_F = "1111";
const sc_lv<32> dense::ap_const_lv32_17 = "10111";
const sc_lv<32> dense::ap_const_lv32_1F = "11111";
const sc_lv<32> dense::ap_const_lv32_27 = "100111";
const sc_lv<32> dense::ap_const_lv32_37 = "110111";
const sc_lv<32> dense::ap_const_lv32_B = "1011";
const sc_lv<32> dense::ap_const_lv32_13 = "10011";
const sc_lv<32> dense::ap_const_lv32_1B = "11011";
const sc_lv<32> dense::ap_const_lv32_23 = "100011";
const sc_lv<32> dense::ap_const_lv32_2B = "101011";
const sc_lv<32> dense::ap_const_lv32_E = "1110";
const sc_lv<32> dense::ap_const_lv32_1 = "1";
const sc_lv<32> dense::ap_const_lv32_2 = "10";
const sc_lv<32> dense::ap_const_lv32_5 = "101";
const sc_lv<32> dense::ap_const_lv32_6 = "110";
const sc_lv<32> dense::ap_const_lv32_A = "1010";
const sc_lv<1> dense::ap_const_lv1_1 = "1";
const sc_lv<14> dense::ap_const_lv14_0 = "00000000000000";
const sc_lv<4> dense::ap_const_lv4_0 = "0000";
const sc_lv<11> dense::ap_const_lv11_0 = "00000000000";
const sc_lv<64> dense::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> dense::ap_const_lv64_1 = "1";
const sc_lv<64> dense::ap_const_lv64_2 = "10";
const sc_lv<64> dense::ap_const_lv64_3 = "11";
const sc_lv<64> dense::ap_const_lv64_4 = "100";
const sc_lv<64> dense::ap_const_lv64_5 = "101";
const sc_lv<64> dense::ap_const_lv64_6 = "110";
const sc_lv<64> dense::ap_const_lv64_7 = "111";
const sc_lv<64> dense::ap_const_lv64_8 = "1000";
const sc_lv<64> dense::ap_const_lv64_9 = "1001";
const sc_lv<32> dense::ap_const_lv32_2F = "101111";
const sc_lv<32> dense::ap_const_lv32_33 = "110011";
const sc_lv<32> dense::ap_const_lv32_3 = "11";
const sc_lv<14> dense::ap_const_lv14_3E80 = "11111010000000";
const sc_lv<14> dense::ap_const_lv14_1 = "1";
const sc_lv<4> dense::ap_const_lv4_1 = "1";
const sc_lv<11> dense::ap_const_lv11_640 = "11001000000";
const sc_lv<3> dense::ap_const_lv3_0 = "000";
const sc_lv<11> dense::ap_const_lv11_63F = "11000111111";
const sc_lv<11> dense::ap_const_lv11_1 = "1";
const sc_lv<4> dense::ap_const_lv4_A = "1010";
const sc_lv<32> dense::ap_const_lv32_38 = "111000";

dense::dense(sc_module_name name) : sc_module(name), mVcdFile(0) {
    dense_weights_U = new dense_dense_weights("dense_weights_U");
    dense_weights_U->clk(ap_clk);
    dense_weights_U->reset(ap_rst);
    dense_weights_U->address0(dense_weights_address0);
    dense_weights_U->ce0(dense_weights_ce0);
    dense_weights_U->q0(dense_weights_q0);
    dense_array_U = new dense_dense_array("dense_array_U");
    dense_array_U->clk(ap_clk);
    dense_array_U->reset(ap_rst);
    dense_array_U->address0(dense_array_address0);
    dense_array_U->ce0(dense_array_ce0);
    dense_array_U->we0(dense_array_we0);
    dense_array_U->d0(reg_304);
    dense_array_U->q0(dense_array_q0);
    cnn_fadd_32ns_32ncud_U67 = new cnn_fadd_32ns_32ncud<1,4,32,32,32>("cnn_fadd_32ns_32ncud_U67");
    cnn_fadd_32ns_32ncud_U67->clk(ap_clk);
    cnn_fadd_32ns_32ncud_U67->reset(ap_rst);
    cnn_fadd_32ns_32ncud_U67->din0(grp_fu_284_p0);
    cnn_fadd_32ns_32ncud_U67->din1(grp_fu_284_p1);
    cnn_fadd_32ns_32ncud_U67->ce(ap_var_for_const0);
    cnn_fadd_32ns_32ncud_U67->dout(grp_fu_284_p2);
    cnn_fmul_32ns_32ndEe_U68 = new cnn_fmul_32ns_32ndEe<1,3,32,32,32>("cnn_fmul_32ns_32ndEe_U68");
    cnn_fmul_32ns_32ndEe_U68->clk(ap_clk);
    cnn_fmul_32ns_32ndEe_U68->reset(ap_rst);
    cnn_fmul_32ns_32ndEe_U68->din0(dense_weights_load_reg_495);
    cnn_fmul_32ns_32ndEe_U68->din1(flat_array_load_reg_500);
    cnn_fmul_32ns_32ndEe_U68->ce(ap_var_for_const0);
    cnn_fmul_32ns_32ndEe_U68->dout(grp_fu_289_p2);
    cnn_fdiv_32ns_32nPgM_U69 = new cnn_fdiv_32ns_32nPgM<1,10,32,32,32>("cnn_fdiv_32ns_32nPgM_U69");
    cnn_fdiv_32ns_32nPgM_U69->clk(ap_clk);
    cnn_fdiv_32ns_32nPgM_U69->reset(ap_rst);
    cnn_fdiv_32ns_32nPgM_U69->din0(reg_322);
    cnn_fdiv_32ns_32nPgM_U69->din1(reg_304);
    cnn_fdiv_32ns_32nPgM_U69->ce(ap_var_for_const0);
    cnn_fdiv_32ns_32nPgM_U69->dout(grp_fu_293_p2);
    cnn_fexp_32ns_32nQgW_U70 = new cnn_fexp_32ns_32nQgW<1,8,32,32,32>("cnn_fexp_32ns_32nQgW_U70");
    cnn_fexp_32ns_32nQgW_U70->clk(ap_clk);
    cnn_fexp_32ns_32nQgW_U70->reset(ap_rst);
    cnn_fexp_32ns_32nQgW_U70->din0(ap_var_for_const1);
    cnn_fexp_32ns_32nQgW_U70->din1(dense_array_q0);
    cnn_fexp_32ns_32nQgW_U70->ce(ap_var_for_const0);
    cnn_fexp_32ns_32nQgW_U70->dout(grp_fu_298_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln29_fu_335_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_232_p4 );

    SC_METHOD(thread_add_ln39_4_fu_408_p2);
    sensitive << ( add_ln39_fu_402_p2 );
    sensitive << ( zext_ln34_fu_369_p1 );

    SC_METHOD(thread_add_ln39_fu_402_p2);
    sensitive << ( zext_ln39_7_fu_398_p1 );
    sensitive << ( zext_ln39_6_fu_386_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state61_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state62_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state63_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state64_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state65_pp1_stage0_iter4);

    SC_METHOD(thread_ap_block_state66_pp1_stage0_iter5);

    SC_METHOD(thread_ap_block_state67_pp1_stage0_iter6);

    SC_METHOD(thread_ap_block_state68_pp1_stage0_iter7);

    SC_METHOD(thread_ap_block_state69_pp1_stage0_iter8);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state70_pp1_stage0_iter9);

    SC_METHOD(thread_ap_block_state71_pp1_stage0_iter10);

    SC_METHOD(thread_ap_block_state72_pp1_stage0_iter11);

    SC_METHOD(thread_ap_block_state73_pp1_stage0_iter12);

    SC_METHOD(thread_ap_block_state74_pp1_stage0_iter13);

    SC_METHOD(thread_ap_block_state75_pp1_stage0_iter14);

    SC_METHOD(thread_ap_block_state76_pp1_stage0_iter15);

    SC_METHOD(thread_ap_block_state77_pp1_stage0_iter16);

    SC_METHOD(thread_ap_block_state78_pp1_stage0_iter17);

    SC_METHOD(thread_ap_block_state79_pp1_stage0_iter18);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state9_pp0_stage2_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln29_fu_329_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state61);
    sensitive << ( icmp_ln16_fu_446_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter8 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_enable_reg_pp1_iter4 );
    sensitive << ( ap_enable_reg_pp1_iter5 );
    sensitive << ( ap_enable_reg_pp1_iter6 );
    sensitive << ( ap_enable_reg_pp1_iter7 );
    sensitive << ( ap_enable_reg_pp1_iter9 );
    sensitive << ( ap_enable_reg_pp1_iter10 );
    sensitive << ( ap_enable_reg_pp1_iter11 );
    sensitive << ( ap_enable_reg_pp1_iter12 );
    sensitive << ( ap_enable_reg_pp1_iter13 );
    sensitive << ( ap_enable_reg_pp1_iter14 );
    sensitive << ( ap_enable_reg_pp1_iter15 );
    sensitive << ( ap_enable_reg_pp1_iter16 );
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_enable_reg_pp1_iter18 );

    SC_METHOD(thread_ap_phi_mux_d_0_phi_fu_243_p4);
    sensitive << ( d_0_reg_239 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln29_reg_463 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln39_1_reg_479 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_f_0_phi_fu_266_p4);
    sensitive << ( f_0_reg_262 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln29_reg_463 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( f_reg_519 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_232_p4);
    sensitive << ( indvar_flatten_reg_228 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln29_reg_463 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( add_ln29_reg_467 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_w_sum_1_phi_fu_254_p4);
    sensitive << ( w_sum_1_reg_250 );
    sensitive << ( reg_304 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln29_reg_463_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state80 );

    SC_METHOD(thread_d_fu_341_p2);
    sensitive << ( ap_phi_mux_d_0_phi_fu_243_p4 );

    SC_METHOD(thread_dense_array_address0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( zext_ln18_fu_458_p1 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( zext_ln39_fu_442_p1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_dense_array_ce0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_dense_array_we0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( icmp_ln41_reg_515 );

    SC_METHOD(thread_dense_weights_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln39_8_fu_414_p1 );

    SC_METHOD(thread_dense_weights_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_f_fu_437_p2);
    sensitive << ( select_ln39_reg_472 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln39_3_fu_373_p1 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_grp_fu_284_p0);
    sensitive << ( reg_304 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( reg_322 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( select_ln35_reg_505 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_grp_fu_284_p1);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( reg_322 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_reg_510 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_icmp_ln16_fu_446_p2);
    sensitive << ( j_0_i_reg_273 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_icmp_ln29_fu_329_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_232_p4 );

    SC_METHOD(thread_icmp_ln33_fu_347_p2);
    sensitive << ( icmp_ln29_fu_329_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_f_0_phi_fu_266_p4 );

    SC_METHOD(thread_icmp_ln35_fu_419_p2);
    sensitive << ( icmp_ln29_reg_463 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln39_reg_472 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_icmp_ln41_fu_432_p2);
    sensitive << ( icmp_ln29_reg_463 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( select_ln39_reg_472 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );

    SC_METHOD(thread_j_fu_452_p2);
    sensitive << ( j_0_i_reg_273 );

    SC_METHOD(thread_prediction_address0);
    sensitive << ( zext_ln18_reg_583_pp1_iter17_reg );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_prediction_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter18 );

    SC_METHOD(thread_prediction_d0);
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( grp_fu_293_p2 );

    SC_METHOD(thread_prediction_we0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln16_reg_574_pp1_iter17_reg );
    sensitive << ( ap_enable_reg_pp1_iter18 );

    SC_METHOD(thread_select_ln35_fu_424_p3);
    sensitive << ( ap_phi_mux_w_sum_1_phi_fu_254_p4 );
    sensitive << ( icmp_ln35_fu_419_p2 );

    SC_METHOD(thread_select_ln39_1_fu_361_p3);
    sensitive << ( ap_phi_mux_d_0_phi_fu_243_p4 );
    sensitive << ( icmp_ln33_fu_347_p2 );
    sensitive << ( d_fu_341_p2 );

    SC_METHOD(thread_select_ln39_fu_353_p3);
    sensitive << ( ap_phi_mux_f_0_phi_fu_266_p4 );
    sensitive << ( icmp_ln33_fu_347_p2 );

    SC_METHOD(thread_tmp_2_fu_390_p3);
    sensitive << ( select_ln39_fu_353_p3 );

    SC_METHOD(thread_tmp_s_fu_378_p3);
    sensitive << ( select_ln39_fu_353_p3 );

    SC_METHOD(thread_zext_ln18_fu_458_p1);
    sensitive << ( j_0_i_reg_273 );

    SC_METHOD(thread_zext_ln34_fu_369_p1);
    sensitive << ( select_ln39_1_fu_361_p3 );

    SC_METHOD(thread_zext_ln39_3_fu_373_p1);
    sensitive << ( select_ln39_fu_353_p3 );

    SC_METHOD(thread_zext_ln39_6_fu_386_p1);
    sensitive << ( tmp_s_fu_378_p3 );

    SC_METHOD(thread_zext_ln39_7_fu_398_p1);
    sensitive << ( tmp_2_fu_390_p3 );

    SC_METHOD(thread_zext_ln39_8_fu_414_p1);
    sensitive << ( add_ln39_4_fu_408_p2 );

    SC_METHOD(thread_zext_ln39_fu_442_p1);
    sensitive << ( select_ln39_1_reg_479_pp0_iter1_reg );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln29_fu_329_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( icmp_ln16_fu_446_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter17 );
    sensitive << ( ap_enable_reg_pp1_iter18 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter13 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter14 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter15 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter16 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter17 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter18 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dense_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, prediction_address0, "(port)prediction_address0");
    sc_trace(mVcdFile, prediction_ce0, "(port)prediction_ce0");
    sc_trace(mVcdFile, prediction_we0, "(port)prediction_we0");
    sc_trace(mVcdFile, prediction_d0, "(port)prediction_d0");
    sc_trace(mVcdFile, flat_array_address0, "(port)flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "(port)flat_array_ce0");
    sc_trace(mVcdFile, flat_array_q0, "(port)flat_array_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, dense_weights_address0, "dense_weights_address0");
    sc_trace(mVcdFile, dense_weights_ce0, "dense_weights_ce0");
    sc_trace(mVcdFile, dense_weights_q0, "dense_weights_q0");
    sc_trace(mVcdFile, indvar_flatten_reg_228, "indvar_flatten_reg_228");
    sc_trace(mVcdFile, d_0_reg_239, "d_0_reg_239");
    sc_trace(mVcdFile, w_sum_1_reg_250, "w_sum_1_reg_250");
    sc_trace(mVcdFile, f_0_reg_262, "f_0_reg_262");
    sc_trace(mVcdFile, j_0_i_reg_273, "j_0_i_reg_273");
    sc_trace(mVcdFile, grp_fu_284_p2, "grp_fu_284_p2");
    sc_trace(mVcdFile, reg_304, "reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage3_iter1, "ap_block_state10_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, icmp_ln29_reg_463, "icmp_ln29_reg_463");
    sc_trace(mVcdFile, icmp_ln29_reg_463_pp0_iter1_reg, "icmp_ln29_reg_463_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, dense_array_q0, "dense_array_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_block_state61_pp1_stage0_iter0, "ap_block_state61_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state62_pp1_stage0_iter1, "ap_block_state62_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state63_pp1_stage0_iter2, "ap_block_state63_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state64_pp1_stage0_iter3, "ap_block_state64_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state65_pp1_stage0_iter4, "ap_block_state65_pp1_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state66_pp1_stage0_iter5, "ap_block_state66_pp1_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state67_pp1_stage0_iter6, "ap_block_state67_pp1_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state68_pp1_stage0_iter7, "ap_block_state68_pp1_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state69_pp1_stage0_iter8, "ap_block_state69_pp1_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state70_pp1_stage0_iter9, "ap_block_state70_pp1_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state71_pp1_stage0_iter10, "ap_block_state71_pp1_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state72_pp1_stage0_iter11, "ap_block_state72_pp1_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state73_pp1_stage0_iter12, "ap_block_state73_pp1_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state74_pp1_stage0_iter13, "ap_block_state74_pp1_stage0_iter13");
    sc_trace(mVcdFile, ap_block_state75_pp1_stage0_iter14, "ap_block_state75_pp1_stage0_iter14");
    sc_trace(mVcdFile, ap_block_state76_pp1_stage0_iter15, "ap_block_state76_pp1_stage0_iter15");
    sc_trace(mVcdFile, ap_block_state77_pp1_stage0_iter16, "ap_block_state77_pp1_stage0_iter16");
    sc_trace(mVcdFile, ap_block_state78_pp1_stage0_iter17, "ap_block_state78_pp1_stage0_iter17");
    sc_trace(mVcdFile, ap_block_state79_pp1_stage0_iter18, "ap_block_state79_pp1_stage0_iter18");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, icmp_ln16_reg_574, "icmp_ln16_reg_574");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_fu_298_p2, "grp_fu_298_p2");
    sc_trace(mVcdFile, reg_322, "reg_322");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter8, "ap_enable_reg_pp1_iter8");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter7_reg, "icmp_ln16_reg_574_pp1_iter7_reg");
    sc_trace(mVcdFile, icmp_ln29_fu_329_p2, "icmp_ln29_fu_329_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln29_fu_335_p2, "add_ln29_fu_335_p2");
    sc_trace(mVcdFile, add_ln29_reg_467, "add_ln29_reg_467");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln39_fu_353_p3, "select_ln39_fu_353_p3");
    sc_trace(mVcdFile, select_ln39_reg_472, "select_ln39_reg_472");
    sc_trace(mVcdFile, select_ln39_1_fu_361_p3, "select_ln39_1_fu_361_p3");
    sc_trace(mVcdFile, select_ln39_1_reg_479, "select_ln39_1_reg_479");
    sc_trace(mVcdFile, select_ln39_1_reg_479_pp0_iter1_reg, "select_ln39_1_reg_479_pp0_iter1_reg");
    sc_trace(mVcdFile, dense_weights_load_reg_495, "dense_weights_load_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, flat_array_load_reg_500, "flat_array_load_reg_500");
    sc_trace(mVcdFile, select_ln35_fu_424_p3, "select_ln35_fu_424_p3");
    sc_trace(mVcdFile, select_ln35_reg_505, "select_ln35_reg_505");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage4_iter1, "ap_block_state11_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, grp_fu_289_p2, "grp_fu_289_p2");
    sc_trace(mVcdFile, tmp_reg_510, "tmp_reg_510");
    sc_trace(mVcdFile, icmp_ln41_fu_432_p2, "icmp_ln41_fu_432_p2");
    sc_trace(mVcdFile, icmp_ln41_reg_515, "icmp_ln41_reg_515");
    sc_trace(mVcdFile, f_fu_437_p2, "f_fu_437_p2");
    sc_trace(mVcdFile, f_reg_519, "f_reg_519");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, icmp_ln16_fu_446_p2, "icmp_ln16_fu_446_p2");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter1_reg, "icmp_ln16_reg_574_pp1_iter1_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter2_reg, "icmp_ln16_reg_574_pp1_iter2_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter3_reg, "icmp_ln16_reg_574_pp1_iter3_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter4_reg, "icmp_ln16_reg_574_pp1_iter4_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter5_reg, "icmp_ln16_reg_574_pp1_iter5_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter6_reg, "icmp_ln16_reg_574_pp1_iter6_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter8_reg, "icmp_ln16_reg_574_pp1_iter8_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter9_reg, "icmp_ln16_reg_574_pp1_iter9_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter10_reg, "icmp_ln16_reg_574_pp1_iter10_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter11_reg, "icmp_ln16_reg_574_pp1_iter11_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter12_reg, "icmp_ln16_reg_574_pp1_iter12_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter13_reg, "icmp_ln16_reg_574_pp1_iter13_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter14_reg, "icmp_ln16_reg_574_pp1_iter14_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter15_reg, "icmp_ln16_reg_574_pp1_iter15_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter16_reg, "icmp_ln16_reg_574_pp1_iter16_reg");
    sc_trace(mVcdFile, icmp_ln16_reg_574_pp1_iter17_reg, "icmp_ln16_reg_574_pp1_iter17_reg");
    sc_trace(mVcdFile, j_fu_452_p2, "j_fu_452_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, zext_ln18_fu_458_p1, "zext_ln18_fu_458_p1");
    sc_trace(mVcdFile, zext_ln18_reg_583, "zext_ln18_reg_583");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter1_reg, "zext_ln18_reg_583_pp1_iter1_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter2_reg, "zext_ln18_reg_583_pp1_iter2_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter3_reg, "zext_ln18_reg_583_pp1_iter3_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter4_reg, "zext_ln18_reg_583_pp1_iter4_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter5_reg, "zext_ln18_reg_583_pp1_iter5_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter6_reg, "zext_ln18_reg_583_pp1_iter6_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter7_reg, "zext_ln18_reg_583_pp1_iter7_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter8_reg, "zext_ln18_reg_583_pp1_iter8_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter9_reg, "zext_ln18_reg_583_pp1_iter9_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter10_reg, "zext_ln18_reg_583_pp1_iter10_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter11_reg, "zext_ln18_reg_583_pp1_iter11_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter12_reg, "zext_ln18_reg_583_pp1_iter12_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter13_reg, "zext_ln18_reg_583_pp1_iter13_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter14_reg, "zext_ln18_reg_583_pp1_iter14_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter15_reg, "zext_ln18_reg_583_pp1_iter15_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter16_reg, "zext_ln18_reg_583_pp1_iter16_reg");
    sc_trace(mVcdFile, zext_ln18_reg_583_pp1_iter17_reg, "zext_ln18_reg_583_pp1_iter17_reg");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state61, "ap_condition_pp1_exit_iter0_state61");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter4, "ap_enable_reg_pp1_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter5, "ap_enable_reg_pp1_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter6, "ap_enable_reg_pp1_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter7, "ap_enable_reg_pp1_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter9, "ap_enable_reg_pp1_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter10, "ap_enable_reg_pp1_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter11, "ap_enable_reg_pp1_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter12, "ap_enable_reg_pp1_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter13, "ap_enable_reg_pp1_iter13");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter14, "ap_enable_reg_pp1_iter14");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter15, "ap_enable_reg_pp1_iter15");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter16, "ap_enable_reg_pp1_iter16");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter17, "ap_enable_reg_pp1_iter17");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter18, "ap_enable_reg_pp1_iter18");
    sc_trace(mVcdFile, dense_array_address0, "dense_array_address0");
    sc_trace(mVcdFile, dense_array_ce0, "dense_array_ce0");
    sc_trace(mVcdFile, dense_array_we0, "dense_array_we0");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_232_p4, "ap_phi_mux_indvar_flatten_phi_fu_232_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_d_0_phi_fu_243_p4, "ap_phi_mux_d_0_phi_fu_243_p4");
    sc_trace(mVcdFile, ap_phi_mux_w_sum_1_phi_fu_254_p4, "ap_phi_mux_w_sum_1_phi_fu_254_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_phi_mux_f_0_phi_fu_266_p4, "ap_phi_mux_f_0_phi_fu_266_p4");
    sc_trace(mVcdFile, zext_ln39_8_fu_414_p1, "zext_ln39_8_fu_414_p1");
    sc_trace(mVcdFile, zext_ln39_3_fu_373_p1, "zext_ln39_3_fu_373_p1");
    sc_trace(mVcdFile, zext_ln39_fu_442_p1, "zext_ln39_fu_442_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, grp_fu_293_p2, "grp_fu_293_p2");
    sc_trace(mVcdFile, grp_fu_284_p0, "grp_fu_284_p0");
    sc_trace(mVcdFile, grp_fu_284_p1, "grp_fu_284_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, icmp_ln33_fu_347_p2, "icmp_ln33_fu_347_p2");
    sc_trace(mVcdFile, d_fu_341_p2, "d_fu_341_p2");
    sc_trace(mVcdFile, tmp_s_fu_378_p3, "tmp_s_fu_378_p3");
    sc_trace(mVcdFile, tmp_2_fu_390_p3, "tmp_2_fu_390_p3");
    sc_trace(mVcdFile, zext_ln39_7_fu_398_p1, "zext_ln39_7_fu_398_p1");
    sc_trace(mVcdFile, zext_ln39_6_fu_386_p1, "zext_ln39_6_fu_386_p1");
    sc_trace(mVcdFile, add_ln39_fu_402_p2, "add_ln39_fu_402_p2");
    sc_trace(mVcdFile, zext_ln34_fu_369_p1, "zext_ln34_fu_369_p1");
    sc_trace(mVcdFile, add_ln39_4_fu_408_p2, "add_ln39_4_fu_408_p2");
    sc_trace(mVcdFile, icmp_ln35_fu_419_p2, "icmp_ln35_fu_419_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage2_iter1, "ap_block_state9_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

dense::~dense() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete dense_weights_U;
    delete dense_array_U;
    delete cnn_fadd_32ns_32ncud_U67;
    delete cnn_fmul_32ns_32ndEe_U68;
    delete cnn_fdiv_32ns_32nPgM_U69;
    delete cnn_fexp_32ns_32nQgW_U70;
}

void dense::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void dense::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void dense::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state61.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state61.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state61.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter10 = ap_enable_reg_pp1_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter11 = ap_enable_reg_pp1_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter12 = ap_enable_reg_pp1_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter13 = ap_enable_reg_pp1_iter12.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter14 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter14 = ap_enable_reg_pp1_iter13.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter15 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter15 = ap_enable_reg_pp1_iter14.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter16 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter16 = ap_enable_reg_pp1_iter15.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter17 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter17 = ap_enable_reg_pp1_iter16.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter18 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter18 = ap_enable_reg_pp1_iter17.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
            ap_enable_reg_pp1_iter18 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter4 = ap_enable_reg_pp1_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter5 = ap_enable_reg_pp1_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter6 = ap_enable_reg_pp1_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter7 = ap_enable_reg_pp1_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter8 = ap_enable_reg_pp1_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter9 = ap_enable_reg_pp1_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0))) {
        d_0_reg_239 = select_ln39_1_reg_479.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        d_0_reg_239 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0))) {
        f_0_reg_262 = f_reg_519.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        f_0_reg_262 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_228 = add_ln29_reg_467.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_228 = ap_const_lv14_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        j_0_i_reg_273 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_446_p2.read()))) {
        j_0_i_reg_273 = j_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        w_sum_1_reg_250 = reg_304.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        w_sum_1_reg_250 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        add_ln29_reg_467 = add_ln29_fu_335_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0))) {
        dense_weights_load_reg_495 = dense_weights_q0.read();
        flat_array_load_reg_500 = flat_array_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        f_reg_519 = f_fu_437_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
        icmp_ln16_reg_574 = icmp_ln16_fu_446_p2.read();
        icmp_ln16_reg_574_pp1_iter1_reg = icmp_ln16_reg_574.read();
        zext_ln18_reg_583_pp1_iter1_reg = zext_ln18_reg_583.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln16_reg_574_pp1_iter10_reg = icmp_ln16_reg_574_pp1_iter9_reg.read();
        icmp_ln16_reg_574_pp1_iter11_reg = icmp_ln16_reg_574_pp1_iter10_reg.read();
        icmp_ln16_reg_574_pp1_iter12_reg = icmp_ln16_reg_574_pp1_iter11_reg.read();
        icmp_ln16_reg_574_pp1_iter13_reg = icmp_ln16_reg_574_pp1_iter12_reg.read();
        icmp_ln16_reg_574_pp1_iter14_reg = icmp_ln16_reg_574_pp1_iter13_reg.read();
        icmp_ln16_reg_574_pp1_iter15_reg = icmp_ln16_reg_574_pp1_iter14_reg.read();
        icmp_ln16_reg_574_pp1_iter16_reg = icmp_ln16_reg_574_pp1_iter15_reg.read();
        icmp_ln16_reg_574_pp1_iter17_reg = icmp_ln16_reg_574_pp1_iter16_reg.read();
        icmp_ln16_reg_574_pp1_iter2_reg = icmp_ln16_reg_574_pp1_iter1_reg.read();
        icmp_ln16_reg_574_pp1_iter3_reg = icmp_ln16_reg_574_pp1_iter2_reg.read();
        icmp_ln16_reg_574_pp1_iter4_reg = icmp_ln16_reg_574_pp1_iter3_reg.read();
        icmp_ln16_reg_574_pp1_iter5_reg = icmp_ln16_reg_574_pp1_iter4_reg.read();
        icmp_ln16_reg_574_pp1_iter6_reg = icmp_ln16_reg_574_pp1_iter5_reg.read();
        icmp_ln16_reg_574_pp1_iter7_reg = icmp_ln16_reg_574_pp1_iter6_reg.read();
        icmp_ln16_reg_574_pp1_iter8_reg = icmp_ln16_reg_574_pp1_iter7_reg.read();
        icmp_ln16_reg_574_pp1_iter9_reg = icmp_ln16_reg_574_pp1_iter8_reg.read();
        zext_ln18_reg_583_pp1_iter10_reg = zext_ln18_reg_583_pp1_iter9_reg.read();
        zext_ln18_reg_583_pp1_iter11_reg = zext_ln18_reg_583_pp1_iter10_reg.read();
        zext_ln18_reg_583_pp1_iter12_reg = zext_ln18_reg_583_pp1_iter11_reg.read();
        zext_ln18_reg_583_pp1_iter13_reg = zext_ln18_reg_583_pp1_iter12_reg.read();
        zext_ln18_reg_583_pp1_iter14_reg = zext_ln18_reg_583_pp1_iter13_reg.read();
        zext_ln18_reg_583_pp1_iter15_reg = zext_ln18_reg_583_pp1_iter14_reg.read();
        zext_ln18_reg_583_pp1_iter16_reg = zext_ln18_reg_583_pp1_iter15_reg.read();
        zext_ln18_reg_583_pp1_iter17_reg = zext_ln18_reg_583_pp1_iter16_reg.read();
        zext_ln18_reg_583_pp1_iter2_reg = zext_ln18_reg_583_pp1_iter1_reg.read();
        zext_ln18_reg_583_pp1_iter3_reg = zext_ln18_reg_583_pp1_iter2_reg.read();
        zext_ln18_reg_583_pp1_iter4_reg = zext_ln18_reg_583_pp1_iter3_reg.read();
        zext_ln18_reg_583_pp1_iter5_reg = zext_ln18_reg_583_pp1_iter4_reg.read();
        zext_ln18_reg_583_pp1_iter6_reg = zext_ln18_reg_583_pp1_iter5_reg.read();
        zext_ln18_reg_583_pp1_iter7_reg = zext_ln18_reg_583_pp1_iter6_reg.read();
        zext_ln18_reg_583_pp1_iter8_reg = zext_ln18_reg_583_pp1_iter7_reg.read();
        zext_ln18_reg_583_pp1_iter9_reg = zext_ln18_reg_583_pp1_iter8_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln29_reg_463 = icmp_ln29_fu_329_p2.read();
        icmp_ln29_reg_463_pp0_iter1_reg = icmp_ln29_reg_463.read();
        select_ln39_1_reg_479_pp0_iter1_reg = select_ln39_1_reg_479.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        icmp_ln41_reg_515 = icmp_ln41_fu_432_p2.read();
        select_ln35_reg_505 = select_ln35_fu_424_p3.read();
        tmp_reg_510 = grp_fu_289_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln29_reg_463_pp0_iter1_reg.read(), ap_const_lv1_0)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()))) {
        reg_304 = grp_fu_284_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_reg_574_pp1_iter7_reg.read())))) {
        reg_322 = grp_fu_298_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_329_p2.read()))) {
        select_ln39_1_reg_479 = select_ln39_1_fu_361_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_329_p2.read()))) {
        select_ln39_reg_472 = select_ln39_fu_353_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_fu_446_p2.read()))) {
        zext_ln18_reg_583 = zext_ln18_fu_458_p1.read();
    }
}

void dense::thread_add_ln29_fu_335_p2() {
    add_ln29_fu_335_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_232_p4.read().is_01() || !ap_const_lv14_1.is_01())? sc_lv<14>(): (sc_biguint<14>(ap_phi_mux_indvar_flatten_phi_fu_232_p4.read()) + sc_biguint<14>(ap_const_lv14_1));
}

void dense::thread_add_ln39_4_fu_408_p2() {
    add_ln39_4_fu_408_p2 = (!add_ln39_fu_402_p2.read().is_01() || !zext_ln34_fu_369_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(add_ln39_fu_402_p2.read()) + sc_biguint<15>(zext_ln34_fu_369_p1.read()));
}

void dense::thread_add_ln39_fu_402_p2() {
    add_ln39_fu_402_p2 = (!zext_ln39_7_fu_398_p1.read().is_01() || !zext_ln39_6_fu_386_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln39_7_fu_398_p1.read()) + sc_biguint<15>(zext_ln39_6_fu_386_p1.read()));
}

void dense::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void dense::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void dense::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void dense::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void dense::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void dense::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[55];
}

void dense::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void dense::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[6];
}

void dense::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[7];
}

void dense::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[10];
}

void dense::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[11];
}

void dense::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[14];
}

void dense::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[15];
}

void dense::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[18];
}

void dense::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[19];
}

void dense::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[22];
}

void dense::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[23];
}

void dense::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[26];
}

void dense::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[27];
}

void dense::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[30];
}

void dense::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[31];
}

void dense::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[34];
}

void dense::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[35];
}

void dense::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[38];
}

void dense::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[39];
}

void dense::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[42];
}

void dense::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[43];
}

void dense::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[46];
}

void dense::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[47];
}

void dense::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[50];
}

void dense::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[51];
}

void dense::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[54];
}

void dense::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[56];
}

void dense::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state10_pp0_stage3_iter1() {
    ap_block_state10_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state11_pp0_stage4_iter1() {
    ap_block_state11_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state61_pp1_stage0_iter0() {
    ap_block_state61_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state62_pp1_stage0_iter1() {
    ap_block_state62_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state63_pp1_stage0_iter2() {
    ap_block_state63_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state64_pp1_stage0_iter3() {
    ap_block_state64_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state65_pp1_stage0_iter4() {
    ap_block_state65_pp1_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state66_pp1_stage0_iter5() {
    ap_block_state66_pp1_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state67_pp1_stage0_iter6() {
    ap_block_state67_pp1_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state68_pp1_stage0_iter7() {
    ap_block_state68_pp1_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state69_pp1_stage0_iter8() {
    ap_block_state69_pp1_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state70_pp1_stage0_iter9() {
    ap_block_state70_pp1_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state71_pp1_stage0_iter10() {
    ap_block_state71_pp1_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state72_pp1_stage0_iter11() {
    ap_block_state72_pp1_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state73_pp1_stage0_iter12() {
    ap_block_state73_pp1_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state74_pp1_stage0_iter13() {
    ap_block_state74_pp1_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state75_pp1_stage0_iter14() {
    ap_block_state75_pp1_stage0_iter14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state76_pp1_stage0_iter15() {
    ap_block_state76_pp1_stage0_iter15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state77_pp1_stage0_iter16() {
    ap_block_state77_pp1_stage0_iter16 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state78_pp1_stage0_iter17() {
    ap_block_state78_pp1_stage0_iter17 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state79_pp1_stage0_iter18() {
    ap_block_state79_pp1_stage0_iter18 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_block_state9_pp0_stage2_iter1() {
    ap_block_state9_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void dense::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln29_fu_329_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void dense::thread_ap_condition_pp1_exit_iter0_state61() {
    if (esl_seteq<1,1,1>(icmp_ln16_fu_446_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state61 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state61 = ap_const_logic_0;
    }
}

void dense::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dense::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void dense::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void dense::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void dense::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter14.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter15.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter16.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter17.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter18.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void dense::thread_ap_phi_mux_d_0_phi_fu_243_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_d_0_phi_fu_243_p4 = select_ln39_1_reg_479.read();
    } else {
        ap_phi_mux_d_0_phi_fu_243_p4 = d_0_reg_239.read();
    }
}

void dense::thread_ap_phi_mux_f_0_phi_fu_266_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_f_0_phi_fu_266_p4 = f_reg_519.read();
    } else {
        ap_phi_mux_f_0_phi_fu_266_p4 = f_0_reg_262.read();
    }
}

void dense::thread_ap_phi_mux_indvar_flatten_phi_fu_232_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_232_p4 = add_ln29_reg_467.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_232_p4 = indvar_flatten_reg_228.read();
    }
}

void dense::thread_ap_phi_mux_w_sum_1_phi_fu_254_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln29_reg_463_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        ap_phi_mux_w_sum_1_phi_fu_254_p4 = reg_304.read();
    } else {
        ap_phi_mux_w_sum_1_phi_fu_254_p4 = w_sum_1_reg_250.read();
    }
}

void dense::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dense::thread_d_fu_341_p2() {
    d_fu_341_p2 = (!ap_phi_mux_d_0_phi_fu_243_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_d_0_phi_fu_243_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_dense_array_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln18_fu_458_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_9);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_1);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        dense_array_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        dense_array_address0 =  (sc_lv<4>) (zext_ln39_fu_442_p1.read());
    } else {
        dense_array_address0 = "XXXX";
    }
}

void dense::thread_dense_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        dense_array_ce0 = ap_const_logic_1;
    } else {
        dense_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_dense_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln41_reg_515.read(), ap_const_lv1_1))) {
        dense_array_we0 = ap_const_logic_1;
    } else {
        dense_array_we0 = ap_const_logic_0;
    }
}

void dense::thread_dense_weights_address0() {
    dense_weights_address0 =  (sc_lv<14>) (zext_ln39_8_fu_414_p1.read());
}

void dense::thread_dense_weights_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        dense_weights_ce0 = ap_const_logic_1;
    } else {
        dense_weights_ce0 = ap_const_logic_0;
    }
}

void dense::thread_f_fu_437_p2() {
    f_fu_437_p2 = (!select_ln39_reg_472.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(select_ln39_reg_472.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void dense::thread_flat_array_address0() {
    flat_array_address0 =  (sc_lv<11>) (zext_ln39_3_fu_373_p1.read());
}

void dense::thread_flat_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        flat_array_ce0 = ap_const_logic_1;
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void dense::thread_grp_fu_284_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        grp_fu_284_p0 = reg_304.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_284_p0 = reg_322.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_284_p0 = select_ln35_reg_505.read();
    } else {
        grp_fu_284_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_grp_fu_284_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()))) {
        grp_fu_284_p1 = reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_284_p1 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_284_p1 = tmp_reg_510.read();
    } else {
        grp_fu_284_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void dense::thread_icmp_ln16_fu_446_p2() {
    icmp_ln16_fu_446_p2 = (!j_0_i_reg_273.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_273.read() == ap_const_lv4_A);
}

void dense::thread_icmp_ln29_fu_329_p2() {
    icmp_ln29_fu_329_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_232_p4.read().is_01() || !ap_const_lv14_3E80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_232_p4.read() == ap_const_lv14_3E80);
}

void dense::thread_icmp_ln33_fu_347_p2() {
    icmp_ln33_fu_347_p2 = (!ap_phi_mux_f_0_phi_fu_266_p4.read().is_01() || !ap_const_lv11_640.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_f_0_phi_fu_266_p4.read() == ap_const_lv11_640);
}

void dense::thread_icmp_ln35_fu_419_p2() {
    icmp_ln35_fu_419_p2 = (!select_ln39_reg_472.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(select_ln39_reg_472.read() == ap_const_lv11_0);
}

void dense::thread_icmp_ln41_fu_432_p2() {
    icmp_ln41_fu_432_p2 = (!select_ln39_reg_472.read().is_01() || !ap_const_lv11_63F.is_01())? sc_lv<1>(): sc_lv<1>(select_ln39_reg_472.read() == ap_const_lv11_63F);
}

void dense::thread_j_fu_452_p2() {
    j_fu_452_p2 = (!j_0_i_reg_273.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_0_i_reg_273.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void dense::thread_prediction_address0() {
    prediction_address0 =  (sc_lv<4>) (zext_ln18_reg_583_pp1_iter17_reg.read());
}

void dense::thread_prediction_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()))) {
        prediction_ce0 = ap_const_logic_1;
    } else {
        prediction_ce0 = ap_const_logic_0;
    }
}

void dense::thread_prediction_d0() {
    prediction_d0 = grp_fu_293_p2.read();
}

void dense::thread_prediction_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln16_reg_574_pp1_iter17_reg.read()))) {
        prediction_we0 = ap_const_logic_1;
    } else {
        prediction_we0 = ap_const_logic_0;
    }
}

void dense::thread_select_ln35_fu_424_p3() {
    select_ln35_fu_424_p3 = (!icmp_ln35_fu_419_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln35_fu_419_p2.read()[0].to_bool())? ap_const_lv32_0: ap_phi_mux_w_sum_1_phi_fu_254_p4.read());
}

void dense::thread_select_ln39_1_fu_361_p3() {
    select_ln39_1_fu_361_p3 = (!icmp_ln33_fu_347_p2.read()[0].is_01())? sc_lv<4>(): ((icmp_ln33_fu_347_p2.read()[0].to_bool())? d_fu_341_p2.read(): ap_phi_mux_d_0_phi_fu_243_p4.read());
}

void dense::thread_select_ln39_fu_353_p3() {
    select_ln39_fu_353_p3 = (!icmp_ln33_fu_347_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln33_fu_347_p2.read()[0].to_bool())? ap_const_lv11_0: ap_phi_mux_f_0_phi_fu_266_p4.read());
}

void dense::thread_tmp_2_fu_390_p3() {
    tmp_2_fu_390_p3 = esl_concat<11,1>(select_ln39_fu_353_p3.read(), ap_const_lv1_0);
}

void dense::thread_tmp_s_fu_378_p3() {
    tmp_s_fu_378_p3 = esl_concat<11,3>(select_ln39_fu_353_p3.read(), ap_const_lv3_0);
}

void dense::thread_zext_ln18_fu_458_p1() {
    zext_ln18_fu_458_p1 = esl_zext<64,4>(j_0_i_reg_273.read());
}

void dense::thread_zext_ln34_fu_369_p1() {
    zext_ln34_fu_369_p1 = esl_zext<15,4>(select_ln39_1_fu_361_p3.read());
}

void dense::thread_zext_ln39_3_fu_373_p1() {
    zext_ln39_3_fu_373_p1 = esl_zext<64,11>(select_ln39_fu_353_p3.read());
}

void dense::thread_zext_ln39_6_fu_386_p1() {
    zext_ln39_6_fu_386_p1 = esl_zext<15,14>(tmp_s_fu_378_p3.read());
}

void dense::thread_zext_ln39_7_fu_398_p1() {
    zext_ln39_7_fu_398_p1 = esl_zext<15,12>(tmp_2_fu_390_p3.read());
}

void dense::thread_zext_ln39_8_fu_414_p1() {
    zext_ln39_8_fu_414_p1 = esl_zext<64,15>(add_ln39_4_fu_408_p2.read());
}

void dense::thread_zext_ln39_fu_442_p1() {
    zext_ln39_fu_442_p1 = esl_zext<64,4>(select_ln39_1_reg_479_pp0_iter1_reg.read());
}

void dense::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_329_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln29_fu_329_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state58;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state59;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state60;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 36028797018963968 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter17.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln16_fu_446_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter18.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter17.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln16_fu_446_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state80;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 72057594037927936 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<57>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

