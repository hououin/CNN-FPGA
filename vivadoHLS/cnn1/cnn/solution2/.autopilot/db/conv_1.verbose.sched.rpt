

================================================================
== Vivado HLS Report for 'conv_1'
================================================================
* Date:           Tue Jul 11 11:48:00 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        cnn
* Solution:       solution2
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.666 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  Latency (cycles) |   Latency (absolute)  |      Interval     | Pipeline|
    |   min   |   max   |    min    |    max    |   min   |   max   |   Type  |
    +---------+---------+-----------+-----------+---------+---------+---------+
    |  1946887|  1946887| 19.469 ms | 19.469 ms |  1946887|  1946887|   none  |
    +---------+---------+-----------+-----------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                                               |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |                   Loop Name                   |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-----------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- Row_Loop_Filter1_Loop_W_Row_Loop_W_Col_Loop  |  1946885|  1946885|        16|         10|          1|  194688|    yes   |
        +-----------------------------------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 10, depth = 16


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 18
* Pipeline : 1
  Pipeline-0 : II = 10, D = 16, States = { 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 18 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 2 
18 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.23>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%w_sum_4 = alloca float"   --->   Operation 19 'alloca' 'w_sum_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.23ns)   --->   "store float 0.000000e+00, float* %w_sum_4" [conv_1.cpp:9]   --->   Operation 20 'store' <Predicate = true> <Delay = 1.23>
ST_1 : Operation 21 [1/1] (1.18ns)   --->   "br label %1" [conv_1.cpp:9]   --->   Operation 21 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 3.95>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%indvar_flatten114 = phi i18 [ 0, %0 ], [ %add_ln9, %W_Col_Loop_end ]" [conv_1.cpp:9]   --->   Operation 22 'phi' 'indvar_flatten114' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%r_0 = phi i5 [ 0, %0 ], [ %select_ln39_8, %W_Col_Loop_end ]" [conv_1.cpp:39]   --->   Operation 23 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvar_flatten64 = phi i14 [ 0, %0 ], [ %select_ln12, %W_Col_Loop_end ]" [conv_1.cpp:12]   --->   Operation 24 'phi' 'indvar_flatten64' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%c_0 = phi i5 [ 0, %0 ], [ %select_ln39_11, %W_Col_Loop_end ]" [conv_1.cpp:39]   --->   Operation 25 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%indvar_flatten25 = phi i10 [ 0, %0 ], [ %select_ln15, %W_Col_Loop_end ]" [conv_1.cpp:15]   --->   Operation 26 'phi' 'indvar_flatten25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %select_ln31_4, %W_Col_Loop_end ]" [conv_1.cpp:31]   --->   Operation 27 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %select_ln19_18, %W_Col_Loop_end ]" [conv_1.cpp:19]   --->   Operation 28 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%wr_0 = phi i2 [ 0, %0 ], [ %select_ln19_15, %W_Col_Loop_end ]" [conv_1.cpp:19]   --->   Operation 29 'phi' 'wr_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i6 %f_0 to i64" [conv_1.cpp:31]   --->   Operation 30 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%conv_1_bias_addr = getelementptr inbounds [32 x float]* @conv_1_bias, i64 0, i64 %zext_ln31" [conv_1.cpp:35]   --->   Operation 31 'getelementptr' 'conv_1_bias_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [2/2] (2.66ns)   --->   "%conv_1_bias_load = load float* %conv_1_bias_addr, align 4" [conv_1.cpp:35]   --->   Operation 32 'load' 'conv_1_bias_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i2 %wr_0 to i5" [conv_1.cpp:19]   --->   Operation 33 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.36ns)   --->   "%add_ln31 = add i5 %zext_ln19, %r_0" [conv_1.cpp:31]   --->   Operation 34 'add' 'add_ln31' <Predicate = true> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.44ns)   --->   "%icmp_ln9 = icmp eq i18 %indvar_flatten114, -67456" [conv_1.cpp:9]   --->   Operation 35 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.36ns)   --->   "%r = add i5 %r_0, 1" [conv_1.cpp:9]   --->   Operation 36 'add' 'r' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.34ns)   --->   "%icmp_ln12 = icmp eq i14 %indvar_flatten64, 7488" [conv_1.cpp:12]   --->   Operation 37 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln9)> <Delay = 1.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.79ns)   --->   "%select_ln39 = select i1 %icmp_ln12, i5 0, i5 %c_0" [conv_1.cpp:39]   --->   Operation 38 'select' 'select_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.61ns)   --->   "%xor_ln39 = xor i1 %icmp_ln12, true" [conv_1.cpp:39]   --->   Operation 39 'xor' 'xor_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.61ns)   --->   "%icmp_ln3331 = icmp eq i2 %wr_0, -2" [conv_1.cpp:33]   --->   Operation 40 'icmp' 'icmp_ln3331' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.12ns)   --->   "%icmp_ln19 = icmp eq i4 %indvar_flatten, -7" [conv_1.cpp:19]   --->   Operation 41 'icmp' 'icmp_ln19' <Predicate = (!icmp_ln9)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node and_ln39_12)   --->   "%and_ln39_8 = and i1 %icmp_ln19, %xor_ln39" [conv_1.cpp:39]   --->   Operation 42 'and' 'and_ln39_8' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.19ns)   --->   "%icmp_ln15 = icmp eq i10 %indvar_flatten25, 288" [conv_1.cpp:15]   --->   Operation 43 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln9)> <Delay = 1.19> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.61ns)   --->   "%and_ln39_9 = and i1 %icmp_ln15, %xor_ln39" [conv_1.cpp:39]   --->   Operation 44 'and' 'and_ln39_9' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.61ns)   --->   "%or_ln39 = or i1 %and_ln39_9, %icmp_ln12" [conv_1.cpp:39]   --->   Operation 45 'or' 'or_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.75ns)   --->   "%select_ln39_10 = select i1 %or_ln39, i6 0, i6 %f_0" [conv_1.cpp:39]   --->   Operation 46 'select' 'select_ln39_10' <Predicate = (!icmp_ln9)> <Delay = 0.75> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln39_2)   --->   "%xor_ln39_2 = xor i1 %icmp_ln15, true" [conv_1.cpp:39]   --->   Operation 47 'xor' 'xor_ln39_2' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln39_2 = or i1 %icmp_ln12, %xor_ln39_2" [conv_1.cpp:39]   --->   Operation 48 'or' 'or_ln39_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln39_12 = and i1 %and_ln39_8, %or_ln39_2" [conv_1.cpp:39]   --->   Operation 49 'and' 'and_ln39_12' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node or_ln31_64)   --->   "%or_ln31 = or i1 %and_ln39_12, %and_ln39_9" [conv_1.cpp:31]   --->   Operation 50 'or' 'or_ln31' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln31_64 = or i1 %or_ln31, %icmp_ln12" [conv_1.cpp:31]   --->   Operation 51 'or' 'or_ln31_64' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.62ns)   --->   "%select_ln31 = select i1 %or_ln31_64, i2 0, i2 %wr_0" [conv_1.cpp:31]   --->   Operation 52 'select' 'select_ln31' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.36ns)   --->   "%add_ln19 = add i4 %indvar_flatten, 1" [conv_1.cpp:19]   --->   Operation 53 'add' 'add_ln19' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.44ns)   --->   "%add_ln15_5 = add i10 %indvar_flatten25, 1" [conv_1.cpp:15]   --->   Operation 54 'add' 'add_ln15_5' <Predicate = (!icmp_ln9)> <Delay = 1.44> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.54ns)   --->   "%add_ln12_4 = add i14 %indvar_flatten64, 1" [conv_1.cpp:12]   --->   Operation 55 'add' 'add_ln12_4' <Predicate = (!icmp_ln9)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.66>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%wc_0 = phi i2 [ 0, %0 ], [ %wc, %W_Col_Loop_end ]"   --->   Operation 56 'phi' 'wc_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/2] (2.66ns)   --->   "%conv_1_bias_load = load float* %conv_1_bias_addr, align 4" [conv_1.cpp:35]   --->   Operation 57 'load' 'conv_1_bias_load' <Predicate = true> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_3 : Operation 58 [1/1] (1.59ns)   --->   "%add_ln9 = add i18 %indvar_flatten114, 1" [conv_1.cpp:9]   --->   Operation 58 'add' 'add_ln9' <Predicate = true> <Delay = 1.59> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %3, label %W_Col_Loop_begin" [conv_1.cpp:9]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.79ns)   --->   "%select_ln39_8 = select i1 %icmp_ln12, i5 %r, i5 %r_0" [conv_1.cpp:39]   --->   Operation 60 'select' 'select_ln39_8' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i5 %select_ln39_8 to i10" [conv_1.cpp:39]   --->   Operation 61 'zext' 'zext_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (2.84ns) (grouped into DSP with root node add_ln39)   --->   "%mul_ln39 = mul i10 %zext_ln39, 26" [conv_1.cpp:39]   --->   Operation 62 'mul' 'mul_ln39' <Predicate = (!icmp_ln9)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln39_13)   --->   "%select_ln39_9 = select i1 %icmp_ln12, i5 %r, i5 %add_ln31" [conv_1.cpp:39]   --->   Operation 63 'select' 'select_ln39_9' <Predicate = (!icmp_ln9 & !and_ln39_9 & !and_ln39_12)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_17)   --->   "%and_ln39 = and i1 %icmp_ln3331, %xor_ln39" [conv_1.cpp:39]   --->   Operation 64 'and' 'and_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [1/1] (0.61ns)   --->   "%icmp_ln22 = icmp eq i2 %wc_0, -1" [conv_1.cpp:22]   --->   Operation 65 'icmp' 'icmp_ln22' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%and_ln39_7 = and i1 %icmp_ln22, %xor_ln39" [conv_1.cpp:39]   --->   Operation 66 'and' 'and_ln39_7' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (1.36ns)   --->   "%c = add i5 %select_ln39, 1" [conv_1.cpp:12]   --->   Operation 67 'add' 'c' <Predicate = (!icmp_ln9 & and_ln39_9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.79ns)   --->   "%select_ln39_11 = select i1 %and_ln39_9, i5 %c, i5 %select_ln39" [conv_1.cpp:39]   --->   Operation 68 'select' 'select_ln39_11' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln39_11 = zext i5 %select_ln39_11 to i10" [conv_1.cpp:39]   --->   Operation 69 'zext' 'zext_ln39_11' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (2.75ns) (root node of the DSP)   --->   "%add_ln39 = add i10 %zext_ln39_11, %mul_ln39" [conv_1.cpp:39]   --->   Operation 70 'add' 'add_ln39' <Predicate = (!icmp_ln9)> <Delay = 2.75> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln39, i5 0)" [conv_1.cpp:39]   --->   Operation 71 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln39_12 = zext i15 %tmp to i16" [conv_1.cpp:39]   --->   Operation 72 'zext' 'zext_ln39_12' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.79ns) (out node of the LUT)   --->   "%select_ln39_13 = select i1 %and_ln39_9, i5 %select_ln39_8, i5 %select_ln39_9" [conv_1.cpp:39]   --->   Operation 73 'select' 'select_ln39_13' <Predicate = (!icmp_ln9 & !and_ln39_12)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_17)   --->   "%and_ln39_10 = and i1 %and_ln39, %or_ln39_2" [conv_1.cpp:39]   --->   Operation 74 'and' 'and_ln39_10' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node and_ln31_2)   --->   "%and_ln39_11 = and i1 %and_ln39_7, %or_ln39_2" [conv_1.cpp:39]   --->   Operation 75 'and' 'and_ln39_11' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.37ns)   --->   "%f = add i6 %select_ln39_10, 1" [conv_1.cpp:15]   --->   Operation 76 'add' 'f' <Predicate = (!icmp_ln9)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln31_10 = zext i6 %f to i64" [conv_1.cpp:31]   --->   Operation 77 'zext' 'zext_ln31_10' <Predicate = (!icmp_ln9 & and_ln39_12)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.75ns)   --->   "%select_ln31_4 = select i1 %and_ln39_12, i6 %f, i6 %select_ln39_10" [conv_1.cpp:31]   --->   Operation 78 'select' 'select_ln31_4' <Predicate = (!icmp_ln9)> <Delay = 0.75> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln31_42 = zext i6 %select_ln31_4 to i10" [conv_1.cpp:31]   --->   Operation 79 'zext' 'zext_ln31_42' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln31_43 = zext i6 %select_ln31_4 to i16" [conv_1.cpp:31]   --->   Operation 80 'zext' 'zext_ln31_43' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (1.56ns)   --->   "%add_ln39_6 = add i16 %zext_ln31_43, %zext_ln39_12" [conv_1.cpp:39]   --->   Operation 81 'add' 'add_ln39_6' <Predicate = (!icmp_ln9)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln39_13 = zext i16 %add_ln39_6 to i64" [conv_1.cpp:39]   --->   Operation 82 'zext' 'zext_ln39_13' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%conv_out_addr = getelementptr [21632 x float]* %conv_out, i64 0, i64 %zext_ln39_13" [conv_1.cpp:39]   --->   Operation 83 'getelementptr' 'conv_out_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%conv_1_bias_addr_1 = getelementptr inbounds [32 x float]* @conv_1_bias, i64 0, i64 %zext_ln31_10" [conv_1.cpp:35]   --->   Operation 84 'getelementptr' 'conv_1_bias_addr_1' <Predicate = (!icmp_ln9 & and_ln39_12)> <Delay = 0.00>
ST_3 : Operation 85 [2/2] (2.66ns)   --->   "%conv_1_bias_load_1 = load float* %conv_1_bias_addr_1, align 4" [conv_1.cpp:35]   --->   Operation 85 'load' 'conv_1_bias_load_1' <Predicate = (!icmp_ln9 & and_ln39_12)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_16)   --->   "%select_ln31_6 = select i1 %and_ln39_12, i5 %select_ln39_8, i5 %select_ln39_13" [conv_1.cpp:31]   --->   Operation 86 'select' 'select_ln31_6' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.61ns)   --->   "%xor_ln31 = xor i1 %and_ln39_12, true" [conv_1.cpp:31]   --->   Operation 87 'xor' 'xor_ln31' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_17)   --->   "%and_ln31 = and i1 %and_ln39_10, %xor_ln31" [conv_1.cpp:31]   --->   Operation 88 'and' 'and_ln31' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln31_2 = and i1 %and_ln39_11, %xor_ln31" [conv_1.cpp:31]   --->   Operation 89 'and' 'and_ln31_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (1.00ns)   --->   "%wr = add i2 %select_ln31, 1" [conv_1.cpp:19]   --->   Operation 90 'add' 'wr' <Predicate = (!icmp_ln9)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node select_ln19)   --->   "%or_ln19 = or i1 %and_ln31_2, %and_ln39_12" [conv_1.cpp:19]   --->   Operation 91 'or' 'or_ln19' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node select_ln19)   --->   "%or_ln19_4 = or i1 %or_ln19, %or_ln39" [conv_1.cpp:19]   --->   Operation 92 'or' 'or_ln19_4' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln19 = select i1 %or_ln19_4, i2 0, i2 %wc_0" [conv_1.cpp:19]   --->   Operation 93 'select' 'select_ln19' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln19_4 = zext i2 %wr to i5" [conv_1.cpp:19]   --->   Operation 94 'zext' 'zext_ln19_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.62ns)   --->   "%select_ln19_15 = select i1 %and_ln31_2, i2 %wr, i2 %select_ln31" [conv_1.cpp:19]   --->   Operation 95 'select' 'select_ln19_15' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln31_44 = zext i2 %select_ln19_15 to i5" [conv_1.cpp:31]   --->   Operation 96 'zext' 'zext_ln31_44' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_33 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %select_ln19_15, i2 0)" [conv_1.cpp:31]   --->   Operation 97 'bitconcatenate' 'tmp_33' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln31_45 = zext i4 %tmp_33 to i5" [conv_1.cpp:31]   --->   Operation 98 'zext' 'zext_ln31_45' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln31 = sub i5 %zext_ln31_45, %zext_ln31_44" [conv_1.cpp:31]   --->   Operation 99 'sub' 'sub_ln31' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 100 [1/1] (1.36ns)   --->   "%add_ln31_6 = add i5 %select_ln39_8, %zext_ln19_4" [conv_1.cpp:31]   --->   Operation 100 'add' 'add_ln31_6' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.79ns) (out node of the LUT)   --->   "%select_ln19_16 = select i1 %and_ln31_2, i5 %add_ln31_6, i5 %select_ln31_6" [conv_1.cpp:19]   --->   Operation 101 'select' 'select_ln19_16' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_34 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %select_ln19_16, i5 0)" [conv_1.cpp:31]   --->   Operation 102 'bitconcatenate' 'tmp_34' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln31_46 = zext i10 %tmp_34 to i11" [conv_1.cpp:31]   --->   Operation 103 'zext' 'zext_ln31_46' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%tmp_35 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %select_ln19_16, i2 0)" [conv_1.cpp:31]   --->   Operation 104 'bitconcatenate' 'tmp_35' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln31_47 = zext i7 %tmp_35 to i11" [conv_1.cpp:31]   --->   Operation 105 'zext' 'zext_ln31_47' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln31_1 = sub i11 %zext_ln31_46, %zext_ln31_47" [conv_1.cpp:31]   --->   Operation 106 'sub' 'sub_ln31_1' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 107 [1/1] (0.61ns)   --->   "%icmp_ln33 = icmp eq i2 %wr, -2" [conv_1.cpp:33]   --->   Operation 107 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln19_17 = select i1 %and_ln31_2, i1 %icmp_ln33, i1 %and_ln31" [conv_1.cpp:19]   --->   Operation 108 'select' 'select_ln19_17' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln22 = zext i2 %select_ln19 to i5" [conv_1.cpp:22]   --->   Operation 109 'zext' 'zext_ln22' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln31_7 = zext i2 %select_ln19 to i5" [conv_1.cpp:31]   --->   Operation 110 'zext' 'zext_ln31_7' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (2.19ns) (root node of TernaryAdder)   --->   "%add_ln31_7 = add i5 %zext_ln31_7, %sub_ln31" [conv_1.cpp:31]   --->   Operation 111 'add' 'add_ln31_7' <Predicate = (!icmp_ln9)> <Delay = 2.19> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_45_cast = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln31_7, i5 0)" [conv_1.cpp:31]   --->   Operation 112 'bitconcatenate' 'tmp_45_cast' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (1.44ns)   --->   "%add_ln31_8 = add i10 %zext_ln31_42, %tmp_45_cast" [conv_1.cpp:31]   --->   Operation 113 'add' 'add_ln31_8' <Predicate = (!icmp_ln9)> <Delay = 1.44> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln31_48 = zext i10 %add_ln31_8 to i64" [conv_1.cpp:31]   --->   Operation 114 'zext' 'zext_ln31_48' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%conv_1_weights_0_add = getelementptr [288 x float]* @conv_1_weights_0, i64 0, i64 %zext_ln31_48" [conv_1.cpp:31]   --->   Operation 115 'getelementptr' 'conv_1_weights_0_add' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (1.36ns)   --->   "%add_ln31_2 = add i5 %select_ln39_11, %zext_ln22" [conv_1.cpp:31]   --->   Operation 116 'add' 'add_ln31_2' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln31_49 = zext i5 %add_ln31_2 to i11" [conv_1.cpp:31]   --->   Operation 117 'zext' 'zext_ln31_49' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (2.46ns) (root node of TernaryAdder)   --->   "%add_ln31_9 = add i11 %zext_ln31_49, %sub_ln31_1" [conv_1.cpp:31]   --->   Operation 118 'add' 'add_ln31_9' <Predicate = (!icmp_ln9)> <Delay = 2.46> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.23> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%zext_ln31_50 = zext i11 %add_ln31_9 to i64" [conv_1.cpp:31]   --->   Operation 119 'zext' 'zext_ln31_50' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%input_addr = getelementptr [784 x float]* %input_r, i64 0, i64 %zext_ln31_50" [conv_1.cpp:31]   --->   Operation 120 'getelementptr' 'input_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.61ns)   --->   "%icmp_ln33_2 = icmp eq i2 %select_ln19, -2" [conv_1.cpp:33]   --->   Operation 121 'icmp' 'icmp_ln33_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 122 [2/2] (2.66ns)   --->   "%conv_1_weights_0_loa = load float* %conv_1_weights_0_add, align 4" [conv_1.cpp:31]   --->   Operation 122 'load' 'conv_1_weights_0_loa' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_3 : Operation 123 [2/2] (2.66ns)   --->   "%input_load = load float* %input_addr, align 4" [conv_1.cpp:31]   --->   Operation 123 'load' 'input_load' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_3 : Operation 124 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln33 = and i1 %select_ln19_17, %icmp_ln33_2" [conv_1.cpp:33]   --->   Operation 124 'and' 'and_ln33' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 125 [1/1] (0.00ns)   --->   "br i1 %and_ln33, label %2, label %W_Col_Loop_begin.W_Col_Loop_end_crit_edge" [conv_1.cpp:33]   --->   Operation 125 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.27>
ST_4 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node select_ln31_5)   --->   "%select_ln39_12 = select i1 %or_ln39, float 0xBFA606D500000000, float %conv_1_bias_load" [conv_1.cpp:39]   --->   Operation 126 'select' 'select_ln39_12' <Predicate = (!icmp_ln9 & !and_ln39_12)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 127 [1/2] (2.66ns)   --->   "%conv_1_bias_load_1 = load float* %conv_1_bias_addr_1, align 4" [conv_1.cpp:35]   --->   Operation 127 'load' 'conv_1_bias_load_1' <Predicate = (!icmp_ln9 & and_ln39_12)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_4 : Operation 128 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln31_5 = select i1 %and_ln39_12, float %conv_1_bias_load_1, float %select_ln39_12" [conv_1.cpp:31]   --->   Operation 128 'select' 'select_ln31_5' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 129 [1/2] (2.66ns)   --->   "%conv_1_weights_0_loa = load float* %conv_1_weights_0_add, align 4" [conv_1.cpp:31]   --->   Operation 129 'load' 'conv_1_weights_0_loa' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 288> <ROM>
ST_4 : Operation 130 [1/2] (2.66ns)   --->   "%input_load = load float* %input_addr, align 4" [conv_1.cpp:31]   --->   Operation 130 'load' 'input_load' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>

State 5 <SV = 4> <Delay = 8.44>
ST_5 : Operation 131 [3/3] (8.44ns)   --->   "%tmp2 = fmul float %conv_1_weights_0_loa, %input_load" [conv_1.cpp:31]   --->   Operation 131 'fmul' 'tmp2' <Predicate = (!icmp_ln9)> <Delay = 8.44> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.44> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.44>
ST_6 : Operation 132 [2/3] (8.44ns)   --->   "%tmp2 = fmul float %conv_1_weights_0_loa, %input_load" [conv_1.cpp:31]   --->   Operation 132 'fmul' 'tmp2' <Predicate = (!icmp_ln9)> <Delay = 8.44> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.44> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.44>
ST_7 : Operation 133 [1/1] (0.00ns)   --->   "%w_sum_4_load = load float* %w_sum_4" [conv_1.cpp:27]   --->   Operation 133 'load' 'w_sum_4_load' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_7 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln27)   --->   "%or_ln27 = or i2 %select_ln19, %select_ln19_15" [conv_1.cpp:27]   --->   Operation 134 'or' 'or_ln27' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 135 [1/1] (0.61ns) (out node of the LUT)   --->   "%icmp_ln27 = icmp eq i2 %or_ln27, 0" [conv_1.cpp:27]   --->   Operation 135 'icmp' 'icmp_ln27' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 136 [1/1] (0.61ns)   --->   "%select_ln27 = select i1 %icmp_ln27, float 0.000000e+00, float %w_sum_4_load" [conv_1.cpp:27]   --->   Operation 136 'select' 'select_ln27' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 137 [1/3] (8.44ns)   --->   "%tmp2 = fmul float %conv_1_weights_0_loa, %input_load" [conv_1.cpp:31]   --->   Operation 137 'fmul' 'tmp2' <Predicate = (!icmp_ln9)> <Delay = 8.44> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.44> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 138 [1/1] (1.00ns)   --->   "%wc = add i2 %select_ln19, 1" [conv_1.cpp:22]   --->   Operation 138 'add' 'wc' <Predicate = (!icmp_ln9)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 8.21>
ST_8 : Operation 139 [4/4] (8.21ns)   --->   "%w_sum_06 = fadd float %select_ln27, %tmp2" [conv_1.cpp:31]   --->   Operation 139 'fadd' 'w_sum_06' <Predicate = (!icmp_ln9)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.21>
ST_9 : Operation 140 [3/4] (8.21ns)   --->   "%w_sum_06 = fadd float %select_ln27, %tmp2" [conv_1.cpp:31]   --->   Operation 140 'fadd' 'w_sum_06' <Predicate = (!icmp_ln9)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 8.21>
ST_10 : Operation 141 [2/4] (8.21ns)   --->   "%w_sum_06 = fadd float %select_ln27, %tmp2" [conv_1.cpp:31]   --->   Operation 141 'fadd' 'w_sum_06' <Predicate = (!icmp_ln9)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 8.21>
ST_11 : Operation 142 [1/4] (8.21ns)   --->   "%w_sum_06 = fadd float %select_ln27, %tmp2" [conv_1.cpp:31]   --->   Operation 142 'fadd' 'w_sum_06' <Predicate = (!icmp_ln9)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 143 [1/1] (0.65ns)   --->   "%select_ln19_18 = select i1 %or_ln31_64, i4 1, i4 %add_ln19" [conv_1.cpp:19]   --->   Operation 143 'select' 'select_ln19_18' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 144 [1/1] (0.66ns)   --->   "%select_ln15 = select i1 %or_ln39, i10 1, i10 %add_ln15_5" [conv_1.cpp:15]   --->   Operation 144 'select' 'select_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 145 [1/1] (0.84ns)   --->   "%select_ln12 = select i1 %icmp_ln12, i14 1, i14 %add_ln12_4" [conv_1.cpp:12]   --->   Operation 145 'select' 'select_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.84> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 12 <SV = 11> <Delay = 8.21>
ST_12 : Operation 146 [1/1] (1.23ns)   --->   "store float %w_sum_06, float* %w_sum_4" [conv_1.cpp:33]   --->   Operation 146 'store' <Predicate = (!and_ln33)> <Delay = 1.23>
ST_12 : Operation 147 [1/1] (0.00ns)   --->   "br label %W_Col_Loop_end" [conv_1.cpp:33]   --->   Operation 147 'br' <Predicate = (!and_ln33)> <Delay = 0.00>
ST_12 : Operation 148 [4/4] (8.21ns)   --->   "%w_sum_9 = fadd float %w_sum_06, %select_ln31_5" [conv_1.cpp:35]   --->   Operation 148 'fadd' 'w_sum_9' <Predicate = (and_ln33)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 8.21>
ST_13 : Operation 149 [3/4] (8.21ns)   --->   "%w_sum_9 = fadd float %w_sum_06, %select_ln31_5" [conv_1.cpp:35]   --->   Operation 149 'fadd' 'w_sum_9' <Predicate = (and_ln33)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 8.21>
ST_14 : Operation 150 [2/4] (8.21ns)   --->   "%w_sum_9 = fadd float %w_sum_06, %select_ln31_5" [conv_1.cpp:35]   --->   Operation 150 'fadd' 'w_sum_9' <Predicate = (and_ln33)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 8.21>
ST_15 : Operation 151 [1/4] (8.21ns)   --->   "%w_sum_9 = fadd float %w_sum_06, %select_ln31_5" [conv_1.cpp:35]   --->   Operation 151 'fadd' 'w_sum_9' <Predicate = (and_ln33)> <Delay = 8.21> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.21> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.78>
ST_16 : Operation 152 [2/2] (3.78ns)   --->   "%tmp_37 = fcmp ogt float %w_sum_9, 0.000000e+00" [conv_1.cpp:38]   --->   Operation 152 'fcmp' 'tmp_37' <Predicate = (and_ln33)> <Delay = 3.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 153 [1/1] (1.23ns)   --->   "store float %w_sum_9, float* %w_sum_4" [conv_1.cpp:42]   --->   Operation 153 'store' <Predicate = (and_ln33)> <Delay = 1.23>

State 17 <SV = 16> <Delay = 7.06>
ST_17 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([44 x i8]* @Row_Loop_Filter1_Loo)"   --->   Operation 154 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 155 [1/1] (0.00ns)   --->   "%empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 194688, i64 194688, i64 194688)"   --->   Operation 155 'speclooptripcount' 'empty_13' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([31 x i8]* @Col_Loop_W_Row_Loop_s)"   --->   Operation 156 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([35 x i8]* @Filter1_Loop_W_Row_L)"   --->   Operation 157 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @W_Row_Loop_W_Col_Loo)"   --->   Operation 158 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str4) nounwind" [conv_1.cpp:23]   --->   Operation 159 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str4)" [conv_1.cpp:23]   --->   Operation 160 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str5) nounwind" [conv_1.cpp:24]   --->   Operation 161 'specpipeline' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 162 [1/1] (0.00ns)   --->   "%bitcast_ln38 = bitcast float %w_sum_9 to i32" [conv_1.cpp:38]   --->   Operation 162 'bitcast' 'bitcast_ln38' <Predicate = (and_ln33)> <Delay = 0.00>
ST_17 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_36 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln38, i32 23, i32 30)" [conv_1.cpp:38]   --->   Operation 163 'partselect' 'tmp_36' <Predicate = (and_ln33)> <Delay = 0.00>
ST_17 : Operation 164 [1/1] (0.00ns)   --->   "%trunc_ln38 = trunc i32 %bitcast_ln38 to i23" [conv_1.cpp:38]   --->   Operation 164 'trunc' 'trunc_ln38' <Predicate = (and_ln33)> <Delay = 0.00>
ST_17 : Operation 165 [1/1] (1.12ns)   --->   "%icmp_ln38 = icmp ne i8 %tmp_36, -1" [conv_1.cpp:38]   --->   Operation 165 'icmp' 'icmp_ln38' <Predicate = (and_ln33)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 166 [1/1] (1.48ns)   --->   "%icmp_ln38_2 = icmp eq i23 %trunc_ln38, 0" [conv_1.cpp:38]   --->   Operation 166 'icmp' 'icmp_ln38_2' <Predicate = (and_ln33)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node select_ln38)   --->   "%or_ln38 = or i1 %icmp_ln38_2, %icmp_ln38" [conv_1.cpp:38]   --->   Operation 167 'or' 'or_ln38' <Predicate = (and_ln33)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 168 [1/2] (3.78ns)   --->   "%tmp_37 = fcmp ogt float %w_sum_9, 0.000000e+00" [conv_1.cpp:38]   --->   Operation 168 'fcmp' 'tmp_37' <Predicate = (and_ln33)> <Delay = 3.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node select_ln38)   --->   "%and_ln38 = and i1 %or_ln38, %tmp_37" [conv_1.cpp:38]   --->   Operation 169 'and' 'and_ln38' <Predicate = (and_ln33)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 170 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln38 = select i1 %and_ln38, float %w_sum_9, float 0.000000e+00" [conv_1.cpp:38]   --->   Operation 170 'select' 'select_ln38' <Predicate = (and_ln33)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 171 [1/1] (2.66ns)   --->   "store float %select_ln38, float* %conv_out_addr, align 4" [conv_1.cpp:39]   --->   Operation 171 'store' <Predicate = (and_ln33)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 21632> <RAM>
ST_17 : Operation 172 [1/1] (0.00ns)   --->   "br label %W_Col_Loop_end" [conv_1.cpp:42]   --->   Operation 172 'br' <Predicate = (and_ln33)> <Delay = 0.00>
ST_17 : Operation 173 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str4, i32 %tmp_s)" [conv_1.cpp:44]   --->   Operation 173 'specregionend' 'empty' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_17 : Operation 174 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 174 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>

State 18 <SV = 3> <Delay = 0.00>
ST_18 : Operation 175 [1/1] (0.00ns)   --->   "ret void" [conv_1.cpp:50]   --->   Operation 175 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.24ns
The critical path consists of the following:
	'alloca' operation ('w_sum_4') [7]  (0 ns)
	'store' operation ('store_ln9', conv_1.cpp:9) of constant 0 on local variable 'w_sum_4' [8]  (1.24 ns)

 <State 2>: 3.95ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten64', conv_1.cpp:12) with incoming values : ('select_ln12', conv_1.cpp:12) [13]  (0 ns)
	'icmp' operation ('icmp_ln12', conv_1.cpp:12) [33]  (1.35 ns)
	'xor' operation ('xor_ln39', conv_1.cpp:39) [39]  (0.616 ns)
	'and' operation ('and_ln39_9', conv_1.cpp:39) [47]  (0.616 ns)
	'or' operation ('or_ln39', conv_1.cpp:39) [50]  (0.616 ns)
	'select' operation ('select_ln39_10', conv_1.cpp:39) [51]  (0.757 ns)

 <State 3>: 8.67ns
The critical path consists of the following:
	'add' operation ('c', conv_1.cpp:12) [48]  (1.37 ns)
	'select' operation ('select_ln39_11', conv_1.cpp:39) [52]  (0.795 ns)
	'add' operation ('add_ln31_2', conv_1.cpp:31) [113]  (1.37 ns)
	'add' operation ('add_ln31_9', conv_1.cpp:31) [115]  (2.47 ns)
	'getelementptr' operation ('input_addr', conv_1.cpp:31) [117]  (0 ns)
	'load' operation ('input_load', conv_1.cpp:31) on array 'input_r' [123]  (2.66 ns)

 <State 4>: 3.28ns
The critical path consists of the following:
	'load' operation ('conv_1_bias_load_1', conv_1.cpp:35) on array 'conv_1_bias' [77]  (2.66 ns)
	'select' operation ('select_ln31_5', conv_1.cpp:31) [78]  (0.613 ns)

 <State 5>: 8.44ns
The critical path consists of the following:
	'fmul' operation ('tmp2', conv_1.cpp:31) [124]  (8.44 ns)

 <State 6>: 8.44ns
The critical path consists of the following:
	'fmul' operation ('tmp2', conv_1.cpp:31) [124]  (8.44 ns)

 <State 7>: 8.44ns
The critical path consists of the following:
	'fmul' operation ('tmp2', conv_1.cpp:31) [124]  (8.44 ns)

 <State 8>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_06', conv_1.cpp:31) [125]  (8.22 ns)

 <State 9>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_06', conv_1.cpp:31) [125]  (8.22 ns)

 <State 10>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_06', conv_1.cpp:31) [125]  (8.22 ns)

 <State 11>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_06', conv_1.cpp:31) [125]  (8.22 ns)

 <State 12>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_9', conv_1.cpp:35) [132]  (8.22 ns)

 <State 13>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_9', conv_1.cpp:35) [132]  (8.22 ns)

 <State 14>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_9', conv_1.cpp:35) [132]  (8.22 ns)

 <State 15>: 8.22ns
The critical path consists of the following:
	'fadd' operation ('w_sum_9', conv_1.cpp:35) [132]  (8.22 ns)

 <State 16>: 3.79ns
The critical path consists of the following:
	'fcmp' operation ('tmp_37', conv_1.cpp:38) [139]  (3.79 ns)

 <State 17>: 7.07ns
The critical path consists of the following:
	'fcmp' operation ('tmp_37', conv_1.cpp:38) [139]  (3.79 ns)
	'and' operation ('and_ln38', conv_1.cpp:38) [140]  (0 ns)
	'select' operation ('select_ln38', conv_1.cpp:38) [141]  (0.616 ns)
	'store' operation ('store_ln39', conv_1.cpp:39) of variable 'select_ln38', conv_1.cpp:38 on array 'conv_out' [142]  (2.66 ns)

 <State 18>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
