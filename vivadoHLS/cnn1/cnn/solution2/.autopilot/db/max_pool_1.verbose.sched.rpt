

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Tue Jul 11 11:48:00 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        cnn
* Solution:       solution2
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 9.819 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    21636|    21636| 0.216 ms | 0.216 ms |  21636|  21636|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                                                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |                      Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +----------------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- Filter_Loop_Col_Loop_Pool_Row_Loop_Pool_Col_Loop  |    21634|    21634|         4|          1|          1|  21632|    yes   |
        +----------------------------------------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 7 [1/1] (1.18ns)   --->   "br label %1" [max_pool_1.cpp:9]   --->   Operation 7 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 6.84>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten117 = phi i15 [ 0, %0 ], [ %add_ln9, %Pool_Col_Loop_end ]" [max_pool_1.cpp:9]   --->   Operation 8 'phi' 'indvar_flatten117' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%f_0 = phi i6 [ 0, %0 ], [ %select_ln32_5, %Pool_Col_Loop_end ]" [max_pool_1.cpp:32]   --->   Operation 9 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten63 = phi i10 [ 0, %0 ], [ %select_ln12_10, %Pool_Col_Loop_end ]" [max_pool_1.cpp:12]   --->   Operation 10 'phi' 'indvar_flatten63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%r_0 = phi i4 [ 0, %0 ], [ %select_ln12_7, %Pool_Col_Loop_end ]" [max_pool_1.cpp:12]   --->   Operation 11 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten24 = phi i7 [ 0, %0 ], [ %select_ln15_8, %Pool_Col_Loop_end ]" [max_pool_1.cpp:15]   --->   Operation 12 'phi' 'indvar_flatten24' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%c_0 = phi i4 [ 0, %0 ], [ %select_ln15_6, %Pool_Col_Loop_end ]" [max_pool_1.cpp:15]   --->   Operation 13 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %select_ln19_10, %Pool_Col_Loop_end ]" [max_pool_1.cpp:19]   --->   Operation 14 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%mpr_0 = phi i2 [ 0, %0 ], [ %select_ln19_9, %Pool_Col_Loop_end ]" [max_pool_1.cpp:19]   --->   Operation 15 'phi' 'mpr_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%max_4 = phi float [ 0.000000e+00, %0 ], [ %max_2, %Pool_Col_Loop_end ]"   --->   Operation 16 'phi' 'max_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%mpc_0 = phi i2 [ 0, %0 ], [ %mpc, %Pool_Col_Loop_end ]"   --->   Operation 17 'phi' 'mpc_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r_0, i1 false)" [max_pool_1.cpp:29]   --->   Operation 18 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i2 %mpr_0 to i5" [max_pool_1.cpp:19]   --->   Operation 19 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.36ns)   --->   "%i = add i5 %shl_ln, %zext_ln19" [max_pool_1.cpp:29]   --->   Operation 20 'add' 'i' <Predicate = true> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.38ns)   --->   "%icmp_ln9 = icmp eq i15 %indvar_flatten117, -11136" [max_pool_1.cpp:9]   --->   Operation 21 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 1.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (1.56ns)   --->   "%add_ln9 = add i15 %indvar_flatten117, 1" [max_pool_1.cpp:9]   --->   Operation 22 'add' 'add_ln9' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln9, label %3, label %Pool_Col_Loop_begin" [max_pool_1.cpp:9]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.37ns)   --->   "%f = add i6 1, %f_0" [max_pool_1.cpp:9]   --->   Operation 24 'add' 'f' <Predicate = (!icmp_ln9)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.19ns)   --->   "%icmp_ln12 = icmp eq i10 %indvar_flatten63, -348" [max_pool_1.cpp:12]   --->   Operation 25 'icmp' 'icmp_ln12' <Predicate = (!icmp_ln9)> <Delay = 1.19> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.65ns)   --->   "%select_ln32 = select i1 %icmp_ln12, i4 0, i4 %r_0" [max_pool_1.cpp:32]   --->   Operation 26 'select' 'select_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.75ns)   --->   "%select_ln32_5 = select i1 %icmp_ln12, i6 %f, i6 %f_0" [max_pool_1.cpp:32]   --->   Operation 27 'select' 'select_ln32_5' <Predicate = (!icmp_ln9)> <Delay = 0.75> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node select_ln12_6)   --->   "%select_ln32_6 = select i1 %icmp_ln12, i5 0, i5 %shl_ln" [max_pool_1.cpp:32]   --->   Operation 28 'select' 'select_ln32_6' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.61ns)   --->   "%xor_ln32 = xor i1 %icmp_ln12, true" [max_pool_1.cpp:32]   --->   Operation 29 'xor' 'xor_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_6)   --->   "%trunc_ln19 = trunc i2 %mpr_0 to i1" [max_pool_1.cpp:19]   --->   Operation 30 'trunc' 'trunc_ln19' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_6)   --->   "%and_ln32_7 = and i1 %trunc_ln19, %xor_ln32" [max_pool_1.cpp:32]   --->   Operation 31 'and' 'and_ln32_7' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_7)   --->   "%select_ln32_7 = select i1 %icmp_ln12, i5 0, i5 %i" [max_pool_1.cpp:32]   --->   Operation 32 'select' 'select_ln32_7' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.61ns)   --->   "%icmp_ln37 = icmp eq i2 %mpr_0, 1" [max_pool_1.cpp:37]   --->   Operation 33 'icmp' 'icmp_ln37' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_8)   --->   "%and_ln32_8 = and i1 %icmp_ln37, %xor_ln32" [max_pool_1.cpp:32]   --->   Operation 34 'and' 'and_ln32_8' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.61ns)   --->   "%icmp_ln22 = icmp eq i2 %mpc_0, -2" [max_pool_1.cpp:22]   --->   Operation 35 'icmp' 'icmp_ln22' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node and_ln15_4)   --->   "%and_ln32_9 = and i1 %icmp_ln22, %xor_ln32" [max_pool_1.cpp:32]   --->   Operation 36 'and' 'and_ln32_9' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (1.12ns)   --->   "%icmp_ln19 = icmp eq i4 %indvar_flatten, 4" [max_pool_1.cpp:19]   --->   Operation 37 'icmp' 'icmp_ln19' <Predicate = (!icmp_ln9)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node and_ln12_6)   --->   "%and_ln32_10 = and i1 %icmp_ln19, %xor_ln32" [max_pool_1.cpp:32]   --->   Operation 38 'and' 'and_ln32_10' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.12ns)   --->   "%icmp_ln15 = icmp eq i7 %indvar_flatten24, 52" [max_pool_1.cpp:15]   --->   Operation 39 'icmp' 'icmp_ln15' <Predicate = (!icmp_ln9)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.61ns)   --->   "%and_ln32_11 = and i1 %icmp_ln15, %xor_ln32" [max_pool_1.cpp:32]   --->   Operation 40 'and' 'and_ln32_11' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.36ns)   --->   "%r = add i4 1, %select_ln32" [max_pool_1.cpp:12]   --->   Operation 41 'add' 'r' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.61ns)   --->   "%or_ln12 = or i1 %and_ln32_11, %icmp_ln12" [max_pool_1.cpp:12]   --->   Operation 42 'or' 'or_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.65ns)   --->   "%select_ln12 = select i1 %or_ln12, i4 0, i4 %c_0" [max_pool_1.cpp:12]   --->   Operation 43 'select' 'select_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%shl_ln29_mid1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %r, i1 false)" [max_pool_1.cpp:29]   --->   Operation 44 'bitconcatenate' 'shl_ln29_mid1' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.79ns) (out node of the LUT)   --->   "%select_ln12_6 = select i1 %and_ln32_11, i5 %shl_ln29_mid1, i5 %select_ln32_6" [max_pool_1.cpp:12]   --->   Operation 45 'select' 'select_ln12_6' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.65ns)   --->   "%select_ln12_7 = select i1 %and_ln32_11, i4 %r, i4 %select_ln32" [max_pool_1.cpp:12]   --->   Operation 46 'select' 'select_ln12_7' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node or_ln12_2)   --->   "%xor_ln12 = xor i1 %icmp_ln15, true" [max_pool_1.cpp:12]   --->   Operation 47 'xor' 'xor_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln12_2 = or i1 %icmp_ln12, %xor_ln12" [max_pool_1.cpp:12]   --->   Operation 48 'or' 'or_ln12_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_6)   --->   "%and_ln12 = and i1 %and_ln32_7, %or_ln12_2" [max_pool_1.cpp:12]   --->   Operation 49 'and' 'and_ln12' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node select_ln15_7)   --->   "%select_ln12_9 = select i1 %and_ln32_11, i5 %shl_ln29_mid1, i5 %select_ln32_7" [max_pool_1.cpp:12]   --->   Operation 50 'select' 'select_ln12_9' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_8)   --->   "%and_ln12_4 = and i1 %and_ln32_8, %or_ln12_2" [max_pool_1.cpp:12]   --->   Operation 51 'and' 'and_ln12_4' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln15_4)   --->   "%and_ln12_5 = and i1 %and_ln32_9, %or_ln12_2" [max_pool_1.cpp:12]   --->   Operation 52 'and' 'and_ln12_5' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln12_6 = and i1 %and_ln32_10, %or_ln12_2" [max_pool_1.cpp:12]   --->   Operation 53 'and' 'and_ln12_6' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.36ns)   --->   "%c = add i4 1, %select_ln12" [max_pool_1.cpp:15]   --->   Operation 54 'add' 'c' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node or_ln15_2)   --->   "%or_ln15 = or i1 %and_ln12_6, %and_ln32_11" [max_pool_1.cpp:15]   --->   Operation 55 'or' 'or_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln15_2 = or i1 %or_ln15, %icmp_ln12" [max_pool_1.cpp:15]   --->   Operation 56 'or' 'or_ln15_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.62ns)   --->   "%select_ln15 = select i1 %or_ln15_2, i2 0, i2 %mpr_0" [max_pool_1.cpp:15]   --->   Operation 57 'select' 'select_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.65ns)   --->   "%select_ln15_6 = select i1 %and_ln12_6, i4 %c, i4 %select_ln12" [max_pool_1.cpp:15]   --->   Operation 58 'select' 'select_ln15_6' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.61ns)   --->   "%xor_ln15 = xor i1 %and_ln12_6, true" [max_pool_1.cpp:15]   --->   Operation 59 'xor' 'xor_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_6)   --->   "%and_ln15 = and i1 %and_ln12, %xor_ln15" [max_pool_1.cpp:15]   --->   Operation 60 'and' 'and_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.79ns) (out node of the LUT)   --->   "%select_ln15_7 = select i1 %and_ln12_6, i5 %select_ln12_6, i5 %select_ln12_9" [max_pool_1.cpp:15]   --->   Operation 61 'select' 'select_ln15_7' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_8)   --->   "%and_ln15_3 = and i1 %and_ln12_4, %xor_ln15" [max_pool_1.cpp:15]   --->   Operation 62 'and' 'and_ln15_3' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln15_4 = and i1 %and_ln12_5, %xor_ln15" [max_pool_1.cpp:15]   --->   Operation 63 'and' 'and_ln15_4' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (1.00ns)   --->   "%mpr = add i2 1, %select_ln15" [max_pool_1.cpp:19]   --->   Operation 64 'add' 'mpr' <Predicate = (!icmp_ln9)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln19)   --->   "%or_ln19 = or i1 %and_ln15_4, %and_ln12_6" [max_pool_1.cpp:19]   --->   Operation 65 'or' 'or_ln19' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln19)   --->   "%or_ln19_2 = or i1 %or_ln19, %or_ln12" [max_pool_1.cpp:19]   --->   Operation 66 'or' 'or_ln19_2' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln19 = select i1 %or_ln19_2, i2 0, i2 %mpc_0" [max_pool_1.cpp:19]   --->   Operation 67 'select' 'select_ln19' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node select_ln19_6)   --->   "%trunc_ln19_2 = trunc i2 %mpr to i1" [max_pool_1.cpp:19]   --->   Operation 68 'trunc' 'trunc_ln19_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln19_6 = select i1 %and_ln15_4, i1 %trunc_ln19_2, i1 %and_ln15" [max_pool_1.cpp:19]   --->   Operation 69 'select' 'select_ln19_6' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln19_2 = zext i2 %mpr to i5" [max_pool_1.cpp:19]   --->   Operation 70 'zext' 'zext_ln19_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.36ns)   --->   "%add_ln29_2 = add i5 %select_ln12_6, %zext_ln19_2" [max_pool_1.cpp:29]   --->   Operation 71 'add' 'add_ln29_2' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.79ns) (out node of the LUT)   --->   "%select_ln19_7 = select i1 %and_ln15_4, i5 %add_ln29_2, i5 %select_ln15_7" [max_pool_1.cpp:19]   --->   Operation 72 'select' 'select_ln19_7' <Predicate = (!icmp_ln9)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.61ns)   --->   "%icmp_ln37_3 = icmp eq i2 %select_ln15, 0" [max_pool_1.cpp:37]   --->   Operation 73 'icmp' 'icmp_ln37_3' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln19_8 = select i1 %and_ln15_4, i1 %icmp_ln37_3, i1 %and_ln15_3" [max_pool_1.cpp:19]   --->   Operation 74 'select' 'select_ln19_8' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.62ns)   --->   "%select_ln19_9 = select i1 %and_ln15_4, i2 %mpr, i2 %select_ln15" [max_pool_1.cpp:19]   --->   Operation 75 'select' 'select_ln19_9' <Predicate = (!icmp_ln9)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.61ns)   --->   "%icmp_ln37_2 = icmp eq i2 %select_ln19, 1" [max_pool_1.cpp:37]   --->   Operation 76 'icmp' 'icmp_ln37_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 77 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln37 = and i1 %select_ln19_8, %icmp_ln37_2" [max_pool_1.cpp:37]   --->   Operation 77 'and' 'and_ln37' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %and_ln37, label %2, label %Pool_Col_Loop_end" [max_pool_1.cpp:37]   --->   Operation 78 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.00ns)   --->   "%mpc = add i2 %select_ln19, 1" [max_pool_1.cpp:22]   --->   Operation 79 'add' 'mpc' <Predicate = (!icmp_ln9)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (1.36ns)   --->   "%add_ln19 = add i4 %indvar_flatten, 1" [max_pool_1.cpp:19]   --->   Operation 80 'add' 'add_ln19' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 81 [1/1] (0.65ns)   --->   "%select_ln19_10 = select i1 %or_ln15_2, i4 1, i4 %add_ln19" [max_pool_1.cpp:19]   --->   Operation 81 'select' 'select_ln19_10' <Predicate = (!icmp_ln9)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 82 [1/1] (1.38ns)   --->   "%add_ln15_2 = add i7 %indvar_flatten24, 1" [max_pool_1.cpp:15]   --->   Operation 82 'add' 'add_ln15_2' <Predicate = (!icmp_ln9)> <Delay = 1.38> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.66ns)   --->   "%select_ln15_8 = select i1 %or_ln12, i7 1, i7 %add_ln15_2" [max_pool_1.cpp:15]   --->   Operation 83 'select' 'select_ln15_8' <Predicate = (!icmp_ln9)> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 84 [1/1] (1.44ns)   --->   "%add_ln12_2 = add i10 %indvar_flatten63, 1" [max_pool_1.cpp:12]   --->   Operation 84 'add' 'add_ln12_2' <Predicate = (!icmp_ln9)> <Delay = 1.44> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (0.66ns)   --->   "%select_ln12_10 = select i1 %icmp_ln12, i10 1, i10 %add_ln12_2" [max_pool_1.cpp:12]   --->   Operation 85 'select' 'select_ln12_10' <Predicate = (!icmp_ln9)> <Delay = 0.66> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 9.81>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln32 = zext i6 %select_ln32_5 to i16" [max_pool_1.cpp:32]   --->   Operation 86 'zext' 'zext_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln32_5 = zext i6 %select_ln32_5 to i14" [max_pool_1.cpp:32]   --->   Operation 87 'zext' 'zext_ln32_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i4 %select_ln12_7 to i8" [max_pool_1.cpp:39]   --->   Operation 88 'zext' 'zext_ln39' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (2.84ns) (grouped into DSP with root node add_ln39)   --->   "%mul_ln39 = mul i8 13, %zext_ln39" [max_pool_1.cpp:39]   --->   Operation 89 'mul' 'mul_ln39' <Predicate = (!icmp_ln9)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node j)   --->   "%shl_ln2 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c_0, i1 false)" [max_pool_1.cpp:30]   --->   Operation 90 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln9 & !or_ln12 & !and_ln12_6)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node j)   --->   "%select_ln12_8 = select i1 %or_ln12, i5 0, i5 %shl_ln2" [max_pool_1.cpp:12]   --->   Operation 91 'select' 'select_ln12_8' <Predicate = (!icmp_ln9 & !and_ln12_6)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node j)   --->   "%shl_ln30_mid1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %c, i1 false)" [max_pool_1.cpp:30]   --->   Operation 92 'bitconcatenate' 'shl_ln30_mid1' <Predicate = (!icmp_ln9 & and_ln12_6)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node j)   --->   "%select_ln15_5 = select i1 %and_ln12_6, i5 %shl_ln30_mid1, i5 %select_ln12_8" [max_pool_1.cpp:15]   --->   Operation 93 'select' 'select_ln15_5' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i4 %select_ln15_6 to i8" [max_pool_1.cpp:15]   --->   Operation 94 'zext' 'zext_ln15' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (2.75ns) (root node of the DSP)   --->   "%add_ln39 = add i8 %zext_ln15, %mul_ln39" [max_pool_1.cpp:39]   --->   Operation 95 'add' 'add_ln39' <Predicate = (!icmp_ln9)> <Delay = 2.75> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_2 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %add_ln39, i5 0)" [max_pool_1.cpp:39]   --->   Operation 96 'bitconcatenate' 'tmp_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln39_4 = zext i13 %tmp_2 to i14" [max_pool_1.cpp:39]   --->   Operation 97 'zext' 'zext_ln39_4' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (1.51ns)   --->   "%add_ln39_3 = add i14 %zext_ln32_5, %zext_ln39_4" [max_pool_1.cpp:39]   --->   Operation 98 'add' 'add_ln39_3' <Predicate = (!icmp_ln9)> <Delay = 1.51> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln39_5 = zext i14 %add_ln39_3 to i64" [max_pool_1.cpp:39]   --->   Operation 99 'zext' 'zext_ln39_5' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%max_pool_out_addr = getelementptr [5408 x float]* %max_pool_out, i64 0, i64 %zext_ln39_5" [max_pool_1.cpp:39]   --->   Operation 100 'getelementptr' 'max_pool_out_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln32_6 = zext i5 %select_ln19_7 to i10" [max_pool_1.cpp:32]   --->   Operation 101 'zext' 'zext_ln32_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (2.84ns) (grouped into DSP with root node add_ln32)   --->   "%mul_ln32 = mul i10 26, %zext_ln32_6" [max_pool_1.cpp:32]   --->   Operation 102 'mul' 'mul_ln32' <Predicate = (!icmp_ln9)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node j)   --->   "%zext_ln22 = zext i2 %select_ln19 to i5" [max_pool_1.cpp:22]   --->   Operation 103 'zext' 'zext_ln22' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (1.36ns) (out node of the LUT)   --->   "%j = add i5 %select_ln15_5, %zext_ln22" [max_pool_1.cpp:30]   --->   Operation 104 'add' 'j' <Predicate = (!icmp_ln9)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln32_7 = zext i5 %j to i10" [max_pool_1.cpp:32]   --->   Operation 105 'zext' 'zext_ln32_7' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (2.75ns) (root node of the DSP)   --->   "%add_ln32 = add i10 %zext_ln32_7, %mul_ln32" [max_pool_1.cpp:32]   --->   Operation 106 'add' 'add_ln32' <Predicate = (!icmp_ln9)> <Delay = 2.75> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.59> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_3 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %add_ln32, i5 0)" [max_pool_1.cpp:32]   --->   Operation 107 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%zext_ln32_8 = zext i15 %tmp_3 to i16" [max_pool_1.cpp:32]   --->   Operation 108 'zext' 'zext_ln32_8' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (1.56ns)   --->   "%add_ln32_2 = add i16 %zext_ln32, %zext_ln32_8" [max_pool_1.cpp:32]   --->   Operation 109 'add' 'add_ln32_2' <Predicate = (!icmp_ln9)> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln32_9 = zext i16 %add_ln32_2 to i64" [max_pool_1.cpp:32]   --->   Operation 110 'zext' 'zext_ln32_9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%conv_out_addr = getelementptr [21632 x float]* %conv_out, i64 0, i64 %zext_ln32_9" [max_pool_1.cpp:32]   --->   Operation 111 'getelementptr' 'conv_out_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_3 : Operation 112 [2/2] (2.66ns)   --->   "%max = load float* %conv_out_addr, align 4" [max_pool_1.cpp:32]   --->   Operation 112 'load' 'max' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>

State 4 <SV = 3> <Delay = 6.45>
ST_4 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node select_ln24)   --->   "%trunc_ln22 = trunc i2 %select_ln19 to i1" [max_pool_1.cpp:22]   --->   Operation 113 'trunc' 'trunc_ln22' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node select_ln24)   --->   "%or_ln24 = or i1 %trunc_ln22, %select_ln19_6" [max_pool_1.cpp:24]   --->   Operation 114 'or' 'or_ln24' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln24 = select i1 %or_ln24, float %max_4, float 0x3810000000000000" [max_pool_1.cpp:24]   --->   Operation 115 'select' 'select_ln24' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 116 [1/2] (2.66ns)   --->   "%max = load float* %conv_out_addr, align 4" [max_pool_1.cpp:32]   --->   Operation 116 'load' 'max' <Predicate = (!icmp_ln9)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_4 : Operation 117 [2/2] (3.78ns)   --->   "%tmp_s = fcmp ogt float %max, %select_ln24" [max_pool_1.cpp:32]   --->   Operation 117 'fcmp' 'tmp_s' <Predicate = (!icmp_ln9)> <Delay = 3.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 9.41>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([49 x i8]* @Filter_Loop_Col_Loop)"   --->   Operation 118 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 21632, i64 21632, i64 21632)"   --->   Operation 119 'speclooptripcount' 'empty_6' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([37 x i8]* @Row_Loop_Pool_Row_Lo)"   --->   Operation 120 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([37 x i8]* @Col_Loop_Pool_Row_Lo)"   --->   Operation 121 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([28 x i8]* @Pool_Row_Loop_Pool_C)"   --->   Operation 122 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([14 x i8]* @p_str434) nounwind" [max_pool_1.cpp:23]   --->   Operation 123 'specloopname' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_8 = call i32 (...)* @_ssdm_op_SpecRegionBegin([14 x i8]* @p_str434)" [max_pool_1.cpp:23]   --->   Operation 124 'specregionbegin' 'tmp_8' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str535) nounwind" [max_pool_1.cpp:24]   --->   Operation 125 'specpipeline' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%bitcast_ln32 = bitcast float %max to i32" [max_pool_1.cpp:32]   --->   Operation 126 'bitcast' 'bitcast_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln32, i32 23, i32 30)" [max_pool_1.cpp:32]   --->   Operation 127 'partselect' 'tmp' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i32 %bitcast_ln32 to i23" [max_pool_1.cpp:32]   --->   Operation 128 'trunc' 'trunc_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%bitcast_ln32_2 = bitcast float %select_ln24 to i32" [max_pool_1.cpp:32]   --->   Operation 129 'bitcast' 'bitcast_ln32_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln32_2, i32 23, i32 30)" [max_pool_1.cpp:32]   --->   Operation 130 'partselect' 'tmp_9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln32_2 = trunc i32 %bitcast_ln32_2 to i23" [max_pool_1.cpp:32]   --->   Operation 131 'trunc' 'trunc_ln32_2' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (1.12ns)   --->   "%icmp_ln32 = icmp ne i8 %tmp, -1" [max_pool_1.cpp:32]   --->   Operation 132 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln9)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 133 [1/1] (1.48ns)   --->   "%icmp_ln32_4 = icmp eq i23 %trunc_ln32, 0" [max_pool_1.cpp:32]   --->   Operation 133 'icmp' 'icmp_ln32_4' <Predicate = (!icmp_ln9)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node and_ln32_2)   --->   "%or_ln32 = or i1 %icmp_ln32_4, %icmp_ln32" [max_pool_1.cpp:32]   --->   Operation 134 'or' 'or_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 135 [1/1] (1.12ns)   --->   "%icmp_ln32_5 = icmp ne i8 %tmp_9, -1" [max_pool_1.cpp:32]   --->   Operation 135 'icmp' 'icmp_ln32_5' <Predicate = (!icmp_ln9)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 136 [1/1] (1.48ns)   --->   "%icmp_ln32_6 = icmp eq i23 %trunc_ln32_2, 0" [max_pool_1.cpp:32]   --->   Operation 136 'icmp' 'icmp_ln32_6' <Predicate = (!icmp_ln9)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node and_ln32_2)   --->   "%or_ln32_2 = or i1 %icmp_ln32_6, %icmp_ln32_5" [max_pool_1.cpp:32]   --->   Operation 137 'or' 'or_ln32_2' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node and_ln32_2)   --->   "%and_ln32 = and i1 %or_ln32, %or_ln32_2" [max_pool_1.cpp:32]   --->   Operation 138 'and' 'and_ln32' <Predicate = (!icmp_ln9)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 139 [1/2] (3.78ns)   --->   "%tmp_s = fcmp ogt float %max, %select_ln24" [max_pool_1.cpp:32]   --->   Operation 139 'fcmp' 'tmp_s' <Predicate = (!icmp_ln9)> <Delay = 3.78> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 1> <II = 1> <Delay = 3.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 140 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln32_2 = and i1 %and_ln32, %tmp_s" [max_pool_1.cpp:32]   --->   Operation 140 'and' 'and_ln32_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 141 [1/1] (0.61ns) (out node of the LUT)   --->   "%max_2 = select i1 %and_ln32_2, float %max, float %select_ln24" [max_pool_1.cpp:32]   --->   Operation 141 'select' 'max_2' <Predicate = (!icmp_ln9)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 142 [1/1] (2.66ns)   --->   "store float %max_2, float* %max_pool_out_addr, align 4" [max_pool_1.cpp:39]   --->   Operation 142 'store' <Predicate = (and_ln37)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5408> <RAM>
ST_5 : Operation 143 [1/1] (0.00ns)   --->   "br label %Pool_Col_Loop_end" [max_pool_1.cpp:40]   --->   Operation 143 'br' <Predicate = (and_ln37)> <Delay = 0.00>
ST_5 : Operation 144 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([14 x i8]* @p_str434, i32 %tmp_8)" [max_pool_1.cpp:41]   --->   Operation 144 'specregionend' 'empty' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_5 : Operation 145 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 145 'br' <Predicate = (!icmp_ln9)> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 146 [1/1] (0.00ns)   --->   "ret void" [max_pool_1.cpp:48]   --->   Operation 146 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten117', max_pool_1.cpp:9) with incoming values : ('add_ln9', max_pool_1.cpp:9) [5]  (1.18 ns)

 <State 2>: 6.84ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten63', max_pool_1.cpp:12) with incoming values : ('select_ln12_10', max_pool_1.cpp:12) [7]  (0 ns)
	'icmp' operation ('icmp_ln12', max_pool_1.cpp:12) [25]  (1.2 ns)
	'or' operation ('or_ln12_2', max_pool_1.cpp:12) [55]  (0.616 ns)
	'and' operation ('and_ln12_6', max_pool_1.cpp:12) [60]  (0.616 ns)
	'or' operation ('or_ln15', max_pool_1.cpp:15) [63]  (0 ns)
	'or' operation ('or_ln15_2', max_pool_1.cpp:15) [64]  (0.616 ns)
	'select' operation ('select_ln15', max_pool_1.cpp:15) [65]  (0.625 ns)
	'add' operation ('mpr', max_pool_1.cpp:19) [81]  (1.01 ns)
	'add' operation ('add_ln29_2', max_pool_1.cpp:29) [89]  (1.37 ns)
	'select' operation ('select_ln19_7', max_pool_1.cpp:19) [90]  (0.795 ns)

 <State 3>: 9.82ns
The critical path consists of the following:
	'mul' operation of DSP[105] ('mul_ln32', max_pool_1.cpp:32) [92]  (2.84 ns)
	'add' operation of DSP[105] ('add_ln32', max_pool_1.cpp:32) [105]  (2.75 ns)
	'add' operation ('add_ln32_2', max_pool_1.cpp:32) [108]  (1.56 ns)
	'getelementptr' operation ('conv_out_addr', max_pool_1.cpp:32) [110]  (0 ns)
	'load' operation ('max', max_pool_1.cpp:32) on array 'conv_out' [111]  (2.66 ns)

 <State 4>: 6.45ns
The critical path consists of the following:
	'load' operation ('max', max_pool_1.cpp:32) on array 'conv_out' [111]  (2.66 ns)
	'fcmp' operation ('tmp_s', max_pool_1.cpp:32) [125]  (3.79 ns)

 <State 5>: 9.42ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', max_pool_1.cpp:32) [125]  (3.79 ns)
	'and' operation ('and_ln32_2', max_pool_1.cpp:32) [126]  (0.616 ns)
	'select' operation ('max', max_pool_1.cpp:32) [127]  (0.613 ns)
	'phi' operation ('max') with incoming values : ('max', max_pool_1.cpp:32) [13]  (0 ns)
	'select' operation ('select_ln24', max_pool_1.cpp:24) [102]  (0.616 ns)
	'fcmp' operation ('tmp_s', max_pool_1.cpp:32) [125]  (3.79 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
