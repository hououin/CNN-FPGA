// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cnn::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cnn::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> cnn::ap_ST_fsm_state1 = "1";
const sc_lv<12> cnn::ap_ST_fsm_state2 = "10";
const sc_lv<12> cnn::ap_ST_fsm_state3 = "100";
const sc_lv<12> cnn::ap_ST_fsm_state4 = "1000";
const sc_lv<12> cnn::ap_ST_fsm_state5 = "10000";
const sc_lv<12> cnn::ap_ST_fsm_state6 = "100000";
const sc_lv<12> cnn::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> cnn::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> cnn::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> cnn::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> cnn::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> cnn::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> cnn::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cnn::ap_const_lv32_A = "1010";
const sc_lv<32> cnn::ap_const_lv32_B = "1011";
const sc_lv<32> cnn::ap_const_lv32_4 = "100";
const sc_lv<32> cnn::ap_const_lv32_5 = "101";
const sc_lv<32> cnn::ap_const_lv32_1 = "1";
const sc_lv<32> cnn::ap_const_lv32_2 = "10";
const sc_lv<32> cnn::ap_const_lv32_3 = "11";
const sc_lv<32> cnn::ap_const_lv32_6 = "110";
const sc_lv<32> cnn::ap_const_lv32_7 = "111";
const sc_lv<32> cnn::ap_const_lv32_8 = "1000";
const sc_lv<32> cnn::ap_const_lv32_9 = "1001";
const bool cnn::ap_const_boolean_1 = true;

cnn::cnn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    flat_array_U = new cnn_flat_array("flat_array_U");
    flat_array_U->clk(ap_clk);
    flat_array_U->reset(ap_rst);
    flat_array_U->address0(flat_array_address0);
    flat_array_U->ce0(flat_array_ce0);
    flat_array_U->we0(flat_array_we0);
    flat_array_U->d0(grp_flat_fu_96_flat_array_d0);
    flat_array_U->q0(flat_array_q0);
    conv_1_out_U = new cnn_conv_1_out("conv_1_out_U");
    conv_1_out_U->clk(ap_clk);
    conv_1_out_U->reset(ap_rst);
    conv_1_out_U->address0(conv_1_out_address0);
    conv_1_out_U->ce0(conv_1_out_ce0);
    conv_1_out_U->we0(conv_1_out_we0);
    conv_1_out_U->d0(grp_conv_1_fu_72_conv_out_d0);
    conv_1_out_U->q0(conv_1_out_q0);
    max_pool_1_out_U = new cnn_max_pool_1_out("max_pool_1_out_U");
    max_pool_1_out_U->clk(ap_clk);
    max_pool_1_out_U->reset(ap_rst);
    max_pool_1_out_U->address0(max_pool_1_out_address0);
    max_pool_1_out_U->ce0(max_pool_1_out_ce0);
    max_pool_1_out_U->we0(max_pool_1_out_we0);
    max_pool_1_out_U->d0(grp_max_pool_1_fu_84_max_pool_out_d0);
    max_pool_1_out_U->q0(max_pool_1_out_q0);
    conv_2_out_U = new cnn_conv_2_out("conv_2_out_U");
    conv_2_out_U->clk(ap_clk);
    conv_2_out_U->reset(ap_rst);
    conv_2_out_U->address0(conv_2_out_address0);
    conv_2_out_U->ce0(conv_2_out_ce0);
    conv_2_out_U->we0(conv_2_out_we0);
    conv_2_out_U->d0(grp_conv_2_fu_62_conv_out_d0);
    conv_2_out_U->q0(conv_2_out_q0);
    max_pool_2_out_U = new cnn_max_pool_2_out("max_pool_2_out_U");
    max_pool_2_out_U->clk(ap_clk);
    max_pool_2_out_U->reset(ap_rst);
    max_pool_2_out_U->address0(max_pool_2_out_address0);
    max_pool_2_out_U->ce0(max_pool_2_out_ce0);
    max_pool_2_out_U->we0(max_pool_2_out_we0);
    max_pool_2_out_U->d0(grp_max_pool_2_fu_90_max_pool_out_d0);
    max_pool_2_out_U->q0(max_pool_2_out_q0);
    grp_dense_fu_52 = new dense("grp_dense_fu_52");
    grp_dense_fu_52->ap_clk(ap_clk);
    grp_dense_fu_52->ap_rst(ap_rst);
    grp_dense_fu_52->ap_start(grp_dense_fu_52_ap_start);
    grp_dense_fu_52->ap_done(grp_dense_fu_52_ap_done);
    grp_dense_fu_52->ap_idle(grp_dense_fu_52_ap_idle);
    grp_dense_fu_52->ap_ready(grp_dense_fu_52_ap_ready);
    grp_dense_fu_52->prediction_address0(grp_dense_fu_52_prediction_address0);
    grp_dense_fu_52->prediction_ce0(grp_dense_fu_52_prediction_ce0);
    grp_dense_fu_52->prediction_we0(grp_dense_fu_52_prediction_we0);
    grp_dense_fu_52->prediction_d0(grp_dense_fu_52_prediction_d0);
    grp_dense_fu_52->flat_array_address0(grp_dense_fu_52_flat_array_address0);
    grp_dense_fu_52->flat_array_ce0(grp_dense_fu_52_flat_array_ce0);
    grp_dense_fu_52->flat_array_q0(flat_array_q0);
    grp_conv_2_fu_62 = new conv_2("grp_conv_2_fu_62");
    grp_conv_2_fu_62->ap_clk(ap_clk);
    grp_conv_2_fu_62->ap_rst(ap_rst);
    grp_conv_2_fu_62->ap_start(grp_conv_2_fu_62_ap_start);
    grp_conv_2_fu_62->ap_done(grp_conv_2_fu_62_ap_done);
    grp_conv_2_fu_62->ap_idle(grp_conv_2_fu_62_ap_idle);
    grp_conv_2_fu_62->ap_ready(grp_conv_2_fu_62_ap_ready);
    grp_conv_2_fu_62->input_r_address0(grp_conv_2_fu_62_input_r_address0);
    grp_conv_2_fu_62->input_r_ce0(grp_conv_2_fu_62_input_r_ce0);
    grp_conv_2_fu_62->input_r_q0(max_pool_1_out_q0);
    grp_conv_2_fu_62->conv_out_address0(grp_conv_2_fu_62_conv_out_address0);
    grp_conv_2_fu_62->conv_out_ce0(grp_conv_2_fu_62_conv_out_ce0);
    grp_conv_2_fu_62->conv_out_we0(grp_conv_2_fu_62_conv_out_we0);
    grp_conv_2_fu_62->conv_out_d0(grp_conv_2_fu_62_conv_out_d0);
    grp_conv_1_fu_72 = new conv_1("grp_conv_1_fu_72");
    grp_conv_1_fu_72->ap_clk(ap_clk);
    grp_conv_1_fu_72->ap_rst(ap_rst);
    grp_conv_1_fu_72->ap_start(grp_conv_1_fu_72_ap_start);
    grp_conv_1_fu_72->ap_done(grp_conv_1_fu_72_ap_done);
    grp_conv_1_fu_72->ap_idle(grp_conv_1_fu_72_ap_idle);
    grp_conv_1_fu_72->ap_ready(grp_conv_1_fu_72_ap_ready);
    grp_conv_1_fu_72->input_r_address0(grp_conv_1_fu_72_input_r_address0);
    grp_conv_1_fu_72->input_r_ce0(grp_conv_1_fu_72_input_r_ce0);
    grp_conv_1_fu_72->input_r_q0(input_r_q0);
    grp_conv_1_fu_72->conv_out_address0(grp_conv_1_fu_72_conv_out_address0);
    grp_conv_1_fu_72->conv_out_ce0(grp_conv_1_fu_72_conv_out_ce0);
    grp_conv_1_fu_72->conv_out_we0(grp_conv_1_fu_72_conv_out_we0);
    grp_conv_1_fu_72->conv_out_d0(grp_conv_1_fu_72_conv_out_d0);
    grp_max_pool_1_fu_84 = new max_pool_1("grp_max_pool_1_fu_84");
    grp_max_pool_1_fu_84->ap_clk(ap_clk);
    grp_max_pool_1_fu_84->ap_rst(ap_rst);
    grp_max_pool_1_fu_84->ap_start(grp_max_pool_1_fu_84_ap_start);
    grp_max_pool_1_fu_84->ap_done(grp_max_pool_1_fu_84_ap_done);
    grp_max_pool_1_fu_84->ap_idle(grp_max_pool_1_fu_84_ap_idle);
    grp_max_pool_1_fu_84->ap_ready(grp_max_pool_1_fu_84_ap_ready);
    grp_max_pool_1_fu_84->conv_out_address0(grp_max_pool_1_fu_84_conv_out_address0);
    grp_max_pool_1_fu_84->conv_out_ce0(grp_max_pool_1_fu_84_conv_out_ce0);
    grp_max_pool_1_fu_84->conv_out_q0(conv_1_out_q0);
    grp_max_pool_1_fu_84->max_pool_out_address0(grp_max_pool_1_fu_84_max_pool_out_address0);
    grp_max_pool_1_fu_84->max_pool_out_ce0(grp_max_pool_1_fu_84_max_pool_out_ce0);
    grp_max_pool_1_fu_84->max_pool_out_we0(grp_max_pool_1_fu_84_max_pool_out_we0);
    grp_max_pool_1_fu_84->max_pool_out_d0(grp_max_pool_1_fu_84_max_pool_out_d0);
    grp_max_pool_2_fu_90 = new max_pool_2("grp_max_pool_2_fu_90");
    grp_max_pool_2_fu_90->ap_clk(ap_clk);
    grp_max_pool_2_fu_90->ap_rst(ap_rst);
    grp_max_pool_2_fu_90->ap_start(grp_max_pool_2_fu_90_ap_start);
    grp_max_pool_2_fu_90->ap_done(grp_max_pool_2_fu_90_ap_done);
    grp_max_pool_2_fu_90->ap_idle(grp_max_pool_2_fu_90_ap_idle);
    grp_max_pool_2_fu_90->ap_ready(grp_max_pool_2_fu_90_ap_ready);
    grp_max_pool_2_fu_90->conv_out_address0(grp_max_pool_2_fu_90_conv_out_address0);
    grp_max_pool_2_fu_90->conv_out_ce0(grp_max_pool_2_fu_90_conv_out_ce0);
    grp_max_pool_2_fu_90->conv_out_q0(conv_2_out_q0);
    grp_max_pool_2_fu_90->max_pool_out_address0(grp_max_pool_2_fu_90_max_pool_out_address0);
    grp_max_pool_2_fu_90->max_pool_out_ce0(grp_max_pool_2_fu_90_max_pool_out_ce0);
    grp_max_pool_2_fu_90->max_pool_out_we0(grp_max_pool_2_fu_90_max_pool_out_we0);
    grp_max_pool_2_fu_90->max_pool_out_d0(grp_max_pool_2_fu_90_max_pool_out_d0);
    grp_flat_fu_96 = new flat("grp_flat_fu_96");
    grp_flat_fu_96->ap_clk(ap_clk);
    grp_flat_fu_96->ap_rst(ap_rst);
    grp_flat_fu_96->ap_start(grp_flat_fu_96_ap_start);
    grp_flat_fu_96->ap_done(grp_flat_fu_96_ap_done);
    grp_flat_fu_96->ap_idle(grp_flat_fu_96_ap_idle);
    grp_flat_fu_96->ap_ready(grp_flat_fu_96_ap_ready);
    grp_flat_fu_96->max_pool_out_address0(grp_flat_fu_96_max_pool_out_address0);
    grp_flat_fu_96->max_pool_out_ce0(grp_flat_fu_96_max_pool_out_ce0);
    grp_flat_fu_96->max_pool_out_q0(max_pool_2_out_q0);
    grp_flat_fu_96->flat_array_address0(grp_flat_fu_96_flat_array_address0);
    grp_flat_fu_96->flat_array_ce0(grp_flat_fu_96_flat_array_ce0);
    grp_flat_fu_96->flat_array_we0(grp_flat_fu_96_flat_array_we0);
    grp_flat_fu_96->flat_array_d0(grp_flat_fu_96_flat_array_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_dense_fu_52_ap_done );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_dense_fu_52_ap_done );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_conv_1_out_address0);
    sensitive << ( grp_conv_1_fu_72_conv_out_address0 );
    sensitive << ( grp_max_pool_1_fu_84_conv_out_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_conv_1_out_ce0);
    sensitive << ( grp_conv_1_fu_72_conv_out_ce0 );
    sensitive << ( grp_max_pool_1_fu_84_conv_out_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_conv_1_out_we0);
    sensitive << ( grp_conv_1_fu_72_conv_out_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_conv_2_out_address0);
    sensitive << ( grp_conv_2_fu_62_conv_out_address0 );
    sensitive << ( grp_max_pool_2_fu_90_conv_out_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_conv_2_out_ce0);
    sensitive << ( grp_conv_2_fu_62_conv_out_ce0 );
    sensitive << ( grp_max_pool_2_fu_90_conv_out_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_conv_2_out_we0);
    sensitive << ( grp_conv_2_fu_62_conv_out_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_flat_array_address0);
    sensitive << ( grp_dense_fu_52_flat_array_address0 );
    sensitive << ( grp_flat_fu_96_flat_array_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_flat_array_ce0);
    sensitive << ( grp_dense_fu_52_flat_array_ce0 );
    sensitive << ( grp_flat_fu_96_flat_array_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_flat_array_we0);
    sensitive << ( grp_flat_fu_96_flat_array_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_conv_1_fu_72_ap_start);
    sensitive << ( grp_conv_1_fu_72_ap_start_reg );

    SC_METHOD(thread_grp_conv_2_fu_62_ap_start);
    sensitive << ( grp_conv_2_fu_62_ap_start_reg );

    SC_METHOD(thread_grp_dense_fu_52_ap_start);
    sensitive << ( grp_dense_fu_52_ap_start_reg );

    SC_METHOD(thread_grp_flat_fu_96_ap_start);
    sensitive << ( grp_flat_fu_96_ap_start_reg );

    SC_METHOD(thread_grp_max_pool_1_fu_84_ap_start);
    sensitive << ( grp_max_pool_1_fu_84_ap_start_reg );

    SC_METHOD(thread_grp_max_pool_2_fu_90_ap_start);
    sensitive << ( grp_max_pool_2_fu_90_ap_start_reg );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( grp_conv_1_fu_72_input_r_address0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( grp_conv_1_fu_72_input_r_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_max_pool_1_out_address0);
    sensitive << ( grp_conv_2_fu_62_input_r_address0 );
    sensitive << ( grp_max_pool_1_fu_84_max_pool_out_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_max_pool_1_out_ce0);
    sensitive << ( grp_conv_2_fu_62_input_r_ce0 );
    sensitive << ( grp_max_pool_1_fu_84_max_pool_out_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_max_pool_1_out_we0);
    sensitive << ( grp_max_pool_1_fu_84_max_pool_out_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_max_pool_2_out_address0);
    sensitive << ( grp_max_pool_2_fu_90_max_pool_out_address0 );
    sensitive << ( grp_flat_fu_96_max_pool_out_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_max_pool_2_out_ce0);
    sensitive << ( grp_max_pool_2_fu_90_max_pool_out_ce0 );
    sensitive << ( grp_flat_fu_96_max_pool_out_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_max_pool_2_out_we0);
    sensitive << ( grp_max_pool_2_fu_90_max_pool_out_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_prediction_address0);
    sensitive << ( grp_dense_fu_52_prediction_address0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_ce0);
    sensitive << ( grp_dense_fu_52_prediction_ce0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_d0);
    sensitive << ( grp_dense_fu_52_prediction_d0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prediction_we0);
    sensitive << ( grp_dense_fu_52_prediction_we0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_dense_fu_52_ap_done );
    sensitive << ( grp_conv_2_fu_62_ap_done );
    sensitive << ( grp_conv_1_fu_72_ap_done );
    sensitive << ( grp_max_pool_1_fu_84_ap_done );
    sensitive << ( grp_max_pool_2_fu_90_ap_done );
    sensitive << ( grp_flat_fu_96_ap_done );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000000001";
    grp_dense_fu_52_ap_start_reg = SC_LOGIC_0;
    grp_conv_2_fu_62_ap_start_reg = SC_LOGIC_0;
    grp_conv_1_fu_72_ap_start_reg = SC_LOGIC_0;
    grp_max_pool_1_fu_84_ap_start_reg = SC_LOGIC_0;
    grp_max_pool_2_fu_90_ap_start_reg = SC_LOGIC_0;
    grp_flat_fu_96_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, prediction_address0, "(port)prediction_address0");
    sc_trace(mVcdFile, prediction_ce0, "(port)prediction_ce0");
    sc_trace(mVcdFile, prediction_we0, "(port)prediction_we0");
    sc_trace(mVcdFile, prediction_d0, "(port)prediction_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, flat_array_address0, "flat_array_address0");
    sc_trace(mVcdFile, flat_array_ce0, "flat_array_ce0");
    sc_trace(mVcdFile, flat_array_we0, "flat_array_we0");
    sc_trace(mVcdFile, flat_array_q0, "flat_array_q0");
    sc_trace(mVcdFile, conv_1_out_address0, "conv_1_out_address0");
    sc_trace(mVcdFile, conv_1_out_ce0, "conv_1_out_ce0");
    sc_trace(mVcdFile, conv_1_out_we0, "conv_1_out_we0");
    sc_trace(mVcdFile, conv_1_out_q0, "conv_1_out_q0");
    sc_trace(mVcdFile, max_pool_1_out_address0, "max_pool_1_out_address0");
    sc_trace(mVcdFile, max_pool_1_out_ce0, "max_pool_1_out_ce0");
    sc_trace(mVcdFile, max_pool_1_out_we0, "max_pool_1_out_we0");
    sc_trace(mVcdFile, max_pool_1_out_q0, "max_pool_1_out_q0");
    sc_trace(mVcdFile, conv_2_out_address0, "conv_2_out_address0");
    sc_trace(mVcdFile, conv_2_out_ce0, "conv_2_out_ce0");
    sc_trace(mVcdFile, conv_2_out_we0, "conv_2_out_we0");
    sc_trace(mVcdFile, conv_2_out_q0, "conv_2_out_q0");
    sc_trace(mVcdFile, max_pool_2_out_address0, "max_pool_2_out_address0");
    sc_trace(mVcdFile, max_pool_2_out_ce0, "max_pool_2_out_ce0");
    sc_trace(mVcdFile, max_pool_2_out_we0, "max_pool_2_out_we0");
    sc_trace(mVcdFile, max_pool_2_out_q0, "max_pool_2_out_q0");
    sc_trace(mVcdFile, grp_dense_fu_52_ap_start, "grp_dense_fu_52_ap_start");
    sc_trace(mVcdFile, grp_dense_fu_52_ap_done, "grp_dense_fu_52_ap_done");
    sc_trace(mVcdFile, grp_dense_fu_52_ap_idle, "grp_dense_fu_52_ap_idle");
    sc_trace(mVcdFile, grp_dense_fu_52_ap_ready, "grp_dense_fu_52_ap_ready");
    sc_trace(mVcdFile, grp_dense_fu_52_prediction_address0, "grp_dense_fu_52_prediction_address0");
    sc_trace(mVcdFile, grp_dense_fu_52_prediction_ce0, "grp_dense_fu_52_prediction_ce0");
    sc_trace(mVcdFile, grp_dense_fu_52_prediction_we0, "grp_dense_fu_52_prediction_we0");
    sc_trace(mVcdFile, grp_dense_fu_52_prediction_d0, "grp_dense_fu_52_prediction_d0");
    sc_trace(mVcdFile, grp_dense_fu_52_flat_array_address0, "grp_dense_fu_52_flat_array_address0");
    sc_trace(mVcdFile, grp_dense_fu_52_flat_array_ce0, "grp_dense_fu_52_flat_array_ce0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_ap_start, "grp_conv_2_fu_62_ap_start");
    sc_trace(mVcdFile, grp_conv_2_fu_62_ap_done, "grp_conv_2_fu_62_ap_done");
    sc_trace(mVcdFile, grp_conv_2_fu_62_ap_idle, "grp_conv_2_fu_62_ap_idle");
    sc_trace(mVcdFile, grp_conv_2_fu_62_ap_ready, "grp_conv_2_fu_62_ap_ready");
    sc_trace(mVcdFile, grp_conv_2_fu_62_input_r_address0, "grp_conv_2_fu_62_input_r_address0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_input_r_ce0, "grp_conv_2_fu_62_input_r_ce0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_conv_out_address0, "grp_conv_2_fu_62_conv_out_address0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_conv_out_ce0, "grp_conv_2_fu_62_conv_out_ce0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_conv_out_we0, "grp_conv_2_fu_62_conv_out_we0");
    sc_trace(mVcdFile, grp_conv_2_fu_62_conv_out_d0, "grp_conv_2_fu_62_conv_out_d0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_ap_start, "grp_conv_1_fu_72_ap_start");
    sc_trace(mVcdFile, grp_conv_1_fu_72_ap_done, "grp_conv_1_fu_72_ap_done");
    sc_trace(mVcdFile, grp_conv_1_fu_72_ap_idle, "grp_conv_1_fu_72_ap_idle");
    sc_trace(mVcdFile, grp_conv_1_fu_72_ap_ready, "grp_conv_1_fu_72_ap_ready");
    sc_trace(mVcdFile, grp_conv_1_fu_72_input_r_address0, "grp_conv_1_fu_72_input_r_address0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_input_r_ce0, "grp_conv_1_fu_72_input_r_ce0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_conv_out_address0, "grp_conv_1_fu_72_conv_out_address0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_conv_out_ce0, "grp_conv_1_fu_72_conv_out_ce0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_conv_out_we0, "grp_conv_1_fu_72_conv_out_we0");
    sc_trace(mVcdFile, grp_conv_1_fu_72_conv_out_d0, "grp_conv_1_fu_72_conv_out_d0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_ap_start, "grp_max_pool_1_fu_84_ap_start");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_ap_done, "grp_max_pool_1_fu_84_ap_done");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_ap_idle, "grp_max_pool_1_fu_84_ap_idle");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_ap_ready, "grp_max_pool_1_fu_84_ap_ready");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_conv_out_address0, "grp_max_pool_1_fu_84_conv_out_address0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_conv_out_ce0, "grp_max_pool_1_fu_84_conv_out_ce0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_max_pool_out_address0, "grp_max_pool_1_fu_84_max_pool_out_address0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_max_pool_out_ce0, "grp_max_pool_1_fu_84_max_pool_out_ce0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_max_pool_out_we0, "grp_max_pool_1_fu_84_max_pool_out_we0");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_max_pool_out_d0, "grp_max_pool_1_fu_84_max_pool_out_d0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_ap_start, "grp_max_pool_2_fu_90_ap_start");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_ap_done, "grp_max_pool_2_fu_90_ap_done");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_ap_idle, "grp_max_pool_2_fu_90_ap_idle");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_ap_ready, "grp_max_pool_2_fu_90_ap_ready");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_conv_out_address0, "grp_max_pool_2_fu_90_conv_out_address0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_conv_out_ce0, "grp_max_pool_2_fu_90_conv_out_ce0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_max_pool_out_address0, "grp_max_pool_2_fu_90_max_pool_out_address0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_max_pool_out_ce0, "grp_max_pool_2_fu_90_max_pool_out_ce0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_max_pool_out_we0, "grp_max_pool_2_fu_90_max_pool_out_we0");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_max_pool_out_d0, "grp_max_pool_2_fu_90_max_pool_out_d0");
    sc_trace(mVcdFile, grp_flat_fu_96_ap_start, "grp_flat_fu_96_ap_start");
    sc_trace(mVcdFile, grp_flat_fu_96_ap_done, "grp_flat_fu_96_ap_done");
    sc_trace(mVcdFile, grp_flat_fu_96_ap_idle, "grp_flat_fu_96_ap_idle");
    sc_trace(mVcdFile, grp_flat_fu_96_ap_ready, "grp_flat_fu_96_ap_ready");
    sc_trace(mVcdFile, grp_flat_fu_96_max_pool_out_address0, "grp_flat_fu_96_max_pool_out_address0");
    sc_trace(mVcdFile, grp_flat_fu_96_max_pool_out_ce0, "grp_flat_fu_96_max_pool_out_ce0");
    sc_trace(mVcdFile, grp_flat_fu_96_flat_array_address0, "grp_flat_fu_96_flat_array_address0");
    sc_trace(mVcdFile, grp_flat_fu_96_flat_array_ce0, "grp_flat_fu_96_flat_array_ce0");
    sc_trace(mVcdFile, grp_flat_fu_96_flat_array_we0, "grp_flat_fu_96_flat_array_we0");
    sc_trace(mVcdFile, grp_flat_fu_96_flat_array_d0, "grp_flat_fu_96_flat_array_d0");
    sc_trace(mVcdFile, grp_dense_fu_52_ap_start_reg, "grp_dense_fu_52_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_conv_2_fu_62_ap_start_reg, "grp_conv_2_fu_62_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_conv_1_fu_72_ap_start_reg, "grp_conv_1_fu_72_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_max_pool_1_fu_84_ap_start_reg, "grp_max_pool_1_fu_84_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_max_pool_2_fu_90_ap_start_reg, "grp_max_pool_2_fu_90_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_flat_fu_96_ap_start_reg, "grp_flat_fu_96_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("cnn.hdltvin.dat");
    mHdltvoutHandle.open("cnn.hdltvout.dat");
}

cnn::~cnn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete flat_array_U;
    delete conv_1_out_U;
    delete max_pool_1_out_U;
    delete conv_2_out_U;
    delete max_pool_2_out_U;
    delete grp_dense_fu_52;
    delete grp_conv_2_fu_62;
    delete grp_conv_1_fu_72;
    delete grp_max_pool_1_fu_84;
    delete grp_max_pool_2_fu_90;
    delete grp_flat_fu_96;
}

void cnn::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_conv_1_fu_72_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_conv_1_fu_72_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv_1_fu_72_ap_ready.read())) {
            grp_conv_1_fu_72_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_conv_2_fu_62_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_conv_2_fu_62_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv_2_fu_62_ap_ready.read())) {
            grp_conv_2_fu_62_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_dense_fu_52_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            grp_dense_fu_52_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_dense_fu_52_ap_ready.read())) {
            grp_dense_fu_52_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_flat_fu_96_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_flat_fu_96_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_flat_fu_96_ap_ready.read())) {
            grp_flat_fu_96_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_max_pool_1_fu_84_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_max_pool_1_fu_84_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_max_pool_1_fu_84_ap_ready.read())) {
            grp_max_pool_1_fu_84_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_max_pool_2_fu_90_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_max_pool_2_fu_90_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_max_pool_2_fu_90_ap_ready.read())) {
            grp_max_pool_2_fu_90_ap_start_reg = ap_const_logic_0;
        }
    }
}

void cnn::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cnn::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void cnn::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void cnn::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void cnn::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cnn::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cnn::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cnn::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cnn::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void cnn::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void cnn::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void cnn::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void cnn::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(grp_dense_fu_52_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cnn::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cnn::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(grp_dense_fu_52_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cnn::thread_conv_1_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        conv_1_out_address0 = grp_max_pool_1_fu_84_conv_out_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        conv_1_out_address0 = grp_conv_1_fu_72_conv_out_address0.read();
    } else {
        conv_1_out_address0 = "XXXXXXXXXXXXXXX";
    }
}

void cnn::thread_conv_1_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        conv_1_out_ce0 = grp_max_pool_1_fu_84_conv_out_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        conv_1_out_ce0 = grp_conv_1_fu_72_conv_out_ce0.read();
    } else {
        conv_1_out_ce0 = ap_const_logic_0;
    }
}

void cnn::thread_conv_1_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        conv_1_out_we0 = grp_conv_1_fu_72_conv_out_we0.read();
    } else {
        conv_1_out_we0 = ap_const_logic_0;
    }
}

void cnn::thread_conv_2_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_2_out_address0 = grp_max_pool_2_fu_90_conv_out_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv_2_out_address0 = grp_conv_2_fu_62_conv_out_address0.read();
    } else {
        conv_2_out_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void cnn::thread_conv_2_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        conv_2_out_ce0 = grp_max_pool_2_fu_90_conv_out_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv_2_out_ce0 = grp_conv_2_fu_62_conv_out_ce0.read();
    } else {
        conv_2_out_ce0 = ap_const_logic_0;
    }
}

void cnn::thread_conv_2_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        conv_2_out_we0 = grp_conv_2_fu_62_conv_out_we0.read();
    } else {
        conv_2_out_we0 = ap_const_logic_0;
    }
}

void cnn::thread_flat_array_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_address0 = grp_flat_fu_96_flat_array_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        flat_array_address0 = grp_dense_fu_52_flat_array_address0.read();
    } else {
        flat_array_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void cnn::thread_flat_array_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_ce0 = grp_flat_fu_96_flat_array_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        flat_array_ce0 = grp_dense_fu_52_flat_array_ce0.read();
    } else {
        flat_array_ce0 = ap_const_logic_0;
    }
}

void cnn::thread_flat_array_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        flat_array_we0 = grp_flat_fu_96_flat_array_we0.read();
    } else {
        flat_array_we0 = ap_const_logic_0;
    }
}

void cnn::thread_grp_conv_1_fu_72_ap_start() {
    grp_conv_1_fu_72_ap_start = grp_conv_1_fu_72_ap_start_reg.read();
}

void cnn::thread_grp_conv_2_fu_62_ap_start() {
    grp_conv_2_fu_62_ap_start = grp_conv_2_fu_62_ap_start_reg.read();
}

void cnn::thread_grp_dense_fu_52_ap_start() {
    grp_dense_fu_52_ap_start = grp_dense_fu_52_ap_start_reg.read();
}

void cnn::thread_grp_flat_fu_96_ap_start() {
    grp_flat_fu_96_ap_start = grp_flat_fu_96_ap_start_reg.read();
}

void cnn::thread_grp_max_pool_1_fu_84_ap_start() {
    grp_max_pool_1_fu_84_ap_start = grp_max_pool_1_fu_84_ap_start_reg.read();
}

void cnn::thread_grp_max_pool_2_fu_90_ap_start() {
    grp_max_pool_2_fu_90_ap_start = grp_max_pool_2_fu_90_ap_start_reg.read();
}

void cnn::thread_input_r_address0() {
    input_r_address0 = grp_conv_1_fu_72_input_r_address0.read();
}

void cnn::thread_input_r_ce0() {
    input_r_ce0 = grp_conv_1_fu_72_input_r_ce0.read();
}

void cnn::thread_max_pool_1_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_pool_1_out_address0 = grp_max_pool_1_fu_84_max_pool_out_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        max_pool_1_out_address0 = grp_conv_2_fu_62_input_r_address0.read();
    } else {
        max_pool_1_out_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void cnn::thread_max_pool_1_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_pool_1_out_ce0 = grp_max_pool_1_fu_84_max_pool_out_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        max_pool_1_out_ce0 = grp_conv_2_fu_62_input_r_ce0.read();
    } else {
        max_pool_1_out_ce0 = ap_const_logic_0;
    }
}

void cnn::thread_max_pool_1_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_pool_1_out_we0 = grp_max_pool_1_fu_84_max_pool_out_we0.read();
    } else {
        max_pool_1_out_we0 = ap_const_logic_0;
    }
}

void cnn::thread_max_pool_2_out_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        max_pool_2_out_address0 = grp_flat_fu_96_max_pool_out_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_pool_2_out_address0 = grp_max_pool_2_fu_90_max_pool_out_address0.read();
    } else {
        max_pool_2_out_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void cnn::thread_max_pool_2_out_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        max_pool_2_out_ce0 = grp_flat_fu_96_max_pool_out_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_pool_2_out_ce0 = grp_max_pool_2_fu_90_max_pool_out_ce0.read();
    } else {
        max_pool_2_out_ce0 = ap_const_logic_0;
    }
}

void cnn::thread_max_pool_2_out_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        max_pool_2_out_we0 = grp_max_pool_2_fu_90_max_pool_out_we0.read();
    } else {
        max_pool_2_out_we0 = ap_const_logic_0;
    }
}

void cnn::thread_prediction_address0() {
    prediction_address0 = grp_dense_fu_52_prediction_address0.read();
}

void cnn::thread_prediction_ce0() {
    prediction_ce0 = grp_dense_fu_52_prediction_ce0.read();
}

void cnn::thread_prediction_d0() {
    prediction_d0 = grp_dense_fu_52_prediction_d0.read();
}

void cnn::thread_prediction_we0() {
    prediction_we0 = grp_dense_fu_52_prediction_we0.read();
}

void cnn::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_conv_1_fu_72_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_max_pool_1_fu_84_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_conv_2_fu_62_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_max_pool_2_fu_90_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_flat_fu_96_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(grp_dense_fu_52_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void cnn::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_address0\" :  \"" << prediction_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_ce0\" :  \"" << prediction_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_we0\" :  \"" << prediction_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"prediction_d0\" :  \"" << prediction_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

