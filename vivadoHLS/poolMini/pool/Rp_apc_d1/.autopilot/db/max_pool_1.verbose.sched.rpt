

================================================================
== Vivado HLS Report for 'max_pool_1'
================================================================
* Date:           Thu Aug 10 15:44:16 2023

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        pool
* Solution:       Rp_apc_d1
* Product family: virtex7
* Target device:  xc7vx485t-ffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  | 40.00 ns | 34.817 ns |   5.00 ns  |
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11| 0.440 us | 0.440 us |   11|   11|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Filter_Loop_Row_Loop  |        9|        9|         4|          2|          1|     4|    yes   |
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 4 
4 --> 5 
5 --> 2 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.18>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x float]* %max_pool_1_out_1), !map !7"   --->   Operation 7 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4 x float]* %max_pool_1_out_0), !map !14"   --->   Operation 8 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_3), !map !20"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_2), !map !27"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_1), !map !33"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([8 x float]* %conv_1_out_0), !map !38"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @max_pool_1_str) nounwind"   --->   Operation 13 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.18ns)   --->   "br label %1" [pooling.cpp:10]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.18>

State 2 <SV = 1> <Delay = 3.05>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i3 [ 0, %0 ], [ %add_ln10, %Row_Loop_end ]" [pooling.cpp:10]   --->   Operation 15 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%f_0 = phi i2 [ 0, %0 ], [ %select_ln28_17, %Row_Loop_end ]" [pooling.cpp:28]   --->   Operation 16 'phi' 'f_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%r_0 = phi i2 [ 0, %0 ], [ %r, %Row_Loop_end ]"   --->   Operation 17 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.86ns)   --->   "%icmp_ln10 = icmp eq i3 %indvar_flatten, -4" [pooling.cpp:10]   --->   Operation 18 'icmp' 'icmp_ln10' <Predicate = true> <Delay = 0.86> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (1.18ns)   --->   "%add_ln10 = add i3 %indvar_flatten, 1" [pooling.cpp:10]   --->   Operation 19 'add' 'add_ln10' <Predicate = true> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "br i1 %icmp_ln10, label %2, label %Row_Loop_begin" [pooling.cpp:10]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (1.00ns)   --->   "%f = add i2 1, %f_0" [pooling.cpp:10]   --->   Operation 21 'add' 'f' <Predicate = (!icmp_ln10)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.61ns)   --->   "%icmp_ln13 = icmp eq i2 %r_0, -2" [pooling.cpp:13]   --->   Operation 22 'icmp' 'icmp_ln13' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.62ns)   --->   "%select_ln28_16 = select i1 %icmp_ln13, i2 0, i2 %r_0" [pooling.cpp:28]   --->   Operation 23 'select' 'select_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.62ns)   --->   "%select_ln28_17 = select i1 %icmp_ln13, i2 %f, i2 %f_0" [pooling.cpp:28]   --->   Operation 24 'select' 'select_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln28 = zext i2 %select_ln28_17 to i64" [pooling.cpp:28]   --->   Operation 25 'zext' 'zext_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 26 'getelementptr' 'conv_1_out_0_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp = call i64 @_ssdm_op_BitConcatenate.i64.i62.i2(i62 1, i2 %select_ln28_17)" [pooling.cpp:28]   --->   Operation 27 'bitconcatenate' 'tmp' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_2 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %tmp" [pooling.cpp:28]   --->   Operation 28 'getelementptr' 'conv_1_out_0_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 29 'getelementptr' 'conv_1_out_1_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_2 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %tmp" [pooling.cpp:28]   --->   Operation 30 'getelementptr' 'conv_1_out_1_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 31 'getelementptr' 'conv_1_out_2_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_2 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %tmp" [pooling.cpp:28]   --->   Operation 32 'getelementptr' 'conv_1_out_2_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28" [pooling.cpp:28]   --->   Operation 33 'getelementptr' 'conv_1_out_3_addr' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_2 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %tmp" [pooling.cpp:28]   --->   Operation 34 'getelementptr' 'conv_1_out_3_addr_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%max_pool_1_out_0_ad = getelementptr [4 x float]* %max_pool_1_out_0, i64 0, i64 %zext_ln28" [pooling.cpp:35]   --->   Operation 35 'getelementptr' 'max_pool_1_out_0_ad' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%max_pool_1_out_1_ad = getelementptr [4 x float]* %max_pool_1_out_1, i64 0, i64 %zext_ln28" [pooling.cpp:35]   --->   Operation 36 'getelementptr' 'max_pool_1_out_1_ad' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln28 = trunc i2 %select_ln28_16 to i1" [pooling.cpp:28]   --->   Operation 37 'trunc' 'trunc_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 38 [2/2] (1.42ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pooling.cpp:28]   --->   Operation 38 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 39 [2/2] (1.42ns)   --->   "%conv_1_out_2_load = load float* %conv_1_out_2_addr, align 4" [pooling.cpp:28]   --->   Operation 39 'load' 'conv_1_out_2_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 40 [2/2] (1.42ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pooling.cpp:28]   --->   Operation 40 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 41 [2/2] (1.42ns)   --->   "%conv_1_out_3_load = load float* %conv_1_out_3_addr, align 4" [pooling.cpp:28]   --->   Operation 41 'load' 'conv_1_out_3_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "br i1 %trunc_ln28, label %branch110, label %branch07" [pooling.cpp:35]   --->   Operation 42 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_2 : Operation 43 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pooling.cpp:28]   --->   Operation 43 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 44 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_2 = load float* %conv_1_out_2_addr_2, align 4" [pooling.cpp:28]   --->   Operation 44 'load' 'conv_1_out_2_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 45 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pooling.cpp:28]   --->   Operation 45 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 46 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_2 = load float* %conv_1_out_3_addr_2, align 4" [pooling.cpp:28]   --->   Operation 46 'load' 'conv_1_out_3_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "br i1 %trunc_ln28, label %branch318, label %branch217" [pooling.cpp:35]   --->   Operation 47 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 18.4>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln28_1 = zext i2 %select_ln28_17 to i4" [pooling.cpp:28]   --->   Operation 48 'zext' 'zext_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln28_2 = zext i2 %select_ln28_17 to i3" [pooling.cpp:28]   --->   Operation 49 'zext' 'zext_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (1.18ns)   --->   "%add_ln28 = add i3 2, %zext_ln28_2" [pooling.cpp:28]   --->   Operation 50 'add' 'add_ln28' <Predicate = (!icmp_ln10)> <Delay = 1.18> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln28_3 = zext i3 %add_ln28 to i64" [pooling.cpp:28]   --->   Operation 51 'zext' 'zext_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_1 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_3" [pooling.cpp:28]   --->   Operation 52 'getelementptr' 'conv_1_out_0_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (1.36ns)   --->   "%add_ln28_1 = add i4 6, %zext_ln28_1" [pooling.cpp:28]   --->   Operation 53 'add' 'add_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln28_4 = zext i4 %add_ln28_1 to i64" [pooling.cpp:28]   --->   Operation 54 'zext' 'zext_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%conv_1_out_0_addr_3 = getelementptr [8 x float]* %conv_1_out_0, i64 0, i64 %zext_ln28_4" [pooling.cpp:28]   --->   Operation 55 'getelementptr' 'conv_1_out_0_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_1 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_3" [pooling.cpp:28]   --->   Operation 56 'getelementptr' 'conv_1_out_1_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%conv_1_out_1_addr_3 = getelementptr [8 x float]* %conv_1_out_1, i64 0, i64 %zext_ln28_4" [pooling.cpp:28]   --->   Operation 57 'getelementptr' 'conv_1_out_1_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_1 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28_3" [pooling.cpp:28]   --->   Operation 58 'getelementptr' 'conv_1_out_2_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%conv_1_out_2_addr_3 = getelementptr [8 x float]* %conv_1_out_2, i64 0, i64 %zext_ln28_4" [pooling.cpp:28]   --->   Operation 59 'getelementptr' 'conv_1_out_2_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_1 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28_3" [pooling.cpp:28]   --->   Operation 60 'getelementptr' 'conv_1_out_3_addr_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%conv_1_out_3_addr_3 = getelementptr [8 x float]* %conv_1_out_3, i64 0, i64 %zext_ln28_4" [pooling.cpp:28]   --->   Operation 61 'getelementptr' 'conv_1_out_3_addr_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%max_pool_1_out_0_ad_1 = getelementptr [4 x float]* %max_pool_1_out_0, i64 0, i64 %zext_ln28_3" [pooling.cpp:35]   --->   Operation 62 'getelementptr' 'max_pool_1_out_0_ad_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%max_pool_1_out_1_ad_1 = getelementptr [4 x float]* %max_pool_1_out_1, i64 0, i64 %zext_ln28_3" [pooling.cpp:35]   --->   Operation 63 'getelementptr' 'max_pool_1_out_1_ad_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str3) nounwind" [pooling.cpp:14]   --->   Operation 64 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%shl_ln28 = shl i2 %select_ln28_16, 1" [pooling.cpp:28]   --->   Operation 65 'shl' 'shl_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.61ns)   --->   "%icmp_ln28 = icmp eq i2 %shl_ln28, 0" [pooling.cpp:28]   --->   Operation 66 'icmp' 'icmp_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/2] (1.42ns)   --->   "%conv_1_out_0_load = load float* %conv_1_out_0_addr, align 4" [pooling.cpp:28]   --->   Operation 67 'load' 'conv_1_out_0_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 68 [1/2] (1.42ns)   --->   "%conv_1_out_2_load = load float* %conv_1_out_2_addr, align 4" [pooling.cpp:28]   --->   Operation 68 'load' 'conv_1_out_2_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 69 [1/1] (0.61ns)   --->   "%select_ln28_8 = select i1 %icmp_ln28, float %conv_1_out_0_load, float %conv_1_out_2_load" [pooling.cpp:28]   --->   Operation 69 'select' 'select_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%bitcast_ln28 = bitcast float %select_ln28_8 to i32" [pooling.cpp:28]   --->   Operation 70 'bitcast' 'bitcast_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 71 'partselect' 'tmp_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln28_1 = trunc i32 %bitcast_ln28 to i23" [pooling.cpp:28]   --->   Operation 72 'trunc' 'trunc_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (1.12ns)   --->   "%icmp_ln28_2 = icmp ne i8 %tmp_2, -1" [pooling.cpp:28]   --->   Operation 73 'icmp' 'icmp_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (1.48ns)   --->   "%icmp_ln28_3 = icmp eq i23 %trunc_ln28_1, 0" [pooling.cpp:28]   --->   Operation 74 'icmp' 'icmp_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%or_ln28_1 = or i1 %icmp_ln28_3, %icmp_ln28_2" [pooling.cpp:28]   --->   Operation 75 'or' 'or_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (15.7ns)   --->   "%tmp_3 = fcmp ogt float %select_ln28_8, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 76 'fcmp' 'tmp_3' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node select_ln28)   --->   "%and_ln28 = and i1 %or_ln28_1, %tmp_3" [pooling.cpp:28]   --->   Operation 77 'and' 'and_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28 = select i1 %and_ln28, float %select_ln28_8, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 78 'select' 'select_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pooling.cpp:28]   --->   Operation 79 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 80 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_1 = load float* %conv_1_out_2_addr_1, align 4" [pooling.cpp:28]   --->   Operation 80 'load' 'conv_1_out_2_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln28_1)   --->   "%or_ln28 = or i2 %shl_ln28, 1" [pooling.cpp:28]   --->   Operation 81 'or' 'or_ln28' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.61ns) (out node of the LUT)   --->   "%icmp_ln28_1 = icmp eq i2 %or_ln28, 1" [pooling.cpp:28]   --->   Operation 82 'icmp' 'icmp_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/2] (1.42ns)   --->   "%conv_1_out_1_load = load float* %conv_1_out_1_addr, align 4" [pooling.cpp:28]   --->   Operation 83 'load' 'conv_1_out_1_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 84 [1/2] (1.42ns)   --->   "%conv_1_out_3_load = load float* %conv_1_out_3_addr, align 4" [pooling.cpp:28]   --->   Operation 84 'load' 'conv_1_out_3_load' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 85 [1/1] (0.61ns)   --->   "%select_ln28_10 = select i1 %icmp_ln28_1, float %conv_1_out_1_load, float %conv_1_out_3_load" [pooling.cpp:28]   --->   Operation 85 'select' 'select_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 86 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pooling.cpp:28]   --->   Operation 86 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 87 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_1 = load float* %conv_1_out_3_addr_1, align 4" [pooling.cpp:28]   --->   Operation 87 'load' 'conv_1_out_3_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 88 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_2 = load float* %conv_1_out_0_addr_2, align 4" [pooling.cpp:28]   --->   Operation 88 'load' 'conv_1_out_0_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 89 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_2 = load float* %conv_1_out_2_addr_2, align 4" [pooling.cpp:28]   --->   Operation 89 'load' 'conv_1_out_2_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 90 [1/1] (0.61ns)   --->   "%select_ln28_12 = select i1 %icmp_ln28, float %conv_1_out_0_load_2, float %conv_1_out_2_load_2" [pooling.cpp:28]   --->   Operation 90 'select' 'select_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%bitcast_ln28_7 = bitcast float %select_ln28_12 to i32" [pooling.cpp:28]   --->   Operation 91 'bitcast' 'bitcast_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_7, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 92 'partselect' 'tmp_12' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln28_8 = trunc i32 %bitcast_ln28_7 to i23" [pooling.cpp:28]   --->   Operation 93 'trunc' 'trunc_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (1.12ns)   --->   "%icmp_ln28_16 = icmp ne i8 %tmp_12, -1" [pooling.cpp:28]   --->   Operation 94 'icmp' 'icmp_ln28_16' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (1.48ns)   --->   "%icmp_ln28_17 = icmp eq i23 %trunc_ln28_8, 0" [pooling.cpp:28]   --->   Operation 95 'icmp' 'icmp_ln28_17' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%or_ln28_8 = or i1 %icmp_ln28_17, %icmp_ln28_16" [pooling.cpp:28]   --->   Operation 96 'or' 'or_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (15.7ns)   --->   "%tmp_13 = fcmp ogt float %select_ln28_12, 0x3810000000000000" [pooling.cpp:28]   --->   Operation 97 'fcmp' 'tmp_13' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node select_ln28_4)   --->   "%and_ln28_7 = and i1 %or_ln28_8, %tmp_13" [pooling.cpp:28]   --->   Operation 98 'and' 'and_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_4 = select i1 %and_ln28_7, float %select_ln28_12, float 0x3810000000000000" [pooling.cpp:28]   --->   Operation 99 'select' 'select_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 100 [2/2] (1.42ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pooling.cpp:28]   --->   Operation 100 'load' 'conv_1_out_0_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 101 [2/2] (1.42ns)   --->   "%conv_1_out_2_load_3 = load float* %conv_1_out_2_addr_3, align 4" [pooling.cpp:28]   --->   Operation 101 'load' 'conv_1_out_2_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 102 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_2 = load float* %conv_1_out_1_addr_2, align 4" [pooling.cpp:28]   --->   Operation 102 'load' 'conv_1_out_1_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 103 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_2 = load float* %conv_1_out_3_addr_2, align 4" [pooling.cpp:28]   --->   Operation 103 'load' 'conv_1_out_3_load_2' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 104 [1/1] (0.61ns)   --->   "%select_ln28_14 = select i1 %icmp_ln28_1, float %conv_1_out_1_load_2, float %conv_1_out_3_load_2" [pooling.cpp:28]   --->   Operation 104 'select' 'select_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 105 [2/2] (1.42ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pooling.cpp:28]   --->   Operation 105 'load' 'conv_1_out_1_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 106 [2/2] (1.42ns)   --->   "%conv_1_out_3_load_3 = load float* %conv_1_out_3_addr_3, align 4" [pooling.cpp:28]   --->   Operation 106 'load' 'conv_1_out_3_load_3' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str3, i32 %tmp_1) nounwind" [pooling.cpp:37]   --->   Operation 107 'specregionend' 'empty' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (1.00ns)   --->   "%r = add i2 %select_ln28_16, 1" [pooling.cpp:13]   --->   Operation 108 'add' 'r' <Predicate = (!icmp_ln10)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 109 'br' <Predicate = (!icmp_ln10)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 34.8>
ST_4 : Operation 110 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_1 = load float* %conv_1_out_0_addr_1, align 4" [pooling.cpp:28]   --->   Operation 110 'load' 'conv_1_out_0_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 111 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_1 = load float* %conv_1_out_2_addr_1, align 4" [pooling.cpp:28]   --->   Operation 111 'load' 'conv_1_out_2_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 112 [1/1] (0.61ns)   --->   "%select_ln28_9 = select i1 %icmp_ln28, float %conv_1_out_0_load_1, float %conv_1_out_2_load_1" [pooling.cpp:28]   --->   Operation 112 'select' 'select_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%bitcast_ln28_1 = bitcast float %select_ln28_9 to i32" [pooling.cpp:28]   --->   Operation 113 'bitcast' 'bitcast_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_1, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 114 'partselect' 'tmp_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln28_2 = trunc i32 %bitcast_ln28_1 to i23" [pooling.cpp:28]   --->   Operation 115 'trunc' 'trunc_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%bitcast_ln28_2 = bitcast float %select_ln28 to i32" [pooling.cpp:28]   --->   Operation 116 'bitcast' 'bitcast_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_5 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_2, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 117 'partselect' 'tmp_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%trunc_ln28_3 = trunc i32 %bitcast_ln28_2 to i23" [pooling.cpp:28]   --->   Operation 118 'trunc' 'trunc_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (1.12ns)   --->   "%icmp_ln28_4 = icmp ne i8 %tmp_4, -1" [pooling.cpp:28]   --->   Operation 119 'icmp' 'icmp_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/1] (1.48ns)   --->   "%icmp_ln28_5 = icmp eq i23 %trunc_ln28_2, 0" [pooling.cpp:28]   --->   Operation 120 'icmp' 'icmp_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_2 = or i1 %icmp_ln28_5, %icmp_ln28_4" [pooling.cpp:28]   --->   Operation 121 'or' 'or_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 122 [1/1] (1.12ns)   --->   "%icmp_ln28_6 = icmp ne i8 %tmp_5, -1" [pooling.cpp:28]   --->   Operation 122 'icmp' 'icmp_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 123 [1/1] (1.48ns)   --->   "%icmp_ln28_7 = icmp eq i23 %trunc_ln28_3, 0" [pooling.cpp:28]   --->   Operation 123 'icmp' 'icmp_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%or_ln28_3 = or i1 %icmp_ln28_7, %icmp_ln28_6" [pooling.cpp:28]   --->   Operation 124 'or' 'or_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_2)   --->   "%and_ln28_1 = and i1 %or_ln28_2, %or_ln28_3" [pooling.cpp:28]   --->   Operation 125 'and' 'and_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 126 [1/1] (15.7ns)   --->   "%tmp_6 = fcmp ogt float %select_ln28_9, %select_ln28" [pooling.cpp:28]   --->   Operation 126 'fcmp' 'tmp_6' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 127 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_2 = and i1 %and_ln28_1, %tmp_6" [pooling.cpp:28]   --->   Operation 127 'and' 'and_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 128 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_1 = select i1 %and_ln28_2, float %select_ln28_9, float %select_ln28" [pooling.cpp:28]   --->   Operation 128 'select' 'select_ln28_1' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (15.7ns)   --->   "%tmp_9 = fcmp ogt float %select_ln28_10, %select_ln28_1" [pooling.cpp:28]   --->   Operation 129 'fcmp' 'tmp_9' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 130 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_1 = load float* %conv_1_out_1_addr_1, align 4" [pooling.cpp:28]   --->   Operation 130 'load' 'conv_1_out_1_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 131 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_1 = load float* %conv_1_out_3_addr_1, align 4" [pooling.cpp:28]   --->   Operation 131 'load' 'conv_1_out_3_load_1' <Predicate = (!icmp_ln10)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 132 [1/1] (0.61ns)   --->   "%select_ln28_11 = select i1 %icmp_ln28_1, float %conv_1_out_1_load_1, float %conv_1_out_3_load_1" [pooling.cpp:28]   --->   Operation 132 'select' 'select_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 133 [1/2] (1.42ns)   --->   "%conv_1_out_0_load_3 = load float* %conv_1_out_0_addr_3, align 4" [pooling.cpp:28]   --->   Operation 133 'load' 'conv_1_out_0_load_3' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 134 [1/2] (1.42ns)   --->   "%conv_1_out_2_load_3 = load float* %conv_1_out_2_addr_3, align 4" [pooling.cpp:28]   --->   Operation 134 'load' 'conv_1_out_2_load_3' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 135 [1/1] (0.61ns)   --->   "%select_ln28_13 = select i1 %icmp_ln28, float %conv_1_out_0_load_3, float %conv_1_out_2_load_3" [pooling.cpp:28]   --->   Operation 135 'select' 'select_ln28_13' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%bitcast_ln28_8 = bitcast float %select_ln28_13 to i32" [pooling.cpp:28]   --->   Operation 136 'bitcast' 'bitcast_ln28_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_8, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 137 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%trunc_ln28_9 = trunc i32 %bitcast_ln28_8 to i23" [pooling.cpp:28]   --->   Operation 138 'trunc' 'trunc_ln28_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%bitcast_ln28_9 = bitcast float %select_ln28_4 to i32" [pooling.cpp:28]   --->   Operation 139 'bitcast' 'bitcast_ln28_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_9, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 140 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%trunc_ln28_10 = trunc i32 %bitcast_ln28_9 to i23" [pooling.cpp:28]   --->   Operation 141 'trunc' 'trunc_ln28_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (1.12ns)   --->   "%icmp_ln28_18 = icmp ne i8 %tmp_14, -1" [pooling.cpp:28]   --->   Operation 142 'icmp' 'icmp_ln28_18' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 143 [1/1] (1.48ns)   --->   "%icmp_ln28_19 = icmp eq i23 %trunc_ln28_9, 0" [pooling.cpp:28]   --->   Operation 143 'icmp' 'icmp_ln28_19' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_9 = or i1 %icmp_ln28_19, %icmp_ln28_18" [pooling.cpp:28]   --->   Operation 144 'or' 'or_ln28_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 145 [1/1] (1.12ns)   --->   "%icmp_ln28_20 = icmp ne i8 %tmp_15, -1" [pooling.cpp:28]   --->   Operation 145 'icmp' 'icmp_ln28_20' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 146 [1/1] (1.48ns)   --->   "%icmp_ln28_21 = icmp eq i23 %trunc_ln28_10, 0" [pooling.cpp:28]   --->   Operation 146 'icmp' 'icmp_ln28_21' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%or_ln28_10 = or i1 %icmp_ln28_21, %icmp_ln28_20" [pooling.cpp:28]   --->   Operation 147 'or' 'or_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_9)   --->   "%and_ln28_8 = and i1 %or_ln28_9, %or_ln28_10" [pooling.cpp:28]   --->   Operation 148 'and' 'and_ln28_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 149 [1/1] (15.7ns)   --->   "%tmp_16 = fcmp ogt float %select_ln28_13, %select_ln28_4" [pooling.cpp:28]   --->   Operation 149 'fcmp' 'tmp_16' <Predicate = true> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 150 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_9 = and i1 %and_ln28_8, %tmp_16" [pooling.cpp:28]   --->   Operation 150 'and' 'and_ln28_9' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 151 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_5 = select i1 %and_ln28_9, float %select_ln28_13, float %select_ln28_4" [pooling.cpp:28]   --->   Operation 151 'select' 'select_ln28_5' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 152 [1/1] (15.7ns)   --->   "%tmp_19 = fcmp ogt float %select_ln28_14, %select_ln28_5" [pooling.cpp:28]   --->   Operation 152 'fcmp' 'tmp_19' <Predicate = true> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 153 [1/2] (1.42ns)   --->   "%conv_1_out_1_load_3 = load float* %conv_1_out_1_addr_3, align 4" [pooling.cpp:28]   --->   Operation 153 'load' 'conv_1_out_1_load_3' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 154 [1/2] (1.42ns)   --->   "%conv_1_out_3_load_3 = load float* %conv_1_out_3_addr_3, align 4" [pooling.cpp:28]   --->   Operation 154 'load' 'conv_1_out_3_load_3' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_4 : Operation 155 [1/1] (0.61ns)   --->   "%select_ln28_15 = select i1 %icmp_ln28_1, float %conv_1_out_1_load_3, float %conv_1_out_3_load_3" [pooling.cpp:28]   --->   Operation 155 'select' 'select_ln28_15' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 21.1>
ST_5 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @Filter_Loop_Row_Loop)"   --->   Operation 156 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 157 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 157 'speclooptripcount' 'empty_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str3) nounwind" [pooling.cpp:14]   --->   Operation 158 'specloopname' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [pooling.cpp:15]   --->   Operation 159 'specpipeline' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 160 [1/1] (0.00ns)   --->   "%bitcast_ln28_3 = bitcast float %select_ln28_10 to i32" [pooling.cpp:28]   --->   Operation 160 'bitcast' 'bitcast_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_7 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_3, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 161 'partselect' 'tmp_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 162 [1/1] (0.00ns)   --->   "%trunc_ln28_4 = trunc i32 %bitcast_ln28_3 to i23" [pooling.cpp:28]   --->   Operation 162 'trunc' 'trunc_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "%bitcast_ln28_4 = bitcast float %select_ln28_1 to i32" [pooling.cpp:28]   --->   Operation 163 'bitcast' 'bitcast_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_4, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 164 'partselect' 'tmp_8' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln28_5 = trunc i32 %bitcast_ln28_4 to i23" [pooling.cpp:28]   --->   Operation 165 'trunc' 'trunc_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 166 [1/1] (1.12ns)   --->   "%icmp_ln28_8 = icmp ne i8 %tmp_7, -1" [pooling.cpp:28]   --->   Operation 166 'icmp' 'icmp_ln28_8' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 167 [1/1] (1.48ns)   --->   "%icmp_ln28_9 = icmp eq i23 %trunc_ln28_4, 0" [pooling.cpp:28]   --->   Operation 167 'icmp' 'icmp_ln28_9' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_4 = or i1 %icmp_ln28_9, %icmp_ln28_8" [pooling.cpp:28]   --->   Operation 168 'or' 'or_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 169 [1/1] (1.12ns)   --->   "%icmp_ln28_10 = icmp ne i8 %tmp_8, -1" [pooling.cpp:28]   --->   Operation 169 'icmp' 'icmp_ln28_10' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 170 [1/1] (1.48ns)   --->   "%icmp_ln28_11 = icmp eq i23 %trunc_ln28_5, 0" [pooling.cpp:28]   --->   Operation 170 'icmp' 'icmp_ln28_11' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%or_ln28_5 = or i1 %icmp_ln28_11, %icmp_ln28_10" [pooling.cpp:28]   --->   Operation 171 'or' 'or_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_4)   --->   "%and_ln28_3 = and i1 %or_ln28_4, %or_ln28_5" [pooling.cpp:28]   --->   Operation 172 'and' 'and_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 173 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_4 = and i1 %and_ln28_3, %tmp_9" [pooling.cpp:28]   --->   Operation 173 'and' 'and_ln28_4' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 174 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_2 = select i1 %and_ln28_4, float %select_ln28_10, float %select_ln28_1" [pooling.cpp:28]   --->   Operation 174 'select' 'select_ln28_2' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 175 [1/1] (0.00ns)   --->   "%bitcast_ln28_5 = bitcast float %select_ln28_11 to i32" [pooling.cpp:28]   --->   Operation 175 'bitcast' 'bitcast_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_s = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_5, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 176 'partselect' 'tmp_s' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 177 [1/1] (0.00ns)   --->   "%trunc_ln28_6 = trunc i32 %bitcast_ln28_5 to i23" [pooling.cpp:28]   --->   Operation 177 'trunc' 'trunc_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 178 [1/1] (0.00ns)   --->   "%bitcast_ln28_6 = bitcast float %select_ln28_2 to i32" [pooling.cpp:28]   --->   Operation 178 'bitcast' 'bitcast_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 179 [1/1] (0.00ns)   --->   "%tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_6, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 179 'partselect' 'tmp_10' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 180 [1/1] (0.00ns)   --->   "%trunc_ln28_7 = trunc i32 %bitcast_ln28_6 to i23" [pooling.cpp:28]   --->   Operation 180 'trunc' 'trunc_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00>
ST_5 : Operation 181 [1/1] (1.12ns)   --->   "%icmp_ln28_12 = icmp ne i8 %tmp_s, -1" [pooling.cpp:28]   --->   Operation 181 'icmp' 'icmp_ln28_12' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 182 [1/1] (1.48ns)   --->   "%icmp_ln28_13 = icmp eq i23 %trunc_ln28_6, 0" [pooling.cpp:28]   --->   Operation 182 'icmp' 'icmp_ln28_13' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 183 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_6 = or i1 %icmp_ln28_13, %icmp_ln28_12" [pooling.cpp:28]   --->   Operation 183 'or' 'or_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 184 [1/1] (1.12ns)   --->   "%icmp_ln28_14 = icmp ne i8 %tmp_10, -1" [pooling.cpp:28]   --->   Operation 184 'icmp' 'icmp_ln28_14' <Predicate = (!icmp_ln10)> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 185 [1/1] (1.48ns)   --->   "%icmp_ln28_15 = icmp eq i23 %trunc_ln28_7, 0" [pooling.cpp:28]   --->   Operation 185 'icmp' 'icmp_ln28_15' <Predicate = (!icmp_ln10)> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%or_ln28_7 = or i1 %icmp_ln28_15, %icmp_ln28_14" [pooling.cpp:28]   --->   Operation 186 'or' 'or_ln28_7' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 187 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_6)   --->   "%and_ln28_5 = and i1 %or_ln28_6, %or_ln28_7" [pooling.cpp:28]   --->   Operation 187 'and' 'and_ln28_5' <Predicate = (!icmp_ln10)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 188 [1/1] (15.7ns)   --->   "%tmp_11 = fcmp ogt float %select_ln28_11, %select_ln28_2" [pooling.cpp:28]   --->   Operation 188 'fcmp' 'tmp_11' <Predicate = (!icmp_ln10)> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 189 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_6 = and i1 %and_ln28_5, %tmp_11" [pooling.cpp:28]   --->   Operation 189 'and' 'and_ln28_6' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 190 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_3 = select i1 %and_ln28_6, float %select_ln28_11, float %select_ln28_2" [pooling.cpp:28]   --->   Operation 190 'select' 'select_ln28_3' <Predicate = (!icmp_ln10)> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 191 [1/1] (1.42ns)   --->   "store float %select_ln28_3, float* %max_pool_1_out_0_ad, align 4" [pooling.cpp:35]   --->   Operation 191 'store' <Predicate = (!trunc_ln28)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 192 [1/1] (0.00ns)   --->   "br label %._crit_edge.0.1.16_ifconv" [pooling.cpp:35]   --->   Operation 192 'br' <Predicate = (!trunc_ln28)> <Delay = 0.00>
ST_5 : Operation 193 [1/1] (1.42ns)   --->   "store float %select_ln28_3, float* %max_pool_1_out_1_ad, align 4" [pooling.cpp:35]   --->   Operation 193 'store' <Predicate = (trunc_ln28)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 194 [1/1] (0.00ns)   --->   "br label %._crit_edge.0.1.16_ifconv" [pooling.cpp:35]   --->   Operation 194 'br' <Predicate = (trunc_ln28)> <Delay = 0.00>
ST_5 : Operation 195 [1/1] (0.00ns)   --->   "%bitcast_ln28_10 = bitcast float %select_ln28_14 to i32" [pooling.cpp:28]   --->   Operation 195 'bitcast' 'bitcast_ln28_10' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 196 [1/1] (0.00ns)   --->   "%tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_10, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 196 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 197 [1/1] (0.00ns)   --->   "%trunc_ln28_11 = trunc i32 %bitcast_ln28_10 to i23" [pooling.cpp:28]   --->   Operation 197 'trunc' 'trunc_ln28_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 198 [1/1] (0.00ns)   --->   "%bitcast_ln28_11 = bitcast float %select_ln28_5 to i32" [pooling.cpp:28]   --->   Operation 198 'bitcast' 'bitcast_ln28_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 199 [1/1] (0.00ns)   --->   "%tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_11, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 199 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln28_12 = trunc i32 %bitcast_ln28_11 to i23" [pooling.cpp:28]   --->   Operation 200 'trunc' 'trunc_ln28_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 201 [1/1] (1.12ns)   --->   "%icmp_ln28_22 = icmp ne i8 %tmp_17, -1" [pooling.cpp:28]   --->   Operation 201 'icmp' 'icmp_ln28_22' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 202 [1/1] (1.48ns)   --->   "%icmp_ln28_23 = icmp eq i23 %trunc_ln28_11, 0" [pooling.cpp:28]   --->   Operation 202 'icmp' 'icmp_ln28_23' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_11 = or i1 %icmp_ln28_23, %icmp_ln28_22" [pooling.cpp:28]   --->   Operation 203 'or' 'or_ln28_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 204 [1/1] (1.12ns)   --->   "%icmp_ln28_24 = icmp ne i8 %tmp_18, -1" [pooling.cpp:28]   --->   Operation 204 'icmp' 'icmp_ln28_24' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 205 [1/1] (1.48ns)   --->   "%icmp_ln28_25 = icmp eq i23 %trunc_ln28_12, 0" [pooling.cpp:28]   --->   Operation 205 'icmp' 'icmp_ln28_25' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%or_ln28_12 = or i1 %icmp_ln28_25, %icmp_ln28_24" [pooling.cpp:28]   --->   Operation 206 'or' 'or_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_11)   --->   "%and_ln28_10 = and i1 %or_ln28_11, %or_ln28_12" [pooling.cpp:28]   --->   Operation 207 'and' 'and_ln28_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 208 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_11 = and i1 %and_ln28_10, %tmp_19" [pooling.cpp:28]   --->   Operation 208 'and' 'and_ln28_11' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 209 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_6 = select i1 %and_ln28_11, float %select_ln28_14, float %select_ln28_5" [pooling.cpp:28]   --->   Operation 209 'select' 'select_ln28_6' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 210 [1/1] (0.00ns)   --->   "%bitcast_ln28_12 = bitcast float %select_ln28_15 to i32" [pooling.cpp:28]   --->   Operation 210 'bitcast' 'bitcast_ln28_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 211 [1/1] (0.00ns)   --->   "%tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_12, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 211 'partselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln28_13 = trunc i32 %bitcast_ln28_12 to i23" [pooling.cpp:28]   --->   Operation 212 'trunc' 'trunc_ln28_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 213 [1/1] (0.00ns)   --->   "%bitcast_ln28_13 = bitcast float %select_ln28_6 to i32" [pooling.cpp:28]   --->   Operation 213 'bitcast' 'bitcast_ln28_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 214 [1/1] (0.00ns)   --->   "%tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %bitcast_ln28_13, i32 23, i32 30)" [pooling.cpp:28]   --->   Operation 214 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 215 [1/1] (0.00ns)   --->   "%trunc_ln28_14 = trunc i32 %bitcast_ln28_13 to i23" [pooling.cpp:28]   --->   Operation 215 'trunc' 'trunc_ln28_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 216 [1/1] (1.12ns)   --->   "%icmp_ln28_26 = icmp ne i8 %tmp_20, -1" [pooling.cpp:28]   --->   Operation 216 'icmp' 'icmp_ln28_26' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 217 [1/1] (1.48ns)   --->   "%icmp_ln28_27 = icmp eq i23 %trunc_ln28_13, 0" [pooling.cpp:28]   --->   Operation 217 'icmp' 'icmp_ln28_27' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_13 = or i1 %icmp_ln28_27, %icmp_ln28_26" [pooling.cpp:28]   --->   Operation 218 'or' 'or_ln28_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 219 [1/1] (1.12ns)   --->   "%icmp_ln28_28 = icmp ne i8 %tmp_21, -1" [pooling.cpp:28]   --->   Operation 219 'icmp' 'icmp_ln28_28' <Predicate = true> <Delay = 1.12> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 220 [1/1] (1.48ns)   --->   "%icmp_ln28_29 = icmp eq i23 %trunc_ln28_14, 0" [pooling.cpp:28]   --->   Operation 220 'icmp' 'icmp_ln28_29' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%or_ln28_14 = or i1 %icmp_ln28_29, %icmp_ln28_28" [pooling.cpp:28]   --->   Operation 221 'or' 'or_ln28_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 222 [1/1] (0.00ns) (grouped into LUT with out node and_ln28_13)   --->   "%and_ln28_12 = and i1 %or_ln28_13, %or_ln28_14" [pooling.cpp:28]   --->   Operation 222 'and' 'and_ln28_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 223 [1/1] (15.7ns)   --->   "%tmp_22 = fcmp ogt float %select_ln28_15, %select_ln28_6" [pooling.cpp:28]   --->   Operation 223 'fcmp' 'tmp_22' <Predicate = true> <Delay = 15.7> <Core = "FCmp">   --->   Core 111 'FCmp' <Latency = 0> <II = 1> <Delay = 15.7> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 224 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln28_13 = and i1 %and_ln28_12, %tmp_22" [pooling.cpp:28]   --->   Operation 224 'and' 'and_ln28_13' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 225 [1/1] (0.61ns) (out node of the LUT)   --->   "%select_ln28_7 = select i1 %and_ln28_13, float %select_ln28_15, float %select_ln28_6" [pooling.cpp:28]   --->   Operation 225 'select' 'select_ln28_7' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 226 [1/1] (1.42ns)   --->   "store float %select_ln28_7, float* %max_pool_1_out_0_ad_1, align 4" [pooling.cpp:35]   --->   Operation 226 'store' <Predicate = (!trunc_ln28)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 227 [1/1] (0.00ns)   --->   "br label %Row_Loop_end" [pooling.cpp:35]   --->   Operation 227 'br' <Predicate = (!trunc_ln28)> <Delay = 0.00>
ST_5 : Operation 228 [1/1] (1.42ns)   --->   "store float %select_ln28_7, float* %max_pool_1_out_1_ad_1, align 4" [pooling.cpp:35]   --->   Operation 228 'store' <Predicate = (trunc_ln28)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.42> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 4> <RAM>
ST_5 : Operation 229 [1/1] (0.00ns)   --->   "br label %Row_Loop_end" [pooling.cpp:35]   --->   Operation 229 'br' <Predicate = (trunc_ln28)> <Delay = 0.00>

State 6 <SV = 2> <Delay = 0.00>
ST_6 : Operation 230 [1/1] (0.00ns)   --->   "ret void" [pooling.cpp:39]   --->   Operation 230 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 40ns, clock uncertainty: 5ns.

 <State 1>: 1.18ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', pooling.cpp:10) with incoming values : ('add_ln10', pooling.cpp:10) [16]  (1.18 ns)

 <State 2>: 3.06ns
The critical path consists of the following:
	'phi' operation ('f_0', pooling.cpp:28) with incoming values : ('select_ln28_17', pooling.cpp:28) [17]  (0 ns)
	'add' operation ('f', pooling.cpp:10) [23]  (1.01 ns)
	'select' operation ('select_ln28_17', pooling.cpp:28) [28]  (0.625 ns)
	'getelementptr' operation ('conv_1_out_0_addr_2', pooling.cpp:28) [37]  (0 ns)
	'load' operation ('conv_1_out_0_load_2', pooling.cpp:28) on array 'conv_1_out_0' [142]  (1.43 ns)

 <State 3>: 18.4ns
The critical path consists of the following:
	'load' operation ('conv_1_out_0_load', pooling.cpp:28) on array 'conv_1_out_0' [63]  (1.43 ns)
	'select' operation ('select_ln28_8', pooling.cpp:28) [65]  (0.613 ns)
	'fcmp' operation ('tmp_3', pooling.cpp:28) [72]  (15.8 ns)
	'and' operation ('and_ln28', pooling.cpp:28) [73]  (0 ns)
	'select' operation ('select_ln28', pooling.cpp:28) [74]  (0.616 ns)

 <State 4>: 34.8ns
The critical path consists of the following:
	'load' operation ('conv_1_out_0_load_1', pooling.cpp:28) on array 'conv_1_out_0' [75]  (1.43 ns)
	'select' operation ('select_ln28_9', pooling.cpp:28) [77]  (0.613 ns)
	'fcmp' operation ('tmp_6', pooling.cpp:28) [91]  (15.8 ns)
	'and' operation ('and_ln28_2', pooling.cpp:28) [92]  (0.616 ns)
	'select' operation ('select_ln28_1', pooling.cpp:28) [93]  (0.613 ns)
	'fcmp' operation ('tmp_9', pooling.cpp:28) [112]  (15.8 ns)

 <State 5>: 21.1ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln28_9', pooling.cpp:28) [106]  (1.49 ns)
	'or' operation ('or_ln28_4', pooling.cpp:28) [107]  (0 ns)
	'and' operation ('and_ln28_3', pooling.cpp:28) [111]  (0 ns)
	'and' operation ('and_ln28_4', pooling.cpp:28) [113]  (0.616 ns)
	'select' operation ('select_ln28_2', pooling.cpp:28) [114]  (0.613 ns)
	'fcmp' operation ('tmp_11', pooling.cpp:28) [131]  (15.8 ns)
	'and' operation ('and_ln28_6', pooling.cpp:28) [132]  (0.616 ns)
	'select' operation ('select_ln28_3', pooling.cpp:28) [133]  (0.613 ns)
	'store' operation ('store_ln35', pooling.cpp:35) of variable 'select_ln28_3', pooling.cpp:28 on array 'max_pool_1_out_1' [139]  (1.43 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
