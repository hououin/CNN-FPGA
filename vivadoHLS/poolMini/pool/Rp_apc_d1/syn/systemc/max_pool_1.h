// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _max_pool_1_HH_
#define _max_pool_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "max_pool_1_fcmp_3bkb.h"

namespace ap_rtl {

struct max_pool_1 : public sc_module {
    // Port declarations 46
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > conv_1_out_0_address0;
    sc_out< sc_logic > conv_1_out_0_ce0;
    sc_in< sc_lv<32> > conv_1_out_0_q0;
    sc_out< sc_lv<3> > conv_1_out_0_address1;
    sc_out< sc_logic > conv_1_out_0_ce1;
    sc_in< sc_lv<32> > conv_1_out_0_q1;
    sc_out< sc_lv<3> > conv_1_out_1_address0;
    sc_out< sc_logic > conv_1_out_1_ce0;
    sc_in< sc_lv<32> > conv_1_out_1_q0;
    sc_out< sc_lv<3> > conv_1_out_1_address1;
    sc_out< sc_logic > conv_1_out_1_ce1;
    sc_in< sc_lv<32> > conv_1_out_1_q1;
    sc_out< sc_lv<3> > conv_1_out_2_address0;
    sc_out< sc_logic > conv_1_out_2_ce0;
    sc_in< sc_lv<32> > conv_1_out_2_q0;
    sc_out< sc_lv<3> > conv_1_out_2_address1;
    sc_out< sc_logic > conv_1_out_2_ce1;
    sc_in< sc_lv<32> > conv_1_out_2_q1;
    sc_out< sc_lv<3> > conv_1_out_3_address0;
    sc_out< sc_logic > conv_1_out_3_ce0;
    sc_in< sc_lv<32> > conv_1_out_3_q0;
    sc_out< sc_lv<3> > conv_1_out_3_address1;
    sc_out< sc_logic > conv_1_out_3_ce1;
    sc_in< sc_lv<32> > conv_1_out_3_q1;
    sc_out< sc_lv<2> > max_pool_1_out_0_address0;
    sc_out< sc_logic > max_pool_1_out_0_ce0;
    sc_out< sc_logic > max_pool_1_out_0_we0;
    sc_out< sc_lv<32> > max_pool_1_out_0_d0;
    sc_out< sc_lv<2> > max_pool_1_out_0_address1;
    sc_out< sc_logic > max_pool_1_out_0_ce1;
    sc_out< sc_logic > max_pool_1_out_0_we1;
    sc_out< sc_lv<32> > max_pool_1_out_0_d1;
    sc_out< sc_lv<2> > max_pool_1_out_1_address0;
    sc_out< sc_logic > max_pool_1_out_1_ce0;
    sc_out< sc_logic > max_pool_1_out_1_we0;
    sc_out< sc_lv<32> > max_pool_1_out_1_d0;
    sc_out< sc_lv<2> > max_pool_1_out_1_address1;
    sc_out< sc_logic > max_pool_1_out_1_ce1;
    sc_out< sc_logic > max_pool_1_out_1_we1;
    sc_out< sc_lv<32> > max_pool_1_out_1_d1;
    sc_signal< sc_lv<5> > ap_var_for_const0;


    // Module declarations
    max_pool_1(sc_module_name name);
    SC_HAS_PROCESS(max_pool_1);

    ~max_pool_1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U1;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U2;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U3;
    max_pool_1_fcmp_3bkb<1,1,32,32,1>* max_pool_1_fcmp_3bkb_U4;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > indvar_flatten_reg_286;
    sc_signal< sc_lv<2> > f_0_reg_297;
    sc_signal< sc_lv<2> > r_0_reg_308;
    sc_signal< sc_lv<1> > icmp_ln10_fu_368_p2;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1144;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln10_reg_1144_pp0_iter1_reg;
    sc_signal< sc_lv<3> > add_ln10_fu_374_p2;
    sc_signal< sc_lv<3> > add_ln10_reg_1148;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > select_ln28_16_fu_392_p3;
    sc_signal< sc_lv<2> > select_ln28_16_reg_1153;
    sc_signal< sc_lv<2> > select_ln28_17_fu_400_p3;
    sc_signal< sc_lv<2> > select_ln28_17_reg_1159;
    sc_signal< sc_lv<2> > max_pool_1_out_0_ad_reg_1206;
    sc_signal< sc_lv<2> > max_pool_1_out_0_ad_reg_1206_pp0_iter1_reg;
    sc_signal< sc_lv<2> > max_pool_1_out_1_ad_reg_1211;
    sc_signal< sc_lv<2> > max_pool_1_out_1_ad_reg_1211_pp0_iter1_reg;
    sc_signal< sc_lv<1> > trunc_ln28_fu_430_p1;
    sc_signal< sc_lv<1> > trunc_ln28_reg_1216;
    sc_signal< sc_lv<1> > trunc_ln28_reg_1216_pp0_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<2> > max_pool_1_out_0_ad_1_reg_1260;
    sc_signal< sc_lv<2> > max_pool_1_out_1_ad_1_reg_1265;
    sc_signal< sc_lv<1> > icmp_ln28_fu_475_p2;
    sc_signal< sc_lv<1> > icmp_ln28_reg_1270;
    sc_signal< sc_lv<32> > select_ln28_fu_525_p3;
    sc_signal< sc_lv<32> > select_ln28_reg_1276;
    sc_signal< sc_lv<1> > icmp_ln28_1_fu_539_p2;
    sc_signal< sc_lv<1> > icmp_ln28_1_reg_1283;
    sc_signal< sc_lv<32> > grp_fu_345_p3;
    sc_signal< sc_lv<32> > select_ln28_10_reg_1289;
    sc_signal< sc_lv<32> > select_ln28_4_fu_589_p3;
    sc_signal< sc_lv<32> > select_ln28_4_reg_1296;
    sc_signal< sc_lv<32> > grp_fu_361_p3;
    sc_signal< sc_lv<32> > select_ln28_14_reg_1303;
    sc_signal< sc_lv<2> > r_fu_597_p2;
    sc_signal< sc_lv<2> > r_reg_1310;
    sc_signal< sc_lv<32> > select_ln28_1_fu_685_p3;
    sc_signal< sc_lv<32> > select_ln28_1_reg_1315;
    sc_signal< sc_lv<1> > grp_fu_324_p2;
    sc_signal< sc_lv<1> > tmp_9_reg_1321;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > select_ln28_11_reg_1326;
    sc_signal< sc_lv<32> > select_ln28_5_fu_776_p3;
    sc_signal< sc_lv<32> > select_ln28_5_reg_1333;
    sc_signal< sc_lv<1> > grp_fu_333_p2;
    sc_signal< sc_lv<1> > tmp_19_reg_1339;
    sc_signal< sc_lv<32> > select_ln28_15_reg_1344;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<3> > ap_phi_mux_indvar_flatten_phi_fu_290_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > ap_phi_mux_f_0_phi_fu_301_p4;
    sc_signal< sc_lv<2> > ap_phi_mux_r_0_phi_fu_312_p4;
    sc_signal< sc_lv<64> > zext_ln28_fu_408_p1;
    sc_signal< sc_lv<64> > tmp_fu_418_p3;
    sc_signal< sc_lv<64> > zext_ln28_3_fu_446_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<64> > zext_ln28_4_fu_462_p1;
    sc_signal< sc_lv<32> > select_ln28_3_fu_955_p3;
    sc_signal< sc_lv<32> > select_ln28_7_fu_1135_p3;
    sc_signal< sc_lv<32> > grp_fu_337_p3;
    sc_signal< sc_lv<32> > grp_fu_319_p1;
    sc_signal< sc_lv<32> > grp_fu_324_p0;
    sc_signal< sc_lv<32> > grp_fu_352_p3;
    sc_signal< sc_lv<32> > grp_fu_324_p1;
    sc_signal< sc_lv<32> > grp_fu_329_p0;
    sc_signal< sc_lv<32> > grp_fu_329_p1;
    sc_signal< sc_lv<32> > select_ln28_2_fu_865_p3;
    sc_signal< sc_lv<32> > grp_fu_333_p0;
    sc_signal< sc_lv<32> > grp_fu_333_p1;
    sc_signal< sc_lv<32> > select_ln28_6_fu_1045_p3;
    sc_signal< sc_lv<1> > grp_fu_337_p0;
    sc_signal< sc_lv<1> > grp_fu_345_p0;
    sc_signal< sc_lv<1> > grp_fu_352_p0;
    sc_signal< sc_lv<1> > grp_fu_361_p0;
    sc_signal< sc_lv<1> > icmp_ln13_fu_386_p2;
    sc_signal< sc_lv<2> > f_fu_380_p2;
    sc_signal< sc_lv<3> > zext_ln28_2_fu_437_p1;
    sc_signal< sc_lv<3> > add_ln28_fu_440_p2;
    sc_signal< sc_lv<4> > zext_ln28_1_fu_434_p1;
    sc_signal< sc_lv<4> > add_ln28_1_fu_456_p2;
    sc_signal< sc_lv<2> > shl_ln28_fu_470_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_483_p1;
    sc_signal< sc_lv<8> > tmp_2_fu_487_p4;
    sc_signal< sc_lv<23> > trunc_ln28_1_fu_497_p1;
    sc_signal< sc_lv<1> > icmp_ln28_3_fu_507_p2;
    sc_signal< sc_lv<1> > icmp_ln28_2_fu_501_p2;
    sc_signal< sc_lv<1> > or_ln28_1_fu_513_p2;
    sc_signal< sc_lv<1> > grp_fu_319_p2;
    sc_signal< sc_lv<1> > and_ln28_fu_519_p2;
    sc_signal< sc_lv<2> > or_ln28_fu_533_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_7_fu_547_p1;
    sc_signal< sc_lv<8> > tmp_12_fu_551_p4;
    sc_signal< sc_lv<23> > trunc_ln28_8_fu_561_p1;
    sc_signal< sc_lv<1> > icmp_ln28_17_fu_571_p2;
    sc_signal< sc_lv<1> > icmp_ln28_16_fu_565_p2;
    sc_signal< sc_lv<1> > or_ln28_8_fu_577_p2;
    sc_signal< sc_lv<1> > and_ln28_7_fu_583_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_602_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_2_fu_620_p1;
    sc_signal< sc_lv<8> > tmp_4_fu_606_p4;
    sc_signal< sc_lv<23> > trunc_ln28_2_fu_616_p1;
    sc_signal< sc_lv<1> > icmp_ln28_5_fu_643_p2;
    sc_signal< sc_lv<1> > icmp_ln28_4_fu_637_p2;
    sc_signal< sc_lv<8> > tmp_5_fu_623_p4;
    sc_signal< sc_lv<23> > trunc_ln28_3_fu_633_p1;
    sc_signal< sc_lv<1> > icmp_ln28_7_fu_661_p2;
    sc_signal< sc_lv<1> > icmp_ln28_6_fu_655_p2;
    sc_signal< sc_lv<1> > or_ln28_2_fu_649_p2;
    sc_signal< sc_lv<1> > or_ln28_3_fu_667_p2;
    sc_signal< sc_lv<1> > and_ln28_1_fu_673_p2;
    sc_signal< sc_lv<1> > and_ln28_2_fu_679_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_8_fu_693_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_9_fu_711_p1;
    sc_signal< sc_lv<8> > tmp_14_fu_697_p4;
    sc_signal< sc_lv<23> > trunc_ln28_9_fu_707_p1;
    sc_signal< sc_lv<1> > icmp_ln28_19_fu_734_p2;
    sc_signal< sc_lv<1> > icmp_ln28_18_fu_728_p2;
    sc_signal< sc_lv<8> > tmp_15_fu_714_p4;
    sc_signal< sc_lv<23> > trunc_ln28_10_fu_724_p1;
    sc_signal< sc_lv<1> > icmp_ln28_21_fu_752_p2;
    sc_signal< sc_lv<1> > icmp_ln28_20_fu_746_p2;
    sc_signal< sc_lv<1> > or_ln28_9_fu_740_p2;
    sc_signal< sc_lv<1> > or_ln28_10_fu_758_p2;
    sc_signal< sc_lv<1> > and_ln28_8_fu_764_p2;
    sc_signal< sc_lv<1> > grp_fu_329_p2;
    sc_signal< sc_lv<1> > and_ln28_9_fu_770_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_3_fu_784_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_4_fu_801_p1;
    sc_signal< sc_lv<8> > tmp_7_fu_787_p4;
    sc_signal< sc_lv<23> > trunc_ln28_4_fu_797_p1;
    sc_signal< sc_lv<1> > icmp_ln28_9_fu_824_p2;
    sc_signal< sc_lv<1> > icmp_ln28_8_fu_818_p2;
    sc_signal< sc_lv<8> > tmp_8_fu_804_p4;
    sc_signal< sc_lv<23> > trunc_ln28_5_fu_814_p1;
    sc_signal< sc_lv<1> > icmp_ln28_11_fu_842_p2;
    sc_signal< sc_lv<1> > icmp_ln28_10_fu_836_p2;
    sc_signal< sc_lv<1> > or_ln28_4_fu_830_p2;
    sc_signal< sc_lv<1> > or_ln28_5_fu_848_p2;
    sc_signal< sc_lv<1> > and_ln28_3_fu_854_p2;
    sc_signal< sc_lv<1> > and_ln28_4_fu_860_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_5_fu_872_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_6_fu_889_p1;
    sc_signal< sc_lv<8> > tmp_s_fu_875_p4;
    sc_signal< sc_lv<23> > trunc_ln28_6_fu_885_p1;
    sc_signal< sc_lv<1> > icmp_ln28_13_fu_913_p2;
    sc_signal< sc_lv<1> > icmp_ln28_12_fu_907_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_893_p4;
    sc_signal< sc_lv<23> > trunc_ln28_7_fu_903_p1;
    sc_signal< sc_lv<1> > icmp_ln28_15_fu_931_p2;
    sc_signal< sc_lv<1> > icmp_ln28_14_fu_925_p2;
    sc_signal< sc_lv<1> > or_ln28_6_fu_919_p2;
    sc_signal< sc_lv<1> > or_ln28_7_fu_937_p2;
    sc_signal< sc_lv<1> > and_ln28_5_fu_943_p2;
    sc_signal< sc_lv<1> > and_ln28_6_fu_949_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_10_fu_964_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_11_fu_981_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_967_p4;
    sc_signal< sc_lv<23> > trunc_ln28_11_fu_977_p1;
    sc_signal< sc_lv<1> > icmp_ln28_23_fu_1004_p2;
    sc_signal< sc_lv<1> > icmp_ln28_22_fu_998_p2;
    sc_signal< sc_lv<8> > tmp_18_fu_984_p4;
    sc_signal< sc_lv<23> > trunc_ln28_12_fu_994_p1;
    sc_signal< sc_lv<1> > icmp_ln28_25_fu_1022_p2;
    sc_signal< sc_lv<1> > icmp_ln28_24_fu_1016_p2;
    sc_signal< sc_lv<1> > or_ln28_11_fu_1010_p2;
    sc_signal< sc_lv<1> > or_ln28_12_fu_1028_p2;
    sc_signal< sc_lv<1> > and_ln28_10_fu_1034_p2;
    sc_signal< sc_lv<1> > and_ln28_11_fu_1040_p2;
    sc_signal< sc_lv<32> > bitcast_ln28_12_fu_1052_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_13_fu_1069_p1;
    sc_signal< sc_lv<8> > tmp_20_fu_1055_p4;
    sc_signal< sc_lv<23> > trunc_ln28_13_fu_1065_p1;
    sc_signal< sc_lv<1> > icmp_ln28_27_fu_1093_p2;
    sc_signal< sc_lv<1> > icmp_ln28_26_fu_1087_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_1073_p4;
    sc_signal< sc_lv<23> > trunc_ln28_14_fu_1083_p1;
    sc_signal< sc_lv<1> > icmp_ln28_29_fu_1111_p2;
    sc_signal< sc_lv<1> > icmp_ln28_28_fu_1105_p2;
    sc_signal< sc_lv<1> > or_ln28_13_fu_1099_p2;
    sc_signal< sc_lv<1> > or_ln28_14_fu_1117_p2;
    sc_signal< sc_lv<1> > and_ln28_12_fu_1123_p2;
    sc_signal< sc_lv<1> > and_ln28_13_fu_1129_p2;
    sc_signal< bool > ap_block_pp0_stage1_00001;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_pp0_stage1;
    static const sc_lv<4> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_800000;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<62> ap_const_lv62_1;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_3;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln10_fu_374_p2();
    void thread_add_ln28_1_fu_456_p2();
    void thread_add_ln28_fu_440_p2();
    void thread_and_ln28_10_fu_1034_p2();
    void thread_and_ln28_11_fu_1040_p2();
    void thread_and_ln28_12_fu_1123_p2();
    void thread_and_ln28_13_fu_1129_p2();
    void thread_and_ln28_1_fu_673_p2();
    void thread_and_ln28_2_fu_679_p2();
    void thread_and_ln28_3_fu_854_p2();
    void thread_and_ln28_4_fu_860_p2();
    void thread_and_ln28_5_fu_943_p2();
    void thread_and_ln28_6_fu_949_p2();
    void thread_and_ln28_7_fu_583_p2();
    void thread_and_ln28_8_fu_764_p2();
    void thread_and_ln28_9_fu_770_p2();
    void thread_and_ln28_fu_519_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_00001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_f_0_phi_fu_301_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_290_p4();
    void thread_ap_phi_mux_r_0_phi_fu_312_p4();
    void thread_ap_ready();
    void thread_bitcast_ln28_10_fu_964_p1();
    void thread_bitcast_ln28_11_fu_981_p1();
    void thread_bitcast_ln28_12_fu_1052_p1();
    void thread_bitcast_ln28_13_fu_1069_p1();
    void thread_bitcast_ln28_1_fu_602_p1();
    void thread_bitcast_ln28_2_fu_620_p1();
    void thread_bitcast_ln28_3_fu_784_p1();
    void thread_bitcast_ln28_4_fu_801_p1();
    void thread_bitcast_ln28_5_fu_872_p1();
    void thread_bitcast_ln28_6_fu_889_p1();
    void thread_bitcast_ln28_7_fu_547_p1();
    void thread_bitcast_ln28_8_fu_693_p1();
    void thread_bitcast_ln28_9_fu_711_p1();
    void thread_bitcast_ln28_fu_483_p1();
    void thread_conv_1_out_0_address0();
    void thread_conv_1_out_0_address1();
    void thread_conv_1_out_0_ce0();
    void thread_conv_1_out_0_ce1();
    void thread_conv_1_out_1_address0();
    void thread_conv_1_out_1_address1();
    void thread_conv_1_out_1_ce0();
    void thread_conv_1_out_1_ce1();
    void thread_conv_1_out_2_address0();
    void thread_conv_1_out_2_address1();
    void thread_conv_1_out_2_ce0();
    void thread_conv_1_out_2_ce1();
    void thread_conv_1_out_3_address0();
    void thread_conv_1_out_3_address1();
    void thread_conv_1_out_3_ce0();
    void thread_conv_1_out_3_ce1();
    void thread_f_fu_380_p2();
    void thread_grp_fu_319_p1();
    void thread_grp_fu_324_p0();
    void thread_grp_fu_324_p1();
    void thread_grp_fu_329_p0();
    void thread_grp_fu_329_p1();
    void thread_grp_fu_333_p0();
    void thread_grp_fu_333_p1();
    void thread_grp_fu_337_p0();
    void thread_grp_fu_337_p3();
    void thread_grp_fu_345_p0();
    void thread_grp_fu_345_p3();
    void thread_grp_fu_352_p0();
    void thread_grp_fu_352_p3();
    void thread_grp_fu_361_p0();
    void thread_grp_fu_361_p3();
    void thread_icmp_ln10_fu_368_p2();
    void thread_icmp_ln13_fu_386_p2();
    void thread_icmp_ln28_10_fu_836_p2();
    void thread_icmp_ln28_11_fu_842_p2();
    void thread_icmp_ln28_12_fu_907_p2();
    void thread_icmp_ln28_13_fu_913_p2();
    void thread_icmp_ln28_14_fu_925_p2();
    void thread_icmp_ln28_15_fu_931_p2();
    void thread_icmp_ln28_16_fu_565_p2();
    void thread_icmp_ln28_17_fu_571_p2();
    void thread_icmp_ln28_18_fu_728_p2();
    void thread_icmp_ln28_19_fu_734_p2();
    void thread_icmp_ln28_1_fu_539_p2();
    void thread_icmp_ln28_20_fu_746_p2();
    void thread_icmp_ln28_21_fu_752_p2();
    void thread_icmp_ln28_22_fu_998_p2();
    void thread_icmp_ln28_23_fu_1004_p2();
    void thread_icmp_ln28_24_fu_1016_p2();
    void thread_icmp_ln28_25_fu_1022_p2();
    void thread_icmp_ln28_26_fu_1087_p2();
    void thread_icmp_ln28_27_fu_1093_p2();
    void thread_icmp_ln28_28_fu_1105_p2();
    void thread_icmp_ln28_29_fu_1111_p2();
    void thread_icmp_ln28_2_fu_501_p2();
    void thread_icmp_ln28_3_fu_507_p2();
    void thread_icmp_ln28_4_fu_637_p2();
    void thread_icmp_ln28_5_fu_643_p2();
    void thread_icmp_ln28_6_fu_655_p2();
    void thread_icmp_ln28_7_fu_661_p2();
    void thread_icmp_ln28_8_fu_818_p2();
    void thread_icmp_ln28_9_fu_824_p2();
    void thread_icmp_ln28_fu_475_p2();
    void thread_max_pool_1_out_0_address0();
    void thread_max_pool_1_out_0_address1();
    void thread_max_pool_1_out_0_ce0();
    void thread_max_pool_1_out_0_ce1();
    void thread_max_pool_1_out_0_d0();
    void thread_max_pool_1_out_0_d1();
    void thread_max_pool_1_out_0_we0();
    void thread_max_pool_1_out_0_we1();
    void thread_max_pool_1_out_1_address0();
    void thread_max_pool_1_out_1_address1();
    void thread_max_pool_1_out_1_ce0();
    void thread_max_pool_1_out_1_ce1();
    void thread_max_pool_1_out_1_d0();
    void thread_max_pool_1_out_1_d1();
    void thread_max_pool_1_out_1_we0();
    void thread_max_pool_1_out_1_we1();
    void thread_or_ln28_10_fu_758_p2();
    void thread_or_ln28_11_fu_1010_p2();
    void thread_or_ln28_12_fu_1028_p2();
    void thread_or_ln28_13_fu_1099_p2();
    void thread_or_ln28_14_fu_1117_p2();
    void thread_or_ln28_1_fu_513_p2();
    void thread_or_ln28_2_fu_649_p2();
    void thread_or_ln28_3_fu_667_p2();
    void thread_or_ln28_4_fu_830_p2();
    void thread_or_ln28_5_fu_848_p2();
    void thread_or_ln28_6_fu_919_p2();
    void thread_or_ln28_7_fu_937_p2();
    void thread_or_ln28_8_fu_577_p2();
    void thread_or_ln28_9_fu_740_p2();
    void thread_or_ln28_fu_533_p2();
    void thread_r_fu_597_p2();
    void thread_select_ln28_16_fu_392_p3();
    void thread_select_ln28_17_fu_400_p3();
    void thread_select_ln28_1_fu_685_p3();
    void thread_select_ln28_2_fu_865_p3();
    void thread_select_ln28_3_fu_955_p3();
    void thread_select_ln28_4_fu_589_p3();
    void thread_select_ln28_5_fu_776_p3();
    void thread_select_ln28_6_fu_1045_p3();
    void thread_select_ln28_7_fu_1135_p3();
    void thread_select_ln28_fu_525_p3();
    void thread_shl_ln28_fu_470_p2();
    void thread_tmp_10_fu_893_p4();
    void thread_tmp_12_fu_551_p4();
    void thread_tmp_14_fu_697_p4();
    void thread_tmp_15_fu_714_p4();
    void thread_tmp_17_fu_967_p4();
    void thread_tmp_18_fu_984_p4();
    void thread_tmp_20_fu_1055_p4();
    void thread_tmp_21_fu_1073_p4();
    void thread_tmp_2_fu_487_p4();
    void thread_tmp_4_fu_606_p4();
    void thread_tmp_5_fu_623_p4();
    void thread_tmp_7_fu_787_p4();
    void thread_tmp_8_fu_804_p4();
    void thread_tmp_fu_418_p3();
    void thread_tmp_s_fu_875_p4();
    void thread_trunc_ln28_10_fu_724_p1();
    void thread_trunc_ln28_11_fu_977_p1();
    void thread_trunc_ln28_12_fu_994_p1();
    void thread_trunc_ln28_13_fu_1065_p1();
    void thread_trunc_ln28_14_fu_1083_p1();
    void thread_trunc_ln28_1_fu_497_p1();
    void thread_trunc_ln28_2_fu_616_p1();
    void thread_trunc_ln28_3_fu_633_p1();
    void thread_trunc_ln28_4_fu_797_p1();
    void thread_trunc_ln28_5_fu_814_p1();
    void thread_trunc_ln28_6_fu_885_p1();
    void thread_trunc_ln28_7_fu_903_p1();
    void thread_trunc_ln28_8_fu_561_p1();
    void thread_trunc_ln28_9_fu_707_p1();
    void thread_trunc_ln28_fu_430_p1();
    void thread_zext_ln28_1_fu_434_p1();
    void thread_zext_ln28_2_fu_437_p1();
    void thread_zext_ln28_3_fu_446_p1();
    void thread_zext_ln28_4_fu_462_p1();
    void thread_zext_ln28_fu_408_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
